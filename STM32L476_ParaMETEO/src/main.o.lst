   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.message_callback,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	message_callback:
  25              	.LFB625:
  26              		.file 1 "../src/main.c"
   1:../src/main.c **** #include "station_config_target_hw.h"
   2:../src/main.c **** 
   3:../src/main.c **** #ifdef STM32F10X_MD_VL
   4:../src/main.c **** #include <stm32f10x_rcc.h>
   5:../src/main.c **** #include <stm32f10x_iwdg.h>
   6:../src/main.c **** #include <stm32f10x.h>
   7:../src/main.c **** #include <drivers/gpio_conf_stm32f1x.h>
   8:../src/main.c **** #endif
   9:../src/main.c **** 
  10:../src/main.c **** #ifdef STM32L471xx
  11:../src/main.c **** #include <stm32l4xx_hal_cortex.h>
  12:../src/main.c **** #include <stm32l4xx.h>
  13:../src/main.c **** #include <stm32l4xx_ll_iwdg.h>
  14:../src/main.c **** #include <stm32l4xx_ll_rcc.h>
  15:../src/main.c **** #include <stm32l4xx_ll_gpio.h>
  16:../src/main.c **** #endif
  17:../src/main.c **** 
  18:../src/main.c **** #include <delay.h>
  19:../src/main.c **** #include <LedConfig.h>
  20:../src/main.c **** #include <stdio.h>
  21:../src/main.c **** #include <stdlib.h>
  22:../src/main.c **** #include <string.h>
  23:../src/main.c **** 
  24:../src/main.c **** #include "main.h"
  25:../src/main.c **** #include "packet_tx_handler.h"
  26:../src/main.c **** 
  27:../src/main.c **** #include "station_config.h"
  28:../src/main.c **** #include "config_data_externs.h"
  29:../src/main.c **** #include "configuration_handler.h"
  30:../src/main.c **** 
  31:../src/main.c **** #include "diag/Trace.h"
  32:../src/main.c **** #include "antilib_adc.h"
  33:../src/main.c **** #include "afsk_pr.h"
  34:../src/main.c **** #include "TimerConfig.h"
  35:../src/main.c **** #include "PathConfig.h"
  36:../src/main.c **** #include "LedConfig.h"
  37:../src/main.c **** #include "io.h"
  38:../src/main.c **** #include "float_to_string.h"
  39:../src/main.c **** 
  40:../src/main.c **** #include "it_handlers.h"
  41:../src/main.c **** 
  42:../src/main.c **** #include "aprs/digi.h"
  43:../src/main.c **** #include "aprs/telemetry.h"
  44:../src/main.c **** #include "aprs/dac.h"
  45:../src/main.c **** #include "aprs/beacon.h"
  46:../src/main.c **** 
  47:../src/main.c **** #include "ve_direct_protocol/parser.h"
  48:../src/main.c **** 
  49:../src/main.c **** #include "rte_wx.h"
  50:../src/main.c **** #include "rte_pv.h"
  51:../src/main.c **** #include "rte_main.h"
  52:../src/main.c **** #include "rte_rtu.h"
  53:../src/main.c **** 
  54:../src/main.c **** #include <wx_handler.h>
  55:../src/main.c **** #include "drivers/dallas.h"
  56:../src/main.c **** #include "drivers/i2c.h"
  57:../src/main.c **** #include "drivers/analog_anemometer.h"
  58:../src/main.c **** #include "aprs/wx.h"
  59:../src/main.c **** 
  60:../src/main.c **** #include "../system/include/modbus_rtu/rtu_serial_io.h"
  61:../src/main.c **** 
  62:../src/main.c **** #include "../system/include/davis_vantage/davis.h"
  63:../src/main.c **** #include "../system/include/davis_vantage/davis_parsers.h"
  64:../src/main.c **** 
  65:../src/main.c **** #include "drivers/ms5611.h"
  66:../src/main.c **** #include <drivers/bme280.h>
  67:../src/main.c **** 
  68:../src/main.c **** #include "umb_master/umb_master.h"
  69:../src/main.c **** #include "umb_master/umb_channel_pool.h"
  70:../src/main.c **** #include "umb_master/umb_0x26_status.h"
  71:../src/main.c **** 
  72:../src/main.c **** #include "drivers/dallas.h"
  73:../src/main.c **** 
  74:../src/main.c **** #include "KissCommunication.h"
  75:../src/main.c **** 
  76:../src/main.c **** #define SOH 0x01
  77:../src/main.c **** 
  78:../src/main.c **** 
  79:../src/main.c **** //#define SERIAL_TX_TEST_MODE
  80:../src/main.c **** 
  81:../src/main.c **** // Niebieska dioda -> DCD
  82:../src/main.c **** // Zielona dioda -> anemometr albo TX
  83:../src/main.c **** 
  84:../src/main.c **** // backup registers
  85:../src/main.c **** // 2 -> 4bit hard-faults | 4bit boot-counter
  86:../src/main.c **** // 3 -> hard fault PC LSB
  87:../src/main.c **** // 4 -> hard fault PC MSB
  88:../src/main.c **** // 5 -> hard fault LR LSB
  89:../src/main.c **** // 6 -> hard fault LR MSB
  90:../src/main.c **** 
  91:../src/main.c **** #define CONFIG_FIRST_RESTORED 			(1)
  92:../src/main.c **** #define CONFIG_FIRST_FAIL_RESTORING	  	(1 << 1)
  93:../src/main.c **** #define CONFIG_FIRST_CRC_OK				(1 << 2)
  94:../src/main.c **** 
  95:../src/main.c **** #define CONFIG_SECOND_RESTORED 				(1 << 3)
  96:../src/main.c **** #define CONFIG_SECOND_FAIL_RESTORING	  	(1 << 4)
  97:../src/main.c **** #define CONFIG_SECOND_CRC_OK				(1 << 5)
  98:../src/main.c **** 
  99:../src/main.c **** // ----- main() ---------------------------------------------------------------
 100:../src/main.c **** 
 101:../src/main.c **** // Sample pragmas to cope with warnings. Please note the related line at
 102:../src/main.c **** // the end of this function, used to pop the compiler diagnostics status.
 103:../src/main.c **** #pragma GCC diagnostic push
 104:../src/main.c **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 105:../src/main.c **** #pragma GCC diagnostic ignored "-Wmissing-declarations"
 106:../src/main.c **** #pragma GCC diagnostic ignored "-Wreturn-type"
 107:../src/main.c **** #pragma GCC diagnostic ignored "-Wempty-body"
 108:../src/main.c **** 
 109:../src/main.c **** // used configuration structures
 110:../src/main.c **** const config_data_mode_t * main_config_data_mode = 0;
 111:../src/main.c **** const config_data_basic_t * main_config_data_basic = 0;
 112:../src/main.c **** const config_data_wx_sources_t * main_config_data_wx_sources = 0;
 113:../src/main.c **** const config_data_umb_t * main_config_data_umb = 0;
 114:../src/main.c **** const config_data_rtu_t * main_config_data_rtu = 0;
 115:../src/main.c **** 
 116:../src/main.c **** // global variable incremented by the SysTick handler to measure time in miliseconds
 117:../src/main.c **** uint32_t master_time = 0;
 118:../src/main.c **** 
 119:../src/main.c **** // this global variable stores numbers of ticks of idling CPU
 120:../src/main.c **** uint32_t main_idle_cpu_ticks = 0;
 121:../src/main.c **** 
 122:../src/main.c **** // current cpu idle ticks
 123:../src/main.c **** uint32_t main_current_cpu_idle_ticks = 0;
 124:../src/main.c **** 
 125:../src/main.c **** // approx cpu load in percents
 126:../src/main.c **** int8_t main_cpu_load = 0;
 127:../src/main.c **** 
 128:../src/main.c **** // global variable used as a timer to trigger meteo sensors mesurements
 129:../src/main.c **** int32_t main_wx_sensors_pool_timer = 65500;
 130:../src/main.c **** 
 131:../src/main.c **** // global variable used as a timer to trigger packet sending
 132:../src/main.c **** int32_t main_one_minute_pool_timer = 60000;
 133:../src/main.c **** 
 134:../src/main.c **** // one second pool interval
 135:../src/main.c **** int32_t main_one_second_pool_timer = 1000;
 136:../src/main.c **** 
 137:../src/main.c **** // two second pool interval
 138:../src/main.c **** int32_t main_two_second_pool_timer = 2000;
 139:../src/main.c **** 
 140:../src/main.c **** // ten second pool interval
 141:../src/main.c **** int32_t main_ten_second_pool_timer = 10000;
 142:../src/main.c **** 
 143:../src/main.c **** // serial context for UART used to KISS
 144:../src/main.c **** srl_context_t main_kiss_srl_ctx;
 145:../src/main.c **** 
 146:../src/main.c **** // serial context for UART used for comm with wx sensors
 147:../src/main.c **** srl_context_t main_wx_srl_ctx;
 148:../src/main.c **** 
 149:../src/main.c **** // a pointer to KISS context
 150:../src/main.c **** srl_context_t* main_kiss_srl_ctx_ptr;
 151:../src/main.c **** 
 152:../src/main.c **** // a pointer to wx comms context
 153:../src/main.c **** srl_context_t* main_wx_srl_ctx_ptr;
 154:../src/main.c **** 
 155:../src/main.c **** // target USART1 (kiss) baudrate
 156:../src/main.c **** uint32_t main_target_kiss_baudrate;
 157:../src/main.c **** 
 158:../src/main.c **** // target USART2 (wx) baudrate
 159:../src/main.c **** uint32_t main_target_wx_baudrate;
 160:../src/main.c **** 
 161:../src/main.c **** // controls if the KISS modem is enabled
 162:../src/main.c **** uint8_t main_kiss_enabled = 1;
 163:../src/main.c **** 
 164:../src/main.c **** // controls if DAVIS serialprotocol client is enabled by the configuration
 165:../src/main.c **** uint8_t main_davis_serial_enabled = 0;
 166:../src/main.c **** 
 167:../src/main.c **** uint8_t main_modbus_rtu_master_enabled = 0;
 168:../src/main.c **** 
 169:../src/main.c **** // global variables represending the AX25/APRS stack
 170:../src/main.c **** AX25Ctx main_ax25;
 171:../src/main.c **** Afsk main_afsk;
 172:../src/main.c **** 
 173:../src/main.c **** 
 174:../src/main.c **** AX25Call main_own_path[3];
 175:../src/main.c **** uint8_t main_own_path_ln = 0;
 176:../src/main.c **** uint8_t main_own_aprs_msg_len;
 177:../src/main.c **** char main_own_aprs_msg[OWN_APRS_MSG_LN];
 178:../src/main.c **** 
 179:../src/main.c **** char main_string_latitude[9];
 180:../src/main.c **** char main_string_longitude[9];
 181:../src/main.c **** 
 182:../src/main.c **** char main_symbol_f = '/';
 183:../src/main.c **** char main_symbol_s = '#';
 184:../src/main.c **** 
 185:../src/main.c **** // global variable used to store return value from various functions
 186:../src/main.c **** volatile uint8_t retval = 100;
 187:../src/main.c **** 
 188:../src/main.c **** uint16_t buffer_len = 0;
 189:../src/main.c **** 
 190:../src/main.c **** // return value from UMB related functions
 191:../src/main.c **** umb_retval_t main_umb_retval = UMB_UNINITIALIZED;
 192:../src/main.c **** 
 193:../src/main.c **** // result of CRC calculation
 194:../src/main.c **** uint32_t main_crc_result = 0;
 195:../src/main.c **** 
 196:../src/main.c **** char after_tx_lock;
 197:../src/main.c **** 
 198:../src/main.c **** unsigned short rx10m = 0, tx10m = 0, digi10m = 0, digidrop10m = 0, kiss10m = 0;
 199:../src/main.c **** 
 200:../src/main.c **** #if defined(PARAMETEO)
 201:../src/main.c **** LL_GPIO_InitTypeDef GPIO_InitTypeDef;
 202:../src/main.c **** #endif
 203:../src/main.c **** 
 204:../src/main.c **** static void message_callback(struct AX25Msg *msg) {
  27              		.loc 1 204 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 205:../src/main.c **** 
 206:../src/main.c **** }
  33              		.loc 1 206 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE625:
  38              		.section	.text.main,"ax",%progbits
  39              		.align	1
  40              		.global	main
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	main:
  47              	.LFB626:
 207:../src/main.c **** 
 208:../src/main.c **** int main(int argc, char* argv[]){
  48              		.loc 1 208 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 8
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              	.LVL1:
  53 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  54              		.cfi_def_cfa_offset 24
  55              		.cfi_offset 4, -24
  56              		.cfi_offset 5, -20
  57              		.cfi_offset 6, -16
  58              		.cfi_offset 7, -12
  59              		.cfi_offset 8, -8
  60              		.cfi_offset 14, -4
  61 0004 88B0     		sub	sp, sp, #32
  62              		.cfi_def_cfa_offset 56
 209:../src/main.c **** 
 210:../src/main.c ****   int32_t ln = 0;
  63              		.loc 1 210 0
  64 0006 0021     		movs	r1, #0
  65              	.LVL2:
  66 0008 0791     		str	r1, [sp, #28]
  67              	.LVL3:
 211:../src/main.c **** 
 212:../src/main.c ****   uint8_t button_inhibit = 0;
 213:../src/main.c **** 
 214:../src/main.c ****   memset(main_own_aprs_msg, 0x00, OWN_APRS_MSG_LN);
  68              		.loc 1 214 0
  69 000a A022     		movs	r2, #160
  70 000c 7348     		ldr	r0, .L118
  71              	.LVL4:
  72 000e FFF7FEFF 		bl	memset
  73              	.LVL5:
  74              	.LBB28:
 215:../src/main.c **** 
 216:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 217:../src/main.c ****   RCC->APB1ENR |= (RCC_APB1ENR_TIM2EN | RCC_APB1ENR_TIM3EN | RCC_APB1ENR_TIM7EN | RCC_APB1ENR_TIM4E
 218:../src/main.c ****   RCC->APB2ENR |= (RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_APB2ENR_IOPDE
 219:../src/main.c ****   RCC->AHBENR |= RCC_AHBENR_CRCEN;
 220:../src/main.c **** 
 221:../src/main.c ****   NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
 222:../src/main.c **** 
 223:../src/main.c ****   // choosing the signal source for the SysTick timer.
 224:../src/main.c ****   SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK);
 225:../src/main.c **** 
 226:../src/main.c ****   // Configuring the SysTick timer to generate interrupt 100x per second (one interrupt = 10ms)
 227:../src/main.c ****   SysTick_Config(SystemCoreClock / SYSTICK_TICKS_PER_SECONDS);
 228:../src/main.c **** 
 229:../src/main.c ****   // setting an Systick interrupt priority
 230:../src/main.c ****   NVIC_SetPriority(SysTick_IRQn, 5);
 231:../src/main.c **** 
 232:../src/main.c ****   // enable access to BKP registers
 233:../src/main.c ****   RCC->APB1ENR |= (RCC_APB1ENR_PWREN | RCC_APB1ENR_BKPEN);
 234:../src/main.c ****   PWR->CR |= PWR_CR_DBP;
 235:../src/main.c **** 
 236:../src/main.c ****   // read current number of boot cycles
 237:../src/main.c ****   rte_main_boot_cycles = (uint8_t)(BKP->DR2 & 0xFF);
 238:../src/main.c **** 
 239:../src/main.c ****   // read current number of hard faults
 240:../src/main.c ****   rte_main_hard_faults = (uint8_t)((BKP->DR2 & 0xFF00) >> 8);
 241:../src/main.c **** 
 242:../src/main.c ****   // increase boot cycles count
 243:../src/main.c ****   rte_main_boot_cycles++;
 244:../src/main.c **** 
 245:../src/main.c ****   // erasing old value from backup registers
 246:../src/main.c ****   BKP->DR2 &= (0xFFFF ^ 0xFF);
 247:../src/main.c **** 
 248:../src/main.c ****   // storing increased value
 249:../src/main.c ****   BKP->DR2 |= rte_main_boot_cycles;
 250:../src/main.c **** 
 251:../src/main.c ****   BKP->DR3 = 0;
 252:../src/main.c ****   BKP->DR4 = 0;
 253:../src/main.c ****   BKP->DR5 = 0;
 254:../src/main.c ****   BKP->DR6 = 0;
 255:../src/main.c **** #endif
 256:../src/main.c **** 
 257:../src/main.c **** #if defined(PARAMETEO)
 258:../src/main.c ****   if (SystemClock_Config() != 0) {
  75              		.loc 1 258 0
  76 0012 FFF7FEFF 		bl	SystemClock_Config
  77              	.LVL6:
  78 0016 0028     		cmp	r0, #0
  79 0018 4AD1     		bne	.L80
  80              	.L3:
  81              	.LBE28:
 259:../src/main.c **** 	  HAL_NVIC_SystemReset();
 260:../src/main.c ****   }
 261:../src/main.c **** 
 262:../src/main.c ****   SystemCoreClockUpdate();
  82              		.loc 1 262 0
  83 001a FFF7FEFF 		bl	SystemCoreClockUpdate
  84              	.LVL7:
 263:../src/main.c **** 
 264:../src/main.c ****   RCC->APB1ENR1 |= (RCC_APB1ENR1_TIM2EN | RCC_APB1ENR1_TIM3EN | RCC_APB1ENR1_TIM4EN | RCC_APB1ENR1_
  85              		.loc 1 264 0
  86 001e 704B     		ldr	r3, .L118+4
  87 0020 996D     		ldr	r1, [r3, #88]
  88 0022 704A     		ldr	r2, .L118+8
  89 0024 0A43     		orrs	r2, r2, r1
  90 0026 9A65     		str	r2, [r3, #88]
 265:../src/main.c ****   RCC->APB2ENR |= (RCC_APB2ENR_TIM1EN | RCC_APB2ENR_USART1EN);
  91              		.loc 1 265 0
  92 0028 1A6E     		ldr	r2, [r3, #96]
  93 002a 42F49042 		orr	r2, r2, #18432
  94 002e 1A66     		str	r2, [r3, #96]
 266:../src/main.c ****   RCC->AHB1ENR |= (RCC_AHB1ENR_CRCEN | RCC_AHB1ENR_DMA1EN);
  95              		.loc 1 266 0
  96 0030 9A6C     		ldr	r2, [r3, #72]
  97 0032 42F48052 		orr	r2, r2, #4096
  98 0036 42F00102 		orr	r2, r2, #1
  99 003a 9A64     		str	r2, [r3, #72]
 267:../src/main.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_ADCEN | RCC_AHB2ENR_GPIOAEN | RCC_AHB2ENR_GPIOBEN | RCC_AHB2ENR_GPIO
 100              		.loc 1 267 0
 101 003c DA6C     		ldr	r2, [r3, #76]
 102 003e 42F40052 		orr	r2, r2, #8192
 103 0042 42F00F02 		orr	r2, r2, #15
 104 0046 DA64     		str	r2, [r3, #76]
 268:../src/main.c ****   RCC->BDCR |= RCC_BDCR_RTCEN;
 105              		.loc 1 268 0
 106 0048 D3F89020 		ldr	r2, [r3, #144]
 107 004c 42F40042 		orr	r2, r2, #32768
 108 0050 C3F89020 		str	r2, [r3, #144]
 269:../src/main.c **** 
 270:../src/main.c ****   /* Set Interrupt Group Priority */
 271:../src/main.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 109              		.loc 1 271 0
 110 0054 0320     		movs	r0, #3
 111 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 112              	.LVL8:
 272:../src/main.c **** 
 273:../src/main.c ****   // set systick frequency
 274:../src/main.c ****   HAL_SYSTICK_Config(SystemCoreClock / (1000U / (uint32_t)10));
 113              		.loc 1 274 0
 114 005a 634B     		ldr	r3, .L118+12
 115 005c 1868     		ldr	r0, [r3]
 116 005e 634B     		ldr	r3, .L118+16
 117 0060 A3FB0030 		umull	r3, r0, r3, r0
 118 0064 4009     		lsrs	r0, r0, #5
 119 0066 FFF7FEFF 		bl	HAL_SYSTICK_Config
 120              	.LVL9:
 275:../src/main.c **** 
 276:../src/main.c ****   // set systick interrupt priority
 277:../src/main.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, 5, 0U);
 121              		.loc 1 277 0
 122 006a 0022     		movs	r2, #0
 123 006c 0521     		movs	r1, #5
 124 006e 4FF0FF30 		mov	r0, #-1
 125 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 126              	.LVL10:
 278:../src/main.c **** #endif
 279:../src/main.c **** 
 280:../src/main.c ****   rte_main_reboot_req = 0;
 127              		.loc 1 280 0
 128 0076 5E4B     		ldr	r3, .L118+20
 129 0078 0022     		movs	r2, #0
 130 007a 1A70     		strb	r2, [r3]
 281:../src/main.c **** 
 282:../src/main.c ****   // initializing variables & arrays in rte_wx
 283:../src/main.c ****   rte_wx_init();
 131              		.loc 1 283 0
 132 007c FFF7FEFF 		bl	rte_wx_init
 133              	.LVL11:
 284:../src/main.c ****   rte_rtu_init();
 134              		.loc 1 284 0
 135 0080 FFF7FEFF 		bl	rte_rtu_init
 136              	.LVL12:
 285:../src/main.c **** 
 286:../src/main.c ****   // calculate CRC over configuration blocks
 287:../src/main.c ****   main_crc_result = configuration_handler_check_crc();
 137              		.loc 1 287 0
 138 0084 FFF7FEFF 		bl	configuration_handler_check_crc
 139              	.LVL13:
 140 0088 5A4B     		ldr	r3, .L118+24
 141 008a 1860     		str	r0, [r3]
 288:../src/main.c **** 
 289:../src/main.c ****   // if first section has wrong CRC and it hasn't been restored before
 290:../src/main.c ****   if ((main_crc_result & 0x01) == 0 && (configuration_get_register() & CONFIG_FIRST_FAIL_RESTORING)
 142              		.loc 1 290 0
 143 008c 10F0010F 		tst	r0, #1
 144 0090 15D1     		bne	.L4
 145              		.loc 1 290 0 is_stmt 0 discriminator 1
 146 0092 FFF7FEFF 		bl	configuration_get_register
 147              	.LVL14:
 148 0096 10F0020F 		tst	r0, #2
 149 009a 10D1     		bne	.L4
 291:../src/main.c **** 	  // restore default configuration
 292:../src/main.c **** 	  if (configuration_handler_restore_default_first() == 0) {
 150              		.loc 1 292 0 is_stmt 1
 151 009c FFF7FEFF 		bl	configuration_handler_restore_default_first
 152              	.LVL15:
 153 00a0 48B9     		cbnz	r0, .L5
 293:../src/main.c **** 
 294:../src/main.c **** 		  // if configuration has been restored successfully
 295:../src/main.c **** 		  configuration_set_bits_register(CONFIG_FIRST_RESTORED);
 154              		.loc 1 295 0
 155 00a2 0120     		movs	r0, #1
 156 00a4 FFF7FEFF 		bl	configuration_set_bits_register
 157              	.LVL16:
 296:../src/main.c **** 
 297:../src/main.c **** 		  // set also CRC flag because if restoring is successfull the region has good CRC
 298:../src/main.c **** 		  configuration_set_bits_register(CONFIG_FIRST_CRC_OK);
 158              		.loc 1 298 0
 159 00a8 0420     		movs	r0, #4
 160 00aa FFF7FEFF 		bl	configuration_set_bits_register
 161              	.LVL17:
 162 00ae 0BE0     		b	.L6
 163              	.L80:
 164              	.LBB29:
 259:../src/main.c ****   }
 165              		.loc 1 259 0
 166 00b0 FFF7FEFF 		bl	HAL_NVIC_SystemReset
 167              	.LVL18:
 168 00b4 B1E7     		b	.L3
 169              	.L5:
 170              	.LBE29:
 299:../src/main.c **** 
 300:../src/main.c **** 	  }
 301:../src/main.c **** 	  else {
 302:../src/main.c **** 		  // if not store the flag in the backup register to block
 303:../src/main.c **** 		  // reinitializing once again in the consecutive restart
 304:../src/main.c **** 		  configuration_set_bits_register(CONFIG_FIRST_FAIL_RESTORING);
 171              		.loc 1 304 0
 172 00b6 0220     		movs	r0, #2
 173 00b8 FFF7FEFF 		bl	configuration_set_bits_register
 174              	.LVL19:
 175 00bc 04E0     		b	.L6
 176              	.L4:
 305:../src/main.c **** 	  }
 306:../src/main.c **** 
 307:../src/main.c **** 
 308:../src/main.c ****   }
 309:../src/main.c ****   else {
 310:../src/main.c **** 	  // if the combined confition is not met check failed restoring flag
 311:../src/main.c **** 	  if ((configuration_get_register() & CONFIG_FIRST_FAIL_RESTORING) == 0) {
 177              		.loc 1 311 0
 178 00be FFF7FEFF 		bl	configuration_get_register
 179              	.LVL20:
 180 00c2 10F0020F 		tst	r0, #2
 181 00c6 13D0     		beq	.L81
 182              	.L6:
 312:../src/main.c **** 		  // a CRC checksum is ok, so first configuration section can be used further
 313:../src/main.c **** 		  configuration_set_bits_register(CONFIG_FIRST_CRC_OK);
 314:../src/main.c **** 	  }
 315:../src/main.c **** 	  else {
 316:../src/main.c **** 		  ;
 317:../src/main.c **** 	  }
 318:../src/main.c ****   }
 319:../src/main.c **** 
 320:../src/main.c ****   // if second section has wrong CRC and it hasn't been restored before
 321:../src/main.c ****   if ((main_crc_result & 0x02) == 0 && (configuration_get_register() & CONFIG_SECOND_FAIL_RESTORING
 183              		.loc 1 321 0
 184 00c8 4A4B     		ldr	r3, .L118+24
 185 00ca 1B68     		ldr	r3, [r3]
 186 00cc 13F0020F 		tst	r3, #2
 187 00d0 19D1     		bne	.L7
 188              		.loc 1 321 0 is_stmt 0 discriminator 1
 189 00d2 FFF7FEFF 		bl	configuration_get_register
 190              	.LVL21:
 191 00d6 10F0100F 		tst	r0, #16
 192 00da 14D1     		bne	.L7
 322:../src/main.c **** 	  // restore default configuration
 323:../src/main.c **** 	  if (configuration_handler_restore_default_second() == 0) {
 193              		.loc 1 323 0 is_stmt 1
 194 00dc FFF7FEFF 		bl	configuration_handler_restore_default_second
 195              	.LVL22:
 196 00e0 50B9     		cbnz	r0, .L8
 324:../src/main.c **** 
 325:../src/main.c **** 		  // if configuration has been restored successfully
 326:../src/main.c **** 		  configuration_set_bits_register(CONFIG_SECOND_RESTORED);
 197              		.loc 1 326 0
 198 00e2 0820     		movs	r0, #8
 199 00e4 FFF7FEFF 		bl	configuration_set_bits_register
 200              	.LVL23:
 327:../src/main.c **** 
 328:../src/main.c **** 		  // set also CRC flag as if restoring is successfull the region has good CRC
 329:../src/main.c **** 		  configuration_set_bits_register(CONFIG_SECOND_CRC_OK);
 201              		.loc 1 329 0
 202 00e8 2020     		movs	r0, #32
 203 00ea FFF7FEFF 		bl	configuration_set_bits_register
 204              	.LVL24:
 205 00ee 0FE0     		b	.L9
 206              	.L81:
 313:../src/main.c **** 	  }
 207              		.loc 1 313 0
 208 00f0 0420     		movs	r0, #4
 209 00f2 FFF7FEFF 		bl	configuration_set_bits_register
 210              	.LVL25:
 211 00f6 E7E7     		b	.L6
 212              	.L8:
 330:../src/main.c **** 
 331:../src/main.c **** 	  }
 332:../src/main.c **** 	  else {
 333:../src/main.c **** 		  // if not store the flag in the backup register
 334:../src/main.c **** 		  configuration_set_bits_register(CONFIG_SECOND_FAIL_RESTORING);
 213              		.loc 1 334 0
 214 00f8 1020     		movs	r0, #16
 215 00fa FFF7FEFF 		bl	configuration_set_bits_register
 216              	.LVL26:
 335:../src/main.c **** 
 336:../src/main.c **** 		  configuration_clear_bits_register(CONFIG_SECOND_CRC_OK);
 217              		.loc 1 336 0
 218 00fe 2020     		movs	r0, #32
 219 0100 FFF7FEFF 		bl	configuration_clear_bits_register
 220              	.LVL27:
 221 0104 04E0     		b	.L9
 222              	.L7:
 337:../src/main.c **** 	  }
 338:../src/main.c **** 
 339:../src/main.c **** 
 340:../src/main.c ****   }
 341:../src/main.c ****   else {
 342:../src/main.c **** 	  // check failed restoring flag
 343:../src/main.c **** 	  if ((configuration_get_register() & CONFIG_SECOND_FAIL_RESTORING) == 0) {
 223              		.loc 1 343 0
 224 0106 FFF7FEFF 		bl	configuration_get_register
 225              	.LVL28:
 226 010a 10F0100F 		tst	r0, #16
 227 010e 13D0     		beq	.L82
 228              	.L9:
 344:../src/main.c **** 		  // second configuration section has good CRC and can be used further
 345:../src/main.c **** 		  configuration_set_bits_register(CONFIG_SECOND_CRC_OK);
 346:../src/main.c **** 	  }
 347:../src/main.c **** 	  else {
 348:../src/main.c **** 		  ;
 349:../src/main.c **** 	  }
 350:../src/main.c ****   }
 351:../src/main.c **** 
 352:../src/main.c ****   // at this point both sections have either verified CRC or restored values to default
 353:../src/main.c ****   if ((configuration_get_register() & CONFIG_FIRST_CRC_OK) != 0 && (configuration_get_register() & 
 229              		.loc 1 353 0
 230 0110 FFF7FEFF 		bl	configuration_get_register
 231              	.LVL29:
 232 0114 10F0040F 		tst	r0, #4
 233 0118 16D0     		beq	.L10
 234              		.loc 1 353 0 is_stmt 0 discriminator 1
 235 011a FFF7FEFF 		bl	configuration_get_register
 236              	.LVL30:
 237 011e 10F0200F 		tst	r0, #32
 238 0122 11D0     		beq	.L10
 354:../src/main.c **** 	  // if both sections are OK check programming counters
 355:../src/main.c **** 	  if (config_data_pgm_cntr_first > config_data_pgm_cntr_second) {
 239              		.loc 1 355 0 is_stmt 1
 240 0124 344B     		ldr	r3, .L118+28
 241 0126 1A88     		ldrh	r2, [r3]
 242 0128 344B     		ldr	r3, .L118+32
 243 012a 1B88     		ldrh	r3, [r3]
 244 012c 9A42     		cmp	r2, r3
 245 012e 07D9     		bls	.L11
 356:../src/main.c **** 		  // if first section has bigger programing counter use it
 357:../src/main.c **** 		  configuration_handler_load_configuration(REGION_FIRST);
 246              		.loc 1 357 0
 247 0130 0120     		movs	r0, #1
 248 0132 FFF7FEFF 		bl	configuration_handler_load_configuration
 249              	.LVL31:
 250 0136 26E0     		b	.L12
 251              	.L82:
 345:../src/main.c **** 	  }
 252              		.loc 1 345 0
 253 0138 2020     		movs	r0, #32
 254 013a FFF7FEFF 		bl	configuration_set_bits_register
 255              	.LVL32:
 256 013e E7E7     		b	.L9
 257              	.L11:
 358:../src/main.c **** 	  }
 359:../src/main.c **** 	  else {
 360:../src/main.c **** 		  configuration_handler_load_configuration(REGION_SECOND);
 258              		.loc 1 360 0
 259 0140 0220     		movs	r0, #2
 260 0142 FFF7FEFF 		bl	configuration_handler_load_configuration
 261              	.LVL33:
 262 0146 1EE0     		b	.L12
 263              	.L10:
 361:../src/main.c **** 
 362:../src/main.c **** 	  }
 363:../src/main.c ****   }
 364:../src/main.c ****   else if ((configuration_get_register() & CONFIG_FIRST_CRC_OK) != 0 && (configuration_get_register
 264              		.loc 1 364 0
 265 0148 FFF7FEFF 		bl	configuration_get_register
 266              	.LVL34:
 267 014c 10F0040F 		tst	r0, #4
 268 0150 08D0     		beq	.L13
 269              		.loc 1 364 0 is_stmt 0 discriminator 1
 270 0152 FFF7FEFF 		bl	configuration_get_register
 271              	.LVL35:
 272 0156 10F0200F 		tst	r0, #32
 273 015a 03D1     		bne	.L13
 365:../src/main.c **** 	  // if only first region is OK use it
 366:../src/main.c **** 	  configuration_handler_load_configuration(REGION_FIRST);
 274              		.loc 1 366 0 is_stmt 1
 275 015c 0120     		movs	r0, #1
 276 015e FFF7FEFF 		bl	configuration_handler_load_configuration
 277              	.LVL36:
 278 0162 10E0     		b	.L12
 279              	.L13:
 367:../src/main.c ****   }
 368:../src/main.c ****   else if ((configuration_get_register() & CONFIG_FIRST_CRC_OK) == 0 && (configuration_get_register
 280              		.loc 1 368 0
 281 0164 FFF7FEFF 		bl	configuration_get_register
 282              	.LVL37:
 283 0168 10F0040F 		tst	r0, #4
 284 016c 08D1     		bne	.L14
 285              		.loc 1 368 0 is_stmt 0 discriminator 1
 286 016e FFF7FEFF 		bl	configuration_get_register
 287              	.LVL38:
 288 0172 10F0200F 		tst	r0, #32
 289 0176 03D0     		beq	.L14
 369:../src/main.c **** 	  // if only first region is OK use it
 370:../src/main.c **** 	  configuration_handler_load_configuration(REGION_FIRST);
 290              		.loc 1 370 0 is_stmt 1
 291 0178 0120     		movs	r0, #1
 292 017a FFF7FEFF 		bl	configuration_handler_load_configuration
 293              	.LVL39:
 294 017e 02E0     		b	.L12
 295              	.L14:
 371:../src/main.c ****   }
 372:../src/main.c ****   else {
 373:../src/main.c **** 	  configuration_handler_load_configuration(REGION_DEFAULT);
 296              		.loc 1 373 0
 297 0180 0020     		movs	r0, #0
 298 0182 FFF7FEFF 		bl	configuration_handler_load_configuration
 299              	.LVL40:
 300              	.L12:
 374:../src/main.c ****   }
 375:../src/main.c **** 
 376:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 377:../src/main.c ****   // disabling access to BKP registers
 378:../src/main.c ****   RCC->APB1ENR &= (0xFFFFFFFF ^ (RCC_APB1ENR_PWREN | RCC_APB1ENR_BKPEN));
 379:../src/main.c ****   PWR->CR &= (0xFFFFFFFF ^ PWR_CR_DBP);
 380:../src/main.c **** #endif
 381:../src/main.c **** 
 382:../src/main.c ****   // converting latitude into string
 383:../src/main.c ****   memset(main_string_latitude, 0x00, sizeof(main_string_latitude));
 301              		.loc 1 383 0
 302 0186 1E4D     		ldr	r5, .L118+36
 303 0188 0922     		movs	r2, #9
 304 018a 0021     		movs	r1, #0
 305 018c 2846     		mov	r0, r5
 306 018e FFF7FEFF 		bl	memset
 307              	.LVL41:
 384:../src/main.c ****   float_to_string(main_config_data_basic->latitude, main_string_latitude, sizeof(main_string_latitu
 308              		.loc 1 384 0
 309 0192 1C4C     		ldr	r4, .L118+40
 310 0194 2668     		ldr	r6, [r4]
 311 0196 0223     		movs	r3, #2
 312 0198 1A46     		mov	r2, r3
 313 019a 0921     		movs	r1, #9
 314 019c 2846     		mov	r0, r5
 315 019e 96ED020A 		vldr.32	s0, [r6, #8]
 316 01a2 FFF7FEFF 		bl	float_to_string
 317              	.LVL42:
 385:../src/main.c **** 
 386:../src/main.c ****   // converting longitude into string
 387:../src/main.c ****   memset(main_string_longitude, 0x00, sizeof(main_string_longitude));
 318              		.loc 1 387 0
 319 01a6 184D     		ldr	r5, .L118+44
 320 01a8 0922     		movs	r2, #9
 321 01aa 0021     		movs	r1, #0
 322 01ac 2846     		mov	r0, r5
 323 01ae FFF7FEFF 		bl	memset
 324              	.LVL43:
 388:../src/main.c ****   float_to_string(main_config_data_basic->longitude, main_string_longitude, sizeof(main_string_long
 325              		.loc 1 388 0
 326 01b2 2668     		ldr	r6, [r4]
 327 01b4 0523     		movs	r3, #5
 328 01b6 0222     		movs	r2, #2
 329 01b8 0921     		movs	r1, #9
 330 01ba 2846     		mov	r0, r5
 331 01bc 96ED040A 		vldr.32	s0, [r6, #16]
 332 01c0 FFF7FEFF 		bl	float_to_string
 333              	.LVL44:
 389:../src/main.c **** 
 390:../src/main.c ****   switch(main_config_data_basic->symbol) {
 334              		.loc 1 390 0
 335 01c4 2368     		ldr	r3, [r4]
 336 01c6 93F89530 		ldrb	r3, [r3, #149]	@ zero_extendqisi2
 337 01ca 032B     		cmp	r3, #3
 338 01cc 00F24F81 		bhi	.L15
 339 01d0 DFE813F0 		tbh	[pc, r3, lsl #1]
 340              	.L17:
 341 01d4 1C00     		.2byte	(.L16-.L17)/2
 342 01d6 3801     		.2byte	(.L18-.L17)/2
 343 01d8 3F01     		.2byte	(.L19-.L17)/2
 344 01da 4601     		.2byte	(.L20-.L17)/2
 345              		.p2align 1
 346              	.L119:
 347              		.align	2
 348              	.L118:
 349 01dc 00000000 		.word	main_own_aprs_msg
 350 01e0 00100240 		.word	1073876992
 351 01e4 27000620 		.word	537264167
 352 01e8 00000000 		.word	SystemCoreClock
 353 01ec 1F85EB51 		.word	1374389535
 354 01f0 00000000 		.word	rte_main_reboot_req
 355 01f4 00000000 		.word	.LANCHOR0
 356 01f8 00000000 		.word	config_data_pgm_cntr_first
 357 01fc 00000000 		.word	config_data_pgm_cntr_second
 358 0200 00000000 		.word	main_string_latitude
 359 0204 00000000 		.word	.LANCHOR1
 360 0208 00000000 		.word	main_string_longitude
 361              	.L16:
 391:../src/main.c ****   case 0:		// _SYMBOL_DIGI
 392:../src/main.c **** 	  main_symbol_f = '/';
 362              		.loc 1 392 0
 363 020c 9F4B     		ldr	r3, .L120
 364 020e 2F22     		movs	r2, #47
 365 0210 1A70     		strb	r2, [r3]
 393:../src/main.c **** 	  main_symbol_s = '#';
 366              		.loc 1 393 0
 367 0212 9F4B     		ldr	r3, .L120+4
 368 0214 2322     		movs	r2, #35
 369 0216 1A70     		strb	r2, [r3]
 370              	.L21:
 394:../src/main.c **** 	  break;
 395:../src/main.c ****   case 1:		// _SYMBOL_WIDE1_DIGI
 396:../src/main.c **** 	  main_symbol_f = '1';
 397:../src/main.c **** 	  main_symbol_s = '#';
 398:../src/main.c **** 	  break;
 399:../src/main.c ****   case 2:		// _SYMBOL_HOUSE
 400:../src/main.c **** 	  main_symbol_f = '/';
 401:../src/main.c **** 	  main_symbol_s = '-';
 402:../src/main.c **** 	  break;
 403:../src/main.c ****   case 3:		// _SYMBOL_RXIGATE
 404:../src/main.c **** 	  main_symbol_f = 'I';
 405:../src/main.c **** 	  main_symbol_s = '&';
 406:../src/main.c **** 	  break;
 407:../src/main.c ****   default:		// _SYMBOL_IGATE
 408:../src/main.c **** 	  main_symbol_f = 'R';
 409:../src/main.c **** 	  main_symbol_s = '&';
 410:../src/main.c **** 	  break;
 411:../src/main.c **** 
 412:../src/main.c ****   }
 413:../src/main.c **** 
 414:../src/main.c **** #if defined _RANDOM_DELAY
 415:../src/main.c ****   // configuring a default delay value
 416:../src/main.c ****   delay_set(_DELAY_BASE, 1);
 417:../src/main.c **** #elif !defined _RANDOM_DELAY
 418:../src/main.c ****   delay_set(_DELAY_BASE, 0);
 371              		.loc 1 418 0
 372 0218 0021     		movs	r1, #0
 373 021a 1420     		movs	r0, #20
 374 021c FFF7FEFF 		bl	delay_set
 375              	.LVL45:
 419:../src/main.c **** 
 420:../src/main.c **** #endif
 421:../src/main.c **** 
 422:../src/main.c ****   // initalizing separated Open Collector output
 423:../src/main.c ****   io_oc_init();
 376              		.loc 1 423 0
 377 0220 FFF7FEFF 		bl	io_oc_init
 378              	.LVL46:
 424:../src/main.c **** 
 425:../src/main.c ****   // initialize sensor power control and switch off supply voltage
 426:../src/main.c ****   wx_pwr_init();
 379              		.loc 1 426 0
 380 0224 FFF7FEFF 		bl	wx_pwr_init
 381              	.LVL47:
 427:../src/main.c **** 
 428:../src/main.c ****   // call periodic handle to wait for 1 second and then switch on voltage
 429:../src/main.c ****   wx_pwr_periodic_handle();
 382              		.loc 1 429 0
 383 0228 FFF7FEFF 		bl	wx_pwr_periodic_handle
 384              	.LVL48:
 430:../src/main.c **** 
 431:../src/main.c ****   // waiting for 1 second to count number of ticks when the CPU is idle
 432:../src/main.c ****   main_idle_cpu_ticks = delay_fixed_with_count(1000);
 385              		.loc 1 432 0
 386 022c 4FF47A70 		mov	r0, #1000
 387 0230 FFF7FEFF 		bl	delay_fixed_with_count
 388              	.LVL49:
 389 0234 974B     		ldr	r3, .L120+8
 390 0236 1860     		str	r0, [r3]
 433:../src/main.c **** 
 434:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 435:../src/main.c **** 
 436:../src/main.c ****   // Configure I/O pins for USART1 (Kiss modem)
 437:../src/main.c ****   Configure_GPIO(GPIOA,10,PUD_INPUT);		// RX
 438:../src/main.c ****   Configure_GPIO(GPIOA,9,AFPP_OUTPUT_2MHZ);	// TX
 439:../src/main.c **** 
 440:../src/main.c ****   // Configure I/O pins for USART2 (wx meteo comm)
 441:../src/main.c ****   Configure_GPIO(GPIOA,3,PUD_INPUT);		// RX
 442:../src/main.c ****   Configure_GPIO(GPIOA,2,AFPP_OUTPUT_2MHZ);	// TX
 443:../src/main.c **** 
 444:../src/main.c **** #endif
 445:../src/main.c **** 
 446:../src/main.c **** #if defined(PARAMETEO)
 447:../src/main.c ****   	// USART1 - KISS
 448:../src/main.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_INPUT;
 391              		.loc 1 448 0
 392 0238 974C     		ldr	r4, .L120+12
 393 023a 0025     		movs	r5, #0
 394 023c 6560     		str	r5, [r4, #4]
 449:../src/main.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_10;
 395              		.loc 1 449 0
 396 023e 4FF48063 		mov	r3, #1024
 397 0242 2360     		str	r3, [r4]
 450:../src/main.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 398              		.loc 1 450 0
 399 0244 2561     		str	r5, [r4, #16]
 451:../src/main.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 400              		.loc 1 451 0
 401 0246 0126     		movs	r6, #1
 402 0248 A660     		str	r6, [r4, #8]
 452:../src/main.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_7;
 403              		.loc 1 452 0
 404 024a 0727     		movs	r7, #7
 405 024c 6761     		str	r7, [r4, #20]
 453:../src/main.c **** 	LL_GPIO_Init(GPIOA, &GPIO_InitTypeDef);		// RX
 406              		.loc 1 453 0
 407 024e 2146     		mov	r1, r4
 408 0250 4FF09040 		mov	r0, #1207959552
 409 0254 FFF7FEFF 		bl	LL_GPIO_Init
 410              	.LVL50:
 454:../src/main.c **** 
 455:../src/main.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_ALTERNATE;
 411              		.loc 1 455 0
 412 0258 4FF00208 		mov	r8, #2
 413 025c C4F80480 		str	r8, [r4, #4]
 456:../src/main.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_9;
 414              		.loc 1 456 0
 415 0260 4FF40073 		mov	r3, #512
 416 0264 2360     		str	r3, [r4]
 457:../src/main.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 417              		.loc 1 457 0
 418 0266 2561     		str	r5, [r4, #16]
 458:../src/main.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 419              		.loc 1 458 0
 420 0268 A660     		str	r6, [r4, #8]
 459:../src/main.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_7;
 421              		.loc 1 459 0
 422 026a 6761     		str	r7, [r4, #20]
 460:../src/main.c **** 	LL_GPIO_Init(GPIOA, &GPIO_InitTypeDef);		// TX
 423              		.loc 1 460 0
 424 026c 2146     		mov	r1, r4
 425 026e 4FF09040 		mov	r0, #1207959552
 426 0272 FFF7FEFF 		bl	LL_GPIO_Init
 427              	.LVL51:
 461:../src/main.c **** 
 462:../src/main.c **** 	// USART2 - METEO
 463:../src/main.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_INPUT;
 428              		.loc 1 463 0
 429 0276 6560     		str	r5, [r4, #4]
 464:../src/main.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_3;
 430              		.loc 1 464 0
 431 0278 0823     		movs	r3, #8
 432 027a 2360     		str	r3, [r4]
 465:../src/main.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 433              		.loc 1 465 0
 434 027c 2561     		str	r5, [r4, #16]
 466:../src/main.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 435              		.loc 1 466 0
 436 027e A660     		str	r6, [r4, #8]
 467:../src/main.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_7;
 437              		.loc 1 467 0
 438 0280 6761     		str	r7, [r4, #20]
 468:../src/main.c **** 	LL_GPIO_Init(GPIOA, &GPIO_InitTypeDef);		// RX
 439              		.loc 1 468 0
 440 0282 2146     		mov	r1, r4
 441 0284 4FF09040 		mov	r0, #1207959552
 442 0288 FFF7FEFF 		bl	LL_GPIO_Init
 443              	.LVL52:
 469:../src/main.c **** 
 470:../src/main.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_ALTERNATE;
 444              		.loc 1 470 0
 445 028c C4F80480 		str	r8, [r4, #4]
 471:../src/main.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_2;
 446              		.loc 1 471 0
 447 0290 4FF00408 		mov	r8, #4
 448 0294 C4F80080 		str	r8, [r4]
 472:../src/main.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 449              		.loc 1 472 0
 450 0298 2561     		str	r5, [r4, #16]
 473:../src/main.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 451              		.loc 1 473 0
 452 029a A660     		str	r6, [r4, #8]
 474:../src/main.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_7;
 453              		.loc 1 474 0
 454 029c 6761     		str	r7, [r4, #20]
 475:../src/main.c **** 	LL_GPIO_Init(GPIOA, &GPIO_InitTypeDef);		// TX
 455              		.loc 1 475 0
 456 029e 2146     		mov	r1, r4
 457 02a0 4FF09040 		mov	r0, #1207959552
 458 02a4 FFF7FEFF 		bl	LL_GPIO_Init
 459              	.LVL53:
 476:../src/main.c **** 
 477:../src/main.c **** #endif
 478:../src/main.c **** 
 479:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B)
 480:../src/main.c ****   Configure_GPIO(GPIOA,7,GPPP_OUTPUT_2MHZ);	// re/te
 481:../src/main.c ****   GPIO_ResetBits(GPIOA, GPIO_Pin_7);
 482:../src/main.c **** #endif
 483:../src/main.c **** #if defined(PARATNC_HWREV_C)
 484:../src/main.c ****   Configure_GPIO(GPIOA,8,GPPP_OUTPUT_2MHZ);	// re/te
 485:../src/main.c ****   GPIO_ResetBits(GPIOA, GPIO_Pin_8);
 486:../src/main.c **** #endif
 487:../src/main.c **** 
 488:../src/main.c **** #if defined(PARAMETEO)
 489:../src/main.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_OUTPUT;
 460              		.loc 1 489 0
 461 02a8 6660     		str	r6, [r4, #4]
 490:../src/main.c **** 	GPIO_InitTypeDef.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 462              		.loc 1 490 0
 463 02aa E560     		str	r5, [r4, #12]
 491:../src/main.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_2;
 464              		.loc 1 491 0
 465 02ac C4F80080 		str	r8, [r4]
 492:../src/main.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 466              		.loc 1 492 0
 467 02b0 2561     		str	r5, [r4, #16]
 493:../src/main.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 468              		.loc 1 493 0
 469 02b2 A660     		str	r6, [r4, #8]
 494:../src/main.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_7;
 470              		.loc 1 494 0
 471 02b4 6761     		str	r7, [r4, #20]
 495:../src/main.c **** 	LL_GPIO_Init(GPIOA, &GPIO_InitTypeDef);		// RE-TE
 472              		.loc 1 495 0
 473 02b6 2146     		mov	r1, r4
 474 02b8 4FF09040 		mov	r0, #1207959552
 475 02bc FFF7FEFF 		bl	LL_GPIO_Init
 476              	.LVL54:
 496:../src/main.c **** #endif
 497:../src/main.c **** 
 498:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 499:../src/main.c ****   // enabling the clock for both USARTs
 500:../src/main.c ****   RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 501:../src/main.c ****   RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 502:../src/main.c **** #endif
 503:../src/main.c **** 
 504:../src/main.c ****   main_kiss_srl_ctx_ptr = &main_kiss_srl_ctx;
 477              		.loc 1 504 0
 478 02c0 764B     		ldr	r3, .L120+16
 479 02c2 774A     		ldr	r2, .L120+20
 480 02c4 1A60     		str	r2, [r3]
 505:../src/main.c ****   main_wx_srl_ctx_ptr = &main_wx_srl_ctx;
 481              		.loc 1 505 0
 482 02c6 774B     		ldr	r3, .L120+24
 483 02c8 774A     		ldr	r2, .L120+28
 484 02ca 1A60     		str	r2, [r3]
 506:../src/main.c **** 
 507:../src/main.c ****   main_target_kiss_baudrate = 9600u;
 485              		.loc 1 507 0
 486 02cc 774B     		ldr	r3, .L120+32
 487 02ce 4FF41652 		mov	r2, #9600
 488 02d2 1A60     		str	r2, [r3]
 508:../src/main.c ****   main_target_wx_baudrate = _SERIAL_BAUDRATE;
 489              		.loc 1 508 0
 490 02d4 764B     		ldr	r3, .L120+36
 491 02d6 4FF49642 		mov	r2, #19200
 492 02da 1A60     		str	r2, [r3]
 509:../src/main.c **** 
 510:../src/main.c ****   // if Victron VE-direct protocol is enabled set the baudrate to the 19200u
 511:../src/main.c ****   if (main_config_data_mode->victron == 1) {
 493              		.loc 1 511 0
 494 02dc 754B     		ldr	r3, .L120+40
 495 02de 1B68     		ldr	r3, [r3]
 496 02e0 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 497 02e2 B242     		cmp	r2, r6
 498 02e4 00F0CA80 		beq	.L83
 499              	.L22:
 512:../src/main.c ****     main_target_kiss_baudrate = 19200u;
 513:../src/main.c **** 
 514:../src/main.c ****     // and disable the kiss TNC option as it shares the same port
 515:../src/main.c ****     main_kiss_enabled = 0;
 516:../src/main.c ****   }
 517:../src/main.c **** 
 518:../src/main.c **** 
 519:../src/main.c ****   if (main_config_data_mode->wx_davis == 1) {
 500              		.loc 1 519 0
 501 02e8 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 502 02ea 012A     		cmp	r2, #1
 503 02ec 00F00081 		beq	.L84
 520:../src/main.c **** 	  // reinitialize the KISS serial port temporary to davis baudrate
 521:../src/main.c **** 	  main_target_kiss_baudrate = DAVIS_DEFAULT_BAUDRATE;
 522:../src/main.c **** 
 523:../src/main.c **** 	  // reset RX state to allow reinitialization with changed baudrate
 524:../src/main.c **** 	  main_kiss_srl_ctx_ptr->srl_rx_state = SRL_RX_NOT_CONFIG;
 525:../src/main.c **** 
 526:../src/main.c **** 	  // reinitializing serial hardware to wake up Davis wx station
 527:../src/main.c **** 	  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buff
 528:../src/main.c **** 
 529:../src/main.c **** 	  srl_switch_timeout(main_kiss_srl_ctx_ptr, SRL_TIMEOUT_ENABLE, 3000);
 530:../src/main.c **** 
 531:../src/main.c **** 	  davis_init(main_kiss_srl_ctx_ptr);
 532:../src/main.c **** 
 533:../src/main.c **** 	  // try to wake up the davis base
 534:../src/main.c **** 	  rte_wx_davis_station_avaliable = (davis_wake_up(DAVIS_BLOCKING_IO) == 0 ? 1 : 0);
 535:../src/main.c **** 
 536:../src/main.c **** 	  // if davis weather stations is connected to SERIAL port
 537:../src/main.c **** 	  if (rte_wx_davis_station_avaliable == 1) {
 538:../src/main.c **** 		  // turn LCD backlight on..
 539:../src/main.c **** 		  davis_control_backlight(1);
 540:../src/main.c **** 
 541:../src/main.c **** 		  // wait for a while
 542:../src/main.c **** 		  delay_fixed(1000);
 543:../src/main.c **** 
 544:../src/main.c **** 		  // and then off to let the user know that communication is working
 545:../src/main.c **** 		  davis_control_backlight(0);
 546:../src/main.c **** 
 547:../src/main.c **** 		  // disable the KISS modem as the UART will be used for DAVIS wx station
 548:../src/main.c **** 		  main_kiss_enabled = 0;
 549:../src/main.c **** 
 550:../src/main.c **** 		  // enable the davis serial protocol client to allow pooling callbacks to be called in main loop
 551:../src/main.c **** 		  // This only controls the callback it doesn't mean that the station itself is responding to
 552:../src/main.c **** 		  // communication. It stays set to one event if Davis station
 553:../src/main.c **** 		  main_davis_serial_enabled = 1;
 554:../src/main.c **** 
 555:../src/main.c **** 		  // trigger the rxcheck to get all counter values
 556:../src/main.c **** 		  davis_trigger_rxcheck_packet();
 557:../src/main.c **** 
 558:../src/main.c **** 	  }
 559:../src/main.c **** 	  else {
 560:../src/main.c **** 		  // if not revert back to KISS configuration
 561:../src/main.c **** 		  main_target_kiss_baudrate = 9600u;
 562:../src/main.c **** 		  main_kiss_srl_ctx_ptr->srl_rx_state = SRL_RX_NOT_CONFIG;
 563:../src/main.c **** 
 564:../src/main.c **** 		  // initializing UART drvier
 565:../src/main.c **** 		  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buf
 566:../src/main.c **** 		  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffe
 567:../src/main.c **** 
 568:../src/main.c **** 	  }
 569:../src/main.c ****   }
 570:../src/main.c ****   else if (main_config_data_mode->wx_modbus == 1) {
 504              		.loc 1 570 0
 505 02f0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 506 02f2 012B     		cmp	r3, #1
 507 02f4 00F05981 		beq	.L85
 571:../src/main.c **** 
 572:../src/main.c **** 	  rtu_serial_init(&rte_rtu_pool_queue, 1, main_wx_srl_ctx_ptr, main_config_data_rtu);
 573:../src/main.c **** 
 574:../src/main.c **** 	  main_target_wx_baudrate = main_config_data_rtu->slave_speed;
 575:../src/main.c **** 
 576:../src/main.c **** 	  // initialize serial ports according to RS485 network configuration for Modbus-RTU
 577:../src/main.c **** 	  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buff
 578:../src/main.c **** 	  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffer
 579:../src/main.c **** 	  srl_switch_tx_delay(main_wx_srl_ctx_ptr, 1);
 580:../src/main.c **** 
 581:../src/main.c **** 	  // enabling rtu master code
 582:../src/main.c **** 	  main_modbus_rtu_master_enabled = 1;
 583:../src/main.c **** 
 584:../src/main.c **** 	  rtu_serial_start();
 585:../src/main.c ****   }
 586:../src/main.c ****   else {
 587:../src/main.c **** 	  // initializing UART drvier
 588:../src/main.c **** 	  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buff
 508              		.loc 1 588 0
 509 02f8 0124     		movs	r4, #1
 510 02fa 0394     		str	r4, [sp, #12]
 511 02fc 6B4B     		ldr	r3, .L120+32
 512 02fe 1B68     		ldr	r3, [r3]
 513 0300 0293     		str	r3, [sp, #8]
 514 0302 4FF40073 		mov	r3, #512
 515 0306 0193     		str	r3, [sp, #4]
 516 0308 6B4A     		ldr	r2, .L120+44
 517 030a 0092     		str	r2, [sp]
 518 030c 6B4A     		ldr	r2, .L120+48
 519 030e 6C49     		ldr	r1, .L120+52
 520 0310 6348     		ldr	r0, .L120+20
 521 0312 FFF7FEFF 		bl	srl_init
 522              	.LVL55:
 589:../src/main.c **** 	  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffer
 523              		.loc 1 589 0
 524 0316 634B     		ldr	r3, .L120+24
 525 0318 1868     		ldr	r0, [r3]
 526 031a 0394     		str	r4, [sp, #12]
 527 031c 644B     		ldr	r3, .L120+36
 528 031e 1B68     		ldr	r3, [r3]
 529 0320 0293     		str	r3, [sp, #8]
 530 0322 6023     		movs	r3, #96
 531 0324 0193     		str	r3, [sp, #4]
 532 0326 674A     		ldr	r2, .L120+56
 533 0328 0092     		str	r2, [sp]
 534 032a 674A     		ldr	r2, .L120+60
 535 032c 6749     		ldr	r1, .L120+64
 536 032e FFF7FEFF 		bl	srl_init
 537              	.LVL56:
 538              	.L25:
 590:../src/main.c ****   }
 591:../src/main.c **** 
 592:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B)
 593:../src/main.c ****   main_wx_srl_ctx_ptr->te_pin = GPIO_Pin_7;
 594:../src/main.c ****   main_wx_srl_ctx_ptr->te_port = GPIOA;
 595:../src/main.c **** #endif
 596:../src/main.c **** #if defined(PARATNC_HWREV_C)
 597:../src/main.c ****   main_wx_srl_ctx_ptr->te_pin = GPIO_Pin_8;
 598:../src/main.c ****   main_wx_srl_ctx_ptr->te_port = GPIOA;
 599:../src/main.c **** #endif
 600:../src/main.c **** #if defined(PARAMETEO)
 601:../src/main.c ****   main_wx_srl_ctx_ptr->te_pin = LL_GPIO_PIN_8;
 539              		.loc 1 601 0
 540 0332 5C4B     		ldr	r3, .L120+24
 541 0334 1B68     		ldr	r3, [r3]
 542 0336 4FF48072 		mov	r2, #256
 543 033a 1A82     		strh	r2, [r3, #16]	@ movhi
 602:../src/main.c ****   main_wx_srl_ctx_ptr->te_port = GPIOA;
 544              		.loc 1 602 0
 545 033c 4FF09042 		mov	r2, #1207959552
 546 0340 DA60     		str	r2, [r3, #12]
 603:../src/main.c **** #endif
 604:../src/main.c **** 
 605:../src/main.c ****   // initialize APRS path with zeros
 606:../src/main.c ****   memset (main_own_path, 0x00, sizeof(main_own_path));
 547              		.loc 1 606 0
 548 0342 634C     		ldr	r4, .L120+68
 549 0344 1522     		movs	r2, #21
 550 0346 0021     		movs	r1, #0
 551 0348 2046     		mov	r0, r4
 552 034a FFF7FEFF 		bl	memset
 553              	.LVL57:
 607:../src/main.c **** 
 608:../src/main.c ****   // configuring an APRS path used to transmit own packets (telemetry, wx, beacons)
 609:../src/main.c ****   main_own_path_ln = ConfigPath(main_own_path, main_config_data_basic);
 554              		.loc 1 609 0
 555 034e 614B     		ldr	r3, .L120+72
 556 0350 1968     		ldr	r1, [r3]
 557 0352 2046     		mov	r0, r4
 558 0354 FFF7FEFF 		bl	ConfigPath
 559              	.LVL58:
 560 0358 5F4B     		ldr	r3, .L120+76
 561 035a 1870     		strb	r0, [r3]
 610:../src/main.c **** 
 611:../src/main.c **** #ifdef INTERNAL_WATCHDOG
 612:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 613:../src/main.c ****   // enable write access to watchdog registers
 614:../src/main.c ****   IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);
 615:../src/main.c **** 
 616:../src/main.c ****   // Set watchdog prescaler
 617:../src/main.c ****   IWDG_SetPrescaler(IWDG_Prescaler_128);
 618:../src/main.c **** 
 619:../src/main.c ****   // Set the counter value to program watchdog for about 13 seconds
 620:../src/main.c ****   IWDG_SetReload(0xFFF);
 621:../src/main.c **** 
 622:../src/main.c ****   // enable the watchdog
 623:../src/main.c ****   IWDG_Enable();
 624:../src/main.c **** 
 625:../src/main.c ****   // do not disable the watchdog when the core is halted on a breakpoint
 626:../src/main.c ****   DBGMCU_Config(DBGMCU_IWDG_STOP, ENABLE);
 627:../src/main.c **** 
 628:../src/main.c ****   // reload watchdog counter
 629:../src/main.c ****   IWDG_ReloadCounter();
 630:../src/main.c **** #endif
 631:../src/main.c **** #endif
 632:../src/main.c **** 
 633:../src/main.c **** #ifdef _METEO
 634:../src/main.c ****   // initialize i2c controller
 635:../src/main.c ****   i2cConfigure();
 562              		.loc 1 635 0
 563 035c FFF7FEFF 		bl	i2cConfigure
 564              	.LVL59:
 636:../src/main.c **** #endif
 637:../src/main.c **** 
 638:../src/main.c ****   // initialize GPIO pins leds are connecting to
 639:../src/main.c ****   led_init();
 565              		.loc 1 639 0
 566 0360 FFF7FEFF 		bl	led_init
 567              	.LVL60:
 640:../src/main.c **** 
 641:../src/main.c ****   // initialize AX25 & APRS stuff
 642:../src/main.c ****   AFSK_Init(&main_afsk);
 568              		.loc 1 642 0
 569 0364 5D4C     		ldr	r4, .L120+80
 570 0366 2046     		mov	r0, r4
 571 0368 FFF7FEFF 		bl	AFSK_Init
 572              	.LVL61:
 643:../src/main.c ****   ax25_init(&main_ax25, &main_afsk, 0, 0x00);
 573              		.loc 1 643 0
 574 036c 0023     		movs	r3, #0
 575 036e 1A46     		mov	r2, r3
 576 0370 2146     		mov	r1, r4
 577 0372 5B48     		ldr	r0, .L120+84
 578 0374 FFF7FEFF 		bl	ax25_init
 579              	.LVL62:
 644:../src/main.c ****   DA_Init();
 580              		.loc 1 644 0
 581 0378 FFF7FEFF 		bl	DA_Init
 582              	.LVL63:
 645:../src/main.c **** 
 646:../src/main.c ****   // configure external watchdog
 647:../src/main.c ****   io_ext_watchdog_config();
 583              		.loc 1 647 0
 584 037c FFF7FEFF 		bl	io_ext_watchdog_config
 585              	.LVL64:
 648:../src/main.c **** 
 649:../src/main.c ****   // initializing the digipeater configuration
 650:../src/main.c ****   digi_init(main_config_data_mode);
 586              		.loc 1 650 0
 587 0380 4C4C     		ldr	r4, .L120+40
 588 0382 2068     		ldr	r0, [r4]
 589 0384 FFF7FEFF 		bl	digi_init
 590              	.LVL65:
 651:../src/main.c **** 
 652:../src/main.c ****   if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 591              		.loc 1 652 0
 592 0388 2368     		ldr	r3, [r4]
 593 038a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 594 038c 13F0010F 		tst	r3, #1
 595 0390 40F03E81 		bne	.L86
 596              	.L27:
 653:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 654:../src/main.c **** 	  dallas_init(GPIOC, GPIO_Pin_11, GPIO_PinSource11, &rte_wx_dallas_average);
 655:../src/main.c **** #endif
 656:../src/main.c **** 
 657:../src/main.c **** #if defined(PARAMETEO)
 658:../src/main.c **** 	  dallas_init(GPIOC, LL_GPIO_PIN_11, 0x0, &rte_wx_dallas_average);
 659:../src/main.c **** #endif
 660:../src/main.c **** 
 661:../src/main.c **** 	  if (main_config_data_mode->wx_umb == 1) {
 662:../src/main.c **** 		  // client initialization
 663:../src/main.c **** 		  umb_master_init(&rte_wx_umb_context, main_wx_srl_ctx_ptr, main_config_data_umb);
 664:../src/main.c **** 	  }
 665:../src/main.c **** 
 666:../src/main.c **** 	  if ((main_config_data_mode->wx & WX_INTERNAL_SPARKFUN_WIND) == 0) {
 667:../src/main.c **** 		  analog_anemometer_init(_ANEMOMETER_PULSES_IN_10SEC_PER_ONE_MS_OF_WINDSPEED, 38, 100, 1);
 668:../src/main.c **** 	  }
 669:../src/main.c **** 	  else {
 670:../src/main.c **** 		  analog_anemometer_init(_ANEMOMETER_PULSES_IN_10SEC_PER_ONE_MS_OF_WINDSPEED, 38, 100, 1);
 671:../src/main.c **** 	  }
 672:../src/main.c ****   }
 673:../src/main.c **** 
 674:../src/main.c ****   // configuring interrupt priorities
 675:../src/main.c ****   it_handlers_set_priorities();
 597              		.loc 1 675 0
 598 0394 FFF7FEFF 		bl	it_handlers_set_priorities
 599              	.LVL66:
 676:../src/main.c **** 
 677:../src/main.c **** 	if (main_config_data_mode->wx_ms5611_or_bme == 0) {
 600              		.loc 1 677 0
 601 0398 464B     		ldr	r3, .L120+40
 602 039a 1B68     		ldr	r3, [r3]
 603 039c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 604 039e 002B     		cmp	r3, #0
 605 03a0 00F05C81 		beq	.L87
 678:../src/main.c **** 	 ms5611_reset(&rte_wx_ms5611_qf);
 679:../src/main.c **** 	 ms5611_read_calibration(SensorCalData, &rte_wx_ms5611_qf);
 680:../src/main.c **** 	 ms5611_trigger_measure(0, 0);
 681:../src/main.c **** 	}
 682:../src/main.c **** 	else if (main_config_data_mode->wx_ms5611_or_bme == 1) {
 606              		.loc 1 682 0
 607 03a4 012B     		cmp	r3, #1
 608 03a6 00F06681 		beq	.L88
 609              	.L31:
 683:../src/main.c **** 	 bme280_reset(&rte_wx_bme280_qf);
 684:../src/main.c **** 	 bme280_setup();
 685:../src/main.c **** 	 bme280_read_calibration(bme280_calibration_data);
 686:../src/main.c **** 	}
 687:../src/main.c **** 
 688:../src/main.c ****  if (main_kiss_enabled == 1) {
 610              		.loc 1 688 0
 611 03aa 4E4B     		ldr	r3, .L120+88
 612 03ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 613 03ae 012B     		cmp	r3, #1
 614 03b0 00F06A81 		beq	.L89
 615              	.L32:
 689:../src/main.c **** 	  // preparing initial beacon which will be sent to host PC using KISS protocol via UART
 690:../src/main.c **** 	  main_own_aprs_msg_len = sprintf(main_own_aprs_msg, "=%s%c%c%s%c%c %s", main_string_latitude, mai
 691:../src/main.c **** 
 692:../src/main.c **** 	  // terminating the aprs message
 693:../src/main.c **** 	  main_own_aprs_msg[main_own_aprs_msg_len] = 0;
 694:../src/main.c **** 
 695:../src/main.c **** 	  // 'sending' the message which will only encapsulate it inside AX25 protocol (ax25_starttx is no
 696:../src/main.c **** 	  //ax25_sendVia(&main_ax25, main_own_path, (sizeof(main_own_path) / sizeof(*(main_own_path))), ma
 697:../src/main.c **** 	  ln = ax25_sendVia_toBuffer(main_own_path, (sizeof(main_own_path) / sizeof(*(main_own_path))), ma
 698:../src/main.c **** 
 699:../src/main.c **** 	  // SendKISSToHost function cleares the output buffer hence routine need to wait till the UART wi
 700:../src/main.c **** 	  // Here this could be omitted because UART isn't used before but general idea
 701:../src/main.c **** 	  while(main_kiss_srl_ctx.srl_tx_state != SRL_TX_IDLE && main_kiss_srl_ctx.srl_tx_state != SRL_TX_
 702:../src/main.c **** 
 703:../src/main.c **** 	  // converting AX25 with beacon to KISS format
 704:../src/main.c **** 	  //ln = SendKISSToHost(main_afsk.tx_buf + 1, main_afsk.tx_fifo.tail - main_afsk.tx_fifo.head - 4,
 705:../src/main.c **** 
 706:../src/main.c **** 
 707:../src/main.c **** 	  // checking if KISS-framing was done correctly
 708:../src/main.c **** 	  if (ln != KISS_TOO_LONG_FRM) {
 709:../src/main.c **** 	#ifdef SERIAL_TX_TEST_MODE
 710:../src/main.c **** 		  // infinite loop for testing UART transmission
 711:../src/main.c **** 		  for (;;) {
 712:../src/main.c **** 
 713:../src/main.c **** 			  retval = srl_receive_data(main_kiss_srl_ctx_ptr, 100, FEND, FEND, 0, 0, 0);
 714:../src/main.c **** 	#endif
 715:../src/main.c **** 			  retval = srl_start_tx(main_kiss_srl_ctx_ptr, ln);
 716:../src/main.c **** 
 717:../src/main.c **** 	#ifdef SERIAL_TX_TEST_MODE
 718:../src/main.c **** 			  while(main_kiss_srl_ctx_ptr->srl_tx_state != SRL_TX_IDLE);
 719:../src/main.c **** 	//		  while(srl_rx_state != SRL_RX_DONE);
 720:../src/main.c **** 
 721:../src/main.c **** 			  GPIOC->ODR = (GPIOC->ODR ^ GPIO_Pin_9);
 722:../src/main.c **** 
 723:../src/main.c **** 			  if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE) {
 724:../src/main.c **** 				  GPIOC->ODR = (GPIOC->ODR ^ GPIO_Pin_8);
 725:../src/main.c **** 
 726:../src/main.c **** 				  retval = 200;
 727:../src/main.c **** 			  }
 728:../src/main.c **** 		  }
 729:../src/main.c **** 	#endif
 730:../src/main.c **** 	  }
 731:../src/main.c **** 
 732:../src/main.c ****  }
 733:../src/main.c **** 
 734:../src/main.c ****   // reinitializing AFSK and AX25 driver
 735:../src/main.c ****   AFSK_Init(&main_afsk);
 616              		.loc 1 735 0
 617 03b4 494C     		ldr	r4, .L120+80
 618 03b6 2046     		mov	r0, r4
 619 03b8 FFF7FEFF 		bl	AFSK_Init
 620              	.LVL67:
 736:../src/main.c **** 
 737:../src/main.c ****   ADCStartConfig();
 621              		.loc 1 737 0
 622 03bc FFF7FEFF 		bl	ADCStartConfig
 623              	.LVL68:
 738:../src/main.c ****   DACStartConfig();
 624              		.loc 1 738 0
 625 03c0 FFF7FEFF 		bl	DACStartConfig
 626              	.LVL69:
 739:../src/main.c ****   AFSK_Init(&main_afsk);
 627              		.loc 1 739 0
 628 03c4 2046     		mov	r0, r4
 629 03c6 FFF7FEFF 		bl	AFSK_Init
 630              	.LVL70:
 740:../src/main.c ****   ax25_init(&main_ax25, &main_afsk, 0, message_callback);
 631              		.loc 1 740 0
 632 03ca 474B     		ldr	r3, .L120+92
 633 03cc 0022     		movs	r2, #0
 634 03ce 2146     		mov	r1, r4
 635 03d0 4348     		ldr	r0, .L120+84
 636 03d2 FFF7FEFF 		bl	ax25_init
 637              	.LVL71:
 741:../src/main.c **** 
 742:../src/main.c **** 	if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 638              		.loc 1 742 0
 639 03d6 374B     		ldr	r3, .L120+40
 640 03d8 1968     		ldr	r1, [r3]
 641 03da 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 642 03dc 13F0010F 		tst	r3, #1
 643 03e0 40F08B81 		bne	.L90
 644              	.L35:
 743:../src/main.c **** 	  // getting all meteo measuremenets to be sure that WX frames want be sent with zeros
 744:../src/main.c **** 	  wx_get_all_measurements(main_config_data_wx_sources, main_config_data_mode, main_config_data_umb
 745:../src/main.c **** 	}
 746:../src/main.c **** 
 747:../src/main.c ****   // start serial port i/o transaction depending on station configuration
 748:../src/main.c ****   if (main_config_data_mode->victron == 1) {
 645              		.loc 1 748 0
 646 03e4 334B     		ldr	r3, .L120+40
 647 03e6 1B68     		ldr	r3, [r3]
 648 03e8 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 649 03ea 012B     		cmp	r3, #1
 650 03ec 00F08E81 		beq	.L91
 749:../src/main.c **** 	  // initializing protocol parser
 750:../src/main.c **** 	  ve_direct_parser_init(&rte_pv_struct, &rte_pv_average);
 751:../src/main.c **** 
 752:../src/main.c **** 	  // enabling timeout handling for serial port. This is required because VE protocol frame may var
 753:../src/main.c **** 	  // and serial port driver could finish reception only either on stop character or when declared 
 754:../src/main.c **** 	  // has been received.
 755:../src/main.c **** 	  srl_switch_timeout(main_kiss_srl_ctx_ptr, 1, 50);
 756:../src/main.c **** 
 757:../src/main.c **** 	  // switching UART to receive mode to be ready for data from charging controller
 758:../src/main.c **** 	  srl_receive_data(main_kiss_srl_ctx_ptr, VE_DIRECT_MAX_FRAME_LN, 0, 0, 0, 0, 0);
 759:../src/main.c ****   }
 760:../src/main.c ****   else {
 761:../src/main.c **** 	  // switching UART to receive mode to be ready for KISS frames from host
 762:../src/main.c **** 	  srl_receive_data(main_kiss_srl_ctx_ptr, 100, FEND, FEND, 0, 0, 0);
 651              		.loc 1 762 0
 652 03f0 2A4B     		ldr	r3, .L120+16
 653 03f2 1868     		ldr	r0, [r3]
 654 03f4 0023     		movs	r3, #0
 655 03f6 0293     		str	r3, [sp, #8]
 656 03f8 0193     		str	r3, [sp, #4]
 657 03fa 0093     		str	r3, [sp]
 658 03fc 6FF03F03 		mvn	r3, #63
 659 0400 1A46     		mov	r2, r3
 660 0402 6421     		movs	r1, #100
 661 0404 FFF7FEFF 		bl	srl_receive_data
 662              	.LVL72:
 663              	.L37:
 763:../src/main.c ****   }
 764:../src/main.c **** 
 765:../src/main.c ****   io_oc_output_low();
 664              		.loc 1 765 0
 665 0408 FFF7FEFF 		bl	io_oc_output_low
 666              	.LVL73:
 667              	.LBB30:
 668              	.LBB31:
 669              		.file 2 "../include/LedConfig.h"
   1:../include/LedConfig.h **** /*
   2:../include/LedConfig.h ****  * LedConfig.h
   3:../include/LedConfig.h ****  *
   4:../include/LedConfig.h ****  *  Created on: 05.07.2017
   5:../include/LedConfig.h ****  *      Author: mateusz
   6:../include/LedConfig.h ****  */
   7:../include/LedConfig.h **** 
   8:../include/LedConfig.h **** #ifndef LEDCONFIG_H_
   9:../include/LedConfig.h **** #define LEDCONFIG_H_
  10:../include/LedConfig.h **** 
  11:../include/LedConfig.h **** // PC8 - LED1 - upper
  12:../include/LedConfig.h **** // PC9 - LED2 - lower
  13:../include/LedConfig.h **** 
  14:../include/LedConfig.h **** #ifdef STM32F10X_MD_VL
  15:../include/LedConfig.h **** #include <stm32f10x.h>
  16:../include/LedConfig.h **** #endif
  17:../include/LedConfig.h **** #ifdef STM32L471xx
  18:../include/LedConfig.h **** #include <stm32l4xx.h>
  19:../include/LedConfig.h **** #include <stm32l4xx_ll_gpio.h>
  20:../include/LedConfig.h **** #endif
  21:../include/LedConfig.h **** 
  22:../include/LedConfig.h **** #include <stdint.h>
  23:../include/LedConfig.h **** #include <stdbool.h>
  24:../include/LedConfig.h **** 
  25:../include/LedConfig.h **** #define BLINK_DURATION_MSEC 		20 * BLINK_MSEC_PER_SVC_CALL
  26:../include/LedConfig.h **** #define BLINK_MSEC_PER_SVC_CALL 	10
  27:../include/LedConfig.h **** 
  28:../include/LedConfig.h **** /* C++ detection */
  29:../include/LedConfig.h **** #ifdef __cplusplus
  30:../include/LedConfig.h **** extern "C" {
  31:../include/LedConfig.h **** #endif
  32:../include/LedConfig.h **** 
  33:../include/LedConfig.h **** extern uint8_t led_blinking_led2;
  34:../include/LedConfig.h **** extern uint8_t led_blinking_led1;
  35:../include/LedConfig.h **** 
  36:../include/LedConfig.h **** void led_config(void);
  37:../include/LedConfig.h **** void led_init(void);
  38:../include/LedConfig.h **** void led_service_blink(void);
  39:../include/LedConfig.h **** 
  40:../include/LedConfig.h **** #ifdef STM32F10X_MD_VL
  41:../include/LedConfig.h **** inline void led_control_led1_upper(bool _in) {
  42:../include/LedConfig.h **** 	if (_in == true) {
  43:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
  44:../include/LedConfig.h **** 	}
  45:../include/LedConfig.h **** 	else {
  46:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
  47:../include/LedConfig.h **** 	}
  48:../include/LedConfig.h **** }
  49:../include/LedConfig.h **** 
  50:../include/LedConfig.h **** inline void led_control_led2_bottom(bool _in) {
  51:../include/LedConfig.h **** 	if (_in == true) {
  52:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
  53:../include/LedConfig.h **** 	}
  54:../include/LedConfig.h **** 	else {
  55:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
  56:../include/LedConfig.h **** 	}
  57:../include/LedConfig.h **** }
  58:../include/LedConfig.h **** 
  59:../include/LedConfig.h **** inline void led_flip_led1_upper(void) {
  60:../include/LedConfig.h **** 	if ((GPIOC->ODR & GPIO_ODR_ODR8)  == GPIO_ODR_ODR8) {
  61:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
  62:../include/LedConfig.h **** 	}
  63:../include/LedConfig.h **** 	else {
  64:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
  65:../include/LedConfig.h **** 	}
  66:../include/LedConfig.h **** }
  67:../include/LedConfig.h **** 
  68:../include/LedConfig.h **** inline void led_flip_led2_bottom(void) {
  69:../include/LedConfig.h **** 	if ((GPIOC->ODR & GPIO_ODR_ODR9)  == GPIO_ODR_ODR9) {
  70:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
  71:../include/LedConfig.h **** 	}
  72:../include/LedConfig.h **** 	else {
  73:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
  74:../include/LedConfig.h **** 	}
  75:../include/LedConfig.h **** }
  76:../include/LedConfig.h **** 
  77:../include/LedConfig.h **** inline void led_blink_led1_upper(void) {
  78:../include/LedConfig.h **** 	led_blinking_led1 = BLINK_DURATION_MSEC;
  79:../include/LedConfig.h **** 
  80:../include/LedConfig.h **** 	led_flip_led1_upper();
  81:../include/LedConfig.h **** }
  82:../include/LedConfig.h **** 
  83:../include/LedConfig.h **** inline void led_blink_led2_botoom(void) {
  84:../include/LedConfig.h **** 	led_blinking_led2 = BLINK_DURATION_MSEC;
  85:../include/LedConfig.h **** 
  86:../include/LedConfig.h **** 	led_flip_led2_bottom();
  87:../include/LedConfig.h **** 
  88:../include/LedConfig.h **** }
  89:../include/LedConfig.h **** #endif
  90:../include/LedConfig.h **** 
  91:../include/LedConfig.h **** #ifdef STM32L471xx
  92:../include/LedConfig.h **** inline void led_control_led1_upper(bool _in) {
  93:../include/LedConfig.h **** 	if (_in == true) {
  94:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
  95:../include/LedConfig.h **** 	}
  96:../include/LedConfig.h **** 	else {
  97:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
 670              		.loc 2 97 0
 671 040c 374B     		ldr	r3, .L120+96
 672 040e 9A69     		ldr	r2, [r3, #24]
 673 0410 42F08072 		orr	r2, r2, #16777216
 674 0414 9A61     		str	r2, [r3, #24]
 675              	.LVL74:
 676              	.LBE31:
 677              	.LBE30:
 678              	.LBB32:
 679              	.LBB33:
  98:../include/LedConfig.h **** 	}
  99:../include/LedConfig.h **** }
 100:../include/LedConfig.h **** 
 101:../include/LedConfig.h **** inline void led_control_led2_bottom(bool _in) {
 102:../include/LedConfig.h **** 	if (_in == true) {
 103:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
 104:../include/LedConfig.h **** 	}
 105:../include/LedConfig.h **** 	else {
 106:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
 680              		.loc 2 106 0
 681 0416 9A69     		ldr	r2, [r3, #24]
 682 0418 42F00072 		orr	r2, r2, #33554432
 683 041c 9A61     		str	r2, [r3, #24]
 684              	.LVL75:
 685              	.LBE33:
 686              	.LBE32:
 766:../src/main.c **** 
 767:../src/main.c ****   led_control_led1_upper(false);
 768:../src/main.c ****   led_control_led2_bottom(false);
 769:../src/main.c **** 
 770:../src/main.c ****   // configuting system timers
 771:../src/main.c ****   TimerConfig();
 687              		.loc 1 771 0
 688 041e FFF7FEFF 		bl	TimerConfig
 689              	.LVL76:
 772:../src/main.c **** 
 773:../src/main.c ****   if (main_config_data_basic-> beacon_at_bootup == 1)
 690              		.loc 1 773 0
 691 0422 2C4B     		ldr	r3, .L120+72
 692 0424 1B68     		ldr	r3, [r3]
 693 0426 93F89730 		ldrb	r3, [r3, #151]	@ zero_extendqisi2
 694 042a 012B     		cmp	r3, #1
 695 042c 00F08281 		beq	.L92
 696              	.L38:
 774:../src/main.c **** 	  beacon_send_own();
 775:../src/main.c **** 
 776:../src/main.c ****   // initialize UMB transaction
 777:../src/main.c ****   if (main_config_data_mode->wx_umb == 1) {
 697              		.loc 1 777 0
 698 0430 204B     		ldr	r3, .L120+40
 699 0432 1B68     		ldr	r3, [r3]
 700 0434 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 701 0436 012B     		cmp	r3, #1
 702 0438 00F07F81 		beq	.L93
 703              	.L39:
 778:../src/main.c **** 	umb_0x26_status_request(&rte_wx_umb, &rte_wx_umb_context, main_config_data_umb);
 779:../src/main.c ****   }
 780:../src/main.c **** 
 781:../src/main.c **** #ifdef INTERNAL_WATCHDOG
 782:../src/main.c ****    // reload watchdog counter
 783:../src/main.c ****    IWDG_ReloadCounter();
 784:../src/main.c **** #endif
 785:../src/main.c **** 
 786:../src/main.c ****    io_ext_watchdog_service();
 704              		.loc 1 786 0
 705 043c FFF7FEFF 		bl	io_ext_watchdog_service
 706              	.LVL77:
 212:../src/main.c **** 
 707              		.loc 1 212 0
 708 0440 0024     		movs	r4, #0
 709 0442 E1E2     		b	.L40
 710              	.L18:
 396:../src/main.c **** 	  main_symbol_s = '#';
 711              		.loc 1 396 0
 712 0444 114B     		ldr	r3, .L120
 713 0446 3122     		movs	r2, #49
 714 0448 1A70     		strb	r2, [r3]
 397:../src/main.c **** 	  break;
 715              		.loc 1 397 0
 716 044a 114B     		ldr	r3, .L120+4
 717 044c 2322     		movs	r2, #35
 718 044e 1A70     		strb	r2, [r3]
 398:../src/main.c ****   case 2:		// _SYMBOL_HOUSE
 719              		.loc 1 398 0
 720 0450 E2E6     		b	.L21
 721              	.L19:
 400:../src/main.c **** 	  main_symbol_s = '-';
 722              		.loc 1 400 0
 723 0452 0E4B     		ldr	r3, .L120
 724 0454 2F22     		movs	r2, #47
 725 0456 1A70     		strb	r2, [r3]
 401:../src/main.c **** 	  break;
 726              		.loc 1 401 0
 727 0458 0D4B     		ldr	r3, .L120+4
 728 045a 2D22     		movs	r2, #45
 729 045c 1A70     		strb	r2, [r3]
 402:../src/main.c ****   case 3:		// _SYMBOL_RXIGATE
 730              		.loc 1 402 0
 731 045e DBE6     		b	.L21
 732              	.L20:
 404:../src/main.c **** 	  main_symbol_s = '&';
 733              		.loc 1 404 0
 734 0460 0A4B     		ldr	r3, .L120
 735 0462 4922     		movs	r2, #73
 736 0464 1A70     		strb	r2, [r3]
 405:../src/main.c **** 	  break;
 737              		.loc 1 405 0
 738 0466 0A4B     		ldr	r3, .L120+4
 739 0468 2622     		movs	r2, #38
 740 046a 1A70     		strb	r2, [r3]
 406:../src/main.c ****   default:		// _SYMBOL_IGATE
 741              		.loc 1 406 0
 742 046c D4E6     		b	.L21
 743              	.L15:
 408:../src/main.c **** 	  main_symbol_s = '&';
 744              		.loc 1 408 0
 745 046e 074B     		ldr	r3, .L120
 746 0470 5222     		movs	r2, #82
 747 0472 1A70     		strb	r2, [r3]
 409:../src/main.c **** 	  break;
 748              		.loc 1 409 0
 749 0474 064B     		ldr	r3, .L120+4
 750 0476 2622     		movs	r2, #38
 751 0478 1A70     		strb	r2, [r3]
 410:../src/main.c **** 
 752              		.loc 1 410 0
 753 047a CDE6     		b	.L21
 754              	.L83:
 512:../src/main.c **** 
 755              		.loc 1 512 0
 756 047c 0B4A     		ldr	r2, .L120+32
 757 047e 4FF49641 		mov	r1, #19200
 758 0482 1160     		str	r1, [r2]
 515:../src/main.c ****   }
 759              		.loc 1 515 0
 760 0484 174A     		ldr	r2, .L120+88
 761 0486 1570     		strb	r5, [r2]
 762 0488 2EE7     		b	.L22
 763              	.L121:
 764 048a 00BF     		.align	2
 765              	.L120:
 766 048c 00000000 		.word	.LANCHOR2
 767 0490 00000000 		.word	.LANCHOR3
 768 0494 00000000 		.word	.LANCHOR4
 769 0498 00000000 		.word	GPIO_InitTypeDef
 770 049c 00000000 		.word	main_kiss_srl_ctx_ptr
 771 04a0 00000000 		.word	main_kiss_srl_ctx
 772 04a4 00000000 		.word	main_wx_srl_ctx_ptr
 773 04a8 00000000 		.word	main_wx_srl_ctx
 774 04ac 00000000 		.word	main_target_kiss_baudrate
 775 04b0 00000000 		.word	main_target_wx_baudrate
 776 04b4 00000000 		.word	.LANCHOR5
 777 04b8 00000000 		.word	srl_usart1_tx_buffer
 778 04bc 00000000 		.word	srl_usart1_rx_buffer
 779 04c0 00380140 		.word	1073821696
 780 04c4 00000000 		.word	srl_usart2_tx_buffer
 781 04c8 00000000 		.word	srl_usart2_rx_buffer
 782 04cc 00440040 		.word	1073759232
 783 04d0 00000000 		.word	main_own_path
 784 04d4 00000000 		.word	.LANCHOR1
 785 04d8 00000000 		.word	.LANCHOR10
 786 04dc 00000000 		.word	main_afsk
 787 04e0 00000000 		.word	main_ax25
 788 04e4 00000000 		.word	.LANCHOR6
 789 04e8 00000000 		.word	message_callback
 790 04ec 00080048 		.word	1207961600
 791              	.L84:
 521:../src/main.c **** 
 792              		.loc 1 521 0
 793 04f0 4FF49643 		mov	r3, #19200
 794 04f4 9B4A     		ldr	r2, .L122
 795 04f6 1360     		str	r3, [r2]
 524:../src/main.c **** 
 796              		.loc 1 524 0
 797 04f8 9B48     		ldr	r0, .L122+4
 798 04fa 0022     		movs	r2, #0
 799 04fc 80F84420 		strb	r2, [r0, #68]
 527:../src/main.c **** 
 800              		.loc 1 527 0
 801 0500 0124     		movs	r4, #1
 802 0502 0394     		str	r4, [sp, #12]
 803 0504 0293     		str	r3, [sp, #8]
 804 0506 4FF40073 		mov	r3, #512
 805 050a 0193     		str	r3, [sp, #4]
 806 050c 974A     		ldr	r2, .L122+8
 807 050e 0092     		str	r2, [sp]
 808 0510 974A     		ldr	r2, .L122+12
 809 0512 9849     		ldr	r1, .L122+16
 810 0514 FFF7FEFF 		bl	srl_init
 811              	.LVL78:
 529:../src/main.c **** 
 812              		.loc 1 529 0
 813 0518 974D     		ldr	r5, .L122+20
 814 051a 40F6B832 		movw	r2, #3000
 815 051e 2146     		mov	r1, r4
 816 0520 2868     		ldr	r0, [r5]
 817 0522 FFF7FEFF 		bl	srl_switch_timeout
 818              	.LVL79:
 531:../src/main.c **** 
 819              		.loc 1 531 0
 820 0526 2868     		ldr	r0, [r5]
 821 0528 FFF7FEFF 		bl	davis_init
 822              	.LVL80:
 534:../src/main.c **** 
 823              		.loc 1 534 0
 824 052c 2046     		mov	r0, r4
 825 052e FFF7FEFF 		bl	davis_wake_up
 826              	.LVL81:
 827 0532 B0FA80F0 		clz	r0, r0
 828 0536 4009     		lsrs	r0, r0, #5
 829 0538 904B     		ldr	r3, .L122+24
 830 053a 1870     		strb	r0, [r3]
 537:../src/main.c **** 		  // turn LCD backlight on..
 831              		.loc 1 537 0
 832 053c 88B1     		cbz	r0, .L24
 539:../src/main.c **** 
 833              		.loc 1 539 0
 834 053e 2046     		mov	r0, r4
 835 0540 FFF7FEFF 		bl	davis_control_backlight
 836              	.LVL82:
 542:../src/main.c **** 
 837              		.loc 1 542 0
 838 0544 4FF47A70 		mov	r0, #1000
 839 0548 FFF7FEFF 		bl	delay_fixed
 840              	.LVL83:
 545:../src/main.c **** 
 841              		.loc 1 545 0
 842 054c 0020     		movs	r0, #0
 843 054e FFF7FEFF 		bl	davis_control_backlight
 844              	.LVL84:
 548:../src/main.c **** 
 845              		.loc 1 548 0
 846 0552 8B4B     		ldr	r3, .L122+28
 847 0554 0022     		movs	r2, #0
 848 0556 1A70     		strb	r2, [r3]
 553:../src/main.c **** 
 849              		.loc 1 553 0
 850 0558 8A4B     		ldr	r3, .L122+32
 851 055a 1C70     		strb	r4, [r3]
 556:../src/main.c **** 
 852              		.loc 1 556 0
 853 055c FFF7FEFF 		bl	davis_trigger_rxcheck_packet
 854              	.LVL85:
 855 0560 E7E6     		b	.L25
 856              	.L24:
 561:../src/main.c **** 		  main_kiss_srl_ctx_ptr->srl_rx_state = SRL_RX_NOT_CONFIG;
 857              		.loc 1 561 0
 858 0562 4FF41653 		mov	r3, #9600
 859 0566 7F4A     		ldr	r2, .L122
 860 0568 1360     		str	r3, [r2]
 562:../src/main.c **** 
 861              		.loc 1 562 0
 862 056a 834A     		ldr	r2, .L122+20
 863 056c 1068     		ldr	r0, [r2]
 864 056e 0022     		movs	r2, #0
 865 0570 80F84420 		strb	r2, [r0, #68]
 565:../src/main.c **** 		  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffe
 866              		.loc 1 565 0
 867 0574 0124     		movs	r4, #1
 868 0576 0394     		str	r4, [sp, #12]
 869 0578 0293     		str	r3, [sp, #8]
 870 057a 4FF40073 		mov	r3, #512
 871 057e 0193     		str	r3, [sp, #4]
 872 0580 7A4A     		ldr	r2, .L122+8
 873 0582 0092     		str	r2, [sp]
 874 0584 7A4A     		ldr	r2, .L122+12
 875 0586 7B49     		ldr	r1, .L122+16
 876 0588 FFF7FEFF 		bl	srl_init
 877              	.LVL86:
 566:../src/main.c **** 
 878              		.loc 1 566 0
 879 058c 0394     		str	r4, [sp, #12]
 880 058e 7E4B     		ldr	r3, .L122+36
 881 0590 1B68     		ldr	r3, [r3]
 882 0592 0293     		str	r3, [sp, #8]
 883 0594 6023     		movs	r3, #96
 884 0596 0193     		str	r3, [sp, #4]
 885 0598 7C4A     		ldr	r2, .L122+40
 886 059a 0092     		str	r2, [sp]
 887 059c 7C4A     		ldr	r2, .L122+44
 888 059e 7D49     		ldr	r1, .L122+48
 889 05a0 7D48     		ldr	r0, .L122+52
 890 05a2 0068     		ldr	r0, [r0]
 891 05a4 FFF7FEFF 		bl	srl_init
 892              	.LVL87:
 893 05a8 C3E6     		b	.L25
 894              	.L85:
 572:../src/main.c **** 
 895              		.loc 1 572 0
 896 05aa 7C4D     		ldr	r5, .L122+56
 897 05ac 2B68     		ldr	r3, [r5]
 898 05ae 7C4A     		ldr	r2, .L122+60
 899 05b0 0121     		movs	r1, #1
 900 05b2 7C48     		ldr	r0, .L122+64
 901 05b4 FFF7FEFF 		bl	rtu_serial_init
 902              	.LVL88:
 574:../src/main.c **** 
 903              		.loc 1 574 0
 904 05b8 2B68     		ldr	r3, [r5]
 905 05ba 1B88     		ldrh	r3, [r3]
 906 05bc 724E     		ldr	r6, .L122+36
 907 05be 3360     		str	r3, [r6]
 577:../src/main.c **** 	  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffer
 908              		.loc 1 577 0
 909 05c0 0124     		movs	r4, #1
 910 05c2 0394     		str	r4, [sp, #12]
 911 05c4 674B     		ldr	r3, .L122
 912 05c6 1B68     		ldr	r3, [r3]
 913 05c8 0293     		str	r3, [sp, #8]
 914 05ca 4FF40073 		mov	r3, #512
 915 05ce 0193     		str	r3, [sp, #4]
 916 05d0 664A     		ldr	r2, .L122+8
 917 05d2 0092     		str	r2, [sp]
 918 05d4 664A     		ldr	r2, .L122+12
 919 05d6 6749     		ldr	r1, .L122+16
 920 05d8 6748     		ldr	r0, .L122+20
 921 05da 0068     		ldr	r0, [r0]
 922 05dc FFF7FEFF 		bl	srl_init
 923              	.LVL89:
 578:../src/main.c **** 	  srl_switch_tx_delay(main_wx_srl_ctx_ptr, 1);
 924              		.loc 1 578 0
 925 05e0 2B68     		ldr	r3, [r5]
 926 05e2 6D4D     		ldr	r5, .L122+52
 927 05e4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 928 05e6 0393     		str	r3, [sp, #12]
 929 05e8 3368     		ldr	r3, [r6]
 930 05ea 0293     		str	r3, [sp, #8]
 931 05ec 6023     		movs	r3, #96
 932 05ee 0193     		str	r3, [sp, #4]
 933 05f0 664A     		ldr	r2, .L122+40
 934 05f2 0092     		str	r2, [sp]
 935 05f4 664A     		ldr	r2, .L122+44
 936 05f6 6749     		ldr	r1, .L122+48
 937 05f8 2868     		ldr	r0, [r5]
 938 05fa FFF7FEFF 		bl	srl_init
 939              	.LVL90:
 579:../src/main.c **** 
 940              		.loc 1 579 0
 941 05fe 2146     		mov	r1, r4
 942 0600 2868     		ldr	r0, [r5]
 943 0602 FFF7FEFF 		bl	srl_switch_tx_delay
 944              	.LVL91:
 582:../src/main.c **** 
 945              		.loc 1 582 0
 946 0606 684B     		ldr	r3, .L122+68
 947 0608 1C70     		strb	r4, [r3]
 584:../src/main.c ****   }
 948              		.loc 1 584 0
 949 060a FFF7FEFF 		bl	rtu_serial_start
 950              	.LVL92:
 951 060e 90E6     		b	.L25
 952              	.L86:
 658:../src/main.c **** #endif
 953              		.loc 1 658 0
 954 0610 664B     		ldr	r3, .L122+72
 955 0612 0022     		movs	r2, #0
 956 0614 4FF40061 		mov	r1, #2048
 957 0618 6548     		ldr	r0, .L122+76
 958 061a FFF7FEFF 		bl	dallas_init
 959              	.LVL93:
 661:../src/main.c **** 		  // client initialization
 960              		.loc 1 661 0
 961 061e 2368     		ldr	r3, [r4]
 962 0620 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 963 0622 012B     		cmp	r3, #1
 964 0624 06D1     		bne	.L28
 663:../src/main.c **** 	  }
 965              		.loc 1 663 0
 966 0626 634B     		ldr	r3, .L122+80
 967 0628 1A68     		ldr	r2, [r3]
 968 062a 5B4B     		ldr	r3, .L122+52
 969 062c 1968     		ldr	r1, [r3]
 970 062e 6248     		ldr	r0, .L122+84
 971 0630 FFF7FEFF 		bl	umb_master_init
 972              	.LVL94:
 973              	.L28:
 666:../src/main.c **** 		  analog_anemometer_init(_ANEMOMETER_PULSES_IN_10SEC_PER_ONE_MS_OF_WINDSPEED, 38, 100, 1);
 974              		.loc 1 666 0
 975 0634 614B     		ldr	r3, .L122+88
 976 0636 1B68     		ldr	r3, [r3]
 977 0638 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 978 063a 13F0040F 		tst	r3, #4
 979 063e 06D1     		bne	.L29
 667:../src/main.c **** 	  }
 980              		.loc 1 667 0
 981 0640 0123     		movs	r3, #1
 982 0642 6422     		movs	r2, #100
 983 0644 2621     		movs	r1, #38
 984 0646 0A20     		movs	r0, #10
 985 0648 FFF7FEFF 		bl	analog_anemometer_init
 986              	.LVL95:
 987 064c A2E6     		b	.L27
 988              	.L29:
 670:../src/main.c **** 	  }
 989              		.loc 1 670 0
 990 064e 0123     		movs	r3, #1
 991 0650 6422     		movs	r2, #100
 992 0652 2621     		movs	r1, #38
 993 0654 0A20     		movs	r0, #10
 994 0656 FFF7FEFF 		bl	analog_anemometer_init
 995              	.LVL96:
 996 065a 9BE6     		b	.L27
 997              	.L87:
 678:../src/main.c **** 	 ms5611_read_calibration(SensorCalData, &rte_wx_ms5611_qf);
 998              		.loc 1 678 0
 999 065c 584C     		ldr	r4, .L122+92
 1000 065e 2046     		mov	r0, r4
 1001 0660 FFF7FEFF 		bl	ms5611_reset
 1002              	.LVL97:
 679:../src/main.c **** 	 ms5611_trigger_measure(0, 0);
 1003              		.loc 1 679 0
 1004 0664 2146     		mov	r1, r4
 1005 0666 5748     		ldr	r0, .L122+96
 1006 0668 FFF7FEFF 		bl	ms5611_read_calibration
 1007              	.LVL98:
 680:../src/main.c **** 	}
 1008              		.loc 1 680 0
 1009 066c 0021     		movs	r1, #0
 1010 066e 0846     		mov	r0, r1
 1011 0670 FFF7FEFF 		bl	ms5611_trigger_measure
 1012              	.LVL99:
 1013 0674 99E6     		b	.L31
 1014              	.L88:
 683:../src/main.c **** 	 bme280_setup();
 1015              		.loc 1 683 0
 1016 0676 5448     		ldr	r0, .L122+100
 1017 0678 FFF7FEFF 		bl	bme280_reset
 1018              	.LVL100:
 684:../src/main.c **** 	 bme280_read_calibration(bme280_calibration_data);
 1019              		.loc 1 684 0
 1020 067c FFF7FEFF 		bl	bme280_setup
 1021              	.LVL101:
 685:../src/main.c **** 	}
 1022              		.loc 1 685 0
 1023 0680 5248     		ldr	r0, .L122+104
 1024 0682 FFF7FEFF 		bl	bme280_read_calibration
 1025              	.LVL102:
 1026 0686 90E6     		b	.L31
 1027              	.L89:
 690:../src/main.c **** 
 1028              		.loc 1 690 0
 1029 0688 514B     		ldr	r3, .L122+108
 1030 068a 1A68     		ldr	r2, [r3]
 1031 068c 92F90C30 		ldrsb	r3, [r2, #12]
 1032 0690 92F91410 		ldrsb	r1, [r2, #20]
 1033 0694 1532     		adds	r2, r2, #21
 1034 0696 4F4C     		ldr	r4, .L122+112
 1035 0698 0492     		str	r2, [sp, #16]
 1036 069a 4F4A     		ldr	r2, .L122+116
 1037 069c 92F90020 		ldrsb	r2, [r2]
 1038 06a0 0392     		str	r2, [sp, #12]
 1039 06a2 0291     		str	r1, [sp, #8]
 1040 06a4 4D4A     		ldr	r2, .L122+120
 1041 06a6 0192     		str	r2, [sp, #4]
 1042 06a8 4D4A     		ldr	r2, .L122+124
 1043 06aa 92F90020 		ldrsb	r2, [r2]
 1044 06ae 0092     		str	r2, [sp]
 1045 06b0 4C4A     		ldr	r2, .L122+128
 1046 06b2 4D49     		ldr	r1, .L122+132
 1047 06b4 2046     		mov	r0, r4
 1048 06b6 FFF7FEFF 		bl	sprintf
 1049              	.LVL103:
 1050 06ba C3B2     		uxtb	r3, r0
 1051 06bc 4B4A     		ldr	r2, .L122+136
 1052 06be 1370     		strb	r3, [r2]
 693:../src/main.c **** 
 1053              		.loc 1 693 0
 1054 06c0 0022     		movs	r2, #0
 1055 06c2 E254     		strb	r2, [r4, r3]
 697:../src/main.c **** 
 1056              		.loc 1 697 0
 1057 06c4 4FF40072 		mov	r2, #512
 1058 06c8 0192     		str	r2, [sp, #4]
 1059 06ca 274A     		ldr	r2, .L122+4
 1060 06cc 5269     		ldr	r2, [r2, #20]
 1061 06ce 0092     		str	r2, [sp]
 1062 06d0 2246     		mov	r2, r4
 1063 06d2 0321     		movs	r1, #3
 1064 06d4 4648     		ldr	r0, .L122+140
 1065 06d6 FFF7FEFF 		bl	ax25_sendVia_toBuffer
 1066              	.LVL104:
 1067 06da 0790     		str	r0, [sp, #28]
 1068              	.L34:
 701:../src/main.c **** 
 1069              		.loc 1 701 0 discriminator 2
 1070 06dc 224B     		ldr	r3, .L122+4
 1071 06de 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1072 06e2 012B     		cmp	r3, #1
 1073 06e4 01D0     		beq	.L33
 701:../src/main.c **** 
 1074              		.loc 1 701 0 is_stmt 0 discriminator 1
 1075 06e6 042B     		cmp	r3, #4
 1076 06e8 F8D1     		bne	.L34
 1077              	.L33:
 715:../src/main.c **** 
 1078              		.loc 1 715 0 is_stmt 1
 1079 06ea 01B2     		sxth	r1, r0
 1080 06ec 224B     		ldr	r3, .L122+20
 1081 06ee 1868     		ldr	r0, [r3]
 1082 06f0 FFF7FEFF 		bl	srl_start_tx
 1083              	.LVL105:
 1084 06f4 3F4B     		ldr	r3, .L122+144
 1085 06f6 1870     		strb	r0, [r3]
 1086 06f8 5CE6     		b	.L32
 1087              	.L90:
 744:../src/main.c **** 	}
 1088              		.loc 1 744 0
 1089 06fa 284B     		ldr	r3, .L122+56
 1090 06fc 1B68     		ldr	r3, [r3]
 1091 06fe 2D4A     		ldr	r2, .L122+80
 1092 0700 1268     		ldr	r2, [r2]
 1093 0702 3D48     		ldr	r0, .L122+148
 1094 0704 0068     		ldr	r0, [r0]
 1095 0706 FFF7FEFF 		bl	wx_get_all_measurements
 1096              	.LVL106:
 1097 070a 6BE6     		b	.L35
 1098              	.L91:
 750:../src/main.c **** 
 1099              		.loc 1 750 0
 1100 070c 3B49     		ldr	r1, .L122+152
 1101 070e 3C48     		ldr	r0, .L122+156
 1102 0710 FFF7FEFF 		bl	ve_direct_parser_init
 1103              	.LVL107:
 755:../src/main.c **** 
 1104              		.loc 1 755 0
 1105 0714 184C     		ldr	r4, .L122+20
 1106 0716 3222     		movs	r2, #50
 1107 0718 0121     		movs	r1, #1
 1108 071a 2068     		ldr	r0, [r4]
 1109 071c FFF7FEFF 		bl	srl_switch_timeout
 1110              	.LVL108:
 758:../src/main.c ****   }
 1111              		.loc 1 758 0
 1112 0720 0022     		movs	r2, #0
 1113 0722 0292     		str	r2, [sp, #8]
 1114 0724 0192     		str	r2, [sp, #4]
 1115 0726 0092     		str	r2, [sp]
 1116 0728 1346     		mov	r3, r2
 1117 072a BA21     		movs	r1, #186
 1118 072c 2068     		ldr	r0, [r4]
 1119 072e FFF7FEFF 		bl	srl_receive_data
 1120              	.LVL109:
 1121 0732 69E6     		b	.L37
 1122              	.L92:
 774:../src/main.c **** 
 1123              		.loc 1 774 0
 1124 0734 FFF7FEFF 		bl	beacon_send_own
 1125              	.LVL110:
 1126 0738 7AE6     		b	.L38
 1127              	.L93:
 778:../src/main.c ****   }
 1128              		.loc 1 778 0
 1129 073a 1E4B     		ldr	r3, .L122+80
 1130 073c 1A68     		ldr	r2, [r3]
 1131 073e 1E49     		ldr	r1, .L122+84
 1132 0740 3048     		ldr	r0, .L122+160
 1133 0742 FFF7FEFF 		bl	umb_0x26_status_request
 1134              	.LVL111:
 1135 0746 79E6     		b	.L39
 1136              	.LVL112:
 1137              	.L113:
 1138              	.LBB34:
 1139              	.LBB35:
 1140              	.LBB36:
 1141              	.LBB37:
 1142              		.file 3 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h"
   1:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**************************************************************************//**
   2:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @version  V5.2.0
   5:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @date     08. May 2019
   6:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  ******************************************************************************/
   7:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*
   8:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  10:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  12:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  16:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  18:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * limitations under the License.
  23:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
  24:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  25:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  28:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  34:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __has_builtin
  36:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  38:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  39:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ASM
  41:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  43:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __INLINE
  44:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  46:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  49:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif                                           
  52:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  55:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __USED
  56:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  58:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __WEAK
  59:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  61:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED
  62:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  64:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  67:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  70:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  78:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  86:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  94:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 102:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 110:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 113:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 116:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 119:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 120:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 122:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 124:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 125:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            in the used linker script.
 129:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 130:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 131:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 133:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 135:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 136:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t const* src;
 137:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 138:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 139:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __copy_table_t;
 140:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 141:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 142:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 143:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 144:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __zero_table_t;
 145:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 146:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 151:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 155:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 156:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 157:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 161:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 162:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 163:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   _start();
 164:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 165:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 166:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 168:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 169:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 172:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 173:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 176:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 177:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 180:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 181:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 184:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 185:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 189:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 190:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 191:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 192:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 196:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 198:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 200:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 201:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 202:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 203:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 207:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 209:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 211:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 212:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 213:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 214:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register
 215:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Control Register value
 217:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 218:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 220:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 221:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 222:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 224:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 225:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 226:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 227:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 229:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 233:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 235:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 236:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 237:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 239:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 240:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 241:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 242:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 243:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 244:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register
 245:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 248:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 250:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 252:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 253:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 254:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 256:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 260:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 262:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 264:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 265:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 266:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 267:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 268:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               IPSR Register value
 271:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 272:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 274:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 275:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 276:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 278:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 279:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 280:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 281:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 282:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get APSR Register
 283:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               APSR Register value
 285:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 286:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 288:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 289:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 290:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 292:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 293:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 294:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 295:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 296:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               xPSR Register value
 299:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 300:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 302:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 303:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 304:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 306:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 307:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 308:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 309:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 310:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 313:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 314:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 316:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 317:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 318:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 320:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 321:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 322:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 323:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 325:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 328:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 329:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 331:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 332:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 333:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 335:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 336:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 337:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 338:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 339:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 340:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 344:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 346:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 348:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 349:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 350:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 352:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 356:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 358:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 360:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 361:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 362:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 363:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 364:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 367:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 368:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 370:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 371:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 372:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 374:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 375:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 376:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 377:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 379:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 382:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 383:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 385:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 386:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 387:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 389:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 390:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 391:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 392:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 393:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 394:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 398:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 400:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 402:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 403:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 404:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 406:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 410:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 412:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 414:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 415:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 416:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 417:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 419:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               SP Register value
 422:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 423:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 425:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 426:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 427:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 429:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 430:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 431:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 432:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 433:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 437:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 439:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 441:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 442:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 443:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 444:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 445:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 448:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 449:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 451:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 452:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 453:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 455:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 456:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 457:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 458:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 460:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 463:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 464:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 466:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 467:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 468:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 470:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 471:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 472:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 473:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 474:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 475:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 479:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 481:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 483:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 484:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 485:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 487:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 491:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 493:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 495:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 496:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 497:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 498:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 502:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable FIQ
 503:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 506:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 508:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 510:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 511:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 512:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 513:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable FIQ
 514:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 517:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 519:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 521:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 522:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 523:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 524:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority
 525:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 527:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 528:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 530:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 531:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 532:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 534:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 535:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 536:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 537:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 539:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 542:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 543:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 545:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 546:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 547:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 549:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 550:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 551:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 552:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 553:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 554:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority
 555:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 558:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 560:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 562:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 563:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 564:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 566:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 570:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 572:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 574:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 575:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 576:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 577:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 578:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 583:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 585:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 587:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 588:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 589:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 590:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 593:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 594:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 596:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 597:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 598:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 600:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 601:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 602:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 603:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 605:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 608:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 609:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 611:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 612:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 613:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 615:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 616:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 617:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 618:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 619:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 620:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 624:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 626:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 628:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 629:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 630:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 632:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 636:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 638:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 640:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 641:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 642:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 646:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 647:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 650:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 651:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 655:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 656:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 659:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 661:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 665:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 666:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 667:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 669:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 670:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 671:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 672:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 674:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 678:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 681:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 683:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 686:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 687:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 688:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 690:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 691:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 692:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 693:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 694:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 695:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 696:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 700:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 701:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 704:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 706:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 711:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 713:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 714:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 715:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 716:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 718:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 722:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 725:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 727:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 731:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 733:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 734:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 735:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 736:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 737:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 738:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 742:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 743:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 746:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 748:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 752:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 753:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 754:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 756:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 757:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 758:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 759:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 760:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 762:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 766:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 769:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 771:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 774:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 775:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 776:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 778:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 779:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 780:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 781:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 782:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 783:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 784:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 788:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 789:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 792:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 794:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 799:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 801:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 802:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 803:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 804:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 806:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 810:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 813:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 815:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 819:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 821:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 822:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 823:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 824:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 827:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 828:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 829:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get FPSCR
 830:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 833:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 835:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 843:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 844:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 845:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 847:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 848:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 849:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(0U);
 850:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 851:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 852:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 853:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 854:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 855:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set FPSCR
 856:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 859:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 861:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 869:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 871:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 872:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)fpscr;
 873:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 874:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 875:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 876:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 877:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 879:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 880:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Access to dedicated instructions
 883:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 884:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** */
 885:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 886:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 894:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 898:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 899:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 900:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   No Operation
 901:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 903:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 905:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 906:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 909:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 911:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 912:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 913:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Event
 914:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 917:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 919:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 920:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 921:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Send Event
 922:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 924:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 926:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 927:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 928:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            after the instruction has been completed.
 932:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 933:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 935:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 937:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 938:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 939:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 940:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 944:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 946:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1143              		.loc 3 946 0
 1144              		.syntax unified
 1145              	@ 946 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 1146 0748 BFF34F8F 		dsb 0xF
 1147              	@ 0 "" 2
 1148              		.thumb
 1149              		.syntax unified
 1150              	.LBE37:
 1151              	.LBE36:
 1152              		.file 4 "../system/include/cmsis/stm32l4xx/core_cm4.h"
   1:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**************************************************************************//**
   2:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @file     core_cm4.h
   3:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @version  V5.1.0
   5:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @date     13. March 2019
   6:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
   7:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*
   8:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  10:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  12:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * not use this file except in compliance with the License.
  14:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * You may obtain a copy of the License at
  15:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  16:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  18:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * limitations under the License.
  23:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  24:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  25:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined (__clang__)
  28:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
  30:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  31:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  34:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include <stdint.h>
  35:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  36:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
  37:../system/include/cmsis/stm32l4xx/core_cm4.h ****  extern "C" {
  38:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
  39:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  40:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
  41:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../system/include/cmsis/stm32l4xx/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  44:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  47:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  50:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  53:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  54:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  55:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
  56:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                 CMSIS definitions
  57:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
  58:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
  59:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup Cortex_M4
  60:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
  61:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  62:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  63:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include "cmsis_version.h"
  64:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  65:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* CMSIS CM4 definitions */
  66:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:../system/include/cmsis/stm32l4xx/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  71:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  73:../system/include/cmsis/stm32l4xx/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../system/include/cmsis/stm32l4xx/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
  76:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined ( __CC_ARM )
  77:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
  80:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
  81:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
  83:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
  84:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
  85:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
  86:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
  87:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  88:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __ARM_FP
  90:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
  92:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
  93:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
  95:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
  96:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
  97:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
  98:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
  99:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 100:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __GNUC__ )
 101:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 104:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 105:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 107:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 108:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 109:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 110:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 111:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 112:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __ARMVFP__
 114:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 116:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 117:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 119:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 120:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 121:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 122:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 123:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 124:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 128:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 129:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 131:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 132:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 133:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 134:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 135:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 136:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __TASKING__ )
 137:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __FPU_VFP__
 138:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 140:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 141:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 143:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 144:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 145:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 146:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 147:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 148:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __CSMC__ )
 149:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 152:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 153:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 155:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 156:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 157:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 158:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 159:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 160:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 161:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 162:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 164:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 165:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 166:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
 167:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 168:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 169:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 171:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 173:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 176:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 177:../system/include/cmsis/stm32l4xx/core_cm4.h ****  extern "C" {
 178:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 179:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 180:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* check device defines and use defaults */
 181:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __CM4_REV
 183:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 186:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 187:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 191:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 192:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 196:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 197:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 201:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 202:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 206:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 207:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 208:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 210:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 212:../system/include/cmsis/stm32l4xx/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
 216:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 217:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
 219:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 221:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 224:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* following defines should be used for structure members */
 225:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 229:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 231:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 232:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 233:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
 234:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                 Register Abstraction
 235:../system/include/cmsis/stm32l4xx/core_cm4.h ****   Core Register contain:
 236:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Register
 237:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core NVIC Register
 238:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SCB Register
 239:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SysTick Register
 240:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Debug Register
 241:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core MPU Register
 242:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core FPU Register
 243:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
 244:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 245:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
 248:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 249:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 250:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Core Register type definitions.
 253:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 254:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 255:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 256:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 257:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 259:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 260:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 261:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 262:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 263:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:../system/include/cmsis/stm32l4xx/core_cm4.h **** } APSR_Type;
 274:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 275:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* APSR Register Definitions */
 276:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 279:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 282:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 285:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 288:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 291:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 294:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 295:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 296:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 298:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 299:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 300:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 301:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 302:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../system/include/cmsis/stm32l4xx/core_cm4.h **** } IPSR_Type;
 307:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 308:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* IPSR Register Definitions */
 309:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 312:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 313:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 314:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 316:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 317:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 318:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 319:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 320:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:../system/include/cmsis/stm32l4xx/core_cm4.h **** } xPSR_Type;
 335:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 336:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* xPSR Register Definitions */
 337:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 340:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 343:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 346:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 349:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 352:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 355:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 358:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 361:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 364:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 367:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 368:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 369:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 371:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 372:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 373:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 374:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 375:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:../system/include/cmsis/stm32l4xx/core_cm4.h **** } CONTROL_Type;
 382:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 383:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* CONTROL Register Definitions */
 384:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 387:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 390:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 393:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 395:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 396:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 397:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 401:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 402:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 403:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 404:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 406:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 407:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 408:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:../system/include/cmsis/stm32l4xx/core_cm4.h **** }  NVIC_Type;
 422:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 423:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 427:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 429:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 430:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 431:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 435:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 436:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 437:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 438:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 440:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 441:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 442:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SCB_Type;
 464:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 465:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 469:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 472:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 475:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 478:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 481:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 485:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 488:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 491:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 494:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 497:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 500:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 503:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 506:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 509:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 512:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 516:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 520:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 523:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 526:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 529:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 532:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 535:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 538:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB System Control Register Definitions */
 539:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 542:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 545:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 548:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 552:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 555:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 558:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 561:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 564:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 567:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 571:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 574:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 577:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 580:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 583:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 586:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 589:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 592:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 595:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 598:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 601:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 604:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 607:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 610:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 614:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 617:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 620:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 624:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 627:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 630:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 633:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 636:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 639:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 643:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 646:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 649:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 652:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 655:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 658:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 661:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 665:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 668:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 671:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 674:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 677:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 680:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 684:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 687:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 690:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 694:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 697:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 700:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 703:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 706:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 708:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 709:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 710:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 714:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 715:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 716:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 717:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 719:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 720:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 721:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SCnSCB_Type;
 725:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 726:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 730:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 734:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 737:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 740:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 743:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 746:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 748:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 749:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 750:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 754:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 755:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 756:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 757:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 759:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 760:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 761:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SysTick_Type;
 766:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 767:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 771:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 774:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 777:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 780:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 784:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Current Register Definitions */
 785:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 788:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 792:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 795:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 798:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 800:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 801:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 802:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 806:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 807:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 808:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 809:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 811:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 812:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 813:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  union
 814:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 815:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[6U];
 830:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:../system/include/cmsis/stm32l4xx/core_cm4.h **** } ITM_Type;
 843:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 844:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 848:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 852:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 855:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 858:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 861:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 864:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 867:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 870:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 873:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 876:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 880:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 883:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 886:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 888:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 889:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 890:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 894:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 895:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 896:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 897:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 899:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 900:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 901:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:../system/include/cmsis/stm32l4xx/core_cm4.h **** } DWT_Type;
 925:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 926:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Control Register Definitions */
 927:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 930:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 933:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 936:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 939:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 942:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 945:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 948:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 951:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 954:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 957:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 960:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 963:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 966:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 969:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 972:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 975:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 978:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 981:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 985:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 989:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 993:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 997:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1001:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1005:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1009:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1012:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1015:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1018:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1021:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1024:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1027:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1030:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1033:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1035:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1036:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1037:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1041:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1042:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1043:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1044:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1046:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1047:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1048:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:../system/include/cmsis/stm32l4xx/core_cm4.h **** } TPI_Type;
1073:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1074:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1078:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1082:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1086:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1089:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1092:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1095:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1099:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1102:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1106:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1110:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1113:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1116:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1119:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1122:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1125:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1128:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1132:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1135:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1139:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1142:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1145:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1148:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1151:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1154:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1157:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1161:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1164:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1168:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1172:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1175:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1178:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1181:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1184:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1187:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1191:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1194:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1196:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1197:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1199:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1203:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1204:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1205:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1206:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1208:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1209:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1210:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:../system/include/cmsis/stm32l4xx/core_cm4.h **** } MPU_Type;
1222:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1223:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1225:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Type Register Definitions */
1226:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1229:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1232:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1235:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Control Register Definitions */
1236:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1239:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1242:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1245:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1249:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1253:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1256:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1259:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1263:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1266:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1269:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1272:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1275:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1278:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1281:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1284:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1287:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1290:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1293:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1294:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1295:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1299:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1300:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1301:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1302:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1304:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1305:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1306:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:../system/include/cmsis/stm32l4xx/core_cm4.h **** } FPU_Type;
1314:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1315:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1319:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1322:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1325:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1328:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1331:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1334:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1337:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1340:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1343:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1347:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1351:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1354:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1357:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1360:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1364:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1367:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1370:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1373:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1376:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1379:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1382:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1385:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1389:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1392:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1395:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1398:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1400:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1403:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1405:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1406:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1407:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1411:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1412:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1413:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1414:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1416:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1417:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1418:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:../system/include/cmsis/stm32l4xx/core_cm4.h **** } CoreDebug_Type;
1423:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1424:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1428:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1431:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1434:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1437:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1440:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1443:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1446:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1449:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1452:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1455:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1458:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1461:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1465:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1468:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1472:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1475:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1478:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1481:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1484:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1487:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1490:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1493:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1496:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1499:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1502:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1505:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1508:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1510:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1511:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1512:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1516:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1517:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1518:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1519:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return           Masked and shifted value.
1523:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1524:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1526:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1527:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1532:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1534:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1536:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1537:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1538:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1542:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1543:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1544:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1554:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1563:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
1567:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1568:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1571:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} */
1572:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1573:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1574:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1575:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
1576:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                Hardware Abstraction Layer
1577:../system/include/cmsis/stm32l4xx/core_cm4.h ****   Core Function Interface contains:
1578:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core NVIC Functions
1579:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SysTick Functions
1580:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Debug Functions
1581:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Register Access Functions
1582:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
1583:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1584:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1586:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1587:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1588:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1589:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1591:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1595:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1596:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1597:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
1601:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
1603:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1617:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
1621:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
1623:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1627:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1629:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1630:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1638:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1639:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1640:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Priority Grouping
1641:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:../system/include/cmsis/stm32l4xx/core_cm4.h ****            Only values from 0..7 are used.
1644:../system/include/cmsis/stm32l4xx/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:../system/include/cmsis/stm32l4xx/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1648:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1650:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t reg_value;
1651:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1653:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:../system/include/cmsis/stm32l4xx/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:../system/include/cmsis/stm32l4xx/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1660:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1661:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1662:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1663:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Priority Grouping
1664:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1667:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1669:../system/include/cmsis/stm32l4xx/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1670:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1671:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1672:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1673:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1674:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Enable Interrupt
1675:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1678:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1679:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1681:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1683:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __COMPILER_BARRIER();
1684:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1685:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __COMPILER_BARRIER();
1686:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1687:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1688:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1689:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1690:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1691:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Interrupt Enable status
1692:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             1  Interrupt is enabled.
1696:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1697:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1698:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1700:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1702:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1704:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1705:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1706:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(0U);
1707:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1708:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1709:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1710:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1711:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1712:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Disable Interrupt
1713:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1716:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1717:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1719:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1721:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __DSB();
1723:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __ISB();
1724:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1725:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1726:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1727:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1728:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1729:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Pending Interrupt
1730:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             1  Interrupt status is pending.
1734:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1735:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1736:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1738:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1740:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1742:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1743:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1744:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(0U);
1745:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1746:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1747:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1748:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1749:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1750:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Pending Interrupt
1751:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1754:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1755:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1757:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1759:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1761:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1762:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1763:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1764:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1765:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Clear Pending Interrupt
1766:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1769:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1770:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1772:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1774:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1776:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1777:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1778:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1779:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1780:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Active Interrupt
1781:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             0  Interrupt status is not active.
1784:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             1  Interrupt status is active.
1785:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1786:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1787:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1789:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1791:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1793:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1794:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1795:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(0U);
1796:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1797:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1798:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1799:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1800:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1801:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Interrupt Priority
1802:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1805:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]  priority  Priority to set.
1807:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1809:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1811:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1812:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1813:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1814:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1815:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1816:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1817:../system/include/cmsis/stm32l4xx/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1818:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1819:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1820:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1821:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1822:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1823:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Interrupt Priority
1824:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1827:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             Interrupt Priority.
1829:../system/include/cmsis/stm32l4xx/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1831:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1833:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1834:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1836:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1838:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1839:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1840:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1842:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1843:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1844:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1845:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1846:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Encode Priority
1847:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:../system/include/cmsis/stm32l4xx/core_cm4.h ****            preemptive priority value, and subpriority value.
1849:../system/include/cmsis/stm32l4xx/core_cm4.h ****            In case of a conflict between priority grouping and available
1850:../system/include/cmsis/stm32l4xx/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1856:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1857:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1858:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1859:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PreemptPriorityBits;
1860:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t SubPriorityBits;
1861:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1862:../system/include/cmsis/stm32l4xx/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1863:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1864:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1865:../system/include/cmsis/stm32l4xx/core_cm4.h ****   return (
1866:../system/include/cmsis/stm32l4xx/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1867:../system/include/cmsis/stm32l4xx/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1868:../system/include/cmsis/stm32l4xx/core_cm4.h ****          );
1869:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1870:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1871:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1872:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1873:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Decode Priority
1874:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1875:../system/include/cmsis/stm32l4xx/core_cm4.h ****            preemptive priority value and subpriority value.
1876:../system/include/cmsis/stm32l4xx/core_cm4.h ****            In case of a conflict between priority grouping and available
1877:../system/include/cmsis/stm32l4xx/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1878:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1879:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1880:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1881:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1882:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1883:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1884:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1885:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1886:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PreemptPriorityBits;
1887:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t SubPriorityBits;
1888:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1889:../system/include/cmsis/stm32l4xx/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1890:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1891:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1892:../system/include/cmsis/stm32l4xx/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1893:../system/include/cmsis/stm32l4xx/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1894:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1895:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1896:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1897:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1898:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Interrupt Vector
1899:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1900:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1901:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1902:../system/include/cmsis/stm32l4xx/core_cm4.h ****            VTOR must been relocated to SRAM before.
1903:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1904:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1905:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1906:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1907:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1908:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1909:../system/include/cmsis/stm32l4xx/core_cm4.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
1910:../system/include/cmsis/stm32l4xx/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1911:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1912:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1913:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1914:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1915:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Interrupt Vector
1916:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1917:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1918:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1919:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1920:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return                 Address of interrupt handler function
1921:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1922:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1923:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1924:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1925:../system/include/cmsis/stm32l4xx/core_cm4.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
1926:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1927:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1928:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1929:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1930:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   System Reset
1931:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1932:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1933:../system/include/cmsis/stm32l4xx/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1934:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1935:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1936:../system/include/cmsis/stm32l4xx/core_cm4.h ****                                                                        buffered write are completed
1937:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1938:../system/include/cmsis/stm32l4xx/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 1153              		.loc 4 1938 0
 1154 074c 2E49     		ldr	r1, .L122+164
 1155 074e CA68     		ldr	r2, [r1, #12]
 1156 0750 02F4E062 		and	r2, r2, #1792
1937:../system/include/cmsis/stm32l4xx/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 1157              		.loc 4 1937 0
 1158 0754 2D4B     		ldr	r3, .L122+168
 1159 0756 1343     		orrs	r3, r3, r2
 1160 0758 CB60     		str	r3, [r1, #12]
 1161              	.LBB38:
 1162              	.LBB39:
 1163              		.loc 3 946 0
 1164              		.syntax unified
 1165              	@ 946 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 1166 075a BFF34F8F 		dsb 0xF
 1167              	@ 0 "" 2
 1168              		.thumb
 1169              		.syntax unified
 1170              	.L42:
 1171              	.LBE39:
 1172              	.LBE38:
1939:../system/include/cmsis/stm32l4xx/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1940:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1941:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1942:../system/include/cmsis/stm32l4xx/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1943:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1944:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __NOP();
 1173              		.loc 4 1944 0
 1174              		.syntax unified
 1175              	@ 1944 "../system/include/cmsis/stm32l4xx/core_cm4.h" 1
 1176 075e 00BF     		nop
 1177              	@ 0 "" 2
 1178              		.thumb
 1179              		.syntax unified
 1180 0760 FDE7     		b	.L42
 1181              	.L123:
 1182 0762 00BF     		.align	2
 1183              	.L122:
 1184 0764 00000000 		.word	main_target_kiss_baudrate
 1185 0768 00000000 		.word	main_kiss_srl_ctx
 1186 076c 00000000 		.word	srl_usart1_tx_buffer
 1187 0770 00000000 		.word	srl_usart1_rx_buffer
 1188 0774 00380140 		.word	1073821696
 1189 0778 00000000 		.word	main_kiss_srl_ctx_ptr
 1190 077c 00000000 		.word	rte_wx_davis_station_avaliable
 1191 0780 00000000 		.word	.LANCHOR6
 1192 0784 00000000 		.word	.LANCHOR7
 1193 0788 00000000 		.word	main_target_wx_baudrate
 1194 078c 00000000 		.word	srl_usart2_tx_buffer
 1195 0790 00000000 		.word	srl_usart2_rx_buffer
 1196 0794 00440040 		.word	1073759232
 1197 0798 00000000 		.word	main_wx_srl_ctx_ptr
 1198 079c 00000000 		.word	.LANCHOR8
 1199 07a0 00000000 		.word	main_wx_srl_ctx
 1200 07a4 00000000 		.word	rte_rtu_pool_queue
 1201 07a8 00000000 		.word	.LANCHOR9
 1202 07ac 00000000 		.word	rte_wx_dallas_average
 1203 07b0 00080048 		.word	1207961600
 1204 07b4 00000000 		.word	.LANCHOR11
 1205 07b8 00000000 		.word	rte_wx_umb_context
 1206 07bc 00000000 		.word	.LANCHOR5
 1207 07c0 00000000 		.word	rte_wx_ms5611_qf
 1208 07c4 00000000 		.word	SensorCalData
 1209 07c8 00000000 		.word	rte_wx_bme280_qf
 1210 07cc 00000000 		.word	bme280_calibration_data
 1211 07d0 00000000 		.word	.LANCHOR1
 1212 07d4 00000000 		.word	main_own_aprs_msg
 1213 07d8 00000000 		.word	.LANCHOR3
 1214 07dc 00000000 		.word	main_string_longitude
 1215 07e0 00000000 		.word	.LANCHOR2
 1216 07e4 00000000 		.word	main_string_latitude
 1217 07e8 00000000 		.word	.LC0
 1218 07ec 00000000 		.word	main_own_aprs_msg_len
 1219 07f0 00000000 		.word	main_own_path
 1220 07f4 00000000 		.word	.LANCHOR12
 1221 07f8 00000000 		.word	.LANCHOR13
 1222 07fc 00000000 		.word	rte_pv_average
 1223 0800 00000000 		.word	rte_pv_struct
 1224 0804 00000000 		.word	rte_wx_umb
 1225 0808 00ED00E0 		.word	-536810240
 1226 080c 0400FA05 		.word	100270084
 1227              	.L45:
 1228              	.LBE35:
 1229              	.LBE34:
 787:../src/main.c **** 
 788:../src/main.c ****   // Infinite loop
 789:../src/main.c ****   while (1)
 790:../src/main.c ****     {
 791:../src/main.c **** 	  // incrementing current cpu ticks
 792:../src/main.c **** 	  main_current_cpu_idle_ticks++;
 793:../src/main.c **** 
 794:../src/main.c **** 	    if (rte_main_reboot_req == 1) {
 795:../src/main.c **** 	    	NVIC_SystemReset();
 796:../src/main.c **** 	    }
 797:../src/main.c **** 	    else {
 798:../src/main.c **** 	    	;
 799:../src/main.c **** 	    }
 800:../src/main.c **** 
 801:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 802:../src/main.c **** 	    // read the state of a button input
 803:../src/main.c **** 	  	if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_0)) {
 804:../src/main.c **** #endif
 805:../src/main.c **** #ifdef STM32L471xx
 806:../src/main.c **** 		    // read the state of a button input
 807:../src/main.c **** 		  	if (LL_GPIO_IsInputPinSet(GPIOA, LL_GPIO_PIN_0)) {
 808:../src/main.c **** #endif
 809:../src/main.c **** 
 810:../src/main.c **** 	  		// if modem is not busy on transmitting something and the button is not
 811:../src/main.c **** 	  		// inhibited
 812:../src/main.c **** 	  		if (main_afsk.sending == false && button_inhibit == 0) {
 813:../src/main.c **** 
 814:../src/main.c **** 	  			// wait for radio channel to be released
 815:../src/main.c **** 	  			while(main_ax25.dcd == true);
 816:../src/main.c **** 
 817:../src/main.c **** 	  			if ((main_config_data_mode->wx & WX_ENABLED) == 0) {
 818:../src/main.c **** 
 819:../src/main.c **** 	  				beacon_send_own();
 820:../src/main.c **** 	  			}
 821:../src/main.c **** 	  			else {
 822:../src/main.c **** 
 823:../src/main.c **** 					srl_wait_for_tx_completion(main_kiss_srl_ctx_ptr);
 1230              		.loc 1 823 0
 1231 0810 924B     		ldr	r3, .L124
 1232 0812 1868     		ldr	r0, [r3]
 1233 0814 FFF7FEFF 		bl	srl_wait_for_tx_completion
 1234              	.LVL113:
 824:../src/main.c **** 
 825:../src/main.c **** 					SendWXFrameToBuffer(rte_wx_average_windspeed, rte_wx_max_windspeed, rte_wx_average_winddirecti
 1235              		.loc 1 825 0
 1236 0818 914B     		ldr	r3, .L124+4
 1237 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1238 081c 914A     		ldr	r2, .L124+8
 1239 081e 1288     		ldrh	r2, [r2]
 1240 0820 9149     		ldr	r1, .L124+12
 1241 0822 0988     		ldrh	r1, [r1]
 1242 0824 9148     		ldr	r0, .L124+16
 1243 0826 0088     		ldrh	r0, [r0]
 1244 0828 07AC     		add	r4, sp, #28
 1245              	.LVL114:
 1246 082a 0294     		str	r4, [sp, #8]
 1247 082c 4FF40074 		mov	r4, #512
 1248 0830 0194     		str	r4, [sp, #4]
 1249 0832 8F4C     		ldr	r4, .L124+20
 1250 0834 6469     		ldr	r4, [r4, #20]
 1251 0836 0094     		str	r4, [sp]
 1252 0838 8E4C     		ldr	r4, .L124+24
 1253 083a D4ED000A 		vldr.32	s1, [r4]
 1254 083e 8E4C     		ldr	r4, .L124+28
 1255 0840 94ED000A 		vldr.32	s0, [r4]
 1256 0844 FFF7FEFF 		bl	SendWXFrameToBuffer
 1257              	.LVL115:
 826:../src/main.c **** 
 827:../src/main.c **** 					if (main_kiss_enabled == 1) {
 1258              		.loc 1 827 0
 1259 0848 8C4B     		ldr	r3, .L124+32
 1260 084a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1261 084c 012C     		cmp	r4, #1
 1262 084e 37D1     		bne	.L78
 828:../src/main.c **** 						srl_start_tx(main_kiss_srl_ctx_ptr, ln);
 1263              		.loc 1 828 0
 1264 0850 BDF91C10 		ldrsh	r1, [sp, #28]
 1265 0854 814B     		ldr	r3, .L124
 1266 0856 1868     		ldr	r0, [r3]
 1267 0858 FFF7FEFF 		bl	srl_start_tx
 1268              	.LVL116:
 1269 085c 00E0     		b	.L43
 1270              	.LVL117:
 1271              	.L76:
 829:../src/main.c **** 					}
 830:../src/main.c **** 	  			}
 831:../src/main.c **** 	  		}
 832:../src/main.c **** 
 833:../src/main.c **** 	  		button_inhibit = 1;
 834:../src/main.c **** 	  	}
 835:../src/main.c **** 	  	else {
 836:../src/main.c **** 	  		button_inhibit = 0;
 1272              		.loc 1 836 0
 1273 085e 0024     		movs	r4, #0
 1274              	.LVL118:
 1275              	.L43:
 837:../src/main.c **** 	  	}
 838:../src/main.c **** 
 839:../src/main.c **** 	  	// if new packet has been received from radio channel
 840:../src/main.c **** 		if(ax25_new_msg_rx_flag == 1) {
 1276              		.loc 1 840 0
 1277 0860 874B     		ldr	r3, .L124+36
 1278 0862 93F90030 		ldrsb	r3, [r3]
 1279 0866 012B     		cmp	r3, #1
 1280 0868 2CD0     		beq	.L94
 1281              	.L46:
 841:../src/main.c **** 			memset(main_kiss_srl_ctx.srl_tx_buf_pointer, 0x00, main_kiss_srl_ctx.srl_tx_buf_ln);
 842:../src/main.c **** 
 843:../src/main.c **** 			if (main_kiss_enabled == 1) {
 844:../src/main.c **** 				// convert message to kiss format and send it to host
 845:../src/main.c **** 				srl_start_tx(main_kiss_srl_ctx_ptr, SendKISSToHost(ax25_rxed_frame.raw_data, (ax25_rxed_frame.r
 846:../src/main.c **** 			}
 847:../src/main.c **** 
 848:../src/main.c **** 			main_ax25.dcd = false;
 849:../src/main.c **** 
 850:../src/main.c **** #ifndef _MUTE_OWN
 851:../src/main.c **** 	#ifdef _DIGI
 852:../src/main.c **** 			//digi_check_with_viscous(&ax25_rxed_frame);
 853:../src/main.c **** 
 854:../src/main.c **** 			// check if this packet needs to be repeated (digipeated) and do it if it is necessary
 855:../src/main.c **** 			digi_process(&ax25_rxed_frame, main_config_data_basic, main_config_data_mode);
 856:../src/main.c **** 	#endif
 857:../src/main.c **** #endif
 858:../src/main.c **** 			ax25_new_msg_rx_flag = 0;
 859:../src/main.c **** 			rx10m++;
 860:../src/main.c **** 		}
 861:../src/main.c **** 
 862:../src/main.c **** 		// if Victron VE.direct client is enabled
 863:../src/main.c **** 		if (main_config_data_mode->victron == 1) {
 1282              		.loc 1 863 0
 1283 086a 864B     		ldr	r3, .L124+40
 1284 086c 1B68     		ldr	r3, [r3]
 1285 086e 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1286 0870 012A     		cmp	r2, #1
 1287 0872 55D0     		beq	.L95
 864:../src/main.c **** 
 865:../src/main.c **** 			// if new KISS message has been received from the host
 866:../src/main.c **** 			if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE || main_kiss_srl_ctx_ptr->srl_rx_state ==
 867:../src/main.c **** 
 868:../src/main.c **** 				// cutting received string to Checksum, everything after will be skipped
 869:../src/main.c **** 				ve_direct_cut_to_checksum(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), TX_BUFFER_1_LN, &buffer_len
 870:../src/main.c **** 
 871:../src/main.c **** 				// checking if this frame is ok
 872:../src/main.c **** 				ve_direct_validate_checksum(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), buffer_len, &retval);
 873:../src/main.c **** 
 874:../src/main.c **** 				if (retval == 1) {
 875:../src/main.c **** 					// parsing data from input serial buffer to
 876:../src/main.c **** 					retval = ve_direct_parse_to_raw_struct(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), buffer_len, &
 877:../src/main.c **** 
 878:../src/main.c **** 					if (retval == 0) {
 879:../src/main.c **** 						ve_direct_add_to_average(&rte_pv_struct, &rte_pv_average);
 880:../src/main.c **** 
 881:../src/main.c **** 						ve_direct_get_averages(&rte_pv_average, &rte_pv_battery_current, &rte_pv_battery_voltage, &rt
 882:../src/main.c **** 
 883:../src/main.c **** 						ve_direct_set_sys_voltage(&rte_pv_struct, &rte_pv_sys_voltage);
 884:../src/main.c **** 
 885:../src/main.c **** 						ve_direct_store_errors(&rte_pv_struct, &rte_pv_last_error);
 886:../src/main.c **** 
 887:../src/main.c **** 						rte_pv_messages_count++;
 888:../src/main.c **** 					}
 889:../src/main.c **** 				}
 890:../src/main.c **** 				else {
 891:../src/main.c **** 					rte_pv_corrupted_messages_count++;
 892:../src/main.c **** 				}
 893:../src/main.c **** 
 894:../src/main.c **** 				//memset(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), 0x00, TX_BUFFER_1_LN);
 895:../src/main.c **** 
 896:../src/main.c **** 				srl_receive_data(main_kiss_srl_ctx_ptr, VE_DIRECT_MAX_FRAME_LN, 0, 0, 0, 0, 0);
 897:../src/main.c **** 			}
 898:../src/main.c **** 		}
 899:../src/main.c **** 		else if (main_config_data_mode->wx_umb == 1) {
 1288              		.loc 1 899 0
 1289 0874 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1290 0876 012B     		cmp	r3, #1
 1291 0878 00F07581 		beq	.L96
 900:../src/main.c **** 			// if some UMB data have been received
 901:../src/main.c **** 			if (main_wx_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE) {
 902:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_IDLE, master_time, main_config_data_umb
 903:../src/main.c **** 			}
 904:../src/main.c **** 
 905:../src/main.c **** 			// if there were an error during receiving frame from host, restart rxing once again
 906:../src/main.c **** 			if (main_wx_srl_ctx_ptr->srl_rx_state == SRL_RX_ERROR) {
 907:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_ERROR, master_time, main_config_data_um
 908:../src/main.c **** 			}
 909:../src/main.c **** 
 910:../src/main.c **** 			if (main_wx_srl_ctx_ptr->srl_tx_state == SRL_TX_IDLE) {
 911:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_TRANSMIT_IDLE, master_time, main_config_data_um
 912:../src/main.c **** 			}
 913:../src/main.c **** 		}
 914:../src/main.c **** 		else {
 915:../src/main.c **** 			// if new KISS message has been received from the host
 916:../src/main.c **** 			if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE && main_kiss_enabled == 1) {
 1292              		.loc 1 916 0
 1293 087c 774B     		ldr	r3, .L124
 1294 087e 1868     		ldr	r0, [r3]
 1295 0880 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1296 0884 042B     		cmp	r3, #4
 1297 0886 04D1     		bne	.L55
 1298              		.loc 1 916 0 is_stmt 0 discriminator 1
 1299 0888 7C4B     		ldr	r3, .L124+32
 1300 088a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1301 088c 012B     		cmp	r3, #1
 1302 088e 00F09881 		beq	.L97
 1303              	.L55:
 917:../src/main.c **** 				// parse incoming data and then transmit on radio freq
 918:../src/main.c **** 				short res = ParseReceivedKISS(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), srl_get_num_bytes_rxed(
 919:../src/main.c **** 				if (res == 0)
 920:../src/main.c **** 					kiss10m++;	// increase kiss messages counter
 921:../src/main.c **** 
 922:../src/main.c **** 				// restart KISS receiving to be ready for next frame
 923:../src/main.c **** 				srl_receive_data(main_kiss_srl_ctx_ptr, 120, FEND, FEND, 0, 0, 0);
 924:../src/main.c **** 			}
 925:../src/main.c **** 
 926:../src/main.c **** 			// if there were an error during receiving frame from host, restart rxing once again
 927:../src/main.c **** 			if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_ERROR && main_kiss_enabled == 1) {
 1304              		.loc 1 927 0 is_stmt 1
 1305 0892 724B     		ldr	r3, .L124
 1306 0894 1868     		ldr	r0, [r3]
 1307 0896 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1308 089a 052B     		cmp	r3, #5
 1309 089c 49D1     		bne	.L49
 1310              		.loc 1 927 0 is_stmt 0 discriminator 1
 1311 089e 774B     		ldr	r3, .L124+32
 1312 08a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1313 08a2 012B     		cmp	r3, #1
 1314 08a4 45D1     		bne	.L49
 928:../src/main.c **** 				srl_receive_data(main_kiss_srl_ctx_ptr, 120, FEND, FEND, 0, 0, 0);
 1315              		.loc 1 928 0 is_stmt 1
 1316 08a6 0023     		movs	r3, #0
 1317 08a8 0293     		str	r3, [sp, #8]
 1318 08aa 0193     		str	r3, [sp, #4]
 1319 08ac 0093     		str	r3, [sp]
 1320 08ae 6FF03F03 		mvn	r3, #63
 1321 08b2 1A46     		mov	r2, r3
 1322 08b4 7821     		movs	r1, #120
 1323 08b6 FFF7FEFF 		bl	srl_receive_data
 1324              	.LVL119:
 1325 08ba 3AE0     		b	.L49
 1326              	.L77:
 833:../src/main.c **** 	  	}
 1327              		.loc 1 833 0
 1328 08bc 0124     		movs	r4, #1
 1329              	.LVL120:
 1330 08be CFE7     		b	.L43
 1331              	.L78:
 1332 08c0 0124     		movs	r4, #1
 1333 08c2 CDE7     		b	.L43
 1334              	.LVL121:
 1335              	.L94:
 841:../src/main.c **** 
 1336              		.loc 1 841 0
 1337 08c4 6A4B     		ldr	r3, .L124+20
 1338 08c6 DA8B     		ldrh	r2, [r3, #30]
 1339 08c8 0021     		movs	r1, #0
 1340 08ca 5869     		ldr	r0, [r3, #20]
 1341 08cc FFF7FEFF 		bl	memset
 1342              	.LVL122:
 843:../src/main.c **** 				// convert message to kiss format and send it to host
 1343              		.loc 1 843 0
 1344 08d0 6A4B     		ldr	r3, .L124+32
 1345 08d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1346 08d4 012B     		cmp	r3, #1
 1347 08d6 11D0     		beq	.L98
 1348              	.L47:
 848:../src/main.c **** 
 1349              		.loc 1 848 0
 1350 08d8 0025     		movs	r5, #0
 1351 08da 6B4B     		ldr	r3, .L124+44
 1352 08dc 83F81452 		strb	r5, [r3, #532]
 855:../src/main.c **** 	#endif
 1353              		.loc 1 855 0
 1354 08e0 684B     		ldr	r3, .L124+40
 1355 08e2 1A68     		ldr	r2, [r3]
 1356 08e4 694B     		ldr	r3, .L124+48
 1357 08e6 1968     		ldr	r1, [r3]
 1358 08e8 6948     		ldr	r0, .L124+52
 1359 08ea FFF7FEFF 		bl	digi_process
 1360              	.LVL123:
 858:../src/main.c **** 			rx10m++;
 1361              		.loc 1 858 0
 1362 08ee 644B     		ldr	r3, .L124+36
 1363 08f0 1D70     		strb	r5, [r3]
 859:../src/main.c **** 		}
 1364              		.loc 1 859 0
 1365 08f2 684A     		ldr	r2, .L124+56
 1366 08f4 1388     		ldrh	r3, [r2]
 1367 08f6 0133     		adds	r3, r3, #1
 1368 08f8 1380     		strh	r3, [r2]	@ movhi
 1369 08fa B6E7     		b	.L46
 1370              	.L98:
 845:../src/main.c **** 			}
 1371              		.loc 1 845 0
 1372 08fc 574B     		ldr	r3, .L124
 1373 08fe 1D68     		ldr	r5, [r3]
 1374 0900 6348     		ldr	r0, .L124+52
 1375 0902 B0F85212 		ldrh	r1, [r0, #594]
 1376 0906 5A4A     		ldr	r2, .L124+20
 1377 0908 0239     		subs	r1, r1, #2
 1378 090a D38B     		ldrh	r3, [r2, #30]
 1379 090c 5269     		ldr	r2, [r2, #20]
 1380 090e 89B2     		uxth	r1, r1
 1381 0910 5230     		adds	r0, r0, #82
 1382 0912 FFF7FEFF 		bl	SendKISSToHost
 1383              	.LVL124:
 1384 0916 01B2     		sxth	r1, r0
 1385 0918 2846     		mov	r0, r5
 1386 091a FFF7FEFF 		bl	srl_start_tx
 1387              	.LVL125:
 1388 091e DBE7     		b	.L47
 1389              	.L95:
 866:../src/main.c **** 
 1390              		.loc 1 866 0
 1391 0920 4E4B     		ldr	r3, .L124
 1392 0922 1868     		ldr	r0, [r3]
 1393 0924 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1394 0928 043B     		subs	r3, r3, #4
 1395 092a DBB2     		uxtb	r3, r3
 1396 092c 012B     		cmp	r3, #1
 1397 092e 40F2CF80 		bls	.L99
 1398              	.L49:
 929:../src/main.c **** 			}
 930:../src/main.c **** 		}
 931:../src/main.c **** 
 932:../src/main.c **** 		// if Davis wx station is enabled and it is alive
 933:../src/main.c **** 		if (main_davis_serial_enabled == 1) {
 1399              		.loc 1 933 0
 1400 0932 594B     		ldr	r3, .L124+60
 1401 0934 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 0936 012B     		cmp	r3, #1
 1403 0938 00F06281 		beq	.L100
 1404              	.L57:
 934:../src/main.c **** 
 935:../src/main.c **** 			// pool the Davis wx station driver for LOOP packet
 936:../src/main.c **** 			davis_loop_packet_pooler(&rte_wx_davis_loop_packet_avaliable);
 937:../src/main.c **** 
 938:../src/main.c **** 			davis_rxcheck_packet_pooler();
 939:../src/main.c **** 		}
 940:../src/main.c **** 
 941:../src/main.c **** 		// if modbus rtu master is enabled
 942:../src/main.c **** 		if (main_modbus_rtu_master_enabled == 1) {
 1405              		.loc 1 942 0
 1406 093c 574B     		ldr	r3, .L124+64
 1407 093e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1408 0940 012B     		cmp	r3, #1
 1409 0942 00F06381 		beq	.L101
 1410              	.L58:
 943:../src/main.c **** 			rtu_serial_pool();
 944:../src/main.c **** 		}
 945:../src/main.c **** 
 946:../src/main.c **** 		// get all meteo measuremenets each 65 seconds. some values may not be
 947:../src/main.c **** 		// downloaded from sensors if _METEO and/or _DALLAS_AS_TELEM aren't defined
 948:../src/main.c **** 		if (main_wx_sensors_pool_timer < 10) {
 1411              		.loc 1 948 0
 1412 0946 564B     		ldr	r3, .L124+68
 1413 0948 1B68     		ldr	r3, [r3]
 1414 094a 092B     		cmp	r3, #9
 1415 094c 1FDC     		bgt	.L59
 949:../src/main.c **** 
 950:../src/main.c **** 			if (main_modbus_rtu_master_enabled == 1) {
 1416              		.loc 1 950 0
 1417 094e 534B     		ldr	r3, .L124+64
 1418 0950 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1419 0952 012B     		cmp	r3, #1
 1420 0954 00F05D81 		beq	.L102
 1421              	.L60:
 951:../src/main.c **** 				rtu_serial_start();
 952:../src/main.c **** 			}
 953:../src/main.c **** 
 954:../src/main.c **** 			if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 1422              		.loc 1 954 0
 1423 0958 4A4B     		ldr	r3, .L124+40
 1424 095a 1968     		ldr	r1, [r3]
 1425 095c 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1426 095e 13F0010F 		tst	r3, #1
 1427 0962 40F05981 		bne	.L103
 1428              	.L61:
 955:../src/main.c **** 				wx_get_all_measurements(main_config_data_wx_sources, main_config_data_mode, main_config_data_um
 956:../src/main.c **** 			}
 957:../src/main.c **** 
 958:../src/main.c **** 
 959:../src/main.c **** 			if (main_config_data_mode->wx_umb == 1) {
 1429              		.loc 1 959 0
 1430 0966 474B     		ldr	r3, .L124+40
 1431 0968 1B68     		ldr	r3, [r3]
 1432 096a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1433 096c 012B     		cmp	r3, #1
 1434 096e 00F05C81 		beq	.L104
 1435              	.L62:
 960:../src/main.c **** 				//
 961:../src/main.c **** 				umb_0x26_status_request(&rte_wx_umb, &rte_wx_umb_context, main_config_data_umb);
 962:../src/main.c **** 			}
 963:../src/main.c **** 
 964:../src/main.c **** 			if (main_davis_serial_enabled == 1) {
 1436              		.loc 1 964 0
 1437 0972 494B     		ldr	r3, .L124+60
 1438 0974 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 0976 012B     		cmp	r3, #1
 1440 0978 00F05E81 		beq	.L105
 1441              	.L63:
 965:../src/main.c **** 				davis_trigger_rxcheck_packet();
 966:../src/main.c **** 			}
 967:../src/main.c **** 
 968:../src/main.c **** 			if (rte_main_trigger_modbus_status == 1 && main_modbus_rtu_master_enabled == 1) {
 1442              		.loc 1 968 0
 1443 097c 494B     		ldr	r3, .L124+72
 1444 097e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1445 0980 012B     		cmp	r3, #1
 1446 0982 00F05C81 		beq	.L106
 1447              	.L64:
 969:../src/main.c **** 				rtu_serial_get_status_string(&rte_rtu_pool_queue, main_wx_srl_ctx_ptr, main_own_aprs_msg, OWN_A
 970:../src/main.c **** 
 971:../src/main.c **** 			 	ax25_sendVia(&main_ax25, main_own_path, main_own_path_ln, main_own_aprs_msg, main_own_aprs_msg
 972:../src/main.c **** 
 973:../src/main.c **** 			 	afsk_txStart(&main_afsk);
 974:../src/main.c **** 
 975:../src/main.c **** 			 	rte_main_trigger_modbus_status = 0;
 976:../src/main.c **** 
 977:../src/main.c **** 
 978:../src/main.c **** 			}
 979:../src/main.c **** 
 980:../src/main.c **** 			main_wx_sensors_pool_timer = 65500;
 1448              		.loc 1 980 0
 1449 0986 464B     		ldr	r3, .L124+68
 1450 0988 4FF6DC72 		movw	r2, #65500
 1451 098c 1A60     		str	r2, [r3]
 1452              	.L59:
 981:../src/main.c **** 		}
 982:../src/main.c **** 
 983:../src/main.c **** 		if (main_one_minute_pool_timer < 10) {
 1453              		.loc 1 983 0
 1454 098e 464B     		ldr	r3, .L124+76
 1455 0990 1B68     		ldr	r3, [r3]
 1456 0992 092B     		cmp	r3, #9
 1457 0994 40F37281 		ble	.L107
 1458              	.L65:
 984:../src/main.c **** 
 985:../src/main.c **** 			#ifndef _MUTE_OWN
 986:../src/main.c **** 			packet_tx_handler(main_config_data_basic, main_config_data_mode);
 987:../src/main.c **** 			#endif
 988:../src/main.c **** 
 989:../src/main.c **** 			main_one_minute_pool_timer = 60000;
 990:../src/main.c **** 		}
 991:../src/main.c **** 
 992:../src/main.c **** 		if (main_one_second_pool_timer < 10) {
 1459              		.loc 1 992 0
 1460 0998 444B     		ldr	r3, .L124+80
 1461 099a 1B68     		ldr	r3, [r3]
 1462 099c 092B     		cmp	r3, #9
 1463 099e 00F37B81 		bgt	.L66
 993:../src/main.c **** 
 994:../src/main.c **** 			//digi_pool_viscous();
 995:../src/main.c **** 
 996:../src/main.c **** 			if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 1464              		.loc 1 996 0
 1465 09a2 384B     		ldr	r3, .L124+40
 1466 09a4 1B68     		ldr	r3, [r3]
 1467 09a6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1468 09a8 13F0010F 		tst	r3, #1
 1469 09ac 40F07181 		bne	.L108
 1470              	.L67:
 997:../src/main.c **** 				analog_anemometer_direction_handler();
 998:../src/main.c **** 			}
 999:../src/main.c **** 
1000:../src/main.c **** 			main_one_second_pool_timer = 1000;
 1471              		.loc 1 1000 0
 1472 09b0 3E4B     		ldr	r3, .L124+80
 1473 09b2 4FF47A72 		mov	r2, #1000
 1474 09b6 1A60     		str	r2, [r3]
 1475              	.L68:
1001:../src/main.c **** 		}
1002:../src/main.c **** 		else if (main_one_second_pool_timer < -10) {
1003:../src/main.c **** 
1004:../src/main.c **** 			if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
1005:../src/main.c **** 				analog_anemometer_direction_reset();
1006:../src/main.c **** 			}
1007:../src/main.c **** 
1008:../src/main.c **** 			main_one_second_pool_timer = 1000;
1009:../src/main.c **** 		}
1010:../src/main.c **** 
1011:../src/main.c **** 		if (main_two_second_pool_timer < 10) {
 1476              		.loc 1 1011 0
 1477 09b8 3D4B     		ldr	r3, .L124+84
 1478 09ba 1B68     		ldr	r3, [r3]
 1479 09bc 092B     		cmp	r3, #9
 1480 09be 40F37D81 		ble	.L109
 1481              	.L70:
1012:../src/main.c **** 
1013:../src/main.c **** 			wx_check_force_i2c_reset();
1014:../src/main.c **** 
1015:../src/main.c **** 			wx_pwr_periodic_handle();
1016:../src/main.c **** 
1017:../src/main.c **** 			#ifdef INTERNAL_WATCHDOG
1018:../src/main.c **** 			IWDG_ReloadCounter();
1019:../src/main.c **** 			#endif
1020:../src/main.c **** 
1021:../src/main.c **** 			main_two_second_pool_timer = 2000;
1022:../src/main.c **** 		}
1023:../src/main.c **** 
1024:../src/main.c **** 		if (main_ten_second_pool_timer < 10) {
 1482              		.loc 1 1024 0
 1483 09c2 3C4B     		ldr	r3, .L124+88
 1484 09c4 1B68     		ldr	r3, [r3]
 1485 09c6 092B     		cmp	r3, #9
 1486 09c8 1EDC     		bgt	.L40
1025:../src/main.c **** 
1026:../src/main.c **** 			if (main_config_data_mode->wx_umb == 1) {
 1487              		.loc 1 1026 0
 1488 09ca 2E4B     		ldr	r3, .L124+40
 1489 09cc 1B68     		ldr	r3, [r3]
 1490 09ce 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1491 09d0 012B     		cmp	r3, #1
 1492 09d2 00F07C81 		beq	.L110
 1493              	.L72:
1027:../src/main.c **** 				umb_channel_pool(&rte_wx_umb, &rte_wx_umb_context, main_config_data_umb);
1028:../src/main.c **** 			}
1029:../src/main.c **** 
1030:../src/main.c **** 			if (main_config_data_mode->wx_umb == 1) {
 1494              		.loc 1 1030 0
 1495 09d6 2B4B     		ldr	r3, .L124+40
 1496 09d8 1B68     		ldr	r3, [r3]
 1497 09da 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1498 09dc 012B     		cmp	r3, #1
 1499 09de 00F07D81 		beq	.L111
 1500              	.L73:
1031:../src/main.c **** 				rte_wx_umb_qf = umb_get_current_qf(&rte_wx_umb_context, master_time);
1032:../src/main.c **** 			}
1033:../src/main.c **** 
1034:../src/main.c **** 			wx_pool_anemometer(main_config_data_wx_sources, main_config_data_mode, main_config_data_umb, mai
 1501              		.loc 1 1034 0
 1502 09e2 354B     		ldr	r3, .L124+92
 1503 09e4 1B68     		ldr	r3, [r3]
 1504 09e6 354A     		ldr	r2, .L124+96
 1505 09e8 1268     		ldr	r2, [r2]
 1506 09ea 2649     		ldr	r1, .L124+40
 1507 09ec 0968     		ldr	r1, [r1]
 1508 09ee 3448     		ldr	r0, .L124+100
 1509 09f0 0068     		ldr	r0, [r0]
 1510 09f2 FFF7FEFF 		bl	wx_pool_anemometer
 1511              	.LVL126:
1035:../src/main.c **** 
1036:../src/main.c **** 			if (main_davis_serial_enabled == 1) {
 1512              		.loc 1 1036 0
 1513 09f6 284B     		ldr	r3, .L124+60
 1514 09f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1515 09fa 012B     		cmp	r3, #1
 1516 09fc 00F07681 		beq	.L112
 1517              	.L74:
1037:../src/main.c **** 
1038:../src/main.c **** 				// if previous LOOP packet is ready for processing
1039:../src/main.c **** 				if (rte_wx_davis_loop_packet_avaliable == 1) {
1040:../src/main.c **** 					davis_parsers_loop(main_kiss_srl_ctx_ptr->srl_rx_buf_pointer, main_kiss_srl_ctx_ptr->srl_rx_bu
1041:../src/main.c **** 				}
1042:../src/main.c **** 
1043:../src/main.c **** 				// trigger consecutive LOOP packet
1044:../src/main.c **** 				davis_trigger_loop_packet();
1045:../src/main.c **** 			}
1046:../src/main.c **** 
1047:../src/main.c **** 			main_ten_second_pool_timer = 10000;
 1518              		.loc 1 1047 0
 1519 0a00 2C4B     		ldr	r3, .L124+88
 1520 0a02 42F21072 		movw	r2, #10000
 1521 0a06 1A60     		str	r2, [r3]
 1522              	.LVL127:
 1523              	.L40:
 792:../src/main.c **** 
 1524              		.loc 1 792 0
 1525 0a08 2E4A     		ldr	r2, .L124+104
 1526 0a0a 1368     		ldr	r3, [r2]
 1527 0a0c 0133     		adds	r3, r3, #1
 1528 0a0e 1360     		str	r3, [r2]
 794:../src/main.c **** 	    	NVIC_SystemReset();
 1529              		.loc 1 794 0
 1530 0a10 2D4B     		ldr	r3, .L124+108
 1531 0a12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1532 0a14 012B     		cmp	r3, #1
 1533 0a16 3FF497AE 		beq	.L113
 1534              	.LVL128:
 1535              	.LBB40:
 1536              	.LBB41:
 1537              		.file 5 "../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h"
   1:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
   2:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   ******************************************************************************
   3:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @file    stm32l4xx_ll_gpio.h
   4:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   ******************************************************************************
   7:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @attention
   8:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *
   9:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * All rights reserved.</center></h2>
  11:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *
  12:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * the "License"; You may not use this file except in compliance with the
  14:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * License. You may obtain a copy of the License at:
  15:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *
  17:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   ******************************************************************************
  18:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  19:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  20:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #ifndef STM32L4xx_LL_GPIO_H
  22:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define STM32L4xx_LL_GPIO_H
  23:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  24:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #ifdef __cplusplus
  25:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** extern "C" {
  26:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #endif
  27:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  28:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  29:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #include "stm32l4xx.h"
  30:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  31:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @addtogroup STM32L4xx_LL_Driver
  32:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
  33:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  34:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  35:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  36:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  37:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  38:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
  39:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  40:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  41:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  42:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  43:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  44:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  45:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  46:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  47:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  48:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  49:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  50:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  51:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  52:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  53:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  54:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  55:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
  56:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  57:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  58:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
  59:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
  60:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  61:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  62:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  63:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  64:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  65:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  66:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
  67:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  68:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  69:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
  70:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  71:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  72:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** typedef struct
  73:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
  74:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  75:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  76:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  77:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  78:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  79:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  80:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  81:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  82:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  83:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  84:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  85:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  86:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  87:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  88:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  89:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  90:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  91:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  92:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  93:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  94:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  95:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  96:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  97:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  98:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  99:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
 117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
 204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
 205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
 206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Register value
 237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR,
 532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                              (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin) * 4U)));
 573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) 
 610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
 650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL
 688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #if defined(GPIO_ASCR_ASC0)
 691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Connect analog switch to ADC input of several pins for a dedicated port.
 693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   This bit must be set prior to the ADC conversion.
 694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         Only the IO which connected to the ADC input are effective.
 695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         Other IO must be kept reset value
 696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll ASCR         ASCy          LL_GPIO_EnablePinAnalogControl
 697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_EnablePinAnalogControl(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   SET_BIT(GPIOx->ASCR, PinMask);
 721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Disconnect analog switch to ADC input of several pins for a dedicated port.
 725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll ASCR         ASCy          LL_GPIO_DisablePinAnalogControl
 726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_DisablePinAnalogControl(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   CLEAR_BIT(GPIOx->ASCR, PinMask);
 750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #endif /* GPIO_ASCR_ASC0 */
 752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         next reset.
 758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         (control and alternate function registers).
 760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   __IO uint32_t temp;
 785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   (void) temp;
 791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, PinMask) == (PinMask)) ? 1UL : 0UL);
 820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK)) ? 1UL : 0UL);
 831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Input data register value of port
 846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->IDR));
 850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->IDR, PinMask) == (PinMask)) ? 1UL : 0UL);
 1538              		.loc 5 878 0
 1539 0a1a 4FF09043 		mov	r3, #1207959552
 1540 0a1e 1B69     		ldr	r3, [r3, #16]
 1541 0a20 13F0010F 		tst	r3, #1
 1542 0a24 3FF41BAF 		beq	.L76
 1543              	.LVL129:
 1544              	.LBE41:
 1545              	.LBE40:
 812:../src/main.c **** 
 1546              		.loc 1 812 0
 1547 0a28 284B     		ldr	r3, .L124+112
 1548 0a2a 93F83034 		ldrb	r3, [r3, #1072]	@ zero_extendqisi2
 1549 0a2e 002B     		cmp	r3, #0
 1550 0a30 7FF444AF 		bne	.L77
 812:../src/main.c **** 
 1551              		.loc 1 812 0 is_stmt 0 discriminator 1
 1552 0a34 002C     		cmp	r4, #0
 1553 0a36 7FF413AF 		bne	.L43
 1554              	.L44:
 815:../src/main.c **** 
 1555              		.loc 1 815 0 is_stmt 1 discriminator 1
 1556 0a3a 134B     		ldr	r3, .L124+44
 1557 0a3c 93F81432 		ldrb	r3, [r3, #532]	@ zero_extendqisi2
 1558 0a40 002B     		cmp	r3, #0
 1559 0a42 FAD1     		bne	.L44
 817:../src/main.c **** 
 1560              		.loc 1 817 0
 1561 0a44 0F4B     		ldr	r3, .L124+40
 1562 0a46 1B68     		ldr	r3, [r3]
 1563 0a48 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1564 0a4a 13F0010F 		tst	r3, #1
 1565 0a4e 7FF4DFAE 		bne	.L45
 819:../src/main.c **** 	  			}
 1566              		.loc 1 819 0
 1567 0a52 FFF7FEFF 		bl	beacon_send_own
 1568              	.LVL130:
 833:../src/main.c **** 	  	}
 1569              		.loc 1 833 0
 1570 0a56 0124     		movs	r4, #1
 1571              	.LVL131:
 1572 0a58 02E7     		b	.L43
 1573              	.L125:
 1574 0a5a 00BF     		.align	2
 1575              	.L124:
 1576 0a5c 00000000 		.word	main_kiss_srl_ctx_ptr
 1577 0a60 00000000 		.word	rte_wx_humidity
 1578 0a64 00000000 		.word	rte_wx_average_winddirection
 1579 0a68 00000000 		.word	rte_wx_max_windspeed
 1580 0a6c 00000000 		.word	rte_wx_average_windspeed
 1581 0a70 00000000 		.word	main_kiss_srl_ctx
 1582 0a74 00000000 		.word	rte_wx_pressure_valid
 1583 0a78 00000000 		.word	rte_wx_temperature_average_external_valid
 1584 0a7c 00000000 		.word	.LANCHOR6
 1585 0a80 00000000 		.word	ax25_new_msg_rx_flag
 1586 0a84 00000000 		.word	.LANCHOR5
 1587 0a88 00000000 		.word	main_ax25
 1588 0a8c 00000000 		.word	.LANCHOR1
 1589 0a90 00000000 		.word	ax25_rxed_frame
 1590 0a94 00000000 		.word	.LANCHOR15
 1591 0a98 00000000 		.word	.LANCHOR7
 1592 0a9c 00000000 		.word	.LANCHOR9
 1593 0aa0 00000000 		.word	.LANCHOR19
 1594 0aa4 00000000 		.word	rte_main_trigger_modbus_status
 1595 0aa8 00000000 		.word	.LANCHOR20
 1596 0aac 00000000 		.word	.LANCHOR21
 1597 0ab0 00000000 		.word	.LANCHOR22
 1598 0ab4 00000000 		.word	.LANCHOR23
 1599 0ab8 00000000 		.word	.LANCHOR8
 1600 0abc 00000000 		.word	.LANCHOR11
 1601 0ac0 00000000 		.word	.LANCHOR13
 1602 0ac4 00000000 		.word	.LANCHOR14
 1603 0ac8 00000000 		.word	rte_main_reboot_req
 1604 0acc 00000000 		.word	main_afsk
 1605              	.LVL132:
 1606              	.L99:
 869:../src/main.c **** 
 1607              		.loc 1 869 0
 1608 0ad0 FFF7FEFF 		bl	srl_get_rx_buffer
 1609              	.LVL133:
 1610 0ad4 8D4E     		ldr	r6, .L126
 1611 0ad6 3246     		mov	r2, r6
 1612 0ad8 4FF40071 		mov	r1, #512
 1613 0adc FFF7FEFF 		bl	ve_direct_cut_to_checksum
 1614              	.LVL134:
 872:../src/main.c **** 
 1615              		.loc 1 872 0
 1616 0ae0 8B4B     		ldr	r3, .L126+4
 1617 0ae2 1868     		ldr	r0, [r3]
 1618 0ae4 FFF7FEFF 		bl	srl_get_rx_buffer
 1619              	.LVL135:
 1620 0ae8 8A4D     		ldr	r5, .L126+8
 1621 0aea 2A46     		mov	r2, r5
 1622 0aec 3188     		ldrh	r1, [r6]
 1623 0aee FFF7FEFF 		bl	ve_direct_validate_checksum
 1624              	.LVL136:
 874:../src/main.c **** 					// parsing data from input serial buffer to
 1625              		.loc 1 874 0
 1626 0af2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1627 0af4 DBB2     		uxtb	r3, r3
 1628 0af6 012B     		cmp	r3, #1
 1629 0af8 30D1     		bne	.L50
 876:../src/main.c **** 
 1630              		.loc 1 876 0
 1631 0afa 854B     		ldr	r3, .L126+4
 1632 0afc 1868     		ldr	r0, [r3]
 1633 0afe FFF7FEFF 		bl	srl_get_rx_buffer
 1634              	.LVL137:
 1635 0b02 854A     		ldr	r2, .L126+12
 1636 0b04 3188     		ldrh	r1, [r6]
 1637 0b06 FFF7FEFF 		bl	ve_direct_parse_to_raw_struct
 1638              	.LVL138:
 1639 0b0a C0B2     		uxtb	r0, r0
 1640 0b0c 2870     		strb	r0, [r5]
 878:../src/main.c **** 						ve_direct_add_to_average(&rte_pv_struct, &rte_pv_average);
 1641              		.loc 1 878 0
 1642 0b0e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1643 0b10 CBB9     		cbnz	r3, .L51
 879:../src/main.c **** 
 1644              		.loc 1 879 0
 1645 0b12 824E     		ldr	r6, .L126+16
 1646 0b14 804D     		ldr	r5, .L126+12
 1647 0b16 3146     		mov	r1, r6
 1648 0b18 2846     		mov	r0, r5
 1649 0b1a FFF7FEFF 		bl	ve_direct_add_to_average
 1650              	.LVL139:
 881:../src/main.c **** 
 1651              		.loc 1 881 0
 1652 0b1e 804B     		ldr	r3, .L126+20
 1653 0b20 0093     		str	r3, [sp]
 1654 0b22 804B     		ldr	r3, .L126+24
 1655 0b24 804A     		ldr	r2, .L126+28
 1656 0b26 8149     		ldr	r1, .L126+32
 1657 0b28 3046     		mov	r0, r6
 1658 0b2a FFF7FEFF 		bl	ve_direct_get_averages
 1659              	.LVL140:
 883:../src/main.c **** 
 1660              		.loc 1 883 0
 1661 0b2e 8049     		ldr	r1, .L126+36
 1662 0b30 2846     		mov	r0, r5
 1663 0b32 FFF7FEFF 		bl	ve_direct_set_sys_voltage
 1664              	.LVL141:
 885:../src/main.c **** 
 1665              		.loc 1 885 0
 1666 0b36 7F49     		ldr	r1, .L126+40
 1667 0b38 2846     		mov	r0, r5
 1668 0b3a FFF7FEFF 		bl	ve_direct_store_errors
 1669              	.LVL142:
 887:../src/main.c **** 					}
 1670              		.loc 1 887 0
 1671 0b3e 7E4A     		ldr	r2, .L126+44
 1672 0b40 1388     		ldrh	r3, [r2]
 1673 0b42 0133     		adds	r3, r3, #1
 1674 0b44 1380     		strh	r3, [r2]	@ movhi
 1675              	.L51:
 896:../src/main.c **** 			}
 1676              		.loc 1 896 0
 1677 0b46 0022     		movs	r2, #0
 1678 0b48 0292     		str	r2, [sp, #8]
 1679 0b4a 0192     		str	r2, [sp, #4]
 1680 0b4c 0092     		str	r2, [sp]
 1681 0b4e 1346     		mov	r3, r2
 1682 0b50 BA21     		movs	r1, #186
 1683 0b52 6F48     		ldr	r0, .L126+4
 1684 0b54 0068     		ldr	r0, [r0]
 1685 0b56 FFF7FEFF 		bl	srl_receive_data
 1686              	.LVL143:
 1687 0b5a EAE6     		b	.L49
 1688              	.L50:
 891:../src/main.c **** 				}
 1689              		.loc 1 891 0
 1690 0b5c 774A     		ldr	r2, .L126+48
 1691 0b5e 1388     		ldrh	r3, [r2]
 1692 0b60 0133     		adds	r3, r3, #1
 1693 0b62 1380     		strh	r3, [r2]	@ movhi
 1694 0b64 EFE7     		b	.L51
 1695              	.L96:
 901:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_IDLE, master_time, main_config_data_umb
 1696              		.loc 1 901 0
 1697 0b66 764B     		ldr	r3, .L126+52
 1698 0b68 1B68     		ldr	r3, [r3]
 1699 0b6a 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1700 0b6e 042B     		cmp	r3, #4
 1701 0b70 15D0     		beq	.L114
 1702              	.L53:
 906:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_ERROR, master_time, main_config_data_um
 1703              		.loc 1 906 0
 1704 0b72 734B     		ldr	r3, .L126+52
 1705 0b74 1B68     		ldr	r3, [r3]
 1706 0b76 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1707 0b7a 052B     		cmp	r3, #5
 1708 0b7c 18D0     		beq	.L115
 1709              	.L54:
 910:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_TRANSMIT_IDLE, master_time, main_config_data_um
 1710              		.loc 1 910 0
 1711 0b7e 704B     		ldr	r3, .L126+52
 1712 0b80 1B68     		ldr	r3, [r3]
 1713 0b82 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1714 0b86 012B     		cmp	r3, #1
 1715 0b88 7FF4D3AE 		bne	.L49
 911:../src/main.c **** 			}
 1716              		.loc 1 911 0
 1717 0b8c 6D4B     		ldr	r3, .L126+56
 1718 0b8e 1B68     		ldr	r3, [r3]
 1719 0b90 6D4A     		ldr	r2, .L126+60
 1720 0b92 1268     		ldr	r2, [r2]
 1721 0b94 0021     		movs	r1, #0
 1722 0b96 6D48     		ldr	r0, .L126+64
 1723 0b98 FFF7FEFF 		bl	umb_pooling_handler
 1724              	.LVL144:
 1725 0b9c C9E6     		b	.L49
 1726              	.L114:
 902:../src/main.c **** 			}
 1727              		.loc 1 902 0
 1728 0b9e 694B     		ldr	r3, .L126+56
 1729 0ba0 1B68     		ldr	r3, [r3]
 1730 0ba2 694A     		ldr	r2, .L126+60
 1731 0ba4 1268     		ldr	r2, [r2]
 1732 0ba6 0121     		movs	r1, #1
 1733 0ba8 6848     		ldr	r0, .L126+64
 1734 0baa FFF7FEFF 		bl	umb_pooling_handler
 1735              	.LVL145:
 1736 0bae E0E7     		b	.L53
 1737              	.L115:
 907:../src/main.c **** 			}
 1738              		.loc 1 907 0
 1739 0bb0 644B     		ldr	r3, .L126+56
 1740 0bb2 1B68     		ldr	r3, [r3]
 1741 0bb4 644A     		ldr	r2, .L126+60
 1742 0bb6 1268     		ldr	r2, [r2]
 1743 0bb8 0221     		movs	r1, #2
 1744 0bba 6448     		ldr	r0, .L126+64
 1745 0bbc FFF7FEFF 		bl	umb_pooling_handler
 1746              	.LVL146:
 1747 0bc0 DDE7     		b	.L54
 1748              	.L97:
 1749              	.LBB42:
 918:../src/main.c **** 				if (res == 0)
 1750              		.loc 1 918 0
 1751 0bc2 FFF7FEFF 		bl	srl_get_rx_buffer
 1752              	.LVL147:
 1753 0bc6 0546     		mov	r5, r0
 1754 0bc8 514B     		ldr	r3, .L126+4
 1755 0bca 1868     		ldr	r0, [r3]
 1756 0bcc FFF7FEFF 		bl	srl_get_num_bytes_rxed
 1757              	.LVL148:
 1758 0bd0 5F4B     		ldr	r3, .L126+68
 1759 0bd2 604A     		ldr	r2, .L126+72
 1760 0bd4 0146     		mov	r1, r0
 1761 0bd6 2846     		mov	r0, r5
 1762 0bd8 FFF7FEFF 		bl	ParseReceivedKISS
 1763              	.LVL149:
 919:../src/main.c **** 					kiss10m++;	// increase kiss messages counter
 1764              		.loc 1 919 0
 1765 0bdc 18B9     		cbnz	r0, .L56
 920:../src/main.c **** 
 1766              		.loc 1 920 0
 1767 0bde 5E4A     		ldr	r2, .L126+76
 1768 0be0 1388     		ldrh	r3, [r2]
 1769 0be2 0133     		adds	r3, r3, #1
 1770 0be4 1380     		strh	r3, [r2]	@ movhi
 1771              	.L56:
 923:../src/main.c **** 			}
 1772              		.loc 1 923 0
 1773 0be6 0023     		movs	r3, #0
 1774 0be8 0293     		str	r3, [sp, #8]
 1775 0bea 0193     		str	r3, [sp, #4]
 1776 0bec 0093     		str	r3, [sp]
 1777 0bee 6FF03F03 		mvn	r3, #63
 1778 0bf2 1A46     		mov	r2, r3
 1779 0bf4 7821     		movs	r1, #120
 1780 0bf6 4648     		ldr	r0, .L126+4
 1781              	.LVL150:
 1782 0bf8 0068     		ldr	r0, [r0]
 1783 0bfa FFF7FEFF 		bl	srl_receive_data
 1784              	.LVL151:
 1785 0bfe 48E6     		b	.L55
 1786              	.L100:
 1787              	.LBE42:
 936:../src/main.c **** 
 1788              		.loc 1 936 0
 1789 0c00 5648     		ldr	r0, .L126+80
 1790 0c02 FFF7FEFF 		bl	davis_loop_packet_pooler
 1791              	.LVL152:
 938:../src/main.c **** 		}
 1792              		.loc 1 938 0
 1793 0c06 FFF7FEFF 		bl	davis_rxcheck_packet_pooler
 1794              	.LVL153:
 1795 0c0a 97E6     		b	.L57
 1796              	.L101:
 943:../src/main.c **** 		}
 1797              		.loc 1 943 0
 1798 0c0c FFF7FEFF 		bl	rtu_serial_pool
 1799              	.LVL154:
 1800 0c10 99E6     		b	.L58
 1801              	.L102:
 951:../src/main.c **** 			}
 1802              		.loc 1 951 0
 1803 0c12 FFF7FEFF 		bl	rtu_serial_start
 1804              	.LVL155:
 1805 0c16 9FE6     		b	.L60
 1806              	.L103:
 955:../src/main.c **** 			}
 1807              		.loc 1 955 0
 1808 0c18 514B     		ldr	r3, .L126+84
 1809 0c1a 1B68     		ldr	r3, [r3]
 1810 0c1c 494A     		ldr	r2, .L126+56
 1811 0c1e 1268     		ldr	r2, [r2]
 1812 0c20 5048     		ldr	r0, .L126+88
 1813 0c22 0068     		ldr	r0, [r0]
 1814 0c24 FFF7FEFF 		bl	wx_get_all_measurements
 1815              	.LVL156:
 1816 0c28 9DE6     		b	.L61
 1817              	.L104:
 961:../src/main.c **** 			}
 1818              		.loc 1 961 0
 1819 0c2a 464B     		ldr	r3, .L126+56
 1820 0c2c 1A68     		ldr	r2, [r3]
 1821 0c2e 4749     		ldr	r1, .L126+64
 1822 0c30 4D48     		ldr	r0, .L126+92
 1823 0c32 FFF7FEFF 		bl	umb_0x26_status_request
 1824              	.LVL157:
 1825 0c36 9CE6     		b	.L62
 1826              	.L105:
 965:../src/main.c **** 			}
 1827              		.loc 1 965 0
 1828 0c38 FFF7FEFF 		bl	davis_trigger_rxcheck_packet
 1829              	.LVL158:
 1830 0c3c 9EE6     		b	.L63
 1831              	.L106:
 968:../src/main.c **** 				rtu_serial_get_status_string(&rte_rtu_pool_queue, main_wx_srl_ctx_ptr, main_own_aprs_msg, OWN_A
 1832              		.loc 1 968 0 discriminator 1
 1833 0c3e 4B4B     		ldr	r3, .L126+96
 1834 0c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1835 0c42 012B     		cmp	r3, #1
 1836 0c44 7FF49FAE 		bne	.L64
 969:../src/main.c **** 
 1837              		.loc 1 969 0
 1838 0c48 494D     		ldr	r5, .L126+100
 1839 0c4a 4A4E     		ldr	r6, .L126+104
 1840 0c4c 0096     		str	r6, [sp]
 1841 0c4e A023     		movs	r3, #160
 1842 0c50 2A46     		mov	r2, r5
 1843 0c52 3B49     		ldr	r1, .L126+52
 1844 0c54 0968     		ldr	r1, [r1]
 1845 0c56 4848     		ldr	r0, .L126+108
 1846 0c58 FFF7FEFF 		bl	rtu_serial_get_status_string
 1847              	.LVL159:
 971:../src/main.c **** 
 1848              		.loc 1 971 0
 1849 0c5c 474B     		ldr	r3, .L126+112
 1850 0c5e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1851 0c60 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1852 0c62 0093     		str	r3, [sp]
 1853 0c64 2B46     		mov	r3, r5
 1854 0c66 4649     		ldr	r1, .L126+116
 1855 0c68 3A48     		ldr	r0, .L126+72
 1856 0c6a FFF7FEFF 		bl	ax25_sendVia
 1857              	.LVL160:
 973:../src/main.c **** 
 1858              		.loc 1 973 0
 1859 0c6e 3848     		ldr	r0, .L126+68
 1860 0c70 FFF7FEFF 		bl	afsk_txStart
 1861              	.LVL161:
 975:../src/main.c **** 
 1862              		.loc 1 975 0
 1863 0c74 434B     		ldr	r3, .L126+120
 1864 0c76 0022     		movs	r2, #0
 1865 0c78 1A70     		strb	r2, [r3]
 1866 0c7a 84E6     		b	.L64
 1867              	.L107:
 986:../src/main.c **** 			#endif
 1868              		.loc 1 986 0
 1869 0c7c 424B     		ldr	r3, .L126+124
 1870 0c7e 1968     		ldr	r1, [r3]
 1871 0c80 424B     		ldr	r3, .L126+128
 1872 0c82 1868     		ldr	r0, [r3]
 1873 0c84 FFF7FEFF 		bl	packet_tx_handler
 1874              	.LVL162:
 989:../src/main.c **** 		}
 1875              		.loc 1 989 0
 1876 0c88 414B     		ldr	r3, .L126+132
 1877 0c8a 4EF66022 		movw	r2, #60000
 1878 0c8e 1A60     		str	r2, [r3]
 1879 0c90 82E6     		b	.L65
 1880              	.L108:
 997:../src/main.c **** 			}
 1881              		.loc 1 997 0
 1882 0c92 FFF7FEFF 		bl	analog_anemometer_direction_handler
 1883              	.LVL163:
 1884 0c96 8BE6     		b	.L67
 1885              	.L66:
1002:../src/main.c **** 
 1886              		.loc 1 1002 0
 1887 0c98 13F10A0F 		cmn	r3, #10
 1888 0c9c BFF68CAE 		bge	.L68
1004:../src/main.c **** 				analog_anemometer_direction_reset();
 1889              		.loc 1 1004 0
 1890 0ca0 394B     		ldr	r3, .L126+124
 1891 0ca2 1B68     		ldr	r3, [r3]
 1892 0ca4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1893 0ca6 13F0010F 		tst	r3, #1
 1894 0caa 04D1     		bne	.L116
 1895              	.L69:
1008:../src/main.c **** 		}
 1896              		.loc 1 1008 0
 1897 0cac 394B     		ldr	r3, .L126+136
 1898 0cae 4FF47A72 		mov	r2, #1000
 1899 0cb2 1A60     		str	r2, [r3]
 1900 0cb4 80E6     		b	.L68
 1901              	.L116:
1005:../src/main.c **** 			}
 1902              		.loc 1 1005 0
 1903 0cb6 FFF7FEFF 		bl	analog_anemometer_direction_reset
 1904              	.LVL164:
 1905 0cba F7E7     		b	.L69
 1906              	.L109:
1013:../src/main.c **** 
 1907              		.loc 1 1013 0
 1908 0cbc FFF7FEFF 		bl	wx_check_force_i2c_reset
 1909              	.LVL165:
1015:../src/main.c **** 
 1910              		.loc 1 1015 0
 1911 0cc0 FFF7FEFF 		bl	wx_pwr_periodic_handle
 1912              	.LVL166:
1021:../src/main.c **** 		}
 1913              		.loc 1 1021 0
 1914 0cc4 344B     		ldr	r3, .L126+140
 1915 0cc6 4FF4FA62 		mov	r2, #2000
 1916 0cca 1A60     		str	r2, [r3]
 1917 0ccc 79E6     		b	.L70
 1918              	.L110:
1027:../src/main.c **** 			}
 1919              		.loc 1 1027 0
 1920 0cce 1D4B     		ldr	r3, .L126+56
 1921 0cd0 1A68     		ldr	r2, [r3]
 1922 0cd2 1E49     		ldr	r1, .L126+64
 1923 0cd4 2448     		ldr	r0, .L126+92
 1924 0cd6 FFF7FEFF 		bl	umb_channel_pool
 1925              	.LVL167:
 1926 0cda 7CE6     		b	.L72
 1927              	.L111:
1031:../src/main.c **** 			}
 1928              		.loc 1 1031 0
 1929 0cdc 1A4B     		ldr	r3, .L126+60
 1930 0cde 1968     		ldr	r1, [r3]
 1931 0ce0 1A48     		ldr	r0, .L126+64
 1932 0ce2 FFF7FEFF 		bl	umb_get_current_qf
 1933              	.LVL168:
 1934 0ce6 2D4B     		ldr	r3, .L126+144
 1935 0ce8 1870     		strb	r0, [r3]
 1936 0cea 7AE6     		b	.L73
 1937              	.L112:
1039:../src/main.c **** 					davis_parsers_loop(main_kiss_srl_ctx_ptr->srl_rx_buf_pointer, main_kiss_srl_ctx_ptr->srl_rx_bu
 1938              		.loc 1 1039 0
 1939 0cec 1B4B     		ldr	r3, .L126+80
 1940 0cee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1941 0cf0 012B     		cmp	r3, #1
 1942 0cf2 02D0     		beq	.L117
 1943              	.L75:
1044:../src/main.c **** 			}
 1944              		.loc 1 1044 0
 1945 0cf4 FFF7FEFF 		bl	davis_trigger_loop_packet
 1946              	.LVL169:
 1947 0cf8 82E6     		b	.L74
 1948              	.L117:
1040:../src/main.c **** 				}
 1949              		.loc 1 1040 0
 1950 0cfa 054B     		ldr	r3, .L126+4
 1951 0cfc 1B68     		ldr	r3, [r3]
 1952 0cfe 284A     		ldr	r2, .L126+148
 1953 0d00 998B     		ldrh	r1, [r3, #28]
 1954 0d02 9869     		ldr	r0, [r3, #24]
 1955 0d04 FFF7FEFF 		bl	davis_parsers_loop
 1956              	.LVL170:
 1957 0d08 F4E7     		b	.L75
 1958              	.L127:
 1959 0d0a 00BF     		.align	2
 1960              	.L126:
 1961 0d0c 00000000 		.word	.LANCHOR16
 1962 0d10 00000000 		.word	main_kiss_srl_ctx_ptr
 1963 0d14 00000000 		.word	.LANCHOR12
 1964 0d18 00000000 		.word	rte_pv_struct
 1965 0d1c 00000000 		.word	rte_pv_average
 1966 0d20 00000000 		.word	rte_pv_load_current
 1967 0d24 00000000 		.word	rte_pv_cell_voltage
 1968 0d28 00000000 		.word	rte_pv_battery_voltage
 1969 0d2c 00000000 		.word	rte_pv_battery_current
 1970 0d30 00000000 		.word	rte_pv_sys_voltage
 1971 0d34 00000000 		.word	rte_pv_last_error
 1972 0d38 00000000 		.word	rte_pv_messages_count
 1973 0d3c 00000000 		.word	rte_pv_corrupted_messages_count
 1974 0d40 00000000 		.word	main_wx_srl_ctx_ptr
 1975 0d44 00000000 		.word	.LANCHOR11
 1976 0d48 00000000 		.word	.LANCHOR17
 1977 0d4c 00000000 		.word	rte_wx_umb_context
 1978 0d50 00000000 		.word	main_afsk
 1979 0d54 00000000 		.word	main_ax25
 1980 0d58 00000000 		.word	.LANCHOR18
 1981 0d5c 00000000 		.word	rte_wx_davis_loop_packet_avaliable
 1982 0d60 00000000 		.word	.LANCHOR8
 1983 0d64 00000000 		.word	.LANCHOR13
 1984 0d68 00000000 		.word	rte_wx_umb
 1985 0d6c 00000000 		.word	.LANCHOR9
 1986 0d70 00000000 		.word	main_own_aprs_msg
 1987 0d74 00000000 		.word	main_own_aprs_msg_len
 1988 0d78 00000000 		.word	rte_rtu_pool_queue
 1989 0d7c 00000000 		.word	.LANCHOR10
 1990 0d80 00000000 		.word	main_own_path
 1991 0d84 00000000 		.word	rte_main_trigger_modbus_status
 1992 0d88 00000000 		.word	.LANCHOR5
 1993 0d8c 00000000 		.word	.LANCHOR1
 1994 0d90 00000000 		.word	.LANCHOR20
 1995 0d94 00000000 		.word	.LANCHOR21
 1996 0d98 00000000 		.word	.LANCHOR22
 1997 0d9c 00000000 		.word	rte_wx_umb_qf
 1998 0da0 00000000 		.word	rte_wx_davis_loop_content
 1999              		.cfi_endproc
 2000              	.LFE626:
 2002              		.section	.text.main_get_adc_sample,"ax",%progbits
 2003              		.align	1
 2004              		.global	main_get_adc_sample
 2005              		.syntax unified
 2006              		.thumb
 2007              		.thumb_func
 2008              		.fpu fpv4-sp-d16
 2010              	main_get_adc_sample:
 2011              	.LFB627:
1048:../src/main.c **** 		}
1049:../src/main.c **** 
1050:../src/main.c **** 
1051:../src/main.c ****     }
1052:../src/main.c ****   // Infinite loop, never return.
1053:../src/main.c **** }
1054:../src/main.c **** 
1055:../src/main.c **** uint16_t main_get_adc_sample(void) {
 2012              		.loc 1 1055 0
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
 2016              		@ link register save eliminated.
1056:../src/main.c **** 	return (uint16_t) ADC1->DR;
 2017              		.loc 1 1056 0
 2018 0000 014B     		ldr	r3, .L129
 2019 0002 186C     		ldr	r0, [r3, #64]
1057:../src/main.c **** }
 2020              		.loc 1 1057 0
 2021 0004 80B2     		uxth	r0, r0
 2022 0006 7047     		bx	lr
 2023              	.L130:
 2024              		.align	2
 2025              	.L129:
 2026 0008 00000450 		.word	1342439424
 2027              		.cfi_endproc
 2028              	.LFE627:
 2030              		.section	.text.main_service_cpu_load_ticks,"ax",%progbits
 2031              		.align	1
 2032              		.global	main_service_cpu_load_ticks
 2033              		.syntax unified
 2034              		.thumb
 2035              		.thumb_func
 2036              		.fpu fpv4-sp-d16
 2038              	main_service_cpu_load_ticks:
 2039              	.LFB628:
1058:../src/main.c **** 
1059:../src/main.c **** void main_service_cpu_load_ticks(void) {
 2040              		.loc 1 1059 0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 0
 2043              		@ frame_needed = 0, uses_anonymous_args = 0
 2044              		@ link register save eliminated.
 2045              	.LVL171:
1060:../src/main.c **** 
1061:../src/main.c **** 	uint32_t cpu_ticks_load = 0;
1062:../src/main.c **** 
1063:../src/main.c **** 	// the biggest this result will be the biggest load the CPU is handling
1064:../src/main.c **** 	cpu_ticks_load = main_idle_cpu_ticks - main_current_cpu_idle_ticks;
 2046              		.loc 1 1064 0
 2047 0000 074B     		ldr	r3, .L132
 2048 0002 1868     		ldr	r0, [r3]
 2049 0004 0749     		ldr	r1, .L132+4
 2050 0006 0B68     		ldr	r3, [r1]
 2051 0008 C21A     		subs	r2, r0, r3
 2052              	.LVL172:
1065:../src/main.c **** 
1066:../src/main.c **** 	// calculate the cpu load
1067:../src/main.c **** 	main_cpu_load = (int8_t) ((cpu_ticks_load * 100) / main_idle_cpu_ticks);
 2053              		.loc 1 1067 0
 2054 000a 6423     		movs	r3, #100
 2055 000c 03FB02F3 		mul	r3, r3, r2
 2056 0010 B3FBF0F3 		udiv	r3, r3, r0
 2057 0014 044A     		ldr	r2, .L132+8
 2058              	.LVL173:
 2059 0016 1370     		strb	r3, [r2]
1068:../src/main.c **** 
1069:../src/main.c **** 	// reset the tick counter back to zero;
1070:../src/main.c **** 	main_current_cpu_idle_ticks = 0;
 2060              		.loc 1 1070 0
 2061 0018 0023     		movs	r3, #0
 2062 001a 0B60     		str	r3, [r1]
 2063              	.LVL174:
1071:../src/main.c **** }
 2064              		.loc 1 1071 0
 2065 001c 7047     		bx	lr
 2066              	.L133:
 2067 001e 00BF     		.align	2
 2068              	.L132:
 2069 0020 00000000 		.word	.LANCHOR4
 2070 0024 00000000 		.word	.LANCHOR14
 2071 0028 00000000 		.word	.LANCHOR24
 2072              		.cfi_endproc
 2073              	.LFE628:
 2075              		.comm	GPIO_InitTypeDef,24,4
 2076              		.global	kiss10m
 2077              		.global	digidrop10m
 2078              		.global	digi10m
 2079              		.global	tx10m
 2080              		.global	rx10m
 2081              		.comm	after_tx_lock,1,1
 2082              		.global	main_crc_result
 2083              		.global	main_umb_retval
 2084              		.global	buffer_len
 2085              		.global	retval
 2086              		.global	main_symbol_s
 2087              		.global	main_symbol_f
 2088              		.comm	main_string_longitude,9,4
 2089              		.comm	main_string_latitude,9,4
 2090              		.comm	main_own_aprs_msg,160,4
 2091              		.comm	main_own_aprs_msg_len,1,1
 2092              		.global	main_own_path_ln
 2093              		.comm	main_own_path,21,4
 2094              		.comm	main_afsk,1092,4
 2095              		.comm	main_ax25,536,4
 2096              		.global	main_modbus_rtu_master_enabled
 2097              		.global	main_davis_serial_enabled
 2098              		.global	main_kiss_enabled
 2099              		.comm	main_target_wx_baudrate,4,4
 2100              		.comm	main_target_kiss_baudrate,4,4
 2101              		.comm	main_wx_srl_ctx_ptr,4,4
 2102              		.comm	main_kiss_srl_ctx_ptr,4,4
 2103              		.comm	main_wx_srl_ctx,88,4
 2104              		.comm	main_kiss_srl_ctx,88,4
 2105              		.global	main_ten_second_pool_timer
 2106              		.global	main_two_second_pool_timer
 2107              		.global	main_one_second_pool_timer
 2108              		.global	main_one_minute_pool_timer
 2109              		.global	main_wx_sensors_pool_timer
 2110              		.global	main_cpu_load
 2111              		.global	main_current_cpu_idle_ticks
 2112              		.global	main_idle_cpu_ticks
 2113              		.global	master_time
 2114              		.global	main_config_data_rtu
 2115              		.global	main_config_data_umb
 2116              		.global	main_config_data_wx_sources
 2117              		.global	main_config_data_basic
 2118              		.global	main_config_data_mode
 2119              		.section	.bss.buffer_len,"aw",%nobits
 2120              		.align	1
 2121              		.set	.LANCHOR16,. + 0
 2124              	buffer_len:
 2125 0000 0000     		.space	2
 2126              		.section	.bss.digi10m,"aw",%nobits
 2127              		.align	1
 2130              	digi10m:
 2131 0000 0000     		.space	2
 2132              		.section	.bss.digidrop10m,"aw",%nobits
 2133              		.align	1
 2136              	digidrop10m:
 2137 0000 0000     		.space	2
 2138              		.section	.bss.kiss10m,"aw",%nobits
 2139              		.align	1
 2140              		.set	.LANCHOR18,. + 0
 2143              	kiss10m:
 2144 0000 0000     		.space	2
 2145              		.section	.bss.main_config_data_basic,"aw",%nobits
 2146              		.align	2
 2147              		.set	.LANCHOR1,. + 0
 2150              	main_config_data_basic:
 2151 0000 00000000 		.space	4
 2152              		.section	.bss.main_config_data_mode,"aw",%nobits
 2153              		.align	2
 2154              		.set	.LANCHOR5,. + 0
 2157              	main_config_data_mode:
 2158 0000 00000000 		.space	4
 2159              		.section	.bss.main_config_data_rtu,"aw",%nobits
 2160              		.align	2
 2161              		.set	.LANCHOR8,. + 0
 2164              	main_config_data_rtu:
 2165 0000 00000000 		.space	4
 2166              		.section	.bss.main_config_data_umb,"aw",%nobits
 2167              		.align	2
 2168              		.set	.LANCHOR11,. + 0
 2171              	main_config_data_umb:
 2172 0000 00000000 		.space	4
 2173              		.section	.bss.main_config_data_wx_sources,"aw",%nobits
 2174              		.align	2
 2175              		.set	.LANCHOR13,. + 0
 2178              	main_config_data_wx_sources:
 2179 0000 00000000 		.space	4
 2180              		.section	.bss.main_cpu_load,"aw",%nobits
 2181              		.set	.LANCHOR24,. + 0
 2184              	main_cpu_load:
 2185 0000 00       		.space	1
 2186              		.section	.bss.main_crc_result,"aw",%nobits
 2187              		.align	2
 2188              		.set	.LANCHOR0,. + 0
 2191              	main_crc_result:
 2192 0000 00000000 		.space	4
 2193              		.section	.bss.main_current_cpu_idle_ticks,"aw",%nobits
 2194              		.align	2
 2195              		.set	.LANCHOR14,. + 0
 2198              	main_current_cpu_idle_ticks:
 2199 0000 00000000 		.space	4
 2200              		.section	.bss.main_davis_serial_enabled,"aw",%nobits
 2201              		.set	.LANCHOR7,. + 0
 2204              	main_davis_serial_enabled:
 2205 0000 00       		.space	1
 2206              		.section	.bss.main_idle_cpu_ticks,"aw",%nobits
 2207              		.align	2
 2208              		.set	.LANCHOR4,. + 0
 2211              	main_idle_cpu_ticks:
 2212 0000 00000000 		.space	4
 2213              		.section	.bss.main_modbus_rtu_master_enabled,"aw",%nobits
 2214              		.set	.LANCHOR9,. + 0
 2217              	main_modbus_rtu_master_enabled:
 2218 0000 00       		.space	1
 2219              		.section	.bss.main_own_path_ln,"aw",%nobits
 2220              		.set	.LANCHOR10,. + 0
 2223              	main_own_path_ln:
 2224 0000 00       		.space	1
 2225              		.section	.bss.master_time,"aw",%nobits
 2226              		.align	2
 2227              		.set	.LANCHOR17,. + 0
 2230              	master_time:
 2231 0000 00000000 		.space	4
 2232              		.section	.bss.rx10m,"aw",%nobits
 2233              		.align	1
 2234              		.set	.LANCHOR15,. + 0
 2237              	rx10m:
 2238 0000 0000     		.space	2
 2239              		.section	.bss.tx10m,"aw",%nobits
 2240              		.align	1
 2243              	tx10m:
 2244 0000 0000     		.space	2
 2245              		.section	.data.main_kiss_enabled,"aw",%progbits
 2246              		.set	.LANCHOR6,. + 0
 2249              	main_kiss_enabled:
 2250 0000 01       		.byte	1
 2251              		.section	.data.main_one_minute_pool_timer,"aw",%progbits
 2252              		.align	2
 2253              		.set	.LANCHOR20,. + 0
 2256              	main_one_minute_pool_timer:
 2257 0000 60EA0000 		.word	60000
 2258              		.section	.data.main_one_second_pool_timer,"aw",%progbits
 2259              		.align	2
 2260              		.set	.LANCHOR21,. + 0
 2263              	main_one_second_pool_timer:
 2264 0000 E8030000 		.word	1000
 2265              		.section	.data.main_symbol_f,"aw",%progbits
 2266              		.set	.LANCHOR2,. + 0
 2269              	main_symbol_f:
 2270 0000 2F       		.byte	47
 2271              		.section	.data.main_symbol_s,"aw",%progbits
 2272              		.set	.LANCHOR3,. + 0
 2275              	main_symbol_s:
 2276 0000 23       		.byte	35
 2277              		.section	.data.main_ten_second_pool_timer,"aw",%progbits
 2278              		.align	2
 2279              		.set	.LANCHOR23,. + 0
 2282              	main_ten_second_pool_timer:
 2283 0000 10270000 		.word	10000
 2284              		.section	.data.main_two_second_pool_timer,"aw",%progbits
 2285              		.align	2
 2286              		.set	.LANCHOR22,. + 0
 2289              	main_two_second_pool_timer:
 2290 0000 D0070000 		.word	2000
 2291              		.section	.data.main_umb_retval,"aw",%progbits
 2294              	main_umb_retval:
 2295 0000 7F       		.byte	127
 2296              		.section	.data.main_wx_sensors_pool_timer,"aw",%progbits
 2297              		.align	2
 2298              		.set	.LANCHOR19,. + 0
 2301              	main_wx_sensors_pool_timer:
 2302 0000 DCFF0000 		.word	65500
 2303              		.section	.data.retval,"aw",%progbits
 2304              		.set	.LANCHOR12,. + 0
 2307              	retval:
 2308 0000 64       		.byte	100
 2309              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2310              		.align	2
 2311              	.LC0:
 2312 0000 3D257325 		.ascii	"=%s%c%c%s%c%c %s\000"
 2312      63256325 
 2312      73256325 
 2312      63202573 
 2312      00
 2313              		.text
 2314              	.Letext0:
 2315              		.file 6 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 2316              		.file 7 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 2317              		.file 8 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 2318              		.file 9 "../system/include/aprs/cfifo.h"
 2319              		.file 10 "../system/include/aprs/afsk.h"
 2320              		.file 11 "../system/include/aprs/ax25.h"
 2321              		.file 12 "../system/include/drivers/serial.h"
 2322              		.file 13 "../include/config_data.h"
 2323              		.file 14 "../include/main.h"
 2324              		.file 15 "../include/delay.h"
 2325              		.file 16 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 2326              		.file 17 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 2327              		.file 18 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/st
 2328              		.file 19 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 2329              		.file 20 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 2330              		.file 21 "../include/config_data_externs.h"
 2331              		.file 22 "../include/configuration_handler.h"
 2332              		.file 23 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/unistd.h"
 2333              		.file 24 "../system/include/./drivers/dallas.h"
 2334              		.file 25 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 2335              		.file 26 "../system/include/./drivers/ms5611.h"
 2336              		.file 27 "../system/include/./umb_master/umb_qf_t.h"
 2337              		.file 28 "../system/include/./ve_direct_protocol/raw_struct.h"
 2338              		.file 29 "../system/include/./ve_direct_protocol/average_struct.h"
 2339              		.file 30 "../system/include/drivers/analog_anemometer.h"
 2340              		.file 31 "../system/include/davis_vantage/davis_qf_t.h"
 2341              		.file 32 "../system/include/davis_vantage/davis_loop_t.h"
 2342              		.file 33 "../system/include/umb_master/umb_frame_t.h"
 2343              		.file 34 "../system/include/umb_master/umb_retval_t.h"
 2344              		.file 35 "../system/include/umb_master/umb_state_t.h"
 2345              		.file 36 "../system/include/umb_master/umb_context_t.h"
 2346              		.file 37 "../system/include/umb_master/umb_call_reason.h"
 2347              		.file 38 "../system/include/drivers/bme280.h"
 2348              		.file 39 "../include/rte_wx.h"
 2349              		.file 40 "../include/rte_pv.h"
 2350              		.file 41 "../include/rte_main.h"
 2351              		.file 42 "../system/include/modbus_rtu/rtu_register_data_t.h"
 2352              		.file 43 "../system/include/modbus_rtu/rtu_exception_t.h"
 2353              		.file 44 "../system/include/modbus_rtu/rtu_pool_queue_t.h"
 2354              		.file 45 "../include/rte_rtu.h"
 2355              		.file 46 "../include/wx_handler.h"
 2356              		.file 47 "../system/include/drivers/i2c.h"
 2357              		.file 48 "../src/../system/include/modbus_rtu/rtu_serial_io.h"
 2358              		.file 49 "../src/../system/include/davis_vantage/davis.h"
 2359              		.file 50 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_cortex.h"
 2360              		.file 51 "../include/KissCommunication.h"
 2361              		.file 52 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
 2362              		.file 53 "../include/float_to_string.h"
 2363              		.file 54 "../src/io.h"
 2364              		.file 55 "../include/PathConfig.h"
 2365              		.file 56 "../system/include/aprs/dac.h"
 2366              		.file 57 "../system/include/aprs/digi.h"
 2367              		.file 58 "../include/it_handlers.h"
 2368              		.file 59 "../system/include/aprs/afsk_pr.h"
 2369              		.file 60 "../include/TimerConfig.h"
 2370              		.file 61 "../system/include/umb_master/umb_master.h"
 2371              		.file 62 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 2372              		.file 63 "../system/include/ve_direct_protocol/parser.h"
 2373              		.file 64 "../system/include/aprs/beacon.h"
 2374              		.file 65 "../system/include/umb_master/umb_0x26_status.h"
 2375              		.file 66 "../system/include/aprs/wx.h"
 2376              		.file 67 "../include/packet_tx_handler.h"
 2377              		.file 68 "../system/include/umb_master/umb_channel_pool.h"
 2378              		.file 69 "../src/../system/include/davis_vantage/davis_parsers.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccieAMnf.s:18     .text.message_callback:0000000000000000 $t
     /tmp/ccieAMnf.s:24     .text.message_callback:0000000000000000 message_callback
     /tmp/ccieAMnf.s:39     .text.main:0000000000000000 $t
     /tmp/ccieAMnf.s:46     .text.main:0000000000000000 main
     /tmp/ccieAMnf.s:341    .text.main:00000000000001d4 $d
     /tmp/ccieAMnf.s:349    .text.main:00000000000001dc $d
                            *COM*:00000000000000a0 main_own_aprs_msg
                            *COM*:0000000000000009 main_string_latitude
                            *COM*:0000000000000009 main_string_longitude
     /tmp/ccieAMnf.s:363    .text.main:000000000000020c $t
     /tmp/ccieAMnf.s:766    .text.main:000000000000048c $d
                            *COM*:0000000000000018 GPIO_InitTypeDef
                            *COM*:0000000000000004 main_kiss_srl_ctx_ptr
                            *COM*:0000000000000058 main_kiss_srl_ctx
                            *COM*:0000000000000004 main_wx_srl_ctx_ptr
                            *COM*:0000000000000058 main_wx_srl_ctx
                            *COM*:0000000000000004 main_target_kiss_baudrate
                            *COM*:0000000000000004 main_target_wx_baudrate
                            *COM*:0000000000000015 main_own_path
                            *COM*:0000000000000444 main_afsk
                            *COM*:0000000000000218 main_ax25
     /tmp/ccieAMnf.s:793    .text.main:00000000000004f0 $t
     /tmp/ccieAMnf.s:1184   .text.main:0000000000000764 $d
                            *COM*:0000000000000001 main_own_aprs_msg_len
     /tmp/ccieAMnf.s:1231   .text.main:0000000000000810 $t
     /tmp/ccieAMnf.s:1576   .text.main:0000000000000a5c $d
     /tmp/ccieAMnf.s:1608   .text.main:0000000000000ad0 $t
     /tmp/ccieAMnf.s:1961   .text.main:0000000000000d0c $d
     /tmp/ccieAMnf.s:2003   .text.main_get_adc_sample:0000000000000000 $t
     /tmp/ccieAMnf.s:2010   .text.main_get_adc_sample:0000000000000000 main_get_adc_sample
     /tmp/ccieAMnf.s:2026   .text.main_get_adc_sample:0000000000000008 $d
     /tmp/ccieAMnf.s:2031   .text.main_service_cpu_load_ticks:0000000000000000 $t
     /tmp/ccieAMnf.s:2038   .text.main_service_cpu_load_ticks:0000000000000000 main_service_cpu_load_ticks
     /tmp/ccieAMnf.s:2069   .text.main_service_cpu_load_ticks:0000000000000020 $d
     /tmp/ccieAMnf.s:2143   .bss.kiss10m:0000000000000000 kiss10m
     /tmp/ccieAMnf.s:2136   .bss.digidrop10m:0000000000000000 digidrop10m
     /tmp/ccieAMnf.s:2130   .bss.digi10m:0000000000000000 digi10m
     /tmp/ccieAMnf.s:2243   .bss.tx10m:0000000000000000 tx10m
     /tmp/ccieAMnf.s:2237   .bss.rx10m:0000000000000000 rx10m
                            *COM*:0000000000000001 after_tx_lock
     /tmp/ccieAMnf.s:2191   .bss.main_crc_result:0000000000000000 main_crc_result
     /tmp/ccieAMnf.s:2294   .data.main_umb_retval:0000000000000000 main_umb_retval
     /tmp/ccieAMnf.s:2124   .bss.buffer_len:0000000000000000 buffer_len
     /tmp/ccieAMnf.s:2307   .data.retval:0000000000000000 retval
     /tmp/ccieAMnf.s:2275   .data.main_symbol_s:0000000000000000 main_symbol_s
     /tmp/ccieAMnf.s:2269   .data.main_symbol_f:0000000000000000 main_symbol_f
     /tmp/ccieAMnf.s:2223   .bss.main_own_path_ln:0000000000000000 main_own_path_ln
     /tmp/ccieAMnf.s:2217   .bss.main_modbus_rtu_master_enabled:0000000000000000 main_modbus_rtu_master_enabled
     /tmp/ccieAMnf.s:2204   .bss.main_davis_serial_enabled:0000000000000000 main_davis_serial_enabled
     /tmp/ccieAMnf.s:2249   .data.main_kiss_enabled:0000000000000000 main_kiss_enabled
     /tmp/ccieAMnf.s:2282   .data.main_ten_second_pool_timer:0000000000000000 main_ten_second_pool_timer
     /tmp/ccieAMnf.s:2289   .data.main_two_second_pool_timer:0000000000000000 main_two_second_pool_timer
     /tmp/ccieAMnf.s:2263   .data.main_one_second_pool_timer:0000000000000000 main_one_second_pool_timer
     /tmp/ccieAMnf.s:2256   .data.main_one_minute_pool_timer:0000000000000000 main_one_minute_pool_timer
     /tmp/ccieAMnf.s:2301   .data.main_wx_sensors_pool_timer:0000000000000000 main_wx_sensors_pool_timer
     /tmp/ccieAMnf.s:2184   .bss.main_cpu_load:0000000000000000 main_cpu_load
     /tmp/ccieAMnf.s:2198   .bss.main_current_cpu_idle_ticks:0000000000000000 main_current_cpu_idle_ticks
     /tmp/ccieAMnf.s:2211   .bss.main_idle_cpu_ticks:0000000000000000 main_idle_cpu_ticks
     /tmp/ccieAMnf.s:2230   .bss.master_time:0000000000000000 master_time
     /tmp/ccieAMnf.s:2164   .bss.main_config_data_rtu:0000000000000000 main_config_data_rtu
     /tmp/ccieAMnf.s:2171   .bss.main_config_data_umb:0000000000000000 main_config_data_umb
     /tmp/ccieAMnf.s:2178   .bss.main_config_data_wx_sources:0000000000000000 main_config_data_wx_sources
     /tmp/ccieAMnf.s:2150   .bss.main_config_data_basic:0000000000000000 main_config_data_basic
     /tmp/ccieAMnf.s:2157   .bss.main_config_data_mode:0000000000000000 main_config_data_mode
     /tmp/ccieAMnf.s:2120   .bss.buffer_len:0000000000000000 $d
     /tmp/ccieAMnf.s:2127   .bss.digi10m:0000000000000000 $d
     /tmp/ccieAMnf.s:2133   .bss.digidrop10m:0000000000000000 $d
     /tmp/ccieAMnf.s:2139   .bss.kiss10m:0000000000000000 $d
     /tmp/ccieAMnf.s:2146   .bss.main_config_data_basic:0000000000000000 $d
     /tmp/ccieAMnf.s:2153   .bss.main_config_data_mode:0000000000000000 $d
     /tmp/ccieAMnf.s:2160   .bss.main_config_data_rtu:0000000000000000 $d
     /tmp/ccieAMnf.s:2167   .bss.main_config_data_umb:0000000000000000 $d
     /tmp/ccieAMnf.s:2174   .bss.main_config_data_wx_sources:0000000000000000 $d
     /tmp/ccieAMnf.s:2185   .bss.main_cpu_load:0000000000000000 $d
     /tmp/ccieAMnf.s:2187   .bss.main_crc_result:0000000000000000 $d
     /tmp/ccieAMnf.s:2194   .bss.main_current_cpu_idle_ticks:0000000000000000 $d
     /tmp/ccieAMnf.s:2205   .bss.main_davis_serial_enabled:0000000000000000 $d
     /tmp/ccieAMnf.s:2207   .bss.main_idle_cpu_ticks:0000000000000000 $d
     /tmp/ccieAMnf.s:2218   .bss.main_modbus_rtu_master_enabled:0000000000000000 $d
     /tmp/ccieAMnf.s:2224   .bss.main_own_path_ln:0000000000000000 $d
     /tmp/ccieAMnf.s:2226   .bss.master_time:0000000000000000 $d
     /tmp/ccieAMnf.s:2233   .bss.rx10m:0000000000000000 $d
     /tmp/ccieAMnf.s:2240   .bss.tx10m:0000000000000000 $d
     /tmp/ccieAMnf.s:2252   .data.main_one_minute_pool_timer:0000000000000000 $d
     /tmp/ccieAMnf.s:2259   .data.main_one_second_pool_timer:0000000000000000 $d
     /tmp/ccieAMnf.s:2278   .data.main_ten_second_pool_timer:0000000000000000 $d
     /tmp/ccieAMnf.s:2285   .data.main_two_second_pool_timer:0000000000000000 $d
     /tmp/ccieAMnf.s:2297   .data.main_wx_sensors_pool_timer:0000000000000000 $d
     /tmp/ccieAMnf.s:2310   .rodata.main.str1.4:0000000000000000 $d
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.station_config_target_hw.h.9.a20e080416e80d1cff9c1b51cc464832
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.b6144e50d34fc998dd4c2cfb6387cf91
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.c14bec61d389910444dd6f90923a87b3
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.stm32l4xx_hal_def.h.58.ba9880fce6c06e05c42ff3652190ba19
                           .group:0000000000000000 wm4.stm32l4xx_hal_cortex.h.92.09331db2eadd7e54217ce5767ac22693
                           .group:0000000000000000 wm4.stm32l4xx_ll_iwdg.h.22.ce71c09b15c76497ab9cb3a8a8734a5a
                           .group:0000000000000000 wm4.stm32l4xx_ll_rcc.h.22.3702bcd372271b9dd515b458d35bb2ae
                           .group:0000000000000000 wm4.stm32l4xx_ll_gpio.h.22.6ea69d1eee1200f6e0d48e871aaa811d
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.macros.h.2.7a7a5ac48d4160b7481c806e80b68442
                           .group:0000000000000000 wm4.config.h.2.f5e96167cb26b0ce97c5e7513a95bc8b
                           .group:0000000000000000 wm4.afsk.h.17.cf8f922069680e152e1eddb76cd4cc82
                           .group:0000000000000000 wm4.ax25.h.18.077e42a4af9016476e34900472a8fe18
                           .group:0000000000000000 wm4.stm32l4xx_ll_usart.h.22.ec2beebcd146668c5b35749264d7b58a
                           .group:0000000000000000 wm4.serial.h.14.eed7cf013c382ed4598746b40f0e2523
                           .group:0000000000000000 wm4.config_data.h.9.6026a38cd2f39158a8fd50707ba1bf90
                           .group:0000000000000000 wm4.main.h.8.42cf439a5d154d59d134d46c01c2e721
                           .group:0000000000000000 wm4.LedConfig.h.9.4d8a7e6bb86dda658c789f8aaf01aaee
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.cdefs.h.47.7eec48e1bc15e3b0aff1089c232f5a9c
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:0000000000000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:0000000000000000 wm4.station_config.h.9.d547169434a316afe56104ac612d2109
                           .group:0000000000000000 wm4.unistd.h.2.39165d5b7784d1815ef4b0c4be6df560
                           .group:0000000000000000 wm4.unistd.h.170.da6e816043042c61475c2b1f58468b37
                           .group:0000000000000000 wm4.antilib_adc.h.10.beb33c5f49564637478b9d419893c0dd
                           .group:0000000000000000 wm4.digi.h.14.769ea2ae98162dd36806ccf4982c3c8a
                           .group:0000000000000000 wm4.dallas.h.9.67a8cfc0b128d7b4f1ab07251516b59e
                           .group:0000000000000000 wm4.math.h.13.adb102f7bd7860b1f241e149d6914a1e
                           .group:0000000000000000 wm4.ms5611.h.13.84fbf6afa85557f675e3d85f1be6067c
                           .group:0000000000000000 wm4.average_struct.h.9.41820d0d7dc25dca8a9005c6d1a8bb5f
                           .group:0000000000000000 wm4.telemetry.h.21.a87436b8ee86f5e60170454e063be1e3
                           .group:0000000000000000 wm4.parser.h.9.2d68c8669e0bffa77926bbb9bf5a2aba
                           .group:0000000000000000 wm4.analog_anemometer.h.9.8c21570f6fc3dcd7763ba4d0d5168e3c
                           .group:0000000000000000 wm4.umb_frame_t.h.9.05796095a57acd1575f07118cb6ab058
                           .group:0000000000000000 wm4.umb_defines.h.9.77e79b84cd2dd9a74204aaeb1ca9d6be
                           .group:0000000000000000 wm4.bme280.h.9.aefe05f9329372f30337537cea488dce
                           .group:0000000000000000 wm4.rte_wx.h.30.cb80bd87f9fae81b43459954f1781e96
                           .group:0000000000000000 wm4.rtu_configuration.h.9.225559723a46d58da796e0ac6cb0b2ac
                           .group:0000000000000000 wm4.wx_handler.h.9.70f7141466ac521f5731794f4f690a16
                           .group:0000000000000000 wm4.davis_retval_def.h.9.025968613fbef7aa10339676702cdb4e
                           .group:0000000000000000 wm4.davis.h.18.aa92228551d9a3484fe55d6024d1b87b
                           .group:0000000000000000 wm4.davis_parsers.h.15.1cf20b7725fbc6387ea18eb1ec35046c
                           .group:0000000000000000 wm4.KissCommunication.h.17.f1e76db053f07badac1040f3bea74fb3

UNDEFINED SYMBOLS
memset
SystemClock_Config
SystemCoreClockUpdate
HAL_NVIC_SetPriorityGrouping
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
rte_wx_init
rte_rtu_init
configuration_handler_check_crc
configuration_get_register
configuration_handler_restore_default_first
configuration_set_bits_register
HAL_NVIC_SystemReset
configuration_handler_restore_default_second
configuration_clear_bits_register
configuration_handler_load_configuration
float_to_string
SystemCoreClock
rte_main_reboot_req
config_data_pgm_cntr_first
config_data_pgm_cntr_second
delay_set
io_oc_init
wx_pwr_init
wx_pwr_periodic_handle
delay_fixed_with_count
LL_GPIO_Init
srl_init
ConfigPath
i2cConfigure
led_init
AFSK_Init
ax25_init
DA_Init
io_ext_watchdog_config
digi_init
it_handlers_set_priorities
ADCStartConfig
DACStartConfig
srl_receive_data
io_oc_output_low
TimerConfig
io_ext_watchdog_service
srl_usart1_tx_buffer
srl_usart1_rx_buffer
srl_usart2_tx_buffer
srl_usart2_rx_buffer
srl_switch_timeout
davis_init
davis_wake_up
davis_control_backlight
delay_fixed
davis_trigger_rxcheck_packet
rtu_serial_init
srl_switch_tx_delay
rtu_serial_start
dallas_init
umb_master_init
analog_anemometer_init
ms5611_reset
ms5611_read_calibration
ms5611_trigger_measure
bme280_reset
bme280_setup
bme280_read_calibration
sprintf
ax25_sendVia_toBuffer
srl_start_tx
wx_get_all_measurements
ve_direct_parser_init
beacon_send_own
umb_0x26_status_request
rte_wx_davis_station_avaliable
rte_rtu_pool_queue
rte_wx_dallas_average
rte_wx_umb_context
rte_wx_ms5611_qf
SensorCalData
rte_wx_bme280_qf
bme280_calibration_data
rte_pv_average
rte_pv_struct
rte_wx_umb
srl_wait_for_tx_completion
SendWXFrameToBuffer
digi_process
SendKISSToHost
wx_pool_anemometer
rte_wx_humidity
rte_wx_average_winddirection
rte_wx_max_windspeed
rte_wx_average_windspeed
rte_wx_pressure_valid
rte_wx_temperature_average_external_valid
ax25_new_msg_rx_flag
ax25_rxed_frame
rte_main_trigger_modbus_status
srl_get_rx_buffer
ve_direct_cut_to_checksum
ve_direct_validate_checksum
ve_direct_parse_to_raw_struct
ve_direct_add_to_average
ve_direct_get_averages
ve_direct_set_sys_voltage
ve_direct_store_errors
umb_pooling_handler
srl_get_num_bytes_rxed
ParseReceivedKISS
davis_loop_packet_pooler
davis_rxcheck_packet_pooler
rtu_serial_pool
rtu_serial_get_status_string
ax25_sendVia
afsk_txStart
packet_tx_handler
analog_anemometer_direction_handler
analog_anemometer_direction_reset
wx_check_force_i2c_reset
umb_channel_pool
umb_get_current_qf
davis_trigger_loop_packet
davis_parsers_loop
rte_pv_load_current
rte_pv_cell_voltage
rte_pv_battery_voltage
rte_pv_battery_current
rte_pv_sys_voltage
rte_pv_last_error
rte_pv_messages_count
rte_pv_corrupted_messages_count
rte_wx_davis_loop_packet_avaliable
rte_wx_umb_qf
rte_wx_davis_loop_content
