   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.message_callback,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	message_callback:
  25              	.LFB625:
  26              		.file 1 "../src/main.c"
   1:../src/main.c **** #include "station_config_target_hw.h"
   2:../src/main.c **** 
   3:../src/main.c **** #ifdef STM32F10X_MD_VL
   4:../src/main.c **** #include <stm32f10x_rcc.h>
   5:../src/main.c **** #include <stm32f10x_iwdg.h>
   6:../src/main.c **** #include <stm32f10x.h>
   7:../src/main.c **** #include <drivers/gpio_conf_stm32f1x.h>
   8:../src/main.c **** #endif
   9:../src/main.c **** 
  10:../src/main.c **** #ifdef STM32L471xx
  11:../src/main.c **** #include <stm32l4xx.h>
  12:../src/main.c **** #include <stm32l4xx_ll_iwdg.h>
  13:../src/main.c **** #include <stm32l4xx_ll_rcc.h>
  14:../src/main.c **** #include <stm32l4xx_ll_gpio.h>
  15:../src/main.c **** #endif
  16:../src/main.c **** 
  17:../src/main.c **** #include <delay.h>
  18:../src/main.c **** #include <LedConfig.h>
  19:../src/main.c **** #include <stdio.h>
  20:../src/main.c **** #include <stdlib.h>
  21:../src/main.c **** #include <string.h>
  22:../src/main.c **** 
  23:../src/main.c **** #include "main.h"
  24:../src/main.c **** #include "packet_tx_handler.h"
  25:../src/main.c **** 
  26:../src/main.c **** #include "station_config.h"
  27:../src/main.c **** #include "config_data_externs.h"
  28:../src/main.c **** #include "configuration_handler.h"
  29:../src/main.c **** 
  30:../src/main.c **** #include "diag/Trace.h"
  31:../src/main.c **** #include "antilib_adc.h"
  32:../src/main.c **** #include "afsk_pr.h"
  33:../src/main.c **** #include "TimerConfig.h"
  34:../src/main.c **** #include "PathConfig.h"
  35:../src/main.c **** #include "LedConfig.h"
  36:../src/main.c **** #include "io.h"
  37:../src/main.c **** #include "float_to_string.h"
  38:../src/main.c **** 
  39:../src/main.c **** #include "it_handlers.h"
  40:../src/main.c **** 
  41:../src/main.c **** #include "aprs/digi.h"
  42:../src/main.c **** #include "aprs/telemetry.h"
  43:../src/main.c **** #include "aprs/dac.h"
  44:../src/main.c **** #include "aprs/beacon.h"
  45:../src/main.c **** 
  46:../src/main.c **** #include "ve_direct_protocol/parser.h"
  47:../src/main.c **** 
  48:../src/main.c **** #include "rte_wx.h"
  49:../src/main.c **** #include "rte_pv.h"
  50:../src/main.c **** #include "rte_main.h"
  51:../src/main.c **** #include "rte_rtu.h"
  52:../src/main.c **** 
  53:../src/main.c **** #include <wx_handler.h>
  54:../src/main.c **** #include "drivers/dallas.h"
  55:../src/main.c **** #include "drivers/i2c.h"
  56:../src/main.c **** #include "drivers/analog_anemometer.h"
  57:../src/main.c **** #include "aprs/wx.h"
  58:../src/main.c **** 
  59:../src/main.c **** #include "../system/include/modbus_rtu/rtu_serial_io.h"
  60:../src/main.c **** 
  61:../src/main.c **** #include "../system/include/davis_vantage/davis.h"
  62:../src/main.c **** #include "../system/include/davis_vantage/davis_parsers.h"
  63:../src/main.c **** 
  64:../src/main.c **** #include "drivers/ms5611.h"
  65:../src/main.c **** #include <drivers/bme280.h>
  66:../src/main.c **** 
  67:../src/main.c **** #include "umb_master/umb_master.h"
  68:../src/main.c **** #include "umb_master/umb_channel_pool.h"
  69:../src/main.c **** #include "umb_master/umb_0x26_status.h"
  70:../src/main.c **** 
  71:../src/main.c **** #include "drivers/dallas.h"
  72:../src/main.c **** 
  73:../src/main.c **** #include "KissCommunication.h"
  74:../src/main.c **** 
  75:../src/main.c **** #define SOH 0x01
  76:../src/main.c **** 
  77:../src/main.c **** 
  78:../src/main.c **** //#define SERIAL_TX_TEST_MODE
  79:../src/main.c **** 
  80:../src/main.c **** // Niebieska dioda -> DCD
  81:../src/main.c **** // Zielona dioda -> anemometr albo TX
  82:../src/main.c **** 
  83:../src/main.c **** // backup registers
  84:../src/main.c **** // 2 -> 4bit hard-faults | 4bit boot-counter
  85:../src/main.c **** // 3 -> hard fault PC LSB
  86:../src/main.c **** // 4 -> hard fault PC MSB
  87:../src/main.c **** // 5 -> hard fault LR LSB
  88:../src/main.c **** // 6 -> hard fault LR MSB
  89:../src/main.c **** 
  90:../src/main.c **** #define CONFIG_FIRST_RESTORED 			(1)
  91:../src/main.c **** #define CONFIG_FIRST_FAIL_RESTORING	  	(1 << 1)
  92:../src/main.c **** #define CONFIG_FIRST_CRC_OK				(1 << 2)
  93:../src/main.c **** 
  94:../src/main.c **** #define CONFIG_SECOND_RESTORED 				(1 << 3)
  95:../src/main.c **** #define CONFIG_SECOND_FAIL_RESTORING	  	(1 << 4)
  96:../src/main.c **** #define CONFIG_SECOND_CRC_OK				(1 << 5)
  97:../src/main.c **** 
  98:../src/main.c **** // ----- main() ---------------------------------------------------------------
  99:../src/main.c **** 
 100:../src/main.c **** // Sample pragmas to cope with warnings. Please note the related line at
 101:../src/main.c **** // the end of this function, used to pop the compiler diagnostics status.
 102:../src/main.c **** #pragma GCC diagnostic push
 103:../src/main.c **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 104:../src/main.c **** #pragma GCC diagnostic ignored "-Wmissing-declarations"
 105:../src/main.c **** #pragma GCC diagnostic ignored "-Wreturn-type"
 106:../src/main.c **** #pragma GCC diagnostic ignored "-Wempty-body"
 107:../src/main.c **** 
 108:../src/main.c **** // used configuration structures
 109:../src/main.c **** const config_data_mode_t * main_config_data_mode = 0;
 110:../src/main.c **** const config_data_basic_t * main_config_data_basic = 0;
 111:../src/main.c **** const config_data_wx_sources_t * main_config_data_wx_sources = 0;
 112:../src/main.c **** const config_data_umb_t * main_config_data_umb = 0;
 113:../src/main.c **** const config_data_rtu_t * main_config_data_rtu = 0;
 114:../src/main.c **** 
 115:../src/main.c **** // global variable incremented by the SysTick handler to measure time in miliseconds
 116:../src/main.c **** uint32_t master_time = 0;
 117:../src/main.c **** 
 118:../src/main.c **** // this global variable stores numbers of ticks of idling CPU
 119:../src/main.c **** uint32_t main_idle_cpu_ticks = 0;
 120:../src/main.c **** 
 121:../src/main.c **** // current cpu idle ticks
 122:../src/main.c **** uint32_t main_current_cpu_idle_ticks = 0;
 123:../src/main.c **** 
 124:../src/main.c **** // approx cpu load in percents
 125:../src/main.c **** int8_t main_cpu_load = 0;
 126:../src/main.c **** 
 127:../src/main.c **** // global variable used as a timer to trigger meteo sensors mesurements
 128:../src/main.c **** int32_t main_wx_sensors_pool_timer = 65500;
 129:../src/main.c **** 
 130:../src/main.c **** // global variable used as a timer to trigger packet sending
 131:../src/main.c **** int32_t main_one_minute_pool_timer = 60000;
 132:../src/main.c **** 
 133:../src/main.c **** // one second pool interval
 134:../src/main.c **** int32_t main_one_second_pool_timer = 1000;
 135:../src/main.c **** 
 136:../src/main.c **** // two second pool interval
 137:../src/main.c **** int32_t main_two_second_pool_timer = 2000;
 138:../src/main.c **** 
 139:../src/main.c **** // ten second pool interval
 140:../src/main.c **** int32_t main_ten_second_pool_timer = 10000;
 141:../src/main.c **** 
 142:../src/main.c **** // serial context for UART used to KISS
 143:../src/main.c **** srl_context_t main_kiss_srl_ctx;
 144:../src/main.c **** 
 145:../src/main.c **** // serial context for UART used for comm with wx sensors
 146:../src/main.c **** srl_context_t main_wx_srl_ctx;
 147:../src/main.c **** 
 148:../src/main.c **** // a pointer to KISS context
 149:../src/main.c **** srl_context_t* main_kiss_srl_ctx_ptr;
 150:../src/main.c **** 
 151:../src/main.c **** // a pointer to wx comms context
 152:../src/main.c **** srl_context_t* main_wx_srl_ctx_ptr;
 153:../src/main.c **** 
 154:../src/main.c **** // target USART1 (kiss) baudrate
 155:../src/main.c **** uint32_t main_target_kiss_baudrate;
 156:../src/main.c **** 
 157:../src/main.c **** // target USART2 (wx) baudrate
 158:../src/main.c **** uint32_t main_target_wx_baudrate;
 159:../src/main.c **** 
 160:../src/main.c **** // controls if the KISS modem is enabled
 161:../src/main.c **** uint8_t main_kiss_enabled = 1;
 162:../src/main.c **** 
 163:../src/main.c **** // controls if DAVIS serialprotocol client is enabled by the configuration
 164:../src/main.c **** uint8_t main_davis_serial_enabled = 0;
 165:../src/main.c **** 
 166:../src/main.c **** uint8_t main_modbus_rtu_master_enabled = 0;
 167:../src/main.c **** 
 168:../src/main.c **** // global variables represending the AX25/APRS stack
 169:../src/main.c **** AX25Ctx main_ax25;
 170:../src/main.c **** Afsk main_afsk;
 171:../src/main.c **** 
 172:../src/main.c **** 
 173:../src/main.c **** AX25Call main_own_path[3];
 174:../src/main.c **** uint8_t main_own_path_ln = 0;
 175:../src/main.c **** uint8_t main_own_aprs_msg_len;
 176:../src/main.c **** char main_own_aprs_msg[OWN_APRS_MSG_LN];
 177:../src/main.c **** 
 178:../src/main.c **** char main_string_latitude[9];
 179:../src/main.c **** char main_string_longitude[9];
 180:../src/main.c **** 
 181:../src/main.c **** char main_symbol_f = '/';
 182:../src/main.c **** char main_symbol_s = '#';
 183:../src/main.c **** 
 184:../src/main.c **** // global variable used to store return value from various functions
 185:../src/main.c **** volatile uint8_t retval = 100;
 186:../src/main.c **** 
 187:../src/main.c **** uint16_t buffer_len = 0;
 188:../src/main.c **** 
 189:../src/main.c **** // return value from UMB related functions
 190:../src/main.c **** umb_retval_t main_umb_retval = UMB_UNINITIALIZED;
 191:../src/main.c **** 
 192:../src/main.c **** // result of CRC calculation
 193:../src/main.c **** uint32_t main_crc_result = 0;
 194:../src/main.c **** 
 195:../src/main.c **** char after_tx_lock;
 196:../src/main.c **** 
 197:../src/main.c **** unsigned short rx10m = 0, tx10m = 0, digi10m = 0, digidrop10m = 0, kiss10m = 0;
 198:../src/main.c **** 
 199:../src/main.c **** #if defined(PARAMETEO)
 200:../src/main.c **** LL_GPIO_InitTypeDef GPIO_InitTypeDef;
 201:../src/main.c **** #endif
 202:../src/main.c **** 
 203:../src/main.c **** static void message_callback(struct AX25Msg *msg) {
  27              		.loc 1 203 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 204:../src/main.c **** 
 205:../src/main.c **** }
  33              		.loc 1 205 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE625:
  38              		.section	.text.main,"ax",%progbits
  39              		.align	1
  40              		.global	main
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	main:
  47              	.LFB626:
 206:../src/main.c **** 
 207:../src/main.c **** int main(int argc, char* argv[]){
  48              		.loc 1 207 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 8
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              	.LVL1:
  53 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  54              		.cfi_def_cfa_offset 24
  55              		.cfi_offset 4, -24
  56              		.cfi_offset 5, -20
  57              		.cfi_offset 6, -16
  58              		.cfi_offset 7, -12
  59              		.cfi_offset 8, -8
  60              		.cfi_offset 14, -4
  61 0004 88B0     		sub	sp, sp, #32
  62              		.cfi_def_cfa_offset 56
 208:../src/main.c **** 
 209:../src/main.c ****   int32_t ln = 0;
  63              		.loc 1 209 0
  64 0006 0024     		movs	r4, #0
  65 0008 0794     		str	r4, [sp, #28]
  66              	.LVL2:
 210:../src/main.c **** 
 211:../src/main.c ****   uint8_t button_inhibit = 0;
 212:../src/main.c **** 
 213:../src/main.c ****   memset(main_own_aprs_msg, 0x00, OWN_APRS_MSG_LN);
  67              		.loc 1 213 0
  68 000a A022     		movs	r2, #160
  69 000c 2146     		mov	r1, r4
  70              	.LVL3:
  71 000e 6648     		ldr	r0, .L116
  72              	.LVL4:
  73 0010 FFF7FEFF 		bl	memset
  74              	.LVL5:
 214:../src/main.c **** 
 215:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 216:../src/main.c ****   RCC->APB1ENR |= (RCC_APB1ENR_TIM2EN | RCC_APB1ENR_TIM3EN | RCC_APB1ENR_TIM7EN | RCC_APB1ENR_TIM4E
 217:../src/main.c ****   RCC->APB2ENR |= (RCC_APB2ENR_IOPAEN | RCC_APB2ENR_IOPBEN | RCC_APB2ENR_IOPCEN | RCC_APB2ENR_IOPDE
 218:../src/main.c ****   RCC->AHBENR |= RCC_AHBENR_CRCEN;
 219:../src/main.c **** 
 220:../src/main.c ****   NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
 221:../src/main.c **** 
 222:../src/main.c ****   // choosing the signal source for the SysTick timer.
 223:../src/main.c ****   SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK);
 224:../src/main.c **** 
 225:../src/main.c ****   // Configuring the SysTick timer to generate interrupt 100x per second (one interrupt = 10ms)
 226:../src/main.c ****   SysTick_Config(SystemCoreClock / SYSTICK_TICKS_PER_SECONDS);
 227:../src/main.c **** 
 228:../src/main.c ****   // setting an Systick interrupt priority
 229:../src/main.c ****   NVIC_SetPriority(SysTick_IRQn, 5);
 230:../src/main.c **** 
 231:../src/main.c ****   // enable access to BKP registers
 232:../src/main.c ****   RCC->APB1ENR |= (RCC_APB1ENR_PWREN | RCC_APB1ENR_BKPEN);
 233:../src/main.c ****   PWR->CR |= PWR_CR_DBP;
 234:../src/main.c **** 
 235:../src/main.c ****   // read current number of boot cycles
 236:../src/main.c ****   rte_main_boot_cycles = (uint8_t)(BKP->DR2 & 0xFF);
 237:../src/main.c **** 
 238:../src/main.c ****   // read current number of hard faults
 239:../src/main.c ****   rte_main_hard_faults = (uint8_t)((BKP->DR2 & 0xFF00) >> 8);
 240:../src/main.c **** 
 241:../src/main.c ****   // increase boot cycles count
 242:../src/main.c ****   rte_main_boot_cycles++;
 243:../src/main.c **** 
 244:../src/main.c ****   // erasing old value from backup registers
 245:../src/main.c ****   BKP->DR2 &= (0xFFFF ^ 0xFF);
 246:../src/main.c **** 
 247:../src/main.c ****   // storing increased value
 248:../src/main.c ****   BKP->DR2 |= rte_main_boot_cycles;
 249:../src/main.c **** 
 250:../src/main.c ****   BKP->DR3 = 0;
 251:../src/main.c ****   BKP->DR4 = 0;
 252:../src/main.c ****   BKP->DR5 = 0;
 253:../src/main.c ****   BKP->DR6 = 0;
 254:../src/main.c **** #endif
 255:../src/main.c **** 
 256:../src/main.c **** #if defined(PARAMETEO)
 257:../src/main.c ****   RCC->APB1ENR1 |= (RCC_APB1ENR1_TIM2EN | RCC_APB1ENR1_TIM3EN | RCC_APB1ENR1_TIM4EN | RCC_APB1ENR1_
  75              		.loc 1 257 0
  76 0014 654B     		ldr	r3, .L116+4
  77 0016 996D     		ldr	r1, [r3, #88]
  78 0018 654A     		ldr	r2, .L116+8
  79 001a 0A43     		orrs	r2, r2, r1
  80 001c 9A65     		str	r2, [r3, #88]
 258:../src/main.c ****   RCC->APB2ENR |= (RCC_APB2ENR_TIM1EN | RCC_APB2ENR_USART1EN);
  81              		.loc 1 258 0
  82 001e 1A6E     		ldr	r2, [r3, #96]
  83 0020 42F49042 		orr	r2, r2, #18432
  84 0024 1A66     		str	r2, [r3, #96]
 259:../src/main.c ****   RCC->AHB1ENR |= (RCC_AHB1ENR_CRCEN | RCC_AHB1ENR_DMA1EN);
  85              		.loc 1 259 0
  86 0026 9A6C     		ldr	r2, [r3, #72]
  87 0028 42F48052 		orr	r2, r2, #4096
  88 002c 42F00102 		orr	r2, r2, #1
  89 0030 9A64     		str	r2, [r3, #72]
 260:../src/main.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_ADCEN | RCC_AHB2ENR_GPIOAEN | RCC_AHB2ENR_GPIOBEN | RCC_AHB2ENR_GPIO
  90              		.loc 1 260 0
  91 0032 DA6C     		ldr	r2, [r3, #76]
  92 0034 42F40052 		orr	r2, r2, #8192
  93 0038 42F00F02 		orr	r2, r2, #15
  94 003c DA64     		str	r2, [r3, #76]
 261:../src/main.c ****   RCC->BDCR |= RCC_BDCR_RTCEN;
  95              		.loc 1 261 0
  96 003e D3F89020 		ldr	r2, [r3, #144]
  97 0042 42F40042 		orr	r2, r2, #32768
  98 0046 C3F89020 		str	r2, [r3, #144]
 262:../src/main.c **** #endif
 263:../src/main.c **** 
 264:../src/main.c ****   rte_main_reboot_req = 0;
  99              		.loc 1 264 0
 100 004a 5A4B     		ldr	r3, .L116+12
 101 004c 1C70     		strb	r4, [r3]
 265:../src/main.c **** 
 266:../src/main.c ****   // initializing variables & arrays in rte_wx
 267:../src/main.c ****   rte_wx_init();
 102              		.loc 1 267 0
 103 004e FFF7FEFF 		bl	rte_wx_init
 104              	.LVL6:
 268:../src/main.c ****   rte_rtu_init();
 105              		.loc 1 268 0
 106 0052 FFF7FEFF 		bl	rte_rtu_init
 107              	.LVL7:
 269:../src/main.c **** 
 270:../src/main.c ****   // calculate CRC over configuration blocks
 271:../src/main.c ****   main_crc_result = configuration_handler_check_crc();
 108              		.loc 1 271 0
 109 0056 FFF7FEFF 		bl	configuration_handler_check_crc
 110              	.LVL8:
 111 005a 574B     		ldr	r3, .L116+16
 112 005c 1860     		str	r0, [r3]
 272:../src/main.c **** 
 273:../src/main.c ****   // if first section has wrong CRC and it hasn't been restored before
 274:../src/main.c ****   if ((main_crc_result & 0x01) == 0 && (configuration_get_register() & CONFIG_FIRST_FAIL_RESTORING)
 113              		.loc 1 274 0
 114 005e 10F0010F 		tst	r0, #1
 115 0062 12D1     		bne	.L3
 116              		.loc 1 274 0 is_stmt 0 discriminator 1
 117 0064 FFF7FEFF 		bl	configuration_get_register
 118              	.LVL9:
 119 0068 10F0020F 		tst	r0, #2
 120 006c 0DD1     		bne	.L3
 275:../src/main.c **** 	  // restore default configuration
 276:../src/main.c **** 	  if (configuration_handler_restore_default_first() == 0) {
 121              		.loc 1 276 0 is_stmt 1
 122 006e FFF7FEFF 		bl	configuration_handler_restore_default_first
 123              	.LVL10:
 124 0072 30B9     		cbnz	r0, .L4
 277:../src/main.c **** 
 278:../src/main.c **** 		  // if configuration has been restored successfully
 279:../src/main.c **** 		  configuration_set_bits_register(CONFIG_FIRST_RESTORED);
 125              		.loc 1 279 0
 126 0074 0120     		movs	r0, #1
 127 0076 FFF7FEFF 		bl	configuration_set_bits_register
 128              	.LVL11:
 280:../src/main.c **** 
 281:../src/main.c **** 		  // set also CRC flag because if restoring is successfull the region has good CRC
 282:../src/main.c **** 		  configuration_set_bits_register(CONFIG_FIRST_CRC_OK);
 129              		.loc 1 282 0
 130 007a 0420     		movs	r0, #4
 131 007c FFF7FEFF 		bl	configuration_set_bits_register
 132              	.LVL12:
 133 0080 08E0     		b	.L5
 134              	.L4:
 283:../src/main.c **** 
 284:../src/main.c **** 	  }
 285:../src/main.c **** 	  else {
 286:../src/main.c **** 		  // if not store the flag in the backup register to block
 287:../src/main.c **** 		  // reinitializing once again in the consecutive restart
 288:../src/main.c **** 		  configuration_set_bits_register(CONFIG_FIRST_FAIL_RESTORING);
 135              		.loc 1 288 0
 136 0082 0220     		movs	r0, #2
 137 0084 FFF7FEFF 		bl	configuration_set_bits_register
 138              	.LVL13:
 139 0088 04E0     		b	.L5
 140              	.L3:
 289:../src/main.c **** 	  }
 290:../src/main.c **** 
 291:../src/main.c **** 
 292:../src/main.c ****   }
 293:../src/main.c ****   else {
 294:../src/main.c **** 	  // if the combined confition is not met check failed restoring flag
 295:../src/main.c **** 	  if ((configuration_get_register() & CONFIG_FIRST_FAIL_RESTORING) == 0) {
 141              		.loc 1 295 0
 142 008a FFF7FEFF 		bl	configuration_get_register
 143              	.LVL14:
 144 008e 10F0020F 		tst	r0, #2
 145 0092 13D0     		beq	.L79
 146              	.L5:
 296:../src/main.c **** 		  // a CRC checksum is ok, so first configuration section can be used further
 297:../src/main.c **** 		  configuration_set_bits_register(CONFIG_FIRST_CRC_OK);
 298:../src/main.c **** 	  }
 299:../src/main.c **** 	  else {
 300:../src/main.c **** 		  ;
 301:../src/main.c **** 	  }
 302:../src/main.c ****   }
 303:../src/main.c **** 
 304:../src/main.c ****   // if second section has wrong CRC and it hasn't been restored before
 305:../src/main.c ****   if ((main_crc_result & 0x02) == 0 && (configuration_get_register() & CONFIG_SECOND_FAIL_RESTORING
 147              		.loc 1 305 0
 148 0094 484B     		ldr	r3, .L116+16
 149 0096 1B68     		ldr	r3, [r3]
 150 0098 13F0020F 		tst	r3, #2
 151 009c 19D1     		bne	.L6
 152              		.loc 1 305 0 is_stmt 0 discriminator 1
 153 009e FFF7FEFF 		bl	configuration_get_register
 154              	.LVL15:
 155 00a2 10F0100F 		tst	r0, #16
 156 00a6 14D1     		bne	.L6
 306:../src/main.c **** 	  // restore default configuration
 307:../src/main.c **** 	  if (configuration_handler_restore_default_second() == 0) {
 157              		.loc 1 307 0 is_stmt 1
 158 00a8 FFF7FEFF 		bl	configuration_handler_restore_default_second
 159              	.LVL16:
 160 00ac 50B9     		cbnz	r0, .L7
 308:../src/main.c **** 
 309:../src/main.c **** 		  // if configuration has been restored successfully
 310:../src/main.c **** 		  configuration_set_bits_register(CONFIG_SECOND_RESTORED);
 161              		.loc 1 310 0
 162 00ae 0820     		movs	r0, #8
 163 00b0 FFF7FEFF 		bl	configuration_set_bits_register
 164              	.LVL17:
 311:../src/main.c **** 
 312:../src/main.c **** 		  // set also CRC flag as if restoring is successfull the region has good CRC
 313:../src/main.c **** 		  configuration_set_bits_register(CONFIG_SECOND_CRC_OK);
 165              		.loc 1 313 0
 166 00b4 2020     		movs	r0, #32
 167 00b6 FFF7FEFF 		bl	configuration_set_bits_register
 168              	.LVL18:
 169 00ba 0FE0     		b	.L8
 170              	.L79:
 297:../src/main.c **** 	  }
 171              		.loc 1 297 0
 172 00bc 0420     		movs	r0, #4
 173 00be FFF7FEFF 		bl	configuration_set_bits_register
 174              	.LVL19:
 175 00c2 E7E7     		b	.L5
 176              	.L7:
 314:../src/main.c **** 
 315:../src/main.c **** 	  }
 316:../src/main.c **** 	  else {
 317:../src/main.c **** 		  // if not store the flag in the backup register
 318:../src/main.c **** 		  configuration_set_bits_register(CONFIG_SECOND_FAIL_RESTORING);
 177              		.loc 1 318 0
 178 00c4 1020     		movs	r0, #16
 179 00c6 FFF7FEFF 		bl	configuration_set_bits_register
 180              	.LVL20:
 319:../src/main.c **** 
 320:../src/main.c **** 		  configuration_clear_bits_register(CONFIG_SECOND_CRC_OK);
 181              		.loc 1 320 0
 182 00ca 2020     		movs	r0, #32
 183 00cc FFF7FEFF 		bl	configuration_clear_bits_register
 184              	.LVL21:
 185 00d0 04E0     		b	.L8
 186              	.L6:
 321:../src/main.c **** 	  }
 322:../src/main.c **** 
 323:../src/main.c **** 
 324:../src/main.c ****   }
 325:../src/main.c ****   else {
 326:../src/main.c **** 	  // check failed restoring flag
 327:../src/main.c **** 	  if ((configuration_get_register() & CONFIG_SECOND_FAIL_RESTORING) == 0) {
 187              		.loc 1 327 0
 188 00d2 FFF7FEFF 		bl	configuration_get_register
 189              	.LVL22:
 190 00d6 10F0100F 		tst	r0, #16
 191 00da 13D0     		beq	.L80
 192              	.L8:
 328:../src/main.c **** 		  // second configuration section has good CRC and can be used further
 329:../src/main.c **** 		  configuration_set_bits_register(CONFIG_SECOND_CRC_OK);
 330:../src/main.c **** 	  }
 331:../src/main.c **** 	  else {
 332:../src/main.c **** 		  ;
 333:../src/main.c **** 	  }
 334:../src/main.c ****   }
 335:../src/main.c **** 
 336:../src/main.c ****   // at this point both sections have either verified CRC or restored values to default
 337:../src/main.c ****   if ((configuration_get_register() & CONFIG_FIRST_CRC_OK) != 0 && (configuration_get_register() & 
 193              		.loc 1 337 0
 194 00dc FFF7FEFF 		bl	configuration_get_register
 195              	.LVL23:
 196 00e0 10F0040F 		tst	r0, #4
 197 00e4 16D0     		beq	.L9
 198              		.loc 1 337 0 is_stmt 0 discriminator 1
 199 00e6 FFF7FEFF 		bl	configuration_get_register
 200              	.LVL24:
 201 00ea 10F0200F 		tst	r0, #32
 202 00ee 11D0     		beq	.L9
 338:../src/main.c **** 	  // if both sections are OK check programming counters
 339:../src/main.c **** 	  if (config_data_pgm_cntr_first > config_data_pgm_cntr_second) {
 203              		.loc 1 339 0 is_stmt 1
 204 00f0 324B     		ldr	r3, .L116+20
 205 00f2 1A88     		ldrh	r2, [r3]
 206 00f4 324B     		ldr	r3, .L116+24
 207 00f6 1B88     		ldrh	r3, [r3]
 208 00f8 9A42     		cmp	r2, r3
 209 00fa 07D9     		bls	.L10
 340:../src/main.c **** 		  // if first section has bigger programing counter use it
 341:../src/main.c **** 		  configuration_handler_load_configuration(REGION_FIRST);
 210              		.loc 1 341 0
 211 00fc 0120     		movs	r0, #1
 212 00fe FFF7FEFF 		bl	configuration_handler_load_configuration
 213              	.LVL25:
 214 0102 26E0     		b	.L11
 215              	.L80:
 329:../src/main.c **** 	  }
 216              		.loc 1 329 0
 217 0104 2020     		movs	r0, #32
 218 0106 FFF7FEFF 		bl	configuration_set_bits_register
 219              	.LVL26:
 220 010a E7E7     		b	.L8
 221              	.L10:
 342:../src/main.c **** 	  }
 343:../src/main.c **** 	  else {
 344:../src/main.c **** 		  configuration_handler_load_configuration(REGION_SECOND);
 222              		.loc 1 344 0
 223 010c 0220     		movs	r0, #2
 224 010e FFF7FEFF 		bl	configuration_handler_load_configuration
 225              	.LVL27:
 226 0112 1EE0     		b	.L11
 227              	.L9:
 345:../src/main.c **** 
 346:../src/main.c **** 	  }
 347:../src/main.c ****   }
 348:../src/main.c ****   else if ((configuration_get_register() & CONFIG_FIRST_CRC_OK) != 0 && (configuration_get_register
 228              		.loc 1 348 0
 229 0114 FFF7FEFF 		bl	configuration_get_register
 230              	.LVL28:
 231 0118 10F0040F 		tst	r0, #4
 232 011c 08D0     		beq	.L12
 233              		.loc 1 348 0 is_stmt 0 discriminator 1
 234 011e FFF7FEFF 		bl	configuration_get_register
 235              	.LVL29:
 236 0122 10F0200F 		tst	r0, #32
 237 0126 03D1     		bne	.L12
 349:../src/main.c **** 	  // if only first region is OK use it
 350:../src/main.c **** 	  configuration_handler_load_configuration(REGION_FIRST);
 238              		.loc 1 350 0 is_stmt 1
 239 0128 0120     		movs	r0, #1
 240 012a FFF7FEFF 		bl	configuration_handler_load_configuration
 241              	.LVL30:
 242 012e 10E0     		b	.L11
 243              	.L12:
 351:../src/main.c ****   }
 352:../src/main.c ****   else if ((configuration_get_register() & CONFIG_FIRST_CRC_OK) == 0 && (configuration_get_register
 244              		.loc 1 352 0
 245 0130 FFF7FEFF 		bl	configuration_get_register
 246              	.LVL31:
 247 0134 10F0040F 		tst	r0, #4
 248 0138 08D1     		bne	.L13
 249              		.loc 1 352 0 is_stmt 0 discriminator 1
 250 013a FFF7FEFF 		bl	configuration_get_register
 251              	.LVL32:
 252 013e 10F0200F 		tst	r0, #32
 253 0142 03D0     		beq	.L13
 353:../src/main.c **** 	  // if only first region is OK use it
 354:../src/main.c **** 	  configuration_handler_load_configuration(REGION_FIRST);
 254              		.loc 1 354 0 is_stmt 1
 255 0144 0120     		movs	r0, #1
 256 0146 FFF7FEFF 		bl	configuration_handler_load_configuration
 257              	.LVL33:
 258 014a 02E0     		b	.L11
 259              	.L13:
 355:../src/main.c ****   }
 356:../src/main.c ****   else {
 357:../src/main.c **** 	  configuration_handler_load_configuration(REGION_DEFAULT);
 260              		.loc 1 357 0
 261 014c 0020     		movs	r0, #0
 262 014e FFF7FEFF 		bl	configuration_handler_load_configuration
 263              	.LVL34:
 264              	.L11:
 358:../src/main.c ****   }
 359:../src/main.c **** 
 360:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 361:../src/main.c ****   // disabling access to BKP registers
 362:../src/main.c ****   RCC->APB1ENR &= (0xFFFFFFFF ^ (RCC_APB1ENR_PWREN | RCC_APB1ENR_BKPEN));
 363:../src/main.c ****   PWR->CR &= (0xFFFFFFFF ^ PWR_CR_DBP);
 364:../src/main.c **** #endif
 365:../src/main.c **** 
 366:../src/main.c ****   // converting latitude into string
 367:../src/main.c ****   memset(main_string_latitude, 0x00, sizeof(main_string_latitude));
 265              		.loc 1 367 0
 266 0152 1C4D     		ldr	r5, .L116+28
 267 0154 0922     		movs	r2, #9
 268 0156 0021     		movs	r1, #0
 269 0158 2846     		mov	r0, r5
 270 015a FFF7FEFF 		bl	memset
 271              	.LVL35:
 368:../src/main.c ****   float_to_string(main_config_data_basic->latitude, main_string_latitude, sizeof(main_string_latitu
 272              		.loc 1 368 0
 273 015e 1A4C     		ldr	r4, .L116+32
 274 0160 2668     		ldr	r6, [r4]
 275 0162 0223     		movs	r3, #2
 276 0164 1A46     		mov	r2, r3
 277 0166 0921     		movs	r1, #9
 278 0168 2846     		mov	r0, r5
 279 016a 96ED020A 		vldr.32	s0, [r6, #8]
 280 016e FFF7FEFF 		bl	float_to_string
 281              	.LVL36:
 369:../src/main.c **** 
 370:../src/main.c ****   // converting longitude into string
 371:../src/main.c ****   memset(main_string_longitude, 0x00, sizeof(main_string_longitude));
 282              		.loc 1 371 0
 283 0172 164D     		ldr	r5, .L116+36
 284 0174 0922     		movs	r2, #9
 285 0176 0021     		movs	r1, #0
 286 0178 2846     		mov	r0, r5
 287 017a FFF7FEFF 		bl	memset
 288              	.LVL37:
 372:../src/main.c ****   float_to_string(main_config_data_basic->longitude, main_string_longitude, sizeof(main_string_long
 289              		.loc 1 372 0
 290 017e 2668     		ldr	r6, [r4]
 291 0180 0523     		movs	r3, #5
 292 0182 0222     		movs	r2, #2
 293 0184 0921     		movs	r1, #9
 294 0186 2846     		mov	r0, r5
 295 0188 96ED040A 		vldr.32	s0, [r6, #16]
 296 018c FFF7FEFF 		bl	float_to_string
 297              	.LVL38:
 373:../src/main.c **** 
 374:../src/main.c ****   switch(main_config_data_basic->symbol) {
 298              		.loc 1 374 0
 299 0190 2368     		ldr	r3, [r4]
 300 0192 93F89530 		ldrb	r3, [r3, #149]	@ zero_extendqisi2
 301 0196 032B     		cmp	r3, #3
 302 0198 00F24D81 		bhi	.L14
 303 019c DFE813F0 		tbh	[pc, r3, lsl #1]
 304              	.L16:
 305 01a0 1800     		.2byte	(.L15-.L16)/2
 306 01a2 3601     		.2byte	(.L17-.L16)/2
 307 01a4 3D01     		.2byte	(.L18-.L16)/2
 308 01a6 4401     		.2byte	(.L19-.L16)/2
 309              		.p2align 1
 310              	.L117:
 311              		.align	2
 312              	.L116:
 313 01a8 00000000 		.word	main_own_aprs_msg
 314 01ac 00100240 		.word	1073876992
 315 01b0 27000620 		.word	537264167
 316 01b4 00000000 		.word	rte_main_reboot_req
 317 01b8 00000000 		.word	.LANCHOR0
 318 01bc 00000000 		.word	config_data_pgm_cntr_first
 319 01c0 00000000 		.word	config_data_pgm_cntr_second
 320 01c4 00000000 		.word	main_string_latitude
 321 01c8 00000000 		.word	.LANCHOR1
 322 01cc 00000000 		.word	main_string_longitude
 323              	.L15:
 375:../src/main.c ****   case 0:		// _SYMBOL_DIGI
 376:../src/main.c **** 	  main_symbol_f = '/';
 324              		.loc 1 376 0
 325 01d0 A04B     		ldr	r3, .L118
 326 01d2 2F22     		movs	r2, #47
 327 01d4 1A70     		strb	r2, [r3]
 377:../src/main.c **** 	  main_symbol_s = '#';
 328              		.loc 1 377 0
 329 01d6 A04B     		ldr	r3, .L118+4
 330 01d8 2322     		movs	r2, #35
 331 01da 1A70     		strb	r2, [r3]
 332              	.L20:
 378:../src/main.c **** 	  break;
 379:../src/main.c ****   case 1:		// _SYMBOL_WIDE1_DIGI
 380:../src/main.c **** 	  main_symbol_f = '1';
 381:../src/main.c **** 	  main_symbol_s = '#';
 382:../src/main.c **** 	  break;
 383:../src/main.c ****   case 2:		// _SYMBOL_HOUSE
 384:../src/main.c **** 	  main_symbol_f = '/';
 385:../src/main.c **** 	  main_symbol_s = '-';
 386:../src/main.c **** 	  break;
 387:../src/main.c ****   case 3:		// _SYMBOL_RXIGATE
 388:../src/main.c **** 	  main_symbol_f = 'I';
 389:../src/main.c **** 	  main_symbol_s = '&';
 390:../src/main.c **** 	  break;
 391:../src/main.c ****   default:		// _SYMBOL_IGATE
 392:../src/main.c **** 	  main_symbol_f = 'R';
 393:../src/main.c **** 	  main_symbol_s = '&';
 394:../src/main.c **** 	  break;
 395:../src/main.c **** 
 396:../src/main.c ****   }
 397:../src/main.c **** 
 398:../src/main.c **** #if defined _RANDOM_DELAY
 399:../src/main.c ****   // configuring a default delay value
 400:../src/main.c ****   delay_set(_DELAY_BASE, 1);
 401:../src/main.c **** #elif !defined _RANDOM_DELAY
 402:../src/main.c ****   delay_set(_DELAY_BASE, 0);
 333              		.loc 1 402 0
 334 01dc 0021     		movs	r1, #0
 335 01de 1420     		movs	r0, #20
 336 01e0 FFF7FEFF 		bl	delay_set
 337              	.LVL39:
 403:../src/main.c **** 
 404:../src/main.c **** #endif
 405:../src/main.c **** 
 406:../src/main.c ****   // initalizing separated Open Collector output
 407:../src/main.c ****   io_oc_init();
 338              		.loc 1 407 0
 339 01e4 FFF7FEFF 		bl	io_oc_init
 340              	.LVL40:
 408:../src/main.c **** 
 409:../src/main.c ****   // initialize sensor power control and switch off supply voltage
 410:../src/main.c ****   wx_pwr_init();
 341              		.loc 1 410 0
 342 01e8 FFF7FEFF 		bl	wx_pwr_init
 343              	.LVL41:
 411:../src/main.c **** 
 412:../src/main.c ****   // call periodic handle to wait for 1 second and then switch on voltage
 413:../src/main.c ****   wx_pwr_periodic_handle();
 344              		.loc 1 413 0
 345 01ec FFF7FEFF 		bl	wx_pwr_periodic_handle
 346              	.LVL42:
 414:../src/main.c **** 
 415:../src/main.c ****   // waiting for 1 second to count number of ticks when the CPU is idle
 416:../src/main.c ****   main_idle_cpu_ticks = delay_fixed_with_count(1000);
 347              		.loc 1 416 0
 348 01f0 4FF47A70 		mov	r0, #1000
 349 01f4 FFF7FEFF 		bl	delay_fixed_with_count
 350              	.LVL43:
 351 01f8 984B     		ldr	r3, .L118+8
 352 01fa 1860     		str	r0, [r3]
 417:../src/main.c **** 
 418:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 419:../src/main.c **** 
 420:../src/main.c ****   // Configure I/O pins for USART1 (Kiss modem)
 421:../src/main.c ****   Configure_GPIO(GPIOA,10,PUD_INPUT);		// RX
 422:../src/main.c ****   Configure_GPIO(GPIOA,9,AFPP_OUTPUT_2MHZ);	// TX
 423:../src/main.c **** 
 424:../src/main.c ****   // Configure I/O pins for USART2 (wx meteo comm)
 425:../src/main.c ****   Configure_GPIO(GPIOA,3,PUD_INPUT);		// RX
 426:../src/main.c ****   Configure_GPIO(GPIOA,2,AFPP_OUTPUT_2MHZ);	// TX
 427:../src/main.c **** 
 428:../src/main.c **** #endif
 429:../src/main.c **** 
 430:../src/main.c **** #if defined(PARAMETEO)
 431:../src/main.c ****   	// USART1 - KISS
 432:../src/main.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_INPUT;
 353              		.loc 1 432 0
 354 01fc 984C     		ldr	r4, .L118+12
 355 01fe 0025     		movs	r5, #0
 356 0200 6560     		str	r5, [r4, #4]
 433:../src/main.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_10;
 357              		.loc 1 433 0
 358 0202 4FF48063 		mov	r3, #1024
 359 0206 2360     		str	r3, [r4]
 434:../src/main.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 360              		.loc 1 434 0
 361 0208 2561     		str	r5, [r4, #16]
 435:../src/main.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 362              		.loc 1 435 0
 363 020a 0126     		movs	r6, #1
 364 020c A660     		str	r6, [r4, #8]
 436:../src/main.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_7;
 365              		.loc 1 436 0
 366 020e 0727     		movs	r7, #7
 367 0210 6761     		str	r7, [r4, #20]
 437:../src/main.c **** 	LL_GPIO_Init(GPIOA, &GPIO_InitTypeDef);		// RX
 368              		.loc 1 437 0
 369 0212 2146     		mov	r1, r4
 370 0214 4FF09040 		mov	r0, #1207959552
 371 0218 FFF7FEFF 		bl	LL_GPIO_Init
 372              	.LVL44:
 438:../src/main.c **** 
 439:../src/main.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_ALTERNATE;
 373              		.loc 1 439 0
 374 021c 4FF00208 		mov	r8, #2
 375 0220 C4F80480 		str	r8, [r4, #4]
 440:../src/main.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_9;
 376              		.loc 1 440 0
 377 0224 4FF40073 		mov	r3, #512
 378 0228 2360     		str	r3, [r4]
 441:../src/main.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 379              		.loc 1 441 0
 380 022a 2561     		str	r5, [r4, #16]
 442:../src/main.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 381              		.loc 1 442 0
 382 022c A660     		str	r6, [r4, #8]
 443:../src/main.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_7;
 383              		.loc 1 443 0
 384 022e 6761     		str	r7, [r4, #20]
 444:../src/main.c **** 	LL_GPIO_Init(GPIOA, &GPIO_InitTypeDef);		// TX
 385              		.loc 1 444 0
 386 0230 2146     		mov	r1, r4
 387 0232 4FF09040 		mov	r0, #1207959552
 388 0236 FFF7FEFF 		bl	LL_GPIO_Init
 389              	.LVL45:
 445:../src/main.c **** 
 446:../src/main.c **** 	// USART2 - METEO
 447:../src/main.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_INPUT;
 390              		.loc 1 447 0
 391 023a 6560     		str	r5, [r4, #4]
 448:../src/main.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_3;
 392              		.loc 1 448 0
 393 023c 0823     		movs	r3, #8
 394 023e 2360     		str	r3, [r4]
 449:../src/main.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 395              		.loc 1 449 0
 396 0240 2561     		str	r5, [r4, #16]
 450:../src/main.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 397              		.loc 1 450 0
 398 0242 A660     		str	r6, [r4, #8]
 451:../src/main.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_7;
 399              		.loc 1 451 0
 400 0244 6761     		str	r7, [r4, #20]
 452:../src/main.c **** 	LL_GPIO_Init(GPIOA, &GPIO_InitTypeDef);		// RX
 401              		.loc 1 452 0
 402 0246 2146     		mov	r1, r4
 403 0248 4FF09040 		mov	r0, #1207959552
 404 024c FFF7FEFF 		bl	LL_GPIO_Init
 405              	.LVL46:
 453:../src/main.c **** 
 454:../src/main.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_ALTERNATE;
 406              		.loc 1 454 0
 407 0250 C4F80480 		str	r8, [r4, #4]
 455:../src/main.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_2;
 408              		.loc 1 455 0
 409 0254 4FF00408 		mov	r8, #4
 410 0258 C4F80080 		str	r8, [r4]
 456:../src/main.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 411              		.loc 1 456 0
 412 025c 2561     		str	r5, [r4, #16]
 457:../src/main.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 413              		.loc 1 457 0
 414 025e A660     		str	r6, [r4, #8]
 458:../src/main.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_7;
 415              		.loc 1 458 0
 416 0260 6761     		str	r7, [r4, #20]
 459:../src/main.c **** 	LL_GPIO_Init(GPIOA, &GPIO_InitTypeDef);		// TX
 417              		.loc 1 459 0
 418 0262 2146     		mov	r1, r4
 419 0264 4FF09040 		mov	r0, #1207959552
 420 0268 FFF7FEFF 		bl	LL_GPIO_Init
 421              	.LVL47:
 460:../src/main.c **** 
 461:../src/main.c **** #endif
 462:../src/main.c **** 
 463:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B)
 464:../src/main.c ****   Configure_GPIO(GPIOA,7,GPPP_OUTPUT_2MHZ);	// re/te
 465:../src/main.c ****   GPIO_ResetBits(GPIOA, GPIO_Pin_7);
 466:../src/main.c **** #endif
 467:../src/main.c **** #if defined(PARATNC_HWREV_C)
 468:../src/main.c ****   Configure_GPIO(GPIOA,8,GPPP_OUTPUT_2MHZ);	// re/te
 469:../src/main.c ****   GPIO_ResetBits(GPIOA, GPIO_Pin_8);
 470:../src/main.c **** #endif
 471:../src/main.c **** 
 472:../src/main.c **** #if defined(PARAMETEO)
 473:../src/main.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_OUTPUT;
 422              		.loc 1 473 0
 423 026c 6660     		str	r6, [r4, #4]
 474:../src/main.c **** 	GPIO_InitTypeDef.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 424              		.loc 1 474 0
 425 026e E560     		str	r5, [r4, #12]
 475:../src/main.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_2;
 426              		.loc 1 475 0
 427 0270 C4F80080 		str	r8, [r4]
 476:../src/main.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 428              		.loc 1 476 0
 429 0274 2561     		str	r5, [r4, #16]
 477:../src/main.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 430              		.loc 1 477 0
 431 0276 A660     		str	r6, [r4, #8]
 478:../src/main.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_7;
 432              		.loc 1 478 0
 433 0278 6761     		str	r7, [r4, #20]
 479:../src/main.c **** 	LL_GPIO_Init(GPIOA, &GPIO_InitTypeDef);		// RE-TE
 434              		.loc 1 479 0
 435 027a 2146     		mov	r1, r4
 436 027c 4FF09040 		mov	r0, #1207959552
 437 0280 FFF7FEFF 		bl	LL_GPIO_Init
 438              	.LVL48:
 480:../src/main.c **** #endif
 481:../src/main.c **** 
 482:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 483:../src/main.c ****   // enabling the clock for both USARTs
 484:../src/main.c ****   RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 485:../src/main.c ****   RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 486:../src/main.c **** #endif
 487:../src/main.c **** 
 488:../src/main.c ****   main_kiss_srl_ctx_ptr = &main_kiss_srl_ctx;
 439              		.loc 1 488 0
 440 0284 774B     		ldr	r3, .L118+16
 441 0286 784A     		ldr	r2, .L118+20
 442 0288 1A60     		str	r2, [r3]
 489:../src/main.c ****   main_wx_srl_ctx_ptr = &main_wx_srl_ctx;
 443              		.loc 1 489 0
 444 028a 784B     		ldr	r3, .L118+24
 445 028c 784A     		ldr	r2, .L118+28
 446 028e 1A60     		str	r2, [r3]
 490:../src/main.c **** 
 491:../src/main.c ****   main_target_kiss_baudrate = 9600u;
 447              		.loc 1 491 0
 448 0290 784B     		ldr	r3, .L118+32
 449 0292 4FF41652 		mov	r2, #9600
 450 0296 1A60     		str	r2, [r3]
 492:../src/main.c ****   main_target_wx_baudrate = _SERIAL_BAUDRATE;
 451              		.loc 1 492 0
 452 0298 774B     		ldr	r3, .L118+36
 453 029a 4FF49642 		mov	r2, #19200
 454 029e 1A60     		str	r2, [r3]
 493:../src/main.c **** 
 494:../src/main.c ****   // if Victron VE-direct protocol is enabled set the baudrate to the 19200u
 495:../src/main.c ****   if (main_config_data_mode->victron == 1) {
 455              		.loc 1 495 0
 456 02a0 764B     		ldr	r3, .L118+40
 457 02a2 1B68     		ldr	r3, [r3]
 458 02a4 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 459 02a6 B242     		cmp	r2, r6
 460 02a8 00F0CC80 		beq	.L81
 461              	.L21:
 496:../src/main.c ****     main_target_kiss_baudrate = 19200u;
 497:../src/main.c **** 
 498:../src/main.c ****     // and disable the kiss TNC option as it shares the same port
 499:../src/main.c ****     main_kiss_enabled = 0;
 500:../src/main.c ****   }
 501:../src/main.c **** 
 502:../src/main.c **** 
 503:../src/main.c ****   if (main_config_data_mode->wx_davis == 1) {
 462              		.loc 1 503 0
 463 02ac 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 464 02ae 012A     		cmp	r2, #1
 465 02b0 00F00281 		beq	.L82
 504:../src/main.c **** 	  // reinitialize the KISS serial port temporary to davis baudrate
 505:../src/main.c **** 	  main_target_kiss_baudrate = DAVIS_DEFAULT_BAUDRATE;
 506:../src/main.c **** 
 507:../src/main.c **** 	  // reset RX state to allow reinitialization with changed baudrate
 508:../src/main.c **** 	  main_kiss_srl_ctx_ptr->srl_rx_state = SRL_RX_NOT_CONFIG;
 509:../src/main.c **** 
 510:../src/main.c **** 	  // reinitializing serial hardware to wake up Davis wx station
 511:../src/main.c **** 	  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buff
 512:../src/main.c **** 
 513:../src/main.c **** 	  srl_switch_timeout(main_kiss_srl_ctx_ptr, SRL_TIMEOUT_ENABLE, 3000);
 514:../src/main.c **** 
 515:../src/main.c **** 	  davis_init(main_kiss_srl_ctx_ptr);
 516:../src/main.c **** 
 517:../src/main.c **** 	  // try to wake up the davis base
 518:../src/main.c **** 	  rte_wx_davis_station_avaliable = (davis_wake_up(DAVIS_BLOCKING_IO) == 0 ? 1 : 0);
 519:../src/main.c **** 
 520:../src/main.c **** 	  // if davis weather stations is connected to SERIAL port
 521:../src/main.c **** 	  if (rte_wx_davis_station_avaliable == 1) {
 522:../src/main.c **** 		  // turn LCD backlight on..
 523:../src/main.c **** 		  davis_control_backlight(1);
 524:../src/main.c **** 
 525:../src/main.c **** 		  // wait for a while
 526:../src/main.c **** 		  delay_fixed(1000);
 527:../src/main.c **** 
 528:../src/main.c **** 		  // and then off to let the user know that communication is working
 529:../src/main.c **** 		  davis_control_backlight(0);
 530:../src/main.c **** 
 531:../src/main.c **** 		  // disable the KISS modem as the UART will be used for DAVIS wx station
 532:../src/main.c **** 		  main_kiss_enabled = 0;
 533:../src/main.c **** 
 534:../src/main.c **** 		  // enable the davis serial protocol client to allow pooling callbacks to be called in main loop
 535:../src/main.c **** 		  // This only controls the callback it doesn't mean that the station itself is responding to
 536:../src/main.c **** 		  // communication. It stays set to one event if Davis station
 537:../src/main.c **** 		  main_davis_serial_enabled = 1;
 538:../src/main.c **** 
 539:../src/main.c **** 		  // trigger the rxcheck to get all counter values
 540:../src/main.c **** 		  davis_trigger_rxcheck_packet();
 541:../src/main.c **** 
 542:../src/main.c **** 	  }
 543:../src/main.c **** 	  else {
 544:../src/main.c **** 		  // if not revert back to KISS configuration
 545:../src/main.c **** 		  main_target_kiss_baudrate = 9600u;
 546:../src/main.c **** 		  main_kiss_srl_ctx_ptr->srl_rx_state = SRL_RX_NOT_CONFIG;
 547:../src/main.c **** 
 548:../src/main.c **** 		  // initializing UART drvier
 549:../src/main.c **** 		  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buf
 550:../src/main.c **** 		  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffe
 551:../src/main.c **** 
 552:../src/main.c **** 	  }
 553:../src/main.c ****   }
 554:../src/main.c ****   else if (main_config_data_mode->wx_modbus == 1) {
 466              		.loc 1 554 0
 467 02b4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 468 02b6 012B     		cmp	r3, #1
 469 02b8 00F05B81 		beq	.L83
 555:../src/main.c **** 
 556:../src/main.c **** 	  rtu_serial_init(&rte_rtu_pool_queue, 1, main_wx_srl_ctx_ptr, main_config_data_rtu);
 557:../src/main.c **** 
 558:../src/main.c **** 	  main_target_wx_baudrate = main_config_data_rtu->slave_speed;
 559:../src/main.c **** 
 560:../src/main.c **** 	  // initialize serial ports according to RS485 network configuration for Modbus-RTU
 561:../src/main.c **** 	  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buff
 562:../src/main.c **** 	  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffer
 563:../src/main.c **** 	  srl_switch_tx_delay(main_wx_srl_ctx_ptr, 1);
 564:../src/main.c **** 
 565:../src/main.c **** 	  // enabling rtu master code
 566:../src/main.c **** 	  main_modbus_rtu_master_enabled = 1;
 567:../src/main.c **** 
 568:../src/main.c **** 	  rtu_serial_start();
 569:../src/main.c ****   }
 570:../src/main.c ****   else {
 571:../src/main.c **** 	  // initializing UART drvier
 572:../src/main.c **** 	  srl_init(main_kiss_srl_ctx_ptr, USART1, srl_usart1_rx_buffer, RX_BUFFER_1_LN, srl_usart1_tx_buff
 470              		.loc 1 572 0
 471 02bc 0124     		movs	r4, #1
 472 02be 0394     		str	r4, [sp, #12]
 473 02c0 6C4B     		ldr	r3, .L118+32
 474 02c2 1B68     		ldr	r3, [r3]
 475 02c4 0293     		str	r3, [sp, #8]
 476 02c6 4FF40073 		mov	r3, #512
 477 02ca 0193     		str	r3, [sp, #4]
 478 02cc 6C4A     		ldr	r2, .L118+44
 479 02ce 0092     		str	r2, [sp]
 480 02d0 6C4A     		ldr	r2, .L118+48
 481 02d2 6D49     		ldr	r1, .L118+52
 482 02d4 6448     		ldr	r0, .L118+20
 483 02d6 FFF7FEFF 		bl	srl_init
 484              	.LVL49:
 573:../src/main.c **** 	  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffer
 485              		.loc 1 573 0
 486 02da 644B     		ldr	r3, .L118+24
 487 02dc 1868     		ldr	r0, [r3]
 488 02de 0394     		str	r4, [sp, #12]
 489 02e0 654B     		ldr	r3, .L118+36
 490 02e2 1B68     		ldr	r3, [r3]
 491 02e4 0293     		str	r3, [sp, #8]
 492 02e6 6023     		movs	r3, #96
 493 02e8 0193     		str	r3, [sp, #4]
 494 02ea 684A     		ldr	r2, .L118+56
 495 02ec 0092     		str	r2, [sp]
 496 02ee 684A     		ldr	r2, .L118+60
 497 02f0 6849     		ldr	r1, .L118+64
 498 02f2 FFF7FEFF 		bl	srl_init
 499              	.LVL50:
 500              	.L24:
 574:../src/main.c ****   }
 575:../src/main.c **** 
 576:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B)
 577:../src/main.c ****   main_wx_srl_ctx_ptr->te_pin = GPIO_Pin_7;
 578:../src/main.c ****   main_wx_srl_ctx_ptr->te_port = GPIOA;
 579:../src/main.c **** #endif
 580:../src/main.c **** #if defined(PARATNC_HWREV_C)
 581:../src/main.c ****   main_wx_srl_ctx_ptr->te_pin = GPIO_Pin_8;
 582:../src/main.c ****   main_wx_srl_ctx_ptr->te_port = GPIOA;
 583:../src/main.c **** #endif
 584:../src/main.c **** #if defined(PARAMETEO)
 585:../src/main.c ****   main_wx_srl_ctx_ptr->te_pin = LL_GPIO_PIN_8;
 501              		.loc 1 585 0
 502 02f6 5D4B     		ldr	r3, .L118+24
 503 02f8 1B68     		ldr	r3, [r3]
 504 02fa 4FF48072 		mov	r2, #256
 505 02fe 1A82     		strh	r2, [r3, #16]	@ movhi
 586:../src/main.c ****   main_wx_srl_ctx_ptr->te_port = GPIOA;
 506              		.loc 1 586 0
 507 0300 4FF09042 		mov	r2, #1207959552
 508 0304 DA60     		str	r2, [r3, #12]
 587:../src/main.c **** #endif
 588:../src/main.c **** 
 589:../src/main.c ****   // initialize APRS path with zeros
 590:../src/main.c ****   memset (main_own_path, 0x00, sizeof(main_own_path));
 509              		.loc 1 590 0
 510 0306 644C     		ldr	r4, .L118+68
 511 0308 1522     		movs	r2, #21
 512 030a 0021     		movs	r1, #0
 513 030c 2046     		mov	r0, r4
 514 030e FFF7FEFF 		bl	memset
 515              	.LVL51:
 591:../src/main.c **** 
 592:../src/main.c ****   // configuring an APRS path used to transmit own packets (telemetry, wx, beacons)
 593:../src/main.c ****   main_own_path_ln = ConfigPath(main_own_path, main_config_data_basic);
 516              		.loc 1 593 0
 517 0312 624B     		ldr	r3, .L118+72
 518 0314 1968     		ldr	r1, [r3]
 519 0316 2046     		mov	r0, r4
 520 0318 FFF7FEFF 		bl	ConfigPath
 521              	.LVL52:
 522 031c 604B     		ldr	r3, .L118+76
 523 031e 1870     		strb	r0, [r3]
 594:../src/main.c **** 
 595:../src/main.c **** #ifdef INTERNAL_WATCHDOG
 596:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 597:../src/main.c ****   // enable write access to watchdog registers
 598:../src/main.c ****   IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);
 599:../src/main.c **** 
 600:../src/main.c ****   // Set watchdog prescaler
 601:../src/main.c ****   IWDG_SetPrescaler(IWDG_Prescaler_128);
 602:../src/main.c **** 
 603:../src/main.c ****   // Set the counter value to program watchdog for about 13 seconds
 604:../src/main.c ****   IWDG_SetReload(0xFFF);
 605:../src/main.c **** 
 606:../src/main.c ****   // enable the watchdog
 607:../src/main.c ****   IWDG_Enable();
 608:../src/main.c **** 
 609:../src/main.c ****   // do not disable the watchdog when the core is halted on a breakpoint
 610:../src/main.c ****   DBGMCU_Config(DBGMCU_IWDG_STOP, ENABLE);
 611:../src/main.c **** 
 612:../src/main.c ****   // reload watchdog counter
 613:../src/main.c ****   IWDG_ReloadCounter();
 614:../src/main.c **** #endif
 615:../src/main.c **** #endif
 616:../src/main.c **** 
 617:../src/main.c **** #ifdef _METEO
 618:../src/main.c ****   // initialize i2c controller
 619:../src/main.c ****   i2cConfigure();
 524              		.loc 1 619 0
 525 0320 FFF7FEFF 		bl	i2cConfigure
 526              	.LVL53:
 620:../src/main.c **** #endif
 621:../src/main.c **** 
 622:../src/main.c ****   // initialize GPIO pins leds are connecting to
 623:../src/main.c ****   led_init();
 527              		.loc 1 623 0
 528 0324 FFF7FEFF 		bl	led_init
 529              	.LVL54:
 624:../src/main.c **** 
 625:../src/main.c ****   // initialize AX25 & APRS stuff
 626:../src/main.c ****   AFSK_Init(&main_afsk);
 530              		.loc 1 626 0
 531 0328 5E4C     		ldr	r4, .L118+80
 532 032a 2046     		mov	r0, r4
 533 032c FFF7FEFF 		bl	AFSK_Init
 534              	.LVL55:
 627:../src/main.c ****   ax25_init(&main_ax25, &main_afsk, 0, 0x00);
 535              		.loc 1 627 0
 536 0330 0023     		movs	r3, #0
 537 0332 1A46     		mov	r2, r3
 538 0334 2146     		mov	r1, r4
 539 0336 5C48     		ldr	r0, .L118+84
 540 0338 FFF7FEFF 		bl	ax25_init
 541              	.LVL56:
 628:../src/main.c ****   DA_Init();
 542              		.loc 1 628 0
 543 033c FFF7FEFF 		bl	DA_Init
 544              	.LVL57:
 629:../src/main.c **** 
 630:../src/main.c ****   // configure external watchdog
 631:../src/main.c ****   io_ext_watchdog_config();
 545              		.loc 1 631 0
 546 0340 FFF7FEFF 		bl	io_ext_watchdog_config
 547              	.LVL58:
 632:../src/main.c **** 
 633:../src/main.c ****   // initializing the digipeater configuration
 634:../src/main.c ****   digi_init(main_config_data_mode);
 548              		.loc 1 634 0
 549 0344 4D4C     		ldr	r4, .L118+40
 550 0346 2068     		ldr	r0, [r4]
 551 0348 FFF7FEFF 		bl	digi_init
 552              	.LVL59:
 635:../src/main.c **** 
 636:../src/main.c ****   if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 553              		.loc 1 636 0
 554 034c 2368     		ldr	r3, [r4]
 555 034e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 556 0350 13F0010F 		tst	r3, #1
 557 0354 40F04081 		bne	.L84
 558              	.L26:
 637:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 638:../src/main.c **** 	  dallas_init(GPIOC, GPIO_Pin_11, GPIO_PinSource11, &rte_wx_dallas_average);
 639:../src/main.c **** #endif
 640:../src/main.c **** 
 641:../src/main.c **** #if defined(PARAMETEO)
 642:../src/main.c **** 	  dallas_init(GPIOC, LL_GPIO_PIN_11, 0x0, &rte_wx_dallas_average);
 643:../src/main.c **** #endif
 644:../src/main.c **** 
 645:../src/main.c **** 	  if (main_config_data_mode->wx_umb == 1) {
 646:../src/main.c **** 		  // client initialization
 647:../src/main.c **** 		  umb_master_init(&rte_wx_umb_context, main_wx_srl_ctx_ptr, main_config_data_umb);
 648:../src/main.c **** 	  }
 649:../src/main.c **** 
 650:../src/main.c **** 	  if ((main_config_data_mode->wx & WX_INTERNAL_SPARKFUN_WIND) == 0) {
 651:../src/main.c **** 		  analog_anemometer_init(_ANEMOMETER_PULSES_IN_10SEC_PER_ONE_MS_OF_WINDSPEED, 38, 100, 1);
 652:../src/main.c **** 	  }
 653:../src/main.c **** 	  else {
 654:../src/main.c **** 		  analog_anemometer_init(_ANEMOMETER_PULSES_IN_10SEC_PER_ONE_MS_OF_WINDSPEED, 38, 100, 1);
 655:../src/main.c **** 	  }
 656:../src/main.c ****   }
 657:../src/main.c **** 
 658:../src/main.c ****   // configuring interrupt priorities
 659:../src/main.c ****   it_handlers_set_priorities();
 559              		.loc 1 659 0
 560 0358 FFF7FEFF 		bl	it_handlers_set_priorities
 561              	.LVL60:
 660:../src/main.c **** 
 661:../src/main.c **** 	if (main_config_data_mode->wx_ms5611_or_bme == 0) {
 562              		.loc 1 661 0
 563 035c 474B     		ldr	r3, .L118+40
 564 035e 1B68     		ldr	r3, [r3]
 565 0360 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 566 0362 002B     		cmp	r3, #0
 567 0364 00F05E81 		beq	.L85
 662:../src/main.c **** 	 ms5611_reset(&rte_wx_ms5611_qf);
 663:../src/main.c **** 	 ms5611_read_calibration(SensorCalData, &rte_wx_ms5611_qf);
 664:../src/main.c **** 	 ms5611_trigger_measure(0, 0);
 665:../src/main.c **** 	}
 666:../src/main.c **** 	else if (main_config_data_mode->wx_ms5611_or_bme == 1) {
 568              		.loc 1 666 0
 569 0368 012B     		cmp	r3, #1
 570 036a 00F06881 		beq	.L86
 571              	.L30:
 667:../src/main.c **** 	 bme280_reset(&rte_wx_bme280_qf);
 668:../src/main.c **** 	 bme280_setup();
 669:../src/main.c **** 	 bme280_read_calibration(bme280_calibration_data);
 670:../src/main.c **** 	}
 671:../src/main.c **** 
 672:../src/main.c ****  if (main_kiss_enabled == 1) {
 572              		.loc 1 672 0
 573 036e 4F4B     		ldr	r3, .L118+88
 574 0370 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 575 0372 012B     		cmp	r3, #1
 576 0374 00F06C81 		beq	.L87
 577              	.L31:
 673:../src/main.c **** 	  // preparing initial beacon which will be sent to host PC using KISS protocol via UART
 674:../src/main.c **** 	  main_own_aprs_msg_len = sprintf(main_own_aprs_msg, "=%s%c%c%s%c%c %s", main_string_latitude, mai
 675:../src/main.c **** 
 676:../src/main.c **** 	  // terminating the aprs message
 677:../src/main.c **** 	  main_own_aprs_msg[main_own_aprs_msg_len] = 0;
 678:../src/main.c **** 
 679:../src/main.c **** 	  // 'sending' the message which will only encapsulate it inside AX25 protocol (ax25_starttx is no
 680:../src/main.c **** 	  //ax25_sendVia(&main_ax25, main_own_path, (sizeof(main_own_path) / sizeof(*(main_own_path))), ma
 681:../src/main.c **** 	  ln = ax25_sendVia_toBuffer(main_own_path, (sizeof(main_own_path) / sizeof(*(main_own_path))), ma
 682:../src/main.c **** 
 683:../src/main.c **** 	  // SendKISSToHost function cleares the output buffer hence routine need to wait till the UART wi
 684:../src/main.c **** 	  // Here this could be omitted because UART isn't used before but general idea
 685:../src/main.c **** 	  while(main_kiss_srl_ctx.srl_tx_state != SRL_TX_IDLE && main_kiss_srl_ctx.srl_tx_state != SRL_TX_
 686:../src/main.c **** 
 687:../src/main.c **** 	  // converting AX25 with beacon to KISS format
 688:../src/main.c **** 	  //ln = SendKISSToHost(main_afsk.tx_buf + 1, main_afsk.tx_fifo.tail - main_afsk.tx_fifo.head - 4,
 689:../src/main.c **** 
 690:../src/main.c **** 
 691:../src/main.c **** 	  // checking if KISS-framing was done correctly
 692:../src/main.c **** 	  if (ln != KISS_TOO_LONG_FRM) {
 693:../src/main.c **** 	#ifdef SERIAL_TX_TEST_MODE
 694:../src/main.c **** 		  // infinite loop for testing UART transmission
 695:../src/main.c **** 		  for (;;) {
 696:../src/main.c **** 
 697:../src/main.c **** 			  retval = srl_receive_data(main_kiss_srl_ctx_ptr, 100, FEND, FEND, 0, 0, 0);
 698:../src/main.c **** 	#endif
 699:../src/main.c **** 			  retval = srl_start_tx(main_kiss_srl_ctx_ptr, ln);
 700:../src/main.c **** 
 701:../src/main.c **** 	#ifdef SERIAL_TX_TEST_MODE
 702:../src/main.c **** 			  while(main_kiss_srl_ctx_ptr->srl_tx_state != SRL_TX_IDLE);
 703:../src/main.c **** 	//		  while(srl_rx_state != SRL_RX_DONE);
 704:../src/main.c **** 
 705:../src/main.c **** 			  GPIOC->ODR = (GPIOC->ODR ^ GPIO_Pin_9);
 706:../src/main.c **** 
 707:../src/main.c **** 			  if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE) {
 708:../src/main.c **** 				  GPIOC->ODR = (GPIOC->ODR ^ GPIO_Pin_8);
 709:../src/main.c **** 
 710:../src/main.c **** 				  retval = 200;
 711:../src/main.c **** 			  }
 712:../src/main.c **** 		  }
 713:../src/main.c **** 	#endif
 714:../src/main.c **** 	  }
 715:../src/main.c **** 
 716:../src/main.c ****  }
 717:../src/main.c **** 
 718:../src/main.c ****   // reinitializing AFSK and AX25 driver
 719:../src/main.c ****   AFSK_Init(&main_afsk);
 578              		.loc 1 719 0
 579 0378 4A4C     		ldr	r4, .L118+80
 580 037a 2046     		mov	r0, r4
 581 037c FFF7FEFF 		bl	AFSK_Init
 582              	.LVL61:
 720:../src/main.c **** 
 721:../src/main.c ****   ADCStartConfig();
 583              		.loc 1 721 0
 584 0380 FFF7FEFF 		bl	ADCStartConfig
 585              	.LVL62:
 722:../src/main.c ****   DACStartConfig();
 586              		.loc 1 722 0
 587 0384 FFF7FEFF 		bl	DACStartConfig
 588              	.LVL63:
 723:../src/main.c ****   AFSK_Init(&main_afsk);
 589              		.loc 1 723 0
 590 0388 2046     		mov	r0, r4
 591 038a FFF7FEFF 		bl	AFSK_Init
 592              	.LVL64:
 724:../src/main.c ****   ax25_init(&main_ax25, &main_afsk, 0, message_callback);
 593              		.loc 1 724 0
 594 038e 484B     		ldr	r3, .L118+92
 595 0390 0022     		movs	r2, #0
 596 0392 2146     		mov	r1, r4
 597 0394 4448     		ldr	r0, .L118+84
 598 0396 FFF7FEFF 		bl	ax25_init
 599              	.LVL65:
 725:../src/main.c **** 
 726:../src/main.c **** 	if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 600              		.loc 1 726 0
 601 039a 384B     		ldr	r3, .L118+40
 602 039c 1968     		ldr	r1, [r3]
 603 039e 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 604 03a0 13F0010F 		tst	r3, #1
 605 03a4 40F08D81 		bne	.L88
 606              	.L34:
 727:../src/main.c **** 	  // getting all meteo measuremenets to be sure that WX frames want be sent with zeros
 728:../src/main.c **** 	  wx_get_all_measurements(main_config_data_wx_sources, main_config_data_mode, main_config_data_umb
 729:../src/main.c **** 	}
 730:../src/main.c **** 
 731:../src/main.c ****   // start serial port i/o transaction depending on station configuration
 732:../src/main.c ****   if (main_config_data_mode->victron == 1) {
 607              		.loc 1 732 0
 608 03a8 344B     		ldr	r3, .L118+40
 609 03aa 1B68     		ldr	r3, [r3]
 610 03ac 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 611 03ae 012B     		cmp	r3, #1
 612 03b0 00F09081 		beq	.L89
 733:../src/main.c **** 	  // initializing protocol parser
 734:../src/main.c **** 	  ve_direct_parser_init(&rte_pv_struct, &rte_pv_average);
 735:../src/main.c **** 
 736:../src/main.c **** 	  // enabling timeout handling for serial port. This is required because VE protocol frame may var
 737:../src/main.c **** 	  // and serial port driver could finish reception only either on stop character or when declared 
 738:../src/main.c **** 	  // has been received.
 739:../src/main.c **** 	  srl_switch_timeout(main_kiss_srl_ctx_ptr, 1, 50);
 740:../src/main.c **** 
 741:../src/main.c **** 	  // switching UART to receive mode to be ready for data from charging controller
 742:../src/main.c **** 	  srl_receive_data(main_kiss_srl_ctx_ptr, VE_DIRECT_MAX_FRAME_LN, 0, 0, 0, 0, 0);
 743:../src/main.c ****   }
 744:../src/main.c ****   else {
 745:../src/main.c **** 	  // switching UART to receive mode to be ready for KISS frames from host
 746:../src/main.c **** 	  srl_receive_data(main_kiss_srl_ctx_ptr, 100, FEND, FEND, 0, 0, 0);
 613              		.loc 1 746 0
 614 03b4 2B4B     		ldr	r3, .L118+16
 615 03b6 1868     		ldr	r0, [r3]
 616 03b8 0023     		movs	r3, #0
 617 03ba 0293     		str	r3, [sp, #8]
 618 03bc 0193     		str	r3, [sp, #4]
 619 03be 0093     		str	r3, [sp]
 620 03c0 6FF03F03 		mvn	r3, #63
 621 03c4 1A46     		mov	r2, r3
 622 03c6 6421     		movs	r1, #100
 623 03c8 FFF7FEFF 		bl	srl_receive_data
 624              	.LVL66:
 625              	.L36:
 747:../src/main.c ****   }
 748:../src/main.c **** 
 749:../src/main.c ****   io_oc_output_low();
 626              		.loc 1 749 0
 627 03cc FFF7FEFF 		bl	io_oc_output_low
 628              	.LVL67:
 629              	.LBB26:
 630              	.LBB27:
 631              		.file 2 "../include/LedConfig.h"
   1:../include/LedConfig.h **** /*
   2:../include/LedConfig.h ****  * LedConfig.h
   3:../include/LedConfig.h ****  *
   4:../include/LedConfig.h ****  *  Created on: 05.07.2017
   5:../include/LedConfig.h ****  *      Author: mateusz
   6:../include/LedConfig.h ****  */
   7:../include/LedConfig.h **** 
   8:../include/LedConfig.h **** #ifndef LEDCONFIG_H_
   9:../include/LedConfig.h **** #define LEDCONFIG_H_
  10:../include/LedConfig.h **** 
  11:../include/LedConfig.h **** // PC8 - LED1 - upper
  12:../include/LedConfig.h **** // PC9 - LED2 - lower
  13:../include/LedConfig.h **** 
  14:../include/LedConfig.h **** #ifdef STM32F10X_MD_VL
  15:../include/LedConfig.h **** #include <stm32f10x.h>
  16:../include/LedConfig.h **** #endif
  17:../include/LedConfig.h **** #ifdef STM32L471xx
  18:../include/LedConfig.h **** #include <stm32l4xx.h>
  19:../include/LedConfig.h **** #include <stm32l4xx_ll_gpio.h>
  20:../include/LedConfig.h **** #endif
  21:../include/LedConfig.h **** 
  22:../include/LedConfig.h **** #include <stdint.h>
  23:../include/LedConfig.h **** #include <stdbool.h>
  24:../include/LedConfig.h **** 
  25:../include/LedConfig.h **** #define BLINK_DURATION_MSEC 		20 * BLINK_MSEC_PER_SVC_CALL
  26:../include/LedConfig.h **** #define BLINK_MSEC_PER_SVC_CALL 	10
  27:../include/LedConfig.h **** 
  28:../include/LedConfig.h **** /* C++ detection */
  29:../include/LedConfig.h **** #ifdef __cplusplus
  30:../include/LedConfig.h **** extern "C" {
  31:../include/LedConfig.h **** #endif
  32:../include/LedConfig.h **** 
  33:../include/LedConfig.h **** extern uint8_t led_blinking_led2;
  34:../include/LedConfig.h **** extern uint8_t led_blinking_led1;
  35:../include/LedConfig.h **** 
  36:../include/LedConfig.h **** void led_config(void);
  37:../include/LedConfig.h **** void led_init(void);
  38:../include/LedConfig.h **** void led_service_blink(void);
  39:../include/LedConfig.h **** 
  40:../include/LedConfig.h **** #ifdef STM32F10X_MD_VL
  41:../include/LedConfig.h **** inline void led_control_led1_upper(bool _in) {
  42:../include/LedConfig.h **** 	if (_in == true) {
  43:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
  44:../include/LedConfig.h **** 	}
  45:../include/LedConfig.h **** 	else {
  46:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
  47:../include/LedConfig.h **** 	}
  48:../include/LedConfig.h **** }
  49:../include/LedConfig.h **** 
  50:../include/LedConfig.h **** inline void led_control_led2_bottom(bool _in) {
  51:../include/LedConfig.h **** 	if (_in == true) {
  52:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
  53:../include/LedConfig.h **** 	}
  54:../include/LedConfig.h **** 	else {
  55:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
  56:../include/LedConfig.h **** 	}
  57:../include/LedConfig.h **** }
  58:../include/LedConfig.h **** 
  59:../include/LedConfig.h **** inline void led_flip_led1_upper(void) {
  60:../include/LedConfig.h **** 	if ((GPIOC->ODR & GPIO_ODR_ODR8)  == GPIO_ODR_ODR8) {
  61:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
  62:../include/LedConfig.h **** 	}
  63:../include/LedConfig.h **** 	else {
  64:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
  65:../include/LedConfig.h **** 	}
  66:../include/LedConfig.h **** }
  67:../include/LedConfig.h **** 
  68:../include/LedConfig.h **** inline void led_flip_led2_bottom(void) {
  69:../include/LedConfig.h **** 	if ((GPIOC->ODR & GPIO_ODR_ODR9)  == GPIO_ODR_ODR9) {
  70:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
  71:../include/LedConfig.h **** 	}
  72:../include/LedConfig.h **** 	else {
  73:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
  74:../include/LedConfig.h **** 	}
  75:../include/LedConfig.h **** }
  76:../include/LedConfig.h **** 
  77:../include/LedConfig.h **** inline void led_blink_led1_upper(void) {
  78:../include/LedConfig.h **** 	led_blinking_led1 = BLINK_DURATION_MSEC;
  79:../include/LedConfig.h **** 
  80:../include/LedConfig.h **** 	led_flip_led1_upper();
  81:../include/LedConfig.h **** }
  82:../include/LedConfig.h **** 
  83:../include/LedConfig.h **** inline void led_blink_led2_botoom(void) {
  84:../include/LedConfig.h **** 	led_blinking_led2 = BLINK_DURATION_MSEC;
  85:../include/LedConfig.h **** 
  86:../include/LedConfig.h **** 	led_flip_led2_bottom();
  87:../include/LedConfig.h **** 
  88:../include/LedConfig.h **** }
  89:../include/LedConfig.h **** #endif
  90:../include/LedConfig.h **** 
  91:../include/LedConfig.h **** #ifdef STM32L471xx
  92:../include/LedConfig.h **** inline void led_control_led1_upper(bool _in) {
  93:../include/LedConfig.h **** 	if (_in == true) {
  94:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
  95:../include/LedConfig.h **** 	}
  96:../include/LedConfig.h **** 	else {
  97:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
 632              		.loc 2 97 0
 633 03d0 384B     		ldr	r3, .L118+96
 634 03d2 9A69     		ldr	r2, [r3, #24]
 635 03d4 42F08072 		orr	r2, r2, #16777216
 636 03d8 9A61     		str	r2, [r3, #24]
 637              	.LVL68:
 638              	.LBE27:
 639              	.LBE26:
 640              	.LBB28:
 641              	.LBB29:
  98:../include/LedConfig.h **** 	}
  99:../include/LedConfig.h **** }
 100:../include/LedConfig.h **** 
 101:../include/LedConfig.h **** inline void led_control_led2_bottom(bool _in) {
 102:../include/LedConfig.h **** 	if (_in == true) {
 103:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
 104:../include/LedConfig.h **** 	}
 105:../include/LedConfig.h **** 	else {
 106:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
 642              		.loc 2 106 0
 643 03da 9A69     		ldr	r2, [r3, #24]
 644 03dc 42F00072 		orr	r2, r2, #33554432
 645 03e0 9A61     		str	r2, [r3, #24]
 646              	.LVL69:
 647              	.LBE29:
 648              	.LBE28:
 750:../src/main.c **** 
 751:../src/main.c ****   led_control_led1_upper(false);
 752:../src/main.c ****   led_control_led2_bottom(false);
 753:../src/main.c **** 
 754:../src/main.c ****   // configuting system timers
 755:../src/main.c ****   TimerConfig();
 649              		.loc 1 755 0
 650 03e2 FFF7FEFF 		bl	TimerConfig
 651              	.LVL70:
 756:../src/main.c **** 
 757:../src/main.c ****   if (main_config_data_basic-> beacon_at_bootup == 1)
 652              		.loc 1 757 0
 653 03e6 2D4B     		ldr	r3, .L118+72
 654 03e8 1B68     		ldr	r3, [r3]
 655 03ea 93F89730 		ldrb	r3, [r3, #151]	@ zero_extendqisi2
 656 03ee 012B     		cmp	r3, #1
 657 03f0 00F08481 		beq	.L90
 658              	.L37:
 758:../src/main.c **** 	  beacon_send_own();
 759:../src/main.c **** 
 760:../src/main.c ****   // initialize UMB transaction
 761:../src/main.c ****   if (main_config_data_mode->wx_umb == 1) {
 659              		.loc 1 761 0
 660 03f4 214B     		ldr	r3, .L118+40
 661 03f6 1B68     		ldr	r3, [r3]
 662 03f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 663 03fa 012B     		cmp	r3, #1
 664 03fc 00F08181 		beq	.L91
 665              	.L38:
 762:../src/main.c **** 	umb_0x26_status_request(&rte_wx_umb, &rte_wx_umb_context, main_config_data_umb);
 763:../src/main.c ****   }
 764:../src/main.c **** 
 765:../src/main.c **** #ifdef INTERNAL_WATCHDOG
 766:../src/main.c ****    // reload watchdog counter
 767:../src/main.c ****    IWDG_ReloadCounter();
 666              		.loc 1 767 0
 667 0400 FFF7FEFF 		bl	IWDG_ReloadCounter
 668              	.LVL71:
 768:../src/main.c **** #endif
 769:../src/main.c **** 
 770:../src/main.c ****    io_ext_watchdog_service();
 669              		.loc 1 770 0
 670 0404 FFF7FEFF 		bl	io_ext_watchdog_service
 671              	.LVL72:
 211:../src/main.c **** 
 672              		.loc 1 211 0
 673 0408 0024     		movs	r4, #0
 674 040a E1E2     		b	.L39
 675              	.L17:
 380:../src/main.c **** 	  main_symbol_s = '#';
 676              		.loc 1 380 0
 677 040c 114B     		ldr	r3, .L118
 678 040e 3122     		movs	r2, #49
 679 0410 1A70     		strb	r2, [r3]
 381:../src/main.c **** 	  break;
 680              		.loc 1 381 0
 681 0412 114B     		ldr	r3, .L118+4
 682 0414 2322     		movs	r2, #35
 683 0416 1A70     		strb	r2, [r3]
 382:../src/main.c ****   case 2:		// _SYMBOL_HOUSE
 684              		.loc 1 382 0
 685 0418 E0E6     		b	.L20
 686              	.L18:
 384:../src/main.c **** 	  main_symbol_s = '-';
 687              		.loc 1 384 0
 688 041a 0E4B     		ldr	r3, .L118
 689 041c 2F22     		movs	r2, #47
 690 041e 1A70     		strb	r2, [r3]
 385:../src/main.c **** 	  break;
 691              		.loc 1 385 0
 692 0420 0D4B     		ldr	r3, .L118+4
 693 0422 2D22     		movs	r2, #45
 694 0424 1A70     		strb	r2, [r3]
 386:../src/main.c ****   case 3:		// _SYMBOL_RXIGATE
 695              		.loc 1 386 0
 696 0426 D9E6     		b	.L20
 697              	.L19:
 388:../src/main.c **** 	  main_symbol_s = '&';
 698              		.loc 1 388 0
 699 0428 0A4B     		ldr	r3, .L118
 700 042a 4922     		movs	r2, #73
 701 042c 1A70     		strb	r2, [r3]
 389:../src/main.c **** 	  break;
 702              		.loc 1 389 0
 703 042e 0A4B     		ldr	r3, .L118+4
 704 0430 2622     		movs	r2, #38
 705 0432 1A70     		strb	r2, [r3]
 390:../src/main.c ****   default:		// _SYMBOL_IGATE
 706              		.loc 1 390 0
 707 0434 D2E6     		b	.L20
 708              	.L14:
 392:../src/main.c **** 	  main_symbol_s = '&';
 709              		.loc 1 392 0
 710 0436 074B     		ldr	r3, .L118
 711 0438 5222     		movs	r2, #82
 712 043a 1A70     		strb	r2, [r3]
 393:../src/main.c **** 	  break;
 713              		.loc 1 393 0
 714 043c 064B     		ldr	r3, .L118+4
 715 043e 2622     		movs	r2, #38
 716 0440 1A70     		strb	r2, [r3]
 394:../src/main.c **** 
 717              		.loc 1 394 0
 718 0442 CBE6     		b	.L20
 719              	.L81:
 496:../src/main.c **** 
 720              		.loc 1 496 0
 721 0444 0B4A     		ldr	r2, .L118+32
 722 0446 4FF49641 		mov	r1, #19200
 723 044a 1160     		str	r1, [r2]
 499:../src/main.c ****   }
 724              		.loc 1 499 0
 725 044c 174A     		ldr	r2, .L118+88
 726 044e 1570     		strb	r5, [r2]
 727 0450 2CE7     		b	.L21
 728              	.L119:
 729 0452 00BF     		.align	2
 730              	.L118:
 731 0454 00000000 		.word	.LANCHOR2
 732 0458 00000000 		.word	.LANCHOR3
 733 045c 00000000 		.word	.LANCHOR4
 734 0460 00000000 		.word	GPIO_InitTypeDef
 735 0464 00000000 		.word	main_kiss_srl_ctx_ptr
 736 0468 00000000 		.word	main_kiss_srl_ctx
 737 046c 00000000 		.word	main_wx_srl_ctx_ptr
 738 0470 00000000 		.word	main_wx_srl_ctx
 739 0474 00000000 		.word	main_target_kiss_baudrate
 740 0478 00000000 		.word	main_target_wx_baudrate
 741 047c 00000000 		.word	.LANCHOR5
 742 0480 00000000 		.word	srl_usart1_tx_buffer
 743 0484 00000000 		.word	srl_usart1_rx_buffer
 744 0488 00380140 		.word	1073821696
 745 048c 00000000 		.word	srl_usart2_tx_buffer
 746 0490 00000000 		.word	srl_usart2_rx_buffer
 747 0494 00440040 		.word	1073759232
 748 0498 00000000 		.word	main_own_path
 749 049c 00000000 		.word	.LANCHOR1
 750 04a0 00000000 		.word	.LANCHOR10
 751 04a4 00000000 		.word	main_afsk
 752 04a8 00000000 		.word	main_ax25
 753 04ac 00000000 		.word	.LANCHOR6
 754 04b0 00000000 		.word	message_callback
 755 04b4 00080048 		.word	1207961600
 756              	.L82:
 505:../src/main.c **** 
 757              		.loc 1 505 0
 758 04b8 4FF49643 		mov	r3, #19200
 759 04bc 9B4A     		ldr	r2, .L120
 760 04be 1360     		str	r3, [r2]
 508:../src/main.c **** 
 761              		.loc 1 508 0
 762 04c0 9B48     		ldr	r0, .L120+4
 763 04c2 0022     		movs	r2, #0
 764 04c4 80F84420 		strb	r2, [r0, #68]
 511:../src/main.c **** 
 765              		.loc 1 511 0
 766 04c8 0124     		movs	r4, #1
 767 04ca 0394     		str	r4, [sp, #12]
 768 04cc 0293     		str	r3, [sp, #8]
 769 04ce 4FF40073 		mov	r3, #512
 770 04d2 0193     		str	r3, [sp, #4]
 771 04d4 974A     		ldr	r2, .L120+8
 772 04d6 0092     		str	r2, [sp]
 773 04d8 974A     		ldr	r2, .L120+12
 774 04da 9849     		ldr	r1, .L120+16
 775 04dc FFF7FEFF 		bl	srl_init
 776              	.LVL73:
 513:../src/main.c **** 
 777              		.loc 1 513 0
 778 04e0 974D     		ldr	r5, .L120+20
 779 04e2 40F6B832 		movw	r2, #3000
 780 04e6 2146     		mov	r1, r4
 781 04e8 2868     		ldr	r0, [r5]
 782 04ea FFF7FEFF 		bl	srl_switch_timeout
 783              	.LVL74:
 515:../src/main.c **** 
 784              		.loc 1 515 0
 785 04ee 2868     		ldr	r0, [r5]
 786 04f0 FFF7FEFF 		bl	davis_init
 787              	.LVL75:
 518:../src/main.c **** 
 788              		.loc 1 518 0
 789 04f4 2046     		mov	r0, r4
 790 04f6 FFF7FEFF 		bl	davis_wake_up
 791              	.LVL76:
 792 04fa B0FA80F0 		clz	r0, r0
 793 04fe 4009     		lsrs	r0, r0, #5
 794 0500 904B     		ldr	r3, .L120+24
 795 0502 1870     		strb	r0, [r3]
 521:../src/main.c **** 		  // turn LCD backlight on..
 796              		.loc 1 521 0
 797 0504 88B1     		cbz	r0, .L23
 523:../src/main.c **** 
 798              		.loc 1 523 0
 799 0506 2046     		mov	r0, r4
 800 0508 FFF7FEFF 		bl	davis_control_backlight
 801              	.LVL77:
 526:../src/main.c **** 
 802              		.loc 1 526 0
 803 050c 4FF47A70 		mov	r0, #1000
 804 0510 FFF7FEFF 		bl	delay_fixed
 805              	.LVL78:
 529:../src/main.c **** 
 806              		.loc 1 529 0
 807 0514 0020     		movs	r0, #0
 808 0516 FFF7FEFF 		bl	davis_control_backlight
 809              	.LVL79:
 532:../src/main.c **** 
 810              		.loc 1 532 0
 811 051a 8B4B     		ldr	r3, .L120+28
 812 051c 0022     		movs	r2, #0
 813 051e 1A70     		strb	r2, [r3]
 537:../src/main.c **** 
 814              		.loc 1 537 0
 815 0520 8A4B     		ldr	r3, .L120+32
 816 0522 1C70     		strb	r4, [r3]
 540:../src/main.c **** 
 817              		.loc 1 540 0
 818 0524 FFF7FEFF 		bl	davis_trigger_rxcheck_packet
 819              	.LVL80:
 820 0528 E5E6     		b	.L24
 821              	.L23:
 545:../src/main.c **** 		  main_kiss_srl_ctx_ptr->srl_rx_state = SRL_RX_NOT_CONFIG;
 822              		.loc 1 545 0
 823 052a 4FF41653 		mov	r3, #9600
 824 052e 7F4A     		ldr	r2, .L120
 825 0530 1360     		str	r3, [r2]
 546:../src/main.c **** 
 826              		.loc 1 546 0
 827 0532 834A     		ldr	r2, .L120+20
 828 0534 1068     		ldr	r0, [r2]
 829 0536 0022     		movs	r2, #0
 830 0538 80F84420 		strb	r2, [r0, #68]
 549:../src/main.c **** 		  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffe
 831              		.loc 1 549 0
 832 053c 0124     		movs	r4, #1
 833 053e 0394     		str	r4, [sp, #12]
 834 0540 0293     		str	r3, [sp, #8]
 835 0542 4FF40073 		mov	r3, #512
 836 0546 0193     		str	r3, [sp, #4]
 837 0548 7A4A     		ldr	r2, .L120+8
 838 054a 0092     		str	r2, [sp]
 839 054c 7A4A     		ldr	r2, .L120+12
 840 054e 7B49     		ldr	r1, .L120+16
 841 0550 FFF7FEFF 		bl	srl_init
 842              	.LVL81:
 550:../src/main.c **** 
 843              		.loc 1 550 0
 844 0554 0394     		str	r4, [sp, #12]
 845 0556 7E4B     		ldr	r3, .L120+36
 846 0558 1B68     		ldr	r3, [r3]
 847 055a 0293     		str	r3, [sp, #8]
 848 055c 6023     		movs	r3, #96
 849 055e 0193     		str	r3, [sp, #4]
 850 0560 7C4A     		ldr	r2, .L120+40
 851 0562 0092     		str	r2, [sp]
 852 0564 7C4A     		ldr	r2, .L120+44
 853 0566 7D49     		ldr	r1, .L120+48
 854 0568 7D48     		ldr	r0, .L120+52
 855 056a 0068     		ldr	r0, [r0]
 856 056c FFF7FEFF 		bl	srl_init
 857              	.LVL82:
 858 0570 C1E6     		b	.L24
 859              	.L83:
 556:../src/main.c **** 
 860              		.loc 1 556 0
 861 0572 7C4D     		ldr	r5, .L120+56
 862 0574 2B68     		ldr	r3, [r5]
 863 0576 7C4A     		ldr	r2, .L120+60
 864 0578 0121     		movs	r1, #1
 865 057a 7C48     		ldr	r0, .L120+64
 866 057c FFF7FEFF 		bl	rtu_serial_init
 867              	.LVL83:
 558:../src/main.c **** 
 868              		.loc 1 558 0
 869 0580 2B68     		ldr	r3, [r5]
 870 0582 1B88     		ldrh	r3, [r3]
 871 0584 724E     		ldr	r6, .L120+36
 872 0586 3360     		str	r3, [r6]
 561:../src/main.c **** 	  srl_init(main_wx_srl_ctx_ptr, USART2, srl_usart2_rx_buffer, RX_BUFFER_2_LN, srl_usart2_tx_buffer
 873              		.loc 1 561 0
 874 0588 0124     		movs	r4, #1
 875 058a 0394     		str	r4, [sp, #12]
 876 058c 674B     		ldr	r3, .L120
 877 058e 1B68     		ldr	r3, [r3]
 878 0590 0293     		str	r3, [sp, #8]
 879 0592 4FF40073 		mov	r3, #512
 880 0596 0193     		str	r3, [sp, #4]
 881 0598 664A     		ldr	r2, .L120+8
 882 059a 0092     		str	r2, [sp]
 883 059c 664A     		ldr	r2, .L120+12
 884 059e 6749     		ldr	r1, .L120+16
 885 05a0 6748     		ldr	r0, .L120+20
 886 05a2 0068     		ldr	r0, [r0]
 887 05a4 FFF7FEFF 		bl	srl_init
 888              	.LVL84:
 562:../src/main.c **** 	  srl_switch_tx_delay(main_wx_srl_ctx_ptr, 1);
 889              		.loc 1 562 0
 890 05a8 2B68     		ldr	r3, [r5]
 891 05aa 6D4D     		ldr	r5, .L120+52
 892 05ac DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 893 05ae 0393     		str	r3, [sp, #12]
 894 05b0 3368     		ldr	r3, [r6]
 895 05b2 0293     		str	r3, [sp, #8]
 896 05b4 6023     		movs	r3, #96
 897 05b6 0193     		str	r3, [sp, #4]
 898 05b8 664A     		ldr	r2, .L120+40
 899 05ba 0092     		str	r2, [sp]
 900 05bc 664A     		ldr	r2, .L120+44
 901 05be 6749     		ldr	r1, .L120+48
 902 05c0 2868     		ldr	r0, [r5]
 903 05c2 FFF7FEFF 		bl	srl_init
 904              	.LVL85:
 563:../src/main.c **** 
 905              		.loc 1 563 0
 906 05c6 2146     		mov	r1, r4
 907 05c8 2868     		ldr	r0, [r5]
 908 05ca FFF7FEFF 		bl	srl_switch_tx_delay
 909              	.LVL86:
 566:../src/main.c **** 
 910              		.loc 1 566 0
 911 05ce 684B     		ldr	r3, .L120+68
 912 05d0 1C70     		strb	r4, [r3]
 568:../src/main.c ****   }
 913              		.loc 1 568 0
 914 05d2 FFF7FEFF 		bl	rtu_serial_start
 915              	.LVL87:
 916 05d6 8EE6     		b	.L24
 917              	.L84:
 642:../src/main.c **** #endif
 918              		.loc 1 642 0
 919 05d8 664B     		ldr	r3, .L120+72
 920 05da 0022     		movs	r2, #0
 921 05dc 4FF40061 		mov	r1, #2048
 922 05e0 6548     		ldr	r0, .L120+76
 923 05e2 FFF7FEFF 		bl	dallas_init
 924              	.LVL88:
 645:../src/main.c **** 		  // client initialization
 925              		.loc 1 645 0
 926 05e6 2368     		ldr	r3, [r4]
 927 05e8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 928 05ea 012B     		cmp	r3, #1
 929 05ec 06D1     		bne	.L27
 647:../src/main.c **** 	  }
 930              		.loc 1 647 0
 931 05ee 634B     		ldr	r3, .L120+80
 932 05f0 1A68     		ldr	r2, [r3]
 933 05f2 5B4B     		ldr	r3, .L120+52
 934 05f4 1968     		ldr	r1, [r3]
 935 05f6 6248     		ldr	r0, .L120+84
 936 05f8 FFF7FEFF 		bl	umb_master_init
 937              	.LVL89:
 938              	.L27:
 650:../src/main.c **** 		  analog_anemometer_init(_ANEMOMETER_PULSES_IN_10SEC_PER_ONE_MS_OF_WINDSPEED, 38, 100, 1);
 939              		.loc 1 650 0
 940 05fc 614B     		ldr	r3, .L120+88
 941 05fe 1B68     		ldr	r3, [r3]
 942 0600 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 943 0602 13F0040F 		tst	r3, #4
 944 0606 06D1     		bne	.L28
 651:../src/main.c **** 	  }
 945              		.loc 1 651 0
 946 0608 0123     		movs	r3, #1
 947 060a 6422     		movs	r2, #100
 948 060c 2621     		movs	r1, #38
 949 060e 0A20     		movs	r0, #10
 950 0610 FFF7FEFF 		bl	analog_anemometer_init
 951              	.LVL90:
 952 0614 A0E6     		b	.L26
 953              	.L28:
 654:../src/main.c **** 	  }
 954              		.loc 1 654 0
 955 0616 0123     		movs	r3, #1
 956 0618 6422     		movs	r2, #100
 957 061a 2621     		movs	r1, #38
 958 061c 0A20     		movs	r0, #10
 959 061e FFF7FEFF 		bl	analog_anemometer_init
 960              	.LVL91:
 961 0622 99E6     		b	.L26
 962              	.L85:
 662:../src/main.c **** 	 ms5611_read_calibration(SensorCalData, &rte_wx_ms5611_qf);
 963              		.loc 1 662 0
 964 0624 584C     		ldr	r4, .L120+92
 965 0626 2046     		mov	r0, r4
 966 0628 FFF7FEFF 		bl	ms5611_reset
 967              	.LVL92:
 663:../src/main.c **** 	 ms5611_trigger_measure(0, 0);
 968              		.loc 1 663 0
 969 062c 2146     		mov	r1, r4
 970 062e 5748     		ldr	r0, .L120+96
 971 0630 FFF7FEFF 		bl	ms5611_read_calibration
 972              	.LVL93:
 664:../src/main.c **** 	}
 973              		.loc 1 664 0
 974 0634 0021     		movs	r1, #0
 975 0636 0846     		mov	r0, r1
 976 0638 FFF7FEFF 		bl	ms5611_trigger_measure
 977              	.LVL94:
 978 063c 97E6     		b	.L30
 979              	.L86:
 667:../src/main.c **** 	 bme280_setup();
 980              		.loc 1 667 0
 981 063e 5448     		ldr	r0, .L120+100
 982 0640 FFF7FEFF 		bl	bme280_reset
 983              	.LVL95:
 668:../src/main.c **** 	 bme280_read_calibration(bme280_calibration_data);
 984              		.loc 1 668 0
 985 0644 FFF7FEFF 		bl	bme280_setup
 986              	.LVL96:
 669:../src/main.c **** 	}
 987              		.loc 1 669 0
 988 0648 5248     		ldr	r0, .L120+104
 989 064a FFF7FEFF 		bl	bme280_read_calibration
 990              	.LVL97:
 991 064e 8EE6     		b	.L30
 992              	.L87:
 674:../src/main.c **** 
 993              		.loc 1 674 0
 994 0650 514B     		ldr	r3, .L120+108
 995 0652 1A68     		ldr	r2, [r3]
 996 0654 92F90C30 		ldrsb	r3, [r2, #12]
 997 0658 92F91410 		ldrsb	r1, [r2, #20]
 998 065c 1532     		adds	r2, r2, #21
 999 065e 4F4C     		ldr	r4, .L120+112
 1000 0660 0492     		str	r2, [sp, #16]
 1001 0662 4F4A     		ldr	r2, .L120+116
 1002 0664 92F90020 		ldrsb	r2, [r2]
 1003 0668 0392     		str	r2, [sp, #12]
 1004 066a 0291     		str	r1, [sp, #8]
 1005 066c 4D4A     		ldr	r2, .L120+120
 1006 066e 0192     		str	r2, [sp, #4]
 1007 0670 4D4A     		ldr	r2, .L120+124
 1008 0672 92F90020 		ldrsb	r2, [r2]
 1009 0676 0092     		str	r2, [sp]
 1010 0678 4C4A     		ldr	r2, .L120+128
 1011 067a 4D49     		ldr	r1, .L120+132
 1012 067c 2046     		mov	r0, r4
 1013 067e FFF7FEFF 		bl	sprintf
 1014              	.LVL98:
 1015 0682 C3B2     		uxtb	r3, r0
 1016 0684 4B4A     		ldr	r2, .L120+136
 1017 0686 1370     		strb	r3, [r2]
 677:../src/main.c **** 
 1018              		.loc 1 677 0
 1019 0688 0022     		movs	r2, #0
 1020 068a E254     		strb	r2, [r4, r3]
 681:../src/main.c **** 
 1021              		.loc 1 681 0
 1022 068c 4FF40072 		mov	r2, #512
 1023 0690 0192     		str	r2, [sp, #4]
 1024 0692 274A     		ldr	r2, .L120+4
 1025 0694 5269     		ldr	r2, [r2, #20]
 1026 0696 0092     		str	r2, [sp]
 1027 0698 2246     		mov	r2, r4
 1028 069a 0321     		movs	r1, #3
 1029 069c 4648     		ldr	r0, .L120+140
 1030 069e FFF7FEFF 		bl	ax25_sendVia_toBuffer
 1031              	.LVL99:
 1032 06a2 0790     		str	r0, [sp, #28]
 1033              	.L33:
 685:../src/main.c **** 
 1034              		.loc 1 685 0 discriminator 2
 1035 06a4 224B     		ldr	r3, .L120+4
 1036 06a6 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1037 06aa 012B     		cmp	r3, #1
 1038 06ac 01D0     		beq	.L32
 685:../src/main.c **** 
 1039              		.loc 1 685 0 is_stmt 0 discriminator 1
 1040 06ae 042B     		cmp	r3, #4
 1041 06b0 F8D1     		bne	.L33
 1042              	.L32:
 699:../src/main.c **** 
 1043              		.loc 1 699 0 is_stmt 1
 1044 06b2 01B2     		sxth	r1, r0
 1045 06b4 224B     		ldr	r3, .L120+20
 1046 06b6 1868     		ldr	r0, [r3]
 1047 06b8 FFF7FEFF 		bl	srl_start_tx
 1048              	.LVL100:
 1049 06bc 3F4B     		ldr	r3, .L120+144
 1050 06be 1870     		strb	r0, [r3]
 1051 06c0 5AE6     		b	.L31
 1052              	.L88:
 728:../src/main.c **** 	}
 1053              		.loc 1 728 0
 1054 06c2 284B     		ldr	r3, .L120+56
 1055 06c4 1B68     		ldr	r3, [r3]
 1056 06c6 2D4A     		ldr	r2, .L120+80
 1057 06c8 1268     		ldr	r2, [r2]
 1058 06ca 3D48     		ldr	r0, .L120+148
 1059 06cc 0068     		ldr	r0, [r0]
 1060 06ce FFF7FEFF 		bl	wx_get_all_measurements
 1061              	.LVL101:
 1062 06d2 69E6     		b	.L34
 1063              	.L89:
 734:../src/main.c **** 
 1064              		.loc 1 734 0
 1065 06d4 3B49     		ldr	r1, .L120+152
 1066 06d6 3C48     		ldr	r0, .L120+156
 1067 06d8 FFF7FEFF 		bl	ve_direct_parser_init
 1068              	.LVL102:
 739:../src/main.c **** 
 1069              		.loc 1 739 0
 1070 06dc 184C     		ldr	r4, .L120+20
 1071 06de 3222     		movs	r2, #50
 1072 06e0 0121     		movs	r1, #1
 1073 06e2 2068     		ldr	r0, [r4]
 1074 06e4 FFF7FEFF 		bl	srl_switch_timeout
 1075              	.LVL103:
 742:../src/main.c ****   }
 1076              		.loc 1 742 0
 1077 06e8 0022     		movs	r2, #0
 1078 06ea 0292     		str	r2, [sp, #8]
 1079 06ec 0192     		str	r2, [sp, #4]
 1080 06ee 0092     		str	r2, [sp]
 1081 06f0 1346     		mov	r3, r2
 1082 06f2 BA21     		movs	r1, #186
 1083 06f4 2068     		ldr	r0, [r4]
 1084 06f6 FFF7FEFF 		bl	srl_receive_data
 1085              	.LVL104:
 1086 06fa 67E6     		b	.L36
 1087              	.L90:
 758:../src/main.c **** 
 1088              		.loc 1 758 0
 1089 06fc FFF7FEFF 		bl	beacon_send_own
 1090              	.LVL105:
 1091 0700 78E6     		b	.L37
 1092              	.L91:
 762:../src/main.c ****   }
 1093              		.loc 1 762 0
 1094 0702 1E4B     		ldr	r3, .L120+80
 1095 0704 1A68     		ldr	r2, [r3]
 1096 0706 1E49     		ldr	r1, .L120+84
 1097 0708 3048     		ldr	r0, .L120+160
 1098 070a FFF7FEFF 		bl	umb_0x26_status_request
 1099              	.LVL106:
 1100 070e 77E6     		b	.L38
 1101              	.LVL107:
 1102              	.L111:
 1103              	.LBB30:
 1104              	.LBB31:
 1105              	.LBB32:
 1106              	.LBB33:
 1107              		.file 3 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h"
   1:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**************************************************************************//**
   2:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @version  V5.2.0
   5:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @date     08. May 2019
   6:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  ******************************************************************************/
   7:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*
   8:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  10:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  12:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  16:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  18:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * limitations under the License.
  23:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
  24:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  25:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  28:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  34:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __has_builtin
  36:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  38:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  39:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ASM
  41:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  43:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __INLINE
  44:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  46:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  49:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif                                           
  52:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  55:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __USED
  56:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  58:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __WEAK
  59:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  61:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED
  62:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  64:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  67:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  70:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  78:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  86:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  94:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 102:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 110:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 113:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 116:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 119:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 120:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 122:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 124:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 125:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            in the used linker script.
 129:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 130:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 131:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 133:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 135:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 136:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t const* src;
 137:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 138:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 139:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __copy_table_t;
 140:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 141:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 142:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 143:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 144:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __zero_table_t;
 145:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 146:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 151:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 155:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 156:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 157:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 161:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 162:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 163:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   _start();
 164:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 165:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 166:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 168:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 169:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 172:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 173:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 176:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 177:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 180:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 181:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 184:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 185:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 189:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 190:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 191:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 192:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 196:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 198:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 200:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 201:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 202:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 203:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 207:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 209:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 211:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 212:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 213:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 214:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register
 215:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Control Register value
 217:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 218:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 220:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 221:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 222:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 224:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 225:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 226:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 227:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 229:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 233:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 235:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 236:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 237:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 239:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 240:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 241:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 242:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 243:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 244:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register
 245:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 248:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 250:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 252:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 253:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 254:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 256:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 260:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 262:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 264:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 265:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 266:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 267:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 268:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               IPSR Register value
 271:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 272:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 274:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 275:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 276:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 278:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 279:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 280:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 281:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 282:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get APSR Register
 283:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               APSR Register value
 285:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 286:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 288:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 289:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 290:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 292:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 293:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 294:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 295:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 296:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               xPSR Register value
 299:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 300:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 302:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 303:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 304:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 306:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 307:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 308:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 309:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 310:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 313:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 314:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 316:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 317:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 318:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 320:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 321:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 322:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 323:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 325:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 328:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 329:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 331:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 332:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 333:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 335:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 336:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 337:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 338:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 339:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 340:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 344:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 346:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 348:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 349:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 350:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 352:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 356:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 358:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 360:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 361:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 362:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 363:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 364:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 367:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 368:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 370:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 371:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 372:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 374:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 375:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 376:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 377:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 379:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 382:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 383:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 385:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 386:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 387:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 389:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 390:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 391:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 392:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 393:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 394:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 398:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 400:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 402:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 403:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 404:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 406:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 410:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 412:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 414:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 415:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 416:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 417:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 419:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               SP Register value
 422:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 423:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 425:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 426:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 427:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 429:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 430:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 431:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 432:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 433:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 437:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 439:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 441:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 442:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 443:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 444:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 445:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 448:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 449:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 451:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 452:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 453:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 455:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 456:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 457:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 458:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 460:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 463:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 464:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 466:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 467:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 468:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 470:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 471:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 472:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 473:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 474:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 475:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 479:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 481:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 483:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 484:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 485:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 487:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 491:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 493:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 495:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 496:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 497:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 498:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 502:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable FIQ
 503:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 506:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 508:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 510:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 511:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 512:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 513:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable FIQ
 514:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 517:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 519:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 521:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 522:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 523:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 524:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority
 525:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 527:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 528:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 530:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 531:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 532:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 534:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 535:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 536:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 537:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 539:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 542:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 543:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 545:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 546:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 547:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 549:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 550:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 551:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 552:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 553:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 554:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority
 555:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 558:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 560:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 562:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 563:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 564:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 566:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 570:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 572:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 574:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 575:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 576:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 577:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 578:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 583:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 585:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 587:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 588:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 589:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 590:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 593:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 594:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 596:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 597:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 598:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 600:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 601:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 602:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 603:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 605:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 608:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 609:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 611:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 612:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 613:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 615:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 616:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 617:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 618:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 619:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 620:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 624:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 626:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 628:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 629:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 630:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 632:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 636:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 638:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 640:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 641:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 642:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 646:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 647:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 650:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 651:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 655:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 656:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 659:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 661:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 665:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 666:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 667:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 669:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 670:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 671:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 672:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 674:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 678:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 681:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 683:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 686:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 687:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 688:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 690:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 691:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 692:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 693:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 694:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 695:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 696:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 700:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 701:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 704:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 706:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 711:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 713:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 714:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 715:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 716:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 718:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 722:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 725:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 727:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 731:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 733:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 734:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 735:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 736:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 737:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 738:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 742:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 743:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 746:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 748:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 752:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 753:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 754:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 756:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 757:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 758:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 759:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 760:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 762:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 766:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 769:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 771:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 774:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 775:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 776:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 778:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 779:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 780:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 781:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 782:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 783:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 784:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 788:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 789:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 792:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 794:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 799:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 801:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 802:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 803:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 804:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 806:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 810:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 813:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 815:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 819:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 821:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 822:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 823:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 824:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 827:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 828:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 829:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get FPSCR
 830:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 833:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 835:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 843:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 844:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 845:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 847:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 848:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 849:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(0U);
 850:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 851:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 852:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 853:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 854:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 855:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set FPSCR
 856:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 859:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 861:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 869:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 871:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 872:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)fpscr;
 873:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 874:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 875:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 876:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 877:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 879:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 880:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Access to dedicated instructions
 883:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 884:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** */
 885:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 886:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 894:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 898:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 899:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 900:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   No Operation
 901:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 903:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 905:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 906:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 909:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 911:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 912:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 913:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Event
 914:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 917:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 919:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 920:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 921:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Send Event
 922:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 924:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 926:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 927:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 928:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            after the instruction has been completed.
 932:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 933:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 935:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 937:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 938:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 939:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 940:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 944:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 946:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1108              		.loc 3 946 0
 1109              		.syntax unified
 1110              	@ 946 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 1111 0710 BFF34F8F 		dsb 0xF
 1112              	@ 0 "" 2
 1113              		.thumb
 1114              		.syntax unified
 1115              	.LBE33:
 1116              	.LBE32:
 1117              		.file 4 "../system/include/cmsis/stm32l4xx/core_cm4.h"
   1:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**************************************************************************//**
   2:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @file     core_cm4.h
   3:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @version  V5.1.0
   5:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @date     13. March 2019
   6:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
   7:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*
   8:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  10:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  12:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * not use this file except in compliance with the License.
  14:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * You may obtain a copy of the License at
  15:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  16:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  18:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * limitations under the License.
  23:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  24:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  25:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined (__clang__)
  28:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
  30:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  31:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  34:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include <stdint.h>
  35:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  36:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
  37:../system/include/cmsis/stm32l4xx/core_cm4.h ****  extern "C" {
  38:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
  39:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  40:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
  41:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../system/include/cmsis/stm32l4xx/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  44:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  47:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  50:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  53:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  54:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  55:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
  56:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                 CMSIS definitions
  57:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
  58:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
  59:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup Cortex_M4
  60:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
  61:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  62:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  63:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include "cmsis_version.h"
  64:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  65:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* CMSIS CM4 definitions */
  66:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:../system/include/cmsis/stm32l4xx/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  71:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  73:../system/include/cmsis/stm32l4xx/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../system/include/cmsis/stm32l4xx/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
  76:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined ( __CC_ARM )
  77:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
  80:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
  81:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
  83:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
  84:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
  85:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
  86:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
  87:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  88:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __ARM_FP
  90:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
  92:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
  93:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
  95:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
  96:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
  97:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
  98:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
  99:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 100:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __GNUC__ )
 101:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 104:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 105:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 107:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 108:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 109:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 110:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 111:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 112:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __ARMVFP__
 114:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 116:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 117:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 119:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 120:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 121:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 122:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 123:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 124:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 128:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 129:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 131:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 132:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 133:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 134:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 135:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 136:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __TASKING__ )
 137:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __FPU_VFP__
 138:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 140:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 141:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 143:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 144:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 145:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 146:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 147:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 148:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __CSMC__ )
 149:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 152:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 153:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 155:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 156:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 157:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 158:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 159:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 160:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 161:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 162:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 164:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 165:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 166:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
 167:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 168:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 169:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 171:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 173:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 176:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 177:../system/include/cmsis/stm32l4xx/core_cm4.h ****  extern "C" {
 178:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 179:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 180:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* check device defines and use defaults */
 181:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __CM4_REV
 183:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 186:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 187:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 191:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 192:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 196:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 197:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 201:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 202:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 206:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 207:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 208:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 210:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 212:../system/include/cmsis/stm32l4xx/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
 216:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 217:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
 219:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 221:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 224:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* following defines should be used for structure members */
 225:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 229:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 231:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 232:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 233:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
 234:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                 Register Abstraction
 235:../system/include/cmsis/stm32l4xx/core_cm4.h ****   Core Register contain:
 236:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Register
 237:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core NVIC Register
 238:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SCB Register
 239:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SysTick Register
 240:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Debug Register
 241:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core MPU Register
 242:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core FPU Register
 243:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
 244:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 245:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
 248:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 249:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 250:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Core Register type definitions.
 253:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 254:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 255:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 256:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 257:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 259:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 260:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 261:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 262:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 263:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:../system/include/cmsis/stm32l4xx/core_cm4.h **** } APSR_Type;
 274:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 275:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* APSR Register Definitions */
 276:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 279:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 282:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 285:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 288:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 291:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 294:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 295:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 296:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 298:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 299:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 300:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 301:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 302:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../system/include/cmsis/stm32l4xx/core_cm4.h **** } IPSR_Type;
 307:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 308:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* IPSR Register Definitions */
 309:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 312:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 313:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 314:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 316:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 317:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 318:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 319:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 320:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:../system/include/cmsis/stm32l4xx/core_cm4.h **** } xPSR_Type;
 335:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 336:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* xPSR Register Definitions */
 337:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 340:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 343:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 346:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 349:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 352:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 355:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 358:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 361:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 364:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 367:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 368:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 369:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 371:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 372:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 373:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 374:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 375:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:../system/include/cmsis/stm32l4xx/core_cm4.h **** } CONTROL_Type;
 382:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 383:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* CONTROL Register Definitions */
 384:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 387:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 390:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 393:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 395:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 396:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 397:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 401:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 402:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 403:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 404:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 406:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 407:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 408:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:../system/include/cmsis/stm32l4xx/core_cm4.h **** }  NVIC_Type;
 422:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 423:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 427:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 429:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 430:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 431:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 435:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 436:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 437:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 438:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 440:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 441:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 442:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SCB_Type;
 464:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 465:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 469:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 472:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 475:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 478:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 481:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 485:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 488:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 491:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 494:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 497:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 500:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 503:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 506:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 509:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 512:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 516:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 520:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 523:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 526:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 529:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 532:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 535:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 538:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB System Control Register Definitions */
 539:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 542:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 545:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 548:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 552:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 555:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 558:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 561:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 564:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 567:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 571:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 574:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 577:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 580:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 583:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 586:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 589:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 592:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 595:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 598:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 601:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 604:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 607:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 610:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 614:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 617:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 620:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 624:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 627:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 630:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 633:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 636:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 639:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 643:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 646:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 649:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 652:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 655:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 658:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 661:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 665:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 668:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 671:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 674:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 677:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 680:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 684:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 687:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 690:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 694:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 697:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 700:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 703:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 706:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 708:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 709:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 710:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 714:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 715:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 716:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 717:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 719:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 720:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 721:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SCnSCB_Type;
 725:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 726:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 730:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 734:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 737:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 740:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 743:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 746:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 748:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 749:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 750:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 754:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 755:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 756:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 757:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 759:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 760:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 761:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SysTick_Type;
 766:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 767:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 771:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 774:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 777:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 780:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 784:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Current Register Definitions */
 785:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 788:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 792:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 795:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 798:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 800:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 801:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 802:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 806:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 807:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 808:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 809:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 811:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 812:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 813:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  union
 814:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 815:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[6U];
 830:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:../system/include/cmsis/stm32l4xx/core_cm4.h **** } ITM_Type;
 843:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 844:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 848:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 852:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 855:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 858:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 861:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 864:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 867:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 870:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 873:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 876:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 880:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 883:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 886:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 888:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 889:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 890:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 894:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 895:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 896:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 897:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 899:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 900:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 901:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:../system/include/cmsis/stm32l4xx/core_cm4.h **** } DWT_Type;
 925:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 926:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Control Register Definitions */
 927:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 930:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 933:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 936:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 939:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 942:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 945:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 948:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 951:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 954:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 957:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 960:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 963:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 966:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 969:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 972:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 975:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 978:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 981:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 985:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 989:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 993:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 997:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1001:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1005:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1009:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1012:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1015:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1018:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1021:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1024:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1027:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1030:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1033:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1035:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1036:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1037:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1041:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1042:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1043:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1044:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1046:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1047:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1048:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:../system/include/cmsis/stm32l4xx/core_cm4.h **** } TPI_Type;
1073:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1074:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1078:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1082:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1086:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1089:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1092:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1095:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1099:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1102:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1106:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1110:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1113:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1116:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1119:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1122:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1125:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1128:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1132:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1135:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1139:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1142:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1145:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1148:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1151:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1154:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1157:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1161:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1164:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1168:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1172:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1175:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1178:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1181:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1184:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1187:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1191:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1194:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1196:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1197:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1199:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1203:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1204:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1205:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1206:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1208:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1209:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1210:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:../system/include/cmsis/stm32l4xx/core_cm4.h **** } MPU_Type;
1222:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1223:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1225:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Type Register Definitions */
1226:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1229:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1232:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1235:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Control Register Definitions */
1236:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1239:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1242:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1245:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1249:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1253:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1256:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1259:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1263:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1266:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1269:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1272:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1275:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1278:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1281:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1284:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1287:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1290:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1293:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1294:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1295:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1299:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1300:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1301:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1302:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1304:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1305:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1306:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:../system/include/cmsis/stm32l4xx/core_cm4.h **** } FPU_Type;
1314:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1315:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1319:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1322:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1325:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1328:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1331:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1334:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1337:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1340:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1343:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1347:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1351:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1354:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1357:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1360:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1364:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1367:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1370:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1373:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1376:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1379:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1382:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1385:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1389:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1392:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1395:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1398:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1400:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1403:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1405:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1406:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1407:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1411:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1412:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1413:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1414:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1416:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1417:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1418:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:../system/include/cmsis/stm32l4xx/core_cm4.h **** } CoreDebug_Type;
1423:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1424:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1428:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1431:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1434:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1437:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1440:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1443:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1446:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1449:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1452:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1455:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1458:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1461:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1465:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1468:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1472:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1475:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1478:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1481:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1484:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1487:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1490:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1493:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1496:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1499:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1502:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1505:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1508:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1510:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1511:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1512:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1516:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1517:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1518:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1519:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return           Masked and shifted value.
1523:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1524:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1526:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1527:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1532:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1534:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1536:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1537:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1538:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1542:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1543:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1544:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1554:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1563:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
1567:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1568:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1571:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} */
1572:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1573:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1574:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1575:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
1576:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                Hardware Abstraction Layer
1577:../system/include/cmsis/stm32l4xx/core_cm4.h ****   Core Function Interface contains:
1578:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core NVIC Functions
1579:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SysTick Functions
1580:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Debug Functions
1581:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Register Access Functions
1582:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
1583:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1584:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1586:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1587:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1588:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1589:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1591:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1595:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1596:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1597:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
1601:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
1603:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1617:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
1621:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
1623:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1627:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1629:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1630:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1638:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1639:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1640:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Priority Grouping
1641:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:../system/include/cmsis/stm32l4xx/core_cm4.h ****            Only values from 0..7 are used.
1644:../system/include/cmsis/stm32l4xx/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:../system/include/cmsis/stm32l4xx/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1648:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1650:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t reg_value;
1651:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1653:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:../system/include/cmsis/stm32l4xx/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:../system/include/cmsis/stm32l4xx/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1660:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1661:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1662:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1663:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Priority Grouping
1664:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1667:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1669:../system/include/cmsis/stm32l4xx/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1670:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1671:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1672:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1673:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1674:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Enable Interrupt
1675:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1678:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1679:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1681:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1683:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __COMPILER_BARRIER();
1684:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1685:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __COMPILER_BARRIER();
1686:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1687:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1688:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1689:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1690:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1691:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Interrupt Enable status
1692:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             1  Interrupt is enabled.
1696:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1697:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1698:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1700:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1702:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1704:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1705:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1706:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(0U);
1707:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1708:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1709:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1710:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1711:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1712:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Disable Interrupt
1713:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1716:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1717:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1719:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1721:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __DSB();
1723:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __ISB();
1724:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1725:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1726:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1727:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1728:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1729:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Pending Interrupt
1730:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             1  Interrupt status is pending.
1734:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1735:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1736:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1738:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1740:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1742:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1743:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1744:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(0U);
1745:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1746:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1747:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1748:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1749:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1750:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Pending Interrupt
1751:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1754:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1755:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1757:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1759:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1761:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1762:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1763:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1764:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1765:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Clear Pending Interrupt
1766:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1769:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1770:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1772:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1774:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1776:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1777:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1778:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1779:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1780:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Active Interrupt
1781:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             0  Interrupt status is not active.
1784:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             1  Interrupt status is active.
1785:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1786:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1787:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1789:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1791:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1793:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1794:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1795:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(0U);
1796:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1797:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1798:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1799:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1800:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1801:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Interrupt Priority
1802:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1805:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]  priority  Priority to set.
1807:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1809:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1811:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1812:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1813:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1814:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1815:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1816:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1817:../system/include/cmsis/stm32l4xx/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1818:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1819:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1820:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1821:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1822:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1823:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Interrupt Priority
1824:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1827:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             Interrupt Priority.
1829:../system/include/cmsis/stm32l4xx/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1831:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1833:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1834:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1836:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1838:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1839:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1840:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1842:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1843:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1844:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1845:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1846:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Encode Priority
1847:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:../system/include/cmsis/stm32l4xx/core_cm4.h ****            preemptive priority value, and subpriority value.
1849:../system/include/cmsis/stm32l4xx/core_cm4.h ****            In case of a conflict between priority grouping and available
1850:../system/include/cmsis/stm32l4xx/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1856:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1857:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1858:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1859:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PreemptPriorityBits;
1860:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t SubPriorityBits;
1861:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1862:../system/include/cmsis/stm32l4xx/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1863:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1864:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1865:../system/include/cmsis/stm32l4xx/core_cm4.h ****   return (
1866:../system/include/cmsis/stm32l4xx/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1867:../system/include/cmsis/stm32l4xx/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1868:../system/include/cmsis/stm32l4xx/core_cm4.h ****          );
1869:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1870:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1871:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1872:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1873:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Decode Priority
1874:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1875:../system/include/cmsis/stm32l4xx/core_cm4.h ****            preemptive priority value and subpriority value.
1876:../system/include/cmsis/stm32l4xx/core_cm4.h ****            In case of a conflict between priority grouping and available
1877:../system/include/cmsis/stm32l4xx/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1878:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1879:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1880:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1881:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1882:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1883:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1884:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1885:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1886:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PreemptPriorityBits;
1887:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t SubPriorityBits;
1888:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1889:../system/include/cmsis/stm32l4xx/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1890:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1891:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1892:../system/include/cmsis/stm32l4xx/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1893:../system/include/cmsis/stm32l4xx/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1894:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1895:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1896:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1897:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1898:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Interrupt Vector
1899:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1900:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1901:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1902:../system/include/cmsis/stm32l4xx/core_cm4.h ****            VTOR must been relocated to SRAM before.
1903:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1904:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1905:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1906:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1907:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1908:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1909:../system/include/cmsis/stm32l4xx/core_cm4.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
1910:../system/include/cmsis/stm32l4xx/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1911:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1912:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1913:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1914:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1915:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Interrupt Vector
1916:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1917:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1918:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1919:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1920:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return                 Address of interrupt handler function
1921:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1922:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1923:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1924:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1925:../system/include/cmsis/stm32l4xx/core_cm4.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
1926:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1927:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1928:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1929:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1930:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   System Reset
1931:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1932:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1933:../system/include/cmsis/stm32l4xx/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1934:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1935:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1936:../system/include/cmsis/stm32l4xx/core_cm4.h ****                                                                        buffered write are completed
1937:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1938:../system/include/cmsis/stm32l4xx/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 1118              		.loc 4 1938 0
 1119 0714 2E49     		ldr	r1, .L120+164
 1120 0716 CA68     		ldr	r2, [r1, #12]
 1121 0718 02F4E062 		and	r2, r2, #1792
1937:../system/include/cmsis/stm32l4xx/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 1122              		.loc 4 1937 0
 1123 071c 2D4B     		ldr	r3, .L120+168
 1124 071e 1343     		orrs	r3, r3, r2
 1125 0720 CB60     		str	r3, [r1, #12]
 1126              	.LBB34:
 1127              	.LBB35:
 1128              		.loc 3 946 0
 1129              		.syntax unified
 1130              	@ 946 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 1131 0722 BFF34F8F 		dsb 0xF
 1132              	@ 0 "" 2
 1133              		.thumb
 1134              		.syntax unified
 1135              	.L41:
 1136              	.LBE35:
 1137              	.LBE34:
1939:../system/include/cmsis/stm32l4xx/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1940:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1941:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1942:../system/include/cmsis/stm32l4xx/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1943:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1944:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __NOP();
 1138              		.loc 4 1944 0
 1139              		.syntax unified
 1140              	@ 1944 "../system/include/cmsis/stm32l4xx/core_cm4.h" 1
 1141 0726 00BF     		nop
 1142              	@ 0 "" 2
 1143              		.thumb
 1144              		.syntax unified
 1145 0728 FDE7     		b	.L41
 1146              	.L121:
 1147 072a 00BF     		.align	2
 1148              	.L120:
 1149 072c 00000000 		.word	main_target_kiss_baudrate
 1150 0730 00000000 		.word	main_kiss_srl_ctx
 1151 0734 00000000 		.word	srl_usart1_tx_buffer
 1152 0738 00000000 		.word	srl_usart1_rx_buffer
 1153 073c 00380140 		.word	1073821696
 1154 0740 00000000 		.word	main_kiss_srl_ctx_ptr
 1155 0744 00000000 		.word	rte_wx_davis_station_avaliable
 1156 0748 00000000 		.word	.LANCHOR6
 1157 074c 00000000 		.word	.LANCHOR7
 1158 0750 00000000 		.word	main_target_wx_baudrate
 1159 0754 00000000 		.word	srl_usart2_tx_buffer
 1160 0758 00000000 		.word	srl_usart2_rx_buffer
 1161 075c 00440040 		.word	1073759232
 1162 0760 00000000 		.word	main_wx_srl_ctx_ptr
 1163 0764 00000000 		.word	.LANCHOR8
 1164 0768 00000000 		.word	main_wx_srl_ctx
 1165 076c 00000000 		.word	rte_rtu_pool_queue
 1166 0770 00000000 		.word	.LANCHOR9
 1167 0774 00000000 		.word	rte_wx_dallas_average
 1168 0778 00080048 		.word	1207961600
 1169 077c 00000000 		.word	.LANCHOR11
 1170 0780 00000000 		.word	rte_wx_umb_context
 1171 0784 00000000 		.word	.LANCHOR5
 1172 0788 00000000 		.word	rte_wx_ms5611_qf
 1173 078c 00000000 		.word	SensorCalData
 1174 0790 00000000 		.word	rte_wx_bme280_qf
 1175 0794 00000000 		.word	bme280_calibration_data
 1176 0798 00000000 		.word	.LANCHOR1
 1177 079c 00000000 		.word	main_own_aprs_msg
 1178 07a0 00000000 		.word	.LANCHOR3
 1179 07a4 00000000 		.word	main_string_longitude
 1180 07a8 00000000 		.word	.LANCHOR2
 1181 07ac 00000000 		.word	main_string_latitude
 1182 07b0 00000000 		.word	.LC0
 1183 07b4 00000000 		.word	main_own_aprs_msg_len
 1184 07b8 00000000 		.word	main_own_path
 1185 07bc 00000000 		.word	.LANCHOR12
 1186 07c0 00000000 		.word	.LANCHOR13
 1187 07c4 00000000 		.word	rte_pv_average
 1188 07c8 00000000 		.word	rte_pv_struct
 1189 07cc 00000000 		.word	rte_wx_umb
 1190 07d0 00ED00E0 		.word	-536810240
 1191 07d4 0400FA05 		.word	100270084
 1192              	.L44:
 1193              	.LBE31:
 1194              	.LBE30:
 771:../src/main.c **** 
 772:../src/main.c ****   // Infinite loop
 773:../src/main.c ****   while (1)
 774:../src/main.c ****     {
 775:../src/main.c **** 	  // incrementing current cpu ticks
 776:../src/main.c **** 	  main_current_cpu_idle_ticks++;
 777:../src/main.c **** 
 778:../src/main.c **** 	    if (rte_main_reboot_req == 1) {
 779:../src/main.c **** 	    	NVIC_SystemReset();
 780:../src/main.c **** 	    }
 781:../src/main.c **** 	    else {
 782:../src/main.c **** 	    	;
 783:../src/main.c **** 	    }
 784:../src/main.c **** 
 785:../src/main.c **** #if defined(PARATNC_HWREV_A) || defined(PARATNC_HWREV_B) || defined(PARATNC_HWREV_C)
 786:../src/main.c **** 	    // read the state of a button input
 787:../src/main.c **** 	  	if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_0)) {
 788:../src/main.c **** #endif
 789:../src/main.c **** #ifdef STM32L471xx
 790:../src/main.c **** 		    // read the state of a button input
 791:../src/main.c **** 		  	if (LL_GPIO_IsInputPinSet(GPIOA, LL_GPIO_PIN_0)) {
 792:../src/main.c **** #endif
 793:../src/main.c **** 
 794:../src/main.c **** 	  		// if modem is not busy on transmitting something and the button is not
 795:../src/main.c **** 	  		// inhibited
 796:../src/main.c **** 	  		if (main_afsk.sending == false && button_inhibit == 0) {
 797:../src/main.c **** 
 798:../src/main.c **** 	  			// wait for radio channel to be released
 799:../src/main.c **** 	  			while(main_ax25.dcd == true);
 800:../src/main.c **** 
 801:../src/main.c **** 	  			if ((main_config_data_mode->wx & WX_ENABLED) == 0) {
 802:../src/main.c **** 
 803:../src/main.c **** 	  				beacon_send_own();
 804:../src/main.c **** 	  			}
 805:../src/main.c **** 	  			else {
 806:../src/main.c **** 
 807:../src/main.c **** 					srl_wait_for_tx_completion(main_kiss_srl_ctx_ptr);
 1195              		.loc 1 807 0
 1196 07d8 924B     		ldr	r3, .L122
 1197 07da 1868     		ldr	r0, [r3]
 1198 07dc FFF7FEFF 		bl	srl_wait_for_tx_completion
 1199              	.LVL108:
 808:../src/main.c **** 
 809:../src/main.c **** 					SendWXFrameToBuffer(rte_wx_average_windspeed, rte_wx_max_windspeed, rte_wx_average_winddirecti
 1200              		.loc 1 809 0
 1201 07e0 914B     		ldr	r3, .L122+4
 1202 07e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1203 07e4 914A     		ldr	r2, .L122+8
 1204 07e6 1288     		ldrh	r2, [r2]
 1205 07e8 9149     		ldr	r1, .L122+12
 1206 07ea 0988     		ldrh	r1, [r1]
 1207 07ec 9148     		ldr	r0, .L122+16
 1208 07ee 0088     		ldrh	r0, [r0]
 1209 07f0 07AC     		add	r4, sp, #28
 1210              	.LVL109:
 1211 07f2 0294     		str	r4, [sp, #8]
 1212 07f4 4FF40074 		mov	r4, #512
 1213 07f8 0194     		str	r4, [sp, #4]
 1214 07fa 8F4C     		ldr	r4, .L122+20
 1215 07fc 6469     		ldr	r4, [r4, #20]
 1216 07fe 0094     		str	r4, [sp]
 1217 0800 8E4C     		ldr	r4, .L122+24
 1218 0802 D4ED000A 		vldr.32	s1, [r4]
 1219 0806 8E4C     		ldr	r4, .L122+28
 1220 0808 94ED000A 		vldr.32	s0, [r4]
 1221 080c FFF7FEFF 		bl	SendWXFrameToBuffer
 1222              	.LVL110:
 810:../src/main.c **** 
 811:../src/main.c **** 					if (main_kiss_enabled == 1) {
 1223              		.loc 1 811 0
 1224 0810 8C4B     		ldr	r3, .L122+32
 1225 0812 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1226 0814 012C     		cmp	r4, #1
 1227 0816 37D1     		bne	.L77
 812:../src/main.c **** 						srl_start_tx(main_kiss_srl_ctx_ptr, ln);
 1228              		.loc 1 812 0
 1229 0818 BDF91C10 		ldrsh	r1, [sp, #28]
 1230 081c 814B     		ldr	r3, .L122
 1231 081e 1868     		ldr	r0, [r3]
 1232 0820 FFF7FEFF 		bl	srl_start_tx
 1233              	.LVL111:
 1234 0824 00E0     		b	.L42
 1235              	.LVL112:
 1236              	.L75:
 813:../src/main.c **** 					}
 814:../src/main.c **** 	  			}
 815:../src/main.c **** 	  		}
 816:../src/main.c **** 
 817:../src/main.c **** 	  		button_inhibit = 1;
 818:../src/main.c **** 	  	}
 819:../src/main.c **** 	  	else {
 820:../src/main.c **** 	  		button_inhibit = 0;
 1237              		.loc 1 820 0
 1238 0826 0024     		movs	r4, #0
 1239              	.LVL113:
 1240              	.L42:
 821:../src/main.c **** 	  	}
 822:../src/main.c **** 
 823:../src/main.c **** 	  	// if new packet has been received from radio channel
 824:../src/main.c **** 		if(ax25_new_msg_rx_flag == 1) {
 1241              		.loc 1 824 0
 1242 0828 874B     		ldr	r3, .L122+36
 1243 082a 93F90030 		ldrsb	r3, [r3]
 1244 082e 012B     		cmp	r3, #1
 1245 0830 2CD0     		beq	.L92
 1246              	.L45:
 825:../src/main.c **** 			memset(main_kiss_srl_ctx.srl_tx_buf_pointer, 0x00, main_kiss_srl_ctx.srl_tx_buf_ln);
 826:../src/main.c **** 
 827:../src/main.c **** 			if (main_kiss_enabled == 1) {
 828:../src/main.c **** 				// convert message to kiss format and send it to host
 829:../src/main.c **** 				srl_start_tx(main_kiss_srl_ctx_ptr, SendKISSToHost(ax25_rxed_frame.raw_data, (ax25_rxed_frame.r
 830:../src/main.c **** 			}
 831:../src/main.c **** 
 832:../src/main.c **** 			main_ax25.dcd = false;
 833:../src/main.c **** 
 834:../src/main.c **** #ifndef _MUTE_OWN
 835:../src/main.c **** 	#ifdef _DIGI
 836:../src/main.c **** 			//digi_check_with_viscous(&ax25_rxed_frame);
 837:../src/main.c **** 
 838:../src/main.c **** 			// check if this packet needs to be repeated (digipeated) and do it if it is necessary
 839:../src/main.c **** 			digi_process(&ax25_rxed_frame, main_config_data_basic, main_config_data_mode);
 840:../src/main.c **** 	#endif
 841:../src/main.c **** #endif
 842:../src/main.c **** 			ax25_new_msg_rx_flag = 0;
 843:../src/main.c **** 			rx10m++;
 844:../src/main.c **** 		}
 845:../src/main.c **** 
 846:../src/main.c **** 		// if Victron VE.direct client is enabled
 847:../src/main.c **** 		if (main_config_data_mode->victron == 1) {
 1247              		.loc 1 847 0
 1248 0832 864B     		ldr	r3, .L122+40
 1249 0834 1B68     		ldr	r3, [r3]
 1250 0836 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1251 0838 012A     		cmp	r2, #1
 1252 083a 55D0     		beq	.L93
 848:../src/main.c **** 
 849:../src/main.c **** 			// if new KISS message has been received from the host
 850:../src/main.c **** 			if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE || main_kiss_srl_ctx_ptr->srl_rx_state ==
 851:../src/main.c **** 
 852:../src/main.c **** 				// cutting received string to Checksum, everything after will be skipped
 853:../src/main.c **** 				ve_direct_cut_to_checksum(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), TX_BUFFER_1_LN, &buffer_len
 854:../src/main.c **** 
 855:../src/main.c **** 				// checking if this frame is ok
 856:../src/main.c **** 				ve_direct_validate_checksum(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), buffer_len, &retval);
 857:../src/main.c **** 
 858:../src/main.c **** 				if (retval == 1) {
 859:../src/main.c **** 					// parsing data from input serial buffer to
 860:../src/main.c **** 					retval = ve_direct_parse_to_raw_struct(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), buffer_len, &
 861:../src/main.c **** 
 862:../src/main.c **** 					if (retval == 0) {
 863:../src/main.c **** 						ve_direct_add_to_average(&rte_pv_struct, &rte_pv_average);
 864:../src/main.c **** 
 865:../src/main.c **** 						ve_direct_get_averages(&rte_pv_average, &rte_pv_battery_current, &rte_pv_battery_voltage, &rt
 866:../src/main.c **** 
 867:../src/main.c **** 						ve_direct_set_sys_voltage(&rte_pv_struct, &rte_pv_sys_voltage);
 868:../src/main.c **** 
 869:../src/main.c **** 						ve_direct_store_errors(&rte_pv_struct, &rte_pv_last_error);
 870:../src/main.c **** 
 871:../src/main.c **** 						rte_pv_messages_count++;
 872:../src/main.c **** 					}
 873:../src/main.c **** 				}
 874:../src/main.c **** 				else {
 875:../src/main.c **** 					rte_pv_corrupted_messages_count++;
 876:../src/main.c **** 				}
 877:../src/main.c **** 
 878:../src/main.c **** 				//memset(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), 0x00, TX_BUFFER_1_LN);
 879:../src/main.c **** 
 880:../src/main.c **** 				srl_receive_data(main_kiss_srl_ctx_ptr, VE_DIRECT_MAX_FRAME_LN, 0, 0, 0, 0, 0);
 881:../src/main.c **** 			}
 882:../src/main.c **** 		}
 883:../src/main.c **** 		else if (main_config_data_mode->wx_umb == 1) {
 1253              		.loc 1 883 0
 1254 083c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1255 083e 012B     		cmp	r3, #1
 1256 0840 00F07581 		beq	.L94
 884:../src/main.c **** 			// if some UMB data have been received
 885:../src/main.c **** 			if (main_wx_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE) {
 886:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_IDLE, master_time, main_config_data_umb
 887:../src/main.c **** 			}
 888:../src/main.c **** 
 889:../src/main.c **** 			// if there were an error during receiving frame from host, restart rxing once again
 890:../src/main.c **** 			if (main_wx_srl_ctx_ptr->srl_rx_state == SRL_RX_ERROR) {
 891:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_ERROR, master_time, main_config_data_um
 892:../src/main.c **** 			}
 893:../src/main.c **** 
 894:../src/main.c **** 			if (main_wx_srl_ctx_ptr->srl_tx_state == SRL_TX_IDLE) {
 895:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_TRANSMIT_IDLE, master_time, main_config_data_um
 896:../src/main.c **** 			}
 897:../src/main.c **** 		}
 898:../src/main.c **** 		else {
 899:../src/main.c **** 			// if new KISS message has been received from the host
 900:../src/main.c **** 			if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_DONE && main_kiss_enabled == 1) {
 1257              		.loc 1 900 0
 1258 0844 774B     		ldr	r3, .L122
 1259 0846 1868     		ldr	r0, [r3]
 1260 0848 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1261 084c 042B     		cmp	r3, #4
 1262 084e 04D1     		bne	.L54
 1263              		.loc 1 900 0 is_stmt 0 discriminator 1
 1264 0850 7C4B     		ldr	r3, .L122+32
 1265 0852 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1266 0854 012B     		cmp	r3, #1
 1267 0856 00F09881 		beq	.L95
 1268              	.L54:
 901:../src/main.c **** 				// parse incoming data and then transmit on radio freq
 902:../src/main.c **** 				short res = ParseReceivedKISS(srl_get_rx_buffer(main_kiss_srl_ctx_ptr), srl_get_num_bytes_rxed(
 903:../src/main.c **** 				if (res == 0)
 904:../src/main.c **** 					kiss10m++;	// increase kiss messages counter
 905:../src/main.c **** 
 906:../src/main.c **** 				// restart KISS receiving to be ready for next frame
 907:../src/main.c **** 				srl_receive_data(main_kiss_srl_ctx_ptr, 120, FEND, FEND, 0, 0, 0);
 908:../src/main.c **** 			}
 909:../src/main.c **** 
 910:../src/main.c **** 			// if there were an error during receiving frame from host, restart rxing once again
 911:../src/main.c **** 			if (main_kiss_srl_ctx_ptr->srl_rx_state == SRL_RX_ERROR && main_kiss_enabled == 1) {
 1269              		.loc 1 911 0 is_stmt 1
 1270 085a 724B     		ldr	r3, .L122
 1271 085c 1868     		ldr	r0, [r3]
 1272 085e 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1273 0862 052B     		cmp	r3, #5
 1274 0864 49D1     		bne	.L48
 1275              		.loc 1 911 0 is_stmt 0 discriminator 1
 1276 0866 774B     		ldr	r3, .L122+32
 1277 0868 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1278 086a 012B     		cmp	r3, #1
 1279 086c 45D1     		bne	.L48
 912:../src/main.c **** 				srl_receive_data(main_kiss_srl_ctx_ptr, 120, FEND, FEND, 0, 0, 0);
 1280              		.loc 1 912 0 is_stmt 1
 1281 086e 0023     		movs	r3, #0
 1282 0870 0293     		str	r3, [sp, #8]
 1283 0872 0193     		str	r3, [sp, #4]
 1284 0874 0093     		str	r3, [sp]
 1285 0876 6FF03F03 		mvn	r3, #63
 1286 087a 1A46     		mov	r2, r3
 1287 087c 7821     		movs	r1, #120
 1288 087e FFF7FEFF 		bl	srl_receive_data
 1289              	.LVL114:
 1290 0882 3AE0     		b	.L48
 1291              	.L76:
 817:../src/main.c **** 	  	}
 1292              		.loc 1 817 0
 1293 0884 0124     		movs	r4, #1
 1294              	.LVL115:
 1295 0886 CFE7     		b	.L42
 1296              	.L77:
 1297 0888 0124     		movs	r4, #1
 1298 088a CDE7     		b	.L42
 1299              	.LVL116:
 1300              	.L92:
 825:../src/main.c **** 
 1301              		.loc 1 825 0
 1302 088c 6A4B     		ldr	r3, .L122+20
 1303 088e DA8B     		ldrh	r2, [r3, #30]
 1304 0890 0021     		movs	r1, #0
 1305 0892 5869     		ldr	r0, [r3, #20]
 1306 0894 FFF7FEFF 		bl	memset
 1307              	.LVL117:
 827:../src/main.c **** 				// convert message to kiss format and send it to host
 1308              		.loc 1 827 0
 1309 0898 6A4B     		ldr	r3, .L122+32
 1310 089a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1311 089c 012B     		cmp	r3, #1
 1312 089e 11D0     		beq	.L96
 1313              	.L46:
 832:../src/main.c **** 
 1314              		.loc 1 832 0
 1315 08a0 0025     		movs	r5, #0
 1316 08a2 6B4B     		ldr	r3, .L122+44
 1317 08a4 83F81452 		strb	r5, [r3, #532]
 839:../src/main.c **** 	#endif
 1318              		.loc 1 839 0
 1319 08a8 684B     		ldr	r3, .L122+40
 1320 08aa 1A68     		ldr	r2, [r3]
 1321 08ac 694B     		ldr	r3, .L122+48
 1322 08ae 1968     		ldr	r1, [r3]
 1323 08b0 6948     		ldr	r0, .L122+52
 1324 08b2 FFF7FEFF 		bl	digi_process
 1325              	.LVL118:
 842:../src/main.c **** 			rx10m++;
 1326              		.loc 1 842 0
 1327 08b6 644B     		ldr	r3, .L122+36
 1328 08b8 1D70     		strb	r5, [r3]
 843:../src/main.c **** 		}
 1329              		.loc 1 843 0
 1330 08ba 684A     		ldr	r2, .L122+56
 1331 08bc 1388     		ldrh	r3, [r2]
 1332 08be 0133     		adds	r3, r3, #1
 1333 08c0 1380     		strh	r3, [r2]	@ movhi
 1334 08c2 B6E7     		b	.L45
 1335              	.L96:
 829:../src/main.c **** 			}
 1336              		.loc 1 829 0
 1337 08c4 574B     		ldr	r3, .L122
 1338 08c6 1D68     		ldr	r5, [r3]
 1339 08c8 6348     		ldr	r0, .L122+52
 1340 08ca B0F85212 		ldrh	r1, [r0, #594]
 1341 08ce 5A4A     		ldr	r2, .L122+20
 1342 08d0 0239     		subs	r1, r1, #2
 1343 08d2 D38B     		ldrh	r3, [r2, #30]
 1344 08d4 5269     		ldr	r2, [r2, #20]
 1345 08d6 89B2     		uxth	r1, r1
 1346 08d8 5230     		adds	r0, r0, #82
 1347 08da FFF7FEFF 		bl	SendKISSToHost
 1348              	.LVL119:
 1349 08de 01B2     		sxth	r1, r0
 1350 08e0 2846     		mov	r0, r5
 1351 08e2 FFF7FEFF 		bl	srl_start_tx
 1352              	.LVL120:
 1353 08e6 DBE7     		b	.L46
 1354              	.L93:
 850:../src/main.c **** 
 1355              		.loc 1 850 0
 1356 08e8 4E4B     		ldr	r3, .L122
 1357 08ea 1868     		ldr	r0, [r3]
 1358 08ec 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1359 08f0 043B     		subs	r3, r3, #4
 1360 08f2 DBB2     		uxtb	r3, r3
 1361 08f4 012B     		cmp	r3, #1
 1362 08f6 40F2CF80 		bls	.L97
 1363              	.L48:
 913:../src/main.c **** 			}
 914:../src/main.c **** 		}
 915:../src/main.c **** 
 916:../src/main.c **** 		// if Davis wx station is enabled and it is alive
 917:../src/main.c **** 		if (main_davis_serial_enabled == 1) {
 1364              		.loc 1 917 0
 1365 08fa 594B     		ldr	r3, .L122+60
 1366 08fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 08fe 012B     		cmp	r3, #1
 1368 0900 00F06281 		beq	.L98
 1369              	.L56:
 918:../src/main.c **** 
 919:../src/main.c **** 			// pool the Davis wx station driver for LOOP packet
 920:../src/main.c **** 			davis_loop_packet_pooler(&rte_wx_davis_loop_packet_avaliable);
 921:../src/main.c **** 
 922:../src/main.c **** 			davis_rxcheck_packet_pooler();
 923:../src/main.c **** 		}
 924:../src/main.c **** 
 925:../src/main.c **** 		// if modbus rtu master is enabled
 926:../src/main.c **** 		if (main_modbus_rtu_master_enabled == 1) {
 1370              		.loc 1 926 0
 1371 0904 574B     		ldr	r3, .L122+64
 1372 0906 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1373 0908 012B     		cmp	r3, #1
 1374 090a 00F06381 		beq	.L99
 1375              	.L57:
 927:../src/main.c **** 			rtu_serial_pool();
 928:../src/main.c **** 		}
 929:../src/main.c **** 
 930:../src/main.c **** 		// get all meteo measuremenets each 65 seconds. some values may not be
 931:../src/main.c **** 		// downloaded from sensors if _METEO and/or _DALLAS_AS_TELEM aren't defined
 932:../src/main.c **** 		if (main_wx_sensors_pool_timer < 10) {
 1376              		.loc 1 932 0
 1377 090e 564B     		ldr	r3, .L122+68
 1378 0910 1B68     		ldr	r3, [r3]
 1379 0912 092B     		cmp	r3, #9
 1380 0914 1FDC     		bgt	.L58
 933:../src/main.c **** 
 934:../src/main.c **** 			if (main_modbus_rtu_master_enabled == 1) {
 1381              		.loc 1 934 0
 1382 0916 534B     		ldr	r3, .L122+64
 1383 0918 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1384 091a 012B     		cmp	r3, #1
 1385 091c 00F05D81 		beq	.L100
 1386              	.L59:
 935:../src/main.c **** 				rtu_serial_start();
 936:../src/main.c **** 			}
 937:../src/main.c **** 
 938:../src/main.c **** 			if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 1387              		.loc 1 938 0
 1388 0920 4A4B     		ldr	r3, .L122+40
 1389 0922 1968     		ldr	r1, [r3]
 1390 0924 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1391 0926 13F0010F 		tst	r3, #1
 1392 092a 40F05981 		bne	.L101
 1393              	.L60:
 939:../src/main.c **** 				wx_get_all_measurements(main_config_data_wx_sources, main_config_data_mode, main_config_data_um
 940:../src/main.c **** 			}
 941:../src/main.c **** 
 942:../src/main.c **** 
 943:../src/main.c **** 			if (main_config_data_mode->wx_umb == 1) {
 1394              		.loc 1 943 0
 1395 092e 474B     		ldr	r3, .L122+40
 1396 0930 1B68     		ldr	r3, [r3]
 1397 0932 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1398 0934 012B     		cmp	r3, #1
 1399 0936 00F05C81 		beq	.L102
 1400              	.L61:
 944:../src/main.c **** 				//
 945:../src/main.c **** 				umb_0x26_status_request(&rte_wx_umb, &rte_wx_umb_context, main_config_data_umb);
 946:../src/main.c **** 			}
 947:../src/main.c **** 
 948:../src/main.c **** 			if (main_davis_serial_enabled == 1) {
 1401              		.loc 1 948 0
 1402 093a 494B     		ldr	r3, .L122+60
 1403 093c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1404 093e 012B     		cmp	r3, #1
 1405 0940 00F05E81 		beq	.L103
 1406              	.L62:
 949:../src/main.c **** 				davis_trigger_rxcheck_packet();
 950:../src/main.c **** 			}
 951:../src/main.c **** 
 952:../src/main.c **** 			if (rte_main_trigger_modbus_status == 1 && main_modbus_rtu_master_enabled == 1) {
 1407              		.loc 1 952 0
 1408 0944 494B     		ldr	r3, .L122+72
 1409 0946 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1410 0948 012B     		cmp	r3, #1
 1411 094a 00F05C81 		beq	.L104
 1412              	.L63:
 953:../src/main.c **** 				rtu_serial_get_status_string(&rte_rtu_pool_queue, main_wx_srl_ctx_ptr, main_own_aprs_msg, OWN_A
 954:../src/main.c **** 
 955:../src/main.c **** 			 	ax25_sendVia(&main_ax25, main_own_path, main_own_path_ln, main_own_aprs_msg, main_own_aprs_msg
 956:../src/main.c **** 
 957:../src/main.c **** 			 	afsk_txStart(&main_afsk);
 958:../src/main.c **** 
 959:../src/main.c **** 			 	rte_main_trigger_modbus_status = 0;
 960:../src/main.c **** 
 961:../src/main.c **** 
 962:../src/main.c **** 			}
 963:../src/main.c **** 
 964:../src/main.c **** 			main_wx_sensors_pool_timer = 65500;
 1413              		.loc 1 964 0
 1414 094e 464B     		ldr	r3, .L122+68
 1415 0950 4FF6DC72 		movw	r2, #65500
 1416 0954 1A60     		str	r2, [r3]
 1417              	.L58:
 965:../src/main.c **** 		}
 966:../src/main.c **** 
 967:../src/main.c **** 		if (main_one_minute_pool_timer < 10) {
 1418              		.loc 1 967 0
 1419 0956 464B     		ldr	r3, .L122+76
 1420 0958 1B68     		ldr	r3, [r3]
 1421 095a 092B     		cmp	r3, #9
 1422 095c 40F37281 		ble	.L105
 1423              	.L64:
 968:../src/main.c **** 
 969:../src/main.c **** 			#ifndef _MUTE_OWN
 970:../src/main.c **** 			packet_tx_handler(main_config_data_basic, main_config_data_mode);
 971:../src/main.c **** 			#endif
 972:../src/main.c **** 
 973:../src/main.c **** 			main_one_minute_pool_timer = 60000;
 974:../src/main.c **** 		}
 975:../src/main.c **** 
 976:../src/main.c **** 		if (main_one_second_pool_timer < 10) {
 1424              		.loc 1 976 0
 1425 0960 444B     		ldr	r3, .L122+80
 1426 0962 1B68     		ldr	r3, [r3]
 1427 0964 092B     		cmp	r3, #9
 1428 0966 00F37B81 		bgt	.L65
 977:../src/main.c **** 
 978:../src/main.c **** 			//digi_pool_viscous();
 979:../src/main.c **** 
 980:../src/main.c **** 			if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 1429              		.loc 1 980 0
 1430 096a 384B     		ldr	r3, .L122+40
 1431 096c 1B68     		ldr	r3, [r3]
 1432 096e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1433 0970 13F0010F 		tst	r3, #1
 1434 0974 40F07181 		bne	.L106
 1435              	.L66:
 981:../src/main.c **** 				analog_anemometer_direction_handler();
 982:../src/main.c **** 			}
 983:../src/main.c **** 
 984:../src/main.c **** 			main_one_second_pool_timer = 1000;
 1436              		.loc 1 984 0
 1437 0978 3E4B     		ldr	r3, .L122+80
 1438 097a 4FF47A72 		mov	r2, #1000
 1439 097e 1A60     		str	r2, [r3]
 1440              	.L67:
 985:../src/main.c **** 		}
 986:../src/main.c **** 		else if (main_one_second_pool_timer < -10) {
 987:../src/main.c **** 
 988:../src/main.c **** 			if ((main_config_data_mode->wx & WX_ENABLED) == 1) {
 989:../src/main.c **** 				analog_anemometer_direction_reset();
 990:../src/main.c **** 			}
 991:../src/main.c **** 
 992:../src/main.c **** 			main_one_second_pool_timer = 1000;
 993:../src/main.c **** 		}
 994:../src/main.c **** 
 995:../src/main.c **** 		if (main_two_second_pool_timer < 10) {
 1441              		.loc 1 995 0
 1442 0980 3D4B     		ldr	r3, .L122+84
 1443 0982 1B68     		ldr	r3, [r3]
 1444 0984 092B     		cmp	r3, #9
 1445 0986 40F37D81 		ble	.L107
 1446              	.L69:
 996:../src/main.c **** 
 997:../src/main.c **** 			wx_check_force_i2c_reset();
 998:../src/main.c **** 
 999:../src/main.c **** 			wx_pwr_periodic_handle();
1000:../src/main.c **** 
1001:../src/main.c **** 			#ifdef INTERNAL_WATCHDOG
1002:../src/main.c **** 			IWDG_ReloadCounter();
1003:../src/main.c **** 			#endif
1004:../src/main.c **** 
1005:../src/main.c **** 			main_two_second_pool_timer = 2000;
1006:../src/main.c **** 		}
1007:../src/main.c **** 
1008:../src/main.c **** 		if (main_ten_second_pool_timer < 10) {
 1447              		.loc 1 1008 0
 1448 098a 3C4B     		ldr	r3, .L122+88
 1449 098c 1B68     		ldr	r3, [r3]
 1450 098e 092B     		cmp	r3, #9
 1451 0990 1EDC     		bgt	.L39
1009:../src/main.c **** 
1010:../src/main.c **** 			if (main_config_data_mode->wx_umb == 1) {
 1452              		.loc 1 1010 0
 1453 0992 2E4B     		ldr	r3, .L122+40
 1454 0994 1B68     		ldr	r3, [r3]
 1455 0996 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1456 0998 012B     		cmp	r3, #1
 1457 099a 00F07E81 		beq	.L108
 1458              	.L71:
1011:../src/main.c **** 				umb_channel_pool(&rte_wx_umb, &rte_wx_umb_context, main_config_data_umb);
1012:../src/main.c **** 			}
1013:../src/main.c **** 
1014:../src/main.c **** 			if (main_config_data_mode->wx_umb == 1) {
 1459              		.loc 1 1014 0
 1460 099e 2B4B     		ldr	r3, .L122+40
 1461 09a0 1B68     		ldr	r3, [r3]
 1462 09a2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1463 09a4 012B     		cmp	r3, #1
 1464 09a6 00F07F81 		beq	.L109
 1465              	.L72:
1015:../src/main.c **** 				rte_wx_umb_qf = umb_get_current_qf(&rte_wx_umb_context, master_time);
1016:../src/main.c **** 			}
1017:../src/main.c **** 
1018:../src/main.c **** 			wx_pool_anemometer(main_config_data_wx_sources, main_config_data_mode, main_config_data_umb, mai
 1466              		.loc 1 1018 0
 1467 09aa 354B     		ldr	r3, .L122+92
 1468 09ac 1B68     		ldr	r3, [r3]
 1469 09ae 354A     		ldr	r2, .L122+96
 1470 09b0 1268     		ldr	r2, [r2]
 1471 09b2 2649     		ldr	r1, .L122+40
 1472 09b4 0968     		ldr	r1, [r1]
 1473 09b6 3448     		ldr	r0, .L122+100
 1474 09b8 0068     		ldr	r0, [r0]
 1475 09ba FFF7FEFF 		bl	wx_pool_anemometer
 1476              	.LVL121:
1019:../src/main.c **** 
1020:../src/main.c **** 			if (main_davis_serial_enabled == 1) {
 1477              		.loc 1 1020 0
 1478 09be 284B     		ldr	r3, .L122+60
 1479 09c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1480 09c2 012B     		cmp	r3, #1
 1481 09c4 00F07881 		beq	.L110
 1482              	.L73:
1021:../src/main.c **** 
1022:../src/main.c **** 				// if previous LOOP packet is ready for processing
1023:../src/main.c **** 				if (rte_wx_davis_loop_packet_avaliable == 1) {
1024:../src/main.c **** 					davis_parsers_loop(main_kiss_srl_ctx_ptr->srl_rx_buf_pointer, main_kiss_srl_ctx_ptr->srl_rx_bu
1025:../src/main.c **** 				}
1026:../src/main.c **** 
1027:../src/main.c **** 				// trigger consecutive LOOP packet
1028:../src/main.c **** 				davis_trigger_loop_packet();
1029:../src/main.c **** 			}
1030:../src/main.c **** 
1031:../src/main.c **** 			main_ten_second_pool_timer = 10000;
 1483              		.loc 1 1031 0
 1484 09c8 2C4B     		ldr	r3, .L122+88
 1485 09ca 42F21072 		movw	r2, #10000
 1486 09ce 1A60     		str	r2, [r3]
 1487              	.LVL122:
 1488              	.L39:
 776:../src/main.c **** 
 1489              		.loc 1 776 0
 1490 09d0 2E4A     		ldr	r2, .L122+104
 1491 09d2 1368     		ldr	r3, [r2]
 1492 09d4 0133     		adds	r3, r3, #1
 1493 09d6 1360     		str	r3, [r2]
 778:../src/main.c **** 	    	NVIC_SystemReset();
 1494              		.loc 1 778 0
 1495 09d8 2D4B     		ldr	r3, .L122+108
 1496 09da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1497 09dc 012B     		cmp	r3, #1
 1498 09de 3FF497AE 		beq	.L111
 1499              	.LVL123:
 1500              	.LBB36:
 1501              	.LBB37:
 1502              		.file 5 "../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h"
   1:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
   2:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   ******************************************************************************
   3:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @file    stm32l4xx_ll_gpio.h
   4:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   ******************************************************************************
   7:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @attention
   8:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *
   9:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * All rights reserved.</center></h2>
  11:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *
  12:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * the "License"; You may not use this file except in compliance with the
  14:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * License. You may obtain a copy of the License at:
  15:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *
  17:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   ******************************************************************************
  18:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  19:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  20:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #ifndef STM32L4xx_LL_GPIO_H
  22:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define STM32L4xx_LL_GPIO_H
  23:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  24:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #ifdef __cplusplus
  25:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** extern "C" {
  26:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #endif
  27:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  28:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  29:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #include "stm32l4xx.h"
  30:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  31:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @addtogroup STM32L4xx_LL_Driver
  32:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
  33:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  34:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  35:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  36:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  37:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  38:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
  39:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  40:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  41:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  42:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  43:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  44:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  45:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  46:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  47:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  48:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  49:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  50:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  51:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  52:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  53:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  54:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  55:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
  56:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  57:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  58:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
  59:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
  60:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  61:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  62:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  63:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  64:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  65:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  66:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
  67:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  68:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  69:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
  70:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  71:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
  72:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** typedef struct
  73:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
  74:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  75:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  76:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  77:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  78:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  79:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  80:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  81:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  82:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  83:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  84:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  85:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  86:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  87:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  88:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  89:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  90:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  91:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  92:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  93:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  94:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  95:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  96:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
  97:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  98:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  99:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
 117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
 204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
 205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
 206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Register value
 237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR,
 532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                              (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin) * 4U)));
 573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) 
 610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
 650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL
 688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #if defined(GPIO_ASCR_ASC0)
 691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Connect analog switch to ADC input of several pins for a dedicated port.
 693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   This bit must be set prior to the ADC conversion.
 694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         Only the IO which connected to the ADC input are effective.
 695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         Other IO must be kept reset value
 696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll ASCR         ASCy          LL_GPIO_EnablePinAnalogControl
 697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_EnablePinAnalogControl(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   SET_BIT(GPIOx->ASCR, PinMask);
 721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Disconnect analog switch to ADC input of several pins for a dedicated port.
 725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll ASCR         ASCy          LL_GPIO_DisablePinAnalogControl
 726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_DisablePinAnalogControl(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   CLEAR_BIT(GPIOx->ASCR, PinMask);
 750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** #endif /* GPIO_ASCR_ASC0 */
 752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         next reset.
 758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         (control and alternate function registers).
 760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval None
 781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   __IO uint32_t temp;
 785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   (void) temp;
 791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, PinMask) == (PinMask)) ? 1UL : 0UL);
 820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK)) ? 1UL : 0UL);
 831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @}
 835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @{
 839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval Input data register value of port
 846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->IDR));
 850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** }
 851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** 
 852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** /**
 853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   */
 876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h **** {
 878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->IDR, PinMask) == (PinMask)) ? 1UL : 0UL);
 1503              		.loc 5 878 0
 1504 09e2 4FF09043 		mov	r3, #1207959552
 1505 09e6 1B69     		ldr	r3, [r3, #16]
 1506 09e8 13F0010F 		tst	r3, #1
 1507 09ec 3FF41BAF 		beq	.L75
 1508              	.LVL124:
 1509              	.LBE37:
 1510              	.LBE36:
 796:../src/main.c **** 
 1511              		.loc 1 796 0
 1512 09f0 284B     		ldr	r3, .L122+112
 1513 09f2 93F83034 		ldrb	r3, [r3, #1072]	@ zero_extendqisi2
 1514 09f6 002B     		cmp	r3, #0
 1515 09f8 7FF444AF 		bne	.L76
 796:../src/main.c **** 
 1516              		.loc 1 796 0 is_stmt 0 discriminator 1
 1517 09fc 002C     		cmp	r4, #0
 1518 09fe 7FF413AF 		bne	.L42
 1519              	.L43:
 799:../src/main.c **** 
 1520              		.loc 1 799 0 is_stmt 1 discriminator 1
 1521 0a02 134B     		ldr	r3, .L122+44
 1522 0a04 93F81432 		ldrb	r3, [r3, #532]	@ zero_extendqisi2
 1523 0a08 002B     		cmp	r3, #0
 1524 0a0a FAD1     		bne	.L43
 801:../src/main.c **** 
 1525              		.loc 1 801 0
 1526 0a0c 0F4B     		ldr	r3, .L122+40
 1527 0a0e 1B68     		ldr	r3, [r3]
 1528 0a10 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1529 0a12 13F0010F 		tst	r3, #1
 1530 0a16 7FF4DFAE 		bne	.L44
 803:../src/main.c **** 	  			}
 1531              		.loc 1 803 0
 1532 0a1a FFF7FEFF 		bl	beacon_send_own
 1533              	.LVL125:
 817:../src/main.c **** 	  	}
 1534              		.loc 1 817 0
 1535 0a1e 0124     		movs	r4, #1
 1536              	.LVL126:
 1537 0a20 02E7     		b	.L42
 1538              	.L123:
 1539 0a22 00BF     		.align	2
 1540              	.L122:
 1541 0a24 00000000 		.word	main_kiss_srl_ctx_ptr
 1542 0a28 00000000 		.word	rte_wx_humidity
 1543 0a2c 00000000 		.word	rte_wx_average_winddirection
 1544 0a30 00000000 		.word	rte_wx_max_windspeed
 1545 0a34 00000000 		.word	rte_wx_average_windspeed
 1546 0a38 00000000 		.word	main_kiss_srl_ctx
 1547 0a3c 00000000 		.word	rte_wx_pressure_valid
 1548 0a40 00000000 		.word	rte_wx_temperature_average_external_valid
 1549 0a44 00000000 		.word	.LANCHOR6
 1550 0a48 00000000 		.word	ax25_new_msg_rx_flag
 1551 0a4c 00000000 		.word	.LANCHOR5
 1552 0a50 00000000 		.word	main_ax25
 1553 0a54 00000000 		.word	.LANCHOR1
 1554 0a58 00000000 		.word	ax25_rxed_frame
 1555 0a5c 00000000 		.word	.LANCHOR15
 1556 0a60 00000000 		.word	.LANCHOR7
 1557 0a64 00000000 		.word	.LANCHOR9
 1558 0a68 00000000 		.word	.LANCHOR19
 1559 0a6c 00000000 		.word	rte_main_trigger_modbus_status
 1560 0a70 00000000 		.word	.LANCHOR20
 1561 0a74 00000000 		.word	.LANCHOR21
 1562 0a78 00000000 		.word	.LANCHOR22
 1563 0a7c 00000000 		.word	.LANCHOR23
 1564 0a80 00000000 		.word	.LANCHOR8
 1565 0a84 00000000 		.word	.LANCHOR11
 1566 0a88 00000000 		.word	.LANCHOR13
 1567 0a8c 00000000 		.word	.LANCHOR14
 1568 0a90 00000000 		.word	rte_main_reboot_req
 1569 0a94 00000000 		.word	main_afsk
 1570              	.LVL127:
 1571              	.L97:
 853:../src/main.c **** 
 1572              		.loc 1 853 0
 1573 0a98 FFF7FEFF 		bl	srl_get_rx_buffer
 1574              	.LVL128:
 1575 0a9c 8E4E     		ldr	r6, .L124
 1576 0a9e 3246     		mov	r2, r6
 1577 0aa0 4FF40071 		mov	r1, #512
 1578 0aa4 FFF7FEFF 		bl	ve_direct_cut_to_checksum
 1579              	.LVL129:
 856:../src/main.c **** 
 1580              		.loc 1 856 0
 1581 0aa8 8C4B     		ldr	r3, .L124+4
 1582 0aaa 1868     		ldr	r0, [r3]
 1583 0aac FFF7FEFF 		bl	srl_get_rx_buffer
 1584              	.LVL130:
 1585 0ab0 8B4D     		ldr	r5, .L124+8
 1586 0ab2 2A46     		mov	r2, r5
 1587 0ab4 3188     		ldrh	r1, [r6]
 1588 0ab6 FFF7FEFF 		bl	ve_direct_validate_checksum
 1589              	.LVL131:
 858:../src/main.c **** 					// parsing data from input serial buffer to
 1590              		.loc 1 858 0
 1591 0aba 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1592 0abc DBB2     		uxtb	r3, r3
 1593 0abe 012B     		cmp	r3, #1
 1594 0ac0 30D1     		bne	.L49
 860:../src/main.c **** 
 1595              		.loc 1 860 0
 1596 0ac2 864B     		ldr	r3, .L124+4
 1597 0ac4 1868     		ldr	r0, [r3]
 1598 0ac6 FFF7FEFF 		bl	srl_get_rx_buffer
 1599              	.LVL132:
 1600 0aca 864A     		ldr	r2, .L124+12
 1601 0acc 3188     		ldrh	r1, [r6]
 1602 0ace FFF7FEFF 		bl	ve_direct_parse_to_raw_struct
 1603              	.LVL133:
 1604 0ad2 C0B2     		uxtb	r0, r0
 1605 0ad4 2870     		strb	r0, [r5]
 862:../src/main.c **** 						ve_direct_add_to_average(&rte_pv_struct, &rte_pv_average);
 1606              		.loc 1 862 0
 1607 0ad6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1608 0ad8 CBB9     		cbnz	r3, .L50
 863:../src/main.c **** 
 1609              		.loc 1 863 0
 1610 0ada 834E     		ldr	r6, .L124+16
 1611 0adc 814D     		ldr	r5, .L124+12
 1612 0ade 3146     		mov	r1, r6
 1613 0ae0 2846     		mov	r0, r5
 1614 0ae2 FFF7FEFF 		bl	ve_direct_add_to_average
 1615              	.LVL134:
 865:../src/main.c **** 
 1616              		.loc 1 865 0
 1617 0ae6 814B     		ldr	r3, .L124+20
 1618 0ae8 0093     		str	r3, [sp]
 1619 0aea 814B     		ldr	r3, .L124+24
 1620 0aec 814A     		ldr	r2, .L124+28
 1621 0aee 8249     		ldr	r1, .L124+32
 1622 0af0 3046     		mov	r0, r6
 1623 0af2 FFF7FEFF 		bl	ve_direct_get_averages
 1624              	.LVL135:
 867:../src/main.c **** 
 1625              		.loc 1 867 0
 1626 0af6 8149     		ldr	r1, .L124+36
 1627 0af8 2846     		mov	r0, r5
 1628 0afa FFF7FEFF 		bl	ve_direct_set_sys_voltage
 1629              	.LVL136:
 869:../src/main.c **** 
 1630              		.loc 1 869 0
 1631 0afe 8049     		ldr	r1, .L124+40
 1632 0b00 2846     		mov	r0, r5
 1633 0b02 FFF7FEFF 		bl	ve_direct_store_errors
 1634              	.LVL137:
 871:../src/main.c **** 					}
 1635              		.loc 1 871 0
 1636 0b06 7F4A     		ldr	r2, .L124+44
 1637 0b08 1388     		ldrh	r3, [r2]
 1638 0b0a 0133     		adds	r3, r3, #1
 1639 0b0c 1380     		strh	r3, [r2]	@ movhi
 1640              	.L50:
 880:../src/main.c **** 			}
 1641              		.loc 1 880 0
 1642 0b0e 0022     		movs	r2, #0
 1643 0b10 0292     		str	r2, [sp, #8]
 1644 0b12 0192     		str	r2, [sp, #4]
 1645 0b14 0092     		str	r2, [sp]
 1646 0b16 1346     		mov	r3, r2
 1647 0b18 BA21     		movs	r1, #186
 1648 0b1a 7048     		ldr	r0, .L124+4
 1649 0b1c 0068     		ldr	r0, [r0]
 1650 0b1e FFF7FEFF 		bl	srl_receive_data
 1651              	.LVL138:
 1652 0b22 EAE6     		b	.L48
 1653              	.L49:
 875:../src/main.c **** 				}
 1654              		.loc 1 875 0
 1655 0b24 784A     		ldr	r2, .L124+48
 1656 0b26 1388     		ldrh	r3, [r2]
 1657 0b28 0133     		adds	r3, r3, #1
 1658 0b2a 1380     		strh	r3, [r2]	@ movhi
 1659 0b2c EFE7     		b	.L50
 1660              	.L94:
 885:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_IDLE, master_time, main_config_data_umb
 1661              		.loc 1 885 0
 1662 0b2e 774B     		ldr	r3, .L124+52
 1663 0b30 1B68     		ldr	r3, [r3]
 1664 0b32 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1665 0b36 042B     		cmp	r3, #4
 1666 0b38 15D0     		beq	.L112
 1667              	.L52:
 890:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_RECEIVE_ERROR, master_time, main_config_data_um
 1668              		.loc 1 890 0
 1669 0b3a 744B     		ldr	r3, .L124+52
 1670 0b3c 1B68     		ldr	r3, [r3]
 1671 0b3e 93F84430 		ldrb	r3, [r3, #68]	@ zero_extendqisi2
 1672 0b42 052B     		cmp	r3, #5
 1673 0b44 18D0     		beq	.L113
 1674              	.L53:
 894:../src/main.c **** 				umb_pooling_handler(&rte_wx_umb_context, REASON_TRANSMIT_IDLE, master_time, main_config_data_um
 1675              		.loc 1 894 0
 1676 0b46 714B     		ldr	r3, .L124+52
 1677 0b48 1B68     		ldr	r3, [r3]
 1678 0b4a 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1679 0b4e 012B     		cmp	r3, #1
 1680 0b50 7FF4D3AE 		bne	.L48
 895:../src/main.c **** 			}
 1681              		.loc 1 895 0
 1682 0b54 6E4B     		ldr	r3, .L124+56
 1683 0b56 1B68     		ldr	r3, [r3]
 1684 0b58 6E4A     		ldr	r2, .L124+60
 1685 0b5a 1268     		ldr	r2, [r2]
 1686 0b5c 0021     		movs	r1, #0
 1687 0b5e 6E48     		ldr	r0, .L124+64
 1688 0b60 FFF7FEFF 		bl	umb_pooling_handler
 1689              	.LVL139:
 1690 0b64 C9E6     		b	.L48
 1691              	.L112:
 886:../src/main.c **** 			}
 1692              		.loc 1 886 0
 1693 0b66 6A4B     		ldr	r3, .L124+56
 1694 0b68 1B68     		ldr	r3, [r3]
 1695 0b6a 6A4A     		ldr	r2, .L124+60
 1696 0b6c 1268     		ldr	r2, [r2]
 1697 0b6e 0121     		movs	r1, #1
 1698 0b70 6948     		ldr	r0, .L124+64
 1699 0b72 FFF7FEFF 		bl	umb_pooling_handler
 1700              	.LVL140:
 1701 0b76 E0E7     		b	.L52
 1702              	.L113:
 891:../src/main.c **** 			}
 1703              		.loc 1 891 0
 1704 0b78 654B     		ldr	r3, .L124+56
 1705 0b7a 1B68     		ldr	r3, [r3]
 1706 0b7c 654A     		ldr	r2, .L124+60
 1707 0b7e 1268     		ldr	r2, [r2]
 1708 0b80 0221     		movs	r1, #2
 1709 0b82 6548     		ldr	r0, .L124+64
 1710 0b84 FFF7FEFF 		bl	umb_pooling_handler
 1711              	.LVL141:
 1712 0b88 DDE7     		b	.L53
 1713              	.L95:
 1714              	.LBB38:
 902:../src/main.c **** 				if (res == 0)
 1715              		.loc 1 902 0
 1716 0b8a FFF7FEFF 		bl	srl_get_rx_buffer
 1717              	.LVL142:
 1718 0b8e 0546     		mov	r5, r0
 1719 0b90 524B     		ldr	r3, .L124+4
 1720 0b92 1868     		ldr	r0, [r3]
 1721 0b94 FFF7FEFF 		bl	srl_get_num_bytes_rxed
 1722              	.LVL143:
 1723 0b98 604B     		ldr	r3, .L124+68
 1724 0b9a 614A     		ldr	r2, .L124+72
 1725 0b9c 0146     		mov	r1, r0
 1726 0b9e 2846     		mov	r0, r5
 1727 0ba0 FFF7FEFF 		bl	ParseReceivedKISS
 1728              	.LVL144:
 903:../src/main.c **** 					kiss10m++;	// increase kiss messages counter
 1729              		.loc 1 903 0
 1730 0ba4 18B9     		cbnz	r0, .L55
 904:../src/main.c **** 
 1731              		.loc 1 904 0
 1732 0ba6 5F4A     		ldr	r2, .L124+76
 1733 0ba8 1388     		ldrh	r3, [r2]
 1734 0baa 0133     		adds	r3, r3, #1
 1735 0bac 1380     		strh	r3, [r2]	@ movhi
 1736              	.L55:
 907:../src/main.c **** 			}
 1737              		.loc 1 907 0
 1738 0bae 0023     		movs	r3, #0
 1739 0bb0 0293     		str	r3, [sp, #8]
 1740 0bb2 0193     		str	r3, [sp, #4]
 1741 0bb4 0093     		str	r3, [sp]
 1742 0bb6 6FF03F03 		mvn	r3, #63
 1743 0bba 1A46     		mov	r2, r3
 1744 0bbc 7821     		movs	r1, #120
 1745 0bbe 4748     		ldr	r0, .L124+4
 1746              	.LVL145:
 1747 0bc0 0068     		ldr	r0, [r0]
 1748 0bc2 FFF7FEFF 		bl	srl_receive_data
 1749              	.LVL146:
 1750 0bc6 48E6     		b	.L54
 1751              	.L98:
 1752              	.LBE38:
 920:../src/main.c **** 
 1753              		.loc 1 920 0
 1754 0bc8 5748     		ldr	r0, .L124+80
 1755 0bca FFF7FEFF 		bl	davis_loop_packet_pooler
 1756              	.LVL147:
 922:../src/main.c **** 		}
 1757              		.loc 1 922 0
 1758 0bce FFF7FEFF 		bl	davis_rxcheck_packet_pooler
 1759              	.LVL148:
 1760 0bd2 97E6     		b	.L56
 1761              	.L99:
 927:../src/main.c **** 		}
 1762              		.loc 1 927 0
 1763 0bd4 FFF7FEFF 		bl	rtu_serial_pool
 1764              	.LVL149:
 1765 0bd8 99E6     		b	.L57
 1766              	.L100:
 935:../src/main.c **** 			}
 1767              		.loc 1 935 0
 1768 0bda FFF7FEFF 		bl	rtu_serial_start
 1769              	.LVL150:
 1770 0bde 9FE6     		b	.L59
 1771              	.L101:
 939:../src/main.c **** 			}
 1772              		.loc 1 939 0
 1773 0be0 524B     		ldr	r3, .L124+84
 1774 0be2 1B68     		ldr	r3, [r3]
 1775 0be4 4A4A     		ldr	r2, .L124+56
 1776 0be6 1268     		ldr	r2, [r2]
 1777 0be8 5148     		ldr	r0, .L124+88
 1778 0bea 0068     		ldr	r0, [r0]
 1779 0bec FFF7FEFF 		bl	wx_get_all_measurements
 1780              	.LVL151:
 1781 0bf0 9DE6     		b	.L60
 1782              	.L102:
 945:../src/main.c **** 			}
 1783              		.loc 1 945 0
 1784 0bf2 474B     		ldr	r3, .L124+56
 1785 0bf4 1A68     		ldr	r2, [r3]
 1786 0bf6 4849     		ldr	r1, .L124+64
 1787 0bf8 4E48     		ldr	r0, .L124+92
 1788 0bfa FFF7FEFF 		bl	umb_0x26_status_request
 1789              	.LVL152:
 1790 0bfe 9CE6     		b	.L61
 1791              	.L103:
 949:../src/main.c **** 			}
 1792              		.loc 1 949 0
 1793 0c00 FFF7FEFF 		bl	davis_trigger_rxcheck_packet
 1794              	.LVL153:
 1795 0c04 9EE6     		b	.L62
 1796              	.L104:
 952:../src/main.c **** 				rtu_serial_get_status_string(&rte_rtu_pool_queue, main_wx_srl_ctx_ptr, main_own_aprs_msg, OWN_A
 1797              		.loc 1 952 0 discriminator 1
 1798 0c06 4C4B     		ldr	r3, .L124+96
 1799 0c08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1800 0c0a 012B     		cmp	r3, #1
 1801 0c0c 7FF49FAE 		bne	.L63
 953:../src/main.c **** 
 1802              		.loc 1 953 0
 1803 0c10 4A4D     		ldr	r5, .L124+100
 1804 0c12 4B4E     		ldr	r6, .L124+104
 1805 0c14 0096     		str	r6, [sp]
 1806 0c16 A023     		movs	r3, #160
 1807 0c18 2A46     		mov	r2, r5
 1808 0c1a 3C49     		ldr	r1, .L124+52
 1809 0c1c 0968     		ldr	r1, [r1]
 1810 0c1e 4948     		ldr	r0, .L124+108
 1811 0c20 FFF7FEFF 		bl	rtu_serial_get_status_string
 1812              	.LVL154:
 955:../src/main.c **** 
 1813              		.loc 1 955 0
 1814 0c24 484B     		ldr	r3, .L124+112
 1815 0c26 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1816 0c28 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1817 0c2a 0093     		str	r3, [sp]
 1818 0c2c 2B46     		mov	r3, r5
 1819 0c2e 4749     		ldr	r1, .L124+116
 1820 0c30 3B48     		ldr	r0, .L124+72
 1821 0c32 FFF7FEFF 		bl	ax25_sendVia
 1822              	.LVL155:
 957:../src/main.c **** 
 1823              		.loc 1 957 0
 1824 0c36 3948     		ldr	r0, .L124+68
 1825 0c38 FFF7FEFF 		bl	afsk_txStart
 1826              	.LVL156:
 959:../src/main.c **** 
 1827              		.loc 1 959 0
 1828 0c3c 444B     		ldr	r3, .L124+120
 1829 0c3e 0022     		movs	r2, #0
 1830 0c40 1A70     		strb	r2, [r3]
 1831 0c42 84E6     		b	.L63
 1832              	.L105:
 970:../src/main.c **** 			#endif
 1833              		.loc 1 970 0
 1834 0c44 434B     		ldr	r3, .L124+124
 1835 0c46 1968     		ldr	r1, [r3]
 1836 0c48 434B     		ldr	r3, .L124+128
 1837 0c4a 1868     		ldr	r0, [r3]
 1838 0c4c FFF7FEFF 		bl	packet_tx_handler
 1839              	.LVL157:
 973:../src/main.c **** 		}
 1840              		.loc 1 973 0
 1841 0c50 424B     		ldr	r3, .L124+132
 1842 0c52 4EF66022 		movw	r2, #60000
 1843 0c56 1A60     		str	r2, [r3]
 1844 0c58 82E6     		b	.L64
 1845              	.L106:
 981:../src/main.c **** 			}
 1846              		.loc 1 981 0
 1847 0c5a FFF7FEFF 		bl	analog_anemometer_direction_handler
 1848              	.LVL158:
 1849 0c5e 8BE6     		b	.L66
 1850              	.L65:
 986:../src/main.c **** 
 1851              		.loc 1 986 0
 1852 0c60 13F10A0F 		cmn	r3, #10
 1853 0c64 BFF68CAE 		bge	.L67
 988:../src/main.c **** 				analog_anemometer_direction_reset();
 1854              		.loc 1 988 0
 1855 0c68 3A4B     		ldr	r3, .L124+124
 1856 0c6a 1B68     		ldr	r3, [r3]
 1857 0c6c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1858 0c6e 13F0010F 		tst	r3, #1
 1859 0c72 04D1     		bne	.L114
 1860              	.L68:
 992:../src/main.c **** 		}
 1861              		.loc 1 992 0
 1862 0c74 3A4B     		ldr	r3, .L124+136
 1863 0c76 4FF47A72 		mov	r2, #1000
 1864 0c7a 1A60     		str	r2, [r3]
 1865 0c7c 80E6     		b	.L67
 1866              	.L114:
 989:../src/main.c **** 			}
 1867              		.loc 1 989 0
 1868 0c7e FFF7FEFF 		bl	analog_anemometer_direction_reset
 1869              	.LVL159:
 1870 0c82 F7E7     		b	.L68
 1871              	.L107:
 997:../src/main.c **** 
 1872              		.loc 1 997 0
 1873 0c84 FFF7FEFF 		bl	wx_check_force_i2c_reset
 1874              	.LVL160:
 999:../src/main.c **** 
 1875              		.loc 1 999 0
 1876 0c88 FFF7FEFF 		bl	wx_pwr_periodic_handle
 1877              	.LVL161:
1002:../src/main.c **** 			#endif
 1878              		.loc 1 1002 0
 1879 0c8c FFF7FEFF 		bl	IWDG_ReloadCounter
 1880              	.LVL162:
1005:../src/main.c **** 		}
 1881              		.loc 1 1005 0
 1882 0c90 344B     		ldr	r3, .L124+140
 1883 0c92 4FF4FA62 		mov	r2, #2000
 1884 0c96 1A60     		str	r2, [r3]
 1885 0c98 77E6     		b	.L69
 1886              	.L108:
1011:../src/main.c **** 			}
 1887              		.loc 1 1011 0
 1888 0c9a 1D4B     		ldr	r3, .L124+56
 1889 0c9c 1A68     		ldr	r2, [r3]
 1890 0c9e 1E49     		ldr	r1, .L124+64
 1891 0ca0 2448     		ldr	r0, .L124+92
 1892 0ca2 FFF7FEFF 		bl	umb_channel_pool
 1893              	.LVL163:
 1894 0ca6 7AE6     		b	.L71
 1895              	.L109:
1015:../src/main.c **** 			}
 1896              		.loc 1 1015 0
 1897 0ca8 1A4B     		ldr	r3, .L124+60
 1898 0caa 1968     		ldr	r1, [r3]
 1899 0cac 1A48     		ldr	r0, .L124+64
 1900 0cae FFF7FEFF 		bl	umb_get_current_qf
 1901              	.LVL164:
 1902 0cb2 2D4B     		ldr	r3, .L124+144
 1903 0cb4 1870     		strb	r0, [r3]
 1904 0cb6 78E6     		b	.L72
 1905              	.L110:
1023:../src/main.c **** 					davis_parsers_loop(main_kiss_srl_ctx_ptr->srl_rx_buf_pointer, main_kiss_srl_ctx_ptr->srl_rx_bu
 1906              		.loc 1 1023 0
 1907 0cb8 1B4B     		ldr	r3, .L124+80
 1908 0cba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1909 0cbc 012B     		cmp	r3, #1
 1910 0cbe 02D0     		beq	.L115
 1911              	.L74:
1028:../src/main.c **** 			}
 1912              		.loc 1 1028 0
 1913 0cc0 FFF7FEFF 		bl	davis_trigger_loop_packet
 1914              	.LVL165:
 1915 0cc4 80E6     		b	.L73
 1916              	.L115:
1024:../src/main.c **** 				}
 1917              		.loc 1 1024 0
 1918 0cc6 054B     		ldr	r3, .L124+4
 1919 0cc8 1B68     		ldr	r3, [r3]
 1920 0cca 284A     		ldr	r2, .L124+148
 1921 0ccc 998B     		ldrh	r1, [r3, #28]
 1922 0cce 9869     		ldr	r0, [r3, #24]
 1923 0cd0 FFF7FEFF 		bl	davis_parsers_loop
 1924              	.LVL166:
 1925 0cd4 F4E7     		b	.L74
 1926              	.L125:
 1927 0cd6 00BF     		.align	2
 1928              	.L124:
 1929 0cd8 00000000 		.word	.LANCHOR16
 1930 0cdc 00000000 		.word	main_kiss_srl_ctx_ptr
 1931 0ce0 00000000 		.word	.LANCHOR12
 1932 0ce4 00000000 		.word	rte_pv_struct
 1933 0ce8 00000000 		.word	rte_pv_average
 1934 0cec 00000000 		.word	rte_pv_load_current
 1935 0cf0 00000000 		.word	rte_pv_cell_voltage
 1936 0cf4 00000000 		.word	rte_pv_battery_voltage
 1937 0cf8 00000000 		.word	rte_pv_battery_current
 1938 0cfc 00000000 		.word	rte_pv_sys_voltage
 1939 0d00 00000000 		.word	rte_pv_last_error
 1940 0d04 00000000 		.word	rte_pv_messages_count
 1941 0d08 00000000 		.word	rte_pv_corrupted_messages_count
 1942 0d0c 00000000 		.word	main_wx_srl_ctx_ptr
 1943 0d10 00000000 		.word	.LANCHOR11
 1944 0d14 00000000 		.word	.LANCHOR17
 1945 0d18 00000000 		.word	rte_wx_umb_context
 1946 0d1c 00000000 		.word	main_afsk
 1947 0d20 00000000 		.word	main_ax25
 1948 0d24 00000000 		.word	.LANCHOR18
 1949 0d28 00000000 		.word	rte_wx_davis_loop_packet_avaliable
 1950 0d2c 00000000 		.word	.LANCHOR8
 1951 0d30 00000000 		.word	.LANCHOR13
 1952 0d34 00000000 		.word	rte_wx_umb
 1953 0d38 00000000 		.word	.LANCHOR9
 1954 0d3c 00000000 		.word	main_own_aprs_msg
 1955 0d40 00000000 		.word	main_own_aprs_msg_len
 1956 0d44 00000000 		.word	rte_rtu_pool_queue
 1957 0d48 00000000 		.word	.LANCHOR10
 1958 0d4c 00000000 		.word	main_own_path
 1959 0d50 00000000 		.word	rte_main_trigger_modbus_status
 1960 0d54 00000000 		.word	.LANCHOR5
 1961 0d58 00000000 		.word	.LANCHOR1
 1962 0d5c 00000000 		.word	.LANCHOR20
 1963 0d60 00000000 		.word	.LANCHOR21
 1964 0d64 00000000 		.word	.LANCHOR22
 1965 0d68 00000000 		.word	rte_wx_umb_qf
 1966 0d6c 00000000 		.word	rte_wx_davis_loop_content
 1967              		.cfi_endproc
 1968              	.LFE626:
 1970              		.section	.text.main_get_adc_sample,"ax",%progbits
 1971              		.align	1
 1972              		.global	main_get_adc_sample
 1973              		.syntax unified
 1974              		.thumb
 1975              		.thumb_func
 1976              		.fpu fpv4-sp-d16
 1978              	main_get_adc_sample:
 1979              	.LFB627:
1032:../src/main.c **** 		}
1033:../src/main.c **** 
1034:../src/main.c **** 
1035:../src/main.c ****     }
1036:../src/main.c ****   // Infinite loop, never return.
1037:../src/main.c **** }
1038:../src/main.c **** 
1039:../src/main.c **** uint16_t main_get_adc_sample(void) {
 1980              		.loc 1 1039 0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 0
 1983              		@ frame_needed = 0, uses_anonymous_args = 0
 1984              		@ link register save eliminated.
1040:../src/main.c **** 	return (uint16_t) ADC1->DR;
 1985              		.loc 1 1040 0
 1986 0000 014B     		ldr	r3, .L127
 1987 0002 186C     		ldr	r0, [r3, #64]
1041:../src/main.c **** }
 1988              		.loc 1 1041 0
 1989 0004 80B2     		uxth	r0, r0
 1990 0006 7047     		bx	lr
 1991              	.L128:
 1992              		.align	2
 1993              	.L127:
 1994 0008 00000450 		.word	1342439424
 1995              		.cfi_endproc
 1996              	.LFE627:
 1998              		.section	.text.main_service_cpu_load_ticks,"ax",%progbits
 1999              		.align	1
 2000              		.global	main_service_cpu_load_ticks
 2001              		.syntax unified
 2002              		.thumb
 2003              		.thumb_func
 2004              		.fpu fpv4-sp-d16
 2006              	main_service_cpu_load_ticks:
 2007              	.LFB628:
1042:../src/main.c **** 
1043:../src/main.c **** void main_service_cpu_load_ticks(void) {
 2008              		.loc 1 1043 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 2012              		@ link register save eliminated.
 2013              	.LVL167:
1044:../src/main.c **** 
1045:../src/main.c **** 	uint32_t cpu_ticks_load = 0;
1046:../src/main.c **** 
1047:../src/main.c **** 	// the biggest this result will be the biggest load the CPU is handling
1048:../src/main.c **** 	cpu_ticks_load = main_idle_cpu_ticks - main_current_cpu_idle_ticks;
 2014              		.loc 1 1048 0
 2015 0000 074B     		ldr	r3, .L130
 2016 0002 1868     		ldr	r0, [r3]
 2017 0004 0749     		ldr	r1, .L130+4
 2018 0006 0B68     		ldr	r3, [r1]
 2019 0008 C21A     		subs	r2, r0, r3
 2020              	.LVL168:
1049:../src/main.c **** 
1050:../src/main.c **** 	// calculate the cpu load
1051:../src/main.c **** 	main_cpu_load = (int8_t) ((cpu_ticks_load * 100) / main_idle_cpu_ticks);
 2021              		.loc 1 1051 0
 2022 000a 6423     		movs	r3, #100
 2023 000c 03FB02F3 		mul	r3, r3, r2
 2024 0010 B3FBF0F3 		udiv	r3, r3, r0
 2025 0014 044A     		ldr	r2, .L130+8
 2026              	.LVL169:
 2027 0016 1370     		strb	r3, [r2]
1052:../src/main.c **** 
1053:../src/main.c **** 	// reset the tick counter back to zero;
1054:../src/main.c **** 	main_current_cpu_idle_ticks = 0;
 2028              		.loc 1 1054 0
 2029 0018 0023     		movs	r3, #0
 2030 001a 0B60     		str	r3, [r1]
 2031              	.LVL170:
1055:../src/main.c **** }
 2032              		.loc 1 1055 0
 2033 001c 7047     		bx	lr
 2034              	.L131:
 2035 001e 00BF     		.align	2
 2036              	.L130:
 2037 0020 00000000 		.word	.LANCHOR4
 2038 0024 00000000 		.word	.LANCHOR14
 2039 0028 00000000 		.word	.LANCHOR24
 2040              		.cfi_endproc
 2041              	.LFE628:
 2043              		.comm	GPIO_InitTypeDef,24,4
 2044              		.global	kiss10m
 2045              		.global	digidrop10m
 2046              		.global	digi10m
 2047              		.global	tx10m
 2048              		.global	rx10m
 2049              		.comm	after_tx_lock,1,1
 2050              		.global	main_crc_result
 2051              		.global	main_umb_retval
 2052              		.global	buffer_len
 2053              		.global	retval
 2054              		.global	main_symbol_s
 2055              		.global	main_symbol_f
 2056              		.comm	main_string_longitude,9,4
 2057              		.comm	main_string_latitude,9,4
 2058              		.comm	main_own_aprs_msg,160,4
 2059              		.comm	main_own_aprs_msg_len,1,1
 2060              		.global	main_own_path_ln
 2061              		.comm	main_own_path,21,4
 2062              		.comm	main_afsk,1092,4
 2063              		.comm	main_ax25,536,4
 2064              		.global	main_modbus_rtu_master_enabled
 2065              		.global	main_davis_serial_enabled
 2066              		.global	main_kiss_enabled
 2067              		.comm	main_target_wx_baudrate,4,4
 2068              		.comm	main_target_kiss_baudrate,4,4
 2069              		.comm	main_wx_srl_ctx_ptr,4,4
 2070              		.comm	main_kiss_srl_ctx_ptr,4,4
 2071              		.comm	main_wx_srl_ctx,88,4
 2072              		.comm	main_kiss_srl_ctx,88,4
 2073              		.global	main_ten_second_pool_timer
 2074              		.global	main_two_second_pool_timer
 2075              		.global	main_one_second_pool_timer
 2076              		.global	main_one_minute_pool_timer
 2077              		.global	main_wx_sensors_pool_timer
 2078              		.global	main_cpu_load
 2079              		.global	main_current_cpu_idle_ticks
 2080              		.global	main_idle_cpu_ticks
 2081              		.global	master_time
 2082              		.global	main_config_data_rtu
 2083              		.global	main_config_data_umb
 2084              		.global	main_config_data_wx_sources
 2085              		.global	main_config_data_basic
 2086              		.global	main_config_data_mode
 2087              		.section	.bss.buffer_len,"aw",%nobits
 2088              		.align	1
 2089              		.set	.LANCHOR16,. + 0
 2092              	buffer_len:
 2093 0000 0000     		.space	2
 2094              		.section	.bss.digi10m,"aw",%nobits
 2095              		.align	1
 2098              	digi10m:
 2099 0000 0000     		.space	2
 2100              		.section	.bss.digidrop10m,"aw",%nobits
 2101              		.align	1
 2104              	digidrop10m:
 2105 0000 0000     		.space	2
 2106              		.section	.bss.kiss10m,"aw",%nobits
 2107              		.align	1
 2108              		.set	.LANCHOR18,. + 0
 2111              	kiss10m:
 2112 0000 0000     		.space	2
 2113              		.section	.bss.main_config_data_basic,"aw",%nobits
 2114              		.align	2
 2115              		.set	.LANCHOR1,. + 0
 2118              	main_config_data_basic:
 2119 0000 00000000 		.space	4
 2120              		.section	.bss.main_config_data_mode,"aw",%nobits
 2121              		.align	2
 2122              		.set	.LANCHOR5,. + 0
 2125              	main_config_data_mode:
 2126 0000 00000000 		.space	4
 2127              		.section	.bss.main_config_data_rtu,"aw",%nobits
 2128              		.align	2
 2129              		.set	.LANCHOR8,. + 0
 2132              	main_config_data_rtu:
 2133 0000 00000000 		.space	4
 2134              		.section	.bss.main_config_data_umb,"aw",%nobits
 2135              		.align	2
 2136              		.set	.LANCHOR11,. + 0
 2139              	main_config_data_umb:
 2140 0000 00000000 		.space	4
 2141              		.section	.bss.main_config_data_wx_sources,"aw",%nobits
 2142              		.align	2
 2143              		.set	.LANCHOR13,. + 0
 2146              	main_config_data_wx_sources:
 2147 0000 00000000 		.space	4
 2148              		.section	.bss.main_cpu_load,"aw",%nobits
 2149              		.set	.LANCHOR24,. + 0
 2152              	main_cpu_load:
 2153 0000 00       		.space	1
 2154              		.section	.bss.main_crc_result,"aw",%nobits
 2155              		.align	2
 2156              		.set	.LANCHOR0,. + 0
 2159              	main_crc_result:
 2160 0000 00000000 		.space	4
 2161              		.section	.bss.main_current_cpu_idle_ticks,"aw",%nobits
 2162              		.align	2
 2163              		.set	.LANCHOR14,. + 0
 2166              	main_current_cpu_idle_ticks:
 2167 0000 00000000 		.space	4
 2168              		.section	.bss.main_davis_serial_enabled,"aw",%nobits
 2169              		.set	.LANCHOR7,. + 0
 2172              	main_davis_serial_enabled:
 2173 0000 00       		.space	1
 2174              		.section	.bss.main_idle_cpu_ticks,"aw",%nobits
 2175              		.align	2
 2176              		.set	.LANCHOR4,. + 0
 2179              	main_idle_cpu_ticks:
 2180 0000 00000000 		.space	4
 2181              		.section	.bss.main_modbus_rtu_master_enabled,"aw",%nobits
 2182              		.set	.LANCHOR9,. + 0
 2185              	main_modbus_rtu_master_enabled:
 2186 0000 00       		.space	1
 2187              		.section	.bss.main_own_path_ln,"aw",%nobits
 2188              		.set	.LANCHOR10,. + 0
 2191              	main_own_path_ln:
 2192 0000 00       		.space	1
 2193              		.section	.bss.master_time,"aw",%nobits
 2194              		.align	2
 2195              		.set	.LANCHOR17,. + 0
 2198              	master_time:
 2199 0000 00000000 		.space	4
 2200              		.section	.bss.rx10m,"aw",%nobits
 2201              		.align	1
 2202              		.set	.LANCHOR15,. + 0
 2205              	rx10m:
 2206 0000 0000     		.space	2
 2207              		.section	.bss.tx10m,"aw",%nobits
 2208              		.align	1
 2211              	tx10m:
 2212 0000 0000     		.space	2
 2213              		.section	.data.main_kiss_enabled,"aw",%progbits
 2214              		.set	.LANCHOR6,. + 0
 2217              	main_kiss_enabled:
 2218 0000 01       		.byte	1
 2219              		.section	.data.main_one_minute_pool_timer,"aw",%progbits
 2220              		.align	2
 2221              		.set	.LANCHOR20,. + 0
 2224              	main_one_minute_pool_timer:
 2225 0000 60EA0000 		.word	60000
 2226              		.section	.data.main_one_second_pool_timer,"aw",%progbits
 2227              		.align	2
 2228              		.set	.LANCHOR21,. + 0
 2231              	main_one_second_pool_timer:
 2232 0000 E8030000 		.word	1000
 2233              		.section	.data.main_symbol_f,"aw",%progbits
 2234              		.set	.LANCHOR2,. + 0
 2237              	main_symbol_f:
 2238 0000 2F       		.byte	47
 2239              		.section	.data.main_symbol_s,"aw",%progbits
 2240              		.set	.LANCHOR3,. + 0
 2243              	main_symbol_s:
 2244 0000 23       		.byte	35
 2245              		.section	.data.main_ten_second_pool_timer,"aw",%progbits
 2246              		.align	2
 2247              		.set	.LANCHOR23,. + 0
 2250              	main_ten_second_pool_timer:
 2251 0000 10270000 		.word	10000
 2252              		.section	.data.main_two_second_pool_timer,"aw",%progbits
 2253              		.align	2
 2254              		.set	.LANCHOR22,. + 0
 2257              	main_two_second_pool_timer:
 2258 0000 D0070000 		.word	2000
 2259              		.section	.data.main_umb_retval,"aw",%progbits
 2262              	main_umb_retval:
 2263 0000 7F       		.byte	127
 2264              		.section	.data.main_wx_sensors_pool_timer,"aw",%progbits
 2265              		.align	2
 2266              		.set	.LANCHOR19,. + 0
 2269              	main_wx_sensors_pool_timer:
 2270 0000 DCFF0000 		.word	65500
 2271              		.section	.data.retval,"aw",%progbits
 2272              		.set	.LANCHOR12,. + 0
 2275              	retval:
 2276 0000 64       		.byte	100
 2277              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2278              		.align	2
 2279              	.LC0:
 2280 0000 3D257325 		.ascii	"=%s%c%c%s%c%c %s\000"
 2280      63256325 
 2280      73256325 
 2280      63202573 
 2280      00
 2281              		.text
 2282              	.Letext0:
 2283              		.file 6 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 2284              		.file 7 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 2285              		.file 8 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 2286              		.file 9 "../system/include/aprs/cfifo.h"
 2287              		.file 10 "../system/include/aprs/afsk.h"
 2288              		.file 11 "../system/include/aprs/ax25.h"
 2289              		.file 12 "../system/include/drivers/serial.h"
 2290              		.file 13 "../include/config_data.h"
 2291              		.file 14 "../include/main.h"
 2292              		.file 15 "../include/delay.h"
 2293              		.file 16 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 2294              		.file 17 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 2295              		.file 18 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/st
 2296              		.file 19 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 2297              		.file 20 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 2298              		.file 21 "../include/config_data_externs.h"
 2299              		.file 22 "../include/configuration_handler.h"
 2300              		.file 23 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/unistd.h"
 2301              		.file 24 "../system/include/./drivers/dallas.h"
 2302              		.file 25 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 2303              		.file 26 "../system/include/./drivers/ms5611.h"
 2304              		.file 27 "../system/include/./umb_master/umb_qf_t.h"
 2305              		.file 28 "../system/include/./ve_direct_protocol/raw_struct.h"
 2306              		.file 29 "../system/include/./ve_direct_protocol/average_struct.h"
 2307              		.file 30 "../system/include/drivers/analog_anemometer.h"
 2308              		.file 31 "../system/include/davis_vantage/davis_qf_t.h"
 2309              		.file 32 "../system/include/davis_vantage/davis_loop_t.h"
 2310              		.file 33 "../system/include/umb_master/umb_frame_t.h"
 2311              		.file 34 "../system/include/umb_master/umb_retval_t.h"
 2312              		.file 35 "../system/include/umb_master/umb_state_t.h"
 2313              		.file 36 "../system/include/umb_master/umb_context_t.h"
 2314              		.file 37 "../system/include/umb_master/umb_call_reason.h"
 2315              		.file 38 "../system/include/drivers/bme280.h"
 2316              		.file 39 "../include/rte_wx.h"
 2317              		.file 40 "../include/rte_pv.h"
 2318              		.file 41 "../include/rte_main.h"
 2319              		.file 42 "../system/include/modbus_rtu/rtu_register_data_t.h"
 2320              		.file 43 "../system/include/modbus_rtu/rtu_exception_t.h"
 2321              		.file 44 "../system/include/modbus_rtu/rtu_pool_queue_t.h"
 2322              		.file 45 "../include/rte_rtu.h"
 2323              		.file 46 "../include/wx_handler.h"
 2324              		.file 47 "../system/include/drivers/i2c.h"
 2325              		.file 48 "../src/../system/include/modbus_rtu/rtu_serial_io.h"
 2326              		.file 49 "../src/../system/include/davis_vantage/davis.h"
 2327              		.file 50 "../include/KissCommunication.h"
 2328              		.file 51 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
 2329              		.file 52 "../include/float_to_string.h"
 2330              		.file 53 "../src/io.h"
 2331              		.file 54 "../include/PathConfig.h"
 2332              		.file 55 "../system/include/aprs/dac.h"
 2333              		.file 56 "../system/include/aprs/digi.h"
 2334              		.file 57 "../include/it_handlers.h"
 2335              		.file 58 "../system/include/aprs/afsk_pr.h"
 2336              		.file 59 "../include/TimerConfig.h"
 2337              		.file 60 "../system/include/umb_master/umb_master.h"
 2338              		.file 61 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 2339              		.file 62 "../system/include/ve_direct_protocol/parser.h"
 2340              		.file 63 "../system/include/aprs/beacon.h"
 2341              		.file 64 "../system/include/umb_master/umb_0x26_status.h"
 2342              		.file 65 "../system/include/aprs/wx.h"
 2343              		.file 66 "../include/packet_tx_handler.h"
 2344              		.file 67 "../system/include/umb_master/umb_channel_pool.h"
 2345              		.file 68 "../src/../system/include/davis_vantage/davis_parsers.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc5cMGi5.s:18     .text.message_callback:0000000000000000 $t
     /tmp/cc5cMGi5.s:24     .text.message_callback:0000000000000000 message_callback
     /tmp/cc5cMGi5.s:39     .text.main:0000000000000000 $t
     /tmp/cc5cMGi5.s:46     .text.main:0000000000000000 main
     /tmp/cc5cMGi5.s:305    .text.main:00000000000001a0 $d
     /tmp/cc5cMGi5.s:313    .text.main:00000000000001a8 $d
                            *COM*:00000000000000a0 main_own_aprs_msg
                            *COM*:0000000000000009 main_string_latitude
                            *COM*:0000000000000009 main_string_longitude
     /tmp/cc5cMGi5.s:325    .text.main:00000000000001d0 $t
     /tmp/cc5cMGi5.s:731    .text.main:0000000000000454 $d
                            *COM*:0000000000000018 GPIO_InitTypeDef
                            *COM*:0000000000000004 main_kiss_srl_ctx_ptr
                            *COM*:0000000000000058 main_kiss_srl_ctx
                            *COM*:0000000000000004 main_wx_srl_ctx_ptr
                            *COM*:0000000000000058 main_wx_srl_ctx
                            *COM*:0000000000000004 main_target_kiss_baudrate
                            *COM*:0000000000000004 main_target_wx_baudrate
                            *COM*:0000000000000015 main_own_path
                            *COM*:0000000000000444 main_afsk
                            *COM*:0000000000000218 main_ax25
     /tmp/cc5cMGi5.s:758    .text.main:00000000000004b8 $t
     /tmp/cc5cMGi5.s:1149   .text.main:000000000000072c $d
                            *COM*:0000000000000001 main_own_aprs_msg_len
     /tmp/cc5cMGi5.s:1196   .text.main:00000000000007d8 $t
     /tmp/cc5cMGi5.s:1541   .text.main:0000000000000a24 $d
     /tmp/cc5cMGi5.s:1573   .text.main:0000000000000a98 $t
     /tmp/cc5cMGi5.s:1929   .text.main:0000000000000cd8 $d
     /tmp/cc5cMGi5.s:1971   .text.main_get_adc_sample:0000000000000000 $t
     /tmp/cc5cMGi5.s:1978   .text.main_get_adc_sample:0000000000000000 main_get_adc_sample
     /tmp/cc5cMGi5.s:1994   .text.main_get_adc_sample:0000000000000008 $d
     /tmp/cc5cMGi5.s:1999   .text.main_service_cpu_load_ticks:0000000000000000 $t
     /tmp/cc5cMGi5.s:2006   .text.main_service_cpu_load_ticks:0000000000000000 main_service_cpu_load_ticks
     /tmp/cc5cMGi5.s:2037   .text.main_service_cpu_load_ticks:0000000000000020 $d
     /tmp/cc5cMGi5.s:2111   .bss.kiss10m:0000000000000000 kiss10m
     /tmp/cc5cMGi5.s:2104   .bss.digidrop10m:0000000000000000 digidrop10m
     /tmp/cc5cMGi5.s:2098   .bss.digi10m:0000000000000000 digi10m
     /tmp/cc5cMGi5.s:2211   .bss.tx10m:0000000000000000 tx10m
     /tmp/cc5cMGi5.s:2205   .bss.rx10m:0000000000000000 rx10m
                            *COM*:0000000000000001 after_tx_lock
     /tmp/cc5cMGi5.s:2159   .bss.main_crc_result:0000000000000000 main_crc_result
     /tmp/cc5cMGi5.s:2262   .data.main_umb_retval:0000000000000000 main_umb_retval
     /tmp/cc5cMGi5.s:2092   .bss.buffer_len:0000000000000000 buffer_len
     /tmp/cc5cMGi5.s:2275   .data.retval:0000000000000000 retval
     /tmp/cc5cMGi5.s:2243   .data.main_symbol_s:0000000000000000 main_symbol_s
     /tmp/cc5cMGi5.s:2237   .data.main_symbol_f:0000000000000000 main_symbol_f
     /tmp/cc5cMGi5.s:2191   .bss.main_own_path_ln:0000000000000000 main_own_path_ln
     /tmp/cc5cMGi5.s:2185   .bss.main_modbus_rtu_master_enabled:0000000000000000 main_modbus_rtu_master_enabled
     /tmp/cc5cMGi5.s:2172   .bss.main_davis_serial_enabled:0000000000000000 main_davis_serial_enabled
     /tmp/cc5cMGi5.s:2217   .data.main_kiss_enabled:0000000000000000 main_kiss_enabled
     /tmp/cc5cMGi5.s:2250   .data.main_ten_second_pool_timer:0000000000000000 main_ten_second_pool_timer
     /tmp/cc5cMGi5.s:2257   .data.main_two_second_pool_timer:0000000000000000 main_two_second_pool_timer
     /tmp/cc5cMGi5.s:2231   .data.main_one_second_pool_timer:0000000000000000 main_one_second_pool_timer
     /tmp/cc5cMGi5.s:2224   .data.main_one_minute_pool_timer:0000000000000000 main_one_minute_pool_timer
     /tmp/cc5cMGi5.s:2269   .data.main_wx_sensors_pool_timer:0000000000000000 main_wx_sensors_pool_timer
     /tmp/cc5cMGi5.s:2152   .bss.main_cpu_load:0000000000000000 main_cpu_load
     /tmp/cc5cMGi5.s:2166   .bss.main_current_cpu_idle_ticks:0000000000000000 main_current_cpu_idle_ticks
     /tmp/cc5cMGi5.s:2179   .bss.main_idle_cpu_ticks:0000000000000000 main_idle_cpu_ticks
     /tmp/cc5cMGi5.s:2198   .bss.master_time:0000000000000000 master_time
     /tmp/cc5cMGi5.s:2132   .bss.main_config_data_rtu:0000000000000000 main_config_data_rtu
     /tmp/cc5cMGi5.s:2139   .bss.main_config_data_umb:0000000000000000 main_config_data_umb
     /tmp/cc5cMGi5.s:2146   .bss.main_config_data_wx_sources:0000000000000000 main_config_data_wx_sources
     /tmp/cc5cMGi5.s:2118   .bss.main_config_data_basic:0000000000000000 main_config_data_basic
     /tmp/cc5cMGi5.s:2125   .bss.main_config_data_mode:0000000000000000 main_config_data_mode
     /tmp/cc5cMGi5.s:2088   .bss.buffer_len:0000000000000000 $d
     /tmp/cc5cMGi5.s:2095   .bss.digi10m:0000000000000000 $d
     /tmp/cc5cMGi5.s:2101   .bss.digidrop10m:0000000000000000 $d
     /tmp/cc5cMGi5.s:2107   .bss.kiss10m:0000000000000000 $d
     /tmp/cc5cMGi5.s:2114   .bss.main_config_data_basic:0000000000000000 $d
     /tmp/cc5cMGi5.s:2121   .bss.main_config_data_mode:0000000000000000 $d
     /tmp/cc5cMGi5.s:2128   .bss.main_config_data_rtu:0000000000000000 $d
     /tmp/cc5cMGi5.s:2135   .bss.main_config_data_umb:0000000000000000 $d
     /tmp/cc5cMGi5.s:2142   .bss.main_config_data_wx_sources:0000000000000000 $d
     /tmp/cc5cMGi5.s:2153   .bss.main_cpu_load:0000000000000000 $d
     /tmp/cc5cMGi5.s:2155   .bss.main_crc_result:0000000000000000 $d
     /tmp/cc5cMGi5.s:2162   .bss.main_current_cpu_idle_ticks:0000000000000000 $d
     /tmp/cc5cMGi5.s:2173   .bss.main_davis_serial_enabled:0000000000000000 $d
     /tmp/cc5cMGi5.s:2175   .bss.main_idle_cpu_ticks:0000000000000000 $d
     /tmp/cc5cMGi5.s:2186   .bss.main_modbus_rtu_master_enabled:0000000000000000 $d
     /tmp/cc5cMGi5.s:2192   .bss.main_own_path_ln:0000000000000000 $d
     /tmp/cc5cMGi5.s:2194   .bss.master_time:0000000000000000 $d
     /tmp/cc5cMGi5.s:2201   .bss.rx10m:0000000000000000 $d
     /tmp/cc5cMGi5.s:2208   .bss.tx10m:0000000000000000 $d
     /tmp/cc5cMGi5.s:2220   .data.main_one_minute_pool_timer:0000000000000000 $d
     /tmp/cc5cMGi5.s:2227   .data.main_one_second_pool_timer:0000000000000000 $d
     /tmp/cc5cMGi5.s:2246   .data.main_ten_second_pool_timer:0000000000000000 $d
     /tmp/cc5cMGi5.s:2253   .data.main_two_second_pool_timer:0000000000000000 $d
     /tmp/cc5cMGi5.s:2265   .data.main_wx_sensors_pool_timer:0000000000000000 $d
     /tmp/cc5cMGi5.s:2278   .rodata.main.str1.4:0000000000000000 $d
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.station_config_target_hw.h.9.a20e080416e80d1cff9c1b51cc464832
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.b6144e50d34fc998dd4c2cfb6387cf91
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32l4xx_ll_iwdg.h.22.ce71c09b15c76497ab9cb3a8a8734a5a
                           .group:0000000000000000 wm4.stm32l4xx_ll_rcc.h.22.3702bcd372271b9dd515b458d35bb2ae
                           .group:0000000000000000 wm4.stm32l4xx_ll_gpio.h.22.6ea69d1eee1200f6e0d48e871aaa811d
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.macros.h.2.7a7a5ac48d4160b7481c806e80b68442
                           .group:0000000000000000 wm4.config.h.2.f5e96167cb26b0ce97c5e7513a95bc8b
                           .group:0000000000000000 wm4.afsk.h.17.cf8f922069680e152e1eddb76cd4cc82
                           .group:0000000000000000 wm4.ax25.h.18.077e42a4af9016476e34900472a8fe18
                           .group:0000000000000000 wm4.stm32l4xx_ll_usart.h.22.ec2beebcd146668c5b35749264d7b58a
                           .group:0000000000000000 wm4.serial.h.14.eed7cf013c382ed4598746b40f0e2523
                           .group:0000000000000000 wm4.config_data.h.9.6026a38cd2f39158a8fd50707ba1bf90
                           .group:0000000000000000 wm4.main.h.8.3d6ad69e5f061008d8c5cc5f5c9dd15a
                           .group:0000000000000000 wm4.LedConfig.h.9.4d8a7e6bb86dda658c789f8aaf01aaee
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.7eec48e1bc15e3b0aff1089c232f5a9c
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:0000000000000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:0000000000000000 wm4.station_config.h.9.d547169434a316afe56104ac612d2109
                           .group:0000000000000000 wm4.unistd.h.2.39165d5b7784d1815ef4b0c4be6df560
                           .group:0000000000000000 wm4.unistd.h.170.da6e816043042c61475c2b1f58468b37
                           .group:0000000000000000 wm4.antilib_adc.h.10.beb33c5f49564637478b9d419893c0dd
                           .group:0000000000000000 wm4.digi.h.14.769ea2ae98162dd36806ccf4982c3c8a
                           .group:0000000000000000 wm4.dallas.h.9.67a8cfc0b128d7b4f1ab07251516b59e
                           .group:0000000000000000 wm4.math.h.13.adb102f7bd7860b1f241e149d6914a1e
                           .group:0000000000000000 wm4.ms5611.h.13.84fbf6afa85557f675e3d85f1be6067c
                           .group:0000000000000000 wm4.average_struct.h.9.41820d0d7dc25dca8a9005c6d1a8bb5f
                           .group:0000000000000000 wm4.telemetry.h.21.a87436b8ee86f5e60170454e063be1e3
                           .group:0000000000000000 wm4.parser.h.9.2d68c8669e0bffa77926bbb9bf5a2aba
                           .group:0000000000000000 wm4.analog_anemometer.h.9.8c21570f6fc3dcd7763ba4d0d5168e3c
                           .group:0000000000000000 wm4.umb_frame_t.h.9.05796095a57acd1575f07118cb6ab058
                           .group:0000000000000000 wm4.umb_defines.h.9.77e79b84cd2dd9a74204aaeb1ca9d6be
                           .group:0000000000000000 wm4.bme280.h.9.aefe05f9329372f30337537cea488dce
                           .group:0000000000000000 wm4.rte_wx.h.30.cb80bd87f9fae81b43459954f1781e96
                           .group:0000000000000000 wm4.rtu_configuration.h.9.225559723a46d58da796e0ac6cb0b2ac
                           .group:0000000000000000 wm4.wx_handler.h.9.70f7141466ac521f5731794f4f690a16
                           .group:0000000000000000 wm4.davis_retval_def.h.9.025968613fbef7aa10339676702cdb4e
                           .group:0000000000000000 wm4.davis.h.18.aa92228551d9a3484fe55d6024d1b87b
                           .group:0000000000000000 wm4.davis_parsers.h.15.1cf20b7725fbc6387ea18eb1ec35046c
                           .group:0000000000000000 wm4.KissCommunication.h.17.f1e76db053f07badac1040f3bea74fb3

UNDEFINED SYMBOLS
memset
rte_wx_init
rte_rtu_init
configuration_handler_check_crc
configuration_get_register
configuration_handler_restore_default_first
configuration_set_bits_register
configuration_handler_restore_default_second
configuration_clear_bits_register
configuration_handler_load_configuration
float_to_string
rte_main_reboot_req
config_data_pgm_cntr_first
config_data_pgm_cntr_second
delay_set
io_oc_init
wx_pwr_init
wx_pwr_periodic_handle
delay_fixed_with_count
LL_GPIO_Init
srl_init
ConfigPath
i2cConfigure
led_init
AFSK_Init
ax25_init
DA_Init
io_ext_watchdog_config
digi_init
it_handlers_set_priorities
ADCStartConfig
DACStartConfig
srl_receive_data
io_oc_output_low
TimerConfig
IWDG_ReloadCounter
io_ext_watchdog_service
srl_usart1_tx_buffer
srl_usart1_rx_buffer
srl_usart2_tx_buffer
srl_usart2_rx_buffer
srl_switch_timeout
davis_init
davis_wake_up
davis_control_backlight
delay_fixed
davis_trigger_rxcheck_packet
rtu_serial_init
srl_switch_tx_delay
rtu_serial_start
dallas_init
umb_master_init
analog_anemometer_init
ms5611_reset
ms5611_read_calibration
ms5611_trigger_measure
bme280_reset
bme280_setup
bme280_read_calibration
sprintf
ax25_sendVia_toBuffer
srl_start_tx
wx_get_all_measurements
ve_direct_parser_init
beacon_send_own
umb_0x26_status_request
rte_wx_davis_station_avaliable
rte_rtu_pool_queue
rte_wx_dallas_average
rte_wx_umb_context
rte_wx_ms5611_qf
SensorCalData
rte_wx_bme280_qf
bme280_calibration_data
rte_pv_average
rte_pv_struct
rte_wx_umb
srl_wait_for_tx_completion
SendWXFrameToBuffer
digi_process
SendKISSToHost
wx_pool_anemometer
rte_wx_humidity
rte_wx_average_winddirection
rte_wx_max_windspeed
rte_wx_average_windspeed
rte_wx_pressure_valid
rte_wx_temperature_average_external_valid
ax25_new_msg_rx_flag
ax25_rxed_frame
rte_main_trigger_modbus_status
srl_get_rx_buffer
ve_direct_cut_to_checksum
ve_direct_validate_checksum
ve_direct_parse_to_raw_struct
ve_direct_add_to_average
ve_direct_get_averages
ve_direct_set_sys_voltage
ve_direct_store_errors
umb_pooling_handler
srl_get_num_bytes_rxed
ParseReceivedKISS
davis_loop_packet_pooler
davis_rxcheck_packet_pooler
rtu_serial_pool
rtu_serial_get_status_string
ax25_sendVia
afsk_txStart
packet_tx_handler
analog_anemometer_direction_handler
analog_anemometer_direction_reset
wx_check_force_i2c_reset
umb_channel_pool
umb_get_current_qf
davis_trigger_loop_packet
davis_parsers_loop
rte_pv_load_current
rte_pv_cell_voltage
rte_pv_battery_voltage
rte_pv_battery_current
rte_pv_sys_voltage
rte_pv_last_error
rte_pv_messages_count
rte_pv_corrupted_messages_count
rte_wx_davis_loop_packet_avaliable
rte_wx_umb_qf
rte_wx_davis_loop_content
