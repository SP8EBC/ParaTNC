   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"float_to_string.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_i2d
  18              		.global	__aeabi_d2iz
  19              		.section	.text.float_to_string,"ax",%progbits
  20              		.align	1
  21              		.global	float_to_string
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	float_to_string:
  28              	.LFB3:
  29              		.file 1 "../src/float_to_string.c"
   1:../src/float_to_string.c **** /*
   2:../src/float_to_string.c ****  * float_to_string.c
   3:../src/float_to_string.c ****  *
   4:../src/float_to_string.c ****  *  Created on: May 12, 2021
   5:../src/float_to_string.c ****  *      Author: mateusz
   6:../src/float_to_string.c ****  */
   7:../src/float_to_string.c **** 
   8:../src/float_to_string.c **** #include "float_to_string.h"
   9:../src/float_to_string.c **** 
  10:../src/float_to_string.c **** #include <string.h>
  11:../src/float_to_string.c **** #include <stdio.h>
  12:../src/float_to_string.c **** #include <math.h>
  13:../src/float_to_string.c **** 
  14:../src/float_to_string.c **** void float_to_string(float in, char * out, uint8_t ln, int8_t precision, int8_t integer_ln) {
  30              		.loc 1 14 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 70B5     		push	{r4, r5, r6, lr}
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
  40              		.cfi_offset 14, -4
  41 0002 2DED028B 		vpush.64	{d8}
  42              		.cfi_def_cfa_offset 24
  43              		.cfi_offset 80, -24
  44              		.cfi_offset 81, -20
  45 0006 82B0     		sub	sp, sp, #8
  46              		.cfi_def_cfa_offset 32
  47 0008 0546     		mov	r5, r0
  48 000a 0E46     		mov	r6, r1
  49 000c 1C46     		mov	r4, r3
  50              	.LVL1:
  15:../src/float_to_string.c **** 
  16:../src/float_to_string.c **** 	int32_t integer_part = 0, decimal_part = 0;
  17:../src/float_to_string.c **** 
  18:../src/float_to_string.c **** 	float decimal_in_float = 0.0f;
  19:../src/float_to_string.c **** 
  20:../src/float_to_string.c **** 	integer_part = (int32_t)in;
  51              		.loc 1 20 0
  52 000e FDEEC08A 		vcvt.s32.f32	s17, s0
  53              	.LVL2:
  21:../src/float_to_string.c **** 
  22:../src/float_to_string.c **** 	// decimal part stored as float
  23:../src/float_to_string.c **** 	decimal_in_float = in - integer_part;
  54              		.loc 1 23 0
  55 0012 B8EEE88A 		vcvt.f32.s32	s16, s17
  56 0016 30EE488A 		vsub.f32	s16, s0, s16
  57              	.LVL3:
  24:../src/float_to_string.c **** 
  25:../src/float_to_string.c **** 	// calcaulating decimal precision multiplier
  26:../src/float_to_string.c **** 	precision = pow(10, precision);
  58              		.loc 1 26 0
  59 001a 1046     		mov	r0, r2
  60              	.LVL4:
  61 001c FFF7FEFF 		bl	__aeabi_i2d
  62              	.LVL5:
  63 0020 41EC110B 		vmov	d1, r0, r1
  64 0024 9FED240B 		vldr.64	d0, .L10
  65 0028 FFF7FEFF 		bl	pow
  66              	.LVL6:
  67 002c 51EC100B 		vmov	r0, r1, d0
  68 0030 FFF7FEFF 		bl	__aeabi_d2iz
  69              	.LVL7:
  70 0034 40B2     		sxtb	r0, r0
  71              	.LVL8:
  27:../src/float_to_string.c **** 
  28:../src/float_to_string.c **** 	// moving decimal point according to precision required by the caller
  29:../src/float_to_string.c **** 	decimal_in_float *= precision;
  72              		.loc 1 29 0
  73 0036 07EE900A 		vmov	s15, r0	@ int
  74 003a B8EEE70A 		vcvt.f32.s32	s0, s15
  75 003e 20EE080A 		vmul.f32	s0, s0, s16
  76              	.LVL9:
  30:../src/float_to_string.c **** 
  31:../src/float_to_string.c **** 	// converting decimal part into integer variable
  32:../src/float_to_string.c **** 	decimal_part = (int32_t) decimal_in_float;
  77              		.loc 1 32 0
  78 0042 BDEEC08A 		vcvt.s32.f32	s16, s0
  79              	.LVL10:
  33:../src/float_to_string.c **** 
  34:../src/float_to_string.c **** 	// clearing output
  35:../src/float_to_string.c **** 	memset (out, 0x00, ln);
  80              		.loc 1 35 0
  81 0046 3246     		mov	r2, r6
  82 0048 0021     		movs	r1, #0
  83 004a 2846     		mov	r0, r5
  84              	.LVL11:
  85 004c FFF7FEFF 		bl	memset
  86              	.LVL12:
  36:../src/float_to_string.c **** 
  37:../src/float_to_string.c **** 	if (integer_ln == 3) {
  87              		.loc 1 37 0
  88 0050 032C     		cmp	r4, #3
  89 0052 10D0     		beq	.L7
  38:../src/float_to_string.c **** 		snprintf(out, ln, "%03ld.%ld", integer_part, decimal_part);
  39:../src/float_to_string.c **** 	}
  40:../src/float_to_string.c **** 	else if (integer_ln == 4) {
  90              		.loc 1 40 0
  91 0054 042C     		cmp	r4, #4
  92 0056 18D0     		beq	.L8
  41:../src/float_to_string.c **** 		snprintf(out, ln, "%04ld.%ld", integer_part, decimal_part);
  42:../src/float_to_string.c **** 	}
  43:../src/float_to_string.c **** 	else if (integer_ln == 5) {
  93              		.loc 1 43 0
  94 0058 052C     		cmp	r4, #5
  95 005a 20D0     		beq	.L9
  44:../src/float_to_string.c **** 		snprintf(out, ln, "%05ld.%ld", integer_part, decimal_part);
  45:../src/float_to_string.c **** 	}
  46:../src/float_to_string.c **** 	else {
  47:../src/float_to_string.c **** 		snprintf(out, ln, "%ld.%ld", integer_part, decimal_part);
  96              		.loc 1 47 0
  97 005c 8DED008A 		vstr.32	s16, [sp]	@ int
  98 0060 18EE903A 		vmov	r3, s17	@ int
  99 0064 164A     		ldr	r2, .L10+8
 100 0066 3146     		mov	r1, r6
 101 0068 2846     		mov	r0, r5
 102 006a FFF7FEFF 		bl	snprintf
 103              	.LVL13:
 104              	.L1:
  48:../src/float_to_string.c **** 	}
  49:../src/float_to_string.c **** 
  50:../src/float_to_string.c **** 
  51:../src/float_to_string.c **** }
 105              		.loc 1 51 0
 106 006e 02B0     		add	sp, sp, #8
 107              		.cfi_remember_state
 108              		.cfi_def_cfa_offset 24
 109              		@ sp needed
 110 0070 BDEC028B 		vldm	sp!, {d8}
 111              		.cfi_restore 80
 112              		.cfi_restore 81
 113              		.cfi_def_cfa_offset 16
 114              	.LVL14:
 115 0074 70BD     		pop	{r4, r5, r6, pc}
 116              	.LVL15:
 117              	.L7:
 118              		.cfi_restore_state
  38:../src/float_to_string.c **** 	}
 119              		.loc 1 38 0
 120 0076 8DED008A 		vstr.32	s16, [sp]	@ int
 121 007a 18EE903A 		vmov	r3, s17	@ int
 122 007e 114A     		ldr	r2, .L10+12
 123 0080 3146     		mov	r1, r6
 124 0082 2846     		mov	r0, r5
 125 0084 FFF7FEFF 		bl	snprintf
 126              	.LVL16:
 127 0088 F1E7     		b	.L1
 128              	.L8:
  41:../src/float_to_string.c **** 	}
 129              		.loc 1 41 0
 130 008a 8DED008A 		vstr.32	s16, [sp]	@ int
 131 008e 18EE903A 		vmov	r3, s17	@ int
 132 0092 0D4A     		ldr	r2, .L10+16
 133 0094 3146     		mov	r1, r6
 134 0096 2846     		mov	r0, r5
 135 0098 FFF7FEFF 		bl	snprintf
 136              	.LVL17:
 137 009c E7E7     		b	.L1
 138              	.L9:
  44:../src/float_to_string.c **** 	}
 139              		.loc 1 44 0
 140 009e 8DED008A 		vstr.32	s16, [sp]	@ int
 141 00a2 18EE903A 		vmov	r3, s17	@ int
 142 00a6 094A     		ldr	r2, .L10+20
 143 00a8 3146     		mov	r1, r6
 144 00aa 2846     		mov	r0, r5
 145 00ac FFF7FEFF 		bl	snprintf
 146              	.LVL18:
 147 00b0 DDE7     		b	.L1
 148              	.L11:
 149 00b2 00BFAFF3 		.align	3
 149      0080
 150              	.L10:
 151 00b8 00000000 		.word	0
 152 00bc 00002440 		.word	1076101120
 153 00c0 24000000 		.word	.LC3
 154 00c4 00000000 		.word	.LC0
 155 00c8 0C000000 		.word	.LC1
 156 00cc 18000000 		.word	.LC2
 157              		.cfi_endproc
 158              	.LFE3:
 160              		.section	.rodata.float_to_string.str1.4,"aMS",%progbits,1
 161              		.align	2
 162              	.LC0:
 163 0000 2530336C 		.ascii	"%03ld.%ld\000"
 163      642E256C 
 163      6400
 164 000a 0000     		.space	2
 165              	.LC1:
 166 000c 2530346C 		.ascii	"%04ld.%ld\000"
 166      642E256C 
 166      6400
 167 0016 0000     		.space	2
 168              	.LC2:
 169 0018 2530356C 		.ascii	"%05ld.%ld\000"
 169      642E256C 
 169      6400
 170 0022 0000     		.space	2
 171              	.LC3:
 172 0024 256C642E 		.ascii	"%ld.%ld\000"
 172      256C6400 
 173              		.text
 174              	.Letext0:
 175              		.file 2 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 176              		.file 3 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 177              		.file 4 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 178              		.file 5 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 179              		.file 6 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 180              		.file 7 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 181              		.file 8 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
 182              		.file 9 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 float_to_string.c
     /tmp/ccWhgp5o.s:20     .text.float_to_string:0000000000000000 $t
     /tmp/ccWhgp5o.s:27     .text.float_to_string:0000000000000000 float_to_string
     /tmp/ccWhgp5o.s:151    .text.float_to_string:00000000000000b8 $d
     /tmp/ccWhgp5o.s:161    .rodata.float_to_string.str1.4:0000000000000000 $d
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:0000000000000000 wm4.math.h.13.adb102f7bd7860b1f241e149d6914a1e

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_d2iz
pow
memset
snprintf
