   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.__NVIC_SystemReset,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	__NVIC_SystemReset:
  25              	.LFB119:
  26              		.file 1 "../system/include/cmsis/stm32l4xx/core_cm4.h"
   1:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**************************************************************************//**
   2:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @file     core_cm4.h
   3:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @version  V5.1.0
   5:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @date     13. March 2019
   6:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
   7:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*
   8:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  10:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  12:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * not use this file except in compliance with the License.
  14:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * You may obtain a copy of the License at
  15:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  16:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  18:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * limitations under the License.
  23:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  24:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  25:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined (__clang__)
  28:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
  30:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  31:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  34:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include <stdint.h>
  35:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  36:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
  37:../system/include/cmsis/stm32l4xx/core_cm4.h ****  extern "C" {
  38:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
  39:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  40:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
  41:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../system/include/cmsis/stm32l4xx/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  44:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  47:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  50:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  53:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  54:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  55:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
  56:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                 CMSIS definitions
  57:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
  58:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
  59:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup Cortex_M4
  60:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
  61:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  62:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  63:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include "cmsis_version.h"
  64:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  65:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* CMSIS CM4 definitions */
  66:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:../system/include/cmsis/stm32l4xx/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  71:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  73:../system/include/cmsis/stm32l4xx/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../system/include/cmsis/stm32l4xx/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
  76:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined ( __CC_ARM )
  77:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
  80:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
  81:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
  83:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
  84:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
  85:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
  86:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
  87:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  88:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __ARM_FP
  90:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
  92:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
  93:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
  95:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
  96:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
  97:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
  98:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
  99:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 100:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __GNUC__ )
 101:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 104:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 105:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 107:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 108:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 109:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 110:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 111:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 112:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __ARMVFP__
 114:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 116:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 117:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 119:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 120:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 121:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 122:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 123:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 124:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 128:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 129:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 131:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 132:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 133:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 134:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 135:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 136:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __TASKING__ )
 137:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __FPU_VFP__
 138:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 140:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 141:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 143:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 144:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 145:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 146:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 147:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 148:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __CSMC__ )
 149:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 152:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 153:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 155:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 156:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 157:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 158:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 159:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 160:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 161:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 162:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 164:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 165:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 166:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
 167:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 168:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 169:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 171:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 173:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 176:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 177:../system/include/cmsis/stm32l4xx/core_cm4.h ****  extern "C" {
 178:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 179:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 180:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* check device defines and use defaults */
 181:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __CM4_REV
 183:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 186:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 187:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 191:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 192:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 196:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 197:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 201:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 202:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 206:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 207:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 208:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 210:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 212:../system/include/cmsis/stm32l4xx/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
 216:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 217:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
 219:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 221:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 224:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* following defines should be used for structure members */
 225:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 229:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 231:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 232:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 233:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
 234:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                 Register Abstraction
 235:../system/include/cmsis/stm32l4xx/core_cm4.h ****   Core Register contain:
 236:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Register
 237:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core NVIC Register
 238:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SCB Register
 239:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SysTick Register
 240:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Debug Register
 241:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core MPU Register
 242:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core FPU Register
 243:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
 244:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 245:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
 248:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 249:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 250:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Core Register type definitions.
 253:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 254:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 255:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 256:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 257:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 259:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 260:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 261:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 262:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 263:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:../system/include/cmsis/stm32l4xx/core_cm4.h **** } APSR_Type;
 274:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 275:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* APSR Register Definitions */
 276:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 279:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 282:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 285:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 288:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 291:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 294:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 295:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 296:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 298:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 299:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 300:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 301:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 302:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../system/include/cmsis/stm32l4xx/core_cm4.h **** } IPSR_Type;
 307:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 308:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* IPSR Register Definitions */
 309:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 312:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 313:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 314:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 316:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 317:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 318:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 319:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 320:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:../system/include/cmsis/stm32l4xx/core_cm4.h **** } xPSR_Type;
 335:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 336:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* xPSR Register Definitions */
 337:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 340:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 343:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 346:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 349:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 352:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 355:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 358:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 361:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 364:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 367:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 368:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 369:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 371:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 372:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 373:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 374:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 375:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:../system/include/cmsis/stm32l4xx/core_cm4.h **** } CONTROL_Type;
 382:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 383:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* CONTROL Register Definitions */
 384:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 387:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 390:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 393:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 395:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 396:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 397:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 401:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 402:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 403:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 404:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 406:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 407:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 408:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:../system/include/cmsis/stm32l4xx/core_cm4.h **** }  NVIC_Type;
 422:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 423:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 427:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 429:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 430:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 431:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 435:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 436:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 437:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 438:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 440:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 441:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 442:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SCB_Type;
 464:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 465:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 469:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 472:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 475:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 478:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 481:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 485:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 488:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 491:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 494:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 497:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 500:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 503:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 506:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 509:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 512:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 516:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 520:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 523:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 526:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 529:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 532:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 535:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 538:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB System Control Register Definitions */
 539:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 542:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 545:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 548:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 552:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 555:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 558:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 561:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 564:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 567:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 571:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 574:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 577:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 580:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 583:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 586:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 589:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 592:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 595:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 598:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 601:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 604:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 607:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 610:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 614:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 617:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 620:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 624:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 627:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 630:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 633:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 636:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 639:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 643:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 646:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 649:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 652:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 655:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 658:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 661:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 665:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 668:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 671:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 674:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 677:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 680:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 684:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 687:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 690:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 694:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 697:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 700:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 703:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 706:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 708:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 709:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 710:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 714:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 715:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 716:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 717:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 719:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 720:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 721:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SCnSCB_Type;
 725:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 726:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 730:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 734:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 737:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 740:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 743:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 746:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 748:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 749:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 750:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 754:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 755:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 756:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 757:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 759:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 760:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 761:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SysTick_Type;
 766:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 767:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 771:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 774:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 777:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 780:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 784:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Current Register Definitions */
 785:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 788:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 792:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 795:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 798:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 800:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 801:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 802:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 806:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 807:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 808:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 809:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 811:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 812:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 813:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  union
 814:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 815:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[6U];
 830:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:../system/include/cmsis/stm32l4xx/core_cm4.h **** } ITM_Type;
 843:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 844:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 848:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 852:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 855:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 858:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 861:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 864:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 867:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 870:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 873:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 876:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 880:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 883:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 886:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 888:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 889:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 890:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 894:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 895:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 896:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 897:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 899:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 900:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 901:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:../system/include/cmsis/stm32l4xx/core_cm4.h **** } DWT_Type;
 925:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 926:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Control Register Definitions */
 927:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 930:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 933:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 936:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 939:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 942:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 945:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 948:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 951:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 954:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 957:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 960:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 963:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 966:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 969:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 972:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 975:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 978:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 981:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 985:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 989:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 993:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 997:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1001:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1005:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1009:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1012:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1015:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1018:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1021:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1024:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1027:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1030:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1033:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1035:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1036:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1037:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1041:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1042:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1043:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1044:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1046:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1047:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1048:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:../system/include/cmsis/stm32l4xx/core_cm4.h **** } TPI_Type;
1073:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1074:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1078:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1082:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1086:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1089:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1092:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1095:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1099:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1102:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1106:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1110:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1113:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1116:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1119:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1122:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1125:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1128:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1132:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1135:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1139:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1142:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1145:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1148:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1151:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1154:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1157:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1161:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1164:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1168:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1172:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1175:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1178:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1181:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1184:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1187:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1191:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1194:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1196:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1197:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1199:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1203:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1204:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1205:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1206:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1208:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1209:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1210:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:../system/include/cmsis/stm32l4xx/core_cm4.h **** } MPU_Type;
1222:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1223:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1225:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Type Register Definitions */
1226:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1229:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1232:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1235:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Control Register Definitions */
1236:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1239:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1242:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1245:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1249:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1253:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1256:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1259:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1263:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1266:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1269:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1272:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1275:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1278:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1281:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1284:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1287:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1290:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1293:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1294:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1295:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1299:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1300:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1301:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1302:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1304:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1305:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1306:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:../system/include/cmsis/stm32l4xx/core_cm4.h **** } FPU_Type;
1314:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1315:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1319:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1322:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1325:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1328:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1331:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1334:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1337:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1340:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1343:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1347:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1351:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1354:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1357:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1360:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1364:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1367:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1370:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1373:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1376:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1379:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1382:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1385:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1389:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1392:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1395:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1398:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1400:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1403:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1405:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1406:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1407:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1411:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1412:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1413:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1414:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1416:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1417:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1418:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:../system/include/cmsis/stm32l4xx/core_cm4.h **** } CoreDebug_Type;
1423:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1424:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1428:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1431:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1434:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1437:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1440:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1443:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1446:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1449:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1452:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1455:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1458:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1461:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1465:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1468:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1472:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1475:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1478:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1481:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1484:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1487:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1490:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1493:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1496:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1499:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1502:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1505:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1508:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1510:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1511:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1512:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1516:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1517:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1518:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1519:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return           Masked and shifted value.
1523:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1524:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1526:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1527:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1532:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1534:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1536:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1537:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1538:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1542:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1543:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1544:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1554:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1563:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
1567:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1568:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1571:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} */
1572:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1573:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1574:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1575:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
1576:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                Hardware Abstraction Layer
1577:../system/include/cmsis/stm32l4xx/core_cm4.h ****   Core Function Interface contains:
1578:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core NVIC Functions
1579:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SysTick Functions
1580:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Debug Functions
1581:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Register Access Functions
1582:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
1583:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1584:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1586:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1587:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1588:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1589:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1591:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1595:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1596:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1597:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
1601:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
1603:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1617:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
1621:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
1623:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1627:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1629:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1630:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1638:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1639:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1640:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Priority Grouping
1641:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:../system/include/cmsis/stm32l4xx/core_cm4.h ****            Only values from 0..7 are used.
1644:../system/include/cmsis/stm32l4xx/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:../system/include/cmsis/stm32l4xx/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1648:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1650:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t reg_value;
1651:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1653:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:../system/include/cmsis/stm32l4xx/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:../system/include/cmsis/stm32l4xx/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1660:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1661:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1662:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1663:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Priority Grouping
1664:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1667:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1669:../system/include/cmsis/stm32l4xx/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1670:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1671:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1672:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1673:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1674:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Enable Interrupt
1675:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1678:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1679:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1681:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1683:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __COMPILER_BARRIER();
1684:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1685:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __COMPILER_BARRIER();
1686:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1687:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1688:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1689:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1690:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1691:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Interrupt Enable status
1692:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             1  Interrupt is enabled.
1696:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1697:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1698:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1700:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1702:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1704:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1705:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1706:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(0U);
1707:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1708:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1709:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1710:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1711:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1712:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Disable Interrupt
1713:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1716:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1717:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1719:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1721:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __DSB();
1723:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __ISB();
1724:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1725:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1726:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1727:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1728:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1729:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Pending Interrupt
1730:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             1  Interrupt status is pending.
1734:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1735:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1736:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1738:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1740:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1742:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1743:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1744:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(0U);
1745:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1746:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1747:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1748:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1749:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1750:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Pending Interrupt
1751:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1754:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1755:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1757:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1759:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1761:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1762:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1763:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1764:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1765:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Clear Pending Interrupt
1766:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1769:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1770:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1772:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1774:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1776:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1777:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1778:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1779:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1780:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Active Interrupt
1781:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             0  Interrupt status is not active.
1784:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             1  Interrupt status is active.
1785:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1786:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1787:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1789:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1791:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1793:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1794:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1795:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(0U);
1796:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1797:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1798:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1799:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1800:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1801:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Interrupt Priority
1802:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1805:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]  priority  Priority to set.
1807:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1809:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1811:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1812:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1813:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1814:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1815:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1816:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1817:../system/include/cmsis/stm32l4xx/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1818:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1819:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1820:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1821:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1822:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1823:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Interrupt Priority
1824:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1827:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return             Interrupt Priority.
1829:../system/include/cmsis/stm32l4xx/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1831:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1833:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1834:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1836:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1838:../system/include/cmsis/stm32l4xx/core_cm4.h ****   else
1839:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1840:../system/include/cmsis/stm32l4xx/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }
1842:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1843:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1844:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1845:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1846:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Encode Priority
1847:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:../system/include/cmsis/stm32l4xx/core_cm4.h ****            preemptive priority value, and subpriority value.
1849:../system/include/cmsis/stm32l4xx/core_cm4.h ****            In case of a conflict between priority grouping and available
1850:../system/include/cmsis/stm32l4xx/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1856:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1857:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1858:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1859:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PreemptPriorityBits;
1860:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t SubPriorityBits;
1861:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1862:../system/include/cmsis/stm32l4xx/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1863:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1864:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1865:../system/include/cmsis/stm32l4xx/core_cm4.h ****   return (
1866:../system/include/cmsis/stm32l4xx/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1867:../system/include/cmsis/stm32l4xx/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1868:../system/include/cmsis/stm32l4xx/core_cm4.h ****          );
1869:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1870:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1871:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1872:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1873:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Decode Priority
1874:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1875:../system/include/cmsis/stm32l4xx/core_cm4.h ****            preemptive priority value and subpriority value.
1876:../system/include/cmsis/stm32l4xx/core_cm4.h ****            In case of a conflict between priority grouping and available
1877:../system/include/cmsis/stm32l4xx/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1878:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1879:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1880:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1881:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1882:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1883:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1884:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1885:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1886:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PreemptPriorityBits;
1887:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t SubPriorityBits;
1888:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1889:../system/include/cmsis/stm32l4xx/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1890:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1891:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1892:../system/include/cmsis/stm32l4xx/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1893:../system/include/cmsis/stm32l4xx/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1894:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1895:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1896:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1897:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1898:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Interrupt Vector
1899:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1900:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1901:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1902:../system/include/cmsis/stm32l4xx/core_cm4.h ****            VTOR must been relocated to SRAM before.
1903:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1904:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1905:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1906:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1907:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1908:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1909:../system/include/cmsis/stm32l4xx/core_cm4.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
1910:../system/include/cmsis/stm32l4xx/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1911:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1912:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1913:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1914:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1915:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Interrupt Vector
1916:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1917:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1918:../system/include/cmsis/stm32l4xx/core_cm4.h ****            or negative to specify a processor exception.
1919:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1920:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return                 Address of interrupt handler function
1921:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1922:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1923:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1924:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1925:../system/include/cmsis/stm32l4xx/core_cm4.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
1926:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1927:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1928:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1929:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1930:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   System Reset
1931:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1932:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1933:../system/include/cmsis/stm32l4xx/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1934:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
  27              		.loc 1 1934 0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LBB6:
  34              	.LBB7:
  35              		.file 2 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h"
   1:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**************************************************************************//**
   2:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @version  V5.2.0
   5:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @date     08. May 2019
   6:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  ******************************************************************************/
   7:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*
   8:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  10:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  12:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  16:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  18:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * limitations under the License.
  23:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
  24:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  25:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  28:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  34:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __has_builtin
  36:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  38:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  39:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ASM
  41:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  43:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __INLINE
  44:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  46:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  49:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif                                           
  52:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  55:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __USED
  56:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  58:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __WEAK
  59:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  61:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED
  62:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  64:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  67:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  70:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  78:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  86:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  94:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 102:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 110:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 113:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 116:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 119:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 120:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 122:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 124:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 125:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            in the used linker script.
 129:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 130:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 131:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 133:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 135:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 136:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t const* src;
 137:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 138:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 139:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __copy_table_t;
 140:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 141:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 142:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 143:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 144:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __zero_table_t;
 145:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 146:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 151:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 155:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 156:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 157:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 161:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 162:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 163:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   _start();
 164:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 165:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 166:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 168:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 169:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 172:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 173:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 176:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 177:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 180:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 181:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 184:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 185:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 189:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 190:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 191:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 192:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 196:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 198:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 200:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 201:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 202:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 203:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 207:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 209:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 211:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 212:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 213:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 214:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register
 215:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Control Register value
 217:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 218:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 220:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 221:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 222:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 224:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 225:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 226:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 227:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 229:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 233:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 235:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 236:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 237:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 239:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 240:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 241:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 242:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 243:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 244:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register
 245:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 248:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 250:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 252:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 253:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 254:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 256:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 260:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 262:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 264:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 265:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 266:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 267:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 268:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               IPSR Register value
 271:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 272:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 274:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 275:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 276:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 278:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 279:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 280:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 281:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 282:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get APSR Register
 283:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               APSR Register value
 285:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 286:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 288:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 289:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 290:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 292:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 293:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 294:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 295:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 296:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               xPSR Register value
 299:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 300:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 302:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 303:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 304:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 306:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 307:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 308:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 309:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 310:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 313:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 314:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 316:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 317:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 318:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 320:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 321:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 322:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 323:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 325:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 328:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 329:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 331:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 332:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 333:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 335:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 336:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 337:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 338:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 339:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 340:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 344:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 346:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 348:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 349:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 350:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 352:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 356:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 358:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 360:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 361:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 362:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 363:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 364:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 367:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 368:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 370:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 371:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 372:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 374:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 375:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 376:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 377:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 379:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 382:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 383:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 385:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 386:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 387:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 389:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 390:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 391:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 392:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 393:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 394:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 398:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 400:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 402:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 403:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 404:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 406:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 410:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 412:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 414:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 415:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 416:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 417:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 419:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               SP Register value
 422:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 423:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 425:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 426:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 427:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 429:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 430:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 431:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 432:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 433:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 437:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 439:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 441:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 442:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 443:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 444:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 445:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 448:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 449:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 451:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 452:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 453:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 455:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 456:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 457:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 458:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 460:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 463:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 464:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 466:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 467:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 468:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 470:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 471:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 472:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 473:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 474:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 475:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 479:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 481:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 483:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 484:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 485:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 487:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 491:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 493:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 495:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 496:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 497:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 498:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 502:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable FIQ
 503:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 506:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 508:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 510:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 511:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 512:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 513:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable FIQ
 514:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 517:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 519:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 521:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 522:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 523:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 524:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority
 525:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 527:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 528:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 530:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 531:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 532:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 534:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 535:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 536:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 537:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 539:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 542:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 543:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 545:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 546:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 547:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 549:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 550:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 551:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 552:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 553:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 554:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority
 555:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 558:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 560:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 562:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 563:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 564:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 566:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 570:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 572:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 574:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 575:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 576:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 577:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 578:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 583:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 585:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 587:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 588:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 589:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 590:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 593:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 594:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 596:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 597:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 598:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 600:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 601:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 602:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 603:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 605:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 608:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 609:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 611:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 612:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 613:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 615:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 616:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 617:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 618:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 619:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 620:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 624:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 626:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 628:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 629:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 630:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 632:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 636:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 638:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 640:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 641:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 642:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 646:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 647:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 650:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 651:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 655:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 656:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 659:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 661:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 665:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 666:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 667:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 669:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 670:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 671:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 672:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 674:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 678:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 681:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 683:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 686:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 687:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 688:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 690:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 691:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 692:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 693:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 694:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 695:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 696:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 700:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 701:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 704:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 706:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 711:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 713:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 714:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 715:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 716:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 718:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 722:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 725:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 727:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 731:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 733:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 734:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 735:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 736:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 737:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 738:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 742:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 743:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 746:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 748:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 752:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 753:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 754:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 756:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 757:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 758:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 759:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 760:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 762:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 766:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 769:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 771:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 774:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 775:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 776:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 778:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 779:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 780:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 781:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 782:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 783:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 784:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 788:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 789:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 792:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 794:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 799:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 801:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 802:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 803:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 804:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 806:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 810:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 813:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 815:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 819:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 821:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 822:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 823:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 824:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 827:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 828:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 829:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get FPSCR
 830:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 833:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 835:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 843:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 844:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 845:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 847:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 848:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 849:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(0U);
 850:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 851:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 852:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 853:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 854:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 855:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set FPSCR
 856:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 859:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 861:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 869:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 871:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 872:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)fpscr;
 873:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 874:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 875:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 876:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 877:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 879:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 880:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Access to dedicated instructions
 883:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 884:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** */
 885:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 886:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 894:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 898:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 899:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 900:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   No Operation
 901:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 903:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 905:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 906:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 909:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 911:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 912:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 913:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Event
 914:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 917:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 919:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 920:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 921:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Send Event
 922:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 924:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 926:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 927:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 928:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            after the instruction has been completed.
 932:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 933:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 935:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 937:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 938:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 939:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 940:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 944:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 946:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  36              		.loc 2 946 0
  37              		.syntax unified
  38              	@ 946 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
  39 0000 BFF34F8F 		dsb 0xF
  40              	@ 0 "" 2
  41              		.thumb
  42              		.syntax unified
  43              	.LBE7:
  44              	.LBE6:
1935:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1936:../system/include/cmsis/stm32l4xx/core_cm4.h ****                                                                        buffered write are completed
1937:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1938:../system/include/cmsis/stm32l4xx/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  45              		.loc 1 1938 0
  46 0004 0549     		ldr	r1, .L3
  47 0006 CA68     		ldr	r2, [r1, #12]
  48 0008 02F4E062 		and	r2, r2, #1792
1937:../system/include/cmsis/stm32l4xx/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  49              		.loc 1 1937 0
  50 000c 044B     		ldr	r3, .L3+4
  51 000e 1343     		orrs	r3, r3, r2
  52 0010 CB60     		str	r3, [r1, #12]
  53              	.LBB8:
  54              	.LBB9:
  55              		.loc 2 946 0
  56              		.syntax unified
  57              	@ 946 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
  58 0012 BFF34F8F 		dsb 0xF
  59              	@ 0 "" 2
  60              		.thumb
  61              		.syntax unified
  62              	.L2:
  63              	.LBE9:
  64              	.LBE8:
1939:../system/include/cmsis/stm32l4xx/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1940:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1941:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1942:../system/include/cmsis/stm32l4xx/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1943:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1944:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __NOP();
  65              		.loc 1 1944 0 discriminator 1
  66              		.syntax unified
  67              	@ 1944 "../system/include/cmsis/stm32l4xx/core_cm4.h" 1
  68 0016 00BF     		nop
  69              	@ 0 "" 2
  70              		.thumb
  71              		.syntax unified
  72 0018 FDE7     		b	.L2
  73              	.L4:
  74 001a 00BF     		.align	2
  75              	.L3:
  76 001c 00ED00E0 		.word	-536810240
  77 0020 0400FA05 		.word	100270084
  78              		.cfi_endproc
  79              	.LFE119:
  81              		.section	.text.NMI_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	NMI_Handler
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	NMI_Handler:
  90              	.LFB351:
  91              		.file 3 "../system/src/cmsis/stm32l4xx/stm32l4xx_it.c"
   1:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE BEGIN Header */
   2:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /**
   3:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   ******************************************************************************
   4:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * @file    stm32l4xx_it.c
   5:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   ******************************************************************************
   7:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * @attention
   8:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   *
   9:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * All rights reserved.</center></h2>
  11:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   *
  12:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   *
  17:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   ******************************************************************************
  18:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   */
  19:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE END Header */
  20:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  21:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** #include "main.h"
  23:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** #include "stm32l4xx_it.h"
  24:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE BEGIN Includes */
  26:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE END Includes */
  27:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  28:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE BEGIN TD */
  30:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  31:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE END TD */
  32:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  33:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE BEGIN PD */
  35:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  36:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE END PD */
  37:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  38:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE BEGIN PM */
  40:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  41:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE END PM */
  42:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  43:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE BEGIN PV */
  45:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  46:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE END PV */
  47:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  48:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE BEGIN PFP */
  50:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  51:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE END PFP */
  52:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  53:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE BEGIN 0 */
  55:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  56:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE END 0 */
  57:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  58:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  60:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE BEGIN EV */
  61:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  62:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /* USER CODE END EV */
  63:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  64:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /******************************************************************************/
  65:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  66:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /******************************************************************************/
  67:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /**
  68:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   */
  70:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** void NMI_Handler(void)
  71:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** {
  92              		.loc 3 71 0
  93              		.cfi_startproc
  94              		@ Volatile: function does not return.
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 08B5     		push	{r3, lr}
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 3, -8
 100              		.cfi_offset 14, -4
  72:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  74:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   while (1)
  77:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   {
  78:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 	  NVIC_SystemReset();
 101              		.loc 3 78 0
 102 0002 FFF7FEFF 		bl	__NVIC_SystemReset
 103              	.LVL0:
 104              		.cfi_endproc
 105              	.LFE351:
 107              		.section	.text.HardFault_Handler,"ax",%progbits
 108              		.align	1
 109              		.global	HardFault_Handler
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	HardFault_Handler:
 116              	.LFB352:
  79:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   }
  80:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** }
  82:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  83:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /**
  84:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   */
  86:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** void HardFault_Handler(void)
  87:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** {
 117              		.loc 3 87 0
 118              		.cfi_startproc
 119              		@ Volatile: function does not return.
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 08B5     		push	{r3, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
  88:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  90:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   while (1)
  92:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   {
  93:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 	  NVIC_SystemReset();
 126              		.loc 3 95 0
 127 0002 FFF7FEFF 		bl	__NVIC_SystemReset
 128              	.LVL1:
 129              		.cfi_endproc
 130              	.LFE352:
 132              		.section	.text.MemManage_Handler,"ax",%progbits
 133              		.align	1
 134              		.global	MemManage_Handler
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu fpv4-sp-d16
 140              	MemManage_Handler:
 141              	.LFB353:
  96:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   }
  97:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** }
  98:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
  99:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /**
 100:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * @brief This function handles Memory management fault.
 101:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   */
 102:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** void MemManage_Handler(void)
 103:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** {
 142              		.loc 3 103 0
 143              		.cfi_startproc
 144              		@ Volatile: function does not return.
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 08B5     		push	{r3, lr}
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 3, -8
 150              		.cfi_offset 14, -4
 104:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 105:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 106:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 107:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   while (1)
 108:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   {
 109:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 110:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 111:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 	  NVIC_SystemReset();
 151              		.loc 3 111 0
 152 0002 FFF7FEFF 		bl	__NVIC_SystemReset
 153              	.LVL2:
 154              		.cfi_endproc
 155              	.LFE353:
 157              		.section	.text.BusFault_Handler,"ax",%progbits
 158              		.align	1
 159              		.global	BusFault_Handler
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	BusFault_Handler:
 166              	.LFB354:
 112:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   }
 113:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** }
 114:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 115:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /**
 116:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 117:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   */
 118:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** void BusFault_Handler(void)
 119:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** {
 167              		.loc 3 119 0
 168              		.cfi_startproc
 169              		@ Volatile: function does not return.
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172 0000 08B5     		push	{r3, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
 120:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 122:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   while (1)
 124:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   {
 125:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 	  NVIC_SystemReset();
 176              		.loc 3 127 0
 177 0002 FFF7FEFF 		bl	__NVIC_SystemReset
 178              	.LVL3:
 179              		.cfi_endproc
 180              	.LFE354:
 182              		.section	.text.UsageFault_Handler,"ax",%progbits
 183              		.align	1
 184              		.global	UsageFault_Handler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	UsageFault_Handler:
 191              	.LFB355:
 128:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   }
 129:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** }
 130:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 131:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /**
 132:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   */
 134:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** void UsageFault_Handler(void)
 135:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** {
 192              		.loc 3 135 0
 193              		.cfi_startproc
 194              		@ Volatile: function does not return.
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 136:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 138:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   while (1)
 140:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   {
 141:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 	  NVIC_SystemReset();
 201              		.loc 3 143 0
 202 0002 FFF7FEFF 		bl	__NVIC_SystemReset
 203              	.LVL4:
 204              		.cfi_endproc
 205              	.LFE355:
 207              		.section	.text.SVC_Handler,"ax",%progbits
 208              		.align	1
 209              		.global	SVC_Handler
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	SVC_Handler:
 216              	.LFB356:
 144:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   }
 145:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** }
 146:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 147:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /**
 148:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 149:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   */
 150:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** void SVC_Handler(void)
 151:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** {
 217              		.loc 3 151 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 152:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 153:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 154:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 155:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 156:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 157:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 158:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** }
 222              		.loc 3 158 0
 223 0000 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE356:
 227              		.section	.text.DebugMon_Handler,"ax",%progbits
 228              		.align	1
 229              		.global	DebugMon_Handler
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	DebugMon_Handler:
 236              	.LFB357:
 159:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 160:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /**
 161:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * @brief This function handles Debug monitor.
 162:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   */
 163:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** void DebugMon_Handler(void)
 164:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** {
 237              		.loc 3 164 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 165:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 166:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 167:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 168:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 169:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 170:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 171:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** }
 242              		.loc 3 171 0
 243 0000 7047     		bx	lr
 244              		.cfi_endproc
 245              	.LFE357:
 247              		.section	.text.PendSV_Handler,"ax",%progbits
 248              		.align	1
 249              		.global	PendSV_Handler
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	PendSV_Handler:
 256              	.LFB358:
 172:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 173:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** /**
 174:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   * @brief This function handles Pendable request for system service.
 175:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   */
 176:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** void PendSV_Handler(void)
 177:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** {
 257              		.loc 3 177 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 178:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 179:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 180:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 181:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 182:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** 
 183:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 184:../system/src/cmsis/stm32l4xx/stm32l4xx_it.c **** }
 262              		.loc 3 184 0
 263 0000 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE358:
 267              		.text
 268              	.Letext0:
 269              		.file 4 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 270              		.file 5 "../system/include/aprs/cfifo.h"
 271              		.file 6 "../system/include/aprs/afsk.h"
 272              		.file 7 "../system/include/aprs/ax25.h"
 273              		.file 8 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 274              		.file 9 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 275              		.file 10 "../system/include/drivers/serial.h"
 276              		.file 11 "../include/config_data.h"
 277              		.file 12 "../include/main.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_it.c
     /tmp/ccu64YCp.s:18     .text.__NVIC_SystemReset:0000000000000000 $t
     /tmp/ccu64YCp.s:24     .text.__NVIC_SystemReset:0000000000000000 __NVIC_SystemReset
     /tmp/ccu64YCp.s:76     .text.__NVIC_SystemReset:000000000000001c $d
     /tmp/ccu64YCp.s:82     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccu64YCp.s:89     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccu64YCp.s:108    .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccu64YCp.s:115    .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccu64YCp.s:133    .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccu64YCp.s:140    .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccu64YCp.s:158    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccu64YCp.s:165    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccu64YCp.s:183    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccu64YCp.s:190    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccu64YCp.s:208    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccu64YCp.s:215    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccu64YCp.s:228    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccu64YCp.s:235    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccu64YCp.s:248    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccu64YCp.s:255    .text.PendSV_Handler:0000000000000000 PendSV_Handler
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.macros.h.2.7a7a5ac48d4160b7481c806e80b68442
                           .group:0000000000000000 wm4.config.h.2.f5e96167cb26b0ce97c5e7513a95bc8b
                           .group:0000000000000000 wm4.afsk.h.17.cf8f922069680e152e1eddb76cd4cc82
                           .group:0000000000000000 wm4.ax25.h.18.077e42a4af9016476e34900472a8fe18
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.b6144e50d34fc998dd4c2cfb6387cf91
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32l4xx_ll_usart.h.22.ec2beebcd146668c5b35749264d7b58a
                           .group:0000000000000000 wm4.serial.h.14.12640f911db3fed3671ed7e729a57e3f
                           .group:0000000000000000 wm4.config_data.h.9.cbb5077079a900a357fa92ca07074f04
                           .group:0000000000000000 wm4.main.h.8.bc9cddc046c84d80bc9382d177e590b0

NO UNDEFINED SYMBOLS
