   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"_syscalls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.__initialize_args,"ax",%progbits
  18              		.align	1
  19              		.weak	__initialize_args
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	__initialize_args:
  26              	.LFB16:
  27              		.file 1 "../system/src/newlib/_syscalls.c"
   1:../system/src/newlib/_syscalls.c **** //
   2:../system/src/newlib/_syscalls.c **** // This file is part of the ÂµOS++ III distribution.
   3:../system/src/newlib/_syscalls.c **** // Parts of this file are from the newlib sources, issued under GPL.
   4:../system/src/newlib/_syscalls.c **** // Copyright (c) 2014 Liviu Ionescu
   5:../system/src/newlib/_syscalls.c **** //
   6:../system/src/newlib/_syscalls.c **** 
   7:../system/src/newlib/_syscalls.c **** // ----------------------------------------------------------------------------
   8:../system/src/newlib/_syscalls.c **** 
   9:../system/src/newlib/_syscalls.c **** int errno;
  10:../system/src/newlib/_syscalls.c **** void *__dso_handle __attribute__ ((weak));
  11:../system/src/newlib/_syscalls.c **** 
  12:../system/src/newlib/_syscalls.c **** // ----------------------------------------------------------------------------
  13:../system/src/newlib/_syscalls.c **** 
  14:../system/src/newlib/_syscalls.c **** #if !defined(OS_USE_SEMIHOSTING)
  15:../system/src/newlib/_syscalls.c **** 
  16:../system/src/newlib/_syscalls.c **** #include <_ansi.h>
  17:../system/src/newlib/_syscalls.c **** #include <_syslist.h>
  18:../system/src/newlib/_syscalls.c **** #include <errno.h>
  19:../system/src/newlib/_syscalls.c **** //#include <sys/types.h>
  20:../system/src/newlib/_syscalls.c **** #include <sys/stat.h>
  21:../system/src/newlib/_syscalls.c **** #include <sys/time.h>
  22:../system/src/newlib/_syscalls.c **** #include <sys/times.h>
  23:../system/src/newlib/_syscalls.c **** #include <limits.h>
  24:../system/src/newlib/_syscalls.c **** #include <signal.h>
  25:../system/src/newlib/_syscalls.c **** 
  26:../system/src/newlib/_syscalls.c **** void
  27:../system/src/newlib/_syscalls.c **** __initialize_args(int* p_argc, char*** p_argv);
  28:../system/src/newlib/_syscalls.c **** 
  29:../system/src/newlib/_syscalls.c **** // This is the standard default implementation for the routine to
  30:../system/src/newlib/_syscalls.c **** // process args. It returns a single empty arg.
  31:../system/src/newlib/_syscalls.c **** // For semihosting applications, this is redefined to get the real
  32:../system/src/newlib/_syscalls.c **** // args from the debugger. You can also use it if you decide to keep
  33:../system/src/newlib/_syscalls.c **** // some args in a non-volatile memory.
  34:../system/src/newlib/_syscalls.c **** 
  35:../system/src/newlib/_syscalls.c **** void __attribute__((weak))
  36:../system/src/newlib/_syscalls.c **** __initialize_args(int* p_argc, char*** p_argv)
  37:../system/src/newlib/_syscalls.c **** {
  28              		.loc 1 37 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  38:../system/src/newlib/_syscalls.c ****   // By the time we reach this, the data and bss should have been initialised.
  39:../system/src/newlib/_syscalls.c **** 
  40:../system/src/newlib/_syscalls.c ****   // The strings pointed to by the argv array shall be modifiable by the
  41:../system/src/newlib/_syscalls.c ****   // program, and retain their last-stored values between program startup
  42:../system/src/newlib/_syscalls.c ****   // and program termination. (static, no const)
  43:../system/src/newlib/_syscalls.c ****   static char name[] = "";
  44:../system/src/newlib/_syscalls.c **** 
  45:../system/src/newlib/_syscalls.c ****   // The string pointed to by argv[0] represents the program name;
  46:../system/src/newlib/_syscalls.c ****   // argv[0][0] shall be the null character if the program name is not
  47:../system/src/newlib/_syscalls.c ****   // available from the host environment. argv[argc] shall be a null pointer.
  48:../system/src/newlib/_syscalls.c ****   // (static, no const)
  49:../system/src/newlib/_syscalls.c ****   static char* argv[2] =
  50:../system/src/newlib/_syscalls.c ****     { name, NULL };
  51:../system/src/newlib/_syscalls.c **** 
  52:../system/src/newlib/_syscalls.c ****   *p_argc = 1;
  34              		.loc 1 52 0
  35 0000 0123     		movs	r3, #1
  36 0002 0360     		str	r3, [r0]
  53:../system/src/newlib/_syscalls.c ****   *p_argv = &argv[0];
  37              		.loc 1 53 0
  38 0004 014B     		ldr	r3, .L2
  39 0006 0B60     		str	r3, [r1]
  54:../system/src/newlib/_syscalls.c ****   return;
  55:../system/src/newlib/_syscalls.c **** }
  40              		.loc 1 55 0
  41 0008 7047     		bx	lr
  42              	.L3:
  43 000a 00BF     		.align	2
  44              	.L2:
  45 000c 00000000 		.word	.LANCHOR0
  46              		.cfi_endproc
  47              	.LFE16:
  49              		.section	.text.raise,"ax",%progbits
  50              		.align	1
  51              		.global	raise
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv4-sp-d16
  57              	raise:
  58              	.LFB17:
  56:../system/src/newlib/_syscalls.c **** 
  57:../system/src/newlib/_syscalls.c **** // These functions are defined here to avoid linker errors in freestanding
  58:../system/src/newlib/_syscalls.c **** // applications. They might be called in some error cases from library
  59:../system/src/newlib/_syscalls.c **** // code.
  60:../system/src/newlib/_syscalls.c **** //
  61:../system/src/newlib/_syscalls.c **** // If you detect other functions to be needed, just let us know
  62:../system/src/newlib/_syscalls.c **** // and we'll add them.
  63:../system/src/newlib/_syscalls.c **** 
  64:../system/src/newlib/_syscalls.c **** int
  65:../system/src/newlib/_syscalls.c **** raise(int sig __attribute__((unused)))
  66:../system/src/newlib/_syscalls.c **** {
  59              		.loc 1 66 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              	.LVL1:
  64 0000 08B5     		push	{r3, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 3, -8
  67              		.cfi_offset 14, -4
  67:../system/src/newlib/_syscalls.c ****   errno = ENOSYS;
  68              		.loc 1 67 0
  69 0002 FFF7FEFF 		bl	__errno
  70              	.LVL2:
  71 0006 5823     		movs	r3, #88
  72 0008 0360     		str	r3, [r0]
  68:../system/src/newlib/_syscalls.c ****   return -1;
  69:../system/src/newlib/_syscalls.c **** }
  73              		.loc 1 69 0
  74 000a 4FF0FF30 		mov	r0, #-1
  75 000e 08BD     		pop	{r3, pc}
  76              		.cfi_endproc
  77              	.LFE17:
  79              		.section	.text.kill,"ax",%progbits
  80              		.align	1
  81              		.global	kill
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	kill:
  88              	.LFB18:
  70:../system/src/newlib/_syscalls.c **** 
  71:../system/src/newlib/_syscalls.c **** int
  72:../system/src/newlib/_syscalls.c **** kill(pid_t pid, int sig);
  73:../system/src/newlib/_syscalls.c **** 
  74:../system/src/newlib/_syscalls.c **** int
  75:../system/src/newlib/_syscalls.c **** kill(pid_t pid __attribute__((unused)), int sig __attribute__((unused)))
  76:../system/src/newlib/_syscalls.c **** {
  89              		.loc 1 76 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL3:
  94 0000 08B5     		push	{r3, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 3, -8
  97              		.cfi_offset 14, -4
  77:../system/src/newlib/_syscalls.c ****   errno = ENOSYS;
  98              		.loc 1 77 0
  99 0002 FFF7FEFF 		bl	__errno
 100              	.LVL4:
 101 0006 5823     		movs	r3, #88
 102 0008 0360     		str	r3, [r0]
  78:../system/src/newlib/_syscalls.c ****   return -1;
  79:../system/src/newlib/_syscalls.c **** }
 103              		.loc 1 79 0
 104 000a 4FF0FF30 		mov	r0, #-1
 105 000e 08BD     		pop	{r3, pc}
 106              		.cfi_endproc
 107              	.LFE18:
 109              		.weak	__dso_handle
 110              		.comm	errno,4,4
 111              		.section	.bss.__dso_handle,"aw",%nobits
 112              		.align	2
 115              	__dso_handle:
 116 0000 00000000 		.space	4
 117              		.section	.bss.name.5584,"aw",%nobits
 118              		.align	2
 121              	name.5584:
 122 0000 00       		.space	1
 123              		.section	.data.argv.5585,"aw",%progbits
 124              		.align	2
 125              		.set	.LANCHOR0,. + 0
 128              	argv.5585:
 129 0000 00000000 		.word	name.5584
 130 0004 00000000 		.word	0
 131              		.text
 132              	.Letext0:
 133              		.file 2 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 134              		.file 3 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 135              		.file 4 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 136              		.file 5 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 137              		.file 6 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/errno.h"
 138              		.file 7 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/types.h"
 139              		.file 8 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/time.h"
 140              		.file 9 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/signal.h"
 141              		.file 10 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/signal.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 _syscalls.c
     /tmp/ccd8D4wP.s:18     .text.__initialize_args:0000000000000000 $t
     /tmp/ccd8D4wP.s:25     .text.__initialize_args:0000000000000000 __initialize_args
     /tmp/ccd8D4wP.s:45     .text.__initialize_args:000000000000000c $d
     /tmp/ccd8D4wP.s:50     .text.raise:0000000000000000 $t
     /tmp/ccd8D4wP.s:57     .text.raise:0000000000000000 raise
     /tmp/ccd8D4wP.s:80     .text.kill:0000000000000000 $t
     /tmp/ccd8D4wP.s:87     .text.kill:0000000000000000 kill
     /tmp/ccd8D4wP.s:115    .bss.__dso_handle:0000000000000000 __dso_handle
                            *COM*:0000000000000004 errno
     /tmp/ccd8D4wP.s:112    .bss.__dso_handle:0000000000000000 $d
     /tmp/ccd8D4wP.s:118    .bss.name.5584:0000000000000000 $d
     /tmp/ccd8D4wP.s:121    .bss.name.5584:0000000000000000 name.5584
     /tmp/ccd8D4wP.s:124    .data.argv.5585:0000000000000000 $d
     /tmp/ccd8D4wP.s:128    .data.argv.5585:0000000000000000 argv.5585
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4._syslist.h.4.cca0a711aaf6863107c5beb8fad7c2bf
                           .group:0000000000000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.errno.h.14.6a5939d3ae7434a1e97991a97123b12d
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.time.h.14.849270cc7997ccc4e05edd146e568a9f
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.time.h.2.4581ce0ffb6627cfc02162c94bf846c9
                           .group:0000000000000000 wm4.time.h.25.0e6a0fdbc9955f5707ed54246ed2e089
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.time.h.162.117026b75cfaa0f83901a5f301a8b4f7
                           .group:0000000000000000 wm4.stat.h.71.d65ac61ff88c651e198008cfb38bda9c
                           .group:0000000000000000 wm4.time.h.38.20beed93add9f31905d3a626e4660be9
                           .group:0000000000000000 wm4.limits.h.2.a76e572559edc4d4305b1cf624158ea8
                           .group:0000000000000000 wm4.limits.h.60.b4bc9eda7e37043243f7148a2c6d0306
                           .group:0000000000000000 wm4.signal.h.4.e9530ce8bb24acd4cee473059cec00b5
                           .group:0000000000000000 wm4.signal.h.18.14c8d0c03fc1e06775633fad7399cfc7

UNDEFINED SYMBOLS
__errno
