   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"analog_anemometer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.analog_anemometer_init,"ax",%progbits
  18              		.align	1
  19              		.global	analog_anemometer_init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	analog_anemometer_init:
  26              	.LFB702:
  27              		.file 1 "../system/src/drivers/analog_anemometer.c"
   1:../system/src/drivers/analog_anemometer.c **** /*
   2:../system/src/drivers/analog_anemometer.c ****  * analog_anemometer.c
   3:../system/src/drivers/analog_anemometer.c ****  *
   4:../system/src/drivers/analog_anemometer.c ****  *  Created on: 25.12.2019
   5:../system/src/drivers/analog_anemometer.c ****  *      Author: mateusz
   6:../system/src/drivers/analog_anemometer.c ****  */
   7:../system/src/drivers/analog_anemometer.c **** 
   8:../system/src/drivers/analog_anemometer.c **** #include "station_config.h"
   9:../system/src/drivers/analog_anemometer.c **** #include "station_config_target_hw.h"
  10:../system/src/drivers/analog_anemometer.c **** 
  11:../system/src/drivers/analog_anemometer.c **** #if defined(_ANEMOMETER_ANALOGUE_SPARKFUN) || defined(_ANEMOMETER_ANALOGUE)
  12:../system/src/drivers/analog_anemometer.c **** 
  13:../system/src/drivers/analog_anemometer.c **** #define WIND_DEBUG
  14:../system/src/drivers/analog_anemometer.c **** 
  15:../system/src/drivers/analog_anemometer.c **** #include "drivers/analog_anemometer.h"
  16:../system/src/drivers/analog_anemometer.c **** 
  17:../system/src/drivers/analog_anemometer.c **** #include <stdint.h>
  18:../system/src/drivers/analog_anemometer.c **** #include <string.h>
  19:../system/src/drivers/analog_anemometer.c **** #include "drivers/dma_helper_functions.h"
  20:../system/src/drivers/analog_anemometer.c **** #include "rte_wx.h"
  21:../system/src/drivers/analog_anemometer.c **** #include "main.h"
  22:../system/src/drivers/analog_anemometer.c **** #include "wx_handler.h"
  23:../system/src/drivers/analog_anemometer.c **** #include "LedConfig.h"
  24:../system/src/drivers/analog_anemometer.c **** 
  25:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
  26:../system/src/drivers/analog_anemometer.c **** #include <stm32f10x_tim.h>
  27:../system/src/drivers/analog_anemometer.c **** #include <stm32f10x_dma.h>
  28:../system/src/drivers/analog_anemometer.c **** #include <drivers/gpio_conf_stm32f1x.h>
  29:../system/src/drivers/analog_anemometer.c **** #endif
  30:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
  31:../system/src/drivers/analog_anemometer.c **** #include <stm32l4xx.h>
  32:../system/src/drivers/analog_anemometer.c **** #include <stm32l4xx_ll_tim.h>
  33:../system/src/drivers/analog_anemometer.c **** #include <stm32l4xx_ll_dma.h>
  34:../system/src/drivers/analog_anemometer.c **** #include <stm32l4xx_ll_gpio.h>
  35:../system/src/drivers/analog_anemometer.c **** #endif
  36:../system/src/drivers/analog_anemometer.c **** 
  37:../system/src/drivers/analog_anemometer.c **** #define MINUM_PULSE_LN 15
  38:../system/src/drivers/analog_anemometer.c **** #define MAXIMUM_PULSE_SLEW_RATE 4000
  39:../system/src/drivers/analog_anemometer.c **** 
  40:../system/src/drivers/analog_anemometer.c **** #define UF_MAXIMUM_FREQUENCY 8280//32767
  41:../system/src/drivers/analog_anemometer.c **** #define UPSCALED_MAX_ANGLE 		(360 * 100)
  42:../system/src/drivers/analog_anemometer.c **** #define UPSCALED_MAX_ANGLE_2 	(360 * 10)
  43:../system/src/drivers/analog_anemometer.c **** 
  44:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
  45:../system/src/drivers/analog_anemometer.c **** 	DMA_InitTypeDef DMA_InitStruct;
  46:../system/src/drivers/analog_anemometer.c **** #endif
  47:../system/src/drivers/analog_anemometer.c **** 
  48:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
  49:../system/src/drivers/analog_anemometer.c **** 	LL_DMA_InitTypeDef DMA_InitStruct;
  50:../system/src/drivers/analog_anemometer.c **** #endif
  51:../system/src/drivers/analog_anemometer.c **** 
  52:../system/src/drivers/analog_anemometer.c **** // an array where DMA will store values of the timer latched by compare-capture input
  53:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_windspeed_pulses_time[ANALOG_ANEMOMETER_SPEED_PULSES_N];
  54:../system/src/drivers/analog_anemometer.c **** 
  55:../system/src/drivers/analog_anemometer.c **** // an array with calculated times between pulses
  56:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_time_between_pulses[ANALOG_ANEMOMETER_SPEED_PULSES_N];
  57:../system/src/drivers/analog_anemometer.c **** 
  58:../system/src/drivers/analog_anemometer.c **** #ifdef WIND_DEBUG
  59:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_direction_timer_values[ANALOG_ANEMOMETER_SPEED_PULSES_N];
  60:../system/src/drivers/analog_anemometer.c **** uint8_t analog_anemometer_direction_timer_values_it = 0;
  61:../system/src/drivers/analog_anemometer.c **** #endif
  62:../system/src/drivers/analog_anemometer.c **** 
  63:../system/src/drivers/analog_anemometer.c **** // a static copy of impulse-meters/second constant. This value expresses
  64:../system/src/drivers/analog_anemometer.c **** // how many pulses in 10 seconds measurement time gives 1 m/s.
  65:../system/src/drivers/analog_anemometer.c **** // Value of ten means that if within 10 second period 10 pulses were detected it gives
  66:../system/src/drivers/analog_anemometer.c **** // 1m/s
  67:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_pulses_per_m_s_constant = 0;
  68:../system/src/drivers/analog_anemometer.c **** 
  69:../system/src/drivers/analog_anemometer.c **** // a flag which will be raised if not enought pulses has been copied by a DMA before a timer overfl
  70:../system/src/drivers/analog_anemometer.c **** uint8_t analog_anemometer_timer_has_been_fired = 0;
  71:../system/src/drivers/analog_anemometer.c **** 
  72:../system/src/drivers/analog_anemometer.c **** uint8_t analog_anemometer_slew_limit_fired = 0;
  73:../system/src/drivers/analog_anemometer.c **** 
  74:../system/src/drivers/analog_anemometer.c **** uint8_t analog_anemometer_deboucing_fired = 0;
  75:../system/src/drivers/analog_anemometer.c **** 
  76:../system/src/drivers/analog_anemometer.c **** uint8_t analog_anemometer_direction_doesnt_work = 0;
  77:../system/src/drivers/analog_anemometer.c **** 
  78:../system/src/drivers/analog_anemometer.c **** // direction recalculated from v/f
  79:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_direction = 0;
  80:../system/src/drivers/analog_anemometer.c **** 
  81:../system/src/drivers/analog_anemometer.c **** // scaling value which sets the upper value in percents of the frequency in relation to 32767 Hz
  82:../system/src/drivers/analog_anemometer.c **** // translating this to a voltage at an input of the U/f converter this sets a maximum ratio of the
  83:../system/src/drivers/analog_anemometer.c **** // potentiometer inside the direction
  84:../system/src/drivers/analog_anemometer.c **** int16_t analog_anemometer_b_coeff = 100;
  85:../system/src/drivers/analog_anemometer.c **** 
  86:../system/src/drivers/analog_anemometer.c **** int16_t analog_anemometer_a_coeff = 10;
  87:../system/src/drivers/analog_anemometer.c **** 
  88:../system/src/drivers/analog_anemometer.c **** // this controls if the direction increases (1) od decreaes (-1) with the frequency
  89:../system/src/drivers/analog_anemometer.c **** int8_t analog_anemometer_direction_pol = 1;
  90:../system/src/drivers/analog_anemometer.c **** 
  91:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_last_direction_cnt = 0;
  92:../system/src/drivers/analog_anemometer.c **** 
  93:../system/src/drivers/analog_anemometer.c **** #ifdef _ANEMOMETER_ANALOGUE
  94:../system/src/drivers/analog_anemometer.c **** int8_t  analog_anemometer_direction_mode = DIRECTION_REGULAR;
  95:../system/src/drivers/analog_anemometer.c **** #endif
  96:../system/src/drivers/analog_anemometer.c **** 
  97:../system/src/drivers/analog_anemometer.c **** #ifdef _ANEMOMETER_ANALOGUE_SPARKFUN
  98:../system/src/drivers/analog_anemometer.c **** int8_t  analog_anemometer_direction_mode = DIRECTION_SPARKFUN;
  99:../system/src/drivers/analog_anemometer.c **** #endif
 100:../system/src/drivers/analog_anemometer.c **** 
 101:../system/src/drivers/analog_anemometer.c **** // this array consists voltage ranges to calculate
 102:../system/src/drivers/analog_anemometer.c **** const int16_t analog_anemometer_direction_sparkfun_ranges[16][3] = {
 103:../system/src/drivers/analog_anemometer.c **** 		{4018, 4112, 112},
 104:../system/src/drivers/analog_anemometer.c **** 		{4112, 4182, 67},
 105:../system/src/drivers/analog_anemometer.c **** 		{4182, 4296, 90},
 106:../system/src/drivers/analog_anemometer.c **** 		{4296, 4537, 157},
 107:../system/src/drivers/analog_anemometer.c **** 		{4537, 4840, 135},
 108:../system/src/drivers/analog_anemometer.c **** 		{4840, 5107, 202},
 109:../system/src/drivers/analog_anemometer.c **** 		{5107, 5529, 180},
 110:../system/src/drivers/analog_anemometer.c **** 		{5529, 5982, 22},
 111:../system/src/drivers/analog_anemometer.c **** 		{5982, 6490, 45},
 112:../system/src/drivers/analog_anemometer.c **** 		{6490, 6935, 247},
 113:../system/src/drivers/analog_anemometer.c **** 		{6935, 7201, 225},
 114:../system/src/drivers/analog_anemometer.c **** 		{7201, 7607, 337},
 115:../system/src/drivers/analog_anemometer.c **** 		{7607, 7932, 0},
 116:../system/src/drivers/analog_anemometer.c **** 		{7932, 8349, 292},
 117:../system/src/drivers/analog_anemometer.c **** 		{8349, 8746, 270},
 118:../system/src/drivers/analog_anemometer.c **** 		{8746, 9276, 315}
 119:../system/src/drivers/analog_anemometer.c **** };
 120:../system/src/drivers/analog_anemometer.c **** 
 121:../system/src/drivers/analog_anemometer.c **** void analog_anemometer_init(uint16_t pulses_per_meter_second, uint8_t anemometer_lower_boundary,
 122:../system/src/drivers/analog_anemometer.c **** 		uint8_t anemometer_upper_boundary, uint8_t direction_polarity) {
  28              		.loc 1 122 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 64
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 90B0     		sub	sp, sp, #64
  40              		.cfi_def_cfa_offset 80
 123:../system/src/drivers/analog_anemometer.c **** 
 124:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 125:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;
 126:../system/src/drivers/analog_anemometer.c **** #endif
 127:../system/src/drivers/analog_anemometer.c **** 
 128:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 129:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_InitTypeDef TIM_InitTypeDef;
 130:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_IC_InitTypeDef TIM_IC_InitTypeDef;
 131:../system/src/drivers/analog_anemometer.c **** 	LL_GPIO_InitTypeDef GPIO_InitTypeDef;
 132:../system/src/drivers/analog_anemometer.c **** #endif
 133:../system/src/drivers/analog_anemometer.c **** 
 134:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_pulses_per_m_s_constant = pulses_per_meter_second;
  41              		.loc 1 134 0
  42 0004 4B4C     		ldr	r4, .L3
  43 0006 2080     		strh	r0, [r4]	@ movhi
 135:../system/src/drivers/analog_anemometer.c **** 
 136:../system/src/drivers/analog_anemometer.c **** 	// Solving the linear equation to find 'a' and 'b' coefficient needed to rescale the wind directio
 137:../system/src/drivers/analog_anemometer.c **** 	// from raw value calculated from an input frequency, to physical value which includes the lower a
 138:../system/src/drivers/analog_anemometer.c **** 	// the higher value of anemometer resistance / frequency
 139:../system/src/drivers/analog_anemometer.c **** 	// * 100
 140:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_a_coeff = ((10000 * -UPSCALED_MAX_ANGLE) / (UPSCALED_MAX_ANGLE * anemometer_lowe
  44              		.loc 1 140 0
  45 0008 4B4C     		ldr	r4, .L3+4
  46 000a 04FB02F4 		mul	r4, r4, r2
  47 000e 48F6A040 		movw	r0, #36000
  48              	.LVL1:
  49 0012 00FB0144 		mla	r4, r0, r1, r4
  50 0016 4948     		ldr	r0, .L3+8
  51 0018 90FBF4F0 		sdiv	r0, r0, r4
  52 001c 484C     		ldr	r4, .L3+12
  53 001e 2080     		strh	r0, [r4]	@ movhi
 141:../system/src/drivers/analog_anemometer.c **** 	// * 10
 142:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_b_coeff = (UPSCALED_MAX_ANGLE_2 * anemometer_lower_boundary * UPSCALED_MAX_ANGLE
  54              		.loc 1 142 0
  55 0020 4848     		ldr	r0, .L3+16
  56 0022 00FB01F0 		mul	r0, r0, r1
  57 0026 484C     		ldr	r4, .L3+20
  58 0028 04FB02F2 		mul	r2, r4, r2
  59              	.LVL2:
  60 002c 4FF46164 		mov	r4, #3600
  61 0030 04FB0121 		mla	r1, r4, r1, r2
  62              	.LVL3:
  63 0034 90FBF1F1 		sdiv	r1, r0, r1
  64 0038 444A     		ldr	r2, .L3+24
  65 003a 1180     		strh	r1, [r2]	@ movhi
 143:../system/src/drivers/analog_anemometer.c **** 
 144:../system/src/drivers/analog_anemometer.c **** 	// signal polariy
 145:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_direction_pol = direction_polarity;
  66              		.loc 1 145 0
  67 003c 444A     		ldr	r2, .L3+28
  68 003e 1370     		strb	r3, [r2]
 146:../system/src/drivers/analog_anemometer.c **** 
 147:../system/src/drivers/analog_anemometer.c **** 	// initializing arrays;
 148:../system/src/drivers/analog_anemometer.c **** 	memset(analog_anemometer_windspeed_pulses_time, 0x00, ANALOG_ANEMOMETER_SPEED_PULSES_N);
  69              		.loc 1 148 0
  70 0040 444E     		ldr	r6, .L3+32
  71 0042 0A22     		movs	r2, #10
  72 0044 0021     		movs	r1, #0
  73 0046 3046     		mov	r0, r6
  74 0048 FFF7FEFF 		bl	memset
  75              	.LVL4:
 149:../system/src/drivers/analog_anemometer.c **** 	memset(analog_anemometer_time_between_pulses, 0x00, ANALOG_ANEMOMETER_SPEED_PULSES_N);
  76              		.loc 1 149 0
  77 004c 0A22     		movs	r2, #10
  78 004e 0021     		movs	r1, #0
  79 0050 4148     		ldr	r0, .L3+36
  80 0052 FFF7FEFF 		bl	memset
  81              	.LVL5:
 150:../system/src/drivers/analog_anemometer.c **** #ifdef WIND_DEBUG
 151:../system/src/drivers/analog_anemometer.c **** 	memset(analog_anemometer_direction_timer_values, 0x00, ANALOG_ANEMOMETER_SPEED_PULSES_N);
  82              		.loc 1 151 0
  83 0056 0A22     		movs	r2, #10
  84 0058 0021     		movs	r1, #0
  85 005a 4048     		ldr	r0, .L3+40
  86 005c FFF7FEFF 		bl	memset
  87              	.LVL6:
 152:../system/src/drivers/analog_anemometer.c **** #endif
 153:../system/src/drivers/analog_anemometer.c **** 
 154:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 155:../system/src/drivers/analog_anemometer.c **** 	// enabling the clock for TIM17
 156:../system/src/drivers/analog_anemometer.c **** 	RCC->APB2ENR |= RCC_APB2ENR_TIM17EN;
 157:../system/src/drivers/analog_anemometer.c **** 	RCC->AHBENR |= RCC_AHBENR_DMA1EN;
 158:../system/src/drivers/analog_anemometer.c **** 
 159:../system/src/drivers/analog_anemometer.c **** 	// Configuring a pin where pulses from anemometer are connected
 160:../system/src/drivers/analog_anemometer.c **** 	Configure_GPIO(GPIOB,9,FLOATING_INPUT);
 161:../system/src/drivers/analog_anemometer.c **** 
 162:../system/src/drivers/analog_anemometer.c **** 	// resetting the timer to defaults
 163:../system/src/drivers/analog_anemometer.c **** 	TIM_DeInit(TIM17);
 164:../system/src/drivers/analog_anemometer.c **** 
 165:../system/src/drivers/analog_anemometer.c **** 	// initializing structure with default values
 166:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseStructInit(&TIM_TimeBaseInitStruct);
 167:../system/src/drivers/analog_anemometer.c **** 
 168:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInitStruct.TIM_Prescaler = 23999;					// PSC 23999
 169:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInitStruct.TIM_Period = 60000;					// ARR
 170:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;
 171:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;
 172:../system/src/drivers/analog_anemometer.c **** 
 173:../system/src/drivers/analog_anemometer.c **** 	// Configuring basics of thr timer
 174:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInit(TIM17, &TIM_TimeBaseInitStruct);
 175:../system/src/drivers/analog_anemometer.c **** 
 176:../system/src/drivers/analog_anemometer.c **** 	// Enabling capture input
 177:../system/src/drivers/analog_anemometer.c **** 	TIM_TIxExternalClockConfig(TIM17, TIM_TIxExternalCLK1Source_TI1, TIM_ICPolarity_Rising, 0);
 178:../system/src/drivers/analog_anemometer.c **** 
 179:../system/src/drivers/analog_anemometer.c **** 	// Starting timer
 180:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM17, ENABLE);
 181:../system/src/drivers/analog_anemometer.c **** 
 182:../system/src/drivers/analog_anemometer.c **** 	// Enabling a DMA request signal from first capture-compare channel
 183:../system/src/drivers/analog_anemometer.c **** 	TIM_DMACmd(TIM17, TIM_DMA_CC1, ENABLE);
 184:../system/src/drivers/analog_anemometer.c **** 
 185:../system/src/drivers/analog_anemometer.c **** 	// Enabling an interrupt
 186:../system/src/drivers/analog_anemometer.c **** 	TIM_ITConfig(TIM17, TIM_IT_Update, ENABLE);
 187:../system/src/drivers/analog_anemometer.c **** 	NVIC_EnableIRQ( TIM1_TRG_COM_TIM17_IRQn );
 188:../system/src/drivers/analog_anemometer.c **** 
 189:../system/src/drivers/analog_anemometer.c **** 	// Initializing the struct with DMA configuration
 190:../system/src/drivers/analog_anemometer.c **** 	DMA_StructInit(&DMA_InitStruct);
 191:../system/src/drivers/analog_anemometer.c **** 
 192:../system/src/drivers/analog_anemometer.c **** 	// De initializing DMA1
 193:../system/src/drivers/analog_anemometer.c **** 	DMA_DeInit(DMA1_Channel7);
 194:../system/src/drivers/analog_anemometer.c **** 
 195:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_BufferSize = ANALOG_ANEMOMETER_SPEED_PULSES_N;
 196:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_DIR = DMA_DIR_PeripheralSRC;
 197:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_M2M = DMA_M2M_Disable;
 198:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_MemoryBaseAddr = (uint32_t)analog_anemometer_windspeed_pulses_time;
 199:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
 200:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_MemoryInc = DMA_MemoryInc_Enable;
 201:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_PeripheralBaseAddr = (uint32_t)&TIM17->CCR1;
 202:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
 203:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 204:../system/src/drivers/analog_anemometer.c **** 
 205:../system/src/drivers/analog_anemometer.c **** 	dma_helper_start_ch7(&DMA_InitStruct);
 206:../system/src/drivers/analog_anemometer.c **** 
 207:../system/src/drivers/analog_anemometer.c **** 	NVIC_EnableIRQ( DMA1_Channel7_IRQn );
 208:../system/src/drivers/analog_anemometer.c **** 
 209:../system/src/drivers/analog_anemometer.c **** 	// Initializing direction
 210:../system/src/drivers/analog_anemometer.c **** 
 211:../system/src/drivers/analog_anemometer.c **** 	// Configuring PD2 as an input for TIM3_ETR
 212:../system/src/drivers/analog_anemometer.c **** 	Configure_GPIO(GPIOD,2,FLOATING_INPUT);
 213:../system/src/drivers/analog_anemometer.c **** 
 214:../system/src/drivers/analog_anemometer.c **** 	// initializing structure with default values
 215:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseStructInit(&TIM_TimeBaseInitStruct);
 216:../system/src/drivers/analog_anemometer.c **** 
 217:../system/src/drivers/analog_anemometer.c **** 	// using default values of InitStruct
 218:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseInitStruct);
 219:../system/src/drivers/analog_anemometer.c **** 
 220:../system/src/drivers/analog_anemometer.c **** 	// enabling an external trigger to the TIM3
 221:../system/src/drivers/analog_anemometer.c **** 	TIM_ETRClockMode2Config(TIM3, TIM_ExtTRGPSC_OFF, TIM_ExtTRGPolarity_Inverted, 0);
 222:../system/src/drivers/analog_anemometer.c **** 
 223:../system/src/drivers/analog_anemometer.c **** 	// Starting timer
 224:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM3, ENABLE);
 225:../system/src/drivers/analog_anemometer.c **** 
 226:../system/src/drivers/analog_anemometer.c **** 	// disable an interrupt from TIMER3
 227:../system/src/drivers/analog_anemometer.c **** 	NVIC_DisableIRQ(TIM3_IRQn);
 228:../system/src/drivers/analog_anemometer.c **** 
 229:../system/src/drivers/analog_anemometer.c **** #endif
 230:../system/src/drivers/analog_anemometer.c **** 
 231:../system/src/drivers/analog_anemometer.c **** 
 232:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 233:../system/src/drivers/analog_anemometer.c **** 	// set parameters for TIM4 used for windspeed
 234:../system/src/drivers/analog_anemometer.c **** 	TIM_InitTypeDef.Prescaler = 23999;
  88              		.loc 1 234 0
  89 0060 45F6BF53 		movw	r3, #23999
  90 0064 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 235:../system/src/drivers/analog_anemometer.c **** 	TIM_InitTypeDef.Autoreload = 60000;
  91              		.loc 1 235 0
  92 0068 4EF66023 		movw	r3, #60000
  93 006c 0D93     		str	r3, [sp, #52]
 236:../system/src/drivers/analog_anemometer.c **** 	TIM_InitTypeDef.CounterMode = LL_TIM_COUNTERMODE_UP;
  94              		.loc 1 236 0
  95 006e 0024     		movs	r4, #0
  96 0070 0C94     		str	r4, [sp, #48]
 237:../system/src/drivers/analog_anemometer.c **** 	TIM_InitTypeDef.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
  97              		.loc 1 237 0
  98 0072 0E94     		str	r4, [sp, #56]
 238:../system/src/drivers/analog_anemometer.c **** 	TIM_InitTypeDef.RepetitionCounter = 0;
  99              		.loc 1 238 0
 100 0074 0F94     		str	r4, [sp, #60]
 239:../system/src/drivers/analog_anemometer.c **** 
 240:../system/src/drivers/analog_anemometer.c **** 	// deinitialize TIM4 (windspeed)
 241:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_DeInit(TIM4);
 101              		.loc 1 241 0
 102 0076 3A4D     		ldr	r5, .L3+44
 103 0078 2846     		mov	r0, r5
 104 007a FFF7FEFF 		bl	LL_TIM_DeInit
 105              	.LVL7:
 242:../system/src/drivers/analog_anemometer.c **** 
 243:../system/src/drivers/analog_anemometer.c **** 	// initialize timer basics
 244:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_Init(TIM4, &TIM_InitTypeDef);
 106              		.loc 1 244 0
 107 007e 0BA9     		add	r1, sp, #44
 108 0080 2846     		mov	r0, r5
 109 0082 FFF7FEFF 		bl	LL_TIM_Init
 110              	.LVL8:
 245:../system/src/drivers/analog_anemometer.c **** 
 246:../system/src/drivers/analog_anemometer.c **** 	// set parameters for TIM4 capture/compare 3 mapped to TI4 (pin PB9)
 247:../system/src/drivers/analog_anemometer.c **** 	TIM_IC_InitTypeDef.ICFilter = LL_TIM_IC_FILTER_FDIV1;
 111              		.loc 1 247 0
 112 0086 0A94     		str	r4, [sp, #40]
 248:../system/src/drivers/analog_anemometer.c **** 	TIM_IC_InitTypeDef.ICPolarity = LL_TIM_IC_POLARITY_RISING;
 113              		.loc 1 248 0
 114 0088 0794     		str	r4, [sp, #28]
 249:../system/src/drivers/analog_anemometer.c **** 	TIM_IC_InitTypeDef.ICPrescaler = 0;
 115              		.loc 1 249 0
 116 008a 0994     		str	r4, [sp, #36]
 250:../system/src/drivers/analog_anemometer.c **** 	TIM_IC_InitTypeDef.ICActiveInput = LL_TIM_ACTIVEINPUT_INDIRECTTI;	// 10: CC3 channel is configured
 117              		.loc 1 250 0
 118 008c 4FF40033 		mov	r3, #131072
 119 0090 0893     		str	r3, [sp, #32]
 251:../system/src/drivers/analog_anemometer.c **** 
 252:../system/src/drivers/analog_anemometer.c **** 	// configure and activate fourth channel
 253:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_IC_Init(TIM4, LL_TIM_CHANNEL_CH3, &TIM_IC_InitTypeDef);
 120              		.loc 1 253 0
 121 0092 07AA     		add	r2, sp, #28
 122 0094 4FF48071 		mov	r1, #256
 123 0098 2846     		mov	r0, r5
 124 009a FFF7FEFF 		bl	LL_TIM_IC_Init
 125              	.LVL9:
 126              	.LBB54:
 127              	.LBB55:
 128              		.file 2 "../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h"
   1:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
   2:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   ******************************************************************************
   3:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @file    stm32l4xx_ll_tim.h
   4:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @author  MCD Application Team
   5:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   ******************************************************************************
   7:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @attention
   8:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
   9:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * All rights reserved.</center></h2>
  11:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
  12:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * the "License"; You may not use this file except in compliance with the
  14:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * License. You may obtain a copy of the License at:
  15:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
  17:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   ******************************************************************************
  18:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
  19:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
  20:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #ifndef __STM32L4xx_LL_TIM_H
  22:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define __STM32L4xx_LL_TIM_H
  23:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
  24:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #ifdef __cplusplus
  25:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** extern "C" {
  26:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif
  27:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
  28:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
  29:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #include "stm32l4xx.h"
  30:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
  31:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @addtogroup STM32L4xx_LL_Driver
  32:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
  33:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
  34:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
  35:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined (TIM1) || defined (TIM8) || defined (TIM2) || defined (TIM3) ||  defined (TIM4) || defi
  36:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
  37:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  38:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
  39:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
  40:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
  41:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  42:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  43:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  44:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
  45:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
  46:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  47:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
  48:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  49:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0x00U,   /* 1: TIMx_CH1N */
  50:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  51:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0x00U,   /* 3: TIMx_CH2N */
  52:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  53:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0x04U,   /* 5: TIMx_CH3N */
  54:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0x04U,   /* 6: TIMx_CH4  */
  55:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0x3CU,   /* 7: TIMx_CH5  */
  56:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0x3CU    /* 8: TIMx_CH6  */
  57:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** };
  58:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
  59:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  60:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
  61:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  62:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 1: - NA */
  63:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  64:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 3: - NA */
  65:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
  66:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 5: - NA */
  67:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   8U,            /* 6: OC4M, OC4FE, OC4PE */
  68:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 7: OC5M, OC5FE, OC5PE */
  69:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   8U             /* 8: OC6M, OC6FE, OC6PE */
  70:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** };
  71:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
  72:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  73:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
  74:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  75:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 1: - NA */
  76:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  77:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 3: - NA */
  78:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  79:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 5: - NA */
  80:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   8U,            /* 6: CC4S, IC4PSC, IC4F */
  81:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 7: - NA */
  82:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U             /* 8: - NA */
  83:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** };
  84:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
  85:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  86:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
  87:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 0: CC1P */
  88:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   2U,            /* 1: CC1NP */
  89:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   4U,            /* 2: CC2P */
  90:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   6U,            /* 3: CC2NP */
  91:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   8U,            /* 4: CC3P */
  92:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   10U,           /* 5: CC3NP */
  93:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   12U,           /* 6: CC4P */
  94:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   16U,           /* 7: CC5P */
  95:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   20U            /* 8: CC6P */
  96:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** };
  97:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
  98:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OISx[] =
  99:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
 100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   0U,            /* 0: OIS1 */
 101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   1U,            /* 1: OIS1N */
 102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   2U,            /* 2: OIS2 */
 103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   3U,            /* 3: OIS2N */
 104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   4U,            /* 4: OIS3 */
 105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   5U,            /* 5: OIS3N */
 106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   6U,            /* 6: OIS4 */
 107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   8U,            /* 7: OIS5 */
 108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   10U            /* 8: OIS6 */
 109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** };
 110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
 115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
 116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Defines used for the bit position in the register and perform offsets */
 120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM_POSITION_BRK_SOURCE            (POSITION_VAL(Source) & 0x1FUL)
 121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Generic bit definitions for TIMx_OR2 register */
 123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIMx_OR2_BKINP     TIM1_OR2_BKINP     /*!< BRK BKIN input polarity */
 124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIMx_OR2_ETRSEL    TIM1_OR2_ETRSEL    /*!< TIMx ETR source selection */
 125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Remap mask definitions */
 127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIMx_OR1_RMP_SHIFT 16U
 128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIMx_OR1_RMP_MASK  0x0000FFFFU
 129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined(ADC3)
 130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM1_OR1_RMP_MASK  ((TIM1_OR1_ETR_ADC1_RMP | TIM1_OR1_ETR_ADC3_RMP | TIM1_OR1_TI1_RMP) << T
 131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #else
 132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM1_OR1_RMP_MASK  ((TIM1_OR1_ETR_ADC1_RMP | TIM1_OR1_TI1_RMP) << TIMx_OR1_RMP_SHIFT)
 133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* ADC3 */
 134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM2_OR1_RMP_MASK  ((TIM2_OR1_TI4_RMP | TIM2_OR1_ETR1_RMP | TIM2_OR1_ITR1_RMP) << TIMx_OR1_
 135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM3_OR1_RMP_MASK  (TIM3_OR1_TI1_RMP << TIMx_OR1_RMP_SHIFT)
 136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined(ADC2) && defined(ADC3)
 137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM8_OR1_RMP_MASK  ((TIM8_OR1_ETR_ADC2_RMP | TIM8_OR1_ETR_ADC3_RMP | TIM8_OR1_TI1_RMP) << T
 138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #else
 139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM8_OR1_RMP_MASK  (TIM8_OR1_TI1_RMP << TIMx_OR1_RMP_SHIFT)
 140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* ADC2 & ADC3 */
 141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM15_OR1_RMP_MASK (TIM15_OR1_TI1_RMP << TIMx_OR1_RMP_SHIFT)
 142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM16_OR1_RMP_MASK (TIM16_OR1_TI1_RMP << TIMx_OR1_RMP_SHIFT)
 143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM17_OR1_RMP_MASK (TIM17_OR1_TI1_RMP << TIMx_OR1_RMP_SHIFT)
 144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Mask used to set the TDG[x:0] of the DTG bits of the TIMx_BDTR register */
 146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define DT_DELAY_1 ((uint8_t)0x7F)
 147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define DT_DELAY_2 ((uint8_t)0x3F)
 148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define DT_DELAY_3 ((uint8_t)0x1F)
 149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define DT_DELAY_4 ((uint8_t)0x1F)
 150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Mask used to set the DTG[7:5] bits of the DTG bits of the TIMx_BDTR register */
 152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define DT_RANGE_1 ((uint8_t)0x00)
 153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define DT_RANGE_2 ((uint8_t)0x80)
 154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define DT_RANGE_3 ((uint8_t)0xC0)
 155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define DT_RANGE_4 ((uint8_t)0xE0)
 156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** Legacy definitions for compatibility purpose
 158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** @cond 0
 159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined(DFSDM1_Channel0)
 161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIMx_OR2_BKDFBK0E   TIMx_OR2_BKDF1BK0E
 162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIMx_OR3_BK2DFBK1E  TIMx_OR3_BK2DF1BK1E
 163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* DFSDM1_Channel0 */
 164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** @endcond
 166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
 180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
 182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
 184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
 186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
 187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval none
 188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH1N) ? 1U :\
 192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2N) ? 3U :\
 194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U :\
 195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3N) ? 5U :\
 196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH4) ? 6U :\
 197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH5) ? 7U : 8U)
 198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @brief  Calculate the deadtime sampling period(in ps).
 200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz).
 201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval none
 206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define TIM_CALC_DTS(__TIMCLK__, __CKD__)                                                        \
 208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   (((__CKD__) == LL_TIM_CLOCKDIVISION_DIV1) ? ((uint64_t)1000000000000U/(__TIMCLK__))         : \
 209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****    ((__CKD__) == LL_TIM_CLOCKDIVISION_DIV2) ? ((uint64_t)1000000000000U/((__TIMCLK__) >> 1U)) : \
 210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****    ((uint64_t)1000000000000U/((__TIMCLK__) >> 2U)))
 211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** typedef struct
 226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
 227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
 229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t RepetitionCounter;  /*!< Specifies the repetition counter value. Each time the RCR downc
 250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    reaches zero, an update event is generated and counting restarts
 251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    from the RCR value (N).
 252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    This means in PWM mode that (N+1) corresponds to:
 253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       - the number of PWM periods in edge-aligned mode
 254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       - the number of half PWM period in center-aligned mode
 255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    GP timers: this parameter must be a number between Min_Data = 0x
 256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    Advanced timers: this parameter must be a number between Min_Dat
 257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** typedef struct
 265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
 266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t OCNState;      /*!< Specifies the TIM complementary Output Compare state.
 277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function LL_TI
 285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t OCNPolarity;   /*!< Specifies the complementary output polarity.
 292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t OCIdleState;   /*!< Specifies the TIM Output Compare pin state during Idle state.
 298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t OCNIdleState;  /*!< Specifies the TIM Output Compare pin state during Idle state.
 303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** typedef struct
 313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
 314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** typedef struct
 341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
 342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  TIM Hall sensor interface configuration structure definition.
 391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** typedef struct
 393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
 394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t IC1Polarity;        /*!< Specifies the active edge of TI1 input.
 396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t IC1Prescaler;       /*!< Specifies the TI1 input prescaler value.
 401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     Prescaler must be set to get a maximum counter period longer th
 402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     time interval between 2 consecutive changes on the Hall inputs.
 403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t IC1Filter;          /*!< Specifies the TI1 input filter.
 408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t CommutationDelay;   /*!< Specifies the compare value to be loaded into the Capture Compa
 413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     A positive pulse (TRGO event) is generated with a programmable 
 414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     a change occurs on the Hall inputs.
 415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     This parameter can be a number between Min_Data = 0x0000 and Ma
 416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** } LL_TIM_HALLSENSOR_InitTypeDef;
 419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  BDTR (Break and Dead Time) structure definition
 422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** typedef struct
 424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
 425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t OSSRState;            /*!< Specifies the Off-State selection used in Run mode.
 426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSR
 427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t OSSIState;            /*!< Specifies the Off-State used in Idle state.
 433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSI
 434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t LockLevel;            /*!< Specifies the LOCK level parameters.
 440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_LOCKLEVEL
 441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       @note The LOCK bits can be written only once after the reset.
 443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                             has been written, their content is frozen until the nex
 444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t DeadTime;              /*!< Specifies the delay time between the switching-off and the
 446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       switching-on of the outputs.
 447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This parameter can be a number between Min_Data = 0x00 and Ma
 448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint16_t BreakState;           /*!< Specifies whether the TIM Break input is enabled or not.
 454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_ENABLE
 455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t BreakPolarity;        /*!< Specifies the TIM Break Input pin polarity.
 461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_POLARIT
 462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t BreakFilter;          /*!< Specifies the TIM Break Filter.
 468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_FILTER
 469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t Break2State;          /*!< Specifies whether the TIM Break2 input is enabled or not.
 475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_ENABLE
 476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t Break2Polarity;        /*!< Specifies the TIM Break2 Input pin polarity.
 482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_POLARI
 483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t Break2Filter;          /*!< Specifies the TIM Break2 Filter.
 489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_FILTER
 490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t AutomaticOutput;      /*!< Specifies whether the TIM Automatic Output feature is enabled
 496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_AUTOMATICOUTP
 497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** } LL_TIM_BDTR_InitTypeDef;
 502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_CC5IF                        TIM_SR_CC5IF         /*!< Capture/compare 5 interrup
 523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_CC6IF                        TIM_SR_CC6IF         /*!< Capture/compare 6 interrup
 524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_COMIF                        TIM_SR_COMIF         /*!< COM interrupt flag */
 525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_BIF                          TIM_SR_BIF           /*!< Break interrupt flag */
 527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_B2IF                         TIM_SR_B2IF          /*!< Second break interrupt fla
 528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SR_SBIF                         TIM_SR_SBIF          /*!< System Break interrupt fla
 533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_ENABLE Break Enable
 539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_DISABLE            0x00000000U             /*!< Break function disabled */
 542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_ENABLE             TIM_BDTR_BKE            /*!< Break function enabled */
 543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_ENABLE Break2 Enable
 548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_DISABLE            0x00000000U              /*!< Break2 function disabled */
 551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_ENABLE             TIM_BDTR_BK2E            /*!< Break2 function enabled */
 552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_AUTOMATICOUTPUT_ENABLE Automatic output enable
 557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_DISABLE         0x00000000U             /*!< MOE can be set only by 
 560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_ENABLE          TIM_BDTR_AOE            /*!< MOE can be set by softw
 561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
 571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DIER_COMIE                      TIM_DIER_COMIE       /*!< COM interrupt enable */
 576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DIER_BIE                        TIM_DIER_BIE         /*!< Break interrupt enable */
 578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter stops counting at 
 595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter is not stopped at 
 596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_0        /*!< The counter counts up and 
 606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_1        /*!<The counter counts up and d
 607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCUPDATESOURCE Capture Compare  Update Source
 632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_ONLY        0x00000000U          /*!< Capture/compare control bi
 635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI    TIM_CR2_CCUS         /*!< Capture/compare control bi
 636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_LOCKLEVEL Lock Level
 650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_OFF                   0x00000000U          /*!< LOCK OFF - No bit is write
 653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_1                     TIM_BDTR_LOCK_0      /*!< LOCK Level 1 */
 654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_2                     TIM_BDTR_LOCK_1      /*!< LOCK Level 2 */
 655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_3                     TIM_BDTR_LOCK        /*!< LOCK Level 3 */
 656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1N                    TIM_CCER_CC1NE    /*!< Timer complementary output ch
 665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2N                    TIM_CCER_CC2NE    /*!< Timer complementary output ch
 667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3N                    TIM_CCER_CC3NE    /*!< Timer complementary output ch
 669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH5                     TIM_CCER_CC5E     /*!< Timer output channel 5 */
 671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH6                     TIM_CCER_CC6E     /*!< Timer output channel 6 */
 672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM1              TIM_CCMR1_OC1M_3                                    
 699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM2              (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0)               
 700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM1            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_2)               
 701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM2            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0 | TIM_CCMR1_OC1
 702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM1          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM2          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M)                 
 704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCIDLESTATE Output Configuration Idle State
 718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_LOW                 0x00000000U             /*!<OCx=0 (after a dead-time
 721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_HIGH                TIM_CR2_OIS1            /*!<OCx=1 (after a dead-time
 722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GROUPCH5 GROUPCH5
 727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_NONE                   0x00000000U           /*!< No effect of OC5REF on OC
 730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC1REFC                TIM_CCR5_GC5C1        /*!< OC1REFC is the logical AN
 731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC2REFC                TIM_CCR5_GC5C2        /*!< OC2REFC is the logical AN
 732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC3REFC                TIM_CCR5_GC5C3        /*!< OC3REFC is the logical AN
 733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_BOTHEDGE            (TIM_CCER_CC1P | TIM_CCER_CC1NP) /*!< The circuit is
 787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO2 Trigger Output 2
 827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_RESET                     0x00000000U                                         
 830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_ENABLE                    TIM_CR2_MMS2_0                                      
 831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_UPDATE                    TIM_CR2_MMS2_1                                      
 832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_CC1F                      (TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)                   
 833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC1                       TIM_CR2_MMS2_2                                      
 834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC2                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)                   
 835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC3                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1)                   
 836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5                       TIM_CR2_MMS2_3                                      
 838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6                       (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_0)                   
 839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1)                   
 840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2)                   
 842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)  
 843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 |TIM_CR2_MMS2_1)   
 844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | 
 845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER TIM_SMCR_SMS_3                      /*!< Combined re
 857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
 871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
 897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
 900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
 901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
 902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
 903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
 904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
 905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
 906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
 908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
 909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
 910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
 912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
 913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
 914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
 915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETRSOURCE External Trigger Source
 920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETRSOURCE_LEGACY                0x00000000U                                       /*
 923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETRSOURCE_COMP1                 TIM1_OR2_ETRSEL_0                                 /*
 924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ETRSOURCE_COMP2                 TIM1_OR2_ETRSEL_1                                 /*
 925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_POLARITY break polarity
 930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_LOW              0x00000000U               /*!< Break input BRK is ac
 933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_HIGH             TIM_BDTR_BKP              /*!< Break input BRK is ac
 934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_FILTER break filter
 939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1              0x00000000U   /*!< No filter, BRK acts asynchronousl
 942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N2           0x00010000U   /*!< fSAMPLING=fCK_INT, N=2 */
 943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N4           0x00020000U   /*!< fSAMPLING=fCK_INT, N=4 */
 944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N8           0x00030000U   /*!< fSAMPLING=fCK_INT, N=8 */
 945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N6           0x00040000U   /*!< fSAMPLING=fDTS/2, N=6 */
 946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N8           0x00050000U   /*!< fSAMPLING=fDTS/2, N=8 */
 947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N6           0x00060000U   /*!< fSAMPLING=fDTS/4, N=6 */
 948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N8           0x00070000U   /*!< fSAMPLING=fDTS/4, N=8 */
 949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N6           0x00080000U   /*!< fSAMPLING=fDTS/8, N=6 */
 950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N8           0x00090000U   /*!< fSAMPLING=fDTS/8, N=8 */
 951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N5          0x000A0000U   /*!< fSAMPLING=fDTS/16, N=5 */
 952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N6          0x000B0000U   /*!< fSAMPLING=fDTS/16, N=6 */
 953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N8          0x000C0000U   /*!< fSAMPLING=fDTS/16, N=8 */
 954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N5          0x000D0000U   /*!< fSAMPLING=fDTS/32, N=5 */
 955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N6          0x000E0000U   /*!< fSAMPLING=fDTS/32, N=6 */
 956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N8          0x000F0000U   /*!< fSAMPLING=fDTS/32, N=8 */
 957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_POLARITY BREAK2 POLARITY
 962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_LOW             0x00000000U             /*!< Break input BRK2 is act
 965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_HIGH            TIM_BDTR_BK2P           /*!< Break input BRK2 is act
 966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_FILTER BREAK2 FILTER
 971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1             0x00000000U   /*!< No filter, BRK acts asynchronousl
 974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N2          0x00100000U   /*!< fSAMPLING=fCK_INT, N=2 */
 975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N4          0x00200000U   /*!< fSAMPLING=fCK_INT, N=4 */
 976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N8          0x00300000U   /*!< fSAMPLING=fCK_INT, N=8 */
 977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N6          0x00400000U   /*!< fSAMPLING=fDTS/2, N=6 */
 978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N8          0x00500000U   /*!< fSAMPLING=fDTS/2, N=8 */
 979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N6          0x00600000U   /*!< fSAMPLING=fDTS/4, N=6 */
 980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N8          0x00700000U   /*!< fSAMPLING=fDTS/4, N=8 */
 981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N6          0x00800000U   /*!< fSAMPLING=fDTS/8, N=6 */
 982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N8          0x00900000U   /*!< fSAMPLING=fDTS/8, N=8 */
 983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N5         0x00A00000U   /*!< fSAMPLING=fDTS/16, N=5 */
 984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N6         0x00B00000U   /*!< fSAMPLING=fDTS/16, N=6 */
 985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N8         0x00C00000U   /*!< fSAMPLING=fDTS/16, N=8 */
 986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N5         0x00D00000U   /*!< fSAMPLING=fDTS/32, N=5 */
 987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N6         0x00E00000U   /*!< fSAMPLING=fDTS/32, N=6 */
 988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N8         0x00F00000U   /*!< fSAMPLING=fDTS/32, N=8 */
 989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
 991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
 993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSI OSSI
 994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
 995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
 996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OSSI_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OSSI_ENABLE                     TIM_BDTR_OSSI           /*!< When inactive, OxC/OCxN
 998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
 999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSR OSSR
1003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OSSR_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
1006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OSSR_ENABLE                     TIM_BDTR_OSSR           /*!< When inactive, OC/OCN o
1007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_INPUT BREAK INPUT
1012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN                0x00000000U  /*!< TIMx_BKIN input */
1015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN2               0x00000004U  /*!< TIMx_BKIN2 input */
1016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_SOURCE BKIN SOURCE
1021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKIN                TIM1_OR2_BKINE      /*!< BKIN input from AF controll
1024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP1             TIM1_OR2_BKCMP1E    /*!< internal signal: COMP1 outp
1025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP2             TIM1_OR2_BKCMP2E    /*!< internal signal: COMP2 outp
1026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined(DFSDM1_Channel0)
1027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_DF1BK               TIM1_OR2_BKDF1BK0E  /*!< internal signal: DFSDM1 bre
1028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* DFSDM1_Channel0 */
1029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_POLARITY BKIN POLARITY
1034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_LOW               TIM1_OR2_BKINP           /*!< BRK BKIN input is acti
1037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_HIGH              0x00000000U              /*!< BRK BKIN input is acti
1038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
1043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
1046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
1047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
1048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
1049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
1050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
1051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
1052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
1054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
1055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
1056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_RCR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_2)                     
1058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
1062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_BDTR          (TIM_DCR_DBA_4 | TIM_DCR_DBA_0)                     
1063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_OR1           (TIM_DCR_DBA_4 | TIM_DCR_DBA_2)                     
1064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR3         (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR5          (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR6          (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_OR2           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3)                     
1068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_OR3           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3 | TIM_DCR_DBA_0)     
1069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
1074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
1077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
1078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
1079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
1080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
1081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
1082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
1083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
1085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
1086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
1087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
1089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
1090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
1091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
1092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
1093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
1094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM1_ETR_ADC1_RMP  TIM1 External Trigger ADC1 Remap
1099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM1_ETR_ADC1_RMP_NC   TIM1_OR1_RMP_MASK                                            
1102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM1_ETR_ADC1_RMP_AWD1 (TIM1_OR1_ETR_ADC1_RMP_0 | TIM1_OR1_RMP_MASK)                
1103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM1_ETR_ADC1_RMP_AWD2 (TIM1_OR1_ETR_ADC1_RMP_1 | TIM1_OR1_RMP_MASK)                
1104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM1_ETR_ADC1_RMP_AWD3 (TIM1_OR1_ETR_ADC1_RMP | TIM1_OR1_RMP_MASK)                  
1105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined(ADC3)
1110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM1_ETR_ADC3_RMP  TIM1 External Trigger ADC3 Remap
1111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM1_ETR_ADC3_RMP_NC   TIM1_OR1_RMP_MASK                                            
1114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM1_ETR_ADC3_RMP_AWD1 (TIM1_OR1_ETR_ADC3_RMP_0 | TIM1_OR1_RMP_MASK)                
1115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM1_ETR_ADC3_RMP_AWD2 (TIM1_OR1_ETR_ADC3_RMP_1 | TIM1_OR1_RMP_MASK)                
1116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM1_ETR_ADC3_RMP_AWD3 (TIM1_OR1_ETR_ADC3_RMP | TIM1_OR1_RMP_MASK)                  
1117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* ADC3 */
1121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM1_TI1_RMP  TIM1 External Input Ch1 Remap
1123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_GPIO  TIM1_OR1_RMP_MASK                                                
1126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_COMP1 (TIM1_OR1_TI1_RMP | TIM1_OR1_RMP_MASK)                           
1127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_ITR1_RMP  TIM2 Internal Trigger1 Remap
1132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
1135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_TIM8_TRGO  TIM2_OR1_RMP_MASK                                          
1136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_OTG_FS_SOF (TIM2_OR1_ITR1_RMP | TIM2_OR1_RMP_MASK)                    
1137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* STM32L471xx || STM32L475xx || STM32L476xx || STM32L485xx || STM32L486xx || */
1138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* STM32L496xx || STM32L4A6xx || */
1139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
1140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined (STM32L412xx) || defined (STM32L422xx) ||defined (STM32L431xx) || defined (STM32L432xx)
1141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_NONE          0x00000000U                                             
1142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_USB_SOF       TIM2_OR1_ITR1_RMP                                       
1143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* STM32L431xx || STM32L432xx || STM32L442xx || STM32L433xx || STM32L443xx || */
1144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* STM32L451xx || STM32L452xx || STM32L462xx */
1145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM2_ETR_RMP_GPIO TIM2_OR1_RMP_MASK                                                 
1146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM2_ETR_RMP_LSE  (TIM2_OR1_ETR1_RMP | TIM2_OR1_RMP_MASK)                           
1147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_TI4_RMP  TIM2 External Input Ch4 Remap
1152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM2_TI4_RMP_GPIO        TIM2_OR1_RMP_MASK                                          
1155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM2_TI4_RMP_COMP1       (TIM2_OR1_TI4_RMP_0 | TIM2_OR1_RMP_MASK)                   
1156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined (STM32L412xx) || defined (STM32L422xx)
1157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #else
1158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM2_TI4_RMP_COMP2       (TIM2_OR1_TI4_RMP_1 | TIM2_OR1_RMP_MASK)                   
1159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM2_TI4_RMP_COMP1_COMP2 (TIM2_OR1_TI4_RMP | TIM2_OR1_RMP_MASK)                     
1160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif
1161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined(TIM3)
1166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_TI1_RMP  TIM3 External Input Ch1 Remap
1167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_GPIO         TIM3_OR1_RMP_MASK                                         
1170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP1        (TIM3_OR1_TI1_RMP_0 | TIM3_OR1_RMP_MASK)                  
1171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP2        (TIM3_OR1_TI1_RMP_1 | TIM3_OR1_RMP_MASK)                  
1172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP1_COMP2  (TIM3_OR1_TI1_RMP | TIM3_OR1_RMP_MASK)                    
1173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* TIM3 */
1177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined(TIM8)
1179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM8_ETR_ADC2_RMP  TIM8 External Trigger ADC2 Remap
1180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM8_ETR_ADC2_RMP_NC   TIM8_OR1_RMP_MASK                                            
1183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM8_ETR_ADC2_RMP_AWD1 (TIM8_OR1_ETR_ADC2_RMP_0 | TIM8_OR1_RMP_MASK)                
1184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM8_ETR_ADC2_RMP_AWD2 (TIM8_OR1_ETR_ADC2_RMP_1 | TIM8_OR1_RMP_MASK)                
1185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM8_ETR_ADC2_RMP_AWD3 (TIM8_OR1_ETR_ADC2_RMP | TIM8_OR1_RMP_MASK)                  
1186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM8_ETR_ADC3_RMP  TIM8 External Trigger ADC3 Remap
1191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM8_ETR_ADC3_RMP_NC   TIM8_OR1_RMP_MASK                                            
1194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM8_ETR_ADC3_RMP_AWD1 (TIM8_OR1_ETR_ADC3_RMP_0 | TIM8_OR1_RMP_MASK)                
1195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM8_ETR_ADC3_RMP_AWD2 (TIM8_OR1_ETR_ADC3_RMP_1 | TIM8_OR1_RMP_MASK)                
1196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM8_ETR_ADC3_RMP_AWD3 (TIM8_OR1_ETR_ADC3_RMP | TIM8_OR1_RMP_MASK)                  
1197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM8_TI1_RMP  TIM8 External Input Ch1 Remap
1202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_GPIO  TIM8_OR1_RMP_MASK                                                
1205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM8_TI1_RMP_COMP2 (TIM8_OR1_TI1_RMP | TIM8_OR1_RMP_MASK)                           
1206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* TIM8 */
1210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM15_TI1_RMP  TIM15 External Input Ch1 Remap
1212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_GPIO TIM15_OR1_RMP_MASK                                               
1215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_LSE  (TIM15_OR1_TI1_RMP | TIM15_OR1_RMP_MASK)                         
1216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM15_ENCODERMODE  TIM15 ENCODERMODE
1221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM15_ENCODERMODE_NOREDIRECTION TIM15_OR1_RMP_MASK                                  
1224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM15_ENCODERMODE_TIM2          (TIM15_OR1_ENCODER_MODE_0 | TIM15_OR1_RMP_MASK)     
1225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM15_ENCODERMODE_TIM3          (TIM15_OR1_ENCODER_MODE_1 | TIM15_OR1_RMP_MASK)     
1226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM15_ENCODERMODE_TIM4          (TIM15_OR1_ENCODER_MODE | TIM15_OR1_RMP_MASK)       
1227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM16_TI1_RMP  TIM16 External Input Ch1 Remap
1232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_GPIO TIM16_OR1_RMP_MASK                                               
1235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_LSI  (TIM16_OR1_TI1_RMP_0 | TIM16_OR1_RMP_MASK)                       
1236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_LSE  (TIM16_OR1_TI1_RMP_1 | TIM16_OR1_RMP_MASK)                       
1237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_RTC  (TIM16_OR1_TI1_RMP_1 | TIM16_OR1_TI1_RMP_0 | TIM16_OR1_RMP_MASK) 
1238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined TIM16_OR1_TI1_RMP_2
1239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_MSI     (TIM16_OR1_TI1_RMP_2 | TIM16_OR1_RMP_MASK)                    
1240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_HSE_32  (TIM16_OR1_TI1_RMP_2 | TIM16_OR1_TI1_RMP_0 | TIM16_OR1_RMP_MAS
1241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_MCO     (TIM16_OR1_TI1_RMP_2 | TIM16_OR1_TI1_RMP_1 | TIM16_OR1_RMP_MAS
1242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif
1243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #if defined(TIM17)
1248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM17_TI1_RMP  TIM17 Timer Input Ch1 Remap
1249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_GPIO   TIM17_OR1_RMP_MASK                                             
1252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_MSI    (TIM17_OR1_TI1_RMP_0 | TIM17_OR1_RMP_MASK)                     
1253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_HSE_32 (TIM17_OR1_TI1_RMP_1 | TIM17_OR1_RMP_MASK)                     
1254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_MCO    (TIM17_OR1_TI1_RMP | TIM17_OR1_RMP_MASK)                       
1255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #endif /* TIM17 */
1259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCREF_CLR_INT OCREF clear input selection
1261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_NC     0x00000000U         /*!< OCREF_CLR_INT is not connected */
1264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_ETR    TIM_SMCR_OCCS       /*!< OCREF_CLR_INT is connected to ETRF */
1265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** Legacy definitions for compatibility purpose
1270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** @cond 0
1271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_DFBK  LL_TIM_BKIN_SOURCE_DF1BK
1273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** @endcond
1275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
1281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
1282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
1286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Write a value in TIM register.
1290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
1291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __REG__ Register to be written
1292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
1293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
1296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Read a value in TIM register.
1299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
1300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __REG__ Register to be read
1301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Register value
1302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
1304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EM_Exported_Macros Exported_Macros
1309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  HELPER macro retrieving the UIFCPY flag from the counter value.
1314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GETFLAG_UIFCPY (@ref LL_TIM_GetCounter ());
1315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note  Relevant only if UIF flag remapping has been enabled  (UIF status bit is copied
1316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *        to TIMx_CNT register bit 31)
1317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __CNT__ Counter value
1318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval UIF status bit
1319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define __LL_TIM_GETFLAG_UIFCPY(__CNT__)  \
1321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   (READ_BIT((__CNT__), TIM_CNT_UIFCPY) >> TIM_CNT_UIFCPY_Pos)
1322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  HELPER macro calculating DTG[0:7] in the TIMx_BDTR register to achieve the requested de
1325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DEADTIME (80000000, @ref LL_TIM_GetClockDivision (), 120);
1326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
1328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __DT__ deadtime duration (in ns)
1332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval DTG[0:7]
1333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define __LL_TIM_CALC_DEADTIME(__TIMCLK__, __CKD__, __DT__)  \
1335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   ( (((uint64_t)((__DT__)*1000U)) < ((DT_DELAY_1+1U) * TIM_CALC_DTS((__TIMCLK__), (__CKD__))))    ?
1336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((64U + (DT_DELAY_2+1U)) * 2U * TIM_CALC_DTS((__TIMCLK__), (__C
1337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_3+1U)) * 8U * TIM_CALC_DTS((__TIMCLK__), (__C
1338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_4+1U)) * 16U * TIM_CALC_DTS((__TIMCLK__), (__
1339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****     0U)
1340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
1343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
1344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
1346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
1347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
1349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)(((__TIMCLK__)/(__CNTCLK__)) - 1U) : 0U)
1350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
1353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
1354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
1357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
1360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1U))
1361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
1364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
1365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
1369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
1371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
1372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****               / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
1373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration (
1376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
1377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
1381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
1384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
1385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****               + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
1386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
1389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
1390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
1391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
1396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
1398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
1399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
1411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
1412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
1416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable timer counter.
1420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
1421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
1425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
1427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable timer counter.
1431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
1432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
1436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
1438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
1442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
1443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(TIM_TypeDef *TIMx)
1447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
1449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable update event generation.
1453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
1454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
1458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
1460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable update event generation.
1464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
1465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
1469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
1471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
1475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
1476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
1478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(TIM_TypeDef *TIMx)
1480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
1482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set update event source
1486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
1487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
1488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *        - Counter overflow/underflow
1489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *        - Setting the UG bit
1490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *        - Update generation through the slave mode controller
1491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
1492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
1493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
1494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
1496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
1501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
1503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get actual event update source
1507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
1508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(TIM_TypeDef *TIMx)
1514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
1516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
1520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
1521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
1523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
1528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
1530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
1534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
1535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(TIM_TypeDef *TIMx)
1541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
1543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
1547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       by a timer instance.
1550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
1552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
1553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
1554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
1555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
1557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
1565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
1567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get actual counter mode.
1571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       by a timer instance.
1574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
1575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
1576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(TIM_TypeDef *TIMx)
1585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t counter_mode;
1587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CMS));
1589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   if (counter_mode == 0U)
1591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   {
1592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****     counter_mode = (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   }
1594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return counter_mode;
1596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
1600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
1601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
1605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
1607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
1611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
1612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
1616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_ARPE);
1618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
1622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
1623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(TIM_TypeDef *TIMx)
1627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
1629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
1633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       instance.
1636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
1637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
1639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
1645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
1647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
1651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       instance.
1654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
1655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(TIM_TypeDef *TIMx)
1662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
1664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the counter value.
1668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
1671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
1676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
1678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the counter value.
1682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
1685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(TIM_TypeDef *TIMx)
1689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
1691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the current direction of the counter
1695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
1696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
1699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
1700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(TIM_TypeDef *TIMx)
1702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the prescaler value.
1708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
1709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
1710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
1711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
1712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
1713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
1715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
1718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
1720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the prescaler value.
1724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
1725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
1727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(TIM_TypeDef *TIMx)
1729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
1731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the auto-reload value.
1735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
1736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
1739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
1740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
1742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
1745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
1747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the auto-reload value.
1751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
1752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Auto-reload value
1756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(TIM_TypeDef *TIMx)
1758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
1760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the repetition counter value.
1764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note For advanced timer instances RepetitionCounter can be up to 65535.
1765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_SetRepetitionCounter
1768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  RepetitionCounter between Min_Data=0 and Max_Data=255 or 65535 for advanced timer.
1770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRepetitionCounter(TIM_TypeDef *TIMx, uint32_t RepetitionCounter)
1773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->RCR, RepetitionCounter);
1775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the repetition counter value.
1779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_GetRepetitionCounter
1782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Repetition counter value
1784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetRepetitionCounter(TIM_TypeDef *TIMx)
1786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->RCR));
1788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Force a continuous copy of the update interrupt flag (UIF) into the timer counter regis
1792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note This allows both the counter value and a potential roll-over condition signalled by the U
1793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_EnableUIFRemap
1794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUIFRemap(TIM_TypeDef *TIMx)
1798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
1800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable update interrupt flag (UIF) remapping.
1804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_DisableUIFRemap
1805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUIFRemap(TIM_TypeDef *TIMx)
1809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
1811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether update interrupt flag (UIF) copy is set.
1815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Counter Counter value
1816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveUIFCPY(uint32_t Counter)
1819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (((Counter & TIM_CNT_UIFCPY) == (TIM_CNT_UIFCPY)) ? 1UL : 0UL);
1821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
1825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
1828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
1829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note CCxE, CCxNE and OCxM bits are preloaded, after having been written,
1833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       they are updated only when a commutation event (COM) occurs.
1834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Only on channels that have a complementary output.
1835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_EnablePreload
1838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnablePreload(TIM_TypeDef *TIMx)
1842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_CCPC);
1844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_DisablePreload
1851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisablePreload(TIM_TypeDef *TIMx)
1855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_CCPC);
1857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the updated source of the capture/compare control bits (CCxE, CCxNE and OCxM).
1861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2          CCUS          LL_TIM_CC_SetUpdate
1864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  CCUpdateSource This parameter can be one of the following values:
1866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_ONLY
1867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI
1868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetUpdate(TIM_TypeDef *TIMx, uint32_t CCUpdateSource)
1871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCUS, CCUpdateSource);
1873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
1877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
1878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
1880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
1885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
1887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
1891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
1892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(TIM_TypeDef *TIMx)
1898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
1900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the lock level to freeze the
1904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         configuration of several capture/compare parameters.
1905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
1906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       the lock mechanism is supported by a timer instance.
1907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         LOCK          LL_TIM_CC_SetLockLevel
1908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  LockLevel This parameter can be one of the following values:
1910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_OFF
1911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_1
1912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_2
1913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_3
1914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetLockLevel(TIM_TypeDef *TIMx, uint32_t LockLevel)
1917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_LOCK, LockLevel);
1919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
1923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
1924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_EnableChannel\n
1925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
1926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_EnableChannel\n
1927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
1928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_EnableChannel\n
1929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel\n
1930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_EnableChannel\n
1931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_EnableChannel
1932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
1948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
1952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
1953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_DisableChannel\n
1954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
1955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_DisableChannel\n
1956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
1957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_DisableChannel\n
1958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel\n
1959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_DisableChannel\n
1960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_DisableChannel
1961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
1973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
1974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
1976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
1977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
1978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
1979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
1980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
1981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
1982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_IsEnabledChannel\n
1983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
1984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_IsEnabledChannel\n
1985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
1986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_IsEnabledChannel\n
1987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel\n
1988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_IsEnabledChannel\n
1989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_IsEnabledChannel
1990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
1991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(TIM_TypeDef *TIMx, uint32_t Channels)
2004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
2006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
2010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
2013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
2014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Configure an output channel.
2017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
2018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
2019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
2020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
2021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        CC5S          LL_TIM_OC_ConfigOutput\n
2022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        CC6S          LL_TIM_OC_ConfigOutput\n
2023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
2024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
2025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
2026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
2027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_ConfigOutput\n
2028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_ConfigOutput\n
2029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2          OIS1          LL_TIM_OC_ConfigOutput\n
2030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2          OIS2          LL_TIM_OC_ConfigOutput\n
2031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2          OIS3          LL_TIM_OC_ConfigOutput\n
2032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2          OIS4          LL_TIM_OC_ConfigOutput\n
2033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2          OIS5          LL_TIM_OC_ConfigOutput\n
2034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2          OIS6          LL_TIM_OC_ConfigOutput
2035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
2044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
2045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW or @ref LL_TIM_OCIDLESTATE_HIGH
2046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
2049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
2053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
2054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
2055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),
2056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****              (Configuration & TIM_CR2_OIS1) << SHIFT_TAB_OISx[iChannel]);
2057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
2061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
2062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
2063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
2064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
2065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode\n
2066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_SetMode\n
2067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_SetMode
2068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
2077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
2078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
2079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
2080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
2081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
2082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
2083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
2084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
2085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
2086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
2087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
2088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
2089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM1
2090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM2
2091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
2094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
2098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
2102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
2103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
2104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
2105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode\n
2106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_GetMode\n
2107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_GetMode
2108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
2118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
2119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
2120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
2121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
2122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
2123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
2124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
2125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
2126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
2127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
2128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
2129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM1
2130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM2
2131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(TIM_TypeDef *TIMx, uint32_t Channel)
2133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIF
2137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
2141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
2142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_SetPolarity\n
2143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
2144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_SetPolarity\n
2145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
2146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_SetPolarity\n
2147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity\n
2148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_SetPolarity\n
2149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_SetPolarity
2150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
2162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
2163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
2164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
2167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
2170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
2174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
2175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_GetPolarity\n
2176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
2177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_GetPolarity\n
2178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
2179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_GetPolarity\n
2180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity\n
2181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_GetPolarity\n
2182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_GetPolarity
2183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
2196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
2197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
2202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the IDLE state of an output channel
2206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note This function is significant only for the timer instances
2207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       supporting the break feature. Macro IS_TIM_BREAK_INSTANCE(TIMx)
2208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       can be used to check whether or not a timer instance provides
2209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a break input.
2210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_SetIdleState\n
2211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
2212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_SetIdleState\n
2213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
2214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_SetIdleState\n
2215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_SetIdleState\n
2216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_SetIdleState\n
2217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_SetIdleState\n
2218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_SetIdleState
2219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  IdleState This parameter can be one of the following values:
2231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
2232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetIdleState(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t IdleState
2236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),  IdleState << SHIFT_TAB_OISx[iC
2239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the IDLE state of an output channel
2243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_GetIdleState\n
2244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
2245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_GetIdleState\n
2246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
2247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_GetIdleState\n
2248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_GetIdleState\n
2249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_GetIdleState\n
2250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_GetIdleState\n
2251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_GetIdleState
2252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
2265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetIdleState(TIM_TypeDef *TIMx, uint32_t Channel)
2268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (READ_BIT(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel])) >> SHIFT_TAB_OISx[iChanne
2271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
2275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
2276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
2277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
2278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
2279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast\n
2280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_EnableFast\n
2281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_EnableFast
2282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
2302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
2303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
2304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
2305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast\n
2306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_DisableFast\n
2307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_DisableFast
2308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
2328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
2329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
2330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
2331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
2332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_IsEnabledFast\n
2333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_IsEnabledFast
2334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(TIM_TypeDef *TIMx, uint32_t Channel)
2345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
2349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
2354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
2355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
2356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
2357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload\n
2358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_EnablePreload\n
2359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_EnablePreload
2360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
2371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
2375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
2379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
2380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
2381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
2382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload\n
2383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_DisablePreload\n
2384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_DisablePreload
2385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
2396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
2400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
2404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
2405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
2406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
2407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
2408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_IsEnabledPreload\n
2409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_IsEnabledPreload
2410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(TIM_TypeDef *TIMx, uint32_t Channel)
2421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
2425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
2430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
2431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
2432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
2434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
2435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
2436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear\n
2437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_EnableClear\n
2438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_EnableClear
2439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
2450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
2454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
2458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
2459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
2461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
2462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
2463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear\n
2464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_DisableClear\n
2465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_DisableClear
2466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
2477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
2481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
2485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
2486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
2487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
2488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
2490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
2491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
2492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
2493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_IsEnabledClear\n
2494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_IsEnabledClear
2495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(TIM_TypeDef *TIMx, uint32_t Channel)
2506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
2510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the dead-time delay (delay inserted between the rising edge of the OCxREF signal an
2515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       dead-time insertion feature is supported by a timer instance.
2517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
2518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         DTG           LL_TIM_OC_SetDeadTime
2519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
2521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
2524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_DTG, DeadTime);
2526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
2530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
2536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
2541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
2543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
2547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
2553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
2558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
2560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
2564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel is supported by a timer instance.
2569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
2570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
2575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
2577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
2581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
2587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
2592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
2594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set compare value for output channel 5 (TIMx_CCR5).
2598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
2599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
2600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_SetCompareCH5
2601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH5(TIM_TypeDef *TIMx, uint32_t CompareValue)
2606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, TIM_CCR5_CCR5, CompareValue);
2608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set compare value for output channel 6 (TIMx_CCR6).
2612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
2613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
2614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_SetCompareCH6
2615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH6(TIM_TypeDef *TIMx, uint32_t CompareValue)
2620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR6, CompareValue);
2622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
2626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
2632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(TIM_TypeDef *TIMx)
2636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
2642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
2648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(TIM_TypeDef *TIMx)
2652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
2658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
2663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
2664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(TIM_TypeDef *TIMx)
2668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
2674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
2680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(TIM_TypeDef *TIMx)
2684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR5) set for  output channel 5.
2690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
2691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
2692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_GetCompareCH5
2693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH5(TIM_TypeDef *TIMx)
2697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CCR5, TIM_CCR5_CCR5));
2699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR6) set for  output channel 6.
2703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
2704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
2705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_GetCompareCH6
2706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH6(TIM_TypeDef *TIMx)
2710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR6));
2712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Select on which reference signal the OC5REF is combined to.
2716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_COMBINED3PHASEPWM_INSTANCE(TIMx) can be used to check
2717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports the combined 3-phase PWM mode.
2718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR5         GC5C3          LL_TIM_SetCH5CombinedChannels\n
2719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCR5         GC5C2          LL_TIM_SetCH5CombinedChannels\n
2720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCR5         GC5C1          LL_TIM_SetCH5CombinedChannels
2721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  GroupCH5 This parameter can be a combination of the following values:
2723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_NONE
2724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC1REFC
2725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC2REFC
2726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC3REFC
2727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCH5CombinedChannels(TIM_TypeDef *TIMx, uint32_t GroupCH5)
2730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, (TIM_CCR5_GC5C3 | TIM_CCR5_GC5C2 | TIM_CCR5_GC5C1), GroupCH5);
2732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
2736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
2739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
2740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Configure input channel.
2743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
2744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
2745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
2746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
2747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
2748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
2749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
2750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
2751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
2752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
2753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
2754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
2755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
2756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
2757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
2758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
2759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
2760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
2761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
2762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_Config
2763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
2770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
2771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
2772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
2773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING or @ref LL_TIM_I
2774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
2777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
2781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))  << SH
2782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
2784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the active input.
2788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
2789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
2790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
2791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
2792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
2799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
2805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
2809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the current active input.
2813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
2814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
2815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
2816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
2817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel)
2829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
2837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
2838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
2839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
2840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
2841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
2848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
2855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
2859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
2863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
2864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
2865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
2866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
2867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel)
2880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
2884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the input filter duration.
2888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
2889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
2890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
2891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
2892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
2899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
2918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iC
2921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
2922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the input filter duration.
2926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
2927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
2928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
2929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
2930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(TIM_TypeDef *TIMx, uint32_t Channel)
2955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CC
2958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the input channel polarity.
2963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
2964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
2965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
2966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
2967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
2968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
2969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
2970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_SetPolarity
2971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
2972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
2978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
2982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
2983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
2984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
2985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
2988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
2989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
2990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
2991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
2992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
2993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
2994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
2995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
2996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
2997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
2998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
2999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_GetPolarity
3000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
3002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
3003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
3004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
3005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
3006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
3008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
3009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
3012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
3015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
3016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
3020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
3021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides an XOR input.
3022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
3023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
3027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
3029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
3033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
3034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides an XOR input.
3035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
3036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
3040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
3042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
3046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
3047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * a timer instance provides an XOR input.
3048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
3049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(TIM_TypeDef *TIMx)
3053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S)) ? 1UL : 0UL);
3055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
3059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
3063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
3064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
3065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(TIM_TypeDef *TIMx)
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
3071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
3075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
3079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
3080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
3081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(TIM_TypeDef *TIMx)
3085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
3087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
3091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
3095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
3096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
3097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(TIM_TypeDef *TIMx)
3101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
3103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
3107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
3111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
3112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
3113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(TIM_TypeDef *TIMx)
3117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
3119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
3123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
3126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
3127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
3130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
3131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
3134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
3138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
3140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
3144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
3147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
3151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
3153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
3157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
3160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(TIM_TypeDef *TIMx)
3164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE)) ? 1UL : 0UL);
3166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
3170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
3171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
3172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       function. This timer input must be configured by calling
3173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
3174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
3175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
3176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
3179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
3180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
3182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
3183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
3184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
3185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
3188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
3190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
3194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
3195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
3196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
3197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
3199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
3200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
3201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
3202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
3205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
3207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
3211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
3214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
3215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
3218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
3219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
3220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
3221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
3223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
3224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
3225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
3226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
3227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
3228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
3229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
3230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
3231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
3234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
3236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the trigger output 2 (TRGO2) used for ADC synchronization .
3240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_TRGO2_INSTANCE(TIMx) can be used to check
3241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       whether or not a timer instance can be used for ADC synchronization.
3242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll CR2          MMS2          LL_TIM_SetTriggerOutput2
3243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer Instance
3244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  ADCSynchronization This parameter can be one of the following values:
3245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_RESET
3246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_ENABLE
3247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_UPDATE
3248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_CC1F
3249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC1
3250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC2
3251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC3
3252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4
3253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5
3254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6
3255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISINGFALLING
3256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6_RISINGFALLING
3257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_RISING
3258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_FALLING
3259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_RISING
3260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_FALLING
3261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput2(TIM_TypeDef *TIMx, uint32_t ADCSynchronization)
3264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS2, ADCSynchronization);
3266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
3270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
3273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
3275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
3276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
3277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
3278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
3279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER
3280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
3283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
3285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
3289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
3292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
3294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
3295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
3296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
3297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
3298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
3299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
3300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
3301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
3302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
3305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
3307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
3311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
3314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
3318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
3320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
3324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
3327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
3331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
3333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief Indicates whether the Master/Slave mode is enabled.
3337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * a timer instance can operate as a slave timer.
3339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_IsEnabledMasterSlaveMode
3340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledMasterSlaveMode(TIM_TypeDef *TIMx)
3344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_MSM) == (TIM_SMCR_MSM)) ? 1UL : 0UL);
3346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Configure the external trigger (ETR) input.
3350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_ETR_INSTANCE(TIMx) can be used to check whether or not
3351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides an external trigger input.
3352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR         ETP           LL_TIM_ConfigETR\n
3353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         SMCR         ETPS          LL_TIM_ConfigETR\n
3354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         SMCR         ETF           LL_TIM_ConfigETR
3355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  ETRPolarity This parameter can be one of the following values:
3357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_NONINVERTED
3358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_INVERTED
3359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  ETRPrescaler This parameter can be one of the following values:
3360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV1
3361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV2
3362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV4
3363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV8
3364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  ETRFilter This parameter can be one of the following values:
3365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1
3366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N2
3367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N4
3368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N8
3369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N6
3370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N8
3371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N6
3372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N8
3373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N6
3374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N8
3375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N5
3376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N6
3377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N8
3378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N5
3379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N6
3380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N8
3381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigETR(TIM_TypeDef *TIMx, uint32_t ETRPolarity, uint32_t ETRPrescale
3384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       uint32_t ETRFilter)
3385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_ETP | TIM_SMCR_ETPS | TIM_SMCR_ETF, ETRPolarity | ETRPrescaler | 
3387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Select the external trigger (ETR) input source.
3391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_ETRSEL_INSTANCE(TIMx) can be used to check whether or
3392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       not a timer instance supports ETR source selection.
3393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll OR2          ETRSEL        LL_TIM_SetETRSource
3394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  ETRSource This parameter can be one of the following values:
3396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_LEGACY
3397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_COMP1
3398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_COMP2
3399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetETRSource(TIM_TypeDef *TIMx, uint32_t ETRSource)
3402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->OR2, TIMx_OR2_ETRSEL, ETRSource);
3404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
3408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Break_Function Break function configuration
3411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
3412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable the break function.
3415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a break input.
3417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_EnableBRK
3418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBRK(TIM_TypeDef *TIMx)
3422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BKE);
3424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable the break function.
3428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_DisableBRK
3429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a break input.
3432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBRK(TIM_TypeDef *TIMx)
3435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BKE);
3437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Configure the break input.
3441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a break input.
3443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         BKP           LL_TIM_ConfigBRK\n
3444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         BDTR         BKF           LL_TIM_ConfigBRK
3445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  BreakPolarity This parameter can be one of the following values:
3447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_LOW
3448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_HIGH
3449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  BreakFilter This parameter can be one of the following values:
3450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1
3451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N2
3452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N4
3453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N8
3454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV2_N6
3455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV2_N8
3456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV4_N6
3457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV4_N8
3458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV8_N6
3459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV8_N8
3460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N5
3461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N6
3462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N8
3463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N5
3464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N6
3465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N8
3466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigBRK(TIM_TypeDef *TIMx, uint32_t BreakPolarity,
3469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                       uint32_t BreakFilter)
3470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_BKP | TIM_BDTR_BKF, BreakPolarity | BreakFilter);
3472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable the break 2 function.
3476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
3477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a second break input.
3478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         BK2E          LL_TIM_EnableBRK2
3479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBRK2(TIM_TypeDef *TIMx)
3483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BK2E);
3485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable the break  2 function.
3489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
3490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a second break input.
3491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         BK2E          LL_TIM_DisableBRK2
3492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBRK2(TIM_TypeDef *TIMx)
3496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BK2E);
3498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Configure the break 2 input.
3502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
3503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a second break input.
3504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         BK2P          LL_TIM_ConfigBRK2\n
3505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         BDTR         BK2F          LL_TIM_ConfigBRK2
3506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Break2Polarity This parameter can be one of the following values:
3508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_POLARITY_LOW
3509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_POLARITY_HIGH
3510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Break2Filter This parameter can be one of the following values:
3511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1
3512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N2
3513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N4
3514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N8
3515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV2_N6
3516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV2_N8
3517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV4_N6
3518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV4_N8
3519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV8_N6
3520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV8_N8
3521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N5
3522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N6
3523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N8
3524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N5
3525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N6
3526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N8
3527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigBRK2(TIM_TypeDef *TIMx, uint32_t Break2Polarity, uint32_t Break2F
3530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_BK2P | TIM_BDTR_BK2F, Break2Polarity | Break2Filter);
3532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Select the outputs off state (enabled v.s. disabled) in Idle and Run modes.
3536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a break input.
3538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         OSSI          LL_TIM_SetOffStates\n
3539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         BDTR         OSSR          LL_TIM_SetOffStates
3540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  OffStateIdle This parameter can be one of the following values:
3542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_DISABLE
3543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_ENABLE
3544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  OffStateRun This parameter can be one of the following values:
3545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_DISABLE
3546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_ENABLE
3547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOffStates(TIM_TypeDef *TIMx, uint32_t OffStateIdle, uint32_t OffStat
3550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_OSSI | TIM_BDTR_OSSR, OffStateIdle | OffStateRun);
3552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable automatic output (MOE can be set by software or automatically when a break input
3556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a break input.
3558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_EnableAutomaticOutput
3559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAutomaticOutput(TIM_TypeDef *TIMx)
3563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_AOE);
3565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable automatic output (MOE can be set only by software).
3569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a break input.
3571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_DisableAutomaticOutput
3572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAutomaticOutput(TIM_TypeDef *TIMx)
3576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_AOE);
3578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether automatic output is enabled.
3582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a break input.
3584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_IsEnabledAutomaticOutput
3585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAutomaticOutput(TIM_TypeDef *TIMx)
3589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->BDTR, TIM_BDTR_AOE) == (TIM_BDTR_AOE)) ? 1UL : 0UL);
3591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable the outputs (set the MOE bit in TIMx_BDTR register).
3595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
3596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       software and is reset in case of break or break2 event
3597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a break input.
3599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_EnableAllOutputs
3600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAllOutputs(TIM_TypeDef *TIMx)
3604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_MOE);
3606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable the outputs (reset the MOE bit in TIMx_BDTR register).
3610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
3611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       software and is reset in case of break or break2 event.
3612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a break input.
3614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_DisableAllOutputs
3615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAllOutputs(TIM_TypeDef *TIMx)
3619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_MOE);
3621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether outputs are enabled.
3625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a timer instance provides a break input.
3627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_IsEnabledAllOutputs
3628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAllOutputs(TIM_TypeDef *TIMx)
3632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->BDTR, TIM_BDTR_MOE) == (TIM_BDTR_MOE)) ? 1UL : 0UL);
3634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable the signals connected to the designated timer break input.
3638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
3639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
3640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll OR2          BKINE         LL_TIM_EnableBreakInputSource\n
3641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR2          BKCMP1E       LL_TIM_EnableBreakInputSource\n
3642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR2          BKCMP2E       LL_TIM_EnableBreakInputSource\n
3643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR2          BKDF1BK0E     LL_TIM_EnableBreakInputSource\n
3644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR3          BK2INE        LL_TIM_EnableBreakInputSource\n
3645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR3          BK2CMP1E      LL_TIM_EnableBreakInputSource\n
3646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR3          BK2CMP2E      LL_TIM_EnableBreakInputSource\n
3647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR3          BK2DF1BK1E    LL_TIM_EnableBreakInputSource
3648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
3650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
3651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
3652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
3653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
3654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
3655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
3656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_DF1BK
3657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBreakInputSource(TIM_TypeDef *TIMx, uint32_t BreakInput, uint32_t
3660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->OR2) + BreakInput));
3662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(*pReg, Source);
3663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable the signals connected to the designated timer break input.
3667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
3668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
3669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll OR2          BKINE         LL_TIM_DisableBreakInputSource\n
3670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR2          BKCMP1E       LL_TIM_DisableBreakInputSource\n
3671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR2          BKCMP2E       LL_TIM_DisableBreakInputSource\n
3672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR2          BKDF1BK0E     LL_TIM_DisableBreakInputSource\n
3673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR3          BK2INE        LL_TIM_DisableBreakInputSource\n
3674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR3          BK2CMP1E      LL_TIM_DisableBreakInputSource\n
3675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR3          BK2CMP2E      LL_TIM_DisableBreakInputSource\n
3676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR3          BK2DF1BK1E    LL_TIM_DisableBreakInputSource
3677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
3679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
3680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
3681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
3682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
3683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
3684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
3685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_DF1BK
3686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBreakInputSource(TIM_TypeDef *TIMx, uint32_t BreakInput, uint32_
3689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->OR2) + BreakInput));
3691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(*pReg, Source);
3692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the polarity of the break signal for the timer break input.
3696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
3697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
3698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll OR2          BKINP         LL_TIM_SetBreakInputSourcePolarity\n
3699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR2          BKCMP1P       LL_TIM_SetBreakInputSourcePolarity\n
3700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR2          BKCMP2P       LL_TIM_SetBreakInputSourcePolarity\n
3701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR3          BK2INP        LL_TIM_SetBreakInputSourcePolarity\n
3702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR3          BK2CMP1P      LL_TIM_SetBreakInputSourcePolarity\n
3703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         OR3          BK2CMP2P      LL_TIM_SetBreakInputSourcePolarity
3704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
3706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
3707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
3708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
3709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
3710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
3711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
3712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
3713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_POLARITY_LOW
3714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_POLARITY_HIGH
3715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetBreakInputSourcePolarity(TIM_TypeDef *TIMx, uint32_t BreakInput, uin
3718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****                                                         uint32_t Polarity)
3719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->OR2) + BreakInput));
3721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(*pReg, (TIMx_OR2_BKINP << TIM_POSITION_BRK_SOURCE), (Polarity << TIM_POSITION_BRK_SOUR
3722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
3725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Burst_Mode DMA burst mode configuration
3728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
3729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Configures the timer DMA burst feature.
3732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_DMABURST_INSTANCE(TIMx) can be used to check whether or
3733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       not a timer instance supports the DMA burst mode.
3734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DCR          DBL           LL_TIM_ConfigDMABurst\n
3735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         DCR          DBA           LL_TIM_ConfigDMABurst
3736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  DMABurstBaseAddress This parameter can be one of the following values:
3738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR1
3739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR2
3740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SMCR
3741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_DIER
3742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SR
3743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_EGR
3744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR1
3745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR2
3746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCER
3747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CNT
3748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_PSC
3749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_ARR
3750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_RCR
3751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR1
3752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR2
3753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR3
3754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR4
3755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_BDTR
3756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_OR1
3757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR3 
3758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR5  
3759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR6  
3760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_OR2  
3761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_OR3  
3762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  DMABurstLength This parameter can be one of the following values:
3763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_1TRANSFER
3764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_2TRANSFERS
3765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_3TRANSFERS
3766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_4TRANSFERS
3767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_5TRANSFERS
3768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_6TRANSFERS
3769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_7TRANSFERS
3770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_8TRANSFERS
3771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_9TRANSFERS
3772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_10TRANSFERS
3773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_11TRANSFERS
3774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_12TRANSFERS
3775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_13TRANSFERS
3776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_14TRANSFERS
3777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_15TRANSFERS
3778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_16TRANSFERS
3779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_17TRANSFERS
3780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_18TRANSFERS
3781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigDMABurst(TIM_TypeDef *TIMx, uint32_t DMABurstBaseAddress, uint32_
3784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->DCR, (TIM_DCR_DBL | TIM_DCR_DBA), (DMABurstBaseAddress | DMABurstLength));
3786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
3790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Inputs_Remapping Timer input remapping
3793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
3794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Remap TIM inputs (input channel, internal/external triggers).
3797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note Macro IS_TIM_REMAP_INSTANCE(TIMx) can be used to check whether or not
3798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *       a some timer inputs can be remapped.
3799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   @if STM32L486xx
3800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll TIM1_OR1    ETR_ADC1_RMP      LL_TIM_SetRemap\n
3801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM1_OR1    ETR_ADC3_RMP      LL_TIM_SetRemap\n
3802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM1_OR1    TI1_RMP           LL_TIM_SetRemap\n
3803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM8_OR1    ETR_ADC2_RMP      LL_TIM_SetRemap\n
3804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM8_OR1    ETR_ADC3_RMP      LL_TIM_SetRemap\n
3805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM8_OR1    TI1_RMP           LL_TIM_SetRemap\n
3806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM2_OR1    ITR1_RMP          LL_TIM_SetRemap\n
3807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM2_OR1    TI4_RMP           LL_TIM_SetRemap\n
3808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM2_OR1    TI1_RMP           LL_TIM_SetRemap\n
3809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM3_OR1    TI1_RMP           LL_TIM_SetRemap\n
3810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM15_OR1   TI1_RMP           LL_TIM_SetRemap\n
3811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM15_OR1   ENCODER_MODE      LL_TIM_SetRemap\n
3812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM16_OR1   TI1_RMP           LL_TIM_SetRemap\n
3813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM17_OR1   TI1_RMP           LL_TIM_SetRemap
3814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   @endif
3815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   @if STM32L443xx
3816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll TIM1_OR1    ETR_ADC1_RMP      LL_TIM_SetRemap\n
3817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM1_OR1    ETR_ADC3_RMP      LL_TIM_SetRemap\n
3818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM1_OR1    TI1_RMP           LL_TIM_SetRemap\n
3819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM2_OR1    ITR1_RMP          LL_TIM_SetRemap\n
3820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM2_OR1    TI4_RMP           LL_TIM_SetRemap\n
3821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM2_OR1    TI1_RMP           LL_TIM_SetRemap\n
3822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM15_OR1   TI1_RMP           LL_TIM_SetRemap\n
3823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM15_OR1   ENCODER_MODE      LL_TIM_SetRemap\n
3824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM16_OR1   TI1_RMP           LL_TIM_SetRemap\n
3825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   @endif
3826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  Remap Remap param depends on the TIMx. Description available only
3828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         in CHM version of the User Manual (not in .pdf).
3829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         Otherwise see Reference Manual description of OR registers.
3830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         Below description summarizes "Timer Instance" and "Remap" param combinations:
3832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   @if STM32L486xx
3834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM1: any combination of TI1_RMP, ADC3_RMP, ADC1_RMP where
3835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . ADC1_RMP can be one of the following values
3837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC1_RMP_NC
3838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC1_RMP_AWD1
3839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC1_RMP_AWD2
3840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC1_RMP_AWD3
3841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . ADC3_RMP can be one of the following values
3843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC3_RMP_NC
3844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC3_RMP_AWD1
3845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC3_RMP_AWD2
3846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC3_RMP_AWD3
3847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
3849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_GPIO
3850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_COMP1
3851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM2: any combination of ITR1_RMP, ETR1_RMP, TI4_RMP where
3853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            ITR1_RMP can be one of the following values
3855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ITR1_RMP_TIM8_TRGO
3856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ITR1_RMP_OTG_FS_SOF
3857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . ETR1_RMP can be one of the following values
3859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETR_RMP_GPIO
3860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETR_RMP_LSE
3861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . TI4_RMP can be one of the following values
3863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_GPIO
3864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_COMP1
3865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_COMP2
3866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_COMP1_COMP2
3867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM3: one of the following values
3869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_GPIO
3871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP1
3872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP2
3873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP1_COMP2
3874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM8: any combination of TI1_RMP, ADC3_RMP, ADC1_RMP where
3876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . ADC1_RMP can be one of the following values
3878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETR_ADC2_RMP_NC
3879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETR_ADC2_RMP_AWD1
3880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETR_ADC2_RMP_AWD2
3881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETR_ADC2_RMP_AWD3
3882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . ADC3_RMP can be one of the following values
3884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETR_ADC3_RMP_NC
3885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETR_ADC3_RMP_AWD1
3886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETR_ADC3_RMP_AWD2
3887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_ETR_ADC3_RMP_AWD3
3888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
3890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_GPIO
3891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM8_TI1_RMP_COMP2
3892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM15: any combination of TI1_RMP, ENCODER_MODE where
3894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
3896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_GPIO
3897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_LSE
3898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . ENCODER_MODE can be one of the following values
3900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_ENCODERMODE_NOREDIRECTION
3901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_ENCODERMODE_TIM2
3902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_ENCODERMODE_TIM3
3903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_ENCODERMODE_TIM4
3904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM16: one of the following values
3906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_GPIO
3908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_LSI
3909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_LSE
3910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_RTC
3911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_MSI
3912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_HSE_32
3913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_MCO
3914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM17: one of the following values
3916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_GPIO
3918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_MSI
3919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_HSE_32
3920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_MCO
3921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****    @endif
3922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   @if STM32L443xx
3923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM1: any combination of TI1_RMP, ADC3_RMP, ADC1_RMP where
3924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . ADC1_RMP can be one of the following values
3926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC1_RMP_NC
3927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC1_RMP_AWD1
3928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC1_RMP_AWD2
3929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_ETR_ADC1_RMP_AWD3
3930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
3932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_GPIO
3933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_COMP1
3934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM2: any combination of ITR1_RMP, ETR1_RMP, TI4_RMP where
3936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            ITR1_RMP can be one of the following values
3938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ITR1_RMP_NONE
3939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ITR1_RMP_USB_SOF
3940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . ETR1_RMP can be one of the following values
3942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETR_RMP_GPIO
3943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ETR_RMP_LSE
3944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . TI4_RMP can be one of the following values
3946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_GPIO
3947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_COMP1
3948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_COMP2
3949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI4_RMP_COMP1_COMP2
3950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM15: any combination of TI1_RMP, ENCODER_MODE where
3952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
3954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_GPIO
3955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_LSE
3956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            . . ENCODER_MODE can be one of the following values
3958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_ENCODERMODE_NOREDIRECTION
3959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_ENCODERMODE_TIM2
3960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_ENCODERMODE_TIM3
3961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_ENCODERMODE_TIM4
3962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         TIM16: one of the following values
3964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *
3965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_GPIO
3966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_LSI
3967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_LSE
3968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_RTC
3969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_MSI
3970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_HSE_32
3971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_MCO
3972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   @endif
3973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRemap(TIM_TypeDef *TIMx, uint32_t Remap)
3976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
3977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->OR1, (Remap >> TIMx_OR1_RMP_SHIFT), (Remap & TIMx_OR1_RMP_MASK));
3978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
3979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
3982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
3984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_OCREF_Clear OCREF_Clear_Management
3985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
3986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
3988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Set the OCREF clear input source
3989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note The OCxREF signal of a given channel can be cleared when a high level is applied on the O
3990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes.
3991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SMCR          OCCS                LL_TIM_SetOCRefClearInputSource
3992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
3993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  OCRefClearInputSource This parameter can be one of the following values:
3994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_NC
3995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_ETR
3996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
3997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
3998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOCRefClearInputSource(TIM_TypeDef *TIMx, uint32_t OCRefClearInputSou
3999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_OCCS, OCRefClearInputSource);
4001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
4004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_FLAG_Management FLAG-Management
4007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
4008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the update interrupt flag (UIF).
4011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_ClearFlag_UPDATE
4012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_UPDATE(TIM_TypeDef *TIMx)
4016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
4018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether update interrupt flag (UIF) is set (update interrupt is pending).
4022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_IsActiveFlag_UPDATE
4023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_UPDATE(TIM_TypeDef *TIMx)
4027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_UIF) == (TIM_SR_UIF)) ? 1UL : 0UL);
4029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 interrupt flag (CC1F).
4033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_ClearFlag_CC1
4034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1(TIM_TypeDef *TIMx)
4038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1IF));
4040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 interrupt flag (CC1F) is set (Capture/Compare 1 inte
4044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_IsActiveFlag_CC1
4045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1(TIM_TypeDef *TIMx)
4049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC1IF) == (TIM_SR_CC1IF)) ? 1UL : 0UL);
4051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 interrupt flag (CC2F).
4055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_ClearFlag_CC2
4056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2(TIM_TypeDef *TIMx)
4060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2IF));
4062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 interrupt flag (CC2F) is set (Capture/Compare 2 inte
4066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_IsActiveFlag_CC2
4067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2(TIM_TypeDef *TIMx)
4071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC2IF) == (TIM_SR_CC2IF)) ? 1UL : 0UL);
4073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 interrupt flag (CC3F).
4077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_ClearFlag_CC3
4078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3(TIM_TypeDef *TIMx)
4082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3IF));
4084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 interrupt flag (CC3F) is set (Capture/Compare 3 inte
4088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_IsActiveFlag_CC3
4089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3(TIM_TypeDef *TIMx)
4093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC3IF) == (TIM_SR_CC3IF)) ? 1UL : 0UL);
4095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 interrupt flag (CC4F).
4099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_ClearFlag_CC4
4100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4(TIM_TypeDef *TIMx)
4104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4IF));
4106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 interrupt flag (CC4F) is set (Capture/Compare 4 inte
4110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_IsActiveFlag_CC4
4111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4(TIM_TypeDef *TIMx)
4115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC4IF) == (TIM_SR_CC4IF)) ? 1UL : 0UL);
4117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 5 interrupt flag (CC5F).
4121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC5IF         LL_TIM_ClearFlag_CC5
4122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC5(TIM_TypeDef *TIMx)
4126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC5IF));
4128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 5 interrupt flag (CC5F) is set (Capture/Compare 5 inte
4132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC5IF         LL_TIM_IsActiveFlag_CC5
4133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC5(TIM_TypeDef *TIMx)
4137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC5IF) == (TIM_SR_CC5IF)) ? 1UL : 0UL);
4139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 6 interrupt flag (CC6F).
4143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC6IF         LL_TIM_ClearFlag_CC6
4144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC6(TIM_TypeDef *TIMx)
4148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC6IF));
4150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 6 interrupt flag (CC6F) is set (Capture/Compare 6 inte
4154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC6IF         LL_TIM_IsActiveFlag_CC6
4155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC6(TIM_TypeDef *TIMx)
4159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC6IF) == (TIM_SR_CC6IF)) ? 1UL : 0UL);
4161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the commutation interrupt flag (COMIF).
4165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           COMIF         LL_TIM_ClearFlag_COM
4166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_COM(TIM_TypeDef *TIMx)
4170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_COMIF));
4172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether commutation interrupt flag (COMIF) is set (commutation interrupt is pe
4176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           COMIF         LL_TIM_IsActiveFlag_COM
4177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_COM(TIM_TypeDef *TIMx)
4181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_COMIF) == (TIM_SR_COMIF)) ? 1UL : 0UL);
4183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the trigger interrupt flag (TIF).
4187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_ClearFlag_TRIG
4188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_TRIG(TIM_TypeDef *TIMx)
4192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_TIF));
4194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether trigger interrupt flag (TIF) is set (trigger interrupt is pending).
4198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_IsActiveFlag_TRIG
4199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_TRIG(TIM_TypeDef *TIMx)
4203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_TIF) == (TIM_SR_TIF)) ? 1UL : 0UL);
4205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the break interrupt flag (BIF).
4209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           BIF           LL_TIM_ClearFlag_BRK
4210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_BRK(TIM_TypeDef *TIMx)
4214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_BIF));
4216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether break interrupt flag (BIF) is set (break interrupt is pending).
4220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           BIF           LL_TIM_IsActiveFlag_BRK
4221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_BRK(TIM_TypeDef *TIMx)
4225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_BIF) == (TIM_SR_BIF)) ? 1UL : 0UL);
4227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the break 2 interrupt flag (B2IF).
4231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           B2IF          LL_TIM_ClearFlag_BRK2
4232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_BRK2(TIM_TypeDef *TIMx)
4236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_B2IF));
4238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether break 2 interrupt flag (B2IF) is set (break 2 interrupt is pending).
4242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           B2IF          LL_TIM_IsActiveFlag_BRK2
4243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_BRK2(TIM_TypeDef *TIMx)
4247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_B2IF) == (TIM_SR_B2IF)) ? 1UL : 0UL);
4249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 over-capture interrupt flag (CC1OF).
4253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_ClearFlag_CC1OVR
4254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1OVR(TIM_TypeDef *TIMx)
4258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1OF));
4260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 over-capture interrupt flag (CC1OF) is set (Capture/
4264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_IsActiveFlag_CC1OVR
4265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1OVR(TIM_TypeDef *TIMx)
4269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC1OF) == (TIM_SR_CC1OF)) ? 1UL : 0UL);
4271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 over-capture interrupt flag (CC2OF).
4275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_ClearFlag_CC2OVR
4276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2OVR(TIM_TypeDef *TIMx)
4280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2OF));
4282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 over-capture interrupt flag (CC2OF) is set (Capture/
4286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_IsActiveFlag_CC2OVR
4287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2OVR(TIM_TypeDef *TIMx)
4291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC2OF) == (TIM_SR_CC2OF)) ? 1UL : 0UL);
4293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 over-capture interrupt flag (CC3OF).
4297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_ClearFlag_CC3OVR
4298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3OVR(TIM_TypeDef *TIMx)
4302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3OF));
4304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 over-capture interrupt flag (CC3OF) is set (Capture/
4308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_IsActiveFlag_CC3OVR
4309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3OVR(TIM_TypeDef *TIMx)
4313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC3OF) == (TIM_SR_CC3OF)) ? 1UL : 0UL);
4315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 over-capture interrupt flag (CC4OF).
4319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_ClearFlag_CC4OVR
4320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4OVR(TIM_TypeDef *TIMx)
4324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4OF));
4326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 over-capture interrupt flag (CC4OF) is set (Capture/
4330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_IsActiveFlag_CC4OVR
4331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4OVR(TIM_TypeDef *TIMx)
4335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC4OF) == (TIM_SR_CC4OF)) ? 1UL : 0UL);
4337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Clear the system break interrupt flag (SBIF).
4341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           SBIF          LL_TIM_ClearFlag_SYSBRK
4342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_SYSBRK(TIM_TypeDef *TIMx)
4346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_SBIF));
4348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicate whether system break interrupt flag (SBIF) is set (system break interrupt is p
4352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll SR           SBIF          LL_TIM_IsActiveFlag_SYSBRK
4353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_SYSBRK(TIM_TypeDef *TIMx)
4357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_SBIF) == (TIM_SR_SBIF)) ? 1UL : 0UL);
4359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
4363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_IT_Management IT-Management
4366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
4367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable update interrupt (UIE).
4370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_EnableIT_UPDATE
4371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_UPDATE(TIM_TypeDef *TIMx)
4375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_UIE);
4377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable update interrupt (UIE).
4381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_DisableIT_UPDATE
4382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_UPDATE(TIM_TypeDef *TIMx)
4386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_UIE);
4388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the update interrupt (UIE) is enabled.
4392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_IsEnabledIT_UPDATE
4393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_UPDATE(TIM_TypeDef *TIMx)
4397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_UIE) == (TIM_DIER_UIE)) ? 1UL : 0UL);
4399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable capture/compare 1 interrupt (CC1IE).
4403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_EnableIT_CC1
4404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC1(TIM_TypeDef *TIMx)
4408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC1IE);
4410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable capture/compare 1  interrupt (CC1IE).
4414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_DisableIT_CC1
4415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC1(TIM_TypeDef *TIMx)
4419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC1IE);
4421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 1 interrupt (CC1IE) is enabled.
4425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_IsEnabledIT_CC1
4426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC1(TIM_TypeDef *TIMx)
4430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC1IE) == (TIM_DIER_CC1IE)) ? 1UL : 0UL);
4432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable capture/compare 2 interrupt (CC2IE).
4436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_EnableIT_CC2
4437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC2(TIM_TypeDef *TIMx)
4441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC2IE);
4443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable capture/compare 2  interrupt (CC2IE).
4447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_DisableIT_CC2
4448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC2(TIM_TypeDef *TIMx)
4452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC2IE);
4454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 2 interrupt (CC2IE) is enabled.
4458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_IsEnabledIT_CC2
4459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC2(TIM_TypeDef *TIMx)
4463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC2IE) == (TIM_DIER_CC2IE)) ? 1UL : 0UL);
4465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable capture/compare 3 interrupt (CC3IE).
4469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_EnableIT_CC3
4470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC3(TIM_TypeDef *TIMx)
4474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC3IE);
4476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable capture/compare 3  interrupt (CC3IE).
4480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_DisableIT_CC3
4481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC3(TIM_TypeDef *TIMx)
4485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC3IE);
4487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 3 interrupt (CC3IE) is enabled.
4491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_IsEnabledIT_CC3
4492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC3(TIM_TypeDef *TIMx)
4496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC3IE) == (TIM_DIER_CC3IE)) ? 1UL : 0UL);
4498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable capture/compare 4 interrupt (CC4IE).
4502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_EnableIT_CC4
4503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC4(TIM_TypeDef *TIMx)
4507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC4IE);
4509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable capture/compare 4  interrupt (CC4IE).
4513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_DisableIT_CC4
4514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC4(TIM_TypeDef *TIMx)
4518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC4IE);
4520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 4 interrupt (CC4IE) is enabled.
4524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_IsEnabledIT_CC4
4525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC4(TIM_TypeDef *TIMx)
4529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC4IE) == (TIM_DIER_CC4IE)) ? 1UL : 0UL);
4531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable commutation interrupt (COMIE).
4535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_EnableIT_COM
4536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_COM(TIM_TypeDef *TIMx)
4540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_COMIE);
4542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable commutation interrupt (COMIE).
4546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_DisableIT_COM
4547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_COM(TIM_TypeDef *TIMx)
4551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_COMIE);
4553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the commutation interrupt (COMIE) is enabled.
4557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_IsEnabledIT_COM
4558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_COM(TIM_TypeDef *TIMx)
4562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_COMIE) == (TIM_DIER_COMIE)) ? 1UL : 0UL);
4564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable trigger interrupt (TIE).
4568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_EnableIT_TRIG
4569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_TRIG(TIM_TypeDef *TIMx)
4573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_TIE);
4575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable trigger interrupt (TIE).
4579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_DisableIT_TRIG
4580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_TRIG(TIM_TypeDef *TIMx)
4584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_TIE);
4586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the trigger interrupt (TIE) is enabled.
4590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_IsEnabledIT_TRIG
4591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_TRIG(TIM_TypeDef *TIMx)
4595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_TIE) == (TIM_DIER_TIE)) ? 1UL : 0UL);
4597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable break interrupt (BIE).
4601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_EnableIT_BRK
4602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_BRK(TIM_TypeDef *TIMx)
4606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_BIE);
4608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable break interrupt (BIE).
4612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_DisableIT_BRK
4613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_BRK(TIM_TypeDef *TIMx)
4617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_BIE);
4619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the break interrupt (BIE) is enabled.
4623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_IsEnabledIT_BRK
4624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_BRK(TIM_TypeDef *TIMx)
4628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_BIE) == (TIM_DIER_BIE)) ? 1UL : 0UL);
4630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @}
4634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Management DMA-Management
4637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @{
4638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable update DMA request (UDE).
4641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_EnableDMAReq_UPDATE
4642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_UPDATE(TIM_TypeDef *TIMx)
4646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_UDE);
4648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable update DMA request (UDE).
4652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_DisableDMAReq_UPDATE
4653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_UPDATE(TIM_TypeDef *TIMx)
4657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_UDE);
4659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the update DMA request  (UDE) is enabled.
4663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_IsEnabledDMAReq_UPDATE
4664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_UPDATE(TIM_TypeDef *TIMx)
4668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_UDE) == (TIM_DIER_UDE)) ? 1UL : 0UL);
4670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable capture/compare 1 DMA request (CC1DE).
4674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_EnableDMAReq_CC1
4675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC1(TIM_TypeDef *TIMx)
4679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC1DE);
4681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable capture/compare 1  DMA request (CC1DE).
4685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_DisableDMAReq_CC1
4686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC1(TIM_TypeDef *TIMx)
4690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC1DE);
4692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 1 DMA request (CC1DE) is enabled.
4696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_IsEnabledDMAReq_CC1
4697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC1(TIM_TypeDef *TIMx)
4701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC1DE) == (TIM_DIER_CC1DE)) ? 1UL : 0UL);
4703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable capture/compare 2 DMA request (CC2DE).
4707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_EnableDMAReq_CC2
4708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC2(TIM_TypeDef *TIMx)
4712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC2DE);
4714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable capture/compare 2  DMA request (CC2DE).
4718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_DisableDMAReq_CC2
4719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC2(TIM_TypeDef *TIMx)
4723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC2DE);
4725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 2 DMA request (CC2DE) is enabled.
4729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_IsEnabledDMAReq_CC2
4730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC2(TIM_TypeDef *TIMx)
4734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC2DE) == (TIM_DIER_CC2DE)) ? 1UL : 0UL);
4736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable capture/compare 3 DMA request (CC3DE).
4740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_EnableDMAReq_CC3
4741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC3(TIM_TypeDef *TIMx)
4745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC3DE);
4747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Disable capture/compare 3  DMA request (CC3DE).
4751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_DisableDMAReq_CC3
4752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC3(TIM_TypeDef *TIMx)
4756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC3DE);
4758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 3 DMA request (CC3DE) is enabled.
4762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC3DE         LL_TIM_IsEnabledDMAReq_CC3
4763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC3(TIM_TypeDef *TIMx)
4767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   return ((READ_BIT(TIMx->DIER, TIM_DIER_CC3DE) == (TIM_DIER_CC3DE)) ? 1UL : 0UL);
4769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
4770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** 
4771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** /**
4772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @brief  Enable capture/compare 4 DMA request (CC4DE).
4773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @rmtoll DIER         CC4DE         LL_TIM_EnableDMAReq_CC4
4774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @param  TIMx Timer instance
4775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   * @retval None
4776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   */
4777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC4(TIM_TypeDef *TIMx)
4778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** {
4779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC4DE);
 129              		.loc 2 4779 0
 130 009e EB68     		ldr	r3, [r5, #12]
 131 00a0 43F48053 		orr	r3, r3, #4096
 132 00a4 EB60     		str	r3, [r5, #12]
 133              	.LVL10:
 134              	.LBE55:
 135              	.LBE54:
 254:../system/src/drivers/analog_anemometer.c **** 
 255:../system/src/drivers/analog_anemometer.c **** 	// enable DMA request for fourth channel
 256:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableDMAReq_CC4(TIM4);
 257:../system/src/drivers/analog_anemometer.c **** 
 258:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.Direction = LL_DMA_DIRECTION_PERIPH_TO_MEMORY;
 136              		.loc 1 258 0
 137 00a6 2F4A     		ldr	r2, .L3+48
 138 00a8 9460     		str	r4, [r2, #8]
 259:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.MemoryOrM2MDstAddress = (uint32_t)analog_anemometer_windspeed_pulses_time;
 139              		.loc 1 259 0
 140 00aa 5660     		str	r6, [r2, #4]
 260:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 141              		.loc 1 260 0
 142 00ac 4FF48063 		mov	r3, #1024
 143 00b0 D361     		str	r3, [r2, #28]
 261:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_INCREMENT;
 144              		.loc 1 261 0
 145 00b2 8021     		movs	r1, #128
 146 00b4 5161     		str	r1, [r2, #20]
 262:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.Mode = LL_DMA_MODE_NORMAL;
 147              		.loc 1 262 0
 148 00b6 D460     		str	r4, [r2, #12]
 263:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.NbData = ANALOG_ANEMOMETER_SPEED_PULSES_N;
 149              		.loc 1 263 0
 150 00b8 0A21     		movs	r1, #10
 151 00ba 1162     		str	r1, [r2, #32]
 264:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.PeriphOrM2MSrcAddress = (uint32_t)&TIM4->CCR3;
 152              		.loc 1 264 0
 153 00bc 2A49     		ldr	r1, .L3+52
 154 00be 1160     		str	r1, [r2]
 265:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.PeriphOrM2MSrcDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 155              		.loc 1 265 0
 156 00c0 9361     		str	r3, [r2, #24]
 266:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.PeriphOrM2MSrcIncMode = LL_DMA_MEMORY_NOINCREMENT;
 157              		.loc 1 266 0
 158 00c2 1461     		str	r4, [r2, #16]
 267:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.PeriphRequest = LL_DMA_REQUEST_6; // LL_DMAMUX_REQ_TIM4_CH3
 159              		.loc 1 267 0
 160 00c4 0623     		movs	r3, #6
 161 00c6 5362     		str	r3, [r2, #36]
 268:../system/src/drivers/analog_anemometer.c **** 
 269:../system/src/drivers/analog_anemometer.c **** 	LL_DMA_Init(DMA1, LL_DMA_CHANNEL_5, &DMA_InitStruct);
 162              		.loc 1 269 0
 163 00c8 0421     		movs	r1, #4
 164 00ca 2848     		ldr	r0, .L3+56
 165 00cc FFF7FEFF 		bl	LL_DMA_Init
 166              	.LVL11:
 167              	.LBB56:
 168              	.LBB57:
1426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 169              		.loc 2 1426 0
 170 00d0 2B68     		ldr	r3, [r5]
 171 00d2 43F00103 		orr	r3, r3, #1
 172 00d6 2B60     		str	r3, [r5]
 173              	.LVL12:
 174              	.LBE57:
 175              	.LBE56:
 176              	.LBB58:
 177              	.LBB59:
 178              		.file 3 "../system/include/cmsis/stm32l4xx/core_cm4.h"
   1:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**************************************************************************//**
   2:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @file     core_cm4.h
   3:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @version  V5.1.0
   5:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * @date     13. March 2019
   6:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
   7:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*
   8:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  10:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  12:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * not use this file except in compliance with the License.
  14:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * You may obtain a copy of the License at
  15:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  16:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *
  18:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:../system/include/cmsis/stm32l4xx/core_cm4.h ****  * limitations under the License.
  23:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  24:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  25:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined (__clang__)
  28:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
  30:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  31:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  34:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include <stdint.h>
  35:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  36:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
  37:../system/include/cmsis/stm32l4xx/core_cm4.h ****  extern "C" {
  38:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
  39:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  40:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
  41:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../system/include/cmsis/stm32l4xx/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  44:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  47:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  50:../system/include/cmsis/stm32l4xx/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../system/include/cmsis/stm32l4xx/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  53:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  54:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  55:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
  56:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                 CMSIS definitions
  57:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
  58:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
  59:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup Cortex_M4
  60:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
  61:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
  62:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  63:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include "cmsis_version.h"
  64:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  65:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* CMSIS CM4 definitions */
  66:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:../system/include/cmsis/stm32l4xx/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  71:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  73:../system/include/cmsis/stm32l4xx/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../system/include/cmsis/stm32l4xx/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
  76:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined ( __CC_ARM )
  77:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
  80:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
  81:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
  83:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
  84:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
  85:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
  86:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
  87:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
  88:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __ARM_FP
  90:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
  92:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
  93:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
  95:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
  96:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
  97:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
  98:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
  99:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 100:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __GNUC__ )
 101:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 104:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 105:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 107:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 108:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 109:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 110:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 111:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 112:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __ARMVFP__
 114:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 116:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 117:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 119:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 120:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 121:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 122:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 123:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 124:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 128:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 129:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 131:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 132:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 133:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 134:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 135:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 136:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __TASKING__ )
 137:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if defined __FPU_VFP__
 138:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 140:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 141:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 143:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 144:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 145:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 146:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 147:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 148:../system/include/cmsis/stm32l4xx/core_cm4.h **** #elif defined ( __CSMC__ )
 149:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       1U
 152:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #else
 153:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../system/include/cmsis/stm32l4xx/core_cm4.h ****       #define __FPU_USED       0U
 155:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #endif
 156:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #else
 157:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_USED         0U
 158:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 159:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 160:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 161:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 162:../system/include/cmsis/stm32l4xx/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 164:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 165:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 166:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
 167:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 168:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 169:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 171:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 173:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 176:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 177:../system/include/cmsis/stm32l4xx/core_cm4.h ****  extern "C" {
 178:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 179:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 180:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* check device defines and use defaults */
 181:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __CM4_REV
 183:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 186:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 187:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 191:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 192:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 196:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 197:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 201:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 202:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
 206:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 207:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 208:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 210:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 212:../system/include/cmsis/stm32l4xx/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:../system/include/cmsis/stm32l4xx/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
 216:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef __cplusplus
 217:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
 219:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
 221:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 224:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* following defines should be used for structure members */
 225:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 229:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 231:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 232:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 233:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
 234:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                 Register Abstraction
 235:../system/include/cmsis/stm32l4xx/core_cm4.h ****   Core Register contain:
 236:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Register
 237:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core NVIC Register
 238:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SCB Register
 239:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SysTick Register
 240:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Debug Register
 241:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core MPU Register
 242:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core FPU Register
 243:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
 244:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 245:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
 248:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 249:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 250:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Core Register type definitions.
 253:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 254:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 255:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 256:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 257:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 259:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 260:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 261:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 262:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 263:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:../system/include/cmsis/stm32l4xx/core_cm4.h **** } APSR_Type;
 274:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 275:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* APSR Register Definitions */
 276:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 279:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 282:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 285:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 288:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 291:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 294:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 295:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 296:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 298:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 299:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 300:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 301:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 302:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../system/include/cmsis/stm32l4xx/core_cm4.h **** } IPSR_Type;
 307:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 308:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* IPSR Register Definitions */
 309:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 312:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 313:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 314:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 316:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 317:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 318:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 319:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 320:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:../system/include/cmsis/stm32l4xx/core_cm4.h **** } xPSR_Type;
 335:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 336:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* xPSR Register Definitions */
 337:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 340:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 343:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 346:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 349:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 352:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 355:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 358:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 361:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 364:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 367:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 368:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 369:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 371:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef union
 372:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 373:../system/include/cmsis/stm32l4xx/core_cm4.h ****   struct
 374:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 375:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:../system/include/cmsis/stm32l4xx/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:../system/include/cmsis/stm32l4xx/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:../system/include/cmsis/stm32l4xx/core_cm4.h **** } CONTROL_Type;
 382:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 383:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* CONTROL Register Definitions */
 384:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 387:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 390:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 393:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 395:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 396:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 397:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 401:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 402:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 403:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 404:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 406:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 407:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 408:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:../system/include/cmsis/stm32l4xx/core_cm4.h **** }  NVIC_Type;
 422:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 423:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 427:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 429:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 430:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 431:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 435:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 436:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 437:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 438:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 440:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 441:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 442:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SCB_Type;
 464:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 465:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 469:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 472:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 475:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 478:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 481:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 485:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 488:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 491:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 494:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 497:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 500:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 503:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 506:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 509:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 512:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 516:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 520:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 523:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 526:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 529:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 532:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 535:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 538:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB System Control Register Definitions */
 539:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 542:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 545:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 548:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 552:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 555:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 558:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 561:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 564:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 567:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 571:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 574:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 577:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 580:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 583:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 586:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 589:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 592:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 595:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 598:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 601:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 604:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 607:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 610:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 614:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 617:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 620:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 624:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 627:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 630:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 633:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 636:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 639:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 643:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 646:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 649:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 652:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 655:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 658:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 661:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 665:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 668:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 671:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 674:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 677:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 680:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 684:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 687:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 690:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 694:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 697:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 700:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 703:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 706:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 708:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 709:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 710:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 714:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 715:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 716:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 717:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 719:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 720:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 721:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SCnSCB_Type;
 725:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 726:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 730:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 734:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 737:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 740:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 743:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 746:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 748:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 749:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 750:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 754:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 755:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 756:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 757:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 759:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 760:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 761:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:../system/include/cmsis/stm32l4xx/core_cm4.h **** } SysTick_Type;
 766:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 767:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 771:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 774:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 777:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 780:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 784:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Current Register Definitions */
 785:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 788:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 792:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 795:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 798:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 800:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 801:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 802:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 806:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 807:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 808:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 809:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 811:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 812:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 813:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  union
 814:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
 815:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:../system/include/cmsis/stm32l4xx/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[6U];
 830:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:../system/include/cmsis/stm32l4xx/core_cm4.h **** } ITM_Type;
 843:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 844:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 848:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 852:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 855:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 858:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 861:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 864:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 867:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 870:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 873:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 876:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 880:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 883:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 886:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 888:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 889:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 890:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
 894:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 895:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 896:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
 897:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
 899:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
 900:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
 901:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:../system/include/cmsis/stm32l4xx/core_cm4.h **** } DWT_Type;
 925:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 926:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Control Register Definitions */
 927:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 930:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 933:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 936:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 939:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 942:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 945:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 948:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 951:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 954:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 957:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 960:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 963:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 966:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 969:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 972:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 975:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 978:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 981:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 985:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 989:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 993:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
 997:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1001:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1005:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1009:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1012:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1015:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1018:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1021:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1024:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1027:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1030:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1033:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1035:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1036:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1037:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1041:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1042:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1043:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1044:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1046:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1047:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1048:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:../system/include/cmsis/stm32l4xx/core_cm4.h **** } TPI_Type;
1073:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1074:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1078:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1082:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1086:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1089:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1092:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1095:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1099:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1102:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1106:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1110:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1113:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1116:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1119:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1122:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1125:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1128:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1132:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1135:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1139:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1142:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1145:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1148:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1151:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1154:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1157:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1161:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1164:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1168:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1172:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1175:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1178:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1181:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1184:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1187:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1191:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1194:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1196:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1197:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1199:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1203:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1204:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1205:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1206:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1208:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1209:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1210:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:../system/include/cmsis/stm32l4xx/core_cm4.h **** } MPU_Type;
1222:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1223:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1225:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Type Register Definitions */
1226:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1229:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1232:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1235:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Control Register Definitions */
1236:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1239:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1242:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1245:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1249:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1253:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1256:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1259:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1263:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1266:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1269:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1272:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1275:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1278:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1281:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1284:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1287:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1290:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1293:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1294:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1295:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1299:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1300:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1301:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1302:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1304:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1305:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1306:../system/include/cmsis/stm32l4xx/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:../system/include/cmsis/stm32l4xx/core_cm4.h **** } FPU_Type;
1314:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1315:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1319:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1322:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1325:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1328:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1331:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1334:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1337:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1340:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1343:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1347:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1351:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1354:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1357:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1360:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1364:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1367:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1370:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1373:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1376:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1379:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1382:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1385:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1389:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1392:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1395:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1398:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1400:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1403:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1405:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1406:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1407:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1411:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1412:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1413:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1414:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1416:../system/include/cmsis/stm32l4xx/core_cm4.h **** typedef struct
1417:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1418:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:../system/include/cmsis/stm32l4xx/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:../system/include/cmsis/stm32l4xx/core_cm4.h **** } CoreDebug_Type;
1423:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1424:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1428:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1431:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1434:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1437:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1440:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1443:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1446:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1449:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1452:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1455:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1458:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1461:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1465:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1468:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1472:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1475:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1478:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1481:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1484:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1487:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1490:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1493:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1496:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1499:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1502:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1505:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1508:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1510:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1511:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1512:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1516:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1517:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1518:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1519:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return           Masked and shifted value.
1523:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1524:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1526:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1527:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1532:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1534:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1536:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1537:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1538:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1542:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1543:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1544:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1554:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1563:../system/include/cmsis/stm32l4xx/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif
1567:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1568:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1571:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*@} */
1572:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1573:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1574:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1575:../system/include/cmsis/stm32l4xx/core_cm4.h **** /*******************************************************************************
1576:../system/include/cmsis/stm32l4xx/core_cm4.h ****  *                Hardware Abstraction Layer
1577:../system/include/cmsis/stm32l4xx/core_cm4.h ****   Core Function Interface contains:
1578:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core NVIC Functions
1579:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core SysTick Functions
1580:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Debug Functions
1581:../system/include/cmsis/stm32l4xx/core_cm4.h ****   - Core Register Access Functions
1582:../system/include/cmsis/stm32l4xx/core_cm4.h ****  ******************************************************************************/
1583:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1584:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:../system/include/cmsis/stm32l4xx/core_cm4.h **** */
1586:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1587:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1588:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1589:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1591:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:../system/include/cmsis/stm32l4xx/core_cm4.h ****   @{
1595:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1596:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1597:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
1601:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
1603:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1617:../system/include/cmsis/stm32l4xx/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:../system/include/cmsis/stm32l4xx/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #endif
1621:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:../system/include/cmsis/stm32l4xx/core_cm4.h **** #else
1623:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:../system/include/cmsis/stm32l4xx/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:../system/include/cmsis/stm32l4xx/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1627:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1629:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1630:../system/include/cmsis/stm32l4xx/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:../system/include/cmsis/stm32l4xx/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1638:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1639:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1640:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Set Priority Grouping
1641:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:../system/include/cmsis/stm32l4xx/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:../system/include/cmsis/stm32l4xx/core_cm4.h ****            Only values from 0..7 are used.
1644:../system/include/cmsis/stm32l4xx/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:../system/include/cmsis/stm32l4xx/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1648:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1650:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t reg_value;
1651:../system/include/cmsis/stm32l4xx/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1653:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:../system/include/cmsis/stm32l4xx/core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:../system/include/cmsis/stm32l4xx/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:../system/include/cmsis/stm32l4xx/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:../system/include/cmsis/stm32l4xx/core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1660:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1661:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1662:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1663:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Get Priority Grouping
1664:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1667:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1669:../system/include/cmsis/stm32l4xx/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1670:../system/include/cmsis/stm32l4xx/core_cm4.h **** }
1671:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1672:../system/include/cmsis/stm32l4xx/core_cm4.h **** 
1673:../system/include/cmsis/stm32l4xx/core_cm4.h **** /**
1674:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \brief   Enable Interrupt
1675:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:../system/include/cmsis/stm32l4xx/core_cm4.h ****   \note    IRQn must not be negative.
1678:../system/include/cmsis/stm32l4xx/core_cm4.h ****  */
1679:../system/include/cmsis/stm32l4xx/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:../system/include/cmsis/stm32l4xx/core_cm4.h **** {
1681:../system/include/cmsis/stm32l4xx/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:../system/include/cmsis/stm32l4xx/core_cm4.h ****   {
1683:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __COMPILER_BARRIER();
 179              		.loc 3 1683 0
1684:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 180              		.loc 3 1684 0
 181 00d8 254E     		ldr	r6, .L3+60
 182 00da 4FF40043 		mov	r3, #32768
 183 00de 3360     		str	r3, [r6]
1685:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __COMPILER_BARRIER();
 184              		.loc 3 1685 0
 185              	.LVL13:
 186              	.LBE59:
 187              	.LBE58:
 270:../system/src/drivers/analog_anemometer.c **** 
 271:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableCounter(TIM4);
 272:../system/src/drivers/analog_anemometer.c **** 
 273:../system/src/drivers/analog_anemometer.c **** 	NVIC_EnableIRQ( DMA1_Channel5_IRQn );
 274:../system/src/drivers/analog_anemometer.c **** 
 275:../system/src/drivers/analog_anemometer.c **** 	// direction
 276:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_INPUT;
 188              		.loc 1 276 0
 189 00e0 0294     		str	r4, [sp, #8]
 277:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_2;
 190              		.loc 1 277 0
 191 00e2 0423     		movs	r3, #4
 192 00e4 0193     		str	r3, [sp, #4]
 278:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 193              		.loc 1 278 0
 194 00e6 0594     		str	r4, [sp, #20]
 279:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 195              		.loc 1 279 0
 196 00e8 0123     		movs	r3, #1
 197 00ea 0393     		str	r3, [sp, #12]
 280:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_2;
 198              		.loc 1 280 0
 199 00ec 0223     		movs	r3, #2
 200 00ee 0693     		str	r3, [sp, #24]
 281:../system/src/drivers/analog_anemometer.c **** 
 282:../system/src/drivers/analog_anemometer.c **** 	LL_GPIO_Init(GPIOD, &GPIO_InitTypeDef);
 201              		.loc 1 282 0
 202 00f0 01A9     		add	r1, sp, #4
 203 00f2 2048     		ldr	r0, .L3+64
 204 00f4 FFF7FEFF 		bl	LL_GPIO_Init
 205              	.LVL14:
 283:../system/src/drivers/analog_anemometer.c **** 
 284:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_StructInit(&TIM_InitTypeDef);
 206              		.loc 1 284 0
 207 00f8 0BA8     		add	r0, sp, #44
 208 00fa FFF7FEFF 		bl	LL_TIM_StructInit
 209              	.LVL15:
 285:../system/src/drivers/analog_anemometer.c **** 
 286:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_Init(TIM3, &TIM_InitTypeDef);
 210              		.loc 1 286 0
 211 00fe A5F58065 		sub	r5, r5, #1024
 212 0102 0BA9     		add	r1, sp, #44
 213 0104 2846     		mov	r0, r5
 214 0106 FFF7FEFF 		bl	LL_TIM_Init
 215              	.LVL16:
 216              	.LBB60:
 217              	.LBB61:
3139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 218              		.loc 2 3139 0
 219 010a AB68     		ldr	r3, [r5, #8]
 220 010c 43F48043 		orr	r3, r3, #16384
 221 0110 AB60     		str	r3, [r5, #8]
 222              	.LVL17:
 223              	.LBE61:
 224              	.LBE60:
 225              	.LBB62:
 226              	.LBB63:
3386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 227              		.loc 2 3386 0
 228 0112 AB68     		ldr	r3, [r5, #8]
 229 0114 23F43F43 		bic	r3, r3, #48896
 230 0118 43F40043 		orr	r3, r3, #32768
 231 011c AB60     		str	r3, [r5, #8]
 232              	.LVL18:
 233              	.LBE63:
 234              	.LBE62:
 235              	.LBB64:
 236              	.LBB65:
1426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 237              		.loc 2 1426 0
 238 011e 2B68     		ldr	r3, [r5]
 239 0120 43F00103 		orr	r3, r3, #1
 240 0124 2B60     		str	r3, [r5]
 241              	.LVL19:
 242              	.LBE65:
 243              	.LBE64:
 244              	.LBB66:
 245              	.LBB67:
1683:../system/include/cmsis/stm32l4xx/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 246              		.loc 3 1683 0
1684:../system/include/cmsis/stm32l4xx/core_cm4.h ****     __COMPILER_BARRIER();
 247              		.loc 3 1684 0
 248 0126 4FF00053 		mov	r3, #536870912
 249 012a 3360     		str	r3, [r6]
 250              		.loc 3 1685 0
 251              	.LVL20:
 252              	.LBE67:
 253              	.LBE66:
 287:../system/src/drivers/analog_anemometer.c **** 
 288:../system/src/drivers/analog_anemometer.c **** 	//	TIM_ETRClockMode2Config(TIM3, TIM_ExtTRGPSC_OFF, TIM_ExtTRGPolarity_Inverted, 0);
 289:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableExternalClock(TIM3);
 290:../system/src/drivers/analog_anemometer.c **** 
 291:../system/src/drivers/analog_anemometer.c **** 	// invert ETR polarity
 292:../system/src/drivers/analog_anemometer.c **** 	//TIM3->SMCR |= (1 << 15);
 293:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_ConfigETR(TIM3, LL_TIM_ETR_POLARITY_INVERTED, LL_TIM_ETR_PRESCALER_DIV1, LL_TIM_ETR_FILTER_
 294:../system/src/drivers/analog_anemometer.c **** 
 295:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableCounter(TIM3);
 296:../system/src/drivers/analog_anemometer.c **** 
 297:../system/src/drivers/analog_anemometer.c **** 	NVIC_EnableIRQ( TIM3_IRQn );
 298:../system/src/drivers/analog_anemometer.c **** #endif
 299:../system/src/drivers/analog_anemometer.c **** 
 300:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_timer_has_been_fired = 0;
 254              		.loc 1 300 0
 255 012c 124B     		ldr	r3, .L3+68
 256 012e 1C70     		strb	r4, [r3]
 301:../system/src/drivers/analog_anemometer.c **** 
 302:../system/src/drivers/analog_anemometer.c **** 	return;
 303:../system/src/drivers/analog_anemometer.c **** }
 257              		.loc 1 303 0
 258 0130 10B0     		add	sp, sp, #64
 259              		.cfi_def_cfa_offset 16
 260              		@ sp needed
 261 0132 70BD     		pop	{r4, r5, r6, pc}
 262              	.L4:
 263              		.align	2
 264              	.L3:
 265 0134 00000000 		.word	.LANCHOR0
 266 0138 6073FFFF 		.word	-36000
 267 013c 00D68AEA 		.word	-360000000
 268 0140 00000000 		.word	.LANCHOR1
 269 0144 00C1C500 		.word	12960000
 270 0148 F0F1FFFF 		.word	-3600
 271 014c 00000000 		.word	.LANCHOR2
 272 0150 00000000 		.word	.LANCHOR3
 273 0154 00000000 		.word	analog_anemometer_windspeed_pulses_time
 274 0158 00000000 		.word	analog_anemometer_time_between_pulses
 275 015c 00000000 		.word	analog_anemometer_direction_timer_values
 276 0160 00080040 		.word	1073743872
 277 0164 00000000 		.word	DMA_InitStruct
 278 0168 3C080040 		.word	1073743932
 279 016c 00000240 		.word	1073872896
 280 0170 00E100E0 		.word	-536813312
 281 0174 000C0048 		.word	1207962624
 282 0178 00000000 		.word	.LANCHOR4
 283              		.cfi_endproc
 284              	.LFE702:
 286              		.section	.text.analog_anemometer_timer_irq,"ax",%progbits
 287              		.align	1
 288              		.global	analog_anemometer_timer_irq
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	analog_anemometer_timer_irq:
 295              	.LFB703:
 304:../system/src/drivers/analog_anemometer.c **** 
 305:../system/src/drivers/analog_anemometer.c **** void analog_anemometer_timer_irq(void) {
 296              		.loc 1 305 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 306:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_timer_has_been_fired = 1;
 301              		.loc 1 306 0
 302 0000 014B     		ldr	r3, .L6
 303 0002 0122     		movs	r2, #1
 304 0004 1A70     		strb	r2, [r3]
 307:../system/src/drivers/analog_anemometer.c **** }
 305              		.loc 1 307 0
 306 0006 7047     		bx	lr
 307              	.L7:
 308              		.align	2
 309              	.L6:
 310 0008 00000000 		.word	.LANCHOR4
 311              		.cfi_endproc
 312              	.LFE703:
 314              		.section	.text.analog_anemometer_dma_irq,"ax",%progbits
 315              		.align	1
 316              		.global	analog_anemometer_dma_irq
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	analog_anemometer_dma_irq:
 323              	.LFB704:
 308:../system/src/drivers/analog_anemometer.c **** 
 309:../system/src/drivers/analog_anemometer.c **** void analog_anemometer_dma_irq(void) {
 324              		.loc 1 309 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 16
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 30B5     		push	{r4, r5, lr}
 329              		.cfi_def_cfa_offset 12
 330              		.cfi_offset 4, -12
 331              		.cfi_offset 5, -8
 332              		.cfi_offset 14, -4
 333 0002 85B0     		sub	sp, sp, #20
 334              		.cfi_def_cfa_offset 32
 335              	.LVL21:
 310:../system/src/drivers/analog_anemometer.c **** 	int i = 0;
 311:../system/src/drivers/analog_anemometer.c **** 	uint16_t pulse_ln = 0;
 312:../system/src/drivers/analog_anemometer.c **** 	uint16_t previous_pulse_ln = 0;
 313:../system/src/drivers/analog_anemometer.c **** 	uint16_t shorter_pulse = 0;
 314:../system/src/drivers/analog_anemometer.c **** 	volatile uint16_t minimum_pulse_ln = 60000;
 336              		.loc 1 314 0
 337 0004 4EF66022 		movw	r2, #60000
 338 0008 ADF80E20 		strh	r2, [sp, #14]	@ movhi
 315:../system/src/drivers/analog_anemometer.c **** 	volatile uint16_t previous_minimum_pulse_ln = 60000;	// first value bigger than minimal one
 339              		.loc 1 315 0
 340 000c ADF80C20 		strh	r2, [sp, #12]	@ movhi
 316:../system/src/drivers/analog_anemometer.c **** 	volatile uint16_t maximum_pulse_ln = 0;
 341              		.loc 1 316 0
 342 0010 0023     		movs	r3, #0
 343 0012 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 317:../system/src/drivers/analog_anemometer.c **** 	volatile uint16_t previous_maximum_pulse_ln = 0;		//
 344              		.loc 1 317 0
 345 0016 ADF80830 		strh	r3, [sp, #8]	@ movhi
 318:../system/src/drivers/analog_anemometer.c **** 	volatile uint16_t slew_rate_limit = 60000;
 346              		.loc 1 318 0
 347 001a ADF80620 		strh	r2, [sp, #6]	@ movhi
 319:../system/src/drivers/analog_anemometer.c **** 
 320:../system/src/drivers/analog_anemometer.c **** 	// resetting flags
 321:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_slew_limit_fired = 0;
 348              		.loc 1 321 0
 349 001e 7E4A     		ldr	r2, .L48
 350 0020 1370     		strb	r3, [r2]
 322:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_deboucing_fired = 0;
 351              		.loc 1 322 0
 352 0022 7E4A     		ldr	r2, .L48+4
 353 0024 1370     		strb	r3, [r2]
 323:../system/src/drivers/analog_anemometer.c **** 
 324:../system/src/drivers/analog_anemometer.c **** 	// checking if timer overflowed (raised an iterrupt)
 325:../system/src/drivers/analog_anemometer.c **** 	if (analog_anemometer_timer_has_been_fired == 1) {
 354              		.loc 1 325 0
 355 0026 7E4B     		ldr	r3, .L48+8
 356 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 357 002a 012B     		cmp	r3, #1
 358 002c 0ED0     		beq	.L42
 359              	.LBB68:
 360              	.LBB69:
 361              		.file 4 "../include/LedConfig.h"
   1:../include/LedConfig.h **** /*
   2:../include/LedConfig.h ****  * LedConfig.h
   3:../include/LedConfig.h ****  *
   4:../include/LedConfig.h ****  *  Created on: 05.07.2017
   5:../include/LedConfig.h ****  *      Author: mateusz
   6:../include/LedConfig.h ****  */
   7:../include/LedConfig.h **** 
   8:../include/LedConfig.h **** #ifndef LEDCONFIG_H_
   9:../include/LedConfig.h **** #define LEDCONFIG_H_
  10:../include/LedConfig.h **** 
  11:../include/LedConfig.h **** // PC8 - LED1 - upper
  12:../include/LedConfig.h **** // PC9 - LED2 - lower
  13:../include/LedConfig.h **** 
  14:../include/LedConfig.h **** #ifdef STM32F10X_MD_VL
  15:../include/LedConfig.h **** #include <stm32f10x.h>
  16:../include/LedConfig.h **** #endif
  17:../include/LedConfig.h **** #ifdef STM32L471xx
  18:../include/LedConfig.h **** #include <stm32l4xx.h>
  19:../include/LedConfig.h **** #include <stm32l4xx_ll_gpio.h>
  20:../include/LedConfig.h **** #endif
  21:../include/LedConfig.h **** 
  22:../include/LedConfig.h **** #include <stdint.h>
  23:../include/LedConfig.h **** #include <stdbool.h>
  24:../include/LedConfig.h **** 
  25:../include/LedConfig.h **** #define BLINK_DURATION_MSEC 		20 * BLINK_MSEC_PER_SVC_CALL
  26:../include/LedConfig.h **** #define BLINK_MSEC_PER_SVC_CALL 	10
  27:../include/LedConfig.h **** 
  28:../include/LedConfig.h **** /* C++ detection */
  29:../include/LedConfig.h **** #ifdef __cplusplus
  30:../include/LedConfig.h **** extern "C" {
  31:../include/LedConfig.h **** #endif
  32:../include/LedConfig.h **** 
  33:../include/LedConfig.h **** extern uint8_t led_blinking_led2;
  34:../include/LedConfig.h **** extern uint8_t led_blinking_led1;
  35:../include/LedConfig.h **** 
  36:../include/LedConfig.h **** void led_config(void);
  37:../include/LedConfig.h **** void led_init(void);
  38:../include/LedConfig.h **** void led_service_blink(void);
  39:../include/LedConfig.h **** 
  40:../include/LedConfig.h **** #ifdef STM32F10X_MD_VL
  41:../include/LedConfig.h **** inline void led_control_led1_upper(bool _in) {
  42:../include/LedConfig.h **** 	if (_in == true) {
  43:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
  44:../include/LedConfig.h **** 	}
  45:../include/LedConfig.h **** 	else {
  46:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
  47:../include/LedConfig.h **** 	}
  48:../include/LedConfig.h **** }
  49:../include/LedConfig.h **** 
  50:../include/LedConfig.h **** inline void led_control_led2_bottom(bool _in) {
  51:../include/LedConfig.h **** 	if (_in == true) {
  52:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
  53:../include/LedConfig.h **** 	}
  54:../include/LedConfig.h **** 	else {
  55:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
  56:../include/LedConfig.h **** 	}
  57:../include/LedConfig.h **** }
  58:../include/LedConfig.h **** 
  59:../include/LedConfig.h **** inline void led_flip_led1_upper(void) {
  60:../include/LedConfig.h **** 	if ((GPIOC->ODR & GPIO_ODR_ODR8)  == GPIO_ODR_ODR8) {
  61:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
  62:../include/LedConfig.h **** 	}
  63:../include/LedConfig.h **** 	else {
  64:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
  65:../include/LedConfig.h **** 	}
  66:../include/LedConfig.h **** }
  67:../include/LedConfig.h **** 
  68:../include/LedConfig.h **** inline void led_flip_led2_bottom(void) {
  69:../include/LedConfig.h **** 	if ((GPIOC->ODR & GPIO_ODR_ODR9)  == GPIO_ODR_ODR9) {
  70:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
  71:../include/LedConfig.h **** 	}
  72:../include/LedConfig.h **** 	else {
  73:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
  74:../include/LedConfig.h **** 	}
  75:../include/LedConfig.h **** }
  76:../include/LedConfig.h **** 
  77:../include/LedConfig.h **** inline void led_blink_led1_upper(void) {
  78:../include/LedConfig.h **** 	led_blinking_led1 = BLINK_DURATION_MSEC;
  79:../include/LedConfig.h **** 
  80:../include/LedConfig.h **** 	led_flip_led1_upper();
  81:../include/LedConfig.h **** }
  82:../include/LedConfig.h **** 
  83:../include/LedConfig.h **** inline void led_blink_led2_botoom(void) {
  84:../include/LedConfig.h **** 	led_blinking_led2 = BLINK_DURATION_MSEC;
  85:../include/LedConfig.h **** 
  86:../include/LedConfig.h **** 	led_flip_led2_bottom();
  87:../include/LedConfig.h **** 
  88:../include/LedConfig.h **** }
  89:../include/LedConfig.h **** #endif
  90:../include/LedConfig.h **** 
  91:../include/LedConfig.h **** #ifdef STM32L471xx
  92:../include/LedConfig.h **** inline void led_control_led1_upper(bool _in) {
  93:../include/LedConfig.h **** 	if (_in == true) {
  94:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
  95:../include/LedConfig.h **** 	}
  96:../include/LedConfig.h **** 	else {
  97:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
  98:../include/LedConfig.h **** 	}
  99:../include/LedConfig.h **** }
 100:../include/LedConfig.h **** 
 101:../include/LedConfig.h **** inline void led_control_led2_bottom(bool _in) {
 102:../include/LedConfig.h **** 	if (_in == true) {
 103:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
 104:../include/LedConfig.h **** 	}
 105:../include/LedConfig.h **** 	else {
 106:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
 107:../include/LedConfig.h **** 	}
 108:../include/LedConfig.h **** }
 109:../include/LedConfig.h **** 
 110:../include/LedConfig.h **** inline void led_flip_led1_upper(void) {
 111:../include/LedConfig.h **** 	if ((GPIOC->ODR & GPIO_ODR_ODR_8)  == GPIO_ODR_ODR_8) {
 112:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
 113:../include/LedConfig.h **** 	}
 114:../include/LedConfig.h **** 	else {
 115:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
 116:../include/LedConfig.h **** 	}
 117:../include/LedConfig.h **** }
 118:../include/LedConfig.h **** 
 119:../include/LedConfig.h **** inline void led_flip_led2_bottom(void) {
 120:../include/LedConfig.h **** 	if ((GPIOC->ODR & GPIO_ODR_ODR_9)  == GPIO_ODR_ODR_9) {
 121:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
 122:../include/LedConfig.h **** 	}
 123:../include/LedConfig.h **** 	else {
 124:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
 125:../include/LedConfig.h **** 	}
 126:../include/LedConfig.h **** }
 127:../include/LedConfig.h **** 
 128:../include/LedConfig.h **** inline void led_blink_led1_upper(void) {
 129:../include/LedConfig.h **** 	led_blinking_led1 = BLINK_DURATION_MSEC;
 130:../include/LedConfig.h **** 
 131:../include/LedConfig.h **** 	led_flip_led1_upper();
 132:../include/LedConfig.h **** }
 133:../include/LedConfig.h **** 
 134:../include/LedConfig.h **** inline void led_blink_led2_botoom(void) {
 135:../include/LedConfig.h **** 	led_blinking_led2 = BLINK_DURATION_MSEC;
 362              		.loc 4 135 0
 363 002e 7D4B     		ldr	r3, .L48+12
 364 0030 C822     		movs	r2, #200
 365 0032 1A70     		strb	r2, [r3]
 366              	.LBB70:
 367              	.LBB71:
 120:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
 368              		.loc 4 120 0
 369 0034 7C4B     		ldr	r3, .L48+16
 370 0036 5B69     		ldr	r3, [r3, #20]
 371 0038 13F4007F 		tst	r3, #512
 372 003c 18D0     		beq	.L13
 121:../include/LedConfig.h **** 	}
 373              		.loc 4 121 0
 374 003e 7A4A     		ldr	r2, .L48+16
 375 0040 9369     		ldr	r3, [r2, #24]
 376 0042 43F00073 		orr	r3, r3, #33554432
 377 0046 9361     		str	r3, [r2, #24]
 378              	.L14:
 379              	.LBE71:
 380              	.LBE70:
 381              	.LBE69:
 382              	.LBE68:
 326:../system/src/drivers/analog_anemometer.c **** 		rte_wx_windspeed_pulses = 1;
 327:../system/src/drivers/analog_anemometer.c **** 
 328:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_timer_has_been_fired = 0;
 329:../system/src/drivers/analog_anemometer.c **** 
 330:../system/src/drivers/analog_anemometer.c **** 		// reseting array to default values
 331:../system/src/drivers/analog_anemometer.c **** 		for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N; i++)
 383              		.loc 1 331 0 discriminator 1
 384 0048 0023     		movs	r3, #0
 385 004a 22E0     		b	.L15
 386              	.L42:
 326:../system/src/drivers/analog_anemometer.c **** 		rte_wx_windspeed_pulses = 1;
 387              		.loc 1 326 0
 388 004c 774B     		ldr	r3, .L48+20
 389 004e 0122     		movs	r2, #1
 390 0050 1A80     		strh	r2, [r3]	@ movhi
 328:../system/src/drivers/analog_anemometer.c **** 
 391              		.loc 1 328 0
 392 0052 0023     		movs	r3, #0
 393 0054 724A     		ldr	r2, .L48+8
 394 0056 1370     		strb	r3, [r2]
 395              	.LVL22:
 396              	.L10:
 397              		.loc 1 331 0 discriminator 1
 398 0058 092B     		cmp	r3, #9
 399 005a 05DC     		bgt	.L43
 332:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_windspeed_pulses_time[i] = 0;
 400              		.loc 1 332 0 discriminator 3
 401 005c 744A     		ldr	r2, .L48+24
 402 005e 0021     		movs	r1, #0
 403 0060 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 331:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_windspeed_pulses_time[i] = 0;
 404              		.loc 1 331 0 discriminator 3
 405 0064 0133     		adds	r3, r3, #1
 406              	.LVL23:
 407 0066 F7E7     		b	.L10
 408              	.L43:
 333:../system/src/drivers/analog_anemometer.c **** 
 334:../system/src/drivers/analog_anemometer.c **** 		// restarting the DMA channel
 335:../system/src/drivers/analog_anemometer.c **** 		dma_helper_start_ch7(&DMA_InitStruct);
 409              		.loc 1 335 0
 410 0068 7248     		ldr	r0, .L48+28
 411 006a FFF7FEFF 		bl	dma_helper_start_ch7
 412              	.LVL24:
 336:../system/src/drivers/analog_anemometer.c **** 
 337:../system/src/drivers/analog_anemometer.c **** 		return;
 413              		.loc 1 337 0
 414 006e D1E0     		b	.L8
 415              	.LVL25:
 416              	.L13:
 417              	.LBB75:
 418              	.LBB74:
 419              	.LBB73:
 420              	.LBB72:
 124:../include/LedConfig.h **** 	}
 421              		.loc 4 124 0
 422 0070 6D4A     		ldr	r2, .L48+16
 423 0072 9369     		ldr	r3, [r2, #24]
 424 0074 43F40073 		orr	r3, r3, #512
 425 0078 9361     		str	r3, [r2, #24]
 426 007a E5E7     		b	.L14
 427              	.LVL26:
 428              	.L16:
 429              	.LBE72:
 430              	.LBE73:
 431              	.LBE74:
 432              	.LBE75:
 338:../system/src/drivers/analog_anemometer.c **** 	}
 339:../system/src/drivers/analog_anemometer.c **** 
 340:../system/src/drivers/analog_anemometer.c **** 	// blinking the led - led will blink every 10 pulses, so if wind is 1m/s it will blink every 10 se
 341:../system/src/drivers/analog_anemometer.c **** 	led_blink_led2_botoom();
 342:../system/src/drivers/analog_anemometer.c **** 
 343:../system/src/drivers/analog_anemometer.c **** 	// calculating time between pulses
 344:../system/src/drivers/analog_anemometer.c **** 	for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N - 1; i++) {
 345:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_windspeed_pulses_time[i + 1] -
 433              		.loc 1 345 0 discriminator 3
 434 007c 591C     		adds	r1, r3, #1
 435 007e 6C48     		ldr	r0, .L48+24
 436 0080 30F81120 		ldrh	r2, [r0, r1, lsl #1]
 346:../system/src/drivers/analog_anemometer.c **** 				analog_anemometer_windspeed_pulses_time[i];
 437              		.loc 1 346 0 discriminator 3
 438 0084 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 345:../system/src/drivers/analog_anemometer.c **** 				analog_anemometer_windspeed_pulses_time[i];
 439              		.loc 1 345 0 discriminator 3
 440 0088 121A     		subs	r2, r2, r0
 441              	.LVL27:
 347:../system/src/drivers/analog_anemometer.c **** 
 348:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_time_between_pulses[i] = pulse_ln;
 442              		.loc 1 348 0 discriminator 3
 443 008a 6B48     		ldr	r0, .L48+32
 444 008c 20F81320 		strh	r2, [r0, r3, lsl #1]	@ movhi
 445              	.LVL28:
 344:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_windspeed_pulses_time[i + 1] -
 446              		.loc 1 344 0 discriminator 3
 447 0090 0B46     		mov	r3, r1
 448              	.LVL29:
 449              	.L15:
 344:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_windspeed_pulses_time[i + 1] -
 450              		.loc 1 344 0 is_stmt 0 discriminator 1
 451 0092 082B     		cmp	r3, #8
 452 0094 F2DD     		ble	.L16
 349:../system/src/drivers/analog_anemometer.c **** 	}
 350:../system/src/drivers/analog_anemometer.c **** 
 351:../system/src/drivers/analog_anemometer.c **** 	// debouncing captured pulse times
 352:../system/src/drivers/analog_anemometer.c **** 	for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N - 1; i++) {
 453              		.loc 1 352 0 is_stmt 1
 454 0096 0023     		movs	r3, #0
 455              	.LVL30:
 456 0098 00E0     		b	.L17
 457              	.LVL31:
 458              	.L18:
 459              		.loc 1 352 0 is_stmt 0 discriminator 2
 460 009a 0133     		adds	r3, r3, #1
 461              	.LVL32:
 462              	.L17:
 463              		.loc 1 352 0 discriminator 1
 464 009c 082B     		cmp	r3, #8
 465 009e 0CDC     		bgt	.L44
 353:../system/src/drivers/analog_anemometer.c **** 		if (analog_anemometer_time_between_pulses[i] < MINUM_PULSE_LN) {
 466              		.loc 1 353 0 is_stmt 1
 467 00a0 654A     		ldr	r2, .L48+32
 468 00a2 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 469 00a6 0E2A     		cmp	r2, #14
 470 00a8 F7D8     		bhi	.L18
 354:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_time_between_pulses[i] = 0;
 471              		.loc 1 354 0
 472 00aa 634A     		ldr	r2, .L48+32
 473 00ac 0021     		movs	r1, #0
 474 00ae 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 355:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired = 1;
 475              		.loc 1 355 0
 476 00b2 5A4A     		ldr	r2, .L48+4
 477 00b4 0121     		movs	r1, #1
 478 00b6 1170     		strb	r1, [r2]
 479 00b8 EFE7     		b	.L18
 480              	.L44:
 356:../system/src/drivers/analog_anemometer.c **** 		}
 357:../system/src/drivers/analog_anemometer.c **** 	}
 358:../system/src/drivers/analog_anemometer.c **** 
 359:../system/src/drivers/analog_anemometer.c **** 	// limiting slew rate
 360:../system/src/drivers/analog_anemometer.c **** 	for (i = 1; i < ANALOG_ANEMOMETER_SPEED_PULSES_N; i++) {
 481              		.loc 1 360 0
 482 00ba 0123     		movs	r3, #1
 483              	.LVL33:
 484 00bc 1EE0     		b	.L20
 485              	.LVL34:
 486              	.L40:
 487              	.LBB76:
 361:../system/src/drivers/analog_anemometer.c **** 		previous_pulse_ln = analog_anemometer_time_between_pulses[i - 1];
 362:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_time_between_pulses[i];
 363:../system/src/drivers/analog_anemometer.c **** 
 364:../system/src/drivers/analog_anemometer.c **** 		// checking which inter-pulse time is shorter
 365:../system/src/drivers/analog_anemometer.c **** 		if (previous_pulse_ln < pulse_ln)
 366:../system/src/drivers/analog_anemometer.c **** 			shorter_pulse = previous_pulse_ln;
 367:../system/src/drivers/analog_anemometer.c **** 		else
 368:../system/src/drivers/analog_anemometer.c **** 			shorter_pulse = pulse_ln;
 488              		.loc 1 368 0
 489 00be 0246     		mov	r2, r0
 490 00c0 27E0     		b	.L21
 491              	.LVL35:
 492              	.L22:
 369:../system/src/drivers/analog_anemometer.c **** 
 370:../system/src/drivers/analog_anemometer.c **** 		// calculating maximum slew rate basing on current inter pulse ln
 371:../system/src/drivers/analog_anemometer.c **** 		if (shorter_pulse >= 1000) {
 372:../system/src/drivers/analog_anemometer.c **** 			// 1 meter per second
 373:../system/src/drivers/analog_anemometer.c **** 			slew_rate_limit = shorter_pulse;
 374:../system/src/drivers/analog_anemometer.c **** 		}
 375:../system/src/drivers/analog_anemometer.c **** 		else if (shorter_pulse >= 200 && shorter_pulse < 1000) {
 493              		.loc 1 375 0
 494 00c2 A2F1C805 		sub	r5, r2, #200
 495 00c6 ADB2     		uxth	r5, r5
 496 00c8 B5F5487F 		cmp	r5, #800
 497 00cc 03D2     		bcs	.L24
 376:../system/src/drivers/analog_anemometer.c **** 			// from 1 to 5 meters per second
 377:../system/src/drivers/analog_anemometer.c **** 			slew_rate_limit = shorter_pulse >> 1;
 498              		.loc 1 377 0
 499 00ce 5208     		lsrs	r2, r2, #1
 500              	.LVL36:
 501 00d0 ADF80620 		strh	r2, [sp, #6]	@ movhi
 502 00d4 22E0     		b	.L23
 503              	.LVL37:
 504              	.L24:
 378:../system/src/drivers/analog_anemometer.c **** 		}
 379:../system/src/drivers/analog_anemometer.c **** 		else {
 380:../system/src/drivers/analog_anemometer.c **** 			// more than 5 meters per second
 381:../system/src/drivers/analog_anemometer.c **** 			slew_rate_limit = shorter_pulse >> 2;
 505              		.loc 1 381 0
 506 00d6 9208     		lsrs	r2, r2, #2
 507              	.LVL38:
 508 00d8 ADF80620 		strh	r2, [sp, #6]	@ movhi
 509 00dc 1EE0     		b	.L23
 510              	.LVL39:
 511              	.L26:
 382:../system/src/drivers/analog_anemometer.c **** 		}
 383:../system/src/drivers/analog_anemometer.c **** 
 384:../system/src/drivers/analog_anemometer.c **** 		// skipping pulses erased by debouncing
 385:../system/src/drivers/analog_anemometer.c **** 		if (pulse_ln == 0 || previous_pulse_ln == 0) {
 386:../system/src/drivers/analog_anemometer.c **** 			continue;
 387:../system/src/drivers/analog_anemometer.c **** 		}
 388:../system/src/drivers/analog_anemometer.c **** 
 389:../system/src/drivers/analog_anemometer.c **** 		int32_t diff = pulse_ln - previous_pulse_ln;
 390:../system/src/drivers/analog_anemometer.c **** 
 391:../system/src/drivers/analog_anemometer.c **** 		// if current inter-pulse time is much longer than previous (some pulse is missing?)
 392:../system/src/drivers/analog_anemometer.c **** 		if ( diff > slew_rate_limit ) {
 393:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_time_between_pulses[i] = previous_pulse_ln + ((uint32_t)slew_rate_limit);
 394:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired = 1;
 395:../system/src/drivers/analog_anemometer.c **** 		}
 396:../system/src/drivers/analog_anemometer.c **** 		// if previous inter-pulse time is much longer than current
 397:../system/src/drivers/analog_anemometer.c **** 		else if (diff < -slew_rate_limit){
 512              		.loc 1 397 0
 513 00de BDF80620 		ldrh	r2, [sp, #6]
 514 00e2 5242     		negs	r2, r2
 515 00e4 AA42     		cmp	r2, r5
 516 00e6 08DD     		ble	.L25
 398:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_time_between_pulses[i - 1] = pulse_ln + ((uint32_t)slew_rate_limit);
 517              		.loc 1 398 0
 518 00e8 BDF80620 		ldrh	r2, [sp, #6]
 519 00ec 1044     		add	r0, r0, r2
 520              	.LVL40:
 521 00ee 524A     		ldr	r2, .L48+32
 522              	.LVL41:
 523 00f0 22F81400 		strh	r0, [r2, r4, lsl #1]	@ movhi
 524              	.LVL42:
 399:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired = 1;
 525              		.loc 1 399 0
 526 00f4 484A     		ldr	r2, .L48
 527 00f6 0121     		movs	r1, #1
 528              	.LVL43:
 529 00f8 1170     		strb	r1, [r2]
 530              	.LVL44:
 531              	.L25:
 532              	.LBE76:
 360:../system/src/drivers/analog_anemometer.c **** 		previous_pulse_ln = analog_anemometer_time_between_pulses[i - 1];
 533              		.loc 1 360 0 discriminator 2
 534 00fa 0133     		adds	r3, r3, #1
 535              	.LVL45:
 536              	.L20:
 360:../system/src/drivers/analog_anemometer.c **** 		previous_pulse_ln = analog_anemometer_time_between_pulses[i - 1];
 537              		.loc 1 360 0 is_stmt 0 discriminator 1
 538 00fc 092B     		cmp	r3, #9
 539 00fe 21DC     		bgt	.L45
 540              	.LBB77:
 361:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_time_between_pulses[i];
 541              		.loc 1 361 0 is_stmt 1
 542 0100 5C1E     		subs	r4, r3, #1
 543 0102 4D4A     		ldr	r2, .L48+32
 544 0104 32F81410 		ldrh	r1, [r2, r4, lsl #1]
 545              	.LVL46:
 362:../system/src/drivers/analog_anemometer.c **** 
 546              		.loc 1 362 0
 547 0108 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 548              	.LVL47:
 365:../system/src/drivers/analog_anemometer.c **** 			shorter_pulse = previous_pulse_ln;
 549              		.loc 1 365 0
 550 010c 8142     		cmp	r1, r0
 551 010e D6D2     		bcs	.L40
 366:../system/src/drivers/analog_anemometer.c **** 		else
 552              		.loc 1 366 0
 553 0110 0A46     		mov	r2, r1
 554              	.L21:
 555              	.LVL48:
 371:../system/src/drivers/analog_anemometer.c **** 			// 1 meter per second
 556              		.loc 1 371 0
 557 0112 B2F57A7F 		cmp	r2, #1000
 558 0116 D4D3     		bcc	.L22
 373:../system/src/drivers/analog_anemometer.c **** 		}
 559              		.loc 1 373 0
 560 0118 ADF80620 		strh	r2, [sp, #6]	@ movhi
 561              	.LVL49:
 562              	.L23:
 385:../system/src/drivers/analog_anemometer.c **** 			continue;
 563              		.loc 1 385 0
 564 011c 0028     		cmp	r0, #0
 565 011e ECD0     		beq	.L25
 385:../system/src/drivers/analog_anemometer.c **** 			continue;
 566              		.loc 1 385 0 is_stmt 0 discriminator 1
 567 0120 0029     		cmp	r1, #0
 568 0122 EAD0     		beq	.L25
 389:../system/src/drivers/analog_anemometer.c **** 
 569              		.loc 1 389 0 is_stmt 1
 570 0124 451A     		subs	r5, r0, r1
 571              	.LVL50:
 392:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_time_between_pulses[i] = previous_pulse_ln + ((uint32_t)slew_rate_limit);
 572              		.loc 1 392 0
 573 0126 BDF80620 		ldrh	r2, [sp, #6]
 574 012a 92B2     		uxth	r2, r2
 575 012c AA42     		cmp	r2, r5
 576 012e D6DA     		bge	.L26
 393:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired = 1;
 577              		.loc 1 393 0
 578 0130 BDF80620 		ldrh	r2, [sp, #6]
 579 0134 1144     		add	r1, r1, r2
 580              	.LVL51:
 581 0136 404A     		ldr	r2, .L48+32
 582              	.LVL52:
 583 0138 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 584              	.LVL53:
 394:../system/src/drivers/analog_anemometer.c **** 		}
 585              		.loc 1 394 0
 586 013c 364A     		ldr	r2, .L48
 587 013e 0121     		movs	r1, #1
 588 0140 1170     		strb	r1, [r2]
 589 0142 DAE7     		b	.L25
 590              	.LVL54:
 591              	.L45:
 592              	.LBE77:
 400:../system/src/drivers/analog_anemometer.c **** 		}
 401:../system/src/drivers/analog_anemometer.c **** 		// if this pulse time is ok do nothing.
 402:../system/src/drivers/analog_anemometer.c **** 		else {
 403:../system/src/drivers/analog_anemometer.c **** 			;
 404:../system/src/drivers/analog_anemometer.c **** 		}
 405:../system/src/drivers/analog_anemometer.c **** 	}
 406:../system/src/drivers/analog_anemometer.c **** 
 407:../system/src/drivers/analog_anemometer.c **** 	minimum_pulse_ln = 60000;
 593              		.loc 1 407 0
 594 0144 4EF66023 		movw	r3, #60000
 595              	.LVL55:
 596 0148 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 408:../system/src/drivers/analog_anemometer.c **** 	previous_minimum_pulse_ln = 60000;
 597              		.loc 1 408 0
 598 014c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 409:../system/src/drivers/analog_anemometer.c **** 
 410:../system/src/drivers/analog_anemometer.c **** 	maximum_pulse_ln = 0;
 599              		.loc 1 410 0
 600 0150 0023     		movs	r3, #0
 601 0152 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 411:../system/src/drivers/analog_anemometer.c **** 	previous_maximum_pulse_ln = 0;
 602              		.loc 1 411 0
 603 0156 ADF80830 		strh	r3, [sp, #8]	@ movhi
 604              	.LVL56:
 412:../system/src/drivers/analog_anemometer.c **** 
 413:../system/src/drivers/analog_anemometer.c **** 	// find maximum and minimum values within inter-pulses times
 414:../system/src/drivers/analog_anemometer.c **** 	for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N; i++) {
 605              		.loc 1 414 0
 606 015a 0AE0     		b	.L28
 607              	.LVL57:
 608              	.L47:
 415:../system/src/drivers/analog_anemometer.c **** 
 416:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_time_between_pulses[i];
 417:../system/src/drivers/analog_anemometer.c **** 
 418:../system/src/drivers/analog_anemometer.c **** 		// skipping pulses erased by debouncing
 419:../system/src/drivers/analog_anemometer.c **** 		if (pulse_ln == 0)
 420:../system/src/drivers/analog_anemometer.c **** 			continue;
 421:../system/src/drivers/analog_anemometer.c **** 
 422:../system/src/drivers/analog_anemometer.c **** 		// find maximum and minimum values within pulses duration
 423:../system/src/drivers/analog_anemometer.c **** 		if (pulse_ln < minimum_pulse_ln) {
 424:../system/src/drivers/analog_anemometer.c **** 
 425:../system/src/drivers/analog_anemometer.c **** 			// check if 'previous' has a default value of 60k
 426:../system/src/drivers/analog_anemometer.c **** 			if (previous_minimum_pulse_ln == 60000) {
 427:../system/src/drivers/analog_anemometer.c **** 				// if yes store the current value to handle a situation than whole
 428:../system/src/drivers/analog_anemometer.c **** 				// circular buffer conssit the same value
 429:../system/src/drivers/analog_anemometer.c **** 				previous_minimum_pulse_ln = pulse_ln;
 609              		.loc 1 429 0
 610 015c ADF80C20 		strh	r2, [sp, #12]	@ movhi
 611 0160 1FE0     		b	.L32
 612              	.L33:
 430:../system/src/drivers/analog_anemometer.c **** 			}
 431:../system/src/drivers/analog_anemometer.c **** 			else {
 432:../system/src/drivers/analog_anemometer.c **** 				// copying previous minimal value
 433:../system/src/drivers/analog_anemometer.c **** 				previous_minimum_pulse_ln = minimum_pulse_ln;
 434:../system/src/drivers/analog_anemometer.c **** 			}
 435:../system/src/drivers/analog_anemometer.c **** 
 436:../system/src/drivers/analog_anemometer.c **** 			// setting current minimal value
 437:../system/src/drivers/analog_anemometer.c **** 			minimum_pulse_ln = pulse_ln;
 438:../system/src/drivers/analog_anemometer.c **** 		}
 439:../system/src/drivers/analog_anemometer.c **** 
 440:../system/src/drivers/analog_anemometer.c **** 		if (pulse_ln > maximum_pulse_ln) {
 441:../system/src/drivers/analog_anemometer.c **** 
 442:../system/src/drivers/analog_anemometer.c **** 			if (previous_maximum_pulse_ln == 0) {
 443:../system/src/drivers/analog_anemometer.c **** 				previous_maximum_pulse_ln = pulse_ln;
 444:../system/src/drivers/analog_anemometer.c **** 			}
 445:../system/src/drivers/analog_anemometer.c **** 			else {
 446:../system/src/drivers/analog_anemometer.c **** 				previous_maximum_pulse_ln = maximum_pulse_ln;
 613              		.loc 1 446 0
 614 0162 BDF80A10 		ldrh	r1, [sp, #10]
 615 0166 89B2     		uxth	r1, r1
 616 0168 ADF80810 		strh	r1, [sp, #8]	@ movhi
 617              	.L34:
 447:../system/src/drivers/analog_anemometer.c **** 			}
 448:../system/src/drivers/analog_anemometer.c **** 
 449:../system/src/drivers/analog_anemometer.c **** 			maximum_pulse_ln = pulse_ln;
 618              		.loc 1 449 0
 619 016c ADF80A20 		strh	r2, [sp, #10]	@ movhi
 620              	.L29:
 414:../system/src/drivers/analog_anemometer.c **** 
 621              		.loc 1 414 0 discriminator 2
 622 0170 0133     		adds	r3, r3, #1
 623              	.LVL58:
 624              	.L28:
 414:../system/src/drivers/analog_anemometer.c **** 
 625              		.loc 1 414 0 is_stmt 0 discriminator 1
 626 0172 092B     		cmp	r3, #9
 627 0174 24DC     		bgt	.L46
 416:../system/src/drivers/analog_anemometer.c **** 
 628              		.loc 1 416 0 is_stmt 1
 629 0176 304A     		ldr	r2, .L48+32
 630 0178 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 631              	.LVL59:
 419:../system/src/drivers/analog_anemometer.c **** 			continue;
 632              		.loc 1 419 0
 633 017c 002A     		cmp	r2, #0
 634 017e F7D0     		beq	.L29
 423:../system/src/drivers/analog_anemometer.c **** 
 635              		.loc 1 423 0
 636 0180 BDF80E10 		ldrh	r1, [sp, #14]
 637 0184 89B2     		uxth	r1, r1
 638 0186 9142     		cmp	r1, r2
 639 0188 0DD9     		bls	.L30
 426:../system/src/drivers/analog_anemometer.c **** 				// if yes store the current value to handle a situation than whole
 640              		.loc 1 426 0
 641 018a BDF80C10 		ldrh	r1, [sp, #12]
 642 018e 89B2     		uxth	r1, r1
 643 0190 4EF66020 		movw	r0, #60000
 644 0194 8142     		cmp	r1, r0
 645 0196 E1D0     		beq	.L47
 433:../system/src/drivers/analog_anemometer.c **** 			}
 646              		.loc 1 433 0
 647 0198 BDF80E10 		ldrh	r1, [sp, #14]
 648 019c 89B2     		uxth	r1, r1
 649 019e ADF80C10 		strh	r1, [sp, #12]	@ movhi
 650              	.L32:
 437:../system/src/drivers/analog_anemometer.c **** 		}
 651              		.loc 1 437 0
 652 01a2 ADF80E20 		strh	r2, [sp, #14]	@ movhi
 653              	.L30:
 440:../system/src/drivers/analog_anemometer.c **** 
 654              		.loc 1 440 0
 655 01a6 BDF80A10 		ldrh	r1, [sp, #10]
 656 01aa 89B2     		uxth	r1, r1
 657 01ac 9142     		cmp	r1, r2
 658 01ae DFD2     		bcs	.L29
 442:../system/src/drivers/analog_anemometer.c **** 				previous_maximum_pulse_ln = pulse_ln;
 659              		.loc 1 442 0
 660 01b0 BDF80810 		ldrh	r1, [sp, #8]
 661 01b4 89B2     		uxth	r1, r1
 662 01b6 0029     		cmp	r1, #0
 663 01b8 D3D1     		bne	.L33
 443:../system/src/drivers/analog_anemometer.c **** 			}
 664              		.loc 1 443 0
 665 01ba ADF80820 		strh	r2, [sp, #8]	@ movhi
 666 01be D5E7     		b	.L34
 667              	.LVL60:
 668              	.L46:
 450:../system/src/drivers/analog_anemometer.c **** 		}
 451:../system/src/drivers/analog_anemometer.c **** 
 452:../system/src/drivers/analog_anemometer.c **** 	}
 453:../system/src/drivers/analog_anemometer.c **** 
 454:../system/src/drivers/analog_anemometer.c **** 	// calculating the target inter-pulse duration
 455:../system/src/drivers/analog_anemometer.c **** 	rte_wx_windspeed_pulses = (uint16_t)((previous_maximum_pulse_ln + previous_minimum_pulse_ln) / 2);
 669              		.loc 1 455 0
 670 01c0 BDF80820 		ldrh	r2, [sp, #8]
 671 01c4 BDF80C30 		ldrh	r3, [sp, #12]
 672              	.LVL61:
 673 01c8 1344     		add	r3, r3, r2
 674 01ca 5B08     		lsrs	r3, r3, #1
 675 01cc 174A     		ldr	r2, .L48+20
 676 01ce 1380     		strh	r3, [r2]	@ movhi
 456:../system/src/drivers/analog_anemometer.c **** 
 457:../system/src/drivers/analog_anemometer.c **** 	// resetting the timer
 458:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_timer_has_been_fired = 0;
 677              		.loc 1 458 0
 678 01d0 0023     		movs	r3, #0
 679 01d2 134A     		ldr	r2, .L48+8
 680 01d4 1370     		strb	r3, [r2]
 681              	.LVL62:
 459:../system/src/drivers/analog_anemometer.c **** 
 460:../system/src/drivers/analog_anemometer.c **** 	for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N; i++)
 682              		.loc 1 460 0
 683 01d6 04E0     		b	.L36
 684              	.LVL63:
 685              	.L37:
 461:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_windspeed_pulses_time[i] = 0;
 686              		.loc 1 461 0 discriminator 3
 687 01d8 154A     		ldr	r2, .L48+24
 688 01da 0021     		movs	r1, #0
 689 01dc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 460:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_windspeed_pulses_time[i] = 0;
 690              		.loc 1 460 0 discriminator 3
 691 01e0 0133     		adds	r3, r3, #1
 692              	.LVL64:
 693              	.L36:
 460:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_windspeed_pulses_time[i] = 0;
 694              		.loc 1 460 0 is_stmt 0 discriminator 1
 695 01e2 092B     		cmp	r3, #9
 696 01e4 F8DD     		ble	.L37
 462:../system/src/drivers/analog_anemometer.c **** 
 463:../system/src/drivers/analog_anemometer.c **** 	for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N; i++)
 697              		.loc 1 463 0 is_stmt 1
 698 01e6 0023     		movs	r3, #0
 699              	.LVL65:
 700 01e8 04E0     		b	.L38
 701              	.LVL66:
 702              	.L39:
 464:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_time_between_pulses[i] = 0;
 703              		.loc 1 464 0 discriminator 3
 704 01ea 134A     		ldr	r2, .L48+32
 705 01ec 0021     		movs	r1, #0
 706 01ee 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 463:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_time_between_pulses[i] = 0;
 707              		.loc 1 463 0 discriminator 3
 708 01f2 0133     		adds	r3, r3, #1
 709              	.LVL67:
 710              	.L38:
 463:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_time_between_pulses[i] = 0;
 711              		.loc 1 463 0 is_stmt 0 discriminator 1
 712 01f4 092B     		cmp	r3, #9
 713 01f6 F8DD     		ble	.L39
 465:../system/src/drivers/analog_anemometer.c **** 
 466:../system/src/drivers/analog_anemometer.c **** 	dma_helper_start_ch7(&DMA_InitStruct);
 714              		.loc 1 466 0 is_stmt 1
 715 01f8 0E48     		ldr	r0, .L48+28
 716 01fa FFF7FEFF 		bl	dma_helper_start_ch7
 717              	.LVL68:
 718              	.LBB78:
 719              	.LBB79:
1437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 720              		.loc 2 1437 0
 721 01fe 0F4B     		ldr	r3, .L48+36
 722 0200 1A68     		ldr	r2, [r3]
 723 0202 22F00102 		bic	r2, r2, #1
 724 0206 1A60     		str	r2, [r3]
 725              	.LVL69:
 726              	.LBE79:
 727              	.LBE78:
 728              	.LBB80:
 729              	.LBB81:
1677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 730              		.loc 2 1677 0
 731 0208 0022     		movs	r2, #0
 732 020a 5A62     		str	r2, [r3, #36]
 733              	.LVL70:
 734              	.LBE81:
 735              	.LBE80:
 736              	.LBB82:
 737              	.LBB83:
1426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 738              		.loc 2 1426 0
 739 020c 1A68     		ldr	r2, [r3]
 740 020e 42F00102 		orr	r2, r2, #1
 741 0212 1A60     		str	r2, [r3]
 742              	.LVL71:
 743              	.L8:
 744              	.LBE83:
 745              	.LBE82:
 467:../system/src/drivers/analog_anemometer.c **** 
 468:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 469:../system/src/drivers/analog_anemometer.c **** 	// Stopping timer
 470:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM17, DISABLE);
 471:../system/src/drivers/analog_anemometer.c **** 
 472:../system/src/drivers/analog_anemometer.c **** 	// Resetting the counter
 473:../system/src/drivers/analog_anemometer.c **** 	TIM_SetCounter(TIM17, 0);
 474:../system/src/drivers/analog_anemometer.c **** 
 475:../system/src/drivers/analog_anemometer.c **** 	// Enabling counter once again
 476:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM17, ENABLE);
 477:../system/src/drivers/analog_anemometer.c **** #endif
 478:../system/src/drivers/analog_anemometer.c **** 
 479:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 480:../system/src/drivers/analog_anemometer.c **** 
 481:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_DisableCounter(TIM4);
 482:../system/src/drivers/analog_anemometer.c **** 
 483:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_SetCounter(TIM4, 0);
 484:../system/src/drivers/analog_anemometer.c **** 
 485:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableCounter(TIM4);
 486:../system/src/drivers/analog_anemometer.c **** 
 487:../system/src/drivers/analog_anemometer.c **** #endif
 488:../system/src/drivers/analog_anemometer.c **** 
 489:../system/src/drivers/analog_anemometer.c **** 	return;
 490:../system/src/drivers/analog_anemometer.c **** }
 746              		.loc 1 490 0
 747 0214 05B0     		add	sp, sp, #20
 748              		.cfi_def_cfa_offset 12
 749              		@ sp needed
 750 0216 30BD     		pop	{r4, r5, pc}
 751              	.L49:
 752              		.align	2
 753              	.L48:
 754 0218 00000000 		.word	.LANCHOR5
 755 021c 00000000 		.word	.LANCHOR6
 756 0220 00000000 		.word	.LANCHOR4
 757 0224 00000000 		.word	led_blinking_led2
 758 0228 00080048 		.word	1207961600
 759 022c 00000000 		.word	rte_wx_windspeed_pulses
 760 0230 00000000 		.word	analog_anemometer_windspeed_pulses_time
 761 0234 00000000 		.word	DMA_InitStruct
 762 0238 00000000 		.word	analog_anemometer_time_between_pulses
 763 023c 00080040 		.word	1073743872
 764              		.cfi_endproc
 765              	.LFE704:
 767              		.section	.text.analog_anemometer_get_ms_from_pulse,"ax",%progbits
 768              		.align	1
 769              		.global	analog_anemometer_get_ms_from_pulse
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 773              		.fpu fpv4-sp-d16
 775              	analog_anemometer_get_ms_from_pulse:
 776              	.LFB705:
 491:../system/src/drivers/analog_anemometer.c **** 
 492:../system/src/drivers/analog_anemometer.c **** /**
 493:../system/src/drivers/analog_anemometer.c ****  * This functions takes the average time between two pulses expressed as
 494:../system/src/drivers/analog_anemometer.c ****  * a multiplicity of one millisecond (2500 equals two and half of a second)
 495:../system/src/drivers/analog_anemometer.c ****  * and converts it to the windspeed in 0.1 m/s incremenets (4 equals to .4m/s, 18 equals to 1.8m/s)
 496:../system/src/drivers/analog_anemometer.c ****  */
 497:../system/src/drivers/analog_anemometer.c **** uint32_t analog_anemometer_get_ms_from_pulse(uint16_t inter_pulse_time) {
 777              		.loc 1 497 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 782              	.LVL72:
 498:../system/src/drivers/analog_anemometer.c **** 	uint32_t output = 0;
 499:../system/src/drivers/analog_anemometer.c **** 
 500:../system/src/drivers/analog_anemometer.c **** 	uint32_t scaled_pulses_frequency = 1000000 / (inter_pulse_time * 10);		// *100 from real value
 783              		.loc 1 500 0
 784 0000 00EB8003 		add	r3, r0, r0, lsl #2
 785 0004 5A00     		lsls	r2, r3, #1
 786 0006 064B     		ldr	r3, .L53
 787 0008 93FBF2F3 		sdiv	r3, r3, r2
 788              	.LVL73:
 501:../system/src/drivers/analog_anemometer.c **** 
 502:../system/src/drivers/analog_anemometer.c **** 	if (inter_pulse_time > 5)
 789              		.loc 1 502 0
 790 000c 0528     		cmp	r0, #5
 791 000e 04D9     		bls	.L52
 503:../system/src/drivers/analog_anemometer.c **** 		output = scaled_pulses_frequency / (analog_anemometer_pulses_per_m_s_constant);
 792              		.loc 1 503 0
 793 0010 044A     		ldr	r2, .L53+4
 794 0012 1088     		ldrh	r0, [r2]
 795              	.LVL74:
 796 0014 B3FBF0F0 		udiv	r0, r3, r0
 797              	.LVL75:
 798 0018 7047     		bx	lr
 799              	.LVL76:
 800              	.L52:
 504:../system/src/drivers/analog_anemometer.c **** 	else
 505:../system/src/drivers/analog_anemometer.c **** 		output = 0;
 801              		.loc 1 505 0
 802 001a 0020     		movs	r0, #0
 803              	.LVL77:
 506:../system/src/drivers/analog_anemometer.c **** 
 507:../system/src/drivers/analog_anemometer.c **** 	return output;
 508:../system/src/drivers/analog_anemometer.c **** }
 804              		.loc 1 508 0
 805 001c 7047     		bx	lr
 806              	.L54:
 807 001e 00BF     		.align	2
 808              	.L53:
 809 0020 40420F00 		.word	1000000
 810 0024 00000000 		.word	.LANCHOR0
 811              		.cfi_endproc
 812              	.LFE705:
 814              		.section	.text.analog_anemometer_direction_sparkfun,"ax",%progbits
 815              		.align	1
 816              		.global	analog_anemometer_direction_sparkfun
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv4-sp-d16
 822              	analog_anemometer_direction_sparkfun:
 823              	.LFB707:
 509:../system/src/drivers/analog_anemometer.c **** 
 510:../system/src/drivers/analog_anemometer.c **** int16_t analog_anemometer_direction_handler(void) {
 511:../system/src/drivers/analog_anemometer.c **** 
 512:../system/src/drivers/analog_anemometer.c **** 	uint16_t downscaled_angle = 0;
 513:../system/src/drivers/analog_anemometer.c **** 
 514:../system/src/drivers/analog_anemometer.c **** 
 515:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 516:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM3, DISABLE);
 517:../system/src/drivers/analog_anemometer.c **** 
 518:../system/src/drivers/analog_anemometer.c **** 	// getting current counter value
 519:../system/src/drivers/analog_anemometer.c **** 	uint16_t current_value = TIM_GetCounter(TIM3);
 520:../system/src/drivers/analog_anemometer.c **** 
 521:../system/src/drivers/analog_anemometer.c **** 	// if the counter value is zero it means that probably U/f converter isn't running
 522:../system/src/drivers/analog_anemometer.c **** 	if (current_value == 0) {
 523:../system/src/drivers/analog_anemometer.c **** 		TIM_SetCounter(TIM3, 0);
 524:../system/src/drivers/analog_anemometer.c **** 
 525:../system/src/drivers/analog_anemometer.c **** 		TIM_Cmd(TIM3, ENABLE);
 526:../system/src/drivers/analog_anemometer.c **** 
 527:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_direction_doesnt_work = 1;
 528:../system/src/drivers/analog_anemometer.c **** 
 529:../system/src/drivers/analog_anemometer.c **** 		return rte_wx_winddirection_last;
 530:../system/src/drivers/analog_anemometer.c **** 	}
 531:../system/src/drivers/analog_anemometer.c **** #endif
 532:../system/src/drivers/analog_anemometer.c **** 
 533:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 534:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_DisableCounter(TIM3);
 535:../system/src/drivers/analog_anemometer.c **** 
 536:../system/src/drivers/analog_anemometer.c **** 	// getting current counter value
 537:../system/src/drivers/analog_anemometer.c **** 	uint16_t current_value = LL_TIM_GetCounter(TIM3);//TIM_GetCounter(TIM3);
 538:../system/src/drivers/analog_anemometer.c **** 
 539:../system/src/drivers/analog_anemometer.c **** 	// if the counter value is zero it means that probably U/f converter isn't running
 540:../system/src/drivers/analog_anemometer.c **** 	if (current_value == 0) {
 541:../system/src/drivers/analog_anemometer.c **** 		LL_TIM_SetCounter(TIM3, 0);
 542:../system/src/drivers/analog_anemometer.c **** 
 543:../system/src/drivers/analog_anemometer.c **** 		LL_TIM_EnableCounter(TIM3);
 544:../system/src/drivers/analog_anemometer.c **** 
 545:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_direction_doesnt_work = 1;
 546:../system/src/drivers/analog_anemometer.c **** 
 547:../system/src/drivers/analog_anemometer.c **** 		return rte_wx_winddirection_last;
 548:../system/src/drivers/analog_anemometer.c **** 	}
 549:../system/src/drivers/analog_anemometer.c **** 
 550:../system/src/drivers/analog_anemometer.c **** #endif
 551:../system/src/drivers/analog_anemometer.c **** 
 552:../system/src/drivers/analog_anemometer.c **** 	// update the last
 553:../system/src/drivers/analog_anemometer.c **** 	wx_last_good_wind_time = main_get_master_time();
 554:../system/src/drivers/analog_anemometer.c **** 
 555:../system/src/drivers/analog_anemometer.c **** #ifdef	WIND_DEBUG
 556:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_direction_timer_values[(analog_anemometer_direction_timer_values_it++) % ANALOG_
 557:../system/src/drivers/analog_anemometer.c **** #endif
 558:../system/src/drivers/analog_anemometer.c **** 
 559:../system/src/drivers/analog_anemometer.c **** 	// if the value is greater than maximum one just ignore
 560:../system/src/drivers/analog_anemometer.c **** 	if (current_value > UF_MAXIMUM_FREQUENCY) {
 561:../system/src/drivers/analog_anemometer.c **** 
 562:../system/src/drivers/analog_anemometer.c **** 		// and reinitialize the timer before returning from the function
 563:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_direction_reset();
 564:../system/src/drivers/analog_anemometer.c **** 
 565:../system/src/drivers/analog_anemometer.c **** 		return rte_wx_winddirection_last;
 566:../system/src/drivers/analog_anemometer.c **** 	}
 567:../system/src/drivers/analog_anemometer.c **** 
 568:../system/src/drivers/analog_anemometer.c **** 	if (analog_anemometer_direction_mode == DIRECTION_REGULAR) {
 569:../system/src/drivers/analog_anemometer.c **** 		// upscaling by factor of 1000 to omit usage of the floating point arithmetics
 570:../system/src/drivers/analog_anemometer.c **** 		uint32_t upscaled_frequecy = current_value * 100;
 571:../system/src/drivers/analog_anemometer.c **** 
 572:../system/src/drivers/analog_anemometer.c **** 		// calculating the ratio between the current input frequency and the maximum one
 573:../system/src/drivers/analog_anemometer.c **** 		uint16_t ratio_of_upscaled_frequency = upscaled_frequecy / UF_MAXIMUM_FREQUENCY;		// this val is 
 574:../system/src/drivers/analog_anemometer.c **** 
 575:../system/src/drivers/analog_anemometer.c **** 		// converting the upscaled ratio into the upscaled angle
 576:../system/src/drivers/analog_anemometer.c **** 		uint32_t upscaled_angle = ratio_of_upscaled_frequency * 360;			// this val is * 100 from physical
 577:../system/src/drivers/analog_anemometer.c **** 
 578:../system/src/drivers/analog_anemometer.c **** 		// rescaling the angle according to lower and higher limit
 579:../system/src/drivers/analog_anemometer.c **** 		int32_t angle_adjusted_to_real_freq_borders = analog_anemometer_a_coeff *
 580:../system/src/drivers/analog_anemometer.c **** 												upscaled_angle + 1000 * analog_anemometer_b_coeff;
 581:../system/src/drivers/analog_anemometer.c **** 
 582:../system/src/drivers/analog_anemometer.c **** 		if (angle_adjusted_to_real_freq_borders < 0)
 583:../system/src/drivers/analog_anemometer.c **** 			angle_adjusted_to_real_freq_borders = 0;
 584:../system/src/drivers/analog_anemometer.c **** 
 585:../system/src/drivers/analog_anemometer.c **** 		// downscaling the angle
 586:../system/src/drivers/analog_anemometer.c **** 		downscaled_angle = angle_adjusted_to_real_freq_borders / 10000;
 587:../system/src/drivers/analog_anemometer.c **** 
 588:../system/src/drivers/analog_anemometer.c **** 		// adjusting to polarity of the signal
 589:../system/src/drivers/analog_anemometer.c **** 		downscaled_angle *= analog_anemometer_direction_pol;
 590:../system/src/drivers/analog_anemometer.c **** 	}
 591:../system/src/drivers/analog_anemometer.c **** 	else if (analog_anemometer_direction_mode == DIRECTION_SPARKFUN) {
 592:../system/src/drivers/analog_anemometer.c **** 		downscaled_angle = analog_anemometer_direction_sparkfun(current_value);
 593:../system/src/drivers/analog_anemometer.c **** 	}
 594:../system/src/drivers/analog_anemometer.c **** 	else {
 595:../system/src/drivers/analog_anemometer.c **** 		;
 596:../system/src/drivers/analog_anemometer.c **** 	}
 597:../system/src/drivers/analog_anemometer.c **** 
 598:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_last_direction_cnt = 0;
 599:../system/src/drivers/analog_anemometer.c **** 
 600:../system/src/drivers/analog_anemometer.c **** 	rte_wx_winddirection_last = downscaled_angle;
 601:../system/src/drivers/analog_anemometer.c **** 
 602:../system/src/drivers/analog_anemometer.c **** 	// set the led state
 603:../system/src/drivers/analog_anemometer.c **** 	if (rte_wx_winddirection_last > 0 && rte_wx_winddirection_last < 180) {
 604:../system/src/drivers/analog_anemometer.c **** 		led_control_led2_bottom(true);
 605:../system/src/drivers/analog_anemometer.c **** 	}
 606:../system/src/drivers/analog_anemometer.c **** 	else {
 607:../system/src/drivers/analog_anemometer.c **** 		led_control_led2_bottom(false);
 608:../system/src/drivers/analog_anemometer.c **** 	}
 609:../system/src/drivers/analog_anemometer.c **** 
 610:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 611:../system/src/drivers/analog_anemometer.c **** 	TIM_SetCounter(TIM3, 0);
 612:../system/src/drivers/analog_anemometer.c **** 
 613:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM3, ENABLE);
 614:../system/src/drivers/analog_anemometer.c **** #endif
 615:../system/src/drivers/analog_anemometer.c **** 
 616:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 617:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_SetCounter(TIM3, 0);
 618:../system/src/drivers/analog_anemometer.c **** 
 619:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableCounter(TIM3);
 620:../system/src/drivers/analog_anemometer.c **** #endif
 621:../system/src/drivers/analog_anemometer.c **** 
 622:../system/src/drivers/analog_anemometer.c **** 	return downscaled_angle;
 623:../system/src/drivers/analog_anemometer.c **** }
 624:../system/src/drivers/analog_anemometer.c **** 
 625:../system/src/drivers/analog_anemometer.c **** int16_t analog_anemometer_direction_sparkfun(uint32_t timer_value) {
 824              		.loc 1 625 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 829              	.LVL78:
 830              	.LBB84:
 626:../system/src/drivers/analog_anemometer.c **** 
 627:../system/src/drivers/analog_anemometer.c **** 	int16_t out = -1;
 628:../system/src/drivers/analog_anemometer.c **** 
 629:../system/src/drivers/analog_anemometer.c **** 	// iterate through table which consist ranges of valid timer counter values
 630:../system/src/drivers/analog_anemometer.c **** 	// for each wind direction
 631:../system/src/drivers/analog_anemometer.c **** 	for (int i = 0; i < 16; i++)  {
 831              		.loc 1 631 0
 832 0000 0023     		movs	r3, #0
 833 0002 00E0     		b	.L56
 834              	.LVL79:
 835              	.L57:
 836              		.loc 1 631 0 is_stmt 0 discriminator 2
 837 0004 0133     		adds	r3, r3, #1
 838              	.LVL80:
 839              	.L56:
 840              		.loc 1 631 0 discriminator 1
 841 0006 0F2B     		cmp	r3, #15
 842 0008 14DC     		bgt	.L60
 632:../system/src/drivers/analog_anemometer.c **** 		if (timer_value >= analog_anemometer_direction_sparkfun_ranges[i][0] &&
 843              		.loc 1 632 0 is_stmt 1
 844 000a 03EB4301 		add	r1, r3, r3, lsl #1
 845 000e 4A00     		lsls	r2, r1, #1
 846 0010 0A49     		ldr	r1, .L61
 847 0012 8A5E     		ldrsh	r2, [r1, r2]
 848 0014 8242     		cmp	r2, r0
 849 0016 F5D8     		bhi	.L57
 633:../system/src/drivers/analog_anemometer.c **** 			timer_value < analog_anemometer_direction_sparkfun_ranges[i][1]	) {
 850              		.loc 1 633 0 discriminator 1
 851 0018 03EB4302 		add	r2, r3, r3, lsl #1
 852 001c 5100     		lsls	r1, r2, #1
 853 001e 074A     		ldr	r2, .L61
 854 0020 0A44     		add	r2, r2, r1
 855 0022 B2F90220 		ldrsh	r2, [r2, #2]
 632:../system/src/drivers/analog_anemometer.c **** 		if (timer_value >= analog_anemometer_direction_sparkfun_ranges[i][0] &&
 856              		.loc 1 632 0 discriminator 1
 857 0026 8242     		cmp	r2, r0
 858 0028 ECD9     		bls	.L57
 634:../system/src/drivers/analog_anemometer.c **** 
 635:../system/src/drivers/analog_anemometer.c **** 			out = analog_anemometer_direction_sparkfun_ranges[i][2];
 859              		.loc 1 635 0
 860 002a 044B     		ldr	r3, .L61
 861              	.LVL81:
 862 002c 0B44     		add	r3, r3, r1
 863 002e B3F90400 		ldrsh	r0, [r3, #4]
 864              	.LVL82:
 636:../system/src/drivers/analog_anemometer.c **** 
 637:../system/src/drivers/analog_anemometer.c **** 			// exit from the loop and then from the function if the angle has been found.
 638:../system/src/drivers/analog_anemometer.c **** 			break;
 865              		.loc 1 638 0
 866 0032 7047     		bx	lr
 867              	.LVL83:
 868              	.L60:
 869              	.LBE84:
 627:../system/src/drivers/analog_anemometer.c **** 
 870              		.loc 1 627 0
 871 0034 4FF0FF30 		mov	r0, #-1
 872              	.LVL84:
 639:../system/src/drivers/analog_anemometer.c **** 		}
 640:../system/src/drivers/analog_anemometer.c **** 	}
 641:../system/src/drivers/analog_anemometer.c **** 
 642:../system/src/drivers/analog_anemometer.c **** 	return out;
 643:../system/src/drivers/analog_anemometer.c **** }
 873              		.loc 1 643 0
 874 0038 7047     		bx	lr
 875              	.L62:
 876 003a 00BF     		.align	2
 877              	.L61:
 878 003c 00000000 		.word	.LANCHOR7
 879              		.cfi_endproc
 880              	.LFE707:
 882              		.section	.text.analog_anemometer_direction_reset,"ax",%progbits
 883              		.align	1
 884              		.global	analog_anemometer_direction_reset
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 888              		.fpu fpv4-sp-d16
 890              	analog_anemometer_direction_reset:
 891              	.LFB708:
 644:../system/src/drivers/analog_anemometer.c **** 
 645:../system/src/drivers/analog_anemometer.c **** void analog_anemometer_direction_reset(void) {
 892              		.loc 1 645 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              		@ link register save eliminated.
 897              	.LVL85:
 898              	.LBB85:
 899              	.LBB86:
1437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 900              		.loc 2 1437 0
 901 0000 054B     		ldr	r3, .L64
 902 0002 1A68     		ldr	r2, [r3]
 903 0004 22F00102 		bic	r2, r2, #1
 904 0008 1A60     		str	r2, [r3]
 905              	.LVL86:
 906              	.LBE86:
 907              	.LBE85:
 908              	.LBB87:
 909              	.LBB88:
1677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 910              		.loc 2 1677 0
 911 000a 0022     		movs	r2, #0
 912 000c 5A62     		str	r2, [r3, #36]
 913              	.LVL87:
 914              	.LBE88:
 915              	.LBE87:
 916              	.LBB89:
 917              	.LBB90:
1426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 918              		.loc 2 1426 0
 919 000e 1A68     		ldr	r2, [r3]
 920 0010 42F00102 		orr	r2, r2, #1
 921 0014 1A60     		str	r2, [r3]
 922              	.LVL88:
 923              	.LBE90:
 924              	.LBE89:
 646:../system/src/drivers/analog_anemometer.c **** 
 647:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 648:../system/src/drivers/analog_anemometer.c **** 	// stopping the timer
 649:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM3, DISABLE);
 650:../system/src/drivers/analog_anemometer.c **** 
 651:../system/src/drivers/analog_anemometer.c **** 	// resetting it
 652:../system/src/drivers/analog_anemometer.c **** 	TIM_SetCounter(TIM3, 0);
 653:../system/src/drivers/analog_anemometer.c **** 
 654:../system/src/drivers/analog_anemometer.c **** 	// end then restarting once again
 655:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM3, ENABLE);
 656:../system/src/drivers/analog_anemometer.c **** #endif
 657:../system/src/drivers/analog_anemometer.c **** 
 658:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 659:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_DisableCounter(TIM3);
 660:../system/src/drivers/analog_anemometer.c **** 
 661:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_SetCounter(TIM3, 0);
 662:../system/src/drivers/analog_anemometer.c **** 
 663:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableCounter(TIM3);
 664:../system/src/drivers/analog_anemometer.c **** #endif
 665:../system/src/drivers/analog_anemometer.c **** }
 925              		.loc 1 665 0
 926 0016 7047     		bx	lr
 927              	.L65:
 928              		.align	2
 929              	.L64:
 930 0018 00040040 		.word	1073742848
 931              		.cfi_endproc
 932              	.LFE708:
 934              		.section	.text.analog_anemometer_direction_handler,"ax",%progbits
 935              		.align	1
 936              		.global	analog_anemometer_direction_handler
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 940              		.fpu fpv4-sp-d16
 942              	analog_anemometer_direction_handler:
 943              	.LFB706:
 510:../system/src/drivers/analog_anemometer.c **** 
 944              		.loc 1 510 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 0
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948              	.LVL89:
 949              	.LBB91:
 950              	.LBB92:
1437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 951              		.loc 2 1437 0
 952 0000 444B     		ldr	r3, .L85
 953 0002 1A68     		ldr	r2, [r3]
 954 0004 22F00102 		bic	r2, r2, #1
 955 0008 1A60     		str	r2, [r3]
 956              	.LVL90:
 957              	.LBE92:
 958              	.LBE91:
 959              	.LBB93:
 960              	.LBB94:
1690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 961              		.loc 2 1690 0
 962 000a 586A     		ldr	r0, [r3, #36]
 963              	.LVL91:
 964              	.LBE94:
 965              	.LBE93:
 537:../system/src/drivers/analog_anemometer.c **** 
 966              		.loc 1 537 0
 967 000c 81B2     		uxth	r1, r0
 968              	.LVL92:
 540:../system/src/drivers/analog_anemometer.c **** 		LL_TIM_SetCounter(TIM3, 0);
 969              		.loc 1 540 0
 970 000e 0029     		cmp	r1, #0
 971 0010 37D0     		beq	.L80
 510:../system/src/drivers/analog_anemometer.c **** 
 972              		.loc 1 510 0
 973 0012 10B5     		push	{r4, lr}
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 4, -8
 976              		.cfi_offset 14, -4
 977              	.LBB95:
 978              	.LBB96:
 979              		.file 5 "../include/main.h"
   1:../include/main.h **** #ifndef MAIN_H_
   2:../include/main.h **** #define MAIN_H_
   3:../include/main.h **** 
   4:../include/main.h **** #include "aprs/ax25.h"
   5:../include/main.h **** #include "drivers/serial.h"
   6:../include/main.h **** #include "config_data.h"
   7:../include/main.h **** 
   8:../include/main.h **** #define SW_VER "EA00"
   9:../include/main.h **** #define SW_DATE "23052021"
  10:../include/main.h **** 
  11:../include/main.h **** #define SYSTICK_TICKS_PER_SECONDS 100
  12:../include/main.h **** #define SYSTICK_TICKS_PERIOD 10
  13:../include/main.h **** 
  14:../include/main.h **** #define INTERNAL_WATCHDOG
  15:../include/main.h **** #define EXTERNAL_WATCHDOG
  16:../include/main.h **** 
  17:../include/main.h **** #define PWR_SWITCH_BOTH
  18:../include/main.h **** 
  19:../include/main.h **** #define OWN_APRS_MSG_LN 	160
  20:../include/main.h **** 
  21:../include/main.h **** extern uint32_t master_time;
  22:../include/main.h **** 
  23:../include/main.h **** extern const config_data_mode_t * main_config_data_mode;
  24:../include/main.h **** extern const config_data_basic_t * main_config_data_basic;
  25:../include/main.h **** extern const config_data_wx_sources_t * main_config_data_wx_sources;
  26:../include/main.h **** extern const config_data_umb_t * main_config_data_umb;
  27:../include/main.h **** extern const config_data_rtu_t * main_config_data_rtu;
  28:../include/main.h **** 
  29:../include/main.h **** extern int32_t main_wx_sensors_pool_timer;
  30:../include/main.h **** extern int32_t main_one_minute_pool_timer;
  31:../include/main.h **** extern int32_t main_one_second_pool_timer;
  32:../include/main.h **** extern int32_t main_two_second_pool_timer;
  33:../include/main.h **** extern int32_t main_ten_second_pool_timer;
  34:../include/main.h **** 
  35:../include/main.h **** extern AX25Ctx main_ax25;
  36:../include/main.h **** extern Afsk main_afsk;
  37:../include/main.h **** 
  38:../include/main.h **** extern AX25Call main_own_path[3];
  39:../include/main.h **** extern uint8_t main_own_path_ln;
  40:../include/main.h **** extern uint8_t main_own_aprs_msg_len;
  41:../include/main.h **** extern char main_own_aprs_msg[OWN_APRS_MSG_LN];
  42:../include/main.h **** 
  43:../include/main.h **** extern char main_string_latitude[9];
  44:../include/main.h **** extern char main_string_longitude[9];
  45:../include/main.h **** 
  46:../include/main.h **** extern char main_symbol_f;
  47:../include/main.h **** extern char main_symbol_s;
  48:../include/main.h **** 
  49:../include/main.h **** extern srl_context_t* main_kiss_srl_ctx_ptr;
  50:../include/main.h **** extern srl_context_t* main_wx_srl_ctx_ptr;
  51:../include/main.h **** 
  52:../include/main.h **** extern  uint8_t main_kiss_enabled;
  53:../include/main.h **** 
  54:../include/main.h **** extern char after_tx_lock;
  55:../include/main.h **** 
  56:../include/main.h **** extern unsigned short rx10m, tx10m, digi10m, digidrop10m, kiss10m;
  57:../include/main.h **** 
  58:../include/main.h **** uint16_t main_get_adc_sample(void);
  59:../include/main.h **** 
  60:../include/main.h **** void main_service_cpu_load_ticks(void);
  61:../include/main.h **** 
  62:../include/main.h **** inline uint32_t main_get_master_time(void) {
  63:../include/main.h **** 	return master_time;
 980              		.loc 5 63 0
 981 0014 404B     		ldr	r3, .L85+4
 982 0016 1A68     		ldr	r2, [r3]
 983              	.LBE96:
 984              	.LBE95:
 553:../system/src/drivers/analog_anemometer.c **** 
 985              		.loc 1 553 0
 986 0018 404B     		ldr	r3, .L85+8
 987 001a 1A60     		str	r2, [r3]
 556:../system/src/drivers/analog_anemometer.c **** #endif
 988              		.loc 1 556 0
 989 001c 404B     		ldr	r3, .L85+12
 990 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 991 0020 541C     		adds	r4, r2, #1
 992 0022 1C70     		strb	r4, [r3]
 993 0024 3F4B     		ldr	r3, .L85+16
 994 0026 A3FB0243 		umull	r4, r3, r3, r2
 995 002a DB08     		lsrs	r3, r3, #3
 996 002c 03EB8303 		add	r3, r3, r3, lsl #2
 997 0030 5C00     		lsls	r4, r3, #1
 998 0032 121B     		subs	r2, r2, r4
 999 0034 D2B2     		uxtb	r2, r2
 1000 0036 3C4B     		ldr	r3, .L85+20
 1001 0038 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 560:../system/src/drivers/analog_anemometer.c **** 
 1002              		.loc 1 560 0
 1003 003c 42F25803 		movw	r3, #8280
 1004 0040 9942     		cmp	r1, r3
 1005 0042 2BD8     		bhi	.L81
 568:../system/src/drivers/analog_anemometer.c **** 		// upscaling by factor of 1000 to omit usage of the floating point arithmetics
 1006              		.loc 1 568 0
 1007 0044 394B     		ldr	r3, .L85+24
 1008 0046 93F90030 		ldrsb	r3, [r3]
 1009 004a 012B     		cmp	r3, #1
 1010 004c 2CD0     		beq	.L82
 591:../system/src/drivers/analog_anemometer.c **** 		downscaled_angle = analog_anemometer_direction_sparkfun(current_value);
 1011              		.loc 1 591 0
 1012 004e 022B     		cmp	r3, #2
 1013 0050 54D0     		beq	.L83
 512:../system/src/drivers/analog_anemometer.c **** 
 1014              		.loc 1 512 0
 1015 0052 0020     		movs	r0, #0
 1016              	.LVL93:
 1017              	.L72:
 598:../system/src/drivers/analog_anemometer.c **** 
 1018              		.loc 1 598 0
 1019 0054 364B     		ldr	r3, .L85+28
 1020 0056 0022     		movs	r2, #0
 1021 0058 1A80     		strh	r2, [r3]	@ movhi
 600:../system/src/drivers/analog_anemometer.c **** 
 1022              		.loc 1 600 0
 1023 005a 364B     		ldr	r3, .L85+32
 1024 005c 1880     		strh	r0, [r3]	@ movhi
 603:../system/src/drivers/analog_anemometer.c **** 		led_control_led2_bottom(true);
 1025              		.loc 1 603 0
 1026 005e 431E     		subs	r3, r0, #1
 1027 0060 9BB2     		uxth	r3, r3
 1028 0062 B22B     		cmp	r3, #178
 1029 0064 4FD8     		bhi	.L73
 1030              	.LVL94:
 1031              	.LBB97:
 1032              	.LBB98:
 103:../include/LedConfig.h **** 	}
 1033              		.loc 4 103 0
 1034 0066 344A     		ldr	r2, .L85+36
 1035 0068 9369     		ldr	r3, [r2, #24]
 1036 006a 43F40073 		orr	r3, r3, #512
 1037 006e 9361     		str	r3, [r2, #24]
 1038              	.LVL95:
 1039              	.L74:
 1040              	.LBE98:
 1041              	.LBE97:
 1042              	.LBB99:
 1043              	.LBB100:
1677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 1044              		.loc 2 1677 0
 1045 0070 284B     		ldr	r3, .L85
 1046 0072 0022     		movs	r2, #0
 1047 0074 5A62     		str	r2, [r3, #36]
 1048              	.LVL96:
 1049              	.LBE100:
 1050              	.LBE99:
 1051              	.LBB101:
 1052              	.LBB102:
1426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 1053              		.loc 2 1426 0
 1054 0076 1A68     		ldr	r2, [r3]
 1055 0078 42F00102 		orr	r2, r2, #1
 1056 007c 1A60     		str	r2, [r3]
 1057              	.LVL97:
 1058              	.LBE102:
 1059              	.LBE101:
 622:../system/src/drivers/analog_anemometer.c **** }
 1060              		.loc 1 622 0
 1061 007e 00B2     		sxth	r0, r0
 1062              	.LVL98:
 1063              	.L68:
 623:../system/src/drivers/analog_anemometer.c **** 
 1064              		.loc 1 623 0
 1065 0080 10BD     		pop	{r4, pc}
 1066              	.LVL99:
 1067              	.L80:
 1068              		.cfi_def_cfa_offset 0
 1069              		.cfi_restore 4
 1070              		.cfi_restore 14
 1071              	.LBB103:
 1072              	.LBB104:
1677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 1073              		.loc 2 1677 0
 1074 0082 0022     		movs	r2, #0
 1075 0084 5A62     		str	r2, [r3, #36]
 1076              	.LVL100:
 1077              	.LBE104:
 1078              	.LBE103:
 1079              	.LBB105:
 1080              	.LBB106:
1426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_tim.h **** }
 1081              		.loc 2 1426 0
 1082 0086 1A68     		ldr	r2, [r3]
 1083 0088 42F00102 		orr	r2, r2, #1
 1084 008c 1A60     		str	r2, [r3]
 1085              	.LVL101:
 1086              	.LBE106:
 1087              	.LBE105:
 545:../system/src/drivers/analog_anemometer.c **** 
 1088              		.loc 1 545 0
 1089 008e 2B4B     		ldr	r3, .L85+40
 1090 0090 0122     		movs	r2, #1
 1091 0092 1A70     		strb	r2, [r3]
 547:../system/src/drivers/analog_anemometer.c **** 	}
 1092              		.loc 1 547 0
 1093 0094 274B     		ldr	r3, .L85+32
 1094 0096 B3F90000 		ldrsh	r0, [r3]
 623:../system/src/drivers/analog_anemometer.c **** 
 1095              		.loc 1 623 0
 1096 009a 7047     		bx	lr
 1097              	.L81:
 1098              		.cfi_def_cfa_offset 8
 1099              		.cfi_offset 4, -8
 1100              		.cfi_offset 14, -4
 563:../system/src/drivers/analog_anemometer.c **** 
 1101              		.loc 1 563 0
 1102 009c FFF7FEFF 		bl	analog_anemometer_direction_reset
 1103              	.LVL102:
 565:../system/src/drivers/analog_anemometer.c **** 	}
 1104              		.loc 1 565 0
 1105 00a0 244B     		ldr	r3, .L85+32
 1106 00a2 B3F90000 		ldrsh	r0, [r3]
 1107 00a6 EBE7     		b	.L68
 1108              	.LVL103:
 1109              	.L82:
 1110              	.LBB107:
 570:../system/src/drivers/analog_anemometer.c **** 
 1111              		.loc 1 570 0
 1112 00a8 80B2     		uxth	r0, r0
 1113 00aa 6423     		movs	r3, #100
 1114 00ac 03FB00F3 		mul	r3, r3, r0
 1115              	.LVL104:
 573:../system/src/drivers/analog_anemometer.c **** 
 1116              		.loc 1 573 0
 1117 00b0 2348     		ldr	r0, .L85+44
 1118 00b2 A0FB0323 		umull	r2, r3, r0, r3
 1119              	.LVL105:
 576:../system/src/drivers/analog_anemometer.c **** 
 1120              		.loc 1 576 0
 1121 00b6 5B0B     		lsrs	r3, r3, #13
 1122              	.LVL106:
 1123 00b8 4FF4B471 		mov	r1, #360
 1124              	.LVL107:
 1125 00bc 01FB03F1 		mul	r1, r1, r3
 1126              	.LVL108:
 579:../system/src/drivers/analog_anemometer.c **** 												upscaled_angle + 1000 * analog_anemometer_b_coeff;
 1127              		.loc 1 579 0
 1128 00c0 204B     		ldr	r3, .L85+48
 1129 00c2 B3F90030 		ldrsh	r3, [r3]
 580:../system/src/drivers/analog_anemometer.c **** 
 1130              		.loc 1 580 0
 1131 00c6 204A     		ldr	r2, .L85+52
 1132 00c8 B2F90000 		ldrsh	r0, [r2]
 1133 00cc 4FF47A72 		mov	r2, #1000
 1134 00d0 02FB00F2 		mul	r2, r2, r0
 1135 00d4 01FB0323 		mla	r3, r1, r3, r2
 1136              	.LVL109:
 582:../system/src/drivers/analog_anemometer.c **** 			angle_adjusted_to_real_freq_borders = 0;
 1137              		.loc 1 582 0
 1138 00d8 002B     		cmp	r3, #0
 1139 00da 0DDB     		blt	.L84
 1140              	.LVL110:
 1141              	.L71:
 586:../system/src/drivers/analog_anemometer.c **** 
 1142              		.loc 1 586 0
 1143 00dc 1B48     		ldr	r0, .L85+56
 1144 00de 80FB0320 		smull	r2, r0, r0, r3
 1145 00e2 DB17     		asrs	r3, r3, #31
 1146              	.LVL111:
 1147 00e4 C3EB2033 		rsb	r3, r3, r0, asr #12
 1148 00e8 9BB2     		uxth	r3, r3
 1149              	.LVL112:
 589:../system/src/drivers/analog_anemometer.c **** 	}
 1150              		.loc 1 589 0
 1151 00ea 194A     		ldr	r2, .L85+60
 1152 00ec 92F90000 		ldrsb	r0, [r2]
 1153 00f0 10FB03F0 		smulbb	r0, r0, r3
 1154 00f4 80B2     		uxth	r0, r0
 1155              	.LVL113:
 1156              	.LBE107:
 1157 00f6 ADE7     		b	.L72
 1158              	.LVL114:
 1159              	.L84:
 1160              	.LBB108:
 583:../system/src/drivers/analog_anemometer.c **** 
 1161              		.loc 1 583 0
 1162 00f8 0023     		movs	r3, #0
 1163              	.LVL115:
 1164 00fa EFE7     		b	.L71
 1165              	.LVL116:
 1166              	.L83:
 1167              	.LBE108:
 592:../system/src/drivers/analog_anemometer.c **** 	}
 1168              		.loc 1 592 0
 1169 00fc 80B2     		uxth	r0, r0
 1170 00fe FFF7FEFF 		bl	analog_anemometer_direction_sparkfun
 1171              	.LVL117:
 1172 0102 80B2     		uxth	r0, r0
 1173              	.LVL118:
 1174 0104 A6E7     		b	.L72
 1175              	.L73:
 1176              	.LVL119:
 1177              	.LBB109:
 1178              	.LBB110:
 106:../include/LedConfig.h **** 	}
 1179              		.loc 4 106 0
 1180 0106 0C4A     		ldr	r2, .L85+36
 1181 0108 9369     		ldr	r3, [r2, #24]
 1182 010a 43F00073 		orr	r3, r3, #33554432
 1183 010e 9361     		str	r3, [r2, #24]
 1184 0110 AEE7     		b	.L74
 1185              	.L86:
 1186 0112 00BF     		.align	2
 1187              	.L85:
 1188 0114 00040040 		.word	1073742848
 1189 0118 00000000 		.word	master_time
 1190 011c 00000000 		.word	wx_last_good_wind_time
 1191 0120 00000000 		.word	.LANCHOR9
 1192 0124 CDCCCCCC 		.word	-858993459
 1193 0128 00000000 		.word	analog_anemometer_direction_timer_values
 1194 012c 00000000 		.word	.LANCHOR10
 1195 0130 00000000 		.word	.LANCHOR11
 1196 0134 00000000 		.word	rte_wx_winddirection_last
 1197 0138 00080048 		.word	1207961600
 1198 013c 00000000 		.word	.LANCHOR8
 1199 0140 6D7B47FD 		.word	-45646995
 1200 0144 00000000 		.word	.LANCHOR1
 1201 0148 00000000 		.word	.LANCHOR2
 1202 014c AD8BDB68 		.word	1759218605
 1203 0150 00000000 		.word	.LANCHOR3
 1204              	.LBE110:
 1205              	.LBE109:
 1206              		.cfi_endproc
 1207              	.LFE706:
 1209              		.section	.text.analog_anemometer_get_qf,"ax",%progbits
 1210              		.align	1
 1211              		.global	analog_anemometer_get_qf
 1212              		.syntax unified
 1213              		.thumb
 1214              		.thumb_func
 1215              		.fpu fpv4-sp-d16
 1217              	analog_anemometer_get_qf:
 1218              	.LFB709:
 666:../system/src/drivers/analog_anemometer.c **** 
 667:../system/src/drivers/analog_anemometer.c **** analog_wind_qf_t analog_anemometer_get_qf(void) {
 1219              		.loc 1 667 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 1223              		@ link register save eliminated.
 668:../system/src/drivers/analog_anemometer.c **** 
 669:../system/src/drivers/analog_anemometer.c **** 	analog_wind_qf_t out;
 670:../system/src/drivers/analog_anemometer.c **** 
 671:../system/src/drivers/analog_anemometer.c **** 	if (
 672:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 1224              		.loc 1 672 0
 1225 0000 234B     		ldr	r3, .L103
 1226 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 671:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 1227              		.loc 1 671 0
 1228 0004 33B9     		cbnz	r3, .L88
 673:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 1229              		.loc 1 673 0
 1230 0006 234A     		ldr	r2, .L103+4
 1231 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 672:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 1232              		.loc 1 672 0
 1233 000a 1AB9     		cbnz	r2, .L88
 674:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1234              		.loc 1 674 0
 1235 000c 224A     		ldr	r2, .L103+8
 1236 000e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 673:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 1237              		.loc 1 673 0
 1238 0010 002A     		cmp	r2, #0
 1239 0012 35D0     		beq	.L93
 1240              	.L88:
 675:../system/src/drivers/analog_anemometer.c **** 			)
 676:../system/src/drivers/analog_anemometer.c **** 	{
 677:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_FULL;
 678:../system/src/drivers/analog_anemometer.c **** 	}
 679:../system/src/drivers/analog_anemometer.c **** 	else if (
 1241              		.loc 1 679 0
 1242 0014 012B     		cmp	r3, #1
 1243 0016 19D0     		beq	.L100
 1244              	.L90:
 680:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 1 &&
 681:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 682:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 683:../system/src/drivers/analog_anemometer.c **** 			)
 684:../system/src/drivers/analog_anemometer.c **** 	{
 685:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_DEGRADED_SLEW;
 686:../system/src/drivers/analog_anemometer.c **** 	}
 687:../system/src/drivers/analog_anemometer.c **** 	else if (
 1245              		.loc 1 687 0
 1246 0018 1BB9     		cbnz	r3, .L91
 688:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 689:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 1 &&
 1247              		.loc 1 689 0
 1248 001a 1E4A     		ldr	r2, .L103+4
 1249 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 688:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 1250              		.loc 1 688 0
 1251 001e 012A     		cmp	r2, #1
 1252 0020 1ED0     		beq	.L101
 1253              	.L91:
 690:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 691:../system/src/drivers/analog_anemometer.c **** 			)
 692:../system/src/drivers/analog_anemometer.c **** 	{
 693:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_DEGRADED_DEBOUNCE;
 694:../system/src/drivers/analog_anemometer.c **** 
 695:../system/src/drivers/analog_anemometer.c **** 	}
 696:../system/src/drivers/analog_anemometer.c **** 	else if (
 1254              		.loc 1 696 0
 1255 0022 012B     		cmp	r3, #1
 1256 0024 22D0     		beq	.L102
 1257              	.L92:
 697:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 1 &&
 698:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 1 &&
 699:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 700:../system/src/drivers/analog_anemometer.c **** 			)
 701:../system/src/drivers/analog_anemometer.c **** 	{
 702:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_DEGRADED;
 703:../system/src/drivers/analog_anemometer.c **** 
 704:../system/src/drivers/analog_anemometer.c **** 	}
 705:../system/src/drivers/analog_anemometer.c **** 	else if (
 1258              		.loc 1 705 0
 1259 0026 002B     		cmp	r3, #0
 1260 0028 2CD1     		bne	.L97
 706:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 707:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 1261              		.loc 1 707 0
 1262 002a 1A4B     		ldr	r3, .L103+4
 1263 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 706:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 1264              		.loc 1 706 0
 1265 002e 002B     		cmp	r3, #0
 1266 0030 2AD1     		bne	.L98
 708:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 1
 1267              		.loc 1 708 0
 1268 0032 194B     		ldr	r3, .L103+8
 1269 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 707:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 1
 1270              		.loc 1 707 0
 1271 0036 012B     		cmp	r3, #1
 1272 0038 28D0     		beq	.L99
 709:../system/src/drivers/analog_anemometer.c **** 			)
 710:../system/src/drivers/analog_anemometer.c **** 	{
 711:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_NOT_AVALIABLE;
 712:../system/src/drivers/analog_anemometer.c **** 
 713:../system/src/drivers/analog_anemometer.c **** 	}
 714:../system/src/drivers/analog_anemometer.c **** 	else {
 715:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_UNKNOWN;
 1273              		.loc 1 715 0
 1274 003a 0520     		movs	r0, #5
 1275              	.L89:
 1276              	.LVL120:
 716:../system/src/drivers/analog_anemometer.c **** 
 717:../system/src/drivers/analog_anemometer.c **** 	}
 718:../system/src/drivers/analog_anemometer.c **** 
 719:../system/src/drivers/analog_anemometer.c **** 	// reseting flags
 720:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_slew_limit_fired = 0;
 1277              		.loc 1 720 0
 1278 003c 0023     		movs	r3, #0
 1279 003e 144A     		ldr	r2, .L103
 1280 0040 1370     		strb	r3, [r2]
 721:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_deboucing_fired = 0;
 1281              		.loc 1 721 0
 1282 0042 144A     		ldr	r2, .L103+4
 1283 0044 1370     		strb	r3, [r2]
 722:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_direction_doesnt_work = 0;
 1284              		.loc 1 722 0
 1285 0046 144A     		ldr	r2, .L103+8
 1286 0048 1370     		strb	r3, [r2]
 723:../system/src/drivers/analog_anemometer.c **** 
 724:../system/src/drivers/analog_anemometer.c **** 	return out;
 725:../system/src/drivers/analog_anemometer.c **** 
 726:../system/src/drivers/analog_anemometer.c **** }
 1287              		.loc 1 726 0
 1288 004a 7047     		bx	lr
 1289              	.LVL121:
 1290              	.L100:
 681:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1291              		.loc 1 681 0
 1292 004c 114A     		ldr	r2, .L103+4
 1293 004e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 680:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 1294              		.loc 1 680 0
 1295 0050 002A     		cmp	r2, #0
 1296 0052 E1D1     		bne	.L90
 682:../system/src/drivers/analog_anemometer.c **** 			)
 1297              		.loc 1 682 0
 1298 0054 104A     		ldr	r2, .L103+8
 1299 0056 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 681:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1300              		.loc 1 681 0
 1301 0058 002A     		cmp	r2, #0
 1302 005a DDD1     		bne	.L90
 685:../system/src/drivers/analog_anemometer.c **** 	}
 1303              		.loc 1 685 0
 1304 005c 0220     		movs	r0, #2
 1305 005e EDE7     		b	.L89
 1306              	.L101:
 690:../system/src/drivers/analog_anemometer.c **** 			)
 1307              		.loc 1 690 0
 1308 0060 0D4A     		ldr	r2, .L103+8
 1309 0062 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 689:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1310              		.loc 1 689 0
 1311 0064 002A     		cmp	r2, #0
 1312 0066 DCD1     		bne	.L91
 693:../system/src/drivers/analog_anemometer.c **** 
 1313              		.loc 1 693 0
 1314 0068 0120     		movs	r0, #1
 1315 006a E7E7     		b	.L89
 1316              	.L102:
 698:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1317              		.loc 1 698 0
 1318 006c 094A     		ldr	r2, .L103+4
 1319 006e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 697:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 1 &&
 1320              		.loc 1 697 0
 1321 0070 012A     		cmp	r2, #1
 1322 0072 D8D1     		bne	.L92
 699:../system/src/drivers/analog_anemometer.c **** 			)
 1323              		.loc 1 699 0
 1324 0074 084A     		ldr	r2, .L103+8
 1325 0076 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 698:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1326              		.loc 1 698 0
 1327 0078 002A     		cmp	r2, #0
 1328 007a D4D1     		bne	.L92
 702:../system/src/drivers/analog_anemometer.c **** 
 1329              		.loc 1 702 0
 1330 007c 0320     		movs	r0, #3
 1331 007e DDE7     		b	.L89
 1332              	.L93:
 677:../system/src/drivers/analog_anemometer.c **** 	}
 1333              		.loc 1 677 0
 1334 0080 0020     		movs	r0, #0
 1335 0082 DBE7     		b	.L89
 1336              	.L97:
 715:../system/src/drivers/analog_anemometer.c **** 
 1337              		.loc 1 715 0
 1338 0084 0520     		movs	r0, #5
 1339 0086 D9E7     		b	.L89
 1340              	.L98:
 1341 0088 0520     		movs	r0, #5
 1342 008a D7E7     		b	.L89
 1343              	.L99:
 711:../system/src/drivers/analog_anemometer.c **** 
 1344              		.loc 1 711 0
 1345 008c 0420     		movs	r0, #4
 1346 008e D5E7     		b	.L89
 1347              	.L104:
 1348              		.align	2
 1349              	.L103:
 1350 0090 00000000 		.word	.LANCHOR5
 1351 0094 00000000 		.word	.LANCHOR6
 1352 0098 00000000 		.word	.LANCHOR8
 1353              		.cfi_endproc
 1354              	.LFE709:
 1356              		.global	analog_anemometer_direction_sparkfun_ranges
 1357              		.global	analog_anemometer_direction_mode
 1358              		.global	analog_anemometer_last_direction_cnt
 1359              		.global	analog_anemometer_direction_pol
 1360              		.global	analog_anemometer_a_coeff
 1361              		.global	analog_anemometer_b_coeff
 1362              		.global	analog_anemometer_direction
 1363              		.global	analog_anemometer_direction_doesnt_work
 1364              		.global	analog_anemometer_deboucing_fired
 1365              		.global	analog_anemometer_slew_limit_fired
 1366              		.global	analog_anemometer_timer_has_been_fired
 1367              		.global	analog_anemometer_pulses_per_m_s_constant
 1368              		.global	analog_anemometer_direction_timer_values_it
 1369              		.comm	analog_anemometer_direction_timer_values,20,4
 1370              		.comm	analog_anemometer_time_between_pulses,20,4
 1371              		.comm	analog_anemometer_windspeed_pulses_time,20,4
 1372              		.comm	DMA_InitStruct,44,4
 1373              		.section	.bss.analog_anemometer_deboucing_fired,"aw",%nobits
 1374              		.set	.LANCHOR6,. + 0
 1377              	analog_anemometer_deboucing_fired:
 1378 0000 00       		.space	1
 1379              		.section	.bss.analog_anemometer_direction,"aw",%nobits
 1380              		.align	1
 1383              	analog_anemometer_direction:
 1384 0000 0000     		.space	2
 1385              		.section	.bss.analog_anemometer_direction_doesnt_work,"aw",%nobits
 1386              		.set	.LANCHOR8,. + 0
 1389              	analog_anemometer_direction_doesnt_work:
 1390 0000 00       		.space	1
 1391              		.section	.bss.analog_anemometer_direction_timer_values_it,"aw",%nobits
 1392              		.set	.LANCHOR9,. + 0
 1395              	analog_anemometer_direction_timer_values_it:
 1396 0000 00       		.space	1
 1397              		.section	.bss.analog_anemometer_last_direction_cnt,"aw",%nobits
 1398              		.align	1
 1399              		.set	.LANCHOR11,. + 0
 1402              	analog_anemometer_last_direction_cnt:
 1403 0000 0000     		.space	2
 1404              		.section	.bss.analog_anemometer_pulses_per_m_s_constant,"aw",%nobits
 1405              		.align	1
 1406              		.set	.LANCHOR0,. + 0
 1409              	analog_anemometer_pulses_per_m_s_constant:
 1410 0000 0000     		.space	2
 1411              		.section	.bss.analog_anemometer_slew_limit_fired,"aw",%nobits
 1412              		.set	.LANCHOR5,. + 0
 1415              	analog_anemometer_slew_limit_fired:
 1416 0000 00       		.space	1
 1417              		.section	.bss.analog_anemometer_timer_has_been_fired,"aw",%nobits
 1418              		.set	.LANCHOR4,. + 0
 1421              	analog_anemometer_timer_has_been_fired:
 1422 0000 00       		.space	1
 1423              		.section	.data.analog_anemometer_a_coeff,"aw",%progbits
 1424              		.align	1
 1425              		.set	.LANCHOR1,. + 0
 1428              	analog_anemometer_a_coeff:
 1429 0000 0A00     		.short	10
 1430              		.section	.data.analog_anemometer_b_coeff,"aw",%progbits
 1431              		.align	1
 1432              		.set	.LANCHOR2,. + 0
 1435              	analog_anemometer_b_coeff:
 1436 0000 6400     		.short	100
 1437              		.section	.data.analog_anemometer_direction_mode,"aw",%progbits
 1438              		.set	.LANCHOR10,. + 0
 1441              	analog_anemometer_direction_mode:
 1442 0000 01       		.byte	1
 1443              		.section	.data.analog_anemometer_direction_pol,"aw",%progbits
 1444              		.set	.LANCHOR3,. + 0
 1447              	analog_anemometer_direction_pol:
 1448 0000 01       		.byte	1
 1449              		.section	.rodata.analog_anemometer_direction_sparkfun_ranges,"a",%progbits
 1450              		.align	2
 1451              		.set	.LANCHOR7,. + 0
 1454              	analog_anemometer_direction_sparkfun_ranges:
 1455 0000 B20F     		.short	4018
 1456 0002 1010     		.short	4112
 1457 0004 7000     		.short	112
 1458 0006 1010     		.short	4112
 1459 0008 5610     		.short	4182
 1460 000a 4300     		.short	67
 1461 000c 5610     		.short	4182
 1462 000e C810     		.short	4296
 1463 0010 5A00     		.short	90
 1464 0012 C810     		.short	4296
 1465 0014 B911     		.short	4537
 1466 0016 9D00     		.short	157
 1467 0018 B911     		.short	4537
 1468 001a E812     		.short	4840
 1469 001c 8700     		.short	135
 1470 001e E812     		.short	4840
 1471 0020 F313     		.short	5107
 1472 0022 CA00     		.short	202
 1473 0024 F313     		.short	5107
 1474 0026 9915     		.short	5529
 1475 0028 B400     		.short	180
 1476 002a 9915     		.short	5529
 1477 002c 5E17     		.short	5982
 1478 002e 1600     		.short	22
 1479 0030 5E17     		.short	5982
 1480 0032 5A19     		.short	6490
 1481 0034 2D00     		.short	45
 1482 0036 5A19     		.short	6490
 1483 0038 171B     		.short	6935
 1484 003a F700     		.short	247
 1485 003c 171B     		.short	6935
 1486 003e 211C     		.short	7201
 1487 0040 E100     		.short	225
 1488 0042 211C     		.short	7201
 1489 0044 B71D     		.short	7607
 1490 0046 5101     		.short	337
 1491 0048 B71D     		.short	7607
 1492 004a FC1E     		.short	7932
 1493 004c 0000     		.short	0
 1494 004e FC1E     		.short	7932
 1495 0050 9D20     		.short	8349
 1496 0052 2401     		.short	292
 1497 0054 9D20     		.short	8349
 1498 0056 2A22     		.short	8746
 1499 0058 0E01     		.short	270
 1500 005a 2A22     		.short	8746
 1501 005c 3C24     		.short	9276
 1502 005e 3B01     		.short	315
 1503              		.text
 1504              	.Letext0:
 1505              		.file 6 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 1506              		.file 7 "../system/include/drivers/analog_anemometer.h"
 1507              		.file 8 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1508              		.file 9 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1509              		.file 10 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/st
 1510              		.file 11 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1511              		.file 12 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 1512              		.file 13 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 1513              		.file 14 "../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h"
 1514              		.file 15 "../system/include/stm32l4-hal-driver/stm32l4xx_ll_gpio.h"
 1515              		.file 16 "../system/include/drivers/dallas.h"
 1516              		.file 17 "../system/include/davis_vantage/davis_loop_t.h"
 1517              		.file 18 "../system/include/umb_master/umb_frame_t.h"
 1518              		.file 19 "../system/include/umb_master/umb_state_t.h"
 1519              		.file 20 "../system/include/drivers/serial.h"
 1520              		.file 21 "../system/include/umb_master/umb_context_t.h"
 1521              		.file 22 "../system/include/umb_master/umb_qf_t.h"
 1522              		.file 23 "../include/config_data.h"
 1523              		.file 24 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 1524              		.file 25 "../system/include/drivers/ms5611.h"
 1525              		.file 26 "../system/include/drivers/bme280.h"
 1526              		.file 27 "../include/rte_wx.h"
 1527              		.file 28 "../system/include/aprs/cfifo.h"
 1528              		.file 29 "../system/include/aprs/afsk.h"
 1529              		.file 30 "../system/include/aprs/ax25.h"
 1530              		.file 31 "../include/wx_handler.h"
 1531              		.file 32 "../system/include/drivers/dma_helper_functions.h"
 1532              		.file 33 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 analog_anemometer.c
     /tmp/cc0TddDR.s:18     .text.analog_anemometer_init:0000000000000000 $t
     /tmp/cc0TddDR.s:25     .text.analog_anemometer_init:0000000000000000 analog_anemometer_init
     /tmp/cc0TddDR.s:265    .text.analog_anemometer_init:0000000000000134 $d
                            *COM*:0000000000000014 analog_anemometer_windspeed_pulses_time
                            *COM*:0000000000000014 analog_anemometer_time_between_pulses
                            *COM*:0000000000000014 analog_anemometer_direction_timer_values
                            *COM*:000000000000002c DMA_InitStruct
     /tmp/cc0TddDR.s:287    .text.analog_anemometer_timer_irq:0000000000000000 $t
     /tmp/cc0TddDR.s:294    .text.analog_anemometer_timer_irq:0000000000000000 analog_anemometer_timer_irq
     /tmp/cc0TddDR.s:310    .text.analog_anemometer_timer_irq:0000000000000008 $d
     /tmp/cc0TddDR.s:315    .text.analog_anemometer_dma_irq:0000000000000000 $t
     /tmp/cc0TddDR.s:322    .text.analog_anemometer_dma_irq:0000000000000000 analog_anemometer_dma_irq
     /tmp/cc0TddDR.s:754    .text.analog_anemometer_dma_irq:0000000000000218 $d
     /tmp/cc0TddDR.s:768    .text.analog_anemometer_get_ms_from_pulse:0000000000000000 $t
     /tmp/cc0TddDR.s:775    .text.analog_anemometer_get_ms_from_pulse:0000000000000000 analog_anemometer_get_ms_from_pulse
     /tmp/cc0TddDR.s:809    .text.analog_anemometer_get_ms_from_pulse:0000000000000020 $d
     /tmp/cc0TddDR.s:815    .text.analog_anemometer_direction_sparkfun:0000000000000000 $t
     /tmp/cc0TddDR.s:822    .text.analog_anemometer_direction_sparkfun:0000000000000000 analog_anemometer_direction_sparkfun
     /tmp/cc0TddDR.s:878    .text.analog_anemometer_direction_sparkfun:000000000000003c $d
     /tmp/cc0TddDR.s:883    .text.analog_anemometer_direction_reset:0000000000000000 $t
     /tmp/cc0TddDR.s:890    .text.analog_anemometer_direction_reset:0000000000000000 analog_anemometer_direction_reset
     /tmp/cc0TddDR.s:930    .text.analog_anemometer_direction_reset:0000000000000018 $d
     /tmp/cc0TddDR.s:935    .text.analog_anemometer_direction_handler:0000000000000000 $t
     /tmp/cc0TddDR.s:942    .text.analog_anemometer_direction_handler:0000000000000000 analog_anemometer_direction_handler
     /tmp/cc0TddDR.s:1188   .text.analog_anemometer_direction_handler:0000000000000114 $d
     /tmp/cc0TddDR.s:1210   .text.analog_anemometer_get_qf:0000000000000000 $t
     /tmp/cc0TddDR.s:1217   .text.analog_anemometer_get_qf:0000000000000000 analog_anemometer_get_qf
     /tmp/cc0TddDR.s:1350   .text.analog_anemometer_get_qf:0000000000000090 $d
     /tmp/cc0TddDR.s:1454   .rodata.analog_anemometer_direction_sparkfun_ranges:0000000000000000 analog_anemometer_direction_sparkfun_ranges
     /tmp/cc0TddDR.s:1441   .data.analog_anemometer_direction_mode:0000000000000000 analog_anemometer_direction_mode
     /tmp/cc0TddDR.s:1402   .bss.analog_anemometer_last_direction_cnt:0000000000000000 analog_anemometer_last_direction_cnt
     /tmp/cc0TddDR.s:1447   .data.analog_anemometer_direction_pol:0000000000000000 analog_anemometer_direction_pol
     /tmp/cc0TddDR.s:1428   .data.analog_anemometer_a_coeff:0000000000000000 analog_anemometer_a_coeff
     /tmp/cc0TddDR.s:1435   .data.analog_anemometer_b_coeff:0000000000000000 analog_anemometer_b_coeff
     /tmp/cc0TddDR.s:1383   .bss.analog_anemometer_direction:0000000000000000 analog_anemometer_direction
     /tmp/cc0TddDR.s:1389   .bss.analog_anemometer_direction_doesnt_work:0000000000000000 analog_anemometer_direction_doesnt_work
     /tmp/cc0TddDR.s:1377   .bss.analog_anemometer_deboucing_fired:0000000000000000 analog_anemometer_deboucing_fired
     /tmp/cc0TddDR.s:1415   .bss.analog_anemometer_slew_limit_fired:0000000000000000 analog_anemometer_slew_limit_fired
     /tmp/cc0TddDR.s:1421   .bss.analog_anemometer_timer_has_been_fired:0000000000000000 analog_anemometer_timer_has_been_fired
     /tmp/cc0TddDR.s:1409   .bss.analog_anemometer_pulses_per_m_s_constant:0000000000000000 analog_anemometer_pulses_per_m_s_constant
     /tmp/cc0TddDR.s:1395   .bss.analog_anemometer_direction_timer_values_it:0000000000000000 analog_anemometer_direction_timer_values_it
     /tmp/cc0TddDR.s:1378   .bss.analog_anemometer_deboucing_fired:0000000000000000 $d
     /tmp/cc0TddDR.s:1380   .bss.analog_anemometer_direction:0000000000000000 $d
     /tmp/cc0TddDR.s:1390   .bss.analog_anemometer_direction_doesnt_work:0000000000000000 $d
     /tmp/cc0TddDR.s:1396   .bss.analog_anemometer_direction_timer_values_it:0000000000000000 $d
     /tmp/cc0TddDR.s:1398   .bss.analog_anemometer_last_direction_cnt:0000000000000000 $d
     /tmp/cc0TddDR.s:1405   .bss.analog_anemometer_pulses_per_m_s_constant:0000000000000000 $d
     /tmp/cc0TddDR.s:1416   .bss.analog_anemometer_slew_limit_fired:0000000000000000 $d
     /tmp/cc0TddDR.s:1422   .bss.analog_anemometer_timer_has_been_fired:0000000000000000 $d
     /tmp/cc0TddDR.s:1424   .data.analog_anemometer_a_coeff:0000000000000000 $d
     /tmp/cc0TddDR.s:1431   .data.analog_anemometer_b_coeff:0000000000000000 $d
     /tmp/cc0TddDR.s:1450   .rodata.analog_anemometer_direction_sparkfun_ranges:0000000000000000 $d
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.station_config.h.9.d547169434a316afe56104ac612d2109
                           .group:0000000000000000 wm4.station_config_target_hw.h.9.a20e080416e80d1cff9c1b51cc464832
                           .group:0000000000000000 wm4.analog_anemometer.h.9.430158203b91afa161b428bcf6db9b27
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.analog_anemometer.h.24.21280651ebc1262cc199fde93c45eb95
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.78077cef1206e937f7b56043ffca496a
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32l4xx_ll_dma.h.22.7288ce0691bde44ea1017c58de45d400
                           .group:0000000000000000 wm4.stm32l4xx_ll_gpio.h.22.6ea69d1eee1200f6e0d48e871aaa811d
                           .group:0000000000000000 wm4.dallas.h.28.4c25313e4181236c94847de9c84bd06e
                           .group:0000000000000000 wm4.umb_frame_t.h.9.05796095a57acd1575f07118cb6ab058
                           .group:0000000000000000 wm4.umb_defines.h.9.77e79b84cd2dd9a74204aaeb1ca9d6be
                           .group:0000000000000000 wm4.stm32l4xx_ll_usart.h.22.ec2beebcd146668c5b35749264d7b58a
                           .group:0000000000000000 wm4.serial.h.14.eed7cf013c382ed4598746b40f0e2523
                           .group:0000000000000000 wm4.config_data.h.9.6026a38cd2f39158a8fd50707ba1bf90
                           .group:0000000000000000 wm4.math.h.13.adb102f7bd7860b1f241e149d6914a1e
                           .group:0000000000000000 wm4.ms5611.h.13.84fbf6afa85557f675e3d85f1be6067c
                           .group:0000000000000000 wm4.bme280.h.9.aefe05f9329372f30337537cea488dce
                           .group:0000000000000000 wm4.rte_wx.h.30.cb80bd87f9fae81b43459954f1781e96
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.macros.h.2.7a7a5ac48d4160b7481c806e80b68442
                           .group:0000000000000000 wm4.config.h.2.f5e96167cb26b0ce97c5e7513a95bc8b
                           .group:0000000000000000 wm4.afsk.h.17.cf8f922069680e152e1eddb76cd4cc82
                           .group:0000000000000000 wm4.ax25.h.18.077e42a4af9016476e34900472a8fe18
                           .group:0000000000000000 wm4.main.h.8.3d6ad69e5f061008d8c5cc5f5c9dd15a
                           .group:0000000000000000 wm4.wx_handler.h.9.70f7141466ac521f5731794f4f690a16
                           .group:0000000000000000 wm4.LedConfig.h.9.4d8a7e6bb86dda658c789f8aaf01aaee
                           .group:0000000000000000 wm4.stm32l4xx_ll_tim.h.22.3ad11d579f6c3053b8c8daba8bebe46e

UNDEFINED SYMBOLS
memset
LL_TIM_DeInit
LL_TIM_Init
LL_TIM_IC_Init
LL_DMA_Init
LL_GPIO_Init
LL_TIM_StructInit
dma_helper_start_ch7
led_blinking_led2
rte_wx_windspeed_pulses
master_time
wx_last_good_wind_time
rte_wx_winddirection_last
