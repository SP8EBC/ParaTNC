   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ax25.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.updcrc_ccitt,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	updcrc_ccitt:
  25              	.LFB3:
  26              		.file 1 "../system/include/aprs/crc.h"
   1:../system/include/aprs/crc.h **** #ifndef CRC_H_
   2:../system/include/aprs/crc.h **** #define CRC_H_
   3:../system/include/aprs/crc.h **** 
   4:../system/include/aprs/crc.h **** #include <stdint.h>
   5:../system/include/aprs/crc.h **** 
   6:../system/include/aprs/crc.h **** #include <macros.h>
   7:../system/include/aprs/crc.h **** 
   8:../system/include/aprs/crc.h **** extern const uint16_t crc_ccitt_tab[256];
   9:../system/include/aprs/crc.h **** #ifdef __cplusplus
  10:../system/include/aprs/crc.h **** extern "C"
  11:../system/include/aprs/crc.h **** {
  12:../system/include/aprs/crc.h **** #endif
  13:../system/include/aprs/crc.h **** /**************************************************************************************************
  14:../system/include/aprs/crc.h **** static uint16_t updcrc_ccitt(uint8_t c, uint16_t oldcrc) {
  27              		.loc 1 14 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  15:../system/include/aprs/crc.h **** /**************************************************************************************************
  16:../system/include/aprs/crc.h **** 
  17:../system/include/aprs/crc.h **** 	return (oldcrc >> 8) ^ pgm_read16(&crc_ccitt_tab[(oldcrc ^ c) & 0xff]);
  33              		.loc 1 17 0
  34 0000 4840     		eors	r0, r0, r1
  35              	.LVL1:
  36 0002 C0B2     		uxtb	r0, r0
  37 0004 024B     		ldr	r3, .L2
  38 0006 33F81000 		ldrh	r0, [r3, r0, lsl #1]
  18:../system/include/aprs/crc.h **** }
  39              		.loc 1 18 0
  40 000a 80EA1120 		eor	r0, r0, r1, lsr #8
  41 000e 7047     		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 0010 00000000 		.word	crc_ccitt_tab
  46              		.cfi_endproc
  47              	.LFE3:
  49              		.section	.text.fifo_isempty,"ax",%progbits
  50              		.align	1
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	fifo_isempty:
  57              	.LFB4:
  58              		.file 2 "../system/src/aprs/ax25.c"
   1:../system/src/aprs/ax25.c **** 
   2:../system/src/aprs/ax25.c **** #include "ax25.h"
   3:../system/src/aprs/ax25.c **** 
   4:../system/src/aprs/ax25.c **** #include <string.h> /* memset */
   5:../system/src/aprs/ax25.c **** #include <ctype.h>
   6:../system/src/aprs/ax25.c **** #include <stdio.h> /* printf */
   7:../system/src/aprs/ax25.c **** 
   8:../system/src/aprs/ax25.c **** #include <afsk.h>
   9:../system/src/aprs/ax25.c **** #include <cfifo.h>
  10:../system/src/aprs/ax25.c **** #include <crc.h>
  11:../system/src/aprs/ax25.c **** 
  12:../system/src/aprs/ax25.c **** #include "station_config.h"
  13:../system/src/aprs/ax25.c **** 
  14:../system/src/aprs/ax25.c **** #include "KissCommunication.h"
  15:../system/src/aprs/ax25.c **** 
  16:../system/src/aprs/ax25.c **** AX25Msg ax25_rxed_frame;
  17:../system/src/aprs/ax25.c **** char ax25_new_msg_rx_flag;
  18:../system/src/aprs/ax25.c **** 
  19:../system/src/aprs/ax25.c **** 
  20:../system/src/aprs/ax25.c **** /**************************************************************************************************
  21:../system/src/aprs/ax25.c **** static bool fifo_isempty(const FIFOBuffer *fb) {
  59              		.loc 2 21 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL2:
  22:../system/src/aprs/ax25.c **** /**************************************************************************************************
  23:../system/src/aprs/ax25.c **** 
  24:../system/src/aprs/ax25.c **** 	return fb->head == fb->tail;
  65              		.loc 2 24 0
  66 0000 0268     		ldr	r2, [r0]
  67 0002 4068     		ldr	r0, [r0, #4]
  68              	.LVL3:
  25:../system/src/aprs/ax25.c **** 
  26:../system/src/aprs/ax25.c **** }
  69              		.loc 2 26 0
  70 0004 8242     		cmp	r2, r0
  71 0006 14BF     		ite	ne
  72 0008 0020     		movne	r0, #0
  73 000a 0120     		moveq	r0, #1
  74 000c 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE4:
  78              		.section	.text.fifo_isfull,"ax",%progbits
  79              		.align	1
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu fpv4-sp-d16
  85              	fifo_isfull:
  86              	.LFB5:
  27:../system/src/aprs/ax25.c **** 
  28:../system/src/aprs/ax25.c **** 
  29:../system/src/aprs/ax25.c **** /**************************************************************************************************
  30:../system/src/aprs/ax25.c **** static bool fifo_isfull(const FIFOBuffer *fb) {
  87              		.loc 2 30 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL4:
  31:../system/src/aprs/ax25.c **** /**************************************************************************************************
  32:../system/src/aprs/ax25.c **** 
  33:../system/src/aprs/ax25.c **** 	return ((fb->head == fb->begin) && (fb->tail == fb->end)) || (fb->tail == fb->head - 1);
  93              		.loc 2 33 0
  94 0000 0268     		ldr	r2, [r0]
  95 0002 8368     		ldr	r3, [r0, #8]
  96 0004 9A42     		cmp	r2, r3
  97 0006 06D0     		beq	.L10
  98              	.L6:
  99              		.loc 2 33 0 is_stmt 0 discriminator 4
 100 0008 4268     		ldr	r2, [r0, #4]
 101 000a 0368     		ldr	r3, [r0]
 102 000c 013B     		subs	r3, r3, #1
 103 000e 9A42     		cmp	r2, r3
 104 0010 07D0     		beq	.L11
 105              		.loc 2 33 0
 106 0012 0020     		movs	r0, #0
 107              	.LVL5:
  34:../system/src/aprs/ax25.c **** 
  35:../system/src/aprs/ax25.c **** }
 108              		.loc 2 35 0 is_stmt 1
 109 0014 7047     		bx	lr
 110              	.LVL6:
 111              	.L10:
  33:../system/src/aprs/ax25.c **** 
 112              		.loc 2 33 0 discriminator 1
 113 0016 4268     		ldr	r2, [r0, #4]
 114 0018 C368     		ldr	r3, [r0, #12]
 115 001a 9A42     		cmp	r2, r3
 116 001c F4D1     		bne	.L6
  33:../system/src/aprs/ax25.c **** 
 117              		.loc 2 33 0 is_stmt 0
 118 001e 0120     		movs	r0, #1
 119              	.LVL7:
 120 0020 7047     		bx	lr
 121              	.LVL8:
 122              	.L11:
 123 0022 0120     		movs	r0, #1
 124              	.LVL9:
 125 0024 7047     		bx	lr
 126              		.cfi_endproc
 127              	.LFE5:
 129              		.section	.text.fifo_push,"ax",%progbits
 130              		.align	1
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu fpv4-sp-d16
 136              	fifo_push:
 137              	.LFB6:
  36:../system/src/aprs/ax25.c **** 
  37:../system/src/aprs/ax25.c **** 
  38:../system/src/aprs/ax25.c **** /**************************************************************************************************
  39:../system/src/aprs/ax25.c **** static void fifo_push(FIFOBuffer *fb, uint8_t c) {
 138              		.loc 2 39 0 is_stmt 1
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143              	.LVL10:
  40:../system/src/aprs/ax25.c **** /**************************************************************************************************
  41:../system/src/aprs/ax25.c **** 
  42:../system/src/aprs/ax25.c **** 	/* Write at tail position */
  43:../system/src/aprs/ax25.c **** 	*(fb->tail) = c;
 144              		.loc 2 43 0
 145 0000 4368     		ldr	r3, [r0, #4]
 146 0002 1970     		strb	r1, [r3]
  44:../system/src/aprs/ax25.c **** 
  45:../system/src/aprs/ax25.c **** 	if (fb->tail == fb->end)
 147              		.loc 2 45 0
 148 0004 4268     		ldr	r2, [r0, #4]
 149 0006 C368     		ldr	r3, [r0, #12]
 150 0008 9A42     		cmp	r2, r3
 151 000a 03D0     		beq	.L15
  46:../system/src/aprs/ax25.c **** 	{
  47:../system/src/aprs/ax25.c **** 		/* wrap tail around */
  48:../system/src/aprs/ax25.c **** 		fb->tail = fb->begin;
  49:../system/src/aprs/ax25.c **** 	}
  50:../system/src/aprs/ax25.c **** 	else
  51:../system/src/aprs/ax25.c **** 	{
  52:../system/src/aprs/ax25.c **** 		/* Move tail forward */
  53:../system/src/aprs/ax25.c **** 		fb->tail++;
 152              		.loc 2 53 0
 153 000c 4368     		ldr	r3, [r0, #4]
 154 000e 0133     		adds	r3, r3, #1
 155 0010 4360     		str	r3, [r0, #4]
  54:../system/src/aprs/ax25.c **** 	}
  55:../system/src/aprs/ax25.c **** 
  56:../system/src/aprs/ax25.c **** }
 156              		.loc 2 56 0
 157 0012 7047     		bx	lr
 158              	.L15:
  48:../system/src/aprs/ax25.c **** 	}
 159              		.loc 2 48 0
 160 0014 8368     		ldr	r3, [r0, #8]
 161 0016 4360     		str	r3, [r0, #4]
 162 0018 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE6:
 166              		.section	.text.fifo_pop,"ax",%progbits
 167              		.align	1
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu fpv4-sp-d16
 173              	fifo_pop:
 174              	.LFB7:
  57:../system/src/aprs/ax25.c **** 
  58:../system/src/aprs/ax25.c **** 
  59:../system/src/aprs/ax25.c **** /**************************************************************************************************
  60:../system/src/aprs/ax25.c **** static uint8_t fifo_pop(FIFOBuffer *fb) {
 175              		.loc 2 60 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL11:
  61:../system/src/aprs/ax25.c **** /**************************************************************************************************
  62:../system/src/aprs/ax25.c **** 
  63:../system/src/aprs/ax25.c **** 	if (fb->head == fb->end)
 181              		.loc 2 63 0
 182 0000 0268     		ldr	r2, [r0]
 183 0002 C368     		ldr	r3, [r0, #12]
 184 0004 9A42     		cmp	r2, r3
 185 0006 04D0     		beq	.L19
  64:../system/src/aprs/ax25.c **** 	{
  65:../system/src/aprs/ax25.c **** 		/* wrap head around */
  66:../system/src/aprs/ax25.c **** 		fb->head = fb->begin;
  67:../system/src/aprs/ax25.c **** 		return *(fb->end);
  68:../system/src/aprs/ax25.c **** 	}
  69:../system/src/aprs/ax25.c **** 	else
  70:../system/src/aprs/ax25.c **** 	{
  71:../system/src/aprs/ax25.c **** 		/* move head forward */
  72:../system/src/aprs/ax25.c **** 		return *(fb->head++);
 186              		.loc 2 72 0
 187 0008 0368     		ldr	r3, [r0]
 188 000a 5A1C     		adds	r2, r3, #1
 189 000c 0260     		str	r2, [r0]
 190 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 191              	.LVL12:
  73:../system/src/aprs/ax25.c **** 	}
  74:../system/src/aprs/ax25.c **** 
  75:../system/src/aprs/ax25.c **** }
 192              		.loc 2 75 0
 193 0010 7047     		bx	lr
 194              	.LVL13:
 195              	.L19:
  66:../system/src/aprs/ax25.c **** 		return *(fb->end);
 196              		.loc 2 66 0
 197 0012 8268     		ldr	r2, [r0, #8]
 198 0014 0260     		str	r2, [r0]
  67:../system/src/aprs/ax25.c **** 	}
 199              		.loc 2 67 0
 200 0016 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 201              	.LVL14:
 202 0018 7047     		bx	lr
 203              		.cfi_endproc
 204              	.LFE7:
 206              		.section	.text.fifo_getc,"ax",%progbits
 207              		.align	1
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu fpv4-sp-d16
 213              	fifo_getc:
 214              	.LFB8:
  76:../system/src/aprs/ax25.c **** 
  77:../system/src/aprs/ax25.c **** 
  78:../system/src/aprs/ax25.c **** /**************************************************************************************************
  79:../system/src/aprs/ax25.c **** static int16_t fifo_getc(FIFOBuffer *fb) {
 215              		.loc 2 79 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              	.LVL15:
 220 0000 10B5     		push	{r4, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
 224 0002 0446     		mov	r4, r0
  80:../system/src/aprs/ax25.c **** /**************************************************************************************************
  81:../system/src/aprs/ax25.c **** 
  82:../system/src/aprs/ax25.c **** 	if (!fifo_isempty(fb)) return fifo_pop(fb);
 225              		.loc 2 82 0
 226 0004 FFF7FEFF 		bl	fifo_isempty
 227              	.LVL16:
 228 0008 20B9     		cbnz	r0, .L22
 229              		.loc 2 82 0 is_stmt 0 discriminator 1
 230 000a 2046     		mov	r0, r4
 231 000c FFF7FEFF 		bl	fifo_pop
 232              	.LVL17:
 233 0010 00B2     		sxth	r0, r0
 234              	.L21:
  83:../system/src/aprs/ax25.c **** 	else return -1;
  84:../system/src/aprs/ax25.c **** 
  85:../system/src/aprs/ax25.c **** }
 235              		.loc 2 85 0 is_stmt 1
 236 0012 10BD     		pop	{r4, pc}
 237              	.LVL18:
 238              	.L22:
  83:../system/src/aprs/ax25.c **** 	else return -1;
 239              		.loc 2 83 0
 240 0014 4FF0FF30 		mov	r0, #-1
 241 0018 FBE7     		b	.L21
 242              		.cfi_endproc
 243              	.LFE8:
 245              		.section	.text.fifo_putc,"ax",%progbits
 246              		.align	1
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv4-sp-d16
 252              	fifo_putc:
 253              	.LFB9:
  86:../system/src/aprs/ax25.c **** 
  87:../system/src/aprs/ax25.c **** /**************************************************************************************************
  88:../system/src/aprs/ax25.c **** static void fifo_putc(uint8_t c, FIFOBuffer *fb) {
 254              		.loc 2 88 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              	.LVL19:
 259 0000 38B5     		push	{r3, r4, r5, lr}
 260              		.cfi_def_cfa_offset 16
 261              		.cfi_offset 3, -16
 262              		.cfi_offset 4, -12
 263              		.cfi_offset 5, -8
 264              		.cfi_offset 14, -4
 265 0002 0546     		mov	r5, r0
 266 0004 0C46     		mov	r4, r1
  89:../system/src/aprs/ax25.c **** /**************************************************************************************************
  90:../system/src/aprs/ax25.c **** 
  91:../system/src/aprs/ax25.c **** 	if (!fifo_isfull(fb)) fifo_push(fb, c);
 267              		.loc 2 91 0
 268 0006 0846     		mov	r0, r1
 269              	.LVL20:
 270 0008 FFF7FEFF 		bl	fifo_isfull
 271              	.LVL21:
 272 000c 00B1     		cbz	r0, .L27
 273              	.L24:
  92:../system/src/aprs/ax25.c **** 
  93:../system/src/aprs/ax25.c **** }
 274              		.loc 2 93 0
 275 000e 38BD     		pop	{r3, r4, r5, pc}
 276              	.LVL22:
 277              	.L27:
  91:../system/src/aprs/ax25.c **** 
 278              		.loc 2 91 0 discriminator 1
 279 0010 2946     		mov	r1, r5
 280 0012 2046     		mov	r0, r4
 281 0014 FFF7FEFF 		bl	fifo_push
 282              	.LVL23:
 283              		.loc 2 93 0 discriminator 1
 284 0018 F9E7     		b	.L24
 285              		.cfi_endproc
 286              	.LFE9:
 288              		.section	.text.ax25_decode,"ax",%progbits
 289              		.align	1
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	ax25_decode:
 296              	.LFB10:
  94:../system/src/aprs/ax25.c **** 
  95:../system/src/aprs/ax25.c **** /**************************************************************************************************
  96:../system/src/aprs/ax25.c **** static void ax25_decode(AX25Ctx *ctx) {
 297              		.loc 2 96 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              	.LVL24:
 302 0000 70B5     		push	{r4, r5, r6, lr}
 303              		.cfi_def_cfa_offset 16
 304              		.cfi_offset 4, -16
 305              		.cfi_offset 5, -12
 306              		.cfi_offset 6, -8
 307              		.cfi_offset 14, -4
  97:../system/src/aprs/ax25.c **** /**************************************************************************************************
  98:../system/src/aprs/ax25.c **** 
  99:../system/src/aprs/ax25.c **** 	uint16_t i;
 100:../system/src/aprs/ax25.c **** 
 101:../system/src/aprs/ax25.c **** 	uint8_t *buf = ctx->buf;
 308              		.loc 2 101 0
 309 0002 0446     		mov	r4, r0
 310              	.LVL25:
 102:../system/src/aprs/ax25.c **** //
 103:../system/src/aprs/ax25.c **** 	for (i = 0; i < ctx->frm_len ;i++)
 311              		.loc 2 103 0
 312 0004 0023     		movs	r3, #0
 313 0006 04E0     		b	.L29
 314              	.LVL26:
 315              	.L30:
 104:../system/src/aprs/ax25.c **** 		*(ax25_rxed_frame.raw_data + i) = *(ctx->buf + i);
 316              		.loc 2 104 0 discriminator 3
 317 0008 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 318 000a 524A     		ldr	r2, .L57
 319 000c 9954     		strb	r1, [r3, r2]
 103:../system/src/aprs/ax25.c **** 		*(ax25_rxed_frame.raw_data + i) = *(ctx->buf + i);
 320              		.loc 2 103 0 discriminator 3
 321 000e 0133     		adds	r3, r3, #1
 322              	.LVL27:
 323 0010 9BB2     		uxth	r3, r3
 324              	.LVL28:
 325              	.L29:
 103:../system/src/aprs/ax25.c **** 		*(ax25_rxed_frame.raw_data + i) = *(ctx->buf + i);
 326              		.loc 2 103 0 is_stmt 0 discriminator 1
 327 0012 B0F80422 		ldrh	r2, [r0, #516]
 328 0016 9A42     		cmp	r2, r3
 329 0018 F6D8     		bhi	.L30
 105:../system/src/aprs/ax25.c **** 	*(ax25_rxed_frame.raw_data + i) = '\0';
 330              		.loc 2 105 0 is_stmt 1
 331 001a 4E49     		ldr	r1, .L57
 332 001c 0022     		movs	r2, #0
 333 001e 5A54     		strb	r2, [r3, r1]
 106:../system/src/aprs/ax25.c **** //
 107:../system/src/aprs/ax25.c **** 	ax25_rxed_frame.raw_msg_len = i;
 334              		.loc 2 107 0
 335 0020 A1F80032 		strh	r3, [r1, #512]	@ movhi
 336              	.LVL29:
 101:../system/src/aprs/ax25.c **** //
 337              		.loc 2 101 0
 338 0024 0146     		mov	r1, r0
 108:../system/src/aprs/ax25.c **** 
 109:../system/src/aprs/ax25.c **** 	for (i = 0; i < sizeof(ax25_rxed_frame.dst.call);i++)
 339              		.loc 2 109 0
 340 0026 1346     		mov	r3, r2
 341 0028 06E0     		b	.L31
 342              	.LVL30:
 343              	.L51:
 344              	.LBB2:
 110:../system/src/aprs/ax25.c **** 	{
 111:../system/src/aprs/ax25.c **** 		uint8_t c = (*(buf)++ >> 1);
 112:../system/src/aprs/ax25.c **** 		(ax25_rxed_frame.dst.call)[i] = (c == ' ') ? '\x0' : c;
 345              		.loc 2 112 0 discriminator 1
 346 002a 52B2     		sxtb	r2, r2
 347              	.LVL31:
 348              	.L32:
 349              		.loc 2 112 0 is_stmt 0 discriminator 4
 350 002c 4A49     		ldr	r1, .L57+4
 351              	.LVL32:
 352 002e 1944     		add	r1, r1, r3
 353 0030 CA71     		strb	r2, [r1, #7]
 354              	.LVL33:
 355              	.LBE2:
 109:../system/src/aprs/ax25.c **** 	{
 356              		.loc 2 109 0 is_stmt 1 discriminator 4
 357 0032 0133     		adds	r3, r3, #1
 358              	.LVL34:
 359 0034 9BB2     		uxth	r3, r3
 360              	.LVL35:
 361              	.LBB3:
 111:../system/src/aprs/ax25.c **** 		(ax25_rxed_frame.dst.call)[i] = (c == ' ') ? '\x0' : c;
 362              		.loc 2 111 0 discriminator 4
 363 0036 2146     		mov	r1, r4
 364              	.LVL36:
 365              	.L31:
 366              	.LBE3:
 109:../system/src/aprs/ax25.c **** 	{
 367              		.loc 2 109 0 discriminator 2
 368 0038 052B     		cmp	r3, #5
 369 003a 06D8     		bhi	.L50
 370              	.LBB4:
 111:../system/src/aprs/ax25.c **** 		(ax25_rxed_frame.dst.call)[i] = (c == ' ') ? '\x0' : c;
 371              		.loc 2 111 0
 372 003c 4C1C     		adds	r4, r1, #1
 373              	.LVL37:
 374 003e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 375 0040 5208     		lsrs	r2, r2, #1
 376              	.LVL38:
 377              		.loc 2 112 0
 378 0042 202A     		cmp	r2, #32
 379 0044 F1D1     		bne	.L51
 380 0046 0022     		movs	r2, #0
 381              	.LVL39:
 382 0048 F0E7     		b	.L32
 383              	.LVL40:
 384              	.L50:
 385              	.LBE4:
 113:../system/src/aprs/ax25.c **** 	}
 114:../system/src/aprs/ax25.c **** 	ax25_rxed_frame.dst.ssid = (*buf++ >> 1) & 0x0F;
 386              		.loc 2 114 0
 387 004a 4A1C     		adds	r2, r1, #1
 388              	.LVL41:
 389 004c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 390              	.LVL42:
 391 004e C3F34303 		ubfx	r3, r3, #1, #4
 392 0052 4149     		ldr	r1, .L57+4
 393 0054 4B73     		strb	r3, [r1, #13]
 394              	.LVL43:
 115:../system/src/aprs/ax25.c **** 
 116:../system/src/aprs/ax25.c **** 
 117:../system/src/aprs/ax25.c **** 	for (i = 0; i < sizeof(ax25_rxed_frame.src.call);i++)
 395              		.loc 2 117 0
 396 0056 0021     		movs	r1, #0
 397 0058 05E0     		b	.L34
 398              	.LVL44:
 399              	.L53:
 400              	.LBB5:
 118:../system/src/aprs/ax25.c **** 	{
 119:../system/src/aprs/ax25.c **** 		uint8_t c = (*(buf)++ >> 1);
 120:../system/src/aprs/ax25.c **** 		(ax25_rxed_frame.src.call)[i] = (c == ' ') ? '\x0' : c;
 401              		.loc 2 120 0 discriminator 1
 402 005a 5BB2     		sxtb	r3, r3
 403              	.LVL45:
 404              	.L35:
 405              		.loc 2 120 0 is_stmt 0 discriminator 4
 406 005c 3E4A     		ldr	r2, .L57+4
 407              	.LVL46:
 408 005e 5354     		strb	r3, [r2, r1]
 409              	.LVL47:
 410              	.LBE5:
 117:../system/src/aprs/ax25.c **** 	{
 411              		.loc 2 117 0 is_stmt 1 discriminator 4
 412 0060 0131     		adds	r1, r1, #1
 413              	.LVL48:
 414 0062 89B2     		uxth	r1, r1
 415              	.LVL49:
 416              	.LBB6:
 119:../system/src/aprs/ax25.c **** 		(ax25_rxed_frame.src.call)[i] = (c == ' ') ? '\x0' : c;
 417              		.loc 2 119 0 discriminator 4
 418 0064 2246     		mov	r2, r4
 419              	.LVL50:
 420              	.L34:
 421              	.LBE6:
 117:../system/src/aprs/ax25.c **** 	{
 422              		.loc 2 117 0 discriminator 2
 423 0066 0529     		cmp	r1, #5
 424 0068 06D8     		bhi	.L52
 425              	.LBB7:
 119:../system/src/aprs/ax25.c **** 		(ax25_rxed_frame.src.call)[i] = (c == ' ') ? '\x0' : c;
 426              		.loc 2 119 0
 427 006a 541C     		adds	r4, r2, #1
 428              	.LVL51:
 429 006c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 430 006e 5B08     		lsrs	r3, r3, #1
 431              	.LVL52:
 432              		.loc 2 120 0
 433 0070 202B     		cmp	r3, #32
 434 0072 F2D1     		bne	.L53
 435 0074 0023     		movs	r3, #0
 436              	.LVL53:
 437 0076 F1E7     		b	.L35
 438              	.LVL54:
 439              	.L52:
 440              	.LBE7:
 121:../system/src/aprs/ax25.c **** 	}
 122:../system/src/aprs/ax25.c **** 	ax25_rxed_frame.src.ssid = (*buf >> 1) & 0x0F;
 441              		.loc 2 122 0
 442 0078 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 443 007a C3F34303 		ubfx	r3, r3, #1, #4
 444 007e 3649     		ldr	r1, .L57+4
 445              	.LVL55:
 446 0080 8B71     		strb	r3, [r1, #6]
 123:../system/src/aprs/ax25.c **** 
 124:../system/src/aprs/ax25.c **** 
 125:../system/src/aprs/ax25.c **** 	for (ax25_rxed_frame.rpt_cnt = 0; !(*buf++ & 0x01) && (ax25_rxed_frame.rpt_cnt < (sizeof(ax25_rxed
 447              		.loc 2 125 0
 448 0082 0023     		movs	r3, #0
 449 0084 81F84630 		strb	r3, [r1, #70]
 450 0088 2DE0     		b	.L37
 451              	.LVL56:
 452              	.L47:
 453              	.LBB8:
 126:../system/src/aprs/ax25.c **** 	{
 127:../system/src/aprs/ax25.c **** 
 128:../system/src/aprs/ax25.c **** 		for (i = 0; i < sizeof(ax25_rxed_frame.rpt_lst[ax25_rxed_frame.rpt_cnt].call);i++)
 129:../system/src/aprs/ax25.c **** 		{
 130:../system/src/aprs/ax25.c **** 			uint8_t c = (*(buf)++ >> 1);
 131:../system/src/aprs/ax25.c **** 			(ax25_rxed_frame.rpt_lst[ax25_rxed_frame.rpt_cnt].call)[i] = (c == ' ') ? '\x0' : c;
 454              		.loc 2 131 0
 455 008a 0023     		movs	r3, #0
 456              	.LVL57:
 457              	.L38:
 458              		.loc 2 131 0 is_stmt 0 discriminator 4
 459 008c C4EBC406 		rsb	r6, r4, r4, lsl #3
 460 0090 3149     		ldr	r1, .L57+4
 461 0092 3144     		add	r1, r1, r6
 462 0094 1144     		add	r1, r1, r2
 463 0096 8B73     		strb	r3, [r1, #14]
 464              	.LVL58:
 465              	.LBE8:
 128:../system/src/aprs/ax25.c **** 		{
 466              		.loc 2 128 0 is_stmt 1 discriminator 4
 467 0098 0132     		adds	r2, r2, #1
 468              	.LVL59:
 469 009a 92B2     		uxth	r2, r2
 470              	.LVL60:
 471              	.LBB9:
 130:../system/src/aprs/ax25.c **** 			(ax25_rxed_frame.rpt_lst[ax25_rxed_frame.rpt_cnt].call)[i] = (c == ' ') ? '\x0' : c;
 472              		.loc 2 130 0 discriminator 4
 473 009c 2B46     		mov	r3, r5
 474              	.LVL61:
 475              	.L43:
 476              	.LBE9:
 128:../system/src/aprs/ax25.c **** 		{
 477              		.loc 2 128 0 discriminator 2
 478 009e 052A     		cmp	r2, #5
 479 00a0 06D8     		bhi	.L54
 480              	.LBB10:
 130:../system/src/aprs/ax25.c **** 			(ax25_rxed_frame.rpt_lst[ax25_rxed_frame.rpt_cnt].call)[i] = (c == ' ') ? '\x0' : c;
 481              		.loc 2 130 0
 482 00a2 5D1C     		adds	r5, r3, #1
 483              	.LVL62:
 484 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 00a6 5B08     		lsrs	r3, r3, #1
 486              	.LVL63:
 487              		.loc 2 131 0
 488 00a8 202B     		cmp	r3, #32
 489 00aa EED0     		beq	.L47
 490              		.loc 2 131 0 is_stmt 0 discriminator 1
 491 00ac 5BB2     		sxtb	r3, r3
 492 00ae EDE7     		b	.L38
 493              	.LVL64:
 494              	.L54:
 495              	.LBE10:
 132:../system/src/aprs/ax25.c **** 		}
 133:../system/src/aprs/ax25.c **** 		ax25_rxed_frame.rpt_lst[ax25_rxed_frame.rpt_cnt].ssid = (*buf >> 1) & 0x0F;
 496              		.loc 2 133 0 is_stmt 1
 497 00b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 498 00b2 C1F34301 		ubfx	r1, r1, #1, #4
 499 00b6 C4EBC405 		rsb	r5, r4, r4, lsl #3
 500 00ba 274A     		ldr	r2, .L57+4
 501              	.LVL65:
 502 00bc 2A44     		add	r2, r2, r5
 503 00be 1175     		strb	r1, [r2, #20]
 134:../system/src/aprs/ax25.c **** 
 135:../system/src/aprs/ax25.c **** 		if ((*buf & 0x80)) (&ax25_rxed_frame)->rpt_flags |= BV(ax25_rxed_frame.rpt_cnt);
 504              		.loc 2 135 0
 505 00c0 93F90020 		ldrsb	r2, [r3]
 506 00c4 002A     		cmp	r2, #0
 507 00c6 1ADB     		blt	.L55
 136:../system/src/aprs/ax25.c **** 		else (&ax25_rxed_frame)->rpt_flags &= ~BV(ax25_rxed_frame.rpt_cnt);
 508              		.loc 2 136 0
 509 00c8 0122     		movs	r2, #1
 510 00ca 02FA04F1 		lsl	r1, r2, r4
 511 00ce 224D     		ldr	r5, .L57+4
 512 00d0 95F84720 		ldrb	r2, [r5, #71]	@ zero_extendqisi2
 513 00d4 22EA0102 		bic	r2, r2, r1
 514 00d8 85F84720 		strb	r2, [r5, #71]
 515              	.L41:
 125:../system/src/aprs/ax25.c **** 	{
 516              		.loc 2 125 0 discriminator 2
 517 00dc 0134     		adds	r4, r4, #1
 518 00de 1E4A     		ldr	r2, .L57+4
 519 00e0 82F84640 		strb	r4, [r2, #70]
 520 00e4 1A46     		mov	r2, r3
 521              	.LVL66:
 522              	.L37:
 125:../system/src/aprs/ax25.c **** 	{
 523              		.loc 2 125 0 is_stmt 0 discriminator 1
 524 00e6 531C     		adds	r3, r2, #1
 525              	.LVL67:
 526 00e8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 527 00ea 11F0010F 		tst	r1, #1
 528 00ee 10D1     		bne	.L42
 125:../system/src/aprs/ax25.c **** 	{
 529              		.loc 2 125 0 discriminator 3
 530 00f0 1949     		ldr	r1, .L57+4
 531 00f2 91F84640 		ldrb	r4, [r1, #70]	@ zero_extendqisi2
 532 00f6 072C     		cmp	r4, #7
 533 00f8 0BD8     		bhi	.L42
 128:../system/src/aprs/ax25.c **** 		{
 534              		.loc 2 128 0 is_stmt 1
 535 00fa 0022     		movs	r2, #0
 536 00fc CFE7     		b	.L43
 537              	.L55:
 135:../system/src/aprs/ax25.c **** 		else (&ax25_rxed_frame)->rpt_flags &= ~BV(ax25_rxed_frame.rpt_cnt);
 538              		.loc 2 135 0 discriminator 1
 539 00fe 0122     		movs	r2, #1
 540 0100 02FA04F1 		lsl	r1, r2, r4
 541 0104 144D     		ldr	r5, .L57+4
 542 0106 95F84720 		ldrb	r2, [r5, #71]	@ zero_extendqisi2
 543 010a 0A43     		orrs	r2, r2, r1
 544 010c 85F84720 		strb	r2, [r5, #71]
 545 0110 E4E7     		b	.L41
 546              	.L42:
 547              	.LVL68:
 137:../system/src/aprs/ax25.c **** 
 138:../system/src/aprs/ax25.c **** 	}
 139:../system/src/aprs/ax25.c **** 
 140:../system/src/aprs/ax25.c **** 	ax25_rxed_frame.ctrl = *buf++;
 548              		.loc 2 140 0
 549 0112 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 550              	.LVL69:
 551 0114 1049     		ldr	r1, .L57+4
 552 0116 A1F84830 		strh	r3, [r1, #72]	@ movhi
 141:../system/src/aprs/ax25.c **** 	if (ax25_rxed_frame.ctrl != AX25_CTRL_UI) return;
 553              		.loc 2 141 0
 554 011a 032B     		cmp	r3, #3
 555 011c 00D0     		beq	.L56
 556              	.LVL70:
 557              	.L28:
 142:../system/src/aprs/ax25.c **** 
 143:../system/src/aprs/ax25.c **** 	ax25_rxed_frame.pid = *buf++;
 144:../system/src/aprs/ax25.c **** 	if (ax25_rxed_frame.pid != AX25_PID_NOLAYER3) return;
 145:../system/src/aprs/ax25.c **** 
 146:../system/src/aprs/ax25.c **** 	ax25_rxed_frame.len = ctx->frm_len - 2 - (buf - ctx->buf);
 147:../system/src/aprs/ax25.c **** 	ax25_rxed_frame.info = buf;
 148:../system/src/aprs/ax25.c **** 
 149:../system/src/aprs/ax25.c **** 
 150:../system/src/aprs/ax25.c **** 	if (ctx->hook) {
 151:../system/src/aprs/ax25.c **** 		ax25_new_msg_rx_flag = 1;
 152:../system/src/aprs/ax25.c **** //		ctx->dcd = false;
 153:../system/src/aprs/ax25.c **** 	 	ctx->hook(&ax25_rxed_frame);
 154:../system/src/aprs/ax25.c **** 	}
 155:../system/src/aprs/ax25.c **** 	/*
 156:../system/src/aprs/ax25.c **** 		insert your code here
 157:../system/src/aprs/ax25.c **** 	*/
 158:../system/src/aprs/ax25.c **** 	
 159:../system/src/aprs/ax25.c **** 	/*
 160:../system/src/aprs/ax25.c **** 		end
 161:../system/src/aprs/ax25.c **** 	*/
 162:../system/src/aprs/ax25.c **** 
 163:../system/src/aprs/ax25.c **** }
 558              		.loc 2 163 0
 559 011e 70BD     		pop	{r4, r5, r6, pc}
 560              	.LVL71:
 561              	.L56:
 143:../system/src/aprs/ax25.c **** 	if (ax25_rxed_frame.pid != AX25_PID_NOLAYER3) return;
 562              		.loc 2 143 0
 563 0120 D11C     		adds	r1, r2, #3
 564              	.LVL72:
 565 0122 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 566 0124 0C4A     		ldr	r2, .L57+4
 567 0126 82F84A30 		strb	r3, [r2, #74]
 144:../system/src/aprs/ax25.c **** 
 568              		.loc 2 144 0
 569 012a F02B     		cmp	r3, #240
 570 012c F7D1     		bne	.L28
 146:../system/src/aprs/ax25.c **** 	ax25_rxed_frame.info = buf;
 571              		.loc 2 146 0
 572 012e B0F80432 		ldrh	r3, [r0, #516]
 573 0132 0A1A     		subs	r2, r1, r0
 574 0134 9B1A     		subs	r3, r3, r2
 575 0136 023B     		subs	r3, r3, #2
 576 0138 074A     		ldr	r2, .L57+4
 577 013a A2F85030 		strh	r3, [r2, #80]	@ movhi
 147:../system/src/aprs/ax25.c **** 
 578              		.loc 2 147 0
 579 013e D164     		str	r1, [r2, #76]
 150:../system/src/aprs/ax25.c **** 		ax25_new_msg_rx_flag = 1;
 580              		.loc 2 150 0
 581 0140 D0F80C32 		ldr	r3, [r0, #524]
 582 0144 002B     		cmp	r3, #0
 583 0146 EAD0     		beq	.L28
 151:../system/src/aprs/ax25.c **** //		ctx->dcd = false;
 584              		.loc 2 151 0
 585 0148 044A     		ldr	r2, .L57+8
 586 014a 0121     		movs	r1, #1
 587              	.LVL73:
 588 014c 1170     		strb	r1, [r2]
 153:../system/src/aprs/ax25.c **** 	}
 589              		.loc 2 153 0
 590 014e 0248     		ldr	r0, .L57+4
 591              	.LVL74:
 592 0150 9847     		blx	r3
 593              	.LVL75:
 594 0152 E4E7     		b	.L28
 595              	.L58:
 596              		.align	2
 597              	.L57:
 598 0154 52000000 		.word	ax25_rxed_frame+82
 599 0158 00000000 		.word	ax25_rxed_frame
 600 015c 00000000 		.word	ax25_new_msg_rx_flag
 601              		.cfi_endproc
 602              	.LFE10:
 604              		.section	.text.ax25_poll,"ax",%progbits
 605              		.align	1
 606              		.global	ax25_poll
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu fpv4-sp-d16
 612              	ax25_poll:
 613              	.LFB11:
 164:../system/src/aprs/ax25.c **** 
 165:../system/src/aprs/ax25.c **** 
 166:../system/src/aprs/ax25.c **** /**************************************************************************************************
 167:../system/src/aprs/ax25.c **** void ax25_poll(AX25Ctx *ctx) {
 614              		.loc 2 167 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              	.LVL76:
 619 0000 38B5     		push	{r3, r4, r5, lr}
 620              		.cfi_def_cfa_offset 16
 621              		.cfi_offset 3, -16
 622              		.cfi_offset 4, -12
 623              		.cfi_offset 5, -8
 624              		.cfi_offset 14, -4
 625 0002 0446     		mov	r4, r0
 168:../system/src/aprs/ax25.c **** /**************************************************************************************************
 169:../system/src/aprs/ax25.c **** 
 170:../system/src/aprs/ax25.c **** 	int16_t c;
 171:../system/src/aprs/ax25.c **** 
 172:../system/src/aprs/ax25.c **** while ((c = fifo_getc(&ctx->afsk->rx_fifo)) != -1)
 626              		.loc 2 172 0
 627 0004 47E0     		b	.L60
 628              	.LVL77:
 629              	.L75:
 173:../system/src/aprs/ax25.c **** 	{
 174:../system/src/aprs/ax25.c **** 
 175:../system/src/aprs/ax25.c **** 		if (!ctx->escape && c == HDLC_FLAG)
 176:../system/src/aprs/ax25.c **** 		{
 177:../system/src/aprs/ax25.c **** 
 178:../system/src/aprs/ax25.c **** 			if (ctx->frm_len >= AX25_MIN_FRAME_LEN)
 630              		.loc 2 178 0
 631 0006 B4F80432 		ldrh	r3, [r4, #516]
 632 000a 112B     		cmp	r3, #17
 633 000c 05D9     		bls	.L62
 179:../system/src/aprs/ax25.c **** 			{
 180:../system/src/aprs/ax25.c **** 				if (ctx->crc_in == AX25_CRC_CORRECT)
 634              		.loc 2 180 0
 635 000e B4F80622 		ldrh	r2, [r4, #518]
 636 0012 4FF2B803 		movw	r3, #61624
 637 0016 9A42     		cmp	r2, r3
 638 0018 0ED0     		beq	.L73
 639              	.LVL78:
 640              	.L62:
 181:../system/src/aprs/ax25.c **** 				{
 182:../system/src/aprs/ax25.c **** 
 183:../system/src/aprs/ax25.c **** 					if (ctx->raw)
 184:../system/src/aprs/ax25.c **** 					{
 185:../system/src/aprs/ax25.c **** 						if (ctx->hook)
 186:../system/src/aprs/ax25.c **** 						{
 187:../system/src/aprs/ax25.c **** 							ctx->hook(NULL);
 188:../system/src/aprs/ax25.c **** 						}
 189:../system/src/aprs/ax25.c **** 					}
 190:../system/src/aprs/ax25.c **** 					else
 191:../system/src/aprs/ax25.c **** 					{
 192:../system/src/aprs/ax25.c **** 						ax25_decode(ctx);
 193:../system/src/aprs/ax25.c **** 					}
 194:../system/src/aprs/ax25.c **** 
 195:../system/src/aprs/ax25.c **** 				}
 196:../system/src/aprs/ax25.c **** 			}
 197:../system/src/aprs/ax25.c **** 
 198:../system/src/aprs/ax25.c **** 			ctx->sync = true;
 641              		.loc 2 198 0
 642 001a 0123     		movs	r3, #1
 643 001c 84F81132 		strb	r3, [r4, #529]
 199:../system/src/aprs/ax25.c **** 			ctx->crc_in = CRC_CCITT_INIT_VAL;
 644              		.loc 2 199 0
 645 0020 4FF6FF73 		movw	r3, #65535
 646 0024 A4F80632 		strh	r3, [r4, #518]	@ movhi
 200:../system/src/aprs/ax25.c **** 			ctx->frm_len = 0;
 647              		.loc 2 200 0
 648 0028 0023     		movs	r3, #0
 649 002a A4F80432 		strh	r3, [r4, #516]	@ movhi
 201:../system/src/aprs/ax25.c **** 
 202:../system/src/aprs/ax25.c **** 			ctx->dcd_state = 0;
 650              		.loc 2 202 0
 651 002e 84F81332 		strb	r3, [r4, #531]
 203:../system/src/aprs/ax25.c **** 			ctx->dcd = false;	 ///// bylo false
 652              		.loc 2 203 0
 653 0032 84F81432 		strb	r3, [r4, #532]
 204:../system/src/aprs/ax25.c **** 			continue;
 654              		.loc 2 204 0
 655 0036 2EE0     		b	.L60
 656              	.LVL79:
 657              	.L73:
 183:../system/src/aprs/ax25.c **** 					{
 658              		.loc 2 183 0
 659 0038 94F81032 		ldrb	r3, [r4, #528]	@ zero_extendqisi2
 660 003c 33B1     		cbz	r3, .L63
 185:../system/src/aprs/ax25.c **** 						{
 661              		.loc 2 185 0
 662 003e D4F80C32 		ldr	r3, [r4, #524]
 663 0042 002B     		cmp	r3, #0
 664 0044 E9D0     		beq	.L62
 187:../system/src/aprs/ax25.c **** 						}
 665              		.loc 2 187 0
 666 0046 0020     		movs	r0, #0
 667              	.LVL80:
 668 0048 9847     		blx	r3
 669              	.LVL81:
 670 004a E6E7     		b	.L62
 671              	.LVL82:
 672              	.L63:
 192:../system/src/aprs/ax25.c **** 					}
 673              		.loc 2 192 0
 674 004c 2046     		mov	r0, r4
 675              	.LVL83:
 676 004e FFF7FEFF 		bl	ax25_decode
 677              	.LVL84:
 678 0052 E2E7     		b	.L62
 679              	.LVL85:
 680              	.L76:
 205:../system/src/aprs/ax25.c **** 
 206:../system/src/aprs/ax25.c **** 		}
 207:../system/src/aprs/ax25.c **** 
 208:../system/src/aprs/ax25.c **** 		if (!ctx->escape && c == HDLC_RESET)
 209:../system/src/aprs/ax25.c **** 		{
 210:../system/src/aprs/ax25.c **** 			ctx->sync = false;
 681              		.loc 2 210 0
 682 0054 84F81132 		strb	r3, [r4, #529]
 211:../system/src/aprs/ax25.c **** 			ctx->dcd = false;
 683              		.loc 2 211 0
 684 0058 84F81432 		strb	r3, [r4, #532]
 212:../system/src/aprs/ax25.c **** 			continue;
 685              		.loc 2 212 0
 686 005c 1BE0     		b	.L60
 687              	.L77:
 213:../system/src/aprs/ax25.c **** 		}
 214:../system/src/aprs/ax25.c **** 
 215:../system/src/aprs/ax25.c **** 		if (!ctx->escape && c == AX25_ESC)
 216:../system/src/aprs/ax25.c **** 		{
 217:../system/src/aprs/ax25.c **** 			ctx->escape = true;
 688              		.loc 2 217 0
 689 005e 0123     		movs	r3, #1
 690 0060 84F81232 		strb	r3, [r4, #530]
 218:../system/src/aprs/ax25.c **** 			continue;
 691              		.loc 2 218 0
 692 0064 17E0     		b	.L60
 693              	.LVL86:
 694              	.L78:
 219:../system/src/aprs/ax25.c **** 		}
 220:../system/src/aprs/ax25.c **** 
 221:../system/src/aprs/ax25.c **** 		if (ctx->sync)
 222:../system/src/aprs/ax25.c **** 		{
 223:../system/src/aprs/ax25.c **** 			if (ctx->frm_len < CONFIG_AX25_FRAME_BUF_LEN)
 224:../system/src/aprs/ax25.c **** 			{
 225:../system/src/aprs/ax25.c **** 				ctx->buf[ctx->frm_len++] = c;
 226:../system/src/aprs/ax25.c **** 				ctx->crc_in = updcrc_ccitt(c, ctx->crc_in);
 227:../system/src/aprs/ax25.c **** 				/* Begin of Destination-ADDR based DCD*/ 
 228:../system/src/aprs/ax25.c **** 				if (ctx->buf[6] == 0x60 && ctx->buf[0] == 0x82) {
 695              		.loc 2 228 0 discriminator 1
 696 0066 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 697 0068 822B     		cmp	r3, #130
 698 006a 3FD1     		bne	.L69
 229:../system/src/aprs/ax25.c **** 					ctx->dcd = true;
 699              		.loc 2 229 0
 700 006c 0123     		movs	r3, #1
 701 006e 84F81432 		strb	r3, [r4, #532]
 702 0072 3BE0     		b	.L69
 703              	.L79:
 230:../system/src/aprs/ax25.c **** 				}
 231:../system/src/aprs/ax25.c **** 				/* End */ 
 232:../system/src/aprs/ax25.c **** 				if (ctx->dcd_state == 1 && c == AX25_PID_NOLAYER3) {
 704              		.loc 2 232 0 discriminator 1
 705 0074 F02D     		cmp	r5, #240
 706 0076 3DD1     		bne	.L70
 233:../system/src/aprs/ax25.c **** 					ctx->dcd_state ++;
 707              		.loc 2 233 0
 708 0078 0133     		adds	r3, r3, #1
 709 007a 84F81332 		strb	r3, [r4, #531]
 234:../system/src/aprs/ax25.c **** 					ctx->dcd = true;
 710              		.loc 2 234 0
 711 007e 0123     		movs	r3, #1
 712 0080 84F81432 		strb	r3, [r4, #532]
 713 0084 36E0     		b	.L70
 714              	.LVL87:
 715              	.L68:
 235:../system/src/aprs/ax25.c **** 				}
 236:../system/src/aprs/ax25.c **** 
 237:../system/src/aprs/ax25.c **** 				if (ctx->dcd_state == 0 && c == AX25_CTRL_UI) {
 238:../system/src/aprs/ax25.c **** 					ctx->dcd_state ++;
 239:../system/src/aprs/ax25.c **** 				}
 240:../system/src/aprs/ax25.c **** 			}
 241:../system/src/aprs/ax25.c **** 			else
 242:../system/src/aprs/ax25.c **** 			{
 243:../system/src/aprs/ax25.c **** 				ctx->sync = false;
 716              		.loc 2 243 0
 717 0086 0023     		movs	r3, #0
 718 0088 84F81132 		strb	r3, [r4, #529]
 244:../system/src/aprs/ax25.c **** 				ctx->dcd = false;
 719              		.loc 2 244 0
 720 008c 84F81432 		strb	r3, [r4, #532]
 721              	.LVL88:
 722              	.L67:
 245:../system/src/aprs/ax25.c **** 			}
 246:../system/src/aprs/ax25.c **** 		}
 247:../system/src/aprs/ax25.c **** 
 248:../system/src/aprs/ax25.c **** 		ctx->escape = false;
 723              		.loc 2 248 0
 724 0090 0023     		movs	r3, #0
 725 0092 84F81232 		strb	r3, [r4, #530]
 726              	.L60:
 172:../system/src/aprs/ax25.c **** 	{
 727              		.loc 2 172 0
 728 0096 D4F80002 		ldr	r0, [r4, #512]
 729 009a 1030     		adds	r0, r0, #16
 730 009c FFF7FEFF 		bl	fifo_getc
 731              	.LVL89:
 732 00a0 0546     		mov	r5, r0
 733              	.LVL90:
 734 00a2 B0F1FF3F 		cmp	r0, #-1
 735 00a6 2FD0     		beq	.L74
 175:../system/src/aprs/ax25.c **** 		{
 736              		.loc 2 175 0
 737 00a8 94F81232 		ldrb	r3, [r4, #530]	@ zero_extendqisi2
 738 00ac 0BB9     		cbnz	r3, .L61
 175:../system/src/aprs/ax25.c **** 		{
 739              		.loc 2 175 0 is_stmt 0 discriminator 1
 740 00ae 7E2D     		cmp	r5, #126
 741 00b0 A9D0     		beq	.L75
 742              	.L61:
 208:../system/src/aprs/ax25.c **** 		{
 743              		.loc 2 208 0 is_stmt 1
 744 00b2 0BB9     		cbnz	r3, .L65
 208:../system/src/aprs/ax25.c **** 		{
 745              		.loc 2 208 0 is_stmt 0 discriminator 1
 746 00b4 7F2D     		cmp	r5, #127
 747 00b6 CDD0     		beq	.L76
 748              	.L65:
 215:../system/src/aprs/ax25.c **** 		{
 749              		.loc 2 215 0 is_stmt 1
 750 00b8 0BB9     		cbnz	r3, .L66
 215:../system/src/aprs/ax25.c **** 		{
 751              		.loc 2 215 0 is_stmt 0 discriminator 1
 752 00ba 1B2D     		cmp	r5, #27
 753 00bc CFD0     		beq	.L77
 754              	.L66:
 221:../system/src/aprs/ax25.c **** 		{
 755              		.loc 2 221 0 is_stmt 1
 756 00be 94F81132 		ldrb	r3, [r4, #529]	@ zero_extendqisi2
 757 00c2 002B     		cmp	r3, #0
 758 00c4 E4D0     		beq	.L67
 223:../system/src/aprs/ax25.c **** 			{
 759              		.loc 2 223 0
 760 00c6 B4F80432 		ldrh	r3, [r4, #516]
 761 00ca B3F5007F 		cmp	r3, #512
 762 00ce DAD2     		bcs	.L68
 225:../system/src/aprs/ax25.c **** 				ctx->crc_in = updcrc_ccitt(c, ctx->crc_in);
 763              		.loc 2 225 0
 764 00d0 5A1C     		adds	r2, r3, #1
 765 00d2 A4F80422 		strh	r2, [r4, #516]	@ movhi
 766 00d6 E8B2     		uxtb	r0, r5
 767              	.LVL91:
 768 00d8 E054     		strb	r0, [r4, r3]
 226:../system/src/aprs/ax25.c **** 				/* Begin of Destination-ADDR based DCD*/ 
 769              		.loc 2 226 0
 770 00da B4F80612 		ldrh	r1, [r4, #518]
 771 00de FFF7FEFF 		bl	updcrc_ccitt
 772              	.LVL92:
 773 00e2 A4F80602 		strh	r0, [r4, #518]	@ movhi
 228:../system/src/aprs/ax25.c **** 					ctx->dcd = true;
 774              		.loc 2 228 0
 775 00e6 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 776 00e8 602B     		cmp	r3, #96
 777 00ea BCD0     		beq	.L78
 778              	.L69:
 232:../system/src/aprs/ax25.c **** 					ctx->dcd_state ++;
 779              		.loc 2 232 0
 780 00ec 94F81332 		ldrb	r3, [r4, #531]	@ zero_extendqisi2
 781 00f0 012B     		cmp	r3, #1
 782 00f2 BFD0     		beq	.L79
 783              	.L70:
 237:../system/src/aprs/ax25.c **** 					ctx->dcd_state ++;
 784              		.loc 2 237 0
 785 00f4 94F81332 		ldrb	r3, [r4, #531]	@ zero_extendqisi2
 786 00f8 002B     		cmp	r3, #0
 787 00fa C9D1     		bne	.L67
 237:../system/src/aprs/ax25.c **** 					ctx->dcd_state ++;
 788              		.loc 2 237 0 is_stmt 0 discriminator 1
 789 00fc 032D     		cmp	r5, #3
 790 00fe C7D1     		bne	.L67
 238:../system/src/aprs/ax25.c **** 				}
 791              		.loc 2 238 0 is_stmt 1
 792 0100 0133     		adds	r3, r3, #1
 793 0102 84F81332 		strb	r3, [r4, #531]
 794 0106 C3E7     		b	.L67
 795              	.LVL93:
 796              	.L74:
 249:../system/src/aprs/ax25.c **** 
 250:../system/src/aprs/ax25.c **** 	}
 251:../system/src/aprs/ax25.c **** 
 252:../system/src/aprs/ax25.c **** }
 797              		.loc 2 252 0
 798 0108 38BD     		pop	{r3, r4, r5, pc}
 799              		.cfi_endproc
 800              	.LFE11:
 802              		.section	.text.ax25_putchar,"ax",%progbits
 803              		.align	1
 804              		.global	ax25_putchar
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu fpv4-sp-d16
 810              	ax25_putchar:
 811              	.LFB12:
 253:../system/src/aprs/ax25.c **** 
 254:../system/src/aprs/ax25.c **** /**************************************************************************************************
 255:../system/src/aprs/ax25.c **** void ax25_putchar(AX25Ctx *ctx, uint8_t c) {
 812              		.loc 2 255 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              	.LVL94:
 817 0000 38B5     		push	{r3, r4, r5, lr}
 818              		.cfi_def_cfa_offset 16
 819              		.cfi_offset 3, -16
 820              		.cfi_offset 4, -12
 821              		.cfi_offset 5, -8
 822              		.cfi_offset 14, -4
 823 0002 0546     		mov	r5, r0
 824 0004 0C46     		mov	r4, r1
 256:../system/src/aprs/ax25.c **** /**************************************************************************************************
 257:../system/src/aprs/ax25.c **** 
 258:../system/src/aprs/ax25.c **** 	if (c == HDLC_FLAG || c == HDLC_RESET || c == AX25_ESC)
 825              		.loc 2 258 0
 826 0006 A1F17E03 		sub	r3, r1, #126
 827 000a DBB2     		uxtb	r3, r3
 828 000c 012B     		cmp	r3, #1
 829 000e 01D9     		bls	.L81
 830              		.loc 2 258 0 is_stmt 0 discriminator 1
 831 0010 1B29     		cmp	r1, #27
 832 0012 06D1     		bne	.L82
 833              	.L81:
 259:../system/src/aprs/ax25.c **** 	{
 260:../system/src/aprs/ax25.c **** 		fifo_putc(AX25_ESC, &ctx->afsk->tx_fifo);
 834              		.loc 2 260 0 is_stmt 1
 835 0014 D5F80012 		ldr	r1, [r5, #512]
 836              	.LVL95:
 837 0018 01F50871 		add	r1, r1, #544
 838 001c 1B20     		movs	r0, #27
 839              	.LVL96:
 840 001e FFF7FEFF 		bl	fifo_putc
 841              	.LVL97:
 842              	.L82:
 261:../system/src/aprs/ax25.c **** 	}
 262:../system/src/aprs/ax25.c **** 
 263:../system/src/aprs/ax25.c **** 	ctx->crc_out = updcrc_ccitt(c, ctx->crc_out);
 843              		.loc 2 263 0
 844 0022 B5F80812 		ldrh	r1, [r5, #520]
 845 0026 2046     		mov	r0, r4
 846 0028 FFF7FEFF 		bl	updcrc_ccitt
 847              	.LVL98:
 848 002c A5F80802 		strh	r0, [r5, #520]	@ movhi
 264:../system/src/aprs/ax25.c **** 	fifo_putc(c, &ctx->afsk->tx_fifo);
 849              		.loc 2 264 0
 850 0030 D5F80012 		ldr	r1, [r5, #512]
 851 0034 01F50871 		add	r1, r1, #544
 852 0038 2046     		mov	r0, r4
 853 003a FFF7FEFF 		bl	fifo_putc
 854              	.LVL99:
 265:../system/src/aprs/ax25.c **** 
 266:../system/src/aprs/ax25.c **** }
 855              		.loc 2 266 0
 856 003e 38BD     		pop	{r3, r4, r5, pc}
 857              		.cfi_endproc
 858              	.LFE12:
 860              		.section	.text.ax25_sendCall,"ax",%progbits
 861              		.align	1
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
 865              		.fpu fpv4-sp-d16
 867              	ax25_sendCall:
 868              	.LFB13:
 267:../system/src/aprs/ax25.c **** 
 268:../system/src/aprs/ax25.c **** 
 269:../system/src/aprs/ax25.c **** /**************************************************************************************************
 270:../system/src/aprs/ax25.c **** static void ax25_sendCall(AX25Ctx *ctx, const AX25Call *addr, bool last) {
 869              		.loc 2 270 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL100:
 874 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 875              		.cfi_def_cfa_offset 24
 876              		.cfi_offset 4, -24
 877              		.cfi_offset 5, -20
 878              		.cfi_offset 6, -16
 879              		.cfi_offset 7, -12
 880              		.cfi_offset 8, -8
 881              		.cfi_offset 14, -4
 882 0004 0646     		mov	r6, r0
 883 0006 0F46     		mov	r7, r1
 884 0008 9046     		mov	r8, r2
 271:../system/src/aprs/ax25.c **** /**************************************************************************************************
 272:../system/src/aprs/ax25.c **** 
 273:../system/src/aprs/ax25.c **** //#ifdef _DBG_TRACE
 274:../system/src/aprs/ax25.c **** //				trace_printf("ax25_sendCall:call=%s\r\n", addr->call);
 275:../system/src/aprs/ax25.c **** //#endif
 276:../system/src/aprs/ax25.c **** 
 277:../system/src/aprs/ax25.c **** 	uint16_t i;
 278:../system/src/aprs/ax25.c **** 	uint8_t ssid;
 279:../system/src/aprs/ax25.c **** 	uint16_t len = MIN(sizeof(addr->call), strlen(addr->call));
 885              		.loc 2 279 0
 886 000a 0846     		mov	r0, r1
 887              	.LVL101:
 888 000c FFF7FEFF 		bl	strlen
 889              	.LVL102:
 890 0010 0628     		cmp	r0, #6
 891 0012 02D9     		bls	.L94
 892 0014 0625     		movs	r5, #6
 893              	.L85:
 894              	.LVL103:
 280:../system/src/aprs/ax25.c **** 
 281:../system/src/aprs/ax25.c **** 
 282:../system/src/aprs/ax25.c **** 	for (i = 0; i < len; i++)
 895              		.loc 2 282 0 discriminator 4
 896 0016 0024     		movs	r4, #0
 897 0018 0EE0     		b	.L86
 898              	.LVL104:
 899              	.L94:
 279:../system/src/aprs/ax25.c **** 
 900              		.loc 2 279 0 discriminator 1
 901 001a 3846     		mov	r0, r7
 902 001c FFF7FEFF 		bl	strlen
 903              	.LVL105:
 904 0020 85B2     		uxth	r5, r0
 905 0022 F8E7     		b	.L85
 906              	.LVL106:
 907              	.L87:
 908              	.LBB11:
 283:../system/src/aprs/ax25.c **** 	{
 284:../system/src/aprs/ax25.c **** 		uint8_t c = addr->call[i];
 909              		.loc 2 284 0 discriminator 3
 910 0024 3957     		ldrsb	r1, [r7, r4]
 911 0026 C9B2     		uxtb	r1, r1
 912              	.LVL107:
 285:../system/src/aprs/ax25.c **** //		c = toupper(c);	  /////////////////////////////////////////////
 286:../system/src/aprs/ax25.c **** 		ax25_putchar(ctx, c << 1);
 913              		.loc 2 286 0 discriminator 3
 914 0028 4900     		lsls	r1, r1, #1
 915              	.LVL108:
 916 002a 01F0FE01 		and	r1, r1, #254
 917 002e 3046     		mov	r0, r6
 918 0030 FFF7FEFF 		bl	ax25_putchar
 919              	.LVL109:
 920              	.LBE11:
 282:../system/src/aprs/ax25.c **** 	{
 921              		.loc 2 282 0 discriminator 3
 922 0034 0134     		adds	r4, r4, #1
 923              	.LVL110:
 924 0036 A4B2     		uxth	r4, r4
 925              	.LVL111:
 926              	.L86:
 282:../system/src/aprs/ax25.c **** 	{
 927              		.loc 2 282 0 is_stmt 0 discriminator 1
 928 0038 AC42     		cmp	r4, r5
 929 003a F3D3     		bcc	.L87
 287:../system/src/aprs/ax25.c **** 	}
 288:../system/src/aprs/ax25.c **** 
 289:../system/src/aprs/ax25.c **** 	if (len < sizeof(addr->call))
 930              		.loc 2 289 0 is_stmt 1
 931 003c 052D     		cmp	r5, #5
 932 003e 0BD8     		bhi	.L89
 290:../system/src/aprs/ax25.c **** 	{
 291:../system/src/aprs/ax25.c **** 		for (i = 0; i < sizeof(addr->call) - len; i++)
 933              		.loc 2 291 0
 934 0040 0024     		movs	r4, #0
 935              	.LVL112:
 936 0042 05E0     		b	.L88
 937              	.LVL113:
 938              	.L90:
 292:../system/src/aprs/ax25.c **** 		{
 293:../system/src/aprs/ax25.c **** 			ax25_putchar(ctx, ' ' << 1);
 939              		.loc 2 293 0 discriminator 3
 940 0044 4021     		movs	r1, #64
 941 0046 3046     		mov	r0, r6
 942 0048 FFF7FEFF 		bl	ax25_putchar
 943              	.LVL114:
 291:../system/src/aprs/ax25.c **** 		{
 944              		.loc 2 291 0 discriminator 3
 945 004c 0134     		adds	r4, r4, #1
 946              	.LVL115:
 947 004e A4B2     		uxth	r4, r4
 948              	.LVL116:
 949              	.L88:
 291:../system/src/aprs/ax25.c **** 		{
 950              		.loc 2 291 0 is_stmt 0 discriminator 1
 951 0050 C5F10603 		rsb	r3, r5, #6
 952 0054 9C42     		cmp	r4, r3
 953 0056 F5D3     		bcc	.L90
 954              	.L89:
 294:../system/src/aprs/ax25.c **** 		}
 295:../system/src/aprs/ax25.c **** 	}
 296:../system/src/aprs/ax25.c **** 
 297:../system/src/aprs/ax25.c **** 	ssid = 0x60 | (addr->ssid << 1) | (last ? 0x01 : 0);
 955              		.loc 2 297 0 is_stmt 1
 956 0058 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 957 005a 4900     		lsls	r1, r1, #1
 958 005c 41F06001 		orr	r1, r1, #96
 959 0060 49B2     		sxtb	r1, r1
 960 0062 4FFA88F8 		sxtb	r8, r8
 961 0066 41EA0801 		orr	r1, r1, r8
 962              	.LVL117:
 298:../system/src/aprs/ax25.c **** 	ax25_putchar(ctx, ssid);
 963              		.loc 2 298 0
 964 006a C9B2     		uxtb	r1, r1
 965 006c 3046     		mov	r0, r6
 966 006e FFF7FEFF 		bl	ax25_putchar
 967              	.LVL118:
 299:../system/src/aprs/ax25.c **** 
 300:../system/src/aprs/ax25.c **** }
 968              		.loc 2 300 0
 969 0072 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 970              		.cfi_endproc
 971              	.LFE13:
 973              		.section	.text.ax25_sendVia,"ax",%progbits
 974              		.align	1
 975              		.global	ax25_sendVia
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 979              		.fpu fpv4-sp-d16
 981              	ax25_sendVia:
 982              	.LFB14:
 301:../system/src/aprs/ax25.c **** 
 302:../system/src/aprs/ax25.c **** /**************************************************************************************************
 303:../system/src/aprs/ax25.c **** void ax25_sendVia(AX25Ctx *ctx, const AX25Call *path, uint16_t path_len, const void *_buf, uint16_t
 983              		.loc 2 303 0
 984              		.cfi_startproc
 985              		@ args = 4, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              	.LVL119:
 988 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 989              		.cfi_def_cfa_offset 32
 990              		.cfi_offset 3, -32
 991              		.cfi_offset 4, -28
 992              		.cfi_offset 5, -24
 993              		.cfi_offset 6, -20
 994              		.cfi_offset 7, -16
 995              		.cfi_offset 8, -12
 996              		.cfi_offset 9, -8
 997              		.cfi_offset 14, -4
 998 0004 0546     		mov	r5, r0
 999 0006 8946     		mov	r9, r1
 1000 0008 9046     		mov	r8, r2
 1001 000a 1F46     		mov	r7, r3
 1002 000c BDF82060 		ldrh	r6, [sp, #32]
 1003              	.LVL120:
 304:../system/src/aprs/ax25.c **** /**************************************************************************************************
 305:../system/src/aprs/ax25.c **** 
 306:../system/src/aprs/ax25.c **** 	uint16_t i;
 307:../system/src/aprs/ax25.c **** 	uint8_t crcl,crch;
 308:../system/src/aprs/ax25.c **** 	const uint8_t *buf = (const uint8_t *)_buf;
 309:../system/src/aprs/ax25.c **** 
 310:../system/src/aprs/ax25.c **** 	ctx->crc_out = CRC_CCITT_INIT_VAL;
 1004              		.loc 2 310 0
 1005 0010 4FF6FF73 		movw	r3, #65535
 1006              	.LVL121:
 1007 0014 A0F80832 		strh	r3, [r0, #520]	@ movhi
 311:../system/src/aprs/ax25.c **** 
 312:../system/src/aprs/ax25.c **** 	fifo_putc(HDLC_FLAG, &ctx->afsk->tx_fifo);
 1008              		.loc 2 312 0
 1009 0018 D0F80012 		ldr	r1, [r0, #512]
 1010              	.LVL122:
 1011 001c 01F50871 		add	r1, r1, #544
 1012 0020 7E20     		movs	r0, #126
 1013              	.LVL123:
 1014 0022 FFF7FEFF 		bl	fifo_putc
 1015              	.LVL124:
 313:../system/src/aprs/ax25.c **** 
 314:../system/src/aprs/ax25.c **** 	for (i = 0; i < path_len; i++)
 1016              		.loc 2 314 0
 1017 0026 0024     		movs	r4, #0
 1018 0028 0DE0     		b	.L96
 1019              	.LVL125:
 1020              	.L97:
 315:../system/src/aprs/ax25.c **** 	{
 316:../system/src/aprs/ax25.c **** 		ax25_sendCall(ctx, &path[i], (i == path_len - 1));
 1021              		.loc 2 316 0 discriminator 3
 1022 002a C4EBC401 		rsb	r1, r4, r4, lsl #3
 1023 002e 08F1FF32 		add	r2, r8, #-1
 1024 0032 9442     		cmp	r4, r2
 1025 0034 14BF     		ite	ne
 1026 0036 0022     		movne	r2, #0
 1027 0038 0122     		moveq	r2, #1
 1028 003a 4944     		add	r1, r1, r9
 1029 003c 2846     		mov	r0, r5
 1030 003e FFF7FEFF 		bl	ax25_sendCall
 1031              	.LVL126:
 314:../system/src/aprs/ax25.c **** 	{
 1032              		.loc 2 314 0 discriminator 3
 1033 0042 0134     		adds	r4, r4, #1
 1034              	.LVL127:
 1035 0044 A4B2     		uxth	r4, r4
 1036              	.LVL128:
 1037              	.L96:
 314:../system/src/aprs/ax25.c **** 	{
 1038              		.loc 2 314 0 is_stmt 0 discriminator 1
 1039 0046 4445     		cmp	r4, r8
 1040 0048 EFD3     		bcc	.L97
 317:../system/src/aprs/ax25.c **** 	}
 318:../system/src/aprs/ax25.c **** 
 319:../system/src/aprs/ax25.c **** 	ax25_putchar(ctx, AX25_CTRL_UI);
 1041              		.loc 2 319 0 is_stmt 1
 1042 004a 0321     		movs	r1, #3
 1043 004c 2846     		mov	r0, r5
 1044 004e FFF7FEFF 		bl	ax25_putchar
 1045              	.LVL129:
 320:../system/src/aprs/ax25.c **** 	ax25_putchar(ctx, AX25_PID_NOLAYER3);
 1046              		.loc 2 320 0
 1047 0052 F021     		movs	r1, #240
 1048 0054 2846     		mov	r0, r5
 1049 0056 FFF7FEFF 		bl	ax25_putchar
 1050              	.LVL130:
 321:../system/src/aprs/ax25.c **** 
 322:../system/src/aprs/ax25.c **** 	while (len--)
 1051              		.loc 2 322 0
 1052 005a 06E0     		b	.L98
 1053              	.LVL131:
 1054              	.L99:
 323:../system/src/aprs/ax25.c **** 	{
 324:../system/src/aprs/ax25.c **** 		ax25_putchar(ctx, *buf++);
 1055              		.loc 2 324 0
 1056 005c 7E1C     		adds	r6, r7, #1
 1057              	.LVL132:
 1058 005e 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
 1059 0060 2846     		mov	r0, r5
 1060 0062 FFF7FEFF 		bl	ax25_putchar
 1061              	.LVL133:
 1062 0066 3746     		mov	r7, r6
 322:../system/src/aprs/ax25.c **** 	{
 1063              		.loc 2 322 0
 1064 0068 2646     		mov	r6, r4
 1065              	.LVL134:
 1066              	.L98:
 1067 006a 731E     		subs	r3, r6, #1
 1068 006c 9CB2     		uxth	r4, r3
 1069              	.LVL135:
 1070 006e 002E     		cmp	r6, #0
 1071 0070 F4D1     		bne	.L99
 325:../system/src/aprs/ax25.c **** 	}
 326:../system/src/aprs/ax25.c **** 
 327:../system/src/aprs/ax25.c **** 	crcl = (ctx->crc_out & 0xff) ^ 0xff;
 1072              		.loc 2 327 0
 1073 0072 B5F80832 		ldrh	r3, [r5, #520]
 1074 0076 D943     		mvns	r1, r3
 1075              	.LVL136:
 328:../system/src/aprs/ax25.c **** 	crch = (ctx->crc_out >> 8) ^ 0xff;
 1076              		.loc 2 328 0
 1077 0078 6FEA1323 		mvn	r3, r3, lsr #8
 1078 007c DCB2     		uxtb	r4, r3
 1079              	.LVL137:
 329:../system/src/aprs/ax25.c **** 	ax25_putchar(ctx, crcl);
 1080              		.loc 2 329 0
 1081 007e C9B2     		uxtb	r1, r1
 1082 0080 2846     		mov	r0, r5
 1083 0082 FFF7FEFF 		bl	ax25_putchar
 1084              	.LVL138:
 330:../system/src/aprs/ax25.c **** 	ax25_putchar(ctx, crch);
 1085              		.loc 2 330 0
 1086 0086 2146     		mov	r1, r4
 1087 0088 2846     		mov	r0, r5
 1088 008a FFF7FEFF 		bl	ax25_putchar
 1089              	.LVL139:
 331:../system/src/aprs/ax25.c **** 
 332:../system/src/aprs/ax25.c **** 	fifo_putc(HDLC_FLAG, &ctx->afsk->tx_fifo);
 1090              		.loc 2 332 0
 1091 008e D5F80012 		ldr	r1, [r5, #512]
 1092 0092 01F50871 		add	r1, r1, #544
 1093 0096 7E20     		movs	r0, #126
 1094 0098 FFF7FEFF 		bl	fifo_putc
 1095              	.LVL140:
 333:../system/src/aprs/ax25.c **** 
 334:../system/src/aprs/ax25.c **** }
 1096              		.loc 2 334 0
 1097 009c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1098              		.cfi_endproc
 1099              	.LFE14:
 1101              		.section	.text.ax25_sendVia_toBuffer,"ax",%progbits
 1102              		.align	1
 1103              		.global	ax25_sendVia_toBuffer
 1104              		.syntax unified
 1105              		.thumb
 1106              		.thumb_func
 1107              		.fpu fpv4-sp-d16
 1109              	ax25_sendVia_toBuffer:
 1110              	.LFB15:
 335:../system/src/aprs/ax25.c **** 
 336:../system/src/aprs/ax25.c **** uint16_t ax25_sendVia_toBuffer(const AX25Call *path, uint16_t path_len, const void *payload, uint16
 1111              		.loc 2 336 0
 1112              		.cfi_startproc
 1113              		@ args = 8, pretend = 0, frame = 8
 1114              		@ frame_needed = 0, uses_anonymous_args = 0
 1115              	.LVL141:
 1116 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1117              		.cfi_def_cfa_offset 32
 1118              		.cfi_offset 4, -32
 1119              		.cfi_offset 5, -28
 1120              		.cfi_offset 6, -24
 1121              		.cfi_offset 7, -20
 1122              		.cfi_offset 8, -16
 1123              		.cfi_offset 9, -12
 1124              		.cfi_offset 10, -8
 1125              		.cfi_offset 14, -4
 1126 0004 84B0     		sub	sp, sp, #16
 1127              		.cfi_def_cfa_offset 48
 1128 0006 8246     		mov	r10, r0
 1129 0008 8946     		mov	r9, r1
 1130 000a 1646     		mov	r6, r2
 1131 000c 1D46     		mov	r5, r3
 1132 000e 0C9F     		ldr	r7, [sp, #48]
 1133 0010 BDF83480 		ldrh	r8, [sp, #52]
 337:../system/src/aprs/ax25.c **** 
 338:../system/src/aprs/ax25.c **** 	uint16_t i;
 339:../system/src/aprs/ax25.c **** 	uint16_t crc = CRC_CCITT_INIT_VAL;
 1134              		.loc 2 339 0
 1135 0014 4FF6FF73 		movw	r3, #65535
 1136              	.LVL142:
 1137 0018 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 1138              	.LVL143:
 340:../system/src/aprs/ax25.c **** 	const uint8_t *buf = (const uint8_t *)payload;
 341:../system/src/aprs/ax25.c **** 
 342:../system/src/aprs/ax25.c **** 	uint16_t return_val = 0;
 1139              		.loc 2 342 0
 1140 001c 0024     		movs	r4, #0
 1141 001e 04AA     		add	r2, sp, #16
 1142              	.LVL144:
 1143 0020 22F8044D 		strh	r4, [r2, #-4]!	@ movhi
 343:../system/src/aprs/ax25.c **** 
 344:../system/src/aprs/ax25.c **** 	kiss_reset_buffer(output_buf, output_size, &return_val);
 1144              		.loc 2 344 0
 1145 0024 4146     		mov	r1, r8
 1146              	.LVL145:
 1147 0026 3846     		mov	r0, r7
 1148              	.LVL146:
 1149 0028 FFF7FEFF 		bl	kiss_reset_buffer
 1150              	.LVL147:
 345:../system/src/aprs/ax25.c **** 
 346:../system/src/aprs/ax25.c **** 	for (i = 0; i < path_len; i++)
 1151              		.loc 2 346 0
 1152 002c 13E0     		b	.L102
 1153              	.LVL148:
 1154              	.L103:
 347:../system/src/aprs/ax25.c **** 	{
 348:../system/src/aprs/ax25.c **** 		kiss_put_call(&path[i], (i == path_len - 1), output_buf, output_size, &return_val, &crc);
 1155              		.loc 2 348 0 discriminator 3
 1156 002e C4EBC400 		rsb	r0, r4, r4, lsl #3
 1157 0032 09F1FF31 		add	r1, r9, #-1
 1158 0036 0DF10E03 		add	r3, sp, #14
 1159 003a 0193     		str	r3, [sp, #4]
 1160 003c 03AB     		add	r3, sp, #12
 1161 003e 0093     		str	r3, [sp]
 1162 0040 4346     		mov	r3, r8
 1163 0042 3A46     		mov	r2, r7
 1164 0044 8C42     		cmp	r4, r1
 1165 0046 14BF     		ite	ne
 1166 0048 0021     		movne	r1, #0
 1167 004a 0121     		moveq	r1, #1
 1168 004c 5044     		add	r0, r0, r10
 1169 004e FFF7FEFF 		bl	kiss_put_call
 1170              	.LVL149:
 346:../system/src/aprs/ax25.c **** 	{
 1171              		.loc 2 346 0 discriminator 3
 1172 0052 0134     		adds	r4, r4, #1
 1173              	.LVL150:
 1174 0054 A4B2     		uxth	r4, r4
 1175              	.LVL151:
 1176              	.L102:
 346:../system/src/aprs/ax25.c **** 	{
 1177              		.loc 2 346 0 is_stmt 0 discriminator 1
 1178 0056 4C45     		cmp	r4, r9
 1179 0058 E9D3     		bcc	.L103
 349:../system/src/aprs/ax25.c **** 	}
 350:../system/src/aprs/ax25.c **** 
 351:../system/src/aprs/ax25.c **** 	kiss_put_char(AX25_CTRL_UI, output_buf, output_size, &return_val, &crc);
 1180              		.loc 2 351 0 is_stmt 1
 1181 005a 0DF10E04 		add	r4, sp, #14
 1182              	.LVL152:
 1183 005e 0094     		str	r4, [sp]
 1184 0060 03AB     		add	r3, sp, #12
 1185 0062 4246     		mov	r2, r8
 1186 0064 3946     		mov	r1, r7
 1187 0066 0320     		movs	r0, #3
 1188 0068 FFF7FEFF 		bl	kiss_put_char
 1189              	.LVL153:
 352:../system/src/aprs/ax25.c **** 	kiss_put_char(AX25_PID_NOLAYER3, output_buf, output_size, &return_val, &crc);
 1190              		.loc 2 352 0
 1191 006c 0094     		str	r4, [sp]
 1192 006e 03AB     		add	r3, sp, #12
 1193 0070 4246     		mov	r2, r8
 1194 0072 3946     		mov	r1, r7
 1195 0074 F020     		movs	r0, #240
 1196 0076 FFF7FEFF 		bl	kiss_put_char
 1197              	.LVL154:
 353:../system/src/aprs/ax25.c **** 
 354:../system/src/aprs/ax25.c **** 	while (payload_len--)
 1198              		.loc 2 354 0
 1199 007a 0BE0     		b	.L104
 1200              	.LVL155:
 1201              	.L105:
 355:../system/src/aprs/ax25.c **** 	{
 356:../system/src/aprs/ax25.c **** 		kiss_put_char(*buf++, output_buf, output_size, &return_val, &crc);
 1202              		.loc 2 356 0
 1203 007c 751C     		adds	r5, r6, #1
 1204              	.LVL156:
 1205 007e 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 1206 0080 0DF10E03 		add	r3, sp, #14
 1207 0084 0093     		str	r3, [sp]
 1208 0086 03AB     		add	r3, sp, #12
 1209 0088 4246     		mov	r2, r8
 1210 008a 3946     		mov	r1, r7
 1211 008c FFF7FEFF 		bl	kiss_put_char
 1212              	.LVL157:
 1213 0090 2E46     		mov	r6, r5
 354:../system/src/aprs/ax25.c **** 	{
 1214              		.loc 2 354 0
 1215 0092 2546     		mov	r5, r4
 1216              	.LVL158:
 1217              	.L104:
 1218 0094 6B1E     		subs	r3, r5, #1
 1219 0096 9CB2     		uxth	r4, r3
 1220              	.LVL159:
 1221 0098 002D     		cmp	r5, #0
 1222 009a EFD1     		bne	.L105
 357:../system/src/aprs/ax25.c **** 	}
 358:../system/src/aprs/ax25.c **** 
 359:../system/src/aprs/ax25.c **** 	kiss_finalize_buffer(output_buf, output_size, &return_val);
 1223              		.loc 2 359 0
 1224 009c 03AA     		add	r2, sp, #12
 1225 009e 4146     		mov	r1, r8
 1226 00a0 3846     		mov	r0, r7
 1227 00a2 FFF7FEFF 		bl	kiss_finalize_buffer
 1228              	.LVL160:
 360:../system/src/aprs/ax25.c **** 
 361:../system/src/aprs/ax25.c **** 	return return_val;
 362:../system/src/aprs/ax25.c **** }
 1229              		.loc 2 362 0
 1230 00a6 BDF80C00 		ldrh	r0, [sp, #12]
 1231 00aa 04B0     		add	sp, sp, #16
 1232              		.cfi_def_cfa_offset 32
 1233              		@ sp needed
 1234 00ac BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1235              		.cfi_endproc
 1236              	.LFE15:
 1238              		.section	.text.ax25_sendRaw,"ax",%progbits
 1239              		.align	1
 1240              		.global	ax25_sendRaw
 1241              		.syntax unified
 1242              		.thumb
 1243              		.thumb_func
 1244              		.fpu fpv4-sp-d16
 1246              	ax25_sendRaw:
 1247              	.LFB16:
 363:../system/src/aprs/ax25.c **** 
 364:../system/src/aprs/ax25.c **** /**************************************************************************************************
 365:../system/src/aprs/ax25.c **** void ax25_sendRaw(AX25Ctx *ctx, const void *_buf, uint16_t len) {
 1248              		.loc 2 365 0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 1252              	.LVL161:
 1253 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1254              		.cfi_def_cfa_offset 24
 1255              		.cfi_offset 3, -24
 1256              		.cfi_offset 4, -20
 1257              		.cfi_offset 5, -16
 1258              		.cfi_offset 6, -12
 1259              		.cfi_offset 7, -8
 1260              		.cfi_offset 14, -4
 1261 0002 0746     		mov	r7, r0
 1262 0004 0E46     		mov	r6, r1
 1263 0006 1546     		mov	r5, r2
 1264              	.LVL162:
 366:../system/src/aprs/ax25.c **** /**************************************************************************************************
 367:../system/src/aprs/ax25.c **** 
 368:../system/src/aprs/ax25.c **** 	const uint8_t *buf = (const uint8_t *)_buf;
 369:../system/src/aprs/ax25.c **** 	uint8_t crcl,crch;
 370:../system/src/aprs/ax25.c **** 	ctx->crc_out = CRC_CCITT_INIT_VAL;
 1265              		.loc 2 370 0
 1266 0008 4FF6FF73 		movw	r3, #65535
 1267 000c A0F80832 		strh	r3, [r0, #520]	@ movhi
 371:../system/src/aprs/ax25.c **** 	fifo_putc(HDLC_FLAG, &ctx->afsk->tx_fifo);
 1268              		.loc 2 371 0
 1269 0010 D0F80012 		ldr	r1, [r0, #512]
 1270              	.LVL163:
 1271 0014 01F50871 		add	r1, r1, #544
 1272 0018 7E20     		movs	r0, #126
 1273              	.LVL164:
 1274 001a FFF7FEFF 		bl	fifo_putc
 1275              	.LVL165:
 372:../system/src/aprs/ax25.c **** 
 373:../system/src/aprs/ax25.c **** 	while (len--) ax25_putchar(ctx, *buf++);
 1276              		.loc 2 373 0
 1277 001e 06E0     		b	.L108
 1278              	.LVL166:
 1279              	.L109:
 1280              		.loc 2 373 0 is_stmt 0 discriminator 2
 1281 0020 751C     		adds	r5, r6, #1
 1282              	.LVL167:
 1283 0022 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 1284 0024 3846     		mov	r0, r7
 1285 0026 FFF7FEFF 		bl	ax25_putchar
 1286              	.LVL168:
 1287 002a 2E46     		mov	r6, r5
 1288 002c 2546     		mov	r5, r4
 1289              	.LVL169:
 1290              	.L108:
 1291              		.loc 2 373 0 discriminator 1
 1292 002e 6B1E     		subs	r3, r5, #1
 1293 0030 9CB2     		uxth	r4, r3
 1294              	.LVL170:
 1295 0032 002D     		cmp	r5, #0
 1296 0034 F4D1     		bne	.L109
 374:../system/src/aprs/ax25.c **** 
 375:../system/src/aprs/ax25.c **** 	crcl = (ctx->crc_out & 0xff) ^ 0xff;
 1297              		.loc 2 375 0 is_stmt 1
 1298 0036 B7F80832 		ldrh	r3, [r7, #520]
 1299 003a D943     		mvns	r1, r3
 1300              	.LVL171:
 376:../system/src/aprs/ax25.c **** 	crch = (ctx->crc_out >> 8) ^ 0xff;
 1301              		.loc 2 376 0
 1302 003c 6FEA1323 		mvn	r3, r3, lsr #8
 1303 0040 DCB2     		uxtb	r4, r3
 1304              	.LVL172:
 377:../system/src/aprs/ax25.c **** 	ax25_putchar(ctx, crcl);
 1305              		.loc 2 377 0
 1306 0042 C9B2     		uxtb	r1, r1
 1307 0044 3846     		mov	r0, r7
 1308 0046 FFF7FEFF 		bl	ax25_putchar
 1309              	.LVL173:
 378:../system/src/aprs/ax25.c **** 	ax25_putchar(ctx, crch);
 1310              		.loc 2 378 0
 1311 004a 2146     		mov	r1, r4
 1312 004c 3846     		mov	r0, r7
 1313 004e FFF7FEFF 		bl	ax25_putchar
 1314              	.LVL174:
 379:../system/src/aprs/ax25.c **** 
 380:../system/src/aprs/ax25.c **** 	fifo_putc(HDLC_FLAG, &ctx->afsk->tx_fifo);
 1315              		.loc 2 380 0
 1316 0052 D7F80012 		ldr	r1, [r7, #512]
 1317 0056 01F50871 		add	r1, r1, #544
 1318 005a 7E20     		movs	r0, #126
 1319 005c FFF7FEFF 		bl	fifo_putc
 1320              	.LVL175:
 381:../system/src/aprs/ax25.c **** 
 382:../system/src/aprs/ax25.c **** }
 1321              		.loc 2 382 0
 1322 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1323              		.cfi_endproc
 1324              	.LFE16:
 1326              		.section	.text.ax25_init,"ax",%progbits
 1327              		.align	1
 1328              		.global	ax25_init
 1329              		.syntax unified
 1330              		.thumb
 1331              		.thumb_func
 1332              		.fpu fpv4-sp-d16
 1334              	ax25_init:
 1335              	.LFB17:
 383:../system/src/aprs/ax25.c **** 
 384:../system/src/aprs/ax25.c **** /**************************************************************************************************
 385:../system/src/aprs/ax25.c **** void ax25_init(AX25Ctx *ctx, Afsk *afsk, bool raw, ax25_callback_t hook) {
 1336              		.loc 2 385 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 1340              	.LVL176:
 1341 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1342              		.cfi_def_cfa_offset 24
 1343              		.cfi_offset 3, -24
 1344              		.cfi_offset 4, -20
 1345              		.cfi_offset 5, -16
 1346              		.cfi_offset 6, -12
 1347              		.cfi_offset 7, -8
 1348              		.cfi_offset 14, -4
 1349 0002 0446     		mov	r4, r0
 1350 0004 0F46     		mov	r7, r1
 1351 0006 1646     		mov	r6, r2
 1352 0008 1D46     		mov	r5, r3
 386:../system/src/aprs/ax25.c **** /**************************************************************************************************
 387:../system/src/aprs/ax25.c **** 
 388:../system/src/aprs/ax25.c **** 	memset(ctx, 0, sizeof(*ctx));
 1353              		.loc 2 388 0
 1354 000a 4FF40672 		mov	r2, #536
 1355              	.LVL177:
 1356 000e 0021     		movs	r1, #0
 1357              	.LVL178:
 1358 0010 FFF7FEFF 		bl	memset
 1359              	.LVL179:
 389:../system/src/aprs/ax25.c **** 
 390:../system/src/aprs/ax25.c **** 	ctx->afsk = afsk;
 1360              		.loc 2 390 0
 1361 0014 C4F80072 		str	r7, [r4, #512]
 391:../system/src/aprs/ax25.c **** 	ctx->raw = raw;
 1362              		.loc 2 391 0
 1363 0018 84F81062 		strb	r6, [r4, #528]
 392:../system/src/aprs/ax25.c **** 	ctx->hook = hook;
 1364              		.loc 2 392 0
 1365 001c C4F80C52 		str	r5, [r4, #524]
 393:../system/src/aprs/ax25.c **** 	ctx->crc_in = ctx->crc_out = CRC_CCITT_INIT_VAL;
 1366              		.loc 2 393 0
 1367 0020 4FF6FF73 		movw	r3, #65535
 1368 0024 A4F80832 		strh	r3, [r4, #520]	@ movhi
 1369 0028 A4F80632 		strh	r3, [r4, #518]	@ movhi
 394:../system/src/aprs/ax25.c **** 
 395:../system/src/aprs/ax25.c **** 
 396:../system/src/aprs/ax25.c **** }
 1370              		.loc 2 396 0
 1371 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1372              		.cfi_endproc
 1373              	.LFE17:
 1375              		.comm	ax25_new_msg_rx_flag,1,1
 1376              		.comm	ax25_rxed_frame,596,4
 1377              		.text
 1378              	.Letext0:
 1379              		.file 3 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 1380              		.file 4 "../system/include/aprs/cfifo.h"
 1381              		.file 5 "../system/include/aprs/afsk.h"
 1382              		.file 6 "../system/include/aprs/ax25.h"
 1383              		.file 7 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1384              		.file 8 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1385              		.file 9 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 1386              		.file 10 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1387              		.file 11 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/ctype.h"
 1388              		.file 12 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
 1389              		.file 13 "../include/KissCommunication.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ax25.c
     /tmp/ccJDDSyS.s:18     .text.updcrc_ccitt:0000000000000000 $t
     /tmp/ccJDDSyS.s:24     .text.updcrc_ccitt:0000000000000000 updcrc_ccitt
     /tmp/ccJDDSyS.s:45     .text.updcrc_ccitt:0000000000000010 $d
     /tmp/ccJDDSyS.s:50     .text.fifo_isempty:0000000000000000 $t
     /tmp/ccJDDSyS.s:56     .text.fifo_isempty:0000000000000000 fifo_isempty
     /tmp/ccJDDSyS.s:79     .text.fifo_isfull:0000000000000000 $t
     /tmp/ccJDDSyS.s:85     .text.fifo_isfull:0000000000000000 fifo_isfull
     /tmp/ccJDDSyS.s:130    .text.fifo_push:0000000000000000 $t
     /tmp/ccJDDSyS.s:136    .text.fifo_push:0000000000000000 fifo_push
     /tmp/ccJDDSyS.s:167    .text.fifo_pop:0000000000000000 $t
     /tmp/ccJDDSyS.s:173    .text.fifo_pop:0000000000000000 fifo_pop
     /tmp/ccJDDSyS.s:207    .text.fifo_getc:0000000000000000 $t
     /tmp/ccJDDSyS.s:213    .text.fifo_getc:0000000000000000 fifo_getc
     /tmp/ccJDDSyS.s:246    .text.fifo_putc:0000000000000000 $t
     /tmp/ccJDDSyS.s:252    .text.fifo_putc:0000000000000000 fifo_putc
     /tmp/ccJDDSyS.s:289    .text.ax25_decode:0000000000000000 $t
     /tmp/ccJDDSyS.s:295    .text.ax25_decode:0000000000000000 ax25_decode
     /tmp/ccJDDSyS.s:598    .text.ax25_decode:0000000000000154 $d
                            *COM*:0000000000000254 ax25_rxed_frame
                            *COM*:0000000000000001 ax25_new_msg_rx_flag
     /tmp/ccJDDSyS.s:605    .text.ax25_poll:0000000000000000 $t
     /tmp/ccJDDSyS.s:612    .text.ax25_poll:0000000000000000 ax25_poll
     /tmp/ccJDDSyS.s:803    .text.ax25_putchar:0000000000000000 $t
     /tmp/ccJDDSyS.s:810    .text.ax25_putchar:0000000000000000 ax25_putchar
     /tmp/ccJDDSyS.s:861    .text.ax25_sendCall:0000000000000000 $t
     /tmp/ccJDDSyS.s:867    .text.ax25_sendCall:0000000000000000 ax25_sendCall
     /tmp/ccJDDSyS.s:974    .text.ax25_sendVia:0000000000000000 $t
     /tmp/ccJDDSyS.s:981    .text.ax25_sendVia:0000000000000000 ax25_sendVia
     /tmp/ccJDDSyS.s:1102   .text.ax25_sendVia_toBuffer:0000000000000000 $t
     /tmp/ccJDDSyS.s:1109   .text.ax25_sendVia_toBuffer:0000000000000000 ax25_sendVia_toBuffer
     /tmp/ccJDDSyS.s:1239   .text.ax25_sendRaw:0000000000000000 $t
     /tmp/ccJDDSyS.s:1246   .text.ax25_sendRaw:0000000000000000 ax25_sendRaw
     /tmp/ccJDDSyS.s:1327   .text.ax25_init:0000000000000000 $t
     /tmp/ccJDDSyS.s:1334   .text.ax25_init:0000000000000000 ax25_init
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.macros.h.2.7a7a5ac48d4160b7481c806e80b68442
                           .group:0000000000000000 wm4.config.h.2.f5e96167cb26b0ce97c5e7513a95bc8b
                           .group:0000000000000000 wm4.afsk.h.17.cf8f922069680e152e1eddb76cd4cc82
                           .group:0000000000000000 wm4.ax25.h.18.077e42a4af9016476e34900472a8fe18
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.ctype.h.2.56b1b2226dd0fb45614b0e18787c61f7
                           .group:0000000000000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:0000000000000000 wm4.station_config.h.9.d547169434a316afe56104ac612d2109
                           .group:0000000000000000 wm4.KissCommunication.h.17.f1e76db053f07badac1040f3bea74fb3

UNDEFINED SYMBOLS
crc_ccitt_tab
strlen
kiss_reset_buffer
kiss_put_call
kiss_put_char
kiss_finalize_buffer
memset
