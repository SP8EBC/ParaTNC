   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_pwr_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWREx_GetVoltageRange
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_PWREx_GetVoltageRange:
  26              	.LFB317:
  27              		.file 1 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c"
   1:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
   2:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
   3:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @file    stm32l4xx_hal_pwr_ex.c
   4:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following
   7:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *           + Extended Initialization and de-initialization functions
   9:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *           + Extended Peripheral Control functions
  10:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *
  11:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
  12:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @attention
  13:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *
  14:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  15:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * All rights reserved.</center></h2>
  16:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *
  17:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  18:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * the "License"; You may not use this file except in compliance with the
  19:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * License. You may obtain a copy of the License at:
  20:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  21:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *
  22:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
  23:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
  24:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  25:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  26:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #include "stm32l4xx_hal.h"
  27:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  28:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  29:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @{
  30:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
  31:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  32:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  33:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR Extended HAL module driver
  34:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @{
  35:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
  36:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  37:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  38:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  39:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  40:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  41:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  42:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L412xx) || defined (STM32L422xx) || defined (STM32L431xx) || defined (STM32L432xx
  43:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x0000000B) /* PH0/PH1/PH3 */
  44:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #elif defined (STM32L451xx) || defined (STM32L452xx) || defined (STM32L462xx)
  45:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x0000000B) /* PH0/PH1/PH3 */
  46:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #elif defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485
  47:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x00000003) /* PH0/PH1 */
  48:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #elif defined (STM32L496xx) || defined (STM32L4A6xx) || defined (STM32L4P5xx) || defined (STM32L4Q5
  49:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x0000FFFF) /* PH0..PH15 */
  50:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
  51:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  52:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx
  53:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTI_AVAILABLE_PINS   ((uint32_t)0x00000FFF) /* PI0..PI11 */
  54:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
  55:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  56:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWR_Extended_Private_Defines PWR Extended Private Defines
  57:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @{
  58:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
  59:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  60:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_PVM_Mode_Mask PWR PVM Mode Mask
  61:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @{
  62:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
  63:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #define PVM_MODE_IT               ((uint32_t)0x00010000)  /*!< Mask for interruption yielded by PVM
  64:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #define PVM_MODE_EVT              ((uint32_t)0x00020000)  /*!< Mask for event yielded by PVM thresh
  65:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #define PVM_RISING_EDGE           ((uint32_t)0x00000001)  /*!< Mask for rising edge set as PVM trig
  66:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #define PVM_FALLING_EDGE          ((uint32_t)0x00000002)  /*!< Mask for falling edge set as PVM tri
  67:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
  68:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @}
  69:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
  70:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  71:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_TimeOut_Value PWR Extended Flag Setting Time Out Value
  72:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @{
  73:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
  74:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #define PWR_FLAG_SETTING_DELAY_US                      50UL   /*!< Time out value for REGLPF and VO
  75:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
  76:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @}
  77:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
  78:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  79:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  80:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  81:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
  82:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @}
  83:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
  84:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  85:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  86:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  87:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  88:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  89:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  90:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /* Exported functions --------------------------------------------------------*/
  91:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  92:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWR Extended Exported Functions
  93:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @{
  94:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
  95:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  96:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Extended Peripheral Control functions
  97:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *  @brief   Extended Peripheral Control functions
  98:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *
  99:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** @verbatim
 100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****  ===============================================================================
 101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****               ##### Extended Peripheral Initialization and de-initialization functions #####
 102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****  ===============================================================================
 103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     [..]
 104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** @endverbatim
 106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @{
 107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Return Voltage Scaling Range.
 112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1 or PWR_REGULATOR_VOLTAGE_SCALE2
 113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         or PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when applicable)
 114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
  28              		.loc 1 116 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR5_R1MODE)
 118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     {
 120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       return PWR_REGULATOR_VOLTAGE_SCALE2;
 121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     }
 122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     else if (READ_BIT(PWR->CR5, PWR_CR5_R1MODE) == PWR_CR5_R1MODE)
 123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     {
 124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* PWR_CR5_R1MODE bit set means that Range 1 Boost is disabled */
 125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       return PWR_REGULATOR_VOLTAGE_SCALE1;
 126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     }
 127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     else
 128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     {
 129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
 130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     }
 131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #else
 132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   return  (PWR->CR1 & PWR_CR1_VOS);
  33              		.loc 1 132 0
  34 0000 024B     		ldr	r3, .L2
  35 0002 1868     		ldr	r0, [r3]
 133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
  36              		.loc 1 134 0
  37 0004 00F4C060 		and	r0, r0, #1536
  38 0008 7047     		bx	lr
  39              	.L3:
  40 000a 00BF     		.align	2
  41              	.L2:
  42 000c 00700040 		.word	1073770496
  43              		.cfi_endproc
  44              	.LFE317:
  46              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
  47              		.align	1
  48              		.global	HAL_PWREx_ControlVoltageScaling
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	HAL_PWREx_ControlVoltageScaling:
  55              	.LFB318:
 135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Configure the main internal regulator output voltage.
 140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param  VoltageScaling specifies the regulator output voltage to achieve
 141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   @if STM32L4S9xx
 144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when available, Regulator voltage outpu
 145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,
 146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 120 MHz.
 147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   @endif
 148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1 Regulator voltage output range 1 mode,
 149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,
 150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 80 MHz.
 151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE2 Regulator voltage output range 2 mode,
 152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.0 V,
 153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 26 MHz.
 154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  When moving from Range 1 to Range 2, the system frequency must be decreased to
 155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        a value below 26 MHz before calling HAL_PWREx_ControlVoltageScaling() API.
 156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        When moving from Range 2 to Range 1, the system frequency can be increased to
 157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        a value up to 80 MHz after calling HAL_PWREx_ControlVoltageScaling() API. For
 158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        some devices, the system frequency can be increased up to 120 MHz.
 159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  When moving from Range 2 to Range 1, the API waits for VOSF flag to be
 160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        cleared before returning the status. If the flag is not cleared within
 161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        50 microseconds, HAL_TIMEOUT status is reported.
 162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
  56              		.loc 1 165 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL0:
 166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
 167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR5_R1MODE)
 171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1_BOOST)
 172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     {
 176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is enabled */
 177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1;
 184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         wait_loop_index--;
 187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     }
 193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* If current range is range 1 normal or boost mode */
 194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     else
 195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     {
 196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Enable Range 1 Boost (no issue if bit already reset) */
 197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     }
 199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   else if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     {
 205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is disabled */
 206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1;
 213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         wait_loop_index--;
 216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     }
 222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****      /* If current range is range 1 normal or boost mode */
 223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     else
 224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     {
 225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Disable Range 1 Boost (no issue if bit already set) */
 226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     }
 228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   else
 230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Set Range 2 */
 232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* No need to wait for VOSF to be cleared for this transition */
 234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* PWR_CR5_R1MODE bit setting has no effect in Range 2        */
 235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #else
 238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* If Set Range 1 */
 240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
  62              		.loc 1 240 0
  63 0000 B0F5007F 		cmp	r0, #512
  64 0004 0FD0     		beq	.L13
 241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     {
 244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         wait_loop_index--;
 252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     }
 258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   else
 260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
  65              		.loc 1 261 0
  66 0006 1F4B     		ldr	r3, .L15
  67 0008 1B68     		ldr	r3, [r3]
  68 000a 03F4C063 		and	r3, r3, #1536
  69 000e B3F5806F 		cmp	r3, #1024
  70 0012 34D0     		beq	.L12
 262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     {
 263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 2 */
 264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
  71              		.loc 1 264 0
  72 0014 1B4A     		ldr	r2, .L15
  73 0016 1368     		ldr	r3, [r2]
  74 0018 23F4C063 		bic	r3, r3, #1536
  75 001c 43F48063 		orr	r3, r3, #1024
  76 0020 1360     		str	r3, [r2]
 265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* No need to wait for VOSF to be cleared for this transition */
 266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     }
 267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
  77              		.loc 1 270 0
  78 0022 0020     		movs	r0, #0
  79              	.LVL1:
  80 0024 7047     		bx	lr
  81              	.LVL2:
  82              	.L13:
 242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     {
  83              		.loc 1 242 0
  84 0026 174B     		ldr	r3, .L15
  85 0028 1B68     		ldr	r3, [r3]
  86 002a 03F4C063 		and	r3, r3, #1536
  87 002e B3F5007F 		cmp	r3, #512
  88 0032 22D0     		beq	.L10
 245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
  89              		.loc 1 245 0
  90 0034 134A     		ldr	r2, .L15
  91 0036 1368     		ldr	r3, [r2]
  92 0038 23F4C063 		bic	r3, r3, #1536
  93 003c 43F40073 		orr	r3, r3, #512
  94 0040 1360     		str	r3, [r2]
 248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
  95              		.loc 1 248 0
  96 0042 114B     		ldr	r3, .L15+4
  97 0044 1A68     		ldr	r2, [r3]
  98 0046 3223     		movs	r3, #50
  99 0048 03FB02F3 		mul	r3, r3, r2
 100 004c 0F4A     		ldr	r2, .L15+8
 101 004e A2FB0323 		umull	r2, r3, r2, r3
 102 0052 9B0C     		lsrs	r3, r3, #18
 103 0054 0133     		adds	r3, r3, #1
 104              	.LVL3:
 249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 105              		.loc 1 249 0
 106 0056 00E0     		b	.L7
 107              	.L9:
 251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 108              		.loc 1 251 0
 109 0058 013B     		subs	r3, r3, #1
 110              	.LVL4:
 111              	.L7:
 249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 112              		.loc 1 249 0
 113 005a 0A4A     		ldr	r2, .L15
 114 005c 5269     		ldr	r2, [r2, #20]
 115 005e 12F4806F 		tst	r2, #1024
 116 0062 01D0     		beq	.L8
 249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 117              		.loc 1 249 0 is_stmt 0 discriminator 1
 118 0064 002B     		cmp	r3, #0
 119 0066 F7D1     		bne	.L9
 120              	.L8:
 253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 121              		.loc 1 253 0 is_stmt 1
 122 0068 064B     		ldr	r3, .L15
 123              	.LVL5:
 124 006a 5B69     		ldr	r3, [r3, #20]
 125 006c 13F4806F 		tst	r3, #1024
 126 0070 01D1     		bne	.L14
 127              		.loc 1 270 0
 128 0072 0020     		movs	r0, #0
 129              	.LVL6:
 130 0074 7047     		bx	lr
 131              	.LVL7:
 132              	.L14:
 255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 133              		.loc 1 255 0
 134 0076 0320     		movs	r0, #3
 135              	.LVL8:
 136 0078 7047     		bx	lr
 137              	.LVL9:
 138              	.L10:
 139              		.loc 1 270 0
 140 007a 0020     		movs	r0, #0
 141              	.LVL10:
 142 007c 7047     		bx	lr
 143              	.LVL11:
 144              	.L12:
 145 007e 0020     		movs	r0, #0
 146              	.LVL12:
 271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 147              		.loc 1 271 0
 148 0080 7047     		bx	lr
 149              	.L16:
 150 0082 00BF     		.align	2
 151              	.L15:
 152 0084 00700040 		.word	1073770496
 153 0088 00000000 		.word	SystemCoreClock
 154 008c 83DE1B43 		.word	1125899907
 155              		.cfi_endproc
 156              	.LFE318:
 158              		.section	.text.HAL_PWREx_EnableBatteryCharging,"ax",%progbits
 159              		.align	1
 160              		.global	HAL_PWREx_EnableBatteryCharging
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv4-sp-d16
 166              	HAL_PWREx_EnableBatteryCharging:
 167              	.LFB319:
 272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable battery charging.
 276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        When VDD is present, charge the external battery on VBAT thru an internal resistor.
 277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param  ResistorSelection specifies the resistor impedance.
 278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_5     5 kOhms resistor
 280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_1_5 1.5 kOhms resistor
 281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableBatteryCharging(uint32_t ResistorSelection)
 284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 168              		.loc 1 284 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173              	.LVL13:
 285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_BATTERY_RESISTOR_SELECT(ResistorSelection));
 286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Specify resistor selection */
 288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR4, PWR_CR4_VBRS, ResistorSelection);
 174              		.loc 1 288 0
 175 0000 054A     		ldr	r2, .L18
 176 0002 D368     		ldr	r3, [r2, #12]
 177 0004 23F40073 		bic	r3, r3, #512
 178 0008 1843     		orrs	r0, r0, r3
 179              	.LVL14:
 180 000a D060     		str	r0, [r2, #12]
 289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Enable battery charging */
 291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR4, PWR_CR4_VBE);
 181              		.loc 1 291 0
 182 000c D368     		ldr	r3, [r2, #12]
 183 000e 43F48073 		orr	r3, r3, #256
 184 0012 D360     		str	r3, [r2, #12]
 292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 185              		.loc 1 292 0
 186 0014 7047     		bx	lr
 187              	.L19:
 188 0016 00BF     		.align	2
 189              	.L18:
 190 0018 00700040 		.word	1073770496
 191              		.cfi_endproc
 192              	.LFE319:
 194              		.section	.text.HAL_PWREx_DisableBatteryCharging,"ax",%progbits
 195              		.align	1
 196              		.global	HAL_PWREx_DisableBatteryCharging
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv4-sp-d16
 202              	HAL_PWREx_DisableBatteryCharging:
 203              	.LFB320:
 293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable battery charging.
 297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBatteryCharging(void)
 300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 204              		.loc 1 300 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR4, PWR_CR4_VBE);
 209              		.loc 1 301 0
 210 0000 024A     		ldr	r2, .L21
 211 0002 D368     		ldr	r3, [r2, #12]
 212 0004 23F48073 		bic	r3, r3, #256
 213 0008 D360     		str	r3, [r2, #12]
 302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 214              		.loc 1 302 0
 215 000a 7047     		bx	lr
 216              	.L22:
 217              		.align	2
 218              	.L21:
 219 000c 00700040 		.word	1073770496
 220              		.cfi_endproc
 221              	.LFE320:
 223              		.section	.text.HAL_PWREx_EnableVddIO2,"ax",%progbits
 224              		.align	1
 225              		.global	HAL_PWREx_EnableVddIO2
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	HAL_PWREx_EnableVddIO2:
 232              	.LFB321:
 303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_USV)
 306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable VDDUSB supply.
 308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Remove VDDUSB electrical and logical isolation, once VDDUSB supply is present.
 309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableVddUSB(void)
 312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_CR2_USV);
 314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable VDDUSB supply.
 319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableVddUSB(void)
 322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_USV);
 324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_USV */
 326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_IOSV)
 328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable VDDIO2 supply.
 330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Remove VDDIO2 electrical and logical isolation, once VDDIO2 supply is present.
 331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableVddIO2(void)
 334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 233              		.loc 1 334 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_CR2_IOSV);
 238              		.loc 1 335 0
 239 0000 024A     		ldr	r2, .L24
 240 0002 5368     		ldr	r3, [r2, #4]
 241 0004 43F40073 		orr	r3, r3, #512
 242 0008 5360     		str	r3, [r2, #4]
 336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 243              		.loc 1 336 0
 244 000a 7047     		bx	lr
 245              	.L25:
 246              		.align	2
 247              	.L24:
 248 000c 00700040 		.word	1073770496
 249              		.cfi_endproc
 250              	.LFE321:
 252              		.section	.text.HAL_PWREx_DisableVddIO2,"ax",%progbits
 253              		.align	1
 254              		.global	HAL_PWREx_DisableVddIO2
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	HAL_PWREx_DisableVddIO2:
 261              	.LFB322:
 337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable VDDIO2 supply.
 341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableVddIO2(void)
 344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 262              		.loc 1 344 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_IOSV);
 267              		.loc 1 345 0
 268 0000 024A     		ldr	r2, .L27
 269 0002 5368     		ldr	r3, [r2, #4]
 270 0004 23F40073 		bic	r3, r3, #512
 271 0008 5360     		str	r3, [r2, #4]
 346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 272              		.loc 1 346 0
 273 000a 7047     		bx	lr
 274              	.L28:
 275              		.align	2
 276              	.L27:
 277 000c 00700040 		.word	1073770496
 278              		.cfi_endproc
 279              	.LFE322:
 281              		.section	.text.HAL_PWREx_EnableInternalWakeUpLine,"ax",%progbits
 282              		.align	1
 283              		.global	HAL_PWREx_EnableInternalWakeUpLine
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv4-sp-d16
 289              	HAL_PWREx_EnableInternalWakeUpLine:
 290              	.LFB323:
 347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_IOSV */
 348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable Internal Wake-up Line.
 352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableInternalWakeUpLine(void)
 355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 291              		.loc 1 355 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_EIWF);
 296              		.loc 1 356 0
 297 0000 024A     		ldr	r2, .L30
 298 0002 9368     		ldr	r3, [r2, #8]
 299 0004 43F40043 		orr	r3, r3, #32768
 300 0008 9360     		str	r3, [r2, #8]
 357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 301              		.loc 1 357 0
 302 000a 7047     		bx	lr
 303              	.L31:
 304              		.align	2
 305              	.L30:
 306 000c 00700040 		.word	1073770496
 307              		.cfi_endproc
 308              	.LFE323:
 310              		.section	.text.HAL_PWREx_DisableInternalWakeUpLine,"ax",%progbits
 311              		.align	1
 312              		.global	HAL_PWREx_DisableInternalWakeUpLine
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	HAL_PWREx_DisableInternalWakeUpLine:
 319              	.LFB324:
 358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable Internal Wake-up Line.
 362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableInternalWakeUpLine(void)
 365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 320              		.loc 1 365 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EIWF);
 325              		.loc 1 366 0
 326 0000 024A     		ldr	r2, .L33
 327 0002 9368     		ldr	r3, [r2, #8]
 328 0004 23F40043 		bic	r3, r3, #32768
 329 0008 9360     		str	r3, [r2, #8]
 367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 330              		.loc 1 367 0
 331 000a 7047     		bx	lr
 332              	.L34:
 333              		.align	2
 334              	.L33:
 335 000c 00700040 		.word	1073770496
 336              		.cfi_endproc
 337              	.LFE324:
 339              		.section	.text.HAL_PWREx_EnableGPIOPullUp,"ax",%progbits
 340              		.align	1
 341              		.global	HAL_PWREx_EnableGPIOPullUp
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	HAL_PWREx_EnableGPIOPullUp:
 348              	.LFB325:
 368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-up state in Standby and Shutdown modes.
 373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Set the relevant PUy bits of PWR_PUCRx register to configure the I/O in
 374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        pull-up state in Standby and Shutdown modes.
 375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
 379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is cleared unless it is reserved.
 381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to set is reserved, the other PUy bits entered as input
 382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO Specify the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H
 384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber Specify the I/O pins numbers.
 386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
 389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 349              		.loc 1 393 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LVL15:
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 355              		.loc 1 399 0
 356 0000 0728     		cmp	r0, #7
 357 0002 5DD8     		bhi	.L46
 358 0004 DFE800F0 		tbb	[pc, r0]
 359              	.L38:
 360 0008 04       		.byte	(.L37-.L38)/2
 361 0009 12       		.byte	(.L39-.L38)/2
 362 000a 1E       		.byte	(.L40-.L38)/2
 363 000b 28       		.byte	(.L41-.L38)/2
 364 000c 32       		.byte	(.L42-.L38)/2
 365 000d 3C       		.byte	(.L43-.L38)/2
 366 000e 46       		.byte	(.L44-.L38)/2
 367 000f 50       		.byte	(.L45-.L38)/2
 368              		.p2align 1
 369              	.L37:
 400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 370              		.loc 1 402 0
 371 0010 2C4B     		ldr	r3, .L47
 372 0012 1A6A     		ldr	r2, [r3, #32]
 373 0014 21F48040 		bic	r0, r1, #16384
 374              	.LVL16:
 375 0018 0243     		orrs	r2, r2, r0
 376 001a 1A62     		str	r2, [r3, #32]
 403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 377              		.loc 1 403 0
 378 001c 5A6A     		ldr	r2, [r3, #36]
 379 001e 21F42041 		bic	r1, r1, #40960
 380              	.LVL17:
 381 0022 22EA0101 		bic	r1, r2, r1
 382 0026 5962     		str	r1, [r3, #36]
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 383              		.loc 1 394 0
 384 0028 0020     		movs	r0, #0
 404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 385              		.loc 1 404 0
 386 002a 7047     		bx	lr
 387              	.LVL18:
 388              	.L39:
 405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRB, GPIONumber);
 389              		.loc 1 406 0
 390 002c 254B     		ldr	r3, .L47
 391 002e 9A6A     		ldr	r2, [r3, #40]
 392 0030 0A43     		orrs	r2, r2, r1
 393 0032 9A62     		str	r2, [r3, #40]
 407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 394              		.loc 1 407 0
 395 0034 DA6A     		ldr	r2, [r3, #44]
 396 0036 21F01001 		bic	r1, r1, #16
 397              	.LVL19:
 398 003a 22EA0101 		bic	r1, r2, r1
 399 003e D962     		str	r1, [r3, #44]
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 400              		.loc 1 394 0
 401 0040 0020     		movs	r0, #0
 402              	.LVL20:
 408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 403              		.loc 1 408 0
 404 0042 7047     		bx	lr
 405              	.LVL21:
 406              	.L40:
 409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRC, GPIONumber);
 407              		.loc 1 410 0
 408 0044 1F4B     		ldr	r3, .L47
 409 0046 1A6B     		ldr	r2, [r3, #48]
 410 0048 0A43     		orrs	r2, r2, r1
 411 004a 1A63     		str	r2, [r3, #48]
 411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 412              		.loc 1 411 0
 413 004c 5A6B     		ldr	r2, [r3, #52]
 414 004e 22EA0101 		bic	r1, r2, r1
 415              	.LVL22:
 416 0052 5963     		str	r1, [r3, #52]
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 417              		.loc 1 394 0
 418 0054 0020     		movs	r0, #0
 419              	.LVL23:
 412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 420              		.loc 1 412 0
 421 0056 7047     		bx	lr
 422              	.LVL24:
 423              	.L41:
 413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRD, GPIONumber);
 424              		.loc 1 415 0
 425 0058 1A4B     		ldr	r3, .L47
 426 005a 9A6B     		ldr	r2, [r3, #56]
 427 005c 0A43     		orrs	r2, r2, r1
 428 005e 9A63     		str	r2, [r3, #56]
 416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 429              		.loc 1 416 0
 430 0060 DA6B     		ldr	r2, [r3, #60]
 431 0062 22EA0101 		bic	r1, r2, r1
 432              	.LVL25:
 433 0066 D963     		str	r1, [r3, #60]
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 434              		.loc 1 394 0
 435 0068 0020     		movs	r0, #0
 436              	.LVL26:
 417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 437              		.loc 1 417 0
 438 006a 7047     		bx	lr
 439              	.LVL27:
 440              	.L42:
 418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRE, GPIONumber);
 441              		.loc 1 421 0
 442 006c 154B     		ldr	r3, .L47
 443 006e 1A6C     		ldr	r2, [r3, #64]
 444 0070 0A43     		orrs	r2, r2, r1
 445 0072 1A64     		str	r2, [r3, #64]
 422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 446              		.loc 1 422 0
 447 0074 5A6C     		ldr	r2, [r3, #68]
 448 0076 22EA0101 		bic	r1, r2, r1
 449              	.LVL28:
 450 007a 5964     		str	r1, [r3, #68]
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 451              		.loc 1 394 0
 452 007c 0020     		movs	r0, #0
 453              	.LVL29:
 423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 454              		.loc 1 423 0
 455 007e 7047     		bx	lr
 456              	.LVL30:
 457              	.L43:
 424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF)
 426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRF, GPIONumber);
 458              		.loc 1 427 0
 459 0080 104B     		ldr	r3, .L47
 460 0082 9A6C     		ldr	r2, [r3, #72]
 461 0084 0A43     		orrs	r2, r2, r1
 462 0086 9A64     		str	r2, [r3, #72]
 428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, GPIONumber);
 463              		.loc 1 428 0
 464 0088 DA6C     		ldr	r2, [r3, #76]
 465 008a 22EA0101 		bic	r1, r2, r1
 466              	.LVL31:
 467 008e D964     		str	r1, [r3, #76]
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 468              		.loc 1 394 0
 469 0090 0020     		movs	r0, #0
 470              	.LVL32:
 429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 471              		.loc 1 429 0
 472 0092 7047     		bx	lr
 473              	.LVL33:
 474              	.L44:
 430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRG, GPIONumber);
 475              		.loc 1 433 0
 476 0094 0B4B     		ldr	r3, .L47
 477 0096 1A6D     		ldr	r2, [r3, #80]
 478 0098 0A43     		orrs	r2, r2, r1
 479 009a 1A65     		str	r2, [r3, #80]
 434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, GPIONumber);
 480              		.loc 1 434 0
 481 009c 5A6D     		ldr	r2, [r3, #84]
 482 009e 22EA0101 		bic	r1, r2, r1
 483              	.LVL34:
 484 00a2 5965     		str	r1, [r3, #84]
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 485              		.loc 1 394 0
 486 00a4 0020     		movs	r0, #0
 487              	.LVL35:
 435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 488              		.loc 1 435 0
 489 00a6 7047     		bx	lr
 490              	.LVL36:
 491              	.L45:
 436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 492              		.loc 1 438 0
 493 00a8 064B     		ldr	r3, .L47
 494 00aa 9A6D     		ldr	r2, [r3, #88]
 495 00ac 01F00301 		and	r1, r1, #3
 496              	.LVL37:
 497 00b0 0A43     		orrs	r2, r2, r1
 498 00b2 9A65     		str	r2, [r3, #88]
 439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx)
 440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, ((GPIONumber & PWR_PORTH_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_3))));
 441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #else
 442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 499              		.loc 1 442 0
 500 00b4 DA6D     		ldr	r2, [r3, #92]
 501 00b6 22EA0101 		bic	r1, r2, r1
 502 00ba D965     		str	r1, [r3, #92]
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 503              		.loc 1 394 0
 504 00bc 0020     		movs	r0, #0
 505              	.LVL38:
 443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 506              		.loc 1 444 0
 507 00be 7047     		bx	lr
 508              	.LVL39:
 509              	.L46:
 445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
 447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     default:
 452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 510              		.loc 1 452 0
 511 00c0 0120     		movs	r0, #1
 512              	.LVL40:
 453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       break;
 454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   return status;
 457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 513              		.loc 1 457 0
 514 00c2 7047     		bx	lr
 515              	.L48:
 516              		.align	2
 517              	.L47:
 518 00c4 00700040 		.word	1073770496
 519              		.cfi_endproc
 520              	.LFE325:
 522              		.section	.text.HAL_PWREx_DisableGPIOPullUp,"ax",%progbits
 523              		.align	1
 524              		.global	HAL_PWREx_DisableGPIOPullUp
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 528              		.fpu fpv4-sp-d16
 530              	HAL_PWREx_DisableGPIOPullUp:
 531              	.LFB326:
 458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-up state in Standby mode and Shutdown modes.
 462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PUy bits of PWR_PUCRx register used to configure the I/O
 463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        in pull-up state in Standby and Shutdown modes.
 464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to reset is reserved, the other PUy bits entered as input
 465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
 466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO Specifies the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H
 467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *          (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber Specify the I/O pins numbers.
 469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
 472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 532              		.loc 1 476 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL41:
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 538              		.loc 1 482 0
 539 0000 0728     		cmp	r0, #7
 540 0002 41D8     		bhi	.L60
 541 0004 DFE800F0 		tbb	[pc, r0]
 542              	.L52:
 543 0008 04       		.byte	(.L51-.L52)/2
 544 0009 0D       		.byte	(.L53-.L52)/2
 545 000a 14       		.byte	(.L54-.L52)/2
 546 000b 1B       		.byte	(.L55-.L52)/2
 547 000c 22       		.byte	(.L56-.L52)/2
 548 000d 29       		.byte	(.L57-.L52)/2
 549 000e 30       		.byte	(.L58-.L52)/2
 550 000f 37       		.byte	(.L59-.L52)/2
 551              		.p2align 1
 552              	.L51:
 483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 553              		.loc 1 485 0
 554 0010 1E4A     		ldr	r2, .L61
 555 0012 136A     		ldr	r3, [r2, #32]
 556 0014 21F48041 		bic	r1, r1, #16384
 557              	.LVL42:
 558 0018 23EA0101 		bic	r1, r3, r1
 559 001c 1162     		str	r1, [r2, #32]
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 560              		.loc 1 477 0
 561 001e 0020     		movs	r0, #0
 562              	.LVL43:
 486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 563              		.loc 1 486 0
 564 0020 7047     		bx	lr
 565              	.LVL44:
 566              	.L53:
 487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 567              		.loc 1 488 0
 568 0022 1A4A     		ldr	r2, .L61
 569 0024 936A     		ldr	r3, [r2, #40]
 570 0026 23EA0101 		bic	r1, r3, r1
 571              	.LVL45:
 572 002a 9162     		str	r1, [r2, #40]
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 573              		.loc 1 477 0
 574 002c 0020     		movs	r0, #0
 575              	.LVL46:
 489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 576              		.loc 1 489 0
 577 002e 7047     		bx	lr
 578              	.LVL47:
 579              	.L54:
 490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 580              		.loc 1 491 0
 581 0030 164A     		ldr	r2, .L61
 582 0032 136B     		ldr	r3, [r2, #48]
 583 0034 23EA0101 		bic	r1, r3, r1
 584              	.LVL48:
 585 0038 1163     		str	r1, [r2, #48]
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 586              		.loc 1 477 0
 587 003a 0020     		movs	r0, #0
 588              	.LVL49:
 492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 589              		.loc 1 492 0
 590 003c 7047     		bx	lr
 591              	.LVL50:
 592              	.L55:
 493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 593              		.loc 1 495 0
 594 003e 134A     		ldr	r2, .L61
 595 0040 936B     		ldr	r3, [r2, #56]
 596 0042 23EA0101 		bic	r1, r3, r1
 597              	.LVL51:
 598 0046 9163     		str	r1, [r2, #56]
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 599              		.loc 1 477 0
 600 0048 0020     		movs	r0, #0
 601              	.LVL52:
 496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 602              		.loc 1 496 0
 603 004a 7047     		bx	lr
 604              	.LVL53:
 605              	.L56:
 497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 606              		.loc 1 500 0
 607 004c 0F4A     		ldr	r2, .L61
 608 004e 136C     		ldr	r3, [r2, #64]
 609 0050 23EA0101 		bic	r1, r3, r1
 610              	.LVL54:
 611 0054 1164     		str	r1, [r2, #64]
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 612              		.loc 1 477 0
 613 0056 0020     		movs	r0, #0
 614              	.LVL55:
 501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 615              		.loc 1 501 0
 616 0058 7047     		bx	lr
 617              	.LVL56:
 618              	.L57:
 502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF)
 504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, GPIONumber);
 619              		.loc 1 505 0
 620 005a 0C4A     		ldr	r2, .L61
 621 005c 936C     		ldr	r3, [r2, #72]
 622 005e 23EA0101 		bic	r1, r3, r1
 623              	.LVL57:
 624 0062 9164     		str	r1, [r2, #72]
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 625              		.loc 1 477 0
 626 0064 0020     		movs	r0, #0
 627              	.LVL58:
 506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 628              		.loc 1 506 0
 629 0066 7047     		bx	lr
 630              	.LVL59:
 631              	.L58:
 507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, GPIONumber);
 632              		.loc 1 510 0
 633 0068 084A     		ldr	r2, .L61
 634 006a 136D     		ldr	r3, [r2, #80]
 635 006c 23EA0101 		bic	r1, r3, r1
 636              	.LVL60:
 637 0070 1165     		str	r1, [r2, #80]
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 638              		.loc 1 477 0
 639 0072 0020     		movs	r0, #0
 640              	.LVL61:
 511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 641              		.loc 1 511 0
 642 0074 7047     		bx	lr
 643              	.LVL62:
 644              	.L59:
 512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 645              		.loc 1 514 0
 646 0076 054A     		ldr	r2, .L61
 647 0078 936D     		ldr	r3, [r2, #88]
 648 007a 01F00301 		and	r1, r1, #3
 649              	.LVL63:
 650 007e 23EA0101 		bic	r1, r3, r1
 651 0082 9165     		str	r1, [r2, #88]
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 652              		.loc 1 477 0
 653 0084 0020     		movs	r0, #0
 654              	.LVL64:
 515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 655              		.loc 1 515 0
 656 0086 7047     		bx	lr
 657              	.LVL65:
 658              	.L60:
 516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
 518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     default:
 522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        status = HAL_ERROR;
 659              		.loc 1 522 0
 660 0088 0120     		movs	r0, #1
 661              	.LVL66:
 523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   return status;
 527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 662              		.loc 1 527 0
 663 008a 7047     		bx	lr
 664              	.L62:
 665              		.align	2
 666              	.L61:
 667 008c 00700040 		.word	1073770496
 668              		.cfi_endproc
 669              	.LFE326:
 671              		.section	.text.HAL_PWREx_EnableGPIOPullDown,"ax",%progbits
 672              		.align	1
 673              		.global	HAL_PWREx_EnableGPIOPullDown
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv4-sp-d16
 679              	HAL_PWREx_EnableGPIOPullDown:
 680              	.LFB327:
 528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-down state in Standby and Shutdown modes.
 533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Set the relevant PDy bits of PWR_PDCRx register to configure the I/O in
 534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        pull-down state in Standby and Shutdown modes.
 535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
 539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        PUy bit of PWR_PUCRx register is cleared unless it is reserved.
 541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to set is reserved, the other PDy bits entered as input
 542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO Specify the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H
 544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber Specify the I/O pins numbers.
 546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
 549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 681              		.loc 1 553 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686              	.LVL67:
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 687              		.loc 1 559 0
 688 0000 0728     		cmp	r0, #7
 689 0002 5DD8     		bhi	.L74
 690 0004 DFE800F0 		tbb	[pc, r0]
 691              	.L66:
 692 0008 04       		.byte	(.L65-.L66)/2
 693 0009 12       		.byte	(.L67-.L66)/2
 694 000a 1E       		.byte	(.L68-.L66)/2
 695 000b 28       		.byte	(.L69-.L66)/2
 696 000c 32       		.byte	(.L70-.L66)/2
 697 000d 3C       		.byte	(.L71-.L66)/2
 698 000e 46       		.byte	(.L72-.L66)/2
 699 000f 50       		.byte	(.L73-.L66)/2
 700              		.p2align 1
 701              	.L65:
 560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 702              		.loc 1 562 0
 703 0010 2C4B     		ldr	r3, .L75
 704 0012 5A6A     		ldr	r2, [r3, #36]
 705 0014 21F42040 		bic	r0, r1, #40960
 706              	.LVL68:
 707 0018 0243     		orrs	r2, r2, r0
 708 001a 5A62     		str	r2, [r3, #36]
 563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 709              		.loc 1 563 0
 710 001c 1A6A     		ldr	r2, [r3, #32]
 711 001e 21F48041 		bic	r1, r1, #16384
 712              	.LVL69:
 713 0022 22EA0101 		bic	r1, r2, r1
 714 0026 1962     		str	r1, [r3, #32]
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 715              		.loc 1 554 0
 716 0028 0020     		movs	r0, #0
 564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 717              		.loc 1 564 0
 718 002a 7047     		bx	lr
 719              	.LVL70:
 720              	.L67:
 565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 721              		.loc 1 566 0
 722 002c 254B     		ldr	r3, .L75
 723 002e DA6A     		ldr	r2, [r3, #44]
 724 0030 21F01000 		bic	r0, r1, #16
 725              	.LVL71:
 726 0034 0243     		orrs	r2, r2, r0
 727 0036 DA62     		str	r2, [r3, #44]
 567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 728              		.loc 1 567 0
 729 0038 9A6A     		ldr	r2, [r3, #40]
 730 003a 22EA0101 		bic	r1, r2, r1
 731              	.LVL72:
 732 003e 9962     		str	r1, [r3, #40]
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 733              		.loc 1 554 0
 734 0040 0020     		movs	r0, #0
 568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 735              		.loc 1 568 0
 736 0042 7047     		bx	lr
 737              	.LVL73:
 738              	.L68:
 569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRC, GPIONumber);
 739              		.loc 1 570 0
 740 0044 1F4B     		ldr	r3, .L75
 741 0046 5A6B     		ldr	r2, [r3, #52]
 742 0048 0A43     		orrs	r2, r2, r1
 743 004a 5A63     		str	r2, [r3, #52]
 571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 744              		.loc 1 571 0
 745 004c 1A6B     		ldr	r2, [r3, #48]
 746 004e 22EA0101 		bic	r1, r2, r1
 747              	.LVL74:
 748 0052 1963     		str	r1, [r3, #48]
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 749              		.loc 1 554 0
 750 0054 0020     		movs	r0, #0
 751              	.LVL75:
 572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 752              		.loc 1 572 0
 753 0056 7047     		bx	lr
 754              	.LVL76:
 755              	.L69:
 573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRD, GPIONumber);
 756              		.loc 1 575 0
 757 0058 1A4B     		ldr	r3, .L75
 758 005a DA6B     		ldr	r2, [r3, #60]
 759 005c 0A43     		orrs	r2, r2, r1
 760 005e DA63     		str	r2, [r3, #60]
 576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 761              		.loc 1 576 0
 762 0060 9A6B     		ldr	r2, [r3, #56]
 763 0062 22EA0101 		bic	r1, r2, r1
 764              	.LVL77:
 765 0066 9963     		str	r1, [r3, #56]
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 766              		.loc 1 554 0
 767 0068 0020     		movs	r0, #0
 768              	.LVL78:
 577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 769              		.loc 1 577 0
 770 006a 7047     		bx	lr
 771              	.LVL79:
 772              	.L70:
 578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRE, GPIONumber);
 773              		.loc 1 581 0
 774 006c 154B     		ldr	r3, .L75
 775 006e 5A6C     		ldr	r2, [r3, #68]
 776 0070 0A43     		orrs	r2, r2, r1
 777 0072 5A64     		str	r2, [r3, #68]
 582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 778              		.loc 1 582 0
 779 0074 1A6C     		ldr	r2, [r3, #64]
 780 0076 22EA0101 		bic	r1, r2, r1
 781              	.LVL80:
 782 007a 1964     		str	r1, [r3, #64]
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 783              		.loc 1 554 0
 784 007c 0020     		movs	r0, #0
 785              	.LVL81:
 583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 786              		.loc 1 583 0
 787 007e 7047     		bx	lr
 788              	.LVL82:
 789              	.L71:
 584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF)
 586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRF, GPIONumber);
 790              		.loc 1 587 0
 791 0080 104B     		ldr	r3, .L75
 792 0082 DA6C     		ldr	r2, [r3, #76]
 793 0084 0A43     		orrs	r2, r2, r1
 794 0086 DA64     		str	r2, [r3, #76]
 588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, GPIONumber);
 795              		.loc 1 588 0
 796 0088 9A6C     		ldr	r2, [r3, #72]
 797 008a 22EA0101 		bic	r1, r2, r1
 798              	.LVL83:
 799 008e 9964     		str	r1, [r3, #72]
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 800              		.loc 1 554 0
 801 0090 0020     		movs	r0, #0
 802              	.LVL84:
 589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 803              		.loc 1 589 0
 804 0092 7047     		bx	lr
 805              	.LVL85:
 806              	.L72:
 590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRG, GPIONumber);
 807              		.loc 1 593 0
 808 0094 0B4B     		ldr	r3, .L75
 809 0096 5A6D     		ldr	r2, [r3, #84]
 810 0098 0A43     		orrs	r2, r2, r1
 811 009a 5A65     		str	r2, [r3, #84]
 594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, GPIONumber);
 812              		.loc 1 594 0
 813 009c 1A6D     		ldr	r2, [r3, #80]
 814 009e 22EA0101 		bic	r1, r2, r1
 815              	.LVL86:
 816 00a2 1965     		str	r1, [r3, #80]
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 817              		.loc 1 554 0
 818 00a4 0020     		movs	r0, #0
 819              	.LVL87:
 595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 820              		.loc 1 595 0
 821 00a6 7047     		bx	lr
 822              	.LVL88:
 823              	.L73:
 596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx)
 599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRH, ((GPIONumber & PWR_PORTH_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_3))));
 600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #else
 601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 824              		.loc 1 601 0
 825 00a8 064B     		ldr	r3, .L75
 826 00aa DA6D     		ldr	r2, [r3, #92]
 827 00ac 01F00301 		and	r1, r1, #3
 828              	.LVL89:
 829 00b0 0A43     		orrs	r2, r2, r1
 830 00b2 DA65     		str	r2, [r3, #92]
 602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 831              		.loc 1 603 0
 832 00b4 9A6D     		ldr	r2, [r3, #88]
 833 00b6 22EA0101 		bic	r1, r2, r1
 834 00ba 9965     		str	r1, [r3, #88]
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 835              		.loc 1 554 0
 836 00bc 0020     		movs	r0, #0
 837              	.LVL90:
 604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 838              		.loc 1 604 0
 839 00be 7047     		bx	lr
 840              	.LVL91:
 841              	.L74:
 605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
 607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     default:
 612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 842              		.loc 1 612 0
 843 00c0 0120     		movs	r0, #1
 844              	.LVL92:
 613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       break;
 614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   return status;
 617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 845              		.loc 1 617 0
 846 00c2 7047     		bx	lr
 847              	.L76:
 848              		.align	2
 849              	.L75:
 850 00c4 00700040 		.word	1073770496
 851              		.cfi_endproc
 852              	.LFE327:
 854              		.section	.text.HAL_PWREx_DisableGPIOPullDown,"ax",%progbits
 855              		.align	1
 856              		.global	HAL_PWREx_DisableGPIOPullDown
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	HAL_PWREx_DisableGPIOPullDown:
 863              	.LFB328:
 618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-down state in Standby and Shutdown modes.
 622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PDy bits of PWR_PDCRx register used to configure the I/O
 623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        in pull-down state in Standby and Shutdown modes.
 624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to reset is reserved, the other PDy bits entered as input
 625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
 626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO Specifies the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H
 627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber Specify the I/O pins numbers.
 629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
 632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 864              		.loc 1 636 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869              	.LVL93:
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 870              		.loc 1 642 0
 871 0000 0728     		cmp	r0, #7
 872 0002 43D8     		bhi	.L88
 873 0004 DFE800F0 		tbb	[pc, r0]
 874              	.L80:
 875 0008 04       		.byte	(.L79-.L80)/2
 876 0009 0D       		.byte	(.L81-.L80)/2
 877 000a 16       		.byte	(.L82-.L80)/2
 878 000b 1D       		.byte	(.L83-.L80)/2
 879 000c 24       		.byte	(.L84-.L80)/2
 880 000d 2B       		.byte	(.L85-.L80)/2
 881 000e 32       		.byte	(.L86-.L80)/2
 882 000f 39       		.byte	(.L87-.L80)/2
 883              		.p2align 1
 884              	.L79:
 643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 885              		.loc 1 645 0
 886 0010 1F4A     		ldr	r2, .L89
 887 0012 536A     		ldr	r3, [r2, #36]
 888 0014 21F42041 		bic	r1, r1, #40960
 889              	.LVL94:
 890 0018 23EA0101 		bic	r1, r3, r1
 891 001c 5162     		str	r1, [r2, #36]
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 892              		.loc 1 637 0
 893 001e 0020     		movs	r0, #0
 894              	.LVL95:
 646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 895              		.loc 1 646 0
 896 0020 7047     		bx	lr
 897              	.LVL96:
 898              	.L81:
 647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 899              		.loc 1 648 0
 900 0022 1B4A     		ldr	r2, .L89
 901 0024 D36A     		ldr	r3, [r2, #44]
 902 0026 21F01001 		bic	r1, r1, #16
 903              	.LVL97:
 904 002a 23EA0101 		bic	r1, r3, r1
 905 002e D162     		str	r1, [r2, #44]
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 906              		.loc 1 637 0
 907 0030 0020     		movs	r0, #0
 908              	.LVL98:
 649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 909              		.loc 1 649 0
 910 0032 7047     		bx	lr
 911              	.LVL99:
 912              	.L82:
 650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 913              		.loc 1 651 0
 914 0034 164A     		ldr	r2, .L89
 915 0036 536B     		ldr	r3, [r2, #52]
 916 0038 23EA0101 		bic	r1, r3, r1
 917              	.LVL100:
 918 003c 5163     		str	r1, [r2, #52]
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 919              		.loc 1 637 0
 920 003e 0020     		movs	r0, #0
 921              	.LVL101:
 652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 922              		.loc 1 652 0
 923 0040 7047     		bx	lr
 924              	.LVL102:
 925              	.L83:
 653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 926              		.loc 1 655 0
 927 0042 134A     		ldr	r2, .L89
 928 0044 D36B     		ldr	r3, [r2, #60]
 929 0046 23EA0101 		bic	r1, r3, r1
 930              	.LVL103:
 931 004a D163     		str	r1, [r2, #60]
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 932              		.loc 1 637 0
 933 004c 0020     		movs	r0, #0
 934              	.LVL104:
 656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 935              		.loc 1 656 0
 936 004e 7047     		bx	lr
 937              	.LVL105:
 938              	.L84:
 657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 939              		.loc 1 660 0
 940 0050 0F4A     		ldr	r2, .L89
 941 0052 536C     		ldr	r3, [r2, #68]
 942 0054 23EA0101 		bic	r1, r3, r1
 943              	.LVL106:
 944 0058 5164     		str	r1, [r2, #68]
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 945              		.loc 1 637 0
 946 005a 0020     		movs	r0, #0
 947              	.LVL107:
 661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 948              		.loc 1 661 0
 949 005c 7047     		bx	lr
 950              	.LVL108:
 951              	.L85:
 662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF)
 664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, GPIONumber);
 952              		.loc 1 665 0
 953 005e 0C4A     		ldr	r2, .L89
 954 0060 D36C     		ldr	r3, [r2, #76]
 955 0062 23EA0101 		bic	r1, r3, r1
 956              	.LVL109:
 957 0066 D164     		str	r1, [r2, #76]
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 958              		.loc 1 637 0
 959 0068 0020     		movs	r0, #0
 960              	.LVL110:
 666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 961              		.loc 1 666 0
 962 006a 7047     		bx	lr
 963              	.LVL111:
 964              	.L86:
 667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, GPIONumber);
 965              		.loc 1 670 0
 966 006c 084A     		ldr	r2, .L89
 967 006e 536D     		ldr	r3, [r2, #84]
 968 0070 23EA0101 		bic	r1, r3, r1
 969              	.LVL112:
 970 0074 5165     		str	r1, [r2, #84]
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 971              		.loc 1 637 0
 972 0076 0020     		movs	r0, #0
 973              	.LVL113:
 671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 974              		.loc 1 671 0
 975 0078 7047     		bx	lr
 976              	.LVL114:
 977              	.L87:
 672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx)
 675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, ((GPIONumber & PWR_PORTH_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_3))));
 676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #else
 677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 978              		.loc 1 677 0
 979 007a 054A     		ldr	r2, .L89
 980 007c D36D     		ldr	r3, [r2, #92]
 981 007e 01F00301 		and	r1, r1, #3
 982              	.LVL115:
 983 0082 23EA0101 		bic	r1, r3, r1
 984 0086 D165     		str	r1, [r2, #92]
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 985              		.loc 1 637 0
 986 0088 0020     		movs	r0, #0
 987              	.LVL116:
 678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 988              		.loc 1 679 0
 989 008a 7047     		bx	lr
 990              	.LVL117:
 991              	.L88:
 680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
 682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****        break;
 684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
 685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     default:
 686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 992              		.loc 1 686 0
 993 008c 0120     		movs	r0, #1
 994              	.LVL118:
 687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       break;
 688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   return status;
 691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 995              		.loc 1 691 0
 996 008e 7047     		bx	lr
 997              	.L90:
 998              		.align	2
 999              	.L89:
 1000 0090 00700040 		.word	1073770496
 1001              		.cfi_endproc
 1002              	.LFE328:
 1004              		.section	.text.HAL_PWREx_EnablePullUpPullDownConfig,"ax",%progbits
 1005              		.align	1
 1006              		.global	HAL_PWREx_EnablePullUpPullDownConfig
 1007              		.syntax unified
 1008              		.thumb
 1009              		.thumb_func
 1010              		.fpu fpv4-sp-d16
 1012              	HAL_PWREx_EnablePullUpPullDownConfig:
 1013              	.LFB329:
 692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable pull-up and pull-down configuration.
 697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  When APC bit is set, the I/O pull-up and pull-down configurations defined in
 698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are applied in Standby and Shutdown modes.
 699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Pull-up set by PUy bit of PWR_PUCRx register is not activated if the corresponding
 700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is also set (pull-down configuration priority is higher).
 701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() API's ensure there
 702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        is no conflict when setting PUy or PDy bit.
 703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePullUpPullDownConfig(void)
 706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1014              		.loc 1 706 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 0
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 1018              		@ link register save eliminated.
 707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_APC);
 1019              		.loc 1 707 0
 1020 0000 024A     		ldr	r2, .L92
 1021 0002 9368     		ldr	r3, [r2, #8]
 1022 0004 43F48063 		orr	r3, r3, #1024
 1023 0008 9360     		str	r3, [r2, #8]
 708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1024              		.loc 1 708 0
 1025 000a 7047     		bx	lr
 1026              	.L93:
 1027              		.align	2
 1028              	.L92:
 1029 000c 00700040 		.word	1073770496
 1030              		.cfi_endproc
 1031              	.LFE329:
 1033              		.section	.text.HAL_PWREx_DisablePullUpPullDownConfig,"ax",%progbits
 1034              		.align	1
 1035              		.global	HAL_PWREx_DisablePullUpPullDownConfig
 1036              		.syntax unified
 1037              		.thumb
 1038              		.thumb_func
 1039              		.fpu fpv4-sp-d16
 1041              	HAL_PWREx_DisablePullUpPullDownConfig:
 1042              	.LFB330:
 709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable pull-up and pull-down configuration.
 713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  When APC bit is cleared, the I/O pull-up and pull-down configurations defined in
 714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are not applied in Standby and Shutdown modes.
 715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePullUpPullDownConfig(void)
 718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1043              		.loc 1 718 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 0
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047              		@ link register save eliminated.
 719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_APC);
 1048              		.loc 1 719 0
 1049 0000 024A     		ldr	r2, .L95
 1050 0002 9368     		ldr	r3, [r2, #8]
 1051 0004 23F48063 		bic	r3, r3, #1024
 1052 0008 9360     		str	r3, [r2, #8]
 720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1053              		.loc 1 720 0
 1054 000a 7047     		bx	lr
 1055              	.L96:
 1056              		.align	2
 1057              	.L95:
 1058 000c 00700040 		.word	1073770496
 1059              		.cfi_endproc
 1060              	.LFE330:
 1062              		.section	.text.HAL_PWREx_SetSRAM2ContentRetention,"ax",%progbits
 1063              		.align	1
 1064              		.global	HAL_PWREx_SetSRAM2ContentRetention
 1065              		.syntax unified
 1066              		.thumb
 1067              		.thumb_func
 1068              		.fpu fpv4-sp-d16
 1070              	HAL_PWREx_SetSRAM2ContentRetention:
 1071              	.LFB333:
 721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable Full SRAM2 content retention in Standby mode.
 726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAM2ContentRetention(void)
 729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   (void) HAL_PWREx_SetSRAM2ContentRetention(PWR_FULL_SRAM2_RETENTION);
 731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable SRAM2 content retention in Standby mode.
 735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAM2ContentRetention(void)
 738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   (void) HAL_PWREx_SetSRAM2ContentRetention(PWR_NO_SRAM2_RETENTION);
 740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable SRAM2 content retention in Standby mode.
 744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param  SRAM2Size: specifies the SRAM2 size kept in Standby mode
 745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_NO_SRAM2_RETENTION        SRAM2 is powered off in Standby mode (SRAM2 
 747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_FULL_SRAM2_RETENTION      Full SRAM2 is powered by the low-power regul
 748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_4KBYTES_SRAM2_RETENTION   Only 4 Kbytes of SRAM2 is powered by the low
 749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  PWR_4KBYTES_SRAM2_RETENTION parameter is not available on all devices
 750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_SetSRAM2ContentRetention(uint32_t SRAM2Size)
 753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1072              		.loc 1 753 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 1077              	.LVL119:
 754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_SRAM2_RETENTION(SRAM2Size));
 755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if (SRAM2Size == PWR_NO_SRAM2_RETENTION)
 1078              		.loc 1 756 0
 1079 0000 20B1     		cbz	r0, .L101
 757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     CLEAR_BIT(PWR->CR3, PWR_CR3_RRS);
 759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   else if (SRAM2Size == PWR_FULL_SRAM2_RETENTION)
 1080              		.loc 1 760 0
 1081 0002 B0F5807F 		cmp	r0, #256
 1082 0006 07D0     		beq	.L102
 761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     MODIFY_REG(PWR->CR3, PWR_CR3_RRS, PWR_FULL_SRAM2_RETENTION);
 763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_RRS_1)
 765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   else if (SRAM2Size == PWR_4KBYTES_SRAM2_RETENTION)
 766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     MODIFY_REG(PWR->CR3, PWR_CR3_RRS, PWR_4KBYTES_SRAM2_RETENTION);
 768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR3_RRS_1 */
 770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   else {
 771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     return HAL_ERROR;
 1083              		.loc 1 771 0
 1084 0008 0120     		movs	r0, #1
 1085              	.LVL120:
 772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1086              		.loc 1 775 0
 1087 000a 7047     		bx	lr
 1088              	.LVL121:
 1089              	.L101:
 758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 1090              		.loc 1 758 0
 1091 000c 064A     		ldr	r2, .L103
 1092 000e 9368     		ldr	r3, [r2, #8]
 1093 0010 23F48073 		bic	r3, r3, #256
 1094 0014 9360     		str	r3, [r2, #8]
 1095 0016 7047     		bx	lr
 1096              	.L102:
 762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 1097              		.loc 1 762 0
 1098 0018 034A     		ldr	r2, .L103
 1099 001a 9368     		ldr	r3, [r2, #8]
 1100 001c 43F48073 		orr	r3, r3, #256
 1101 0020 9360     		str	r3, [r2, #8]
 774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1102              		.loc 1 774 0
 1103 0022 0020     		movs	r0, #0
 1104              	.LVL122:
 1105 0024 7047     		bx	lr
 1106              	.L104:
 1107 0026 00BF     		.align	2
 1108              	.L103:
 1109 0028 00700040 		.word	1073770496
 1110              		.cfi_endproc
 1111              	.LFE333:
 1113              		.section	.text.HAL_PWREx_EnableSRAM2ContentRetention,"ax",%progbits
 1114              		.align	1
 1115              		.global	HAL_PWREx_EnableSRAM2ContentRetention
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1119              		.fpu fpv4-sp-d16
 1121              	HAL_PWREx_EnableSRAM2ContentRetention:
 1122              	.LFB331:
 729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   (void) HAL_PWREx_SetSRAM2ContentRetention(PWR_FULL_SRAM2_RETENTION);
 1123              		.loc 1 729 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 0
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 1127 0000 08B5     		push	{r3, lr}
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 3, -8
 1130              		.cfi_offset 14, -4
 730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1131              		.loc 1 730 0
 1132 0002 4FF48070 		mov	r0, #256
 1133 0006 FFF7FEFF 		bl	HAL_PWREx_SetSRAM2ContentRetention
 1134              	.LVL123:
 731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 1135              		.loc 1 731 0
 1136 000a 08BD     		pop	{r3, pc}
 1137              		.cfi_endproc
 1138              	.LFE331:
 1140              		.section	.text.HAL_PWREx_DisableSRAM2ContentRetention,"ax",%progbits
 1141              		.align	1
 1142              		.global	HAL_PWREx_DisableSRAM2ContentRetention
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu fpv4-sp-d16
 1148              	HAL_PWREx_DisableSRAM2ContentRetention:
 1149              	.LFB332:
 738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   (void) HAL_PWREx_SetSRAM2ContentRetention(PWR_NO_SRAM2_RETENTION);
 1150              		.loc 1 738 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154 0000 08B5     		push	{r3, lr}
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 3, -8
 1157              		.cfi_offset 14, -4
 739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1158              		.loc 1 739 0
 1159 0002 0020     		movs	r0, #0
 1160 0004 FFF7FEFF 		bl	HAL_PWREx_SetSRAM2ContentRetention
 1161              	.LVL124:
 740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 1162              		.loc 1 740 0
 1163 0008 08BD     		pop	{r3, pc}
 1164              		.cfi_endproc
 1165              	.LFE332:
 1167              		.section	.text.HAL_PWREx_EnablePVM2,"ax",%progbits
 1168              		.align	1
 1169              		.global	HAL_PWREx_EnablePVM2
 1170              		.syntax unified
 1171              		.thumb
 1172              		.thumb_func
 1173              		.fpu fpv4-sp-d16
 1175              	HAL_PWREx_EnablePVM2:
 1176              	.LFB334:
 776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_ENULP)
 779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable Ultra Low Power BORL, BORH and PVD for STOP2 and Standby modes.
 781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  All the other modes are not affected by this bit.
 782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableBORPVD_ULP(void)
 785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_ENULP);
 787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable Ultra Low Power BORL, BORH and PVD for STOP2 and Standby modes.
 792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  All the other modes are not affected by this bit
 793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBORPVD_ULP(void)
 796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_ENULP);
 798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR3_ENULP */
 800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR4_EXT_SMPS_ON)
 803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the CFLDO working @ 0.95V.
 805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  When external SMPS is used & CFLDO operating in Range 2, the regulated voltage of the
 806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        internal CFLDO can be reduced to 0.95V.
 807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableExtSMPS_0V95(void)
 810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR4, PWR_CR4_EXT_SMPS_ON);
 812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the CFLDO working @ 0.95V
 816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Before SMPS is switched off, the regulated voltage of the
 817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        internal CFLDO shall be set to 1.00V.
 818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        1.00V. is also default operating Range 2 voltage.
 819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableExtSMPS_0V95(void)
 822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR4, PWR_CR4_EXT_SMPS_ON);
 824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR4_EXT_SMPS_ON */
 826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR1_RRSTP)
 829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable SRAM3 content retention in Stop 2 mode.
 831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRSTP bit is set, SRAM3 is powered by the low-power regulator in
 832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        Stop 2 mode and its content is kept.
 833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAM3ContentRetention(void)
 836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_RRSTP);
 838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable SRAM3 content retention in Stop 2 mode.
 843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRSTP bit is reset, SRAM3 is powered off in Stop 2 mode
 844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        and its content is lost.
 845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAM3ContentRetention(void)
 848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_RRSTP);
 850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR1_RRSTP */
 852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_DSIPDEN)
 854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable pull-down activation on DSI pins.
 856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableDSIPinsPDActivation(void)
 859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_DSIPDEN);
 861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable pull-down activation on DSI pins.
 866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableDSIPinsPDActivation(void)
 869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_DSIPDEN);
 871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR3_DSIPDEN */
 873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
 875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 1: VDDUSB versus 1.2V.
 877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM1(void)
 880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_1);
 882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 1: VDDUSB versus 1.2V.
 886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM1(void)
 889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_1);
 891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
 893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
 896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 2: VDDIO2 versus 0.9V.
 898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM2(void)
 901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1177              		.loc 1 901 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_2);
 1182              		.loc 1 902 0
 1183 0000 024A     		ldr	r2, .L110
 1184 0002 5368     		ldr	r3, [r2, #4]
 1185 0004 43F02003 		orr	r3, r3, #32
 1186 0008 5360     		str	r3, [r2, #4]
 903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1187              		.loc 1 903 0
 1188 000a 7047     		bx	lr
 1189              	.L111:
 1190              		.align	2
 1191              	.L110:
 1192 000c 00700040 		.word	1073770496
 1193              		.cfi_endproc
 1194              	.LFE334:
 1196              		.section	.text.HAL_PWREx_DisablePVM2,"ax",%progbits
 1197              		.align	1
 1198              		.global	HAL_PWREx_DisablePVM2
 1199              		.syntax unified
 1200              		.thumb
 1201              		.thumb_func
 1202              		.fpu fpv4-sp-d16
 1204              	HAL_PWREx_DisablePVM2:
 1205              	.LFB335:
 904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 2: VDDIO2 versus 0.9V.
 907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM2(void)
 910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1206              		.loc 1 910 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_2);
 1211              		.loc 1 911 0
 1212 0000 024A     		ldr	r2, .L113
 1213 0002 5368     		ldr	r3, [r2, #4]
 1214 0004 23F02003 		bic	r3, r3, #32
 1215 0008 5360     		str	r3, [r2, #4]
 912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1216              		.loc 1 912 0
 1217 000a 7047     		bx	lr
 1218              	.L114:
 1219              		.align	2
 1220              	.L113:
 1221 000c 00700040 		.word	1073770496
 1222              		.cfi_endproc
 1223              	.LFE335:
 1225              		.section	.text.HAL_PWREx_EnablePVM3,"ax",%progbits
 1226              		.align	1
 1227              		.global	HAL_PWREx_EnablePVM3
 1228              		.syntax unified
 1229              		.thumb
 1230              		.thumb_func
 1231              		.fpu fpv4-sp-d16
 1233              	HAL_PWREx_EnablePVM3:
 1234              	.LFB336:
 913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
 914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM3(void)
 921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1235              		.loc 1 921 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239              		@ link register save eliminated.
 922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_3);
 1240              		.loc 1 922 0
 1241 0000 024A     		ldr	r2, .L116
 1242 0002 5368     		ldr	r3, [r2, #4]
 1243 0004 43F04003 		orr	r3, r3, #64
 1244 0008 5360     		str	r3, [r2, #4]
 923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1245              		.loc 1 923 0
 1246 000a 7047     		bx	lr
 1247              	.L117:
 1248              		.align	2
 1249              	.L116:
 1250 000c 00700040 		.word	1073770496
 1251              		.cfi_endproc
 1252              	.LFE336:
 1254              		.section	.text.HAL_PWREx_DisablePVM3,"ax",%progbits
 1255              		.align	1
 1256              		.global	HAL_PWREx_DisablePVM3
 1257              		.syntax unified
 1258              		.thumb
 1259              		.thumb_func
 1260              		.fpu fpv4-sp-d16
 1262              	HAL_PWREx_DisablePVM3:
 1263              	.LFB337:
 924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM3(void)
 930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1264              		.loc 1 930 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268              		@ link register save eliminated.
 931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_3);
 1269              		.loc 1 931 0
 1270 0000 024A     		ldr	r2, .L119
 1271 0002 5368     		ldr	r3, [r2, #4]
 1272 0004 23F04003 		bic	r3, r3, #64
 1273 0008 5360     		str	r3, [r2, #4]
 932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1274              		.loc 1 932 0
 1275 000a 7047     		bx	lr
 1276              	.L120:
 1277              		.align	2
 1278              	.L119:
 1279 000c 00700040 		.word	1073770496
 1280              		.cfi_endproc
 1281              	.LFE337:
 1283              		.section	.text.HAL_PWREx_EnablePVM4,"ax",%progbits
 1284              		.align	1
 1285              		.global	HAL_PWREx_EnablePVM4
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
 1289              		.fpu fpv4-sp-d16
 1291              	HAL_PWREx_EnablePVM4:
 1292              	.LFB338:
 933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 4:  VDDA versus 2.2V.
 937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM4(void)
 940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1293              		.loc 1 940 0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 1297              		@ link register save eliminated.
 941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_4);
 1298              		.loc 1 941 0
 1299 0000 024A     		ldr	r2, .L122
 1300 0002 5368     		ldr	r3, [r2, #4]
 1301 0004 43F08003 		orr	r3, r3, #128
 1302 0008 5360     		str	r3, [r2, #4]
 942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1303              		.loc 1 942 0
 1304 000a 7047     		bx	lr
 1305              	.L123:
 1306              		.align	2
 1307              	.L122:
 1308 000c 00700040 		.word	1073770496
 1309              		.cfi_endproc
 1310              	.LFE338:
 1312              		.section	.text.HAL_PWREx_DisablePVM4,"ax",%progbits
 1313              		.align	1
 1314              		.global	HAL_PWREx_DisablePVM4
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu fpv4-sp-d16
 1320              	HAL_PWREx_DisablePVM4:
 1321              	.LFB339:
 943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 4:  VDDA versus 2.2V.
 946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM4(void)
 949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1322              		.loc 1 949 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326              		@ link register save eliminated.
 950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_4);
 1327              		.loc 1 950 0
 1328 0000 024A     		ldr	r2, .L125
 1329 0002 5368     		ldr	r3, [r2, #4]
 1330 0004 23F08003 		bic	r3, r3, #128
 1331 0008 5360     		str	r3, [r2, #4]
 951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1332              		.loc 1 951 0
 1333 000a 7047     		bx	lr
 1334              	.L126:
 1335              		.align	2
 1336              	.L125:
 1337 000c 00700040 		.word	1073770496
 1338              		.cfi_endproc
 1339              	.LFE339:
 1341              		.section	.text.HAL_PWREx_ConfigPVM,"ax",%progbits
 1342              		.align	1
 1343              		.global	HAL_PWREx_ConfigPVM
 1344              		.syntax unified
 1345              		.thumb
 1346              		.thumb_func
 1347              		.fpu fpv4-sp-d16
 1349              	HAL_PWREx_ConfigPVM:
 1350              	.LFB340:
 952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
 957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Configure the Peripheral Voltage Monitoring (PVM).
 958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param sConfigPVM: pointer to a PWR_PVMTypeDef structure that contains the
 959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        PVM configuration information.
 960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note The API configures a single PVM according to the information contained
 961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *       in the input structure. To configure several PVMs, the API must be singly
 962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *       called for each PVM used.
 963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         more details about the voltage thresholds corresponding to each
 965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         detection level and to each monitored supply.
 966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL status
 967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
 968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ConfigPVM(PWR_PVMTypeDef *sConfigPVM)
 969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1351              		.loc 1 969 0
 1352              		.cfi_startproc
 1353              		@ args = 0, pretend = 0, frame = 0
 1354              		@ frame_needed = 0, uses_anonymous_args = 0
 1355              		@ link register save eliminated.
 1356              	.LVL125:
 970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
 973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_TYPE(sConfigPVM->PVMType));
 974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_MODE(sConfigPVM->Mode));
 975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Configure EXTI 35 to 38 interrupts if so required:
 978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****      scan thru PVMType to detect which PVMx is set and
 979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****      configure the corresponding EXTI line accordingly. */
 980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   switch (sConfigPVM->PVMType)
 1357              		.loc 1 980 0
 1358 0000 0368     		ldr	r3, [r0]
 1359 0002 402B     		cmp	r3, #64
 1360 0004 3CD0     		beq	.L129
 1361 0006 802B     		cmp	r3, #128
 1362 0008 71D0     		beq	.L130
 1363 000a 202B     		cmp	r3, #32
 1364 000c 01D0     		beq	.L146
 981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
 983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_1:
 984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_EVENT();
 986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_IT();
 987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE();
 988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE();
 989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_IT();
 994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_EVENT();
1000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
1003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
1004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_RISING_EDGE();
1006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
1009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_FALLING_EDGE();
1011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       break;
1013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_2:
1017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
1018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_EVENT();
1019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
1020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE();
1021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
1022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
1024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
1025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_IT();
1027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
1030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
1031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_EVENT();
1033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
1036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
1037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_RISING_EDGE();
1039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
1042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_FALLING_EDGE();
1044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       break;
1046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_3:
1049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
1050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_EVENT();
1051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
1052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE();
1053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
1054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
1056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
1057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_IT();
1059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
1062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
1063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_EVENT();
1065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
1068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
1069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_RISING_EDGE();
1071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
1074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_FALLING_EDGE();
1076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       break;
1078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_4:
1080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
1081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_EVENT();
1082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_IT();
1083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE();
1084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE();
1085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
1087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
1088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_IT();
1090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
1093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
1094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_EVENT();
1096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
1099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
1100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_RISING_EDGE();
1102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
1105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
1106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_FALLING_EDGE();
1107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
1108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       break;
1109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     default:
1111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 1365              		.loc 1 1111 0
 1366 000e 0120     		movs	r0, #1
 1367              	.LVL126:
 1368 0010 7047     		bx	lr
 1369              	.LVL127:
 1370              	.L146:
1018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
 1371              		.loc 1 1018 0
 1372 0012 554B     		ldr	r3, .L147
 1373 0014 5A6A     		ldr	r2, [r3, #36]
 1374 0016 22F01002 		bic	r2, r2, #16
 1375 001a 5A62     		str	r2, [r3, #36]
1019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE();
 1376              		.loc 1 1019 0
 1377 001c 1A6A     		ldr	r2, [r3, #32]
 1378 001e 22F01002 		bic	r2, r2, #16
 1379 0022 1A62     		str	r2, [r3, #32]
1020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
 1380              		.loc 1 1020 0
 1381 0024 DA6A     		ldr	r2, [r3, #44]
 1382 0026 22F01002 		bic	r2, r2, #16
 1383 002a DA62     		str	r2, [r3, #44]
1021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 1384              		.loc 1 1021 0
 1385 002c 9A6A     		ldr	r2, [r3, #40]
 1386 002e 22F01002 		bic	r2, r2, #16
 1387 0032 9A62     		str	r2, [r3, #40]
1024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1388              		.loc 1 1024 0
 1389 0034 4368     		ldr	r3, [r0, #4]
 1390 0036 13F4803F 		tst	r3, #65536
 1391 003a 04D0     		beq	.L132
1026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1392              		.loc 1 1026 0
 1393 003c 4A4A     		ldr	r2, .L147
 1394 003e 136A     		ldr	r3, [r2, #32]
 1395 0040 43F01003 		orr	r3, r3, #16
 1396 0044 1362     		str	r3, [r2, #32]
 1397              	.L132:
1030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1398              		.loc 1 1030 0
 1399 0046 4368     		ldr	r3, [r0, #4]
 1400 0048 13F4003F 		tst	r3, #131072
 1401 004c 04D0     		beq	.L133
1032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1402              		.loc 1 1032 0
 1403 004e 464A     		ldr	r2, .L147
 1404 0050 536A     		ldr	r3, [r2, #36]
 1405 0052 43F01003 		orr	r3, r3, #16
 1406 0056 5362     		str	r3, [r2, #36]
 1407              	.L133:
1036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1408              		.loc 1 1036 0
 1409 0058 4368     		ldr	r3, [r0, #4]
 1410 005a 13F0010F 		tst	r3, #1
 1411 005e 04D0     		beq	.L134
1038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1412              		.loc 1 1038 0
 1413 0060 414A     		ldr	r2, .L147
 1414 0062 936A     		ldr	r3, [r2, #40]
 1415 0064 43F01003 		orr	r3, r3, #16
 1416 0068 9362     		str	r3, [r2, #40]
 1417              	.L134:
1041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1418              		.loc 1 1041 0
 1419 006a 4368     		ldr	r3, [r0, #4]
 1420 006c 13F0020F 		tst	r3, #2
 1421 0070 74D0     		beq	.L142
1043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1422              		.loc 1 1043 0
 1423 0072 3D4A     		ldr	r2, .L147
 1424 0074 D36A     		ldr	r3, [r2, #44]
 1425 0076 43F01003 		orr	r3, r3, #16
 1426 007a D362     		str	r3, [r2, #44]
 970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 1427              		.loc 1 970 0
 1428 007c 0020     		movs	r0, #0
 1429              	.LVL128:
 1430 007e 7047     		bx	lr
 1431              	.LVL129:
 1432              	.L129:
1050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
 1433              		.loc 1 1050 0
 1434 0080 394B     		ldr	r3, .L147
 1435 0082 5A6A     		ldr	r2, [r3, #36]
 1436 0084 22F02002 		bic	r2, r2, #32
 1437 0088 5A62     		str	r2, [r3, #36]
1051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE();
 1438              		.loc 1 1051 0
 1439 008a 1A6A     		ldr	r2, [r3, #32]
 1440 008c 22F02002 		bic	r2, r2, #32
 1441 0090 1A62     		str	r2, [r3, #32]
1052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
 1442              		.loc 1 1052 0
 1443 0092 DA6A     		ldr	r2, [r3, #44]
 1444 0094 22F02002 		bic	r2, r2, #32
 1445 0098 DA62     		str	r2, [r3, #44]
1053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 1446              		.loc 1 1053 0
 1447 009a 9A6A     		ldr	r2, [r3, #40]
 1448 009c 22F02002 		bic	r2, r2, #32
 1449 00a0 9A62     		str	r2, [r3, #40]
1056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1450              		.loc 1 1056 0
 1451 00a2 4368     		ldr	r3, [r0, #4]
 1452 00a4 13F4803F 		tst	r3, #65536
 1453 00a8 04D0     		beq	.L135
1058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1454              		.loc 1 1058 0
 1455 00aa 2F4A     		ldr	r2, .L147
 1456 00ac 136A     		ldr	r3, [r2, #32]
 1457 00ae 43F02003 		orr	r3, r3, #32
 1458 00b2 1362     		str	r3, [r2, #32]
 1459              	.L135:
1062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1460              		.loc 1 1062 0
 1461 00b4 4368     		ldr	r3, [r0, #4]
 1462 00b6 13F4003F 		tst	r3, #131072
 1463 00ba 04D0     		beq	.L136
1064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1464              		.loc 1 1064 0
 1465 00bc 2A4A     		ldr	r2, .L147
 1466 00be 536A     		ldr	r3, [r2, #36]
 1467 00c0 43F02003 		orr	r3, r3, #32
 1468 00c4 5362     		str	r3, [r2, #36]
 1469              	.L136:
1068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1470              		.loc 1 1068 0
 1471 00c6 4368     		ldr	r3, [r0, #4]
 1472 00c8 13F0010F 		tst	r3, #1
 1473 00cc 04D0     		beq	.L137
1070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1474              		.loc 1 1070 0
 1475 00ce 264A     		ldr	r2, .L147
 1476 00d0 936A     		ldr	r3, [r2, #40]
 1477 00d2 43F02003 		orr	r3, r3, #32
 1478 00d6 9362     		str	r3, [r2, #40]
 1479              	.L137:
1073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1480              		.loc 1 1073 0
 1481 00d8 4368     		ldr	r3, [r0, #4]
 1482 00da 13F0020F 		tst	r3, #2
 1483 00de 3FD0     		beq	.L143
1075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1484              		.loc 1 1075 0
 1485 00e0 214A     		ldr	r2, .L147
 1486 00e2 D36A     		ldr	r3, [r2, #44]
 1487 00e4 43F02003 		orr	r3, r3, #32
 1488 00e8 D362     		str	r3, [r2, #44]
 970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 1489              		.loc 1 970 0
 1490 00ea 0020     		movs	r0, #0
 1491              	.LVL130:
 1492 00ec 7047     		bx	lr
 1493              	.LVL131:
 1494              	.L130:
1081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_IT();
 1495              		.loc 1 1081 0
 1496 00ee 1E4B     		ldr	r3, .L147
 1497 00f0 5A6A     		ldr	r2, [r3, #36]
 1498 00f2 22F04002 		bic	r2, r2, #64
 1499 00f6 5A62     		str	r2, [r3, #36]
1082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE();
 1500              		.loc 1 1082 0
 1501 00f8 1A6A     		ldr	r2, [r3, #32]
 1502 00fa 22F04002 		bic	r2, r2, #64
 1503 00fe 1A62     		str	r2, [r3, #32]
1083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE();
 1504              		.loc 1 1083 0
 1505 0100 DA6A     		ldr	r2, [r3, #44]
 1506 0102 22F04002 		bic	r2, r2, #64
 1507 0106 DA62     		str	r2, [r3, #44]
1084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 1508              		.loc 1 1084 0
 1509 0108 9A6A     		ldr	r2, [r3, #40]
 1510 010a 22F04002 		bic	r2, r2, #64
 1511 010e 9A62     		str	r2, [r3, #40]
1087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1512              		.loc 1 1087 0
 1513 0110 4368     		ldr	r3, [r0, #4]
 1514 0112 13F4803F 		tst	r3, #65536
 1515 0116 04D0     		beq	.L138
1089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1516              		.loc 1 1089 0
 1517 0118 134A     		ldr	r2, .L147
 1518 011a 136A     		ldr	r3, [r2, #32]
 1519 011c 43F04003 		orr	r3, r3, #64
 1520 0120 1362     		str	r3, [r2, #32]
 1521              	.L138:
1093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1522              		.loc 1 1093 0
 1523 0122 4368     		ldr	r3, [r0, #4]
 1524 0124 13F4003F 		tst	r3, #131072
 1525 0128 04D0     		beq	.L139
1095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1526              		.loc 1 1095 0
 1527 012a 0F4A     		ldr	r2, .L147
 1528 012c 536A     		ldr	r3, [r2, #36]
 1529 012e 43F04003 		orr	r3, r3, #64
 1530 0132 5362     		str	r3, [r2, #36]
 1531              	.L139:
1099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1532              		.loc 1 1099 0
 1533 0134 4368     		ldr	r3, [r0, #4]
 1534 0136 13F0010F 		tst	r3, #1
 1535 013a 04D0     		beq	.L140
1101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1536              		.loc 1 1101 0
 1537 013c 0A4A     		ldr	r2, .L147
 1538 013e 936A     		ldr	r3, [r2, #40]
 1539 0140 43F04003 		orr	r3, r3, #64
 1540 0144 9362     		str	r3, [r2, #40]
 1541              	.L140:
1104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       {
 1542              		.loc 1 1104 0
 1543 0146 4368     		ldr	r3, [r0, #4]
 1544 0148 13F0020F 		tst	r3, #2
 1545 014c 0AD0     		beq	.L144
1106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       }
 1546              		.loc 1 1106 0
 1547 014e 064A     		ldr	r2, .L147
 1548 0150 D36A     		ldr	r3, [r2, #44]
 1549 0152 43F04003 		orr	r3, r3, #64
 1550 0156 D362     		str	r3, [r2, #44]
 970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 1551              		.loc 1 970 0
 1552 0158 0020     		movs	r0, #0
 1553              	.LVL132:
 1554 015a 7047     		bx	lr
 1555              	.LVL133:
 1556              	.L142:
 1557 015c 0020     		movs	r0, #0
 1558              	.LVL134:
 1559 015e 7047     		bx	lr
 1560              	.LVL135:
 1561              	.L143:
 1562 0160 0020     		movs	r0, #0
 1563              	.LVL136:
 1564 0162 7047     		bx	lr
 1565              	.LVL137:
 1566              	.L144:
 1567 0164 0020     		movs	r0, #0
 1568              	.LVL138:
1112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****       break;
1113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   return status;
1116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1569              		.loc 1 1116 0
 1570 0166 7047     		bx	lr
 1571              	.L148:
 1572              		.align	2
 1573              	.L147:
 1574 0168 00040140 		.word	1073808384
 1575              		.cfi_endproc
 1576              	.LFE340:
 1578              		.section	.text.HAL_PWREx_EnableLowPowerRunMode,"ax",%progbits
 1579              		.align	1
 1580              		.global	HAL_PWREx_EnableLowPowerRunMode
 1581              		.syntax unified
 1582              		.thumb
 1583              		.thumb_func
 1584              		.fpu fpv4-sp-d16
 1586              	HAL_PWREx_EnableLowPowerRunMode:
 1587              	.LFB341:
1117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
1121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Low-power Run mode
1122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  In Low-power Run mode, all I/O pins keep the same state as in Run mode.
1123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  When Regulator is set to PWR_LOWPOWERREGULATOR_ON, the user can optionally configure the
1124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        Flash in power-down monde in setting the RUN_PD bit in FLASH_ACR register.
1125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        Additionally, the clock frequency must be reduced below 2 MHz.
1126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        Setting RUN_PD in FLASH_ACR then appropriately reducing the clock frequency must
1127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        be done before calling HAL_PWREx_EnableLowPowerRunMode() API.
1128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
1130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowPowerRunMode(void)
1131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1588              		.loc 1 1131 0
 1589              		.cfi_startproc
 1590              		@ args = 0, pretend = 0, frame = 0
 1591              		@ frame_needed = 0, uses_anonymous_args = 0
 1592              		@ link register save eliminated.
1132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Set Regulator parameter */
1133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_LPR);
 1593              		.loc 1 1133 0
 1594 0000 024A     		ldr	r2, .L150
 1595 0002 1368     		ldr	r3, [r2]
 1596 0004 43F48043 		orr	r3, r3, #16384
 1597 0008 1360     		str	r3, [r2]
1134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1598              		.loc 1 1134 0
 1599 000a 7047     		bx	lr
 1600              	.L151:
 1601              		.align	2
 1602              	.L150:
 1603 000c 00700040 		.word	1073770496
 1604              		.cfi_endproc
 1605              	.LFE341:
 1607              		.section	.text.HAL_PWREx_DisableLowPowerRunMode,"ax",%progbits
 1608              		.align	1
 1609              		.global	HAL_PWREx_DisableLowPowerRunMode
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu fpv4-sp-d16
 1615              	HAL_PWREx_DisableLowPowerRunMode:
 1616              	.LFB342:
1135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
1138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Exit Low-power Run mode.
1139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Before HAL_PWREx_DisableLowPowerRunMode() completion, the function checks that
1140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        REGLPF has been properly reset (otherwise, HAL_PWREx_DisableLowPowerRunMode
1141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        returns HAL_TIMEOUT status). The system clock frequency can then be
1142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        increased above 2 MHz.
1143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
1144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
1145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableLowPowerRunMode(void)
1146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1617              		.loc 1 1146 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 0
 1620              		@ frame_needed = 0, uses_anonymous_args = 0
 1621              		@ link register save eliminated.
1147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
1148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Clear LPR bit */
1150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR);
 1622              		.loc 1 1150 0
 1623 0000 104A     		ldr	r2, .L159
 1624 0002 1368     		ldr	r3, [r2]
 1625 0004 23F48043 		bic	r3, r3, #16384
 1626 0008 1360     		str	r3, [r2]
1151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Wait until REGLPF is reset */
1153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 1627              		.loc 1 1153 0
 1628 000a 0F4B     		ldr	r3, .L159+4
 1629 000c 1A68     		ldr	r2, [r3]
 1630 000e 3223     		movs	r3, #50
 1631 0010 03FB02F3 		mul	r3, r3, r2
 1632 0014 0D4A     		ldr	r2, .L159+8
 1633 0016 A2FB0323 		umull	r2, r3, r2, r3
 1634 001a 9B0C     		lsrs	r3, r3, #18
 1635 001c 0133     		adds	r3, r3, #1
 1636              	.LVL139:
1154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 1637              		.loc 1 1154 0
 1638 001e 00E0     		b	.L153
 1639              	.L155:
1155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     wait_loop_index--;
 1640              		.loc 1 1156 0
 1641 0020 013B     		subs	r3, r3, #1
 1642              	.LVL140:
 1643              	.L153:
1154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 1644              		.loc 1 1154 0
 1645 0022 084A     		ldr	r2, .L159
 1646 0024 5269     		ldr	r2, [r2, #20]
 1647 0026 12F4007F 		tst	r2, #512
 1648 002a 01D0     		beq	.L154
1154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 1649              		.loc 1 1154 0 is_stmt 0 discriminator 1
 1650 002c 002B     		cmp	r3, #0
 1651 002e F7D1     		bne	.L155
 1652              	.L154:
1157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF))
 1653              		.loc 1 1158 0 is_stmt 1
 1654 0030 044B     		ldr	r3, .L159
 1655              	.LVL141:
 1656 0032 5B69     		ldr	r3, [r3, #20]
 1657 0034 13F4007F 		tst	r3, #512
 1658 0038 01D1     		bne	.L158
1159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     return HAL_TIMEOUT;
1161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 1659              		.loc 1 1163 0
 1660 003a 0020     		movs	r0, #0
1164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1661              		.loc 1 1164 0
 1662 003c 7047     		bx	lr
 1663              	.L158:
1160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 1664              		.loc 1 1160 0
 1665 003e 0320     		movs	r0, #3
 1666 0040 7047     		bx	lr
 1667              	.L160:
 1668 0042 00BF     		.align	2
 1669              	.L159:
 1670 0044 00700040 		.word	1073770496
 1671 0048 00000000 		.word	SystemCoreClock
 1672 004c 83DE1B43 		.word	1125899907
 1673              		.cfi_endproc
 1674              	.LFE342:
 1676              		.section	.text.HAL_PWREx_EnterSTOP0Mode,"ax",%progbits
 1677              		.align	1
 1678              		.global	HAL_PWREx_EnterSTOP0Mode
 1679              		.syntax unified
 1680              		.thumb
 1681              		.thumb_func
 1682              		.fpu fpv4-sp-d16
 1684              	HAL_PWREx_EnterSTOP0Mode:
 1685              	.LFB343:
1165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
1168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 0 mode.
1169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, main and low voltage regulators are ON.
1170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, all I/O pins keep the same state as in Run mode.
1171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI,
1172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
1173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
1174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
1175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
1176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
1177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.
1178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 0 mode by issuing an interrupt or a wakeup event,
1179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
1180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
1181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  By keeping the internal regulator ON during Stop 0 mode, the consumption
1182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
1183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
1184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
1185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
1186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
1189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP0Mode(uint8_t STOPEntry)
1190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1686              		.loc 1 1190 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 0
 1689              		@ frame_needed = 0, uses_anonymous_args = 0
 1690              		@ link register save eliminated.
 1691              	.LVL142:
1191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
1192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Stop 0 mode with Main Regulator */
1195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP0);
 1692              		.loc 1 1195 0
 1693 0000 0B4A     		ldr	r2, .L165
 1694 0002 1368     		ldr	r3, [r2]
 1695 0004 23F00703 		bic	r3, r3, #7
 1696 0008 1360     		str	r3, [r2]
1196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1697              		.loc 1 1198 0
 1698 000a 0A4A     		ldr	r2, .L165+4
 1699 000c 1369     		ldr	r3, [r2, #16]
 1700 000e 43F00403 		orr	r3, r3, #4
 1701 0012 1361     		str	r3, [r2, #16]
1199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 1702              		.loc 1 1201 0
 1703 0014 0128     		cmp	r0, #1
 1704 0016 08D0     		beq	.L164
1202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __WFI();
1205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   else
1207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
1209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __SEV();
 1705              		.loc 1 1209 0
 1706              		.syntax unified
 1707              	@ 1209 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1708 0018 40BF     		sev
 1709              	@ 0 "" 2
1210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 1710              		.loc 1 1210 0
 1711              	@ 1210 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1712 001a 20BF     		wfe
 1713              	@ 0 "" 2
1211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 1714              		.loc 1 1211 0
 1715              	@ 1211 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1716 001c 20BF     		wfe
 1717              	@ 0 "" 2
 1718              		.thumb
 1719              		.syntax unified
 1720              	.L163:
1212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1721              		.loc 1 1215 0
 1722 001e 054A     		ldr	r2, .L165+4
 1723 0020 1369     		ldr	r3, [r2, #16]
 1724 0022 23F00403 		bic	r3, r3, #4
 1725 0026 1361     		str	r3, [r2, #16]
1216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1726              		.loc 1 1216 0
 1727 0028 7047     		bx	lr
 1728              	.L164:
1204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 1729              		.loc 1 1204 0
 1730              		.syntax unified
 1731              	@ 1204 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1732 002a 30BF     		wfi
 1733              	@ 0 "" 2
 1734              		.thumb
 1735              		.syntax unified
 1736 002c F7E7     		b	.L163
 1737              	.L166:
 1738 002e 00BF     		.align	2
 1739              	.L165:
 1740 0030 00700040 		.word	1073770496
 1741 0034 00ED00E0 		.word	-536810240
 1742              		.cfi_endproc
 1743              	.LFE343:
 1745              		.section	.text.HAL_PWREx_EnterSTOP1Mode,"ax",%progbits
 1746              		.align	1
 1747              		.global	HAL_PWREx_EnterSTOP1Mode
 1748              		.syntax unified
 1749              		.thumb
 1750              		.thumb_func
 1751              		.fpu fpv4-sp-d16
 1753              	HAL_PWREx_EnterSTOP1Mode:
 1754              	.LFB344:
1217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
1220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 1 mode.
1221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, only low power voltage regulator is ON.
1222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, all I/O pins keep the same state as in Run mode.
1223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI,
1224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
1225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
1226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
1227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
1228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
1229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.
1230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 1 mode by issuing an interrupt or a wakeup event,
1231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
1232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
1233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  Due to low power mode, an additional startup delay is incurred when waking up from Stop 
1234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
1235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
1236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
1237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
1240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP1Mode(uint8_t STOPEntry)
1241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1755              		.loc 1 1241 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 0
 1758              		@ frame_needed = 0, uses_anonymous_args = 0
 1759              		@ link register save eliminated.
 1760              	.LVL143:
1242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
1243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Stop 1 mode with Low-Power Regulator */
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP1);
 1761              		.loc 1 1246 0
 1762 0000 0C4A     		ldr	r2, .L171
 1763 0002 1368     		ldr	r3, [r2]
 1764 0004 23F00703 		bic	r3, r3, #7
 1765 0008 43F00103 		orr	r3, r3, #1
 1766 000c 1360     		str	r3, [r2]
1247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1767              		.loc 1 1249 0
 1768 000e 0A4A     		ldr	r2, .L171+4
 1769 0010 1369     		ldr	r3, [r2, #16]
 1770 0012 43F00403 		orr	r3, r3, #4
 1771 0016 1361     		str	r3, [r2, #16]
1250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 1772              		.loc 1 1252 0
 1773 0018 0128     		cmp	r0, #1
 1774 001a 08D0     		beq	.L170
1253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __WFI();
1256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   else
1258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
1260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __SEV();
 1775              		.loc 1 1260 0
 1776              		.syntax unified
 1777              	@ 1260 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1778 001c 40BF     		sev
 1779              	@ 0 "" 2
1261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 1780              		.loc 1 1261 0
 1781              	@ 1261 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1782 001e 20BF     		wfe
 1783              	@ 0 "" 2
1262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 1784              		.loc 1 1262 0
 1785              	@ 1262 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1786 0020 20BF     		wfe
 1787              	@ 0 "" 2
 1788              		.thumb
 1789              		.syntax unified
 1790              	.L169:
1263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1791              		.loc 1 1266 0
 1792 0022 054A     		ldr	r2, .L171+4
 1793 0024 1369     		ldr	r3, [r2, #16]
 1794 0026 23F00403 		bic	r3, r3, #4
 1795 002a 1361     		str	r3, [r2, #16]
1267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1796              		.loc 1 1267 0
 1797 002c 7047     		bx	lr
 1798              	.L170:
1255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 1799              		.loc 1 1255 0
 1800              		.syntax unified
 1801              	@ 1255 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1802 002e 30BF     		wfi
 1803              	@ 0 "" 2
 1804              		.thumb
 1805              		.syntax unified
 1806 0030 F7E7     		b	.L169
 1807              	.L172:
 1808 0032 00BF     		.align	2
 1809              	.L171:
 1810 0034 00700040 		.word	1073770496
 1811 0038 00ED00E0 		.word	-536810240
 1812              		.cfi_endproc
 1813              	.LFE344:
 1815              		.section	.text.HAL_PWREx_EnterSTOP2Mode,"ax",%progbits
 1816              		.align	1
 1817              		.global	HAL_PWREx_EnterSTOP2Mode
 1818              		.syntax unified
 1819              		.thumb
 1820              		.thumb_func
 1821              		.fpu fpv4-sp-d16
 1823              	HAL_PWREx_EnterSTOP2Mode:
 1824              	.LFB345:
1268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
1271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 2 mode.
1272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 2 mode, only low power voltage regulator is ON.
1273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 2 mode, all I/O pins keep the same state as in Run mode.
1274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped, the PLL, the MSI,
1275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with wakeup capability
1276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        (LCD, LPTIM1, I2C3 and LPUART) can switch on the HSI to receive a frame, and switch off 
1277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        receiving the frame if it is not a wakeup frame. In this case the HSI clock is propagate
1278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        to the peripheral requesting it.
1279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
1280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        SRAM3 content is preserved depending on RRSTP bit setting (not available on all devices)
1281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.
1282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        The voltage regulator is set in low-power mode but LPR bit must be cleared to enter stop
1283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        Otherwise, Stop 1 mode is entered.
1284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 2 mode by issuing an interrupt or a wakeup event,
1285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
1286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
1287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
1288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
1289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
1290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
1293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP2Mode(uint8_t STOPEntry)
1294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1825              		.loc 1 1294 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 0
 1828              		@ frame_needed = 0, uses_anonymous_args = 0
 1829              		@ link register save eliminated.
 1830              	.LVL144:
1295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameter */
1296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Set Stop mode 2 */
1299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP2);
 1831              		.loc 1 1299 0
 1832 0000 0C4A     		ldr	r2, .L177
 1833 0002 1368     		ldr	r3, [r2]
 1834 0004 23F00703 		bic	r3, r3, #7
 1835 0008 43F00203 		orr	r3, r3, #2
 1836 000c 1360     		str	r3, [r2]
1300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1837              		.loc 1 1302 0
 1838 000e 0A4A     		ldr	r2, .L177+4
 1839 0010 1369     		ldr	r3, [r2, #16]
 1840 0012 43F00403 		orr	r3, r3, #4
 1841 0016 1361     		str	r3, [r2, #16]
1303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 1842              		.loc 1 1305 0
 1843 0018 0128     		cmp	r0, #1
 1844 001a 08D0     		beq	.L176
1306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __WFI();
1309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   else
1311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
1313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __SEV();
 1845              		.loc 1 1313 0
 1846              		.syntax unified
 1847              	@ 1313 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1848 001c 40BF     		sev
 1849              	@ 0 "" 2
1314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 1850              		.loc 1 1314 0
 1851              	@ 1314 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1852 001e 20BF     		wfe
 1853              	@ 0 "" 2
1315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 1854              		.loc 1 1315 0
 1855              	@ 1315 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1856 0020 20BF     		wfe
 1857              	@ 0 "" 2
 1858              		.thumb
 1859              		.syntax unified
 1860              	.L175:
1316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1861              		.loc 1 1319 0
 1862 0022 054A     		ldr	r2, .L177+4
 1863 0024 1369     		ldr	r3, [r2, #16]
 1864 0026 23F00403 		bic	r3, r3, #4
 1865 002a 1361     		str	r3, [r2, #16]
1320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1866              		.loc 1 1320 0
 1867 002c 7047     		bx	lr
 1868              	.L176:
1308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 1869              		.loc 1 1308 0
 1870              		.syntax unified
 1871              	@ 1308 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1872 002e 30BF     		wfi
 1873              	@ 0 "" 2
 1874              		.thumb
 1875              		.syntax unified
 1876 0030 F7E7     		b	.L175
 1877              	.L178:
 1878 0032 00BF     		.align	2
 1879              	.L177:
 1880 0034 00700040 		.word	1073770496
 1881 0038 00ED00E0 		.word	-536810240
 1882              		.cfi_endproc
 1883              	.LFE345:
 1885              		.section	.text.HAL_PWREx_EnterSHUTDOWNMode,"ax",%progbits
 1886              		.align	1
 1887              		.global	HAL_PWREx_EnterSHUTDOWNMode
 1888              		.syntax unified
 1889              		.thumb
 1890              		.thumb_func
 1891              		.fpu fpv4-sp-d16
 1893              	HAL_PWREx_EnterSHUTDOWNMode:
 1894              	.LFB346:
1321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
1327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Shutdown mode.
1328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  In Shutdown mode, the PLL, the HSI, the MSI, the LSI and the HSE oscillators are switche
1329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        off. The voltage regulator is disabled and Vcore domain is powered off.
1330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and registers contents are lost except for registers in the Backup domain.
1331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is not available.
1332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
1333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
1335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSHUTDOWNMode(void)
1336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1895              		.loc 1 1336 0
 1896              		.cfi_startproc
 1897              		@ args = 0, pretend = 0, frame = 0
 1898              		@ frame_needed = 0, uses_anonymous_args = 0
 1899              		@ link register save eliminated.
1337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Set Shutdown mode */
1339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_SHUTDOWN);
 1900              		.loc 1 1339 0
 1901 0000 064A     		ldr	r2, .L180
 1902 0002 1368     		ldr	r3, [r2]
 1903 0004 23F00703 		bic	r3, r3, #7
 1904 0008 43F00403 		orr	r3, r3, #4
 1905 000c 1360     		str	r3, [r2]
1340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1906              		.loc 1 1342 0
 1907 000e 044A     		ldr	r2, .L180+4
 1908 0010 1369     		ldr	r3, [r2, #16]
 1909 0012 43F00403 		orr	r3, r3, #4
 1910 0016 1361     		str	r3, [r2, #16]
1343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /* This option is used to ensure that store operations are completed */
1345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined ( __CC_ARM)
1346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   __force_stores();
1347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif
1348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Request Wait For Interrupt */
1349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   __WFI();
 1911              		.loc 1 1349 0
 1912              		.syntax unified
 1913              	@ 1349 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c" 1
 1914 0018 30BF     		wfi
 1915              	@ 0 "" 2
1350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1916              		.loc 1 1350 0
 1917              		.thumb
 1918              		.syntax unified
 1919 001a 7047     		bx	lr
 1920              	.L181:
 1921              		.align	2
 1922              	.L180:
 1923 001c 00700040 		.word	1073770496
 1924 0020 00ED00E0 		.word	-536810240
 1925              		.cfi_endproc
 1926              	.LFE346:
 1928              		.section	.text.HAL_PWREx_PVM2Callback,"ax",%progbits
 1929              		.align	1
 1930              		.weak	HAL_PWREx_PVM2Callback
 1931              		.syntax unified
 1932              		.thumb
 1933              		.thumb_func
 1934              		.fpu fpv4-sp-d16
 1936              	HAL_PWREx_PVM2Callback:
 1937              	.LFB348:
1351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
1356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief This function handles the PWR PVD/PVMx interrupt request.
1357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @note This API should be called under the PVD_PVM_IRQHandler().
1358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
1360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_PVD_PVM_IRQHandler(void)
1361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
1362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
1363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != 0x0U)
1364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVD interrupt user callback */
1366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     HAL_PWR_PVDCallback();
1367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVD exti pending bit */
1369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
1370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Next, successively check PVMx exti flags */
1372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
1373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM1_EXTI_GET_FLAG() != 0x0U)
1374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM1 interrupt user callback */
1376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM1Callback();
1377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM1 exti pending bit */
1379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM1_EXTI_CLEAR_FLAG();
1380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM2_EXTI_GET_FLAG() != 0x0U)
1384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM2 interrupt user callback */
1386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM2Callback();
1387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM2 exti pending bit */
1389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM2_EXTI_CLEAR_FLAG();
1390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM3_EXTI_GET_FLAG() != 0x0U)
1393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM3 interrupt user callback */
1395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM3Callback();
1396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM3 exti pending bit */
1398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM3_EXTI_CLEAR_FLAG();
1399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM4_EXTI_GET_FLAG() != 0x0U)
1401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
1402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM4 interrupt user callback */
1403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM4Callback();
1404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM4 exti pending bit */
1406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM4_EXTI_CLEAR_FLAG();
1407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
1408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
1409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
1412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
1413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM1 interrupt callback
1414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
1416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM1Callback(void)
1417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
1418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM1Callback() API can be implemented in the user file
1420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****    */
1421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
1422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
1426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM2 interrupt callback
1427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
1429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM2Callback(void)
1430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1938              		.loc 1 1430 0
 1939              		.cfi_startproc
 1940              		@ args = 0, pretend = 0, frame = 0
 1941              		@ frame_needed = 0, uses_anonymous_args = 0
 1942              		@ link register save eliminated.
1431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM2Callback() API can be implemented in the user file
1433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****    */
1434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1943              		.loc 1 1434 0
 1944 0000 7047     		bx	lr
 1945              		.cfi_endproc
 1946              	.LFE348:
 1948              		.section	.text.HAL_PWREx_PVM3Callback,"ax",%progbits
 1949              		.align	1
 1950              		.weak	HAL_PWREx_PVM3Callback
 1951              		.syntax unified
 1952              		.thumb
 1953              		.thumb_func
 1954              		.fpu fpv4-sp-d16
 1956              	HAL_PWREx_PVM3Callback:
 1957              	.LFB349:
1435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
1438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM3 interrupt callback
1439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
1441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM3Callback(void)
1442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1958              		.loc 1 1442 0
 1959              		.cfi_startproc
 1960              		@ args = 0, pretend = 0, frame = 0
 1961              		@ frame_needed = 0, uses_anonymous_args = 0
 1962              		@ link register save eliminated.
1443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM3Callback() API can be implemented in the user file
1445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****    */
1446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1963              		.loc 1 1446 0
 1964 0000 7047     		bx	lr
 1965              		.cfi_endproc
 1966              	.LFE349:
 1968              		.section	.text.HAL_PWREx_PVM4Callback,"ax",%progbits
 1969              		.align	1
 1970              		.weak	HAL_PWREx_PVM4Callback
 1971              		.syntax unified
 1972              		.thumb
 1973              		.thumb_func
 1974              		.fpu fpv4-sp-d16
 1976              	HAL_PWREx_PVM4Callback:
 1977              	.LFB350:
1447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
1448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** /**
1449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM4 interrupt callback
1450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   */
1452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM4Callback(void)
1453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** {
 1978              		.loc 1 1453 0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 0
 1981              		@ frame_needed = 0, uses_anonymous_args = 0
 1982              		@ link register save eliminated.
1454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM4Callback() API can be implemented in the user file
1456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****    */
1457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** }
 1983              		.loc 1 1457 0
 1984 0000 7047     		bx	lr
 1985              		.cfi_endproc
 1986              	.LFE350:
 1988              		.section	.text.HAL_PWREx_PVD_PVM_IRQHandler,"ax",%progbits
 1989              		.align	1
 1990              		.global	HAL_PWREx_PVD_PVM_IRQHandler
 1991              		.syntax unified
 1992              		.thumb
 1993              		.thumb_func
 1994              		.fpu fpv4-sp-d16
 1996              	HAL_PWREx_PVD_PVM_IRQHandler:
 1997              	.LFB347:
1361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
 1998              		.loc 1 1361 0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 0, uses_anonymous_args = 0
 2002 0000 08B5     		push	{r3, lr}
 2003              		.cfi_def_cfa_offset 8
 2004              		.cfi_offset 3, -8
 2005              		.cfi_offset 14, -4
1363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 2006              		.loc 1 1363 0
 2007 0002 174B     		ldr	r3, .L195
 2008 0004 5B69     		ldr	r3, [r3, #20]
 2009 0006 13F4803F 		tst	r3, #65536
 2010 000a 0FD1     		bne	.L191
 2011              	.L186:
1383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 2012              		.loc 1 1383 0
 2013 000c 144B     		ldr	r3, .L195
 2014 000e 5B6B     		ldr	r3, [r3, #52]
 2015 0010 13F0100F 		tst	r3, #16
 2016 0014 11D1     		bne	.L192
 2017              	.L187:
1392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 2018              		.loc 1 1392 0
 2019 0016 124B     		ldr	r3, .L195
 2020 0018 5B6B     		ldr	r3, [r3, #52]
 2021 001a 13F0200F 		tst	r3, #32
 2022 001e 12D1     		bne	.L193
 2023              	.L188:
1400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   {
 2024              		.loc 1 1400 0
 2025 0020 0F4B     		ldr	r3, .L195
 2026 0022 5B6B     		ldr	r3, [r3, #52]
 2027 0024 13F0400F 		tst	r3, #64
 2028 0028 13D1     		bne	.L194
 2029              	.L185:
1408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 2030              		.loc 1 1408 0
 2031 002a 08BD     		pop	{r3, pc}
 2032              	.L191:
1366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 2033              		.loc 1 1366 0
 2034 002c FFF7FEFF 		bl	HAL_PWR_PVDCallback
 2035              	.LVL145:
1369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 2036              		.loc 1 1369 0
 2037 0030 0B4B     		ldr	r3, .L195
 2038 0032 4FF48032 		mov	r2, #65536
 2039 0036 5A61     		str	r2, [r3, #20]
 2040 0038 E8E7     		b	.L186
 2041              	.L192:
1386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 2042              		.loc 1 1386 0
 2043 003a FFF7FEFF 		bl	HAL_PWREx_PVM2Callback
 2044              	.LVL146:
1389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 2045              		.loc 1 1389 0
 2046 003e 084B     		ldr	r3, .L195
 2047 0040 1022     		movs	r2, #16
 2048 0042 5A63     		str	r2, [r3, #52]
 2049 0044 E7E7     		b	.L187
 2050              	.L193:
1395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 2051              		.loc 1 1395 0
 2052 0046 FFF7FEFF 		bl	HAL_PWREx_PVM3Callback
 2053              	.LVL147:
1398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 2054              		.loc 1 1398 0
 2055 004a 054B     		ldr	r3, .L195
 2056 004c 2022     		movs	r2, #32
 2057 004e 5A63     		str	r2, [r3, #52]
 2058 0050 E6E7     		b	.L188
 2059              	.L194:
1403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 2060              		.loc 1 1403 0
 2061 0052 FFF7FEFF 		bl	HAL_PWREx_PVM4Callback
 2062              	.LVL148:
1406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c ****   }
 2063              		.loc 1 1406 0
 2064 0056 024B     		ldr	r3, .L195
 2065 0058 4022     		movs	r2, #64
 2066 005a 5A63     		str	r2, [r3, #52]
1408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.c **** 
 2067              		.loc 1 1408 0
 2068 005c E5E7     		b	.L185
 2069              	.L196:
 2070 005e 00BF     		.align	2
 2071              	.L195:
 2072 0060 00040140 		.word	1073808384
 2073              		.cfi_endproc
 2074              	.LFE347:
 2076              		.text
 2077              	.Letext0:
 2078              		.file 2 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 2079              		.file 3 "../system/include/cmsis/stm32l4xx/core_cm4.h"
 2080              		.file 4 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 2081              		.file 5 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 2082              		.file 6 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_def.h"
 2083              		.file 7 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_flash.h"
 2084              		.file 8 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_pwr_ex.h"
 2085              		.file 9 "../system/include/stm32l4-hal-driver/stm32l4xx_hal.h"
 2086              		.file 10 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_pwr.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_pwr_ex.c
     /tmp/ccXOdMK7.s:18     .text.HAL_PWREx_GetVoltageRange:0000000000000000 $t
     /tmp/ccXOdMK7.s:25     .text.HAL_PWREx_GetVoltageRange:0000000000000000 HAL_PWREx_GetVoltageRange
     /tmp/ccXOdMK7.s:42     .text.HAL_PWREx_GetVoltageRange:000000000000000c $d
     /tmp/ccXOdMK7.s:47     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 $t
     /tmp/ccXOdMK7.s:54     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 HAL_PWREx_ControlVoltageScaling
     /tmp/ccXOdMK7.s:152    .text.HAL_PWREx_ControlVoltageScaling:0000000000000084 $d
     /tmp/ccXOdMK7.s:159    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 $t
     /tmp/ccXOdMK7.s:166    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 HAL_PWREx_EnableBatteryCharging
     /tmp/ccXOdMK7.s:190    .text.HAL_PWREx_EnableBatteryCharging:0000000000000018 $d
     /tmp/ccXOdMK7.s:195    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 $t
     /tmp/ccXOdMK7.s:202    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 HAL_PWREx_DisableBatteryCharging
     /tmp/ccXOdMK7.s:219    .text.HAL_PWREx_DisableBatteryCharging:000000000000000c $d
     /tmp/ccXOdMK7.s:224    .text.HAL_PWREx_EnableVddIO2:0000000000000000 $t
     /tmp/ccXOdMK7.s:231    .text.HAL_PWREx_EnableVddIO2:0000000000000000 HAL_PWREx_EnableVddIO2
     /tmp/ccXOdMK7.s:248    .text.HAL_PWREx_EnableVddIO2:000000000000000c $d
     /tmp/ccXOdMK7.s:253    .text.HAL_PWREx_DisableVddIO2:0000000000000000 $t
     /tmp/ccXOdMK7.s:260    .text.HAL_PWREx_DisableVddIO2:0000000000000000 HAL_PWREx_DisableVddIO2
     /tmp/ccXOdMK7.s:277    .text.HAL_PWREx_DisableVddIO2:000000000000000c $d
     /tmp/ccXOdMK7.s:282    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 $t
     /tmp/ccXOdMK7.s:289    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 HAL_PWREx_EnableInternalWakeUpLine
     /tmp/ccXOdMK7.s:306    .text.HAL_PWREx_EnableInternalWakeUpLine:000000000000000c $d
     /tmp/ccXOdMK7.s:311    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 $t
     /tmp/ccXOdMK7.s:318    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 HAL_PWREx_DisableInternalWakeUpLine
     /tmp/ccXOdMK7.s:335    .text.HAL_PWREx_DisableInternalWakeUpLine:000000000000000c $d
     /tmp/ccXOdMK7.s:340    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 $t
     /tmp/ccXOdMK7.s:347    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 HAL_PWREx_EnableGPIOPullUp
     /tmp/ccXOdMK7.s:360    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000008 $d
     /tmp/ccXOdMK7.s:368    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000010 $t
     /tmp/ccXOdMK7.s:518    .text.HAL_PWREx_EnableGPIOPullUp:00000000000000c4 $d
     /tmp/ccXOdMK7.s:523    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 $t
     /tmp/ccXOdMK7.s:530    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 HAL_PWREx_DisableGPIOPullUp
     /tmp/ccXOdMK7.s:543    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000008 $d
     /tmp/ccXOdMK7.s:551    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000010 $t
     /tmp/ccXOdMK7.s:667    .text.HAL_PWREx_DisableGPIOPullUp:000000000000008c $d
     /tmp/ccXOdMK7.s:672    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 $t
     /tmp/ccXOdMK7.s:679    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 HAL_PWREx_EnableGPIOPullDown
     /tmp/ccXOdMK7.s:692    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000008 $d
     /tmp/ccXOdMK7.s:700    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000010 $t
     /tmp/ccXOdMK7.s:850    .text.HAL_PWREx_EnableGPIOPullDown:00000000000000c4 $d
     /tmp/ccXOdMK7.s:855    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 $t
     /tmp/ccXOdMK7.s:862    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 HAL_PWREx_DisableGPIOPullDown
     /tmp/ccXOdMK7.s:875    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000008 $d
     /tmp/ccXOdMK7.s:883    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000010 $t
     /tmp/ccXOdMK7.s:1000   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000090 $d
     /tmp/ccXOdMK7.s:1005   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 $t
     /tmp/ccXOdMK7.s:1012   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 HAL_PWREx_EnablePullUpPullDownConfig
     /tmp/ccXOdMK7.s:1029   .text.HAL_PWREx_EnablePullUpPullDownConfig:000000000000000c $d
     /tmp/ccXOdMK7.s:1034   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 $t
     /tmp/ccXOdMK7.s:1041   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 HAL_PWREx_DisablePullUpPullDownConfig
     /tmp/ccXOdMK7.s:1058   .text.HAL_PWREx_DisablePullUpPullDownConfig:000000000000000c $d
     /tmp/ccXOdMK7.s:1063   .text.HAL_PWREx_SetSRAM2ContentRetention:0000000000000000 $t
     /tmp/ccXOdMK7.s:1070   .text.HAL_PWREx_SetSRAM2ContentRetention:0000000000000000 HAL_PWREx_SetSRAM2ContentRetention
     /tmp/ccXOdMK7.s:1109   .text.HAL_PWREx_SetSRAM2ContentRetention:0000000000000028 $d
     /tmp/ccXOdMK7.s:1114   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 $t
     /tmp/ccXOdMK7.s:1121   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 HAL_PWREx_EnableSRAM2ContentRetention
     /tmp/ccXOdMK7.s:1141   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 $t
     /tmp/ccXOdMK7.s:1148   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 HAL_PWREx_DisableSRAM2ContentRetention
     /tmp/ccXOdMK7.s:1168   .text.HAL_PWREx_EnablePVM2:0000000000000000 $t
     /tmp/ccXOdMK7.s:1175   .text.HAL_PWREx_EnablePVM2:0000000000000000 HAL_PWREx_EnablePVM2
     /tmp/ccXOdMK7.s:1192   .text.HAL_PWREx_EnablePVM2:000000000000000c $d
     /tmp/ccXOdMK7.s:1197   .text.HAL_PWREx_DisablePVM2:0000000000000000 $t
     /tmp/ccXOdMK7.s:1204   .text.HAL_PWREx_DisablePVM2:0000000000000000 HAL_PWREx_DisablePVM2
     /tmp/ccXOdMK7.s:1221   .text.HAL_PWREx_DisablePVM2:000000000000000c $d
     /tmp/ccXOdMK7.s:1226   .text.HAL_PWREx_EnablePVM3:0000000000000000 $t
     /tmp/ccXOdMK7.s:1233   .text.HAL_PWREx_EnablePVM3:0000000000000000 HAL_PWREx_EnablePVM3
     /tmp/ccXOdMK7.s:1250   .text.HAL_PWREx_EnablePVM3:000000000000000c $d
     /tmp/ccXOdMK7.s:1255   .text.HAL_PWREx_DisablePVM3:0000000000000000 $t
     /tmp/ccXOdMK7.s:1262   .text.HAL_PWREx_DisablePVM3:0000000000000000 HAL_PWREx_DisablePVM3
     /tmp/ccXOdMK7.s:1279   .text.HAL_PWREx_DisablePVM3:000000000000000c $d
     /tmp/ccXOdMK7.s:1284   .text.HAL_PWREx_EnablePVM4:0000000000000000 $t
     /tmp/ccXOdMK7.s:1291   .text.HAL_PWREx_EnablePVM4:0000000000000000 HAL_PWREx_EnablePVM4
     /tmp/ccXOdMK7.s:1308   .text.HAL_PWREx_EnablePVM4:000000000000000c $d
     /tmp/ccXOdMK7.s:1313   .text.HAL_PWREx_DisablePVM4:0000000000000000 $t
     /tmp/ccXOdMK7.s:1320   .text.HAL_PWREx_DisablePVM4:0000000000000000 HAL_PWREx_DisablePVM4
     /tmp/ccXOdMK7.s:1337   .text.HAL_PWREx_DisablePVM4:000000000000000c $d
     /tmp/ccXOdMK7.s:1342   .text.HAL_PWREx_ConfigPVM:0000000000000000 $t
     /tmp/ccXOdMK7.s:1349   .text.HAL_PWREx_ConfigPVM:0000000000000000 HAL_PWREx_ConfigPVM
     /tmp/ccXOdMK7.s:1574   .text.HAL_PWREx_ConfigPVM:0000000000000168 $d
     /tmp/ccXOdMK7.s:1579   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 $t
     /tmp/ccXOdMK7.s:1586   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 HAL_PWREx_EnableLowPowerRunMode
     /tmp/ccXOdMK7.s:1603   .text.HAL_PWREx_EnableLowPowerRunMode:000000000000000c $d
     /tmp/ccXOdMK7.s:1608   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 $t
     /tmp/ccXOdMK7.s:1615   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 HAL_PWREx_DisableLowPowerRunMode
     /tmp/ccXOdMK7.s:1670   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000044 $d
     /tmp/ccXOdMK7.s:1677   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 $t
     /tmp/ccXOdMK7.s:1684   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 HAL_PWREx_EnterSTOP0Mode
     /tmp/ccXOdMK7.s:1740   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000030 $d
     /tmp/ccXOdMK7.s:1746   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 $t
     /tmp/ccXOdMK7.s:1753   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 HAL_PWREx_EnterSTOP1Mode
     /tmp/ccXOdMK7.s:1810   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000034 $d
     /tmp/ccXOdMK7.s:1816   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000000 $t
     /tmp/ccXOdMK7.s:1823   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000000 HAL_PWREx_EnterSTOP2Mode
     /tmp/ccXOdMK7.s:1880   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000034 $d
     /tmp/ccXOdMK7.s:1886   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 $t
     /tmp/ccXOdMK7.s:1893   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 HAL_PWREx_EnterSHUTDOWNMode
     /tmp/ccXOdMK7.s:1923   .text.HAL_PWREx_EnterSHUTDOWNMode:000000000000001c $d
     /tmp/ccXOdMK7.s:1929   .text.HAL_PWREx_PVM2Callback:0000000000000000 $t
     /tmp/ccXOdMK7.s:1936   .text.HAL_PWREx_PVM2Callback:0000000000000000 HAL_PWREx_PVM2Callback
     /tmp/ccXOdMK7.s:1949   .text.HAL_PWREx_PVM3Callback:0000000000000000 $t
     /tmp/ccXOdMK7.s:1956   .text.HAL_PWREx_PVM3Callback:0000000000000000 HAL_PWREx_PVM3Callback
     /tmp/ccXOdMK7.s:1969   .text.HAL_PWREx_PVM4Callback:0000000000000000 $t
     /tmp/ccXOdMK7.s:1976   .text.HAL_PWREx_PVM4Callback:0000000000000000 HAL_PWREx_PVM4Callback
     /tmp/ccXOdMK7.s:1989   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 $t
     /tmp/ccXOdMK7.s:1996   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 HAL_PWREx_PVD_PVM_IRQHandler
     /tmp/ccXOdMK7.s:2072   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000060 $d
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.stm32l4xx_hal_conf.h.24.9ebdf529a64add7ef5197540a829be93
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.b6144e50d34fc998dd4c2cfb6387cf91
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.c14bec61d389910444dd6f90923a87b3
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.stm32l4xx_hal_def.h.58.ba9880fce6c06e05c42ff3652190ba19
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc.h.158.28a9a8aed9528254d5d00c542977dfd6
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc_ex.h.22.da7044b74af98b061fec57b6c981623c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio.h.22.cdd02b3dd2d28ab2a58b80abaa62239c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio_ex.h.22.e3066224621c54896e68c044cff2946f
                           .group:0000000000000000 wm4.stm32l4xx_hal_dma.h.22.13f7e03251508cf372ae373347b36e9b
                           .group:0000000000000000 wm4.stm32l4xx_hal_cortex.h.22.cb70b059ea6d04d060ca379a6d57d1fd
                           .group:0000000000000000 wm4.stm32l4xx_ll_adc.h.22.1a01db9155ec232fb5933b76785afed0
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc.h.321.ee3f28f76fc70066e4cbbd758e576892
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc_ex.h.22.fb5e6d418a426c9b079c9adc15fee3b1
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc.h.22.e28f2dff7c14319a60cfaa8412b63a14
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc_ex.h.22.58aa3be0563eedff5893c4b663184cf2
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac.h.22.74749bf4f9405a5fbfaaf1cc4c06eba3
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac_ex.h.22.4e3cedba5893653c1d8ca689fa739e33
                           .group:0000000000000000 wm4.stm32l4xx_hal_exti.h.22.d0c18acb1f51146e775f234290c1ac27
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.22.80f6973ea14060a68f7ca21c1dd39289
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.847.7bdb45d9d57728034960e0aaf38df4fb
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.22.5cbc76724b1dba5416e985e397b92828
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c_ex.h.22.4c81bf9806badb3d50f1da26b08d305a
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.715.a3aff164d469153c75cf623f9ff49d7a
                           .group:0000000000000000 wm4.stm32l4xx_hal_iwdg.h.22.7e954cf06602114b3daf58f5ffbb9e50
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr.h.22.0049bff0a26f90119451fdfe5f426c51
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr_ex.h.22.3d1049b6827a186d471882b21e35998d
                           .group:0000000000000000 wm4.stm32l4xx_hal_rng.h.22.3da3130b715b6ad6f9d8d49653bdfddb
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.22.21d64301309237f9b9255a8c80902f7c
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc_ex.h.22.6c248c3dbae3d1f0fefc4b9faaa2cd0b
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.977.b3b3c98b50a30362b61b120ec4fce236
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim.h.22.6c7398a1c55179e1de4bfd7d5a7564ac
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim_ex.h.22.1a7b532f5010a085c12eee7e9c7b0c21
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart.h.22.5f632bd044c516c02fe0b49488f063f8
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart_ex.h.22.de11c23890d64b2968c97dd6f5dae21a
                           .group:0000000000000000 wm4.stm32l4xx_hal.h.76.993cab68f7f350dd05a21a919b3be96f

UNDEFINED SYMBOLS
SystemCoreClock
HAL_PWR_PVDCallback
