   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_rtc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RTCEx_SetTimeStamp,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RTCEx_SetTimeStamp
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_RTCEx_SetTimeStamp:
  26              	.LFB317:
  27              		.file 1 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c"
   1:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
   2:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ******************************************************************************
   3:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @file    stm32l4xx_hal_rtc_ex.c
   4:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @author  MCD Application Team
   5:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief   Extended RTC HAL module driver.
   6:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This file provides firmware functions to manage the following
   7:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          functionalities of the Real Time Clock (RTC) Extended peripheral:
   8:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *           + RTC Time Stamp functions
   9:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *           + RTC Tamper functions
  10:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *           + RTC Wake-up functions
  11:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *           + Extended Control functions
  12:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *           + Extended RTC features functions
  13:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *
  14:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   @verbatim
  15:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ==============================================================================
  16:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                   ##### How to use this driver #####
  17:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ==============================================================================
  18:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   [..]
  19:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) Enable the RTC domain access.
  20:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
  21:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         format using the HAL_RTC_Init() function.
  22:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
  23:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *** RTC Wakeup configuration ***
  24:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ================================
  25:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   [..]
  26:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTCEx_SetWakeUpTimer()
  27:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         function. You can also configure the RTC Wakeup timer with interrupt mode
  28:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         using the HAL_RTCEx_SetWakeUpTimer_IT() function.
  29:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) To read the RTC WakeUp Counter register, use the HAL_RTCEx_GetWakeUpTimer()
  30:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         function.
  31:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
  32:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *** Outputs configuration ***
  33:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   =============================
  34:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   [..]  The RTC has 2 different outputs:
  35:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) RTC_ALARM: this output is used to manage the RTC Alarm A, Alarm B
  36:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         and WaKeUp signals.
  37:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         To output the selected RTC signal, use the HAL_RTC_Init() function.
  38:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) RTC_CALIB: this output is 512Hz signal or 1Hz.
  39:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         To enable the RTC_CALIB, use the HAL_RTCEx_SetCalibrationOutPut() function.
  40:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) Two pins can be used as RTC_ALARM or RTC_CALIB (PC13, PB2) managed on
  41:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         the RTC_OR register.
  42:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) When the RTC_CALIB or RTC_ALARM output is selected, the RTC_OUT pin is
  43:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         automatically configured in output alternate function.
  44:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
  45:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *** Smooth digital Calibration configuration ***
  46:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ================================================
  47:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   [..]
  48:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) Configure the RTC Original Digital Calibration Value and the corresponding
  49:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         calibration cycle period (32s,16s and 8s) using the HAL_RTCEx_SetSmoothCalib()
  50:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         function.
  51:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
  52:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *** TimeStamp configuration ***
  53:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ===============================
  54:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   [..]
  55:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) Enable the RTC TimeStamp using the HAL_RTCEx_SetTimeStamp() function.
  56:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         You can also configure the RTC TimeStamp with interrupt mode using the
  57:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         HAL_RTCEx_SetTimeStamp_IT() function.
  58:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  59:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         function.
  60:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
  61:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *** Internal TimeStamp configuration ***
  62:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ===============================
  63:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   [..]
  64:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) Enable the RTC internal TimeStamp using the HAL_RTCEx_SetInternalTimeStamp() function.
  65:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         User has to check internal timestamp occurrence using __HAL_RTC_INTERNAL_TIMESTAMP_GET_FLAG
  66:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  67:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         function.
  68:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
  69:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    *** Tamper configuration ***
  70:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    ============================
  71:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    [..]
  72:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      (+) Enable the RTC Tamper and configure the Tamper filter count, trigger Edge
  73:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****          or Level according to the Tamper filter (if equal to 0 Edge else Level)
  74:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****          value, sampling frequency, NoErase, MaskFlag,  precharge or discharge and
  75:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****          Pull-UP using the HAL_RTCEx_SetTamper() function. You can configure RTC Tamper
  76:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****          with interrupt mode using HAL_RTCEx_SetTamper_IT() function.
  77:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      (+) The default configuration of the Tamper erases the backup registers. To avoid
  78:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****          erase, enable the NoErase field on the RTC_TAMPCR register.
  79:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      (+) STM32L412xx and STM32L422xx only : With new RTC tamper configuration, you have to call HAL
  80:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****          perform TAMP base address offset calculation.
  81:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      (+) STM32L412xx and STM32L422xx only : If you don't intend to have tamper using RTC clock, you
  82:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****          by setting ClockEnable inti field to RTC_CLOCK_DISABLE.
  83:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      (+) STM32L412xx and STM32L422xx only : Enable Internal tamper using HAL_RTCEx_SetInternalTampe
  84:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****          setting Interrupt field.
  85:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
  86:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    *** Backup Data Registers configuration ***
  87:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    ===========================================
  88:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    [..]
  89:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  90:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****          function.
  91:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  92:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****          function.
  93:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      (+) STM32L412xx and STM32L422xx only : Before calling these functions you have to call HAL_RTC
  94:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****          perform TAMP base address offset calculation.
  95:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
  96:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    @endverbatim
  97:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ******************************************************************************
  98:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @attention
  99:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *
 100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * All rights reserved.</center></h2>
 102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *
 103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * the "License"; You may not use this file except in compliance with the
 105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * License. You may obtain a copy of the License at:
 106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
 107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *
 108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ******************************************************************************
 109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /* Includes ------------------------------------------------------------------*/
 112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #include "stm32l4xx_hal.h"
 113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
 115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @{
 116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /** @addtogroup RTCEx
 119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief RTC Extended HAL module driver
 120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @{
 121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #ifdef HAL_RTC_MODULE_ENABLED
 124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /* Private typedef -----------------------------------------------------------*/
 126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /* Private define ------------------------------------------------------------*/
 127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /* Private macro -------------------------------------------------------------*/
 128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /* Private variables ---------------------------------------------------------*/
 129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /* Exported functions --------------------------------------------------------*/
 131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions
 133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @{
 134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
 138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief   RTC TimeStamp and Tamper functions
 139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *
 140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @verbatim
 141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****  ===============================================================================
 142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                  ##### RTC TimeStamp and Tamper functions #####
 143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****  ===============================================================================
 144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure TimeStamp feature
 146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @endverbatim
 148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @{
 149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp.
 153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         activated.
 157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin specifies the RTC TimeStamp Pin.
 163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *               The RTC TimeStamp Pin is per default PC13, but for reasons of
 166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *               compatibility, this parameter is required.
 167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
 168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32_t 
 170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
  28              		.loc 1 170 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
 174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
 178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   UNUSED(RTC_TimeStampPin);
 179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
 181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
  34              		.loc 1 181 0
  35 0000 90F82020 		ldrb	r2, [r0, #32]	@ zero_extendqisi2
  36              	.LVL1:
  37 0004 012A     		cmp	r2, #1
  38 0006 25D0     		beq	.L3
 170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmpreg;
  39              		.loc 1 170 0 discriminator 2
  40 0008 10B4     		push	{r4}
  41              		.cfi_def_cfa_offset 4
  42              		.cfi_offset 4, -4
  43              		.loc 1 181 0 discriminator 2
  44 000a 0122     		movs	r2, #1
  45 000c 80F82020 		strb	r2, [r0, #32]
 182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  46              		.loc 1 183 0 discriminator 2
  47 0010 0223     		movs	r3, #2
  48 0012 80F82130 		strb	r3, [r0, #33]
 184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
  49              		.loc 1 186 0 discriminator 2
  50 0016 0468     		ldr	r4, [r0]
  51 0018 A368     		ldr	r3, [r4, #8]
  52 001a 23F40063 		bic	r3, r3, #2048
  53 001e 23F00803 		bic	r3, r3, #8
  54              	.LVL2:
 187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
  55              		.loc 1 188 0 discriminator 2
  56 0022 0B43     		orrs	r3, r3, r1
  57              	.LVL3:
 189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  58              		.loc 1 191 0 discriminator 2
  59 0024 CA21     		movs	r1, #202
  60              	.LVL4:
  61 0026 6162     		str	r1, [r4, #36]
  62 0028 0168     		ldr	r1, [r0]
  63 002a 5324     		movs	r4, #83
  64 002c 4C62     		str	r4, [r1, #36]
 192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
  65              		.loc 1 194 0 discriminator 2
  66 002e 0168     		ldr	r1, [r0]
  67 0030 8B60     		str	r3, [r1, #8]
 195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
  68              		.loc 1 196 0 discriminator 2
  69 0032 0168     		ldr	r1, [r0]
  70 0034 8B68     		ldr	r3, [r1, #8]
  71              	.LVL5:
  72 0036 43F40063 		orr	r3, r3, #2048
  73 003a 8B60     		str	r3, [r1, #8]
 197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
  74              		.loc 1 199 0 discriminator 2
  75 003c 0368     		ldr	r3, [r0]
  76 003e FF21     		movs	r1, #255
  77 0040 5962     		str	r1, [r3, #36]
 200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
 202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
  78              		.loc 1 202 0 discriminator 2
  79 0042 80F82120 		strb	r2, [r0, #33]
 203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
 205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
  80              		.loc 1 205 0 discriminator 2
  81 0046 0023     		movs	r3, #0
  82 0048 80F82030 		strb	r3, [r0, #32]
 206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
  83              		.loc 1 207 0 discriminator 2
  84 004c 1846     		mov	r0, r3
  85              	.LVL6:
 208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
  86              		.loc 1 208 0 discriminator 2
  87 004e 5DF8044B 		ldr	r4, [sp], #4
  88              		.cfi_restore 4
  89              		.cfi_def_cfa_offset 0
  90 0052 7047     		bx	lr
  91              	.LVL7:
  92              	.L3:
 181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
  93              		.loc 1 181 0
  94 0054 0220     		movs	r0, #2
  95              	.LVL8:
  96              		.loc 1 208 0
  97 0056 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE317:
 101              		.section	.text.HAL_RTCEx_SetTimeStamp_IT,"ax",%progbits
 102              		.align	1
 103              		.global	HAL_RTCEx_SetTimeStamp_IT
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	HAL_RTCEx_SetTimeStamp_IT:
 110              	.LFB318:
 209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp with Interrupt.
 212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         activated.
 216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the
 218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the
 220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin Specifies the RTC TimeStamp Pin.
 222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *               The RTC TimeStamp Pin is per default PC13, but for reasons of
 225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *               compatibility, this parameter is required.
 226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
 227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp_IT(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32
 229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 111              		.loc 1 229 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.LVL9:
 230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
 233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
 237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   UNUSED(RTC_TimeStampPin);
 238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
 240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 117              		.loc 1 240 0
 118 0000 90F82020 		ldrb	r2, [r0, #32]	@ zero_extendqisi2
 119              	.LVL10:
 120 0004 012A     		cmp	r2, #1
 121 0006 33D0     		beq	.L10
 229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 122              		.loc 1 229 0 discriminator 2
 123 0008 10B4     		push	{r4}
 124              		.cfi_def_cfa_offset 4
 125              		.cfi_offset 4, -4
 126              		.loc 1 240 0 discriminator 2
 127 000a 0124     		movs	r4, #1
 128 000c 80F82040 		strb	r4, [r0, #32]
 241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 129              		.loc 1 242 0 discriminator 2
 130 0010 0223     		movs	r3, #2
 131 0012 80F82130 		strb	r3, [r0, #33]
 243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 132              		.loc 1 245 0 discriminator 2
 133 0016 0268     		ldr	r2, [r0]
 134 0018 9368     		ldr	r3, [r2, #8]
 135 001a 23F40063 		bic	r3, r3, #2048
 136 001e 23F00803 		bic	r3, r3, #8
 137              	.LVL11:
 246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
 138              		.loc 1 247 0 discriminator 2
 139 0022 0B43     		orrs	r3, r3, r1
 140              	.LVL12:
 248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 141              		.loc 1 250 0 discriminator 2
 142 0024 CA21     		movs	r1, #202
 143              	.LVL13:
 144 0026 5162     		str	r1, [r2, #36]
 145 0028 0268     		ldr	r2, [r0]
 146 002a 5321     		movs	r1, #83
 147 002c 5162     		str	r1, [r2, #36]
 251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 148              		.loc 1 253 0 discriminator 2
 149 002e 0268     		ldr	r2, [r0]
 150 0030 9360     		str	r3, [r2, #8]
 254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 151              		.loc 1 255 0 discriminator 2
 152 0032 0268     		ldr	r2, [r0]
 153 0034 9368     		ldr	r3, [r2, #8]
 154              	.LVL14:
 155 0036 43F40063 		orr	r3, r3, #2048
 156 003a 9360     		str	r3, [r2, #8]
 256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable IT timestamp */
 258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE_IT(hrtc, RTC_IT_TS);
 157              		.loc 1 258 0 discriminator 2
 158 003c 0268     		ldr	r2, [r0]
 159 003e 9368     		ldr	r3, [r2, #8]
 160 0040 43F40043 		orr	r3, r3, #32768
 161 0044 9360     		str	r3, [r2, #8]
 259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* RTC timestamp Interrupt Configuration: EXTI configuration */
 261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 162              		.loc 1 261 0 discriminator 2
 163 0046 0B4B     		ldr	r3, .L15
 164 0048 1A68     		ldr	r2, [r3]
 165 004a 42F40022 		orr	r2, r2, #524288
 166 004e 1A60     		str	r2, [r3]
 262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 167              		.loc 1 262 0 discriminator 2
 168 0050 9A68     		ldr	r2, [r3, #8]
 169 0052 42F40022 		orr	r2, r2, #524288
 170 0056 9A60     		str	r2, [r3, #8]
 263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 171              		.loc 1 265 0 discriminator 2
 172 0058 0368     		ldr	r3, [r0]
 173 005a FF22     		movs	r2, #255
 174 005c 5A62     		str	r2, [r3, #36]
 266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 175              		.loc 1 267 0 discriminator 2
 176 005e 80F82140 		strb	r4, [r0, #33]
 268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
 270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 177              		.loc 1 270 0 discriminator 2
 178 0062 0023     		movs	r3, #0
 179 0064 80F82030 		strb	r3, [r0, #32]
 271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 180              		.loc 1 272 0 discriminator 2
 181 0068 1846     		mov	r0, r3
 182              	.LVL15:
 273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 183              		.loc 1 273 0 discriminator 2
 184 006a 5DF8044B 		ldr	r4, [sp], #4
 185              		.cfi_restore 4
 186              		.cfi_def_cfa_offset 0
 187 006e 7047     		bx	lr
 188              	.LVL16:
 189              	.L10:
 240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 190              		.loc 1 240 0
 191 0070 0220     		movs	r0, #2
 192              	.LVL17:
 193              		.loc 1 273 0
 194 0072 7047     		bx	lr
 195              	.L16:
 196              		.align	2
 197              	.L15:
 198 0074 00040140 		.word	1073808384
 199              		.cfi_endproc
 200              	.LFE318:
 202              		.section	.text.HAL_RTCEx_DeactivateTimeStamp,"ax",%progbits
 203              		.align	1
 204              		.global	HAL_RTCEx_DeactivateTimeStamp
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	HAL_RTCEx_DeactivateTimeStamp:
 211              	.LFB319:
 274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Deactivate TimeStamp.
 277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
 279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTimeStamp(RTC_HandleTypeDef *hrtc)
 281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 212              		.loc 1 281 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL18:
 282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
 285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 218              		.loc 1 285 0
 219 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 220 0004 012B     		cmp	r3, #1
 221 0006 21D0     		beq	.L19
 222              		.loc 1 285 0 is_stmt 0 discriminator 2
 223 0008 0122     		movs	r2, #1
 224 000a 80F82020 		strb	r2, [r0, #32]
 286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 225              		.loc 1 287 0 is_stmt 1 discriminator 2
 226 000e 0223     		movs	r3, #2
 227 0010 80F82130 		strb	r3, [r0, #33]
 288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 228              		.loc 1 290 0 discriminator 2
 229 0014 0368     		ldr	r3, [r0]
 230 0016 CA21     		movs	r1, #202
 231 0018 5962     		str	r1, [r3, #36]
 232 001a 0368     		ldr	r3, [r0]
 233 001c 5321     		movs	r1, #83
 234 001e 5962     		str	r1, [r3, #36]
 291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
 293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_DISABLE_IT(hrtc, RTC_IT_TS);
 235              		.loc 1 293 0 discriminator 2
 236 0020 0168     		ldr	r1, [r0]
 237 0022 8B68     		ldr	r3, [r1, #8]
 238 0024 23F40043 		bic	r3, r3, #32768
 239 0028 8B60     		str	r3, [r1, #8]
 294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 240              		.loc 1 296 0 discriminator 2
 241 002a 0168     		ldr	r1, [r0]
 242 002c 8B68     		ldr	r3, [r1, #8]
 243 002e 23F40063 		bic	r3, r3, #2048
 244 0032 23F00803 		bic	r3, r3, #8
 245              	.LVL19:
 297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 246              		.loc 1 299 0 discriminator 2
 247 0036 8B60     		str	r3, [r1, #8]
 300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 248              		.loc 1 302 0 discriminator 2
 249 0038 0368     		ldr	r3, [r0]
 250              	.LVL20:
 251 003a FF21     		movs	r1, #255
 252              	.LVL21:
 253 003c 5962     		str	r1, [r3, #36]
 303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 254              		.loc 1 304 0 discriminator 2
 255 003e 80F82120 		strb	r2, [r0, #33]
 305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
 307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 256              		.loc 1 307 0 discriminator 2
 257 0042 0023     		movs	r3, #0
 258 0044 80F82030 		strb	r3, [r0, #32]
 308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 259              		.loc 1 309 0 discriminator 2
 260 0048 1846     		mov	r0, r3
 261              	.LVL22:
 262 004a 7047     		bx	lr
 263              	.LVL23:
 264              	.L19:
 285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 265              		.loc 1 285 0
 266 004c 0220     		movs	r0, #2
 267              	.LVL24:
 310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 268              		.loc 1 310 0
 269 004e 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE319:
 273              		.section	.text.HAL_RTCEx_SetInternalTimeStamp,"ax",%progbits
 274              		.align	1
 275              		.global	HAL_RTCEx_SetInternalTimeStamp
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv4-sp-d16
 281              	HAL_RTCEx_SetInternalTimeStamp:
 282              	.LFB320:
 311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Set Internal TimeStamp.
 314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the internal TimeStamp feature.
 315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
 317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 283              		.loc 1 319 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288              	.LVL25:
 320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
 321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 289              		.loc 1 321 0
 290 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 291 0004 012B     		cmp	r3, #1
 292 0006 1AD0     		beq	.L22
 293              		.loc 1 321 0 is_stmt 0 discriminator 2
 294 0008 0122     		movs	r2, #1
 295 000a 80F82020 		strb	r2, [r0, #32]
 322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 296              		.loc 1 323 0 is_stmt 1 discriminator 2
 297 000e 0223     		movs	r3, #2
 298 0010 80F82130 		strb	r3, [r0, #33]
 324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 299              		.loc 1 326 0 discriminator 2
 300 0014 0368     		ldr	r3, [r0]
 301 0016 CA21     		movs	r1, #202
 302 0018 5962     		str	r1, [r3, #36]
 303 001a 0368     		ldr	r3, [r0]
 304 001c 5321     		movs	r1, #83
 305 001e 5962     		str	r1, [r3, #36]
 327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_ENABLE(hrtc);
 306              		.loc 1 329 0 discriminator 2
 307 0020 0168     		ldr	r1, [r0]
 308 0022 8B68     		ldr	r3, [r1, #8]
 309 0024 43F08073 		orr	r3, r3, #16777216
 310 0028 8B60     		str	r3, [r1, #8]
 330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 311              		.loc 1 332 0 discriminator 2
 312 002a 0368     		ldr	r3, [r0]
 313 002c FF21     		movs	r1, #255
 314 002e 5962     		str	r1, [r3, #36]
 333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
 335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 315              		.loc 1 335 0 discriminator 2
 316 0030 80F82120 		strb	r2, [r0, #33]
 336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
 338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 317              		.loc 1 338 0 discriminator 2
 318 0034 0023     		movs	r3, #0
 319 0036 80F82030 		strb	r3, [r0, #32]
 339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 320              		.loc 1 340 0 discriminator 2
 321 003a 1846     		mov	r0, r3
 322              	.LVL26:
 323 003c 7047     		bx	lr
 324              	.LVL27:
 325              	.L22:
 321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 326              		.loc 1 321 0
 327 003e 0220     		movs	r0, #2
 328              	.LVL28:
 341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 329              		.loc 1 341 0
 330 0040 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE320:
 334              		.section	.text.HAL_RTCEx_DeactivateInternalTimeStamp,"ax",%progbits
 335              		.align	1
 336              		.global	HAL_RTCEx_DeactivateInternalTimeStamp
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv4-sp-d16
 342              	HAL_RTCEx_DeactivateInternalTimeStamp:
 343              	.LFB321:
 342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Deactivate Internal TimeStamp.
 345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
 347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateInternalTimeStamp(RTC_HandleTypeDef *hrtc)
 349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 344              		.loc 1 349 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349              	.LVL29:
 350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
 351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 350              		.loc 1 351 0
 351 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 352 0004 012B     		cmp	r3, #1
 353 0006 1AD0     		beq	.L25
 354              		.loc 1 351 0 is_stmt 0 discriminator 2
 355 0008 0122     		movs	r2, #1
 356 000a 80F82020 		strb	r2, [r0, #32]
 352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 357              		.loc 1 353 0 is_stmt 1 discriminator 2
 358 000e 0223     		movs	r3, #2
 359 0010 80F82130 		strb	r3, [r0, #33]
 354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 360              		.loc 1 356 0 discriminator 2
 361 0014 0368     		ldr	r3, [r0]
 362 0016 CA21     		movs	r1, #202
 363 0018 5962     		str	r1, [r3, #36]
 364 001a 0368     		ldr	r3, [r0]
 365 001c 5321     		movs	r1, #83
 366 001e 5962     		str	r1, [r3, #36]
 357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the internal Time Stamp Enable bits */
 359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_DISABLE(hrtc);
 367              		.loc 1 359 0 discriminator 2
 368 0020 0168     		ldr	r1, [r0]
 369 0022 8B68     		ldr	r3, [r1, #8]
 370 0024 23F08073 		bic	r3, r3, #16777216
 371 0028 8B60     		str	r3, [r1, #8]
 360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 372              		.loc 1 362 0 discriminator 2
 373 002a 0368     		ldr	r3, [r0]
 374 002c FF21     		movs	r1, #255
 375 002e 5962     		str	r1, [r3, #36]
 363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 376              		.loc 1 364 0 discriminator 2
 377 0030 80F82120 		strb	r2, [r0, #33]
 365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
 367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 378              		.loc 1 367 0 discriminator 2
 379 0034 0023     		movs	r3, #0
 380 0036 80F82030 		strb	r3, [r0, #32]
 368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 381              		.loc 1 369 0 discriminator 2
 382 003a 1846     		mov	r0, r3
 383              	.LVL30:
 384 003c 7047     		bx	lr
 385              	.LVL31:
 386              	.L25:
 351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 387              		.loc 1 351 0
 388 003e 0220     		movs	r0, #2
 389              	.LVL32:
 370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 390              		.loc 1 370 0
 391 0040 7047     		bx	lr
 392              		.cfi_endproc
 393              	.LFE321:
 395              		.section	.text.HAL_RTCEx_GetTimeStamp,"ax",%progbits
 396              		.align	1
 397              		.global	HAL_RTCEx_GetTimeStamp
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 401              		.fpu fpv4-sp-d16
 403              	HAL_RTCEx_GetTimeStamp:
 404              	.LFB322:
 371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Get the RTC TimeStamp value.
 375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
 377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          if BinMode = RTC_BINARY_ONLY, sTimeStamp->SubSeconds only is used
 378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure
 379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          if BinMode = RTC_BINARY_ONLY, this parameter is not used.
 380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          if BinMode = RTC_BINARY_ONLY, this parameter is not used
 382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          else this parameter can be one of the following values
 383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
 384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
 386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTimeStamp, RTC_
 388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmptime, tmpdate;
 390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = READ_REG(RTC->TSSSR);
 393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (READ_BIT(RTC->ICSR, RTC_ICSR_BIN) != RTC_BINARY_ONLY)
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Check the parameters */
 396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     assert_param(IS_RTC_FORMAT(Format));
 397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Get the TimeStamp time and date registers values */
 399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tmptime = READ_BIT(RTC->TSTR, RTC_TR_RESERVED_MASK);
 400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tmpdate = READ_BIT(RTC->TSDR, RTC_DR_RESERVED_MASK);
 401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Fill the Time structure fields with the read parameters */
 403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStamp->Hours = (uint8_t)((tmptime & (RTC_TSTR_HT | RTC_TSTR_HU)) >> RTC_TSTR_HU_Pos);
 404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)((tmptime & (RTC_TSTR_MNT | RTC_TSTR_MNU)) >> RTC_TSTR_MNU_Pos);
 405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)((tmptime & (RTC_TSTR_ST | RTC_TSTR_SU)) >> RTC_TSTR_SU_Pos);
 406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TSTR_PM)) >> RTC_TSTR_PM_Pos);
 407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStamp->SubSeconds = READ_BIT(RTC->TSSSR, RTC_TSSSR_SS);
 408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Fill the Date structure fields with the read parameters */
 410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStampDate->Year = 0U;
 411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStampDate->Month = (uint8_t)((tmpdate & (RTC_TSDR_MT | RTC_TSDR_MU)) >> RTC_TSDR_MU_Pos);
 412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStampDate->Date = (uint8_t)(tmpdate & (RTC_TSDR_DT | RTC_TSDR_DU));
 413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_TSDR_WDU)) >> RTC_TSDR_WDU_Pos);
 414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Check the input parameters format */
 416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (Format == RTC_FORMAT_BIN)
 417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Convert the TimeStamp structure parameters to Binary format */
 419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       sTimeStamp->Hours = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Convert the DateTimeStamp structure parameters to Binary format */
 424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       sTimeStampDate->Month = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       sTimeStampDate->Date = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flags */
 431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   WRITE_REG(RTC->SCR, (RTC_SCR_CITSF | RTC_SCR_CTSF));
 432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
 436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Get the RTC TimeStamp value.
 439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
 441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure
 442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
 445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
 447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTimeStamp, RTC_
 449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 405              		.loc 1 449 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              	.LVL33:
 410 0000 70B5     		push	{r4, r5, r6, lr}
 411              		.cfi_def_cfa_offset 16
 412              		.cfi_offset 4, -16
 413              		.cfi_offset 5, -12
 414              		.cfi_offset 6, -8
 415              		.cfi_offset 14, -4
 416 0002 0646     		mov	r6, r0
 417 0004 0C46     		mov	r4, r1
 418 0006 1546     		mov	r5, r2
 450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmptime, tmpdate;
 451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
 453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_FORMAT(Format));
 454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the TimeStamp time and date registers values */
 456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmptime = (uint32_t)(hrtc->Instance->TSTR & RTC_TR_RESERVED_MASK);
 419              		.loc 1 456 0
 420 0008 0168     		ldr	r1, [r0]
 421              	.LVL34:
 422 000a 0A6B     		ldr	r2, [r1, #48]
 423              	.LVL35:
 424 000c 02F07F32 		and	r2, r2, #2139062143
 425 0010 22F0FE42 		bic	r2, r2, #2130706432
 426              	.LVL36:
 457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpdate = (uint32_t)(hrtc->Instance->TSDR & RTC_DR_RESERVED_MASK);
 427              		.loc 1 457 0
 428 0014 496B     		ldr	r1, [r1, #52]
 429 0016 21F07F41 		bic	r1, r1, #-16777216
 430 001a 21F0C001 		bic	r1, r1, #192
 431              	.LVL37:
 458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Fill the Time structure fields with the read parameters */
 460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   sTimeStamp->Hours = (uint8_t)((tmptime & (RTC_TSTR_HT | RTC_TSTR_HU)) >> RTC_TSTR_HU_Pos);
 432              		.loc 1 460 0
 433 001e C2F30540 		ubfx	r0, r2, #16, #6
 434              	.LVL38:
 435 0022 2070     		strb	r0, [r4]
 461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   sTimeStamp->Minutes = (uint8_t)((tmptime & (RTC_TSTR_MNT | RTC_TSTR_MNU)) >> RTC_TSTR_MNU_Pos);
 436              		.loc 1 461 0
 437 0024 C2F30620 		ubfx	r0, r2, #8, #7
 438 0028 6070     		strb	r0, [r4, #1]
 462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   sTimeStamp->Seconds = (uint8_t)((tmptime & (RTC_TSTR_ST | RTC_TSTR_SU)) >> RTC_TSTR_SU_Pos);
 439              		.loc 1 462 0
 440 002a A270     		strb	r2, [r4, #2]
 463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TSTR_PM)) >> RTC_TSTR_PM_Pos);
 441              		.loc 1 463 0
 442 002c 920D     		lsrs	r2, r2, #22
 443              	.LVL39:
 444 002e E270     		strb	r2, [r4, #3]
 464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = (uint32_t) hrtc->Instance->TSSSR;
 445              		.loc 1 464 0
 446 0030 3268     		ldr	r2, [r6]
 447 0032 926B     		ldr	r2, [r2, #56]
 448 0034 6260     		str	r2, [r4, #4]
 465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Fill the Date structure fields with the read parameters */
 467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   sTimeStampDate->Year = 0U;
 449              		.loc 1 467 0
 450 0036 0022     		movs	r2, #0
 451 0038 EA70     		strb	r2, [r5, #3]
 468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   sTimeStampDate->Month = (uint8_t)((tmpdate & (RTC_TSDR_MT | RTC_TSDR_MU)) >> RTC_TSDR_MU_Pos);
 452              		.loc 1 468 0
 453 003a C1F30422 		ubfx	r2, r1, #8, #5
 454 003e 6A70     		strb	r2, [r5, #1]
 469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   sTimeStampDate->Date = (uint8_t)((tmpdate & (RTC_TSDR_DT | RTC_TSDR_DU)) >> RTC_TSDR_DU_Pos);
 455              		.loc 1 469 0
 456 0040 A970     		strb	r1, [r5, #2]
 470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_TSDR_WDU)) >> RTC_TSDR_WDU_Pos);
 457              		.loc 1 470 0
 458 0042 C1F34231 		ubfx	r1, r1, #13, #3
 459              	.LVL40:
 460 0046 2970     		strb	r1, [r5]
 471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the input parameters format */
 473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (Format == RTC_FORMAT_BIN)
 461              		.loc 1 473 0
 462 0048 6BB1     		cbz	r3, .L29
 463              	.LVL41:
 464              	.L27:
 474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Convert the TimeStamp structure parameters to Binary format */
 476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStamp->Hours = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Convert the DateTimeStamp structure parameters to Binary format */
 481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStampDate->Month = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStampDate->Date = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flags */
 487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_INTERNAL_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_ITSF);
 465              		.loc 1 487 0
 466 004a 3168     		ldr	r1, [r6]
 467 004c CA68     		ldr	r2, [r1, #12]
 468 004e D2B2     		uxtb	r2, r2
 469 0050 114B     		ldr	r3, .L30
 470 0052 1343     		orrs	r3, r3, r2
 471 0054 CB60     		str	r3, [r1, #12]
 488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 472              		.loc 1 488 0
 473 0056 3268     		ldr	r2, [r6]
 474 0058 D368     		ldr	r3, [r2, #12]
 475 005a DBB2     		uxtb	r3, r3
 476 005c 63F40863 		orn	r3, r3, #2176
 477 0060 D360     		str	r3, [r2, #12]
 489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 478              		.loc 1 491 0
 479 0062 0020     		movs	r0, #0
 480 0064 70BD     		pop	{r4, r5, r6, pc}
 481              	.LVL42:
 482              	.L29:
 476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 483              		.loc 1 476 0
 484 0066 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 485 0068 FFF7FEFF 		bl	RTC_Bcd2ToByte
 486              	.LVL43:
 487 006c 2070     		strb	r0, [r4]
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 488              		.loc 1 477 0
 489 006e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 490 0070 FFF7FEFF 		bl	RTC_Bcd2ToByte
 491              	.LVL44:
 492 0074 6070     		strb	r0, [r4, #1]
 478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 493              		.loc 1 478 0
 494 0076 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 495 0078 FFF7FEFF 		bl	RTC_Bcd2ToByte
 496              	.LVL45:
 497 007c A070     		strb	r0, [r4, #2]
 481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStampDate->Date = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 498              		.loc 1 481 0
 499 007e 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 500 0080 FFF7FEFF 		bl	RTC_Bcd2ToByte
 501              	.LVL46:
 502 0084 6870     		strb	r0, [r5, #1]
 482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 503              		.loc 1 482 0
 504 0086 A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 505 0088 FFF7FEFF 		bl	RTC_Bcd2ToByte
 506              	.LVL47:
 507 008c A870     		strb	r0, [r5, #2]
 483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 508              		.loc 1 483 0
 509 008e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 510 0090 FFF7FEFF 		bl	RTC_Bcd2ToByte
 511              	.LVL48:
 512 0094 2870     		strb	r0, [r5]
 513 0096 D8E7     		b	.L27
 514              	.L31:
 515              		.align	2
 516              	.L30:
 517 0098 7FFFFDFF 		.word	-131201
 518              		.cfi_endproc
 519              	.LFE322:
 521              		.section	.text.HAL_RTCEx_TimeStampEventCallback,"ax",%progbits
 522              		.align	1
 523              		.weak	HAL_RTCEx_TimeStampEventCallback
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 527              		.fpu fpv4-sp-d16
 529              	HAL_RTCEx_TimeStampEventCallback:
 530              	.LFB324:
 492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
 493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp interrupt request.
 496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval None
 498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
 502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process TAMP instance pointer */
 505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset);
 506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((hrtc->Instance->MISR & RTC_MISR_TSMF) != 0u)
 511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Call TimeStampEvent registered Callback */
 514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->TimeStampEventCallback(hrtc);
 515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
 516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     HAL_RTCEx_TimeStampEventCallback(hrtc);
 517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Not immediatly clear flags because the content of RTC_TSTR and RTC_TSDR arecleared when TSF 
 519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->Instance->SCR = RTC_SCR_CTSF;
 520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get interrupt status */
 523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmp = tamp->MISR;
 524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Immediatly clear flags */
 526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->SCR = tmp;
 527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER1_SUPPORT)
 529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check Tamper1 status */
 530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_1) == RTC_TAMPER_1)
 531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Call Tamper 1 Event registered Callback */
 534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->Tamper1EventCallback(hrtc);
 535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
 536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Tamper1 callback */
 537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper1EventCallback(hrtc);
 538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER1_SUPPORT */
 541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check Tamper2 status */
 543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_2) == RTC_TAMPER_2)
 544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Call Tamper 2 Event registered Callback */
 547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->Tamper2EventCallback(hrtc);
 548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
 549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Tamper2 callback */
 550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper2EventCallback(hrtc);
 551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
 555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check Tamper3 status */
 556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((tmp & RTC_TAMPER_3) == RTC_TAMPER_3)
 557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Call Tamper 3 Event registered Callback */
 560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->Tamper3EventCallback(hrtc);
 561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
 562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Tamper3 callback */
 563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     HAL_RTCEx_Tamper3EventCallback(hrtc);
 564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
 568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
 570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
 574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
 576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status and pending flag status */
 581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (__HAL_RTC_TIMESTAMP_GET_IT_SOURCE(hrtc, RTC_IT_TS) != 0U)
 582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) != 0U)
 584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* TIMESTAMP callback */
 586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       hrtc->TimeStampEventCallback(hrtc);
 588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       HAL_RTCEx_TimeStampEventCallback(hrtc);
 590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP interrupt pending bit (this will clear timestamp time and date registe
 593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER1_SUPPORT)
 598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the Tamper1 interrupt source enable status and pending flag status */
 599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP1) != 0U)
 600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) != 0U)
 602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Clear the Tamper1 interrupt pending bit */
 604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Tamper1 callback */
 607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       hrtc->Tamper1EventCallback(hrtc);
 609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper1EventCallback(hrtc);
 611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER1_SUPPORT */
 615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the Tamper2 interrupt source enable status and pending flag status */
 617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP2) != 0U)
 618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) != 0U)
 620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Clear the Tamper2 interrupt pending bit */
 622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Tamper2 callback */
 625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       hrtc->Tamper2EventCallback(hrtc);
 627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper2EventCallback(hrtc);
 629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
 634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the Tamper3 interrupts source enable status */
 635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP | RTC_IT_TAMP3) != 0U)
 636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) != 0U)
 638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Clear the Tamper3 interrupt pending bit */
 640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Tamper3 callback */
 643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       hrtc->Tamper3EventCallback(hrtc);
 645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
 646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper3EventCallback(hrtc);
 647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
 651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
 653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
 656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  TimeStamp callback.
 659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval None
 661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_TimeStampEventCallback(RTC_HandleTypeDef *hrtc)
 663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 531              		.loc 1 663 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536              	.LVL49:
 664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****             the HAL_RTCEx_TimeStampEventCallback could be implemented in the user file
 669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    */
 670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 537              		.loc 1 670 0
 538 0000 7047     		bx	lr
 539              		.cfi_endproc
 540              	.LFE324:
 542              		.section	.text.HAL_RTCEx_PollForTimeStampEvent,"ax",%progbits
 543              		.align	1
 544              		.global	HAL_RTCEx_PollForTimeStampEvent
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv4-sp-d16
 550              	HAL_RTCEx_PollForTimeStampEvent:
 551              	.LFB325:
 671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp polling request.
 674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
 677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTimeStampEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 552              		.loc 1 679 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              	.LVL50:
 557 0000 70B5     		push	{r4, r5, r6, lr}
 558              		.cfi_def_cfa_offset 16
 559              		.cfi_offset 4, -16
 560              		.cfi_offset 5, -12
 561              		.cfi_offset 6, -8
 562              		.cfi_offset 14, -4
 563 0002 0446     		mov	r4, r0
 564 0004 0D46     		mov	r5, r1
 680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 565              		.loc 1 680 0
 566 0006 FFF7FEFF 		bl	HAL_GetTick
 567              	.LVL51:
 568 000a 0646     		mov	r6, r0
 569              	.LVL52:
 570              	.L37:
 681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   while (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) == 0U)
 571              		.loc 1 682 0
 572 000c 2368     		ldr	r3, [r4]
 573 000e DA68     		ldr	r2, [r3, #12]
 574 0010 12F4006F 		tst	r2, #2048
 575 0014 1BD1     		bne	.L41
 683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSOVF) != 0U)
 576              		.loc 1 684 0
 577 0016 DA68     		ldr	r2, [r3, #12]
 578 0018 12F4805F 		tst	r2, #4096
 579 001c 0DD1     		bne	.L42
 685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP OverRun Flag */
 687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSOVF);
 688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Change TIMESTAMP state */
 690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       return HAL_ERROR;
 693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 580              		.loc 1 695 0
 581 001e B5F1FF3F 		cmp	r5, #-1
 582 0022 F3D0     		beq	.L37
 696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 583              		.loc 1 697 0
 584 0024 FFF7FEFF 		bl	HAL_GetTick
 585              	.LVL53:
 586 0028 801B     		subs	r0, r0, r6
 587 002a A842     		cmp	r0, r5
 588 002c 01D8     		bhi	.L38
 589              		.loc 1 697 0 is_stmt 0 discriminator 1
 590 002e 002D     		cmp	r5, #0
 591 0030 ECD1     		bne	.L37
 592              	.L38:
 698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
 699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 593              		.loc 1 699 0 is_stmt 1
 594 0032 0320     		movs	r0, #3
 595 0034 84F82100 		strb	r0, [r4, #33]
 700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 596              		.loc 1 700 0
 597 0038 0DE0     		b	.L36
 598              	.L42:
 687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 599              		.loc 1 687 0
 600 003a DA68     		ldr	r2, [r3, #12]
 601 003c D2B2     		uxtb	r2, r2
 602 003e 62F48452 		orn	r2, r2, #4224
 603 0042 DA60     		str	r2, [r3, #12]
 690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 604              		.loc 1 690 0
 605 0044 0423     		movs	r3, #4
 606 0046 84F82130 		strb	r3, [r4, #33]
 692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 607              		.loc 1 692 0
 608 004a 0120     		movs	r0, #1
 609 004c 03E0     		b	.L36
 610              	.L41:
 701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
 702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
 706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 611              		.loc 1 706 0
 612 004e 0123     		movs	r3, #1
 613 0050 84F82130 		strb	r3, [r4, #33]
 707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 614              		.loc 1 708 0
 615 0054 0020     		movs	r0, #0
 616              	.L36:
 709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 617              		.loc 1 709 0
 618 0056 70BD     		pop	{r4, r5, r6, pc}
 619              		.cfi_endproc
 620              	.LFE325:
 622              		.section	.text.HAL_RTCEx_SetWakeUpTimer,"ax",%progbits
 623              		.align	1
 624              		.global	HAL_RTCEx_SetWakeUpTimer
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 628              		.fpu fpv4-sp-d16
 630              	HAL_RTCEx_SetWakeUpTimer:
 631              	.LFB326:
 710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @}
 713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group2
 716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief    RTC Wake-up functions
 717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *
 718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @verbatim
 719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****  ===============================================================================
 720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                         ##### RTC Wake-up functions #####
 721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****  ===============================================================================
 722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure Wake-up feature
 724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @endverbatim
 726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @{
 727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Set wake up timer.
 731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
 733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
 734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
 735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint32_
 737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 632              		.loc 1 737 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              	.LVL54:
 637 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 638              		.cfi_def_cfa_offset 24
 639              		.cfi_offset 3, -24
 640              		.cfi_offset 4, -20
 641              		.cfi_offset 5, -16
 642              		.cfi_offset 6, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tickstart;
 739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
 741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
 742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
 743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
 745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 645              		.loc 1 745 0
 646 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 647 0006 012B     		cmp	r3, #1
 648 0008 47D0     		beq	.L48
 649 000a 1646     		mov	r6, r2
 650 000c 0D46     		mov	r5, r1
 651 000e 0446     		mov	r4, r0
 652              		.loc 1 745 0 is_stmt 0 discriminator 2
 653 0010 0123     		movs	r3, #1
 654 0012 80F82030 		strb	r3, [r0, #32]
 746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 655              		.loc 1 747 0 is_stmt 1 discriminator 2
 656 0016 0223     		movs	r3, #2
 657 0018 80F82130 		strb	r3, [r0, #33]
 748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 658              		.loc 1 750 0 discriminator 2
 659 001c 0368     		ldr	r3, [r0]
 660 001e CA22     		movs	r2, #202
 661              	.LVL55:
 662 0020 5A62     		str	r2, [r3, #36]
 663 0022 0368     		ldr	r3, [r0]
 664 0024 5322     		movs	r2, #83
 665 0026 5A62     		str	r2, [r3, #36]
 751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear WUTE in RTC_CR to disable the wakeup timer */
 753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   CLEAR_BIT(hrtc->Instance->CR, RTC_CR_WUTE);
 666              		.loc 1 753 0 discriminator 2
 667 0028 0268     		ldr	r2, [r0]
 668 002a 9368     		ldr	r3, [r2, #8]
 669 002c 23F48063 		bic	r3, r3, #1024
 670 0030 9360     		str	r3, [r2, #8]
 754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Poll WUTWF until it is set in RTC_ICSR to make sure the access to wakeup autoreload
 756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      counter and to WUCKSEL[2:0] bits is allowed. This step must be skipped in
 757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      calendar initialization mode. */
 758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (READ_BIT(hrtc->Instance->ICSR, RTC_ICSR_INITF) == 0U)
 760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
 761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (READ_BIT(hrtc->Instance->ISR, RTC_ISR_INITF) == 0U)
 671              		.loc 1 761 0 discriminator 2
 672 0032 0368     		ldr	r3, [r0]
 673 0034 DB68     		ldr	r3, [r3, #12]
 674 0036 13F0400F 		tst	r3, #64
 675 003a 16D0     		beq	.L50
 676              	.LVL56:
 677              	.L45:
 762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     while (READ_BIT(hrtc->Instance->ICSR, RTC_ICSR_WUTWF) == 0U)
 767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
 768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     while (READ_BIT(hrtc->Instance->ISR, RTC_ISR_WUTWF) == 0U)
 769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
 773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
 774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         /* Process Unlocked */
 779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
 783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the clock source */
 787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   MODIFY_REG(hrtc->Instance->CR, RTC_CR_WUCKSEL, (uint32_t)WakeUpClock);
 678              		.loc 1 787 0
 679 003c 2168     		ldr	r1, [r4]
 680 003e 8B68     		ldr	r3, [r1, #8]
 681 0040 23F00703 		bic	r3, r3, #7
 682 0044 3343     		orrs	r3, r3, r6
 683 0046 8B60     		str	r3, [r1, #8]
 788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
 790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   WRITE_REG(hrtc->Instance->WUTR, (uint32_t)WakeUpCounter);
 684              		.loc 1 790 0
 685 0048 2368     		ldr	r3, [r4]
 686 004a 5D61     		str	r5, [r3, #20]
 791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
 793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   SET_BIT(hrtc->Instance->CR, RTC_CR_WUTE);
 687              		.loc 1 793 0
 688 004c 2268     		ldr	r2, [r4]
 689 004e 9368     		ldr	r3, [r2, #8]
 690 0050 43F48063 		orr	r3, r3, #1024
 691 0054 9360     		str	r3, [r2, #8]
 794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 692              		.loc 1 796 0
 693 0056 2368     		ldr	r3, [r4]
 694 0058 FF22     		movs	r2, #255
 695 005a 5A62     		str	r2, [r3, #36]
 797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 696              		.loc 1 798 0
 697 005c 0123     		movs	r3, #1
 698 005e 84F82130 		strb	r3, [r4, #33]
 799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
 801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 699              		.loc 1 801 0
 700 0062 0020     		movs	r0, #0
 701 0064 84F82000 		strb	r0, [r4, #32]
 702              	.LVL57:
 703              	.L44:
 802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 704              		.loc 1 804 0
 705 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 706              	.LVL58:
 707              	.L50:
 764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 708              		.loc 1 764 0
 709 006a FFF7FEFF 		bl	HAL_GetTick
 710              	.LVL59:
 711 006e 0746     		mov	r7, r0
 712              	.LVL60:
 713              	.L46:
 768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 714              		.loc 1 768 0
 715 0070 2368     		ldr	r3, [r4]
 716 0072 DB68     		ldr	r3, [r3, #12]
 717 0074 13F0040F 		tst	r3, #4
 718 0078 E0D1     		bne	.L45
 771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
 719              		.loc 1 771 0
 720 007a FFF7FEFF 		bl	HAL_GetTick
 721              	.LVL61:
 722 007e C01B     		subs	r0, r0, r7
 723 0080 B0F57A7F 		cmp	r0, #1000
 724 0084 F4D9     		bls	.L46
 774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 725              		.loc 1 774 0
 726 0086 2368     		ldr	r3, [r4]
 727 0088 FF22     		movs	r2, #255
 728 008a 5A62     		str	r2, [r3, #36]
 776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 729              		.loc 1 776 0
 730 008c 0320     		movs	r0, #3
 731 008e 84F82100 		strb	r0, [r4, #33]
 779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 732              		.loc 1 779 0
 733 0092 0023     		movs	r3, #0
 734 0094 84F82030 		strb	r3, [r4, #32]
 781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
 735              		.loc 1 781 0
 736 0098 E6E7     		b	.L44
 737              	.LVL62:
 738              	.L48:
 745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 739              		.loc 1 745 0
 740 009a 0220     		movs	r0, #2
 741              	.LVL63:
 742 009c E4E7     		b	.L44
 743              		.cfi_endproc
 744              	.LFE326:
 746              		.section	.text.HAL_RTCEx_SetWakeUpTimer_IT,"ax",%progbits
 747              		.align	1
 748              		.global	HAL_RTCEx_SetWakeUpTimer_IT
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 752              		.fpu fpv4-sp-d16
 754              	HAL_RTCEx_SetWakeUpTimer_IT:
 755              	.LFB327:
 805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Set wake up timer with interrupt.
 808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
 810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock
 811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  WakeUpAutoClr Wake up auto clear value (look at WUTOCLR in reference manual)
 812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *                       - Only available for STM32L412xx and STM32L422xx
 813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *                       - No effect if WakeUpAutoClr is set to zero
 814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *                       - This feature is meaningful in case of Low power mode to avoid any RTC s
 815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *                         That is why when WakeUpAutoClr is set, EXTI is configured as EVENT inst
 816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
 817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
 820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
 821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
 822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 756              		.loc 1 823 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 760              	.LVL64:
 761 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 762              		.cfi_def_cfa_offset 24
 763              		.cfi_offset 3, -24
 764              		.cfi_offset 4, -20
 765              		.cfi_offset 5, -16
 766              		.cfi_offset 6, -12
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tickstart;
 825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
 827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
 828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
 829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* (0x0000<=WUTOCLR<=WUT) */
 831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(WakeUpAutoClr <= WakeUpCounter);
 832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
 835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 769              		.loc 1 835 0
 770 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 771 0006 012B     		cmp	r3, #1
 772 0008 5BD0     		beq	.L56
 773 000a 1546     		mov	r5, r2
 774 000c 0E46     		mov	r6, r1
 775 000e 0446     		mov	r4, r0
 776              		.loc 1 835 0 is_stmt 0 discriminator 2
 777 0010 0123     		movs	r3, #1
 778 0012 80F82030 		strb	r3, [r0, #32]
 836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 779              		.loc 1 837 0 is_stmt 1 discriminator 2
 780 0016 0223     		movs	r3, #2
 781 0018 80F82130 		strb	r3, [r0, #33]
 838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 782              		.loc 1 840 0 discriminator 2
 783 001c 0368     		ldr	r3, [r0]
 784 001e CA22     		movs	r2, #202
 785              	.LVL65:
 786 0020 5A62     		str	r2, [r3, #36]
 787 0022 0368     		ldr	r3, [r0]
 788 0024 5322     		movs	r2, #83
 789 0026 5A62     		str	r2, [r3, #36]
 841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear WUTE in RTC_CR to disable the wakeup timer */
 843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   CLEAR_BIT(hrtc->Instance->CR, RTC_CR_WUTE);
 790              		.loc 1 843 0 discriminator 2
 791 0028 0268     		ldr	r2, [r0]
 792 002a 9368     		ldr	r3, [r2, #8]
 793 002c 23F48063 		bic	r3, r3, #1024
 794 0030 9360     		str	r3, [r2, #8]
 844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear flag Wake-Up */
 846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 795              		.loc 1 846 0 discriminator 2
 796 0032 0268     		ldr	r2, [r0]
 797 0034 D368     		ldr	r3, [r2, #12]
 798 0036 DBB2     		uxtb	r3, r3
 799 0038 63F49063 		orn	r3, r3, #1152
 800 003c D360     		str	r3, [r2, #12]
 847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Poll WUTWF until it is set in RTC_ICSR to make sure the access to wakeup autoreload
 849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      counter and to WUCKSEL[2:0] bits is allowed. This step must be skipped in
 850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****      calendar initialization mode. */
 851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (READ_BIT(hrtc->Instance->ICSR, RTC_ICSR_INITF) == 0U)
 853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
 854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (READ_BIT(hrtc->Instance->ISR, RTC_ISR_INITF) == 0U)
 801              		.loc 1 854 0 discriminator 2
 802 003e 0368     		ldr	r3, [r0]
 803 0040 DB68     		ldr	r3, [r3, #12]
 804 0042 13F0400F 		tst	r3, #64
 805 0046 24D0     		beq	.L58
 806              	.LVL66:
 807              	.L53:
 855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     while (READ_BIT(hrtc->Instance->ICSR, RTC_ICSR_WUTWF) == 0U)
 860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
 861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     while (READ_BIT(hrtc->Instance->ISR, RTC_ISR_WUTWF) == 0U)
 862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
 866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
 867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         /* Process Unlocked */
 872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
 876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter and auto clear value */
 881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)(WakeUpCounter | (WakeUpAutoClr << RTC_WUTR_WUTOCLR_Pos));
 882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
 883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
 884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 808              		.loc 1 884 0
 809 0048 2368     		ldr	r3, [r4]
 810 004a 5E61     		str	r6, [r3, #20]
 885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the clock source */
 888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   MODIFY_REG(hrtc->Instance->CR, RTC_CR_WUCKSEL, (uint32_t)WakeUpClock);
 811              		.loc 1 888 0
 812 004c 2168     		ldr	r1, [r4]
 813 004e 8B68     		ldr	r3, [r1, #8]
 814 0050 23F00703 		bic	r3, r3, #7
 815 0054 2B43     		orrs	r3, r3, r5
 816 0056 8B60     		str	r3, [r1, #8]
 889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* In case of WUT autoclr, the IRQ handler should not be called */
 892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (WakeUpAutoClr != 0u)
 893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* RTC WakeUpTimer EXTI Configuration: Event configuration */
 895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_EVENT();
 896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   else
 898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* RTC WakeUpTimer EXTI Configuration: Interrupt configuration */
 900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else /* defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q
 903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 817              		.loc 1 903 0
 818 0058 1B4B     		ldr	r3, .L59
 819 005a 1A68     		ldr	r2, [r3]
 820 005c 42F48012 		orr	r2, r2, #1048576
 821 0060 1A60     		str	r2, [r3]
 904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4
 905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_EDGE();
 822              		.loc 1 906 0
 823 0062 9A68     		ldr	r2, [r3, #8]
 824 0064 42F48012 		orr	r2, r2, #1048576
 825 0068 9A60     		str	r2, [r3, #8]
 907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the Interrupt in the RTC_CR register */
 909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(hrtc, RTC_IT_WUT);
 826              		.loc 1 909 0
 827 006a 2268     		ldr	r2, [r4]
 828 006c 9368     		ldr	r3, [r2, #8]
 829 006e 43F48043 		orr	r3, r3, #16384
 830 0072 9360     		str	r3, [r2, #8]
 910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
 912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 831              		.loc 1 912 0
 832 0074 2268     		ldr	r2, [r4]
 833 0076 9368     		ldr	r3, [r2, #8]
 834 0078 43F48063 		orr	r3, r3, #1024
 835 007c 9360     		str	r3, [r2, #8]
 913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 836              		.loc 1 915 0
 837 007e 2368     		ldr	r3, [r4]
 838 0080 FF22     		movs	r2, #255
 839 0082 5A62     		str	r2, [r3, #36]
 916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 840              		.loc 1 917 0
 841 0084 0123     		movs	r3, #1
 842 0086 84F82130 		strb	r3, [r4, #33]
 918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
 920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 843              		.loc 1 920 0
 844 008a 0020     		movs	r0, #0
 845 008c 84F82000 		strb	r0, [r4, #32]
 846              	.LVL67:
 847              	.L52:
 921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 848              		.loc 1 923 0
 849 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 850              	.LVL68:
 851              	.L58:
 857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 852              		.loc 1 857 0
 853 0092 FFF7FEFF 		bl	HAL_GetTick
 854              	.LVL69:
 855 0096 0746     		mov	r7, r0
 856              	.LVL70:
 857              	.L54:
 861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 858              		.loc 1 861 0
 859 0098 2368     		ldr	r3, [r4]
 860 009a DB68     		ldr	r3, [r3, #12]
 861 009c 13F0040F 		tst	r3, #4
 862 00a0 D2D1     		bne	.L53
 864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
 863              		.loc 1 864 0
 864 00a2 FFF7FEFF 		bl	HAL_GetTick
 865              	.LVL71:
 866 00a6 C01B     		subs	r0, r0, r7
 867 00a8 B0F57A7F 		cmp	r0, #1000
 868 00ac F4D9     		bls	.L54
 867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 869              		.loc 1 867 0
 870 00ae 2368     		ldr	r3, [r4]
 871 00b0 FF22     		movs	r2, #255
 872 00b2 5A62     		str	r2, [r3, #36]
 869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 873              		.loc 1 869 0
 874 00b4 0320     		movs	r0, #3
 875 00b6 84F82100 		strb	r0, [r4, #33]
 872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 876              		.loc 1 872 0
 877 00ba 0023     		movs	r3, #0
 878 00bc 84F82030 		strb	r3, [r4, #32]
 874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
 879              		.loc 1 874 0
 880 00c0 E6E7     		b	.L52
 881              	.LVL72:
 882              	.L56:
 835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 883              		.loc 1 835 0
 884 00c2 0220     		movs	r0, #2
 885              	.LVL73:
 886 00c4 E4E7     		b	.L52
 887              	.L60:
 888 00c6 00BF     		.align	2
 889              	.L59:
 890 00c8 00040140 		.word	1073808384
 891              		.cfi_endproc
 892              	.LFE327:
 894              		.section	.text.HAL_RTCEx_DeactivateWakeUpTimer,"ax",%progbits
 895              		.align	1
 896              		.global	HAL_RTCEx_DeactivateWakeUpTimer
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 900              		.fpu fpv4-sp-d16
 902              	HAL_RTCEx_DeactivateWakeUpTimer:
 903              	.LFB328:
 924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Deactivate wake up timer counter.
 927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
 929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateWakeUpTimer(RTC_HandleTypeDef *hrtc)
 931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 904              		.loc 1 931 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              	.LVL74:
 909 0000 38B5     		push	{r3, r4, r5, lr}
 910              		.cfi_def_cfa_offset 16
 911              		.cfi_offset 3, -16
 912              		.cfi_offset 4, -12
 913              		.cfi_offset 5, -8
 914              		.cfi_offset 14, -4
 932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tickstart;
 933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
 935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 915              		.loc 1 935 0
 916 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 917 0006 012B     		cmp	r3, #1
 918 0008 37D0     		beq	.L65
 919 000a 0446     		mov	r4, r0
 920              		.loc 1 935 0 is_stmt 0 discriminator 2
 921 000c 0123     		movs	r3, #1
 922 000e 80F82030 		strb	r3, [r0, #32]
 936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 923              		.loc 1 937 0 is_stmt 1 discriminator 2
 924 0012 0223     		movs	r3, #2
 925 0014 80F82130 		strb	r3, [r0, #33]
 938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 926              		.loc 1 940 0 discriminator 2
 927 0018 0368     		ldr	r3, [r0]
 928 001a CA22     		movs	r2, #202
 929 001c 5A62     		str	r2, [r3, #36]
 930 001e 0368     		ldr	r3, [r0]
 931 0020 5322     		movs	r2, #83
 932 0022 5A62     		str	r2, [r3, #36]
 941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the Wakeup Timer */
 943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 933              		.loc 1 943 0 discriminator 2
 934 0024 0268     		ldr	r2, [r0]
 935 0026 9368     		ldr	r3, [r2, #8]
 936 0028 23F48063 		bic	r3, r3, #1024
 937 002c 9360     		str	r3, [r2, #8]
 944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
 946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(hrtc, RTC_IT_WUT);
 938              		.loc 1 946 0 discriminator 2
 939 002e 0268     		ldr	r2, [r0]
 940 0030 9368     		ldr	r3, [r2, #8]
 941 0032 23F48043 		bic	r3, r3, #16384
 942 0036 9360     		str	r3, [r2, #8]
 947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 943              		.loc 1 948 0 discriminator 2
 944 0038 FFF7FEFF 		bl	HAL_GetTick
 945              	.LVL75:
 946 003c 0546     		mov	r5, r0
 947              	.LVL76:
 948              	.L63:
 949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   while (__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == 0U)
 949              		.loc 1 950 0
 950 003e 2368     		ldr	r3, [r4]
 951 0040 DA68     		ldr	r2, [r3, #12]
 952 0042 12F0040F 		tst	r2, #4
 953 0046 0FD1     		bne	.L67
 951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 954              		.loc 1 952 0
 955 0048 FFF7FEFF 		bl	HAL_GetTick
 956              	.LVL77:
 957 004c 401B     		subs	r0, r0, r5
 958 004e B0F57A7F 		cmp	r0, #1000
 959 0052 F4D9     		bls	.L63
 953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
 955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 960              		.loc 1 955 0
 961 0054 2368     		ldr	r3, [r4]
 962 0056 FF22     		movs	r2, #255
 963 0058 5A62     		str	r2, [r3, #36]
 956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 964              		.loc 1 957 0
 965 005a 0320     		movs	r0, #3
 966 005c 84F82100 		strb	r0, [r4, #33]
 958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Process Unlocked */
 960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 967              		.loc 1 960 0
 968 0060 0023     		movs	r3, #0
 969 0062 84F82030 		strb	r3, [r4, #32]
 961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 970              		.loc 1 962 0
 971 0066 07E0     		b	.L62
 972              	.L67:
 963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 973              		.loc 1 967 0
 974 0068 FF22     		movs	r2, #255
 975 006a 5A62     		str	r2, [r3, #36]
 968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 976              		.loc 1 969 0
 977 006c 0123     		movs	r3, #1
 978 006e 84F82130 		strb	r3, [r4, #33]
 970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
 972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 979              		.loc 1 972 0
 980 0072 0020     		movs	r0, #0
 981 0074 84F82000 		strb	r0, [r4, #32]
 982              	.LVL78:
 983              	.L62:
 973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 984              		.loc 1 975 0
 985 0078 38BD     		pop	{r3, r4, r5, pc}
 986              	.LVL79:
 987              	.L65:
 935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 988              		.loc 1 935 0
 989 007a 0220     		movs	r0, #2
 990              	.LVL80:
 991 007c FCE7     		b	.L62
 992              		.cfi_endproc
 993              	.LFE328:
 995              		.section	.text.HAL_RTCEx_GetWakeUpTimer,"ax",%progbits
 996              		.align	1
 997              		.global	HAL_RTCEx_GetWakeUpTimer
 998              		.syntax unified
 999              		.thumb
 1000              		.thumb_func
 1001              		.fpu fpv4-sp-d16
 1003              	HAL_RTCEx_GetWakeUpTimer:
 1004              	.LFB329:
 976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Get wake up timer counter.
 979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval Counter value
 981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_GetWakeUpTimer(RTC_HandleTypeDef *hrtc)
 983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1005              		.loc 1 983 0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009              		@ link register save eliminated.
 1010              	.LVL81:
 984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the counter value */
 985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return ((uint32_t)(hrtc->Instance->WUTR & RTC_WUTR_WUT));
 1011              		.loc 1 985 0
 1012 0000 0368     		ldr	r3, [r0]
 1013 0002 5869     		ldr	r0, [r3, #20]
 1014              	.LVL82:
 986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1015              		.loc 1 986 0
 1016 0004 80B2     		uxth	r0, r0
 1017 0006 7047     		bx	lr
 1018              		.cfi_endproc
 1019              	.LFE329:
 1021              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 1022              		.align	1
 1023              		.weak	HAL_RTCEx_WakeUpTimerEventCallback
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1027              		.fpu fpv4-sp-d16
 1029              	HAL_RTCEx_WakeUpTimerEventCallback:
 1030              	.LFB331:
 987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
 989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer interrupt request.
 990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval None
 992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
 993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** void HAL_RTCEx_WakeUpTimerIRQHandler(RTC_HandleTypeDef *hrtc)
 994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
 996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
 997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
1000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((hrtc->Instance->MISR & RTC_MISR_WUTMF) != 0u)
1001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Immediately clear flags */
1003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->Instance->SCR = RTC_SCR_CWUTF;
1004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
1005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
1006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) != 0U)
1007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Clear the WAKEUPTIMER interrupt pending bit */
1009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
1010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
1011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* WAKEUPTIMER callback */
1013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Call WakeUpTimerEvent registered Callback */
1015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->WakeUpTimerEventCallback(hrtc);
1016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
1017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
1018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
1022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
1024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Wake Up Timer callback.
1027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval None
1029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc)
1031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1031              		.loc 1 1031 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              		@ link register save eliminated.
 1036              	.LVL83:
1032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****             the HAL_RTCEx_WakeUpTimerEventCallback could be implemented in the user file
1037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    */
1038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1037              		.loc 1 1038 0
 1038 0000 7047     		bx	lr
 1039              		.cfi_endproc
 1040              	.LFE331:
 1042              		.section	.text.HAL_RTCEx_WakeUpTimerIRQHandler,"ax",%progbits
 1043              		.align	1
 1044              		.global	HAL_RTCEx_WakeUpTimerIRQHandler
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1048              		.fpu fpv4-sp-d16
 1050              	HAL_RTCEx_WakeUpTimerIRQHandler:
 1051              	.LFB330:
 994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
 1052              		.loc 1 994 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 0
 1055              		@ frame_needed = 0, uses_anonymous_args = 0
 1056              	.LVL84:
 1057 0000 10B5     		push	{r4, lr}
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 4, -8
 1060              		.cfi_offset 14, -4
 1061 0002 0446     		mov	r4, r0
 996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1062              		.loc 1 996 0
 1063 0004 0A4B     		ldr	r3, .L74
 1064 0006 4FF48012 		mov	r2, #1048576
 1065 000a 5A61     		str	r2, [r3, #20]
1006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 1066              		.loc 1 1006 0
 1067 000c 0368     		ldr	r3, [r0]
 1068 000e DA68     		ldr	r2, [r3, #12]
 1069 0010 12F4806F 		tst	r2, #1024
 1070 0014 03D1     		bne	.L73
 1071              	.LVL85:
 1072              	.L71:
1022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1073              		.loc 1 1022 0
 1074 0016 0123     		movs	r3, #1
 1075 0018 84F82130 		strb	r3, [r4, #33]
1023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1076              		.loc 1 1023 0
 1077 001c 10BD     		pop	{r4, pc}
 1078              	.LVL86:
 1079              	.L73:
1009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 1080              		.loc 1 1009 0
 1081 001e DA68     		ldr	r2, [r3, #12]
 1082 0020 D2B2     		uxtb	r2, r2
 1083 0022 62F49062 		orn	r2, r2, #1152
 1084 0026 DA60     		str	r2, [r3, #12]
1017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 1085              		.loc 1 1017 0
 1086 0028 FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerEventCallback
 1087              	.LVL87:
 1088 002c F3E7     		b	.L71
 1089              	.L75:
 1090 002e 00BF     		.align	2
 1091              	.L74:
 1092 0030 00040140 		.word	1073808384
 1093              		.cfi_endproc
 1094              	.LFE330:
 1096              		.section	.text.HAL_RTCEx_PollForWakeUpTimerEvent,"ax",%progbits
 1097              		.align	1
 1098              		.global	HAL_RTCEx_PollForWakeUpTimerEvent
 1099              		.syntax unified
 1100              		.thumb
 1101              		.thumb_func
 1102              		.fpu fpv4-sp-d16
 1104              	HAL_RTCEx_PollForWakeUpTimerEvent:
 1105              	.LFB332:
1039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer Polling.
1043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForWakeUpTimerEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1106              		.loc 1 1048 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110              	.LVL88:
 1111 0000 70B5     		push	{r4, r5, r6, lr}
 1112              		.cfi_def_cfa_offset 16
 1113              		.cfi_offset 4, -16
 1114              		.cfi_offset 5, -12
 1115              		.cfi_offset 6, -8
 1116              		.cfi_offset 14, -4
 1117 0002 0446     		mov	r4, r0
 1118 0004 0D46     		mov	r5, r1
1049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1119              		.loc 1 1049 0
 1120 0006 FFF7FEFF 		bl	HAL_GetTick
 1121              	.LVL89:
 1122 000a 0646     		mov	r6, r0
 1123              	.LVL90:
 1124              	.L78:
1050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   while (__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) == 0U)
 1125              		.loc 1 1051 0
 1126 000c 2368     		ldr	r3, [r4]
 1127 000e DA68     		ldr	r2, [r3, #12]
 1128 0010 12F4806F 		tst	r2, #1024
 1129 0014 0DD1     		bne	.L83
1052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 1130              		.loc 1 1053 0
 1131 0016 B5F1FF3F 		cmp	r5, #-1
 1132 001a F7D0     		beq	.L78
1054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
1055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1133              		.loc 1 1055 0
 1134 001c FFF7FEFF 		bl	HAL_GetTick
 1135              	.LVL91:
 1136 0020 801B     		subs	r0, r0, r6
 1137 0022 A842     		cmp	r0, r5
 1138 0024 01D8     		bhi	.L79
 1139              		.loc 1 1055 0 is_stmt 0 discriminator 1
 1140 0026 002D     		cmp	r5, #0
 1141 0028 F0D1     		bne	.L78
 1142              	.L79:
1056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
1057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1143              		.loc 1 1057 0 is_stmt 1
 1144 002a 0320     		movs	r0, #3
 1145 002c 84F82100 		strb	r0, [r4, #33]
1058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1146              		.loc 1 1058 0
 1147 0030 08E0     		b	.L80
 1148              	.L83:
1059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
1060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
1061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the WAKEUPTIMER Flag */
1064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 1149              		.loc 1 1064 0
 1150 0032 DA68     		ldr	r2, [r3, #12]
 1151 0034 D2B2     		uxtb	r2, r2
 1152 0036 62F49062 		orn	r2, r2, #1152
 1153 003a DA60     		str	r2, [r3, #12]
1065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
1067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1154              		.loc 1 1067 0
 1155 003c 0123     		movs	r3, #1
 1156 003e 84F82130 		strb	r3, [r4, #33]
1068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 1157              		.loc 1 1069 0
 1158 0042 0020     		movs	r0, #0
 1159              	.L80:
1070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1160              		.loc 1 1070 0
 1161 0044 70BD     		pop	{r4, r5, r6, pc}
 1162              		.cfi_endproc
 1163              	.LFE332:
 1165              		.section	.text.HAL_RTCEx_SetSmoothCalib,"ax",%progbits
 1166              		.align	1
 1167              		.global	HAL_RTCEx_SetSmoothCalib
 1168              		.syntax unified
 1169              		.thumb
 1170              		.thumb_func
 1171              		.fpu fpv4-sp-d16
 1173              	HAL_RTCEx_SetSmoothCalib:
 1174              	.LFB333:
1071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @}
1074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group3
1078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief    Extended Peripheral Control functions
1079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *
1080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @verbatim
1081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****  ===============================================================================
1082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****               ##### Extended Peripheral Control functions #####
1083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****  ===============================================================================
1084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     [..]
1085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     This subsection provides functions allowing to
1086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Write a data in a specified RTC Backup data register
1087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Read a data in a specified RTC Backup data register
1088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Set the Coarse calibration parameters.
1089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Deactivate the Coarse calibration parameters
1090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Set the Smooth calibration parameters.
1091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) STM32L412xx and STM32L422xx only : Set Low Power calibration parameter.
1092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Configure the Synchronization Shift Control Settings.
1093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Enable the RTC reference clock detection.
1096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Disable the RTC reference clock detection.
1097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Enable the Bypass Shadow feature.
1098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) Disable the Bypass Shadow feature.
1099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @endverbatim
1101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @{
1102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Set the Smooth calibration parameters.
1107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  SmoothCalibPeriod Select the Smooth Calibration Period.
1109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
1110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_32SEC: The smooth calibration period is 32s.
1111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_16SEC: The smooth calibration period is 16s.
1112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_8SEC: The smooth calibration period is 8s.
1113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  SmoothCalibPlusPulses Select to Set or reset the CALP bit.
1114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_SET: Add one RTCCLK pulse every 2*11 pulses.
1116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_RESET: No RTCCLK pulses are added.
1117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  SmoothCalibMinusPulsesValue Select the value of CALM[8:0] bits.
1118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x000001FF.
1119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @note   To deactivate the smooth calibration, the field SmoothCalibPlusPulses
1120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         must be equal to SMOOTHCALIB_PLUSPULSES_RESET and the field
1121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         SmoothCalibMinusPulsesValue must be equal to 0.
1122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSmoothCalib(RTC_HandleTypeDef *hrtc, uint32_t SmoothCalibPeriod, uin
1125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1175              		.loc 1 1125 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              	.LVL92:
 1180 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1181              		.cfi_def_cfa_offset 24
 1182              		.cfi_offset 4, -24
 1183              		.cfi_offset 5, -20
 1184              		.cfi_offset 6, -16
 1185              		.cfi_offset 7, -12
 1186              		.cfi_offset 8, -8
 1187              		.cfi_offset 14, -4
1126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tickstart;
1127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
1129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(SmoothCalibPeriod));
1130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(SmoothCalibPlusPulses));
1131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(SmoothCalibMinusPulsesValue));
1132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1188              		.loc 1 1134 0
 1189 0004 90F82040 		ldrb	r4, [r0, #32]	@ zero_extendqisi2
 1190 0008 012C     		cmp	r4, #1
 1191 000a 42D0     		beq	.L89
 1192 000c 1E46     		mov	r6, r3
 1193 000e 1746     		mov	r7, r2
 1194 0010 0D46     		mov	r5, r1
 1195 0012 0446     		mov	r4, r0
 1196              		.loc 1 1134 0 is_stmt 0 discriminator 2
 1197 0014 0123     		movs	r3, #1
 1198              	.LVL93:
 1199 0016 80F82030 		strb	r3, [r0, #32]
1135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1200              		.loc 1 1136 0 is_stmt 1 discriminator 2
 1201 001a 0223     		movs	r3, #2
 1202 001c 80F82130 		strb	r3, [r0, #33]
1137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1203              		.loc 1 1139 0 discriminator 2
 1204 0020 0368     		ldr	r3, [r0]
 1205 0022 CA22     		movs	r2, #202
 1206              	.LVL94:
 1207 0024 5A62     		str	r2, [r3, #36]
 1208 0026 0368     		ldr	r3, [r0]
 1209 0028 5322     		movs	r2, #83
 1210 002a 5A62     		str	r2, [r3, #36]
1140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* check if a calibration is pending*/
1142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
1143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((hrtc->Instance->ICSR & RTC_ICSR_RECALPF) != 0U)
1144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
1145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((hrtc->Instance->ISR & RTC_ISR_RECALPF) != 0U)
 1211              		.loc 1 1145 0 discriminator 2
 1212 002c 0368     		ldr	r3, [r0]
 1213 002e DB68     		ldr	r3, [r3, #12]
 1214 0030 13F4803F 		tst	r3, #65536
 1215 0034 14D1     		bne	.L91
 1216              	.LVL95:
 1217              	.L86:
1146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
1147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
1149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* check if a calibration is pending*/
1151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
1152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     while ((hrtc->Instance->ICSR & RTC_ICSR_RECALPF) != 0U)
1153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
1154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     while ((hrtc->Instance->ISR & RTC_ISR_RECALPF) != 0U)
1155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
1156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
1157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
1158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
1159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         /* Change RTC state */
1163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         /* Process Unlocked */
1166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
1167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
1169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
1170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
1171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
1174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   MODIFY_REG(hrtc->Instance->CALR, (RTC_CALR_CALP | RTC_CALR_CALW8 | RTC_CALR_CALW16 | RTC_CALR_CAL
 1218              		.loc 1 1174 0
 1219 0036 2368     		ldr	r3, [r4]
 1220 0038 D86B     		ldr	r0, [r3, #60]
 1221 003a 20F46140 		bic	r0, r0, #57600
 1222 003e 20F0FF00 		bic	r0, r0, #255
 1223 0042 3D43     		orrs	r5, r5, r7
 1224              	.LVL96:
 1225 0044 3543     		orrs	r5, r5, r6
 1226 0046 2843     		orrs	r0, r0, r5
 1227 0048 D863     		str	r0, [r3, #60]
1175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1228              		.loc 1 1177 0
 1229 004a 2368     		ldr	r3, [r4]
 1230 004c FF22     		movs	r2, #255
 1231 004e 5A62     		str	r2, [r3, #36]
1178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
1180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1232              		.loc 1 1180 0
 1233 0050 0123     		movs	r3, #1
 1234 0052 84F82130 		strb	r3, [r4, #33]
1181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1235              		.loc 1 1183 0
 1236 0056 0020     		movs	r0, #0
 1237 0058 84F82000 		strb	r0, [r4, #32]
 1238              	.LVL97:
 1239              	.L85:
1184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
1186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1240              		.loc 1 1186 0
 1241 005c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1242              	.LVL98:
 1243              	.L91:
1148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1244              		.loc 1 1148 0
 1245 0060 FFF7FEFF 		bl	HAL_GetTick
 1246              	.LVL99:
 1247 0064 8046     		mov	r8, r0
 1248              	.LVL100:
 1249              	.L87:
1154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
 1250              		.loc 1 1154 0
 1251 0066 2168     		ldr	r1, [r4]
 1252 0068 C968     		ldr	r1, [r1, #12]
 1253 006a 11F4803F 		tst	r1, #65536
 1254 006e E2D0     		beq	.L86
1157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
 1255              		.loc 1 1157 0
 1256 0070 FFF7FEFF 		bl	HAL_GetTick
 1257              	.LVL101:
 1258 0074 A0EB0800 		sub	r0, r0, r8
 1259 0078 B0F57A7F 		cmp	r0, #1000
 1260 007c F3D9     		bls	.L87
1160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1261              		.loc 1 1160 0
 1262 007e 2368     		ldr	r3, [r4]
 1263 0080 FF22     		movs	r2, #255
 1264 0082 5A62     		str	r2, [r3, #36]
1163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1265              		.loc 1 1163 0
 1266 0084 0320     		movs	r0, #3
 1267 0086 84F82100 		strb	r0, [r4, #33]
1166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1268              		.loc 1 1166 0
 1269 008a 0023     		movs	r3, #0
 1270 008c 84F82030 		strb	r3, [r4, #32]
1168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
 1271              		.loc 1 1168 0
 1272 0090 E4E7     		b	.L85
 1273              	.LVL102:
 1274              	.L89:
1134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1275              		.loc 1 1134 0
 1276 0092 0220     		movs	r0, #2
 1277              	.LVL103:
 1278 0094 E2E7     		b	.L85
 1279              		.cfi_endproc
 1280              	.LFE333:
 1282              		.section	.text.HAL_RTCEx_SetSynchroShift,"ax",%progbits
 1283              		.align	1
 1284              		.global	HAL_RTCEx_SetSynchroShift
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu fpv4-sp-d16
 1290              	HAL_RTCEx_SetSynchroShift:
 1291              	.LFB334:
1187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
1189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Select the low power Calibration mode.
1191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  LowPowerCalib Low power Calibration mode.
1193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
1194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_LPCAL_SET: Low power mode.
1195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_LPCAL_RESET: High consumption mode.
1196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetLowPowerCalib(RTC_HandleTypeDef *hrtc, uint32_t LowPowerCalib)
1199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
1200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
1201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_LOW_POWER_CALIB(LowPowerCalib));
1202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
1205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
1212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   MODIFY_REG(hrtc->Instance->CALR, RTC_CALR_LPCAL, LowPowerCalib);
1213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
1218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
1222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
1224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
1225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
1226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Configure the Synchronization Shift Control Settings.
1229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register.
1230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  ShiftAdd1S Select to add or not 1 second to the time calendar.
1232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_SET: Add one second to the clock calendar.
1234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_RESET: No effect.
1235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  ShiftSubFS Select the number of Second Fractions to substitute.
1236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x7FFF.
1237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSynchroShift(RTC_HandleTypeDef *hrtc, uint32_t ShiftAdd1S, uint32_t 
1240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1292              		.loc 1 1240 0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296              	.LVL104:
 1297 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1298              		.cfi_def_cfa_offset 24
 1299              		.cfi_offset 3, -24
 1300              		.cfi_offset 4, -20
 1301              		.cfi_offset 5, -16
 1302              		.cfi_offset 6, -12
 1303              		.cfi_offset 7, -8
 1304              		.cfi_offset 14, -4
1241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tickstart;
1242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
1244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_ADD1S(ShiftAdd1S));
1245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_SUBFS(ShiftSubFS));
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1305              		.loc 1 1248 0
 1306 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1307 0006 012B     		cmp	r3, #1
 1308 0008 55D0     		beq	.L98
 1309 000a 1646     		mov	r6, r2
 1310 000c 0F46     		mov	r7, r1
 1311 000e 0446     		mov	r4, r0
 1312              		.loc 1 1248 0 is_stmt 0 discriminator 2
 1313 0010 0123     		movs	r3, #1
 1314 0012 80F82030 		strb	r3, [r0, #32]
1249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1315              		.loc 1 1250 0 is_stmt 1 discriminator 2
 1316 0016 0223     		movs	r3, #2
 1317 0018 80F82130 		strb	r3, [r0, #33]
1251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1318              		.loc 1 1253 0 discriminator 2
 1319 001c 0368     		ldr	r3, [r0]
 1320 001e CA22     		movs	r2, #202
 1321              	.LVL105:
 1322 0020 5A62     		str	r2, [r3, #36]
 1323 0022 0368     		ldr	r3, [r0]
 1324 0024 5322     		movs	r2, #83
 1325 0026 5A62     		str	r2, [r3, #36]
1254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1326              		.loc 1 1255 0 discriminator 2
 1327 0028 FFF7FEFF 		bl	HAL_GetTick
 1328              	.LVL106:
 1329 002c 0546     		mov	r5, r0
 1330              	.LVL107:
 1331              	.L94:
1256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Wait until the shift is completed*/
1258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   while ((hrtc->Instance->ICSR & RTC_ICSR_SHPF) != 0U)
1260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
1261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   while ((hrtc->Instance->ISR & RTC_ISR_SHPF) != 0U)
 1332              		.loc 1 1261 0
 1333 002e 2368     		ldr	r3, [r4]
 1334 0030 D868     		ldr	r0, [r3, #12]
 1335 0032 10F0080F 		tst	r0, #8
 1336 0036 0FD0     		beq	.L100
1262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif
1263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 1337              		.loc 1 1264 0
 1338 0038 FFF7FEFF 		bl	HAL_GetTick
 1339              	.LVL108:
 1340 003c 401B     		subs	r0, r0, r5
 1341 003e B0F57A7F 		cmp	r0, #1000
 1342 0042 F4D9     		bls	.L94
1265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
1266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1343              		.loc 1 1267 0
 1344 0044 2368     		ldr	r3, [r4]
 1345 0046 FF22     		movs	r2, #255
 1346 0048 5A62     		str	r2, [r3, #36]
1268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1347              		.loc 1 1269 0
 1348 004a 0320     		movs	r0, #3
 1349 004c 84F82100 		strb	r0, [r4, #33]
1270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       /* Process Unlocked */
1272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 1350              		.loc 1 1272 0
 1351 0050 0023     		movs	r3, #0
 1352 0052 84F82030 		strb	r3, [r4, #32]
 1353              	.LVL109:
 1354              	.L93:
1273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
1275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
1276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check if the reference clock detection is disabled */
1279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_REFCKON) == 0U)
1280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Configure the Shift settings */
1282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->Instance->SHIFTR = (uint32_t)(uint32_t)(ShiftSubFS) | (uint32_t)(ShiftAdd1S);
1283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
1285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if ((hrtc->Instance->CR & RTC_CR_BYPSHAD) == 0U)
1286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
1287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
1288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
1289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
1293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         /* Process Unlocked */
1295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
1296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         return HAL_ERROR;
1298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
1299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
1300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   else
1302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Change RTC state */
1307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Process Unlocked */
1310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
1311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     return HAL_ERROR;
1313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
1319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
1323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
1325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1355              		.loc 1 1325 0
 1356 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1357              	.LVL110:
 1358              	.L100:
1279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 1359              		.loc 1 1279 0
 1360 0058 9A68     		ldr	r2, [r3, #8]
 1361 005a 12F0100F 		tst	r2, #16
 1362 005e 20D1     		bne	.L96
1282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1363              		.loc 1 1282 0
 1364 0060 3E43     		orrs	r6, r6, r7
 1365              	.LVL111:
 1366 0062 DE62     		str	r6, [r3, #44]
1285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 1367              		.loc 1 1285 0
 1368 0064 2368     		ldr	r3, [r4]
 1369 0066 9B68     		ldr	r3, [r3, #8]
 1370 0068 13F0200F 		tst	r3, #32
 1371 006c 09D0     		beq	.L101
 1372              	.L97:
1316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1373              		.loc 1 1316 0
 1374 006e 2368     		ldr	r3, [r4]
 1375 0070 FF22     		movs	r2, #255
 1376 0072 5A62     		str	r2, [r3, #36]
1319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1377              		.loc 1 1319 0
 1378 0074 0123     		movs	r3, #1
 1379 0076 84F82130 		strb	r3, [r4, #33]
1322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1380              		.loc 1 1322 0
 1381 007a 0020     		movs	r0, #0
 1382 007c 84F82000 		strb	r0, [r4, #32]
1324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1383              		.loc 1 1324 0
 1384 0080 E9E7     		b	.L93
 1385              	.L101:
1287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
 1386              		.loc 1 1287 0
 1387 0082 2046     		mov	r0, r4
 1388 0084 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 1389              	.LVL112:
 1390 0088 0028     		cmp	r0, #0
 1391 008a F0D0     		beq	.L97
1290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1392              		.loc 1 1290 0
 1393 008c 2368     		ldr	r3, [r4]
 1394 008e FF22     		movs	r2, #255
 1395 0090 5A62     		str	r2, [r3, #36]
1292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1396              		.loc 1 1292 0
 1397 0092 0423     		movs	r3, #4
 1398 0094 84F82130 		strb	r3, [r4, #33]
1295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1399              		.loc 1 1295 0
 1400 0098 0023     		movs	r3, #0
 1401 009a 84F82030 		strb	r3, [r4, #32]
1297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
 1402              		.loc 1 1297 0
 1403 009e 0120     		movs	r0, #1
 1404 00a0 D9E7     		b	.L93
 1405              	.LVL113:
 1406              	.L96:
1304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1407              		.loc 1 1304 0
 1408 00a2 FF22     		movs	r2, #255
 1409 00a4 5A62     		str	r2, [r3, #36]
1307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1410              		.loc 1 1307 0
 1411 00a6 0423     		movs	r3, #4
 1412 00a8 84F82130 		strb	r3, [r4, #33]
1310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1413              		.loc 1 1310 0
 1414 00ac 0023     		movs	r3, #0
 1415 00ae 84F82030 		strb	r3, [r4, #32]
1312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 1416              		.loc 1 1312 0
 1417 00b2 0120     		movs	r0, #1
 1418 00b4 CFE7     		b	.L93
 1419              	.LVL114:
 1420              	.L98:
1248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1421              		.loc 1 1248 0
 1422 00b6 0220     		movs	r0, #2
 1423              	.LVL115:
 1424 00b8 CDE7     		b	.L93
 1425              		.cfi_endproc
 1426              	.LFE334:
 1428              		.section	.text.HAL_RTCEx_SetCalibrationOutPut,"ax",%progbits
 1429              		.align	1
 1430              		.global	HAL_RTCEx_SetCalibrationOutPut
 1431              		.syntax unified
 1432              		.thumb
 1433              		.thumb_func
 1434              		.fpu fpv4-sp-d16
 1436              	HAL_RTCEx_SetCalibrationOutPut:
 1437              	.LFB335:
1326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  CalibOutput Select the Calibration output Selection .
1331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_512HZ: A signal has a regular waveform at 512Hz.
1333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_1HZ: A signal has a regular waveform at 1Hz.
1334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetCalibrationOutPut(RTC_HandleTypeDef *hrtc, uint32_t CalibOutput)
1337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1438              		.loc 1 1337 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442              		@ link register save eliminated.
 1443              	.LVL116:
1338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
1339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_CALIB_OUTPUT(CalibOutput));
1340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1444              		.loc 1 1342 0
 1445 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1446 0004 012B     		cmp	r3, #1
 1447 0006 26D0     		beq	.L104
1337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
 1448              		.loc 1 1337 0 discriminator 2
 1449 0008 10B4     		push	{r4}
 1450              		.cfi_def_cfa_offset 4
 1451              		.cfi_offset 4, -4
 1452              		.loc 1 1342 0 discriminator 2
 1453 000a 0122     		movs	r2, #1
 1454 000c 80F82020 		strb	r2, [r0, #32]
1343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1455              		.loc 1 1344 0 discriminator 2
 1456 0010 0223     		movs	r3, #2
 1457 0012 80F82130 		strb	r3, [r0, #33]
1345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1458              		.loc 1 1347 0 discriminator 2
 1459 0016 0368     		ldr	r3, [r0]
 1460 0018 CA24     		movs	r4, #202
 1461 001a 5C62     		str	r4, [r3, #36]
 1462 001c 0368     		ldr	r3, [r0]
 1463 001e 5324     		movs	r4, #83
 1464 0020 5C62     		str	r4, [r3, #36]
1348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear flags before config */
1350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_COSEL;
 1465              		.loc 1 1350 0 discriminator 2
 1466 0022 0468     		ldr	r4, [r0]
 1467 0024 A368     		ldr	r3, [r4, #8]
 1468 0026 23F40023 		bic	r3, r3, #524288
 1469 002a A360     		str	r3, [r4, #8]
1351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the RTC_CR register */
1353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)CalibOutput;
 1470              		.loc 1 1353 0 discriminator 2
 1471 002c 0468     		ldr	r4, [r0]
 1472 002e A368     		ldr	r3, [r4, #8]
 1473 0030 1943     		orrs	r1, r1, r3
 1474              	.LVL117:
 1475 0032 A160     		str	r1, [r4, #8]
1354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_ENABLE(hrtc);
 1476              		.loc 1 1355 0 discriminator 2
 1477 0034 0168     		ldr	r1, [r0]
 1478 0036 8B68     		ldr	r3, [r1, #8]
 1479 0038 43F40003 		orr	r3, r3, #8388608
 1480 003c 8B60     		str	r3, [r1, #8]
1356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1481              		.loc 1 1358 0 discriminator 2
 1482 003e 0368     		ldr	r3, [r0]
 1483 0040 FF21     		movs	r1, #255
 1484 0042 5962     		str	r1, [r3, #36]
1359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
1361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1485              		.loc 1 1361 0 discriminator 2
 1486 0044 80F82120 		strb	r2, [r0, #33]
1362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1487              		.loc 1 1364 0 discriminator 2
 1488 0048 0023     		movs	r3, #0
 1489 004a 80F82030 		strb	r3, [r0, #32]
1365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 1490              		.loc 1 1366 0 discriminator 2
 1491 004e 1846     		mov	r0, r3
 1492              	.LVL118:
1367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1493              		.loc 1 1367 0 discriminator 2
 1494 0050 5DF8044B 		ldr	r4, [sp], #4
 1495              		.cfi_restore 4
 1496              		.cfi_def_cfa_offset 0
 1497 0054 7047     		bx	lr
 1498              	.LVL119:
 1499              	.L104:
1342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1500              		.loc 1 1342 0
 1501 0056 0220     		movs	r0, #2
 1502              	.LVL120:
 1503              		.loc 1 1367 0
 1504 0058 7047     		bx	lr
 1505              		.cfi_endproc
 1506              	.LFE335:
 1508              		.section	.text.HAL_RTCEx_DeactivateCalibrationOutPut,"ax",%progbits
 1509              		.align	1
 1510              		.global	HAL_RTCEx_DeactivateCalibrationOutPut
 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1514              		.fpu fpv4-sp-d16
 1516              	HAL_RTCEx_DeactivateCalibrationOutPut:
 1517              	.LFB336:
1368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateCalibrationOutPut(RTC_HandleTypeDef *hrtc)
1375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1518              		.loc 1 1375 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              		@ link register save eliminated.
 1523              	.LVL121:
1376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1524              		.loc 1 1377 0
 1525 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1526 0004 012B     		cmp	r3, #1
 1527 0006 1AD0     		beq	.L111
 1528              		.loc 1 1377 0 is_stmt 0 discriminator 2
 1529 0008 0122     		movs	r2, #1
 1530 000a 80F82020 		strb	r2, [r0, #32]
1378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1531              		.loc 1 1379 0 is_stmt 1 discriminator 2
 1532 000e 0223     		movs	r3, #2
 1533 0010 80F82130 		strb	r3, [r0, #33]
1380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1534              		.loc 1 1382 0 discriminator 2
 1535 0014 0368     		ldr	r3, [r0]
 1536 0016 CA21     		movs	r1, #202
 1537 0018 5962     		str	r1, [r3, #36]
 1538 001a 0368     		ldr	r3, [r0]
 1539 001c 5321     		movs	r1, #83
 1540 001e 5962     		str	r1, [r3, #36]
1383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_DISABLE(hrtc);
 1541              		.loc 1 1384 0 discriminator 2
 1542 0020 0168     		ldr	r1, [r0]
 1543 0022 8B68     		ldr	r3, [r1, #8]
 1544 0024 23F40003 		bic	r3, r3, #8388608
 1545 0028 8B60     		str	r3, [r1, #8]
1385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1546              		.loc 1 1387 0 discriminator 2
 1547 002a 0368     		ldr	r3, [r0]
 1548 002c FF21     		movs	r1, #255
 1549 002e 5962     		str	r1, [r3, #36]
1388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
1390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1550              		.loc 1 1390 0 discriminator 2
 1551 0030 80F82120 		strb	r2, [r0, #33]
1391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1552              		.loc 1 1393 0 discriminator 2
 1553 0034 0023     		movs	r3, #0
 1554 0036 80F82030 		strb	r3, [r0, #32]
1394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 1555              		.loc 1 1395 0 discriminator 2
 1556 003a 1846     		mov	r0, r3
 1557              	.LVL122:
 1558 003c 7047     		bx	lr
 1559              	.LVL123:
 1560              	.L111:
1377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1561              		.loc 1 1377 0
 1562 003e 0220     		movs	r0, #2
 1563              	.LVL124:
1396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1564              		.loc 1 1396 0
 1565 0040 7047     		bx	lr
 1566              		.cfi_endproc
 1567              	.LFE336:
 1569              		.section	.text.HAL_RTCEx_SetRefClock,"ax",%progbits
 1570              		.align	1
 1571              		.global	HAL_RTCEx_SetRefClock
 1572              		.syntax unified
 1573              		.thumb
 1574              		.thumb_func
 1575              		.fpu fpv4-sp-d16
 1577              	HAL_RTCEx_SetRefClock:
 1578              	.LFB337:
1397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Enable the RTC reference clock detection.
1400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetRefClock(RTC_HandleTypeDef *hrtc)
1404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1579              		.loc 1 1404 0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583              	.LVL125:
1405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
1406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1584              		.loc 1 1408 0
 1585 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1586 0004 012B     		cmp	r3, #1
 1587 0006 27D0     		beq	.L116
1404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
 1588              		.loc 1 1404 0 discriminator 2
 1589 0008 10B5     		push	{r4, lr}
 1590              		.cfi_def_cfa_offset 8
 1591              		.cfi_offset 4, -8
 1592              		.cfi_offset 14, -4
 1593 000a 0446     		mov	r4, r0
 1594              		.loc 1 1408 0 discriminator 2
 1595 000c 0123     		movs	r3, #1
 1596 000e 80F82030 		strb	r3, [r0, #32]
1409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1597              		.loc 1 1410 0 discriminator 2
 1598 0012 0223     		movs	r3, #2
 1599 0014 80F82130 		strb	r3, [r0, #33]
1411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1600              		.loc 1 1413 0 discriminator 2
 1601 0018 0368     		ldr	r3, [r0]
 1602 001a CA22     		movs	r2, #202
 1603 001c 5A62     		str	r2, [r3, #36]
 1604 001e 0368     		ldr	r3, [r0]
 1605 0020 5322     		movs	r2, #83
 1606 0022 5A62     		str	r2, [r3, #36]
1414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enter Initialization mode */
1416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   status = RTC_EnterInitMode(hrtc);
 1607              		.loc 1 1416 0 discriminator 2
 1608 0024 FFF7FEFF 		bl	RTC_EnterInitMode
 1609              	.LVL126:
1417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 1610              		.loc 1 1417 0 discriminator 2
 1611 0028 0346     		mov	r3, r0
 1612 002a 58B1     		cbz	r0, .L121
 1613              	.LVL127:
 1614              	.L114:
1418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_ENABLE(hrtc);
1420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     status = RTC_ExitInitMode(hrtc);
1423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1615              		.loc 1 1426 0
 1616 002c 2268     		ldr	r2, [r4]
 1617 002e FF21     		movs	r1, #255
 1618 0030 5162     		str	r1, [r2, #36]
1427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 1619              		.loc 1 1428 0
 1620 0032 13B9     		cbnz	r3, .L115
1429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_READY;
 1621              		.loc 1 1430 0
 1622 0034 0122     		movs	r2, #1
 1623 0036 84F82120 		strb	r2, [r4, #33]
 1624              	.L115:
1431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1625              		.loc 1 1434 0
 1626 003a 0022     		movs	r2, #0
 1627 003c 84F82020 		strb	r2, [r4, #32]
1435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return status;
1437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1628              		.loc 1 1437 0
 1629 0040 1846     		mov	r0, r3
 1630 0042 10BD     		pop	{r4, pc}
 1631              	.LVL128:
 1632              	.L121:
1419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1633              		.loc 1 1419 0
 1634 0044 2268     		ldr	r2, [r4]
 1635 0046 9368     		ldr	r3, [r2, #8]
 1636 0048 43F01003 		orr	r3, r3, #16
 1637 004c 9360     		str	r3, [r2, #8]
1422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 1638              		.loc 1 1422 0
 1639 004e 2046     		mov	r0, r4
 1640              	.LVL129:
 1641 0050 FFF7FEFF 		bl	RTC_ExitInitMode
 1642              	.LVL130:
 1643 0054 0346     		mov	r3, r0
 1644              	.LVL131:
 1645 0056 E9E7     		b	.L114
 1646              	.LVL132:
 1647              	.L116:
 1648              		.cfi_def_cfa_offset 0
 1649              		.cfi_restore 4
 1650              		.cfi_restore 14
1408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1651              		.loc 1 1408 0
 1652 0058 0223     		movs	r3, #2
 1653              		.loc 1 1437 0
 1654 005a 1846     		mov	r0, r3
 1655              	.LVL133:
 1656 005c 7047     		bx	lr
 1657              		.cfi_endproc
 1658              	.LFE337:
 1660              		.section	.text.HAL_RTCEx_DeactivateRefClock,"ax",%progbits
 1661              		.align	1
 1662              		.global	HAL_RTCEx_DeactivateRefClock
 1663              		.syntax unified
 1664              		.thumb
 1665              		.thumb_func
 1666              		.fpu fpv4-sp-d16
 1668              	HAL_RTCEx_DeactivateRefClock:
 1669              	.LFB338:
1438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Disable the RTC reference clock detection.
1441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateRefClock(RTC_HandleTypeDef *hrtc)
1445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1670              		.loc 1 1445 0
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 0
 1673              		@ frame_needed = 0, uses_anonymous_args = 0
 1674              	.LVL134:
1446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
1447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1675              		.loc 1 1449 0
 1676 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1677 0004 012B     		cmp	r3, #1
 1678 0006 27D0     		beq	.L126
1445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   HAL_StatusTypeDef status;
 1679              		.loc 1 1445 0 discriminator 2
 1680 0008 10B5     		push	{r4, lr}
 1681              		.cfi_def_cfa_offset 8
 1682              		.cfi_offset 4, -8
 1683              		.cfi_offset 14, -4
 1684 000a 0446     		mov	r4, r0
 1685              		.loc 1 1449 0 discriminator 2
 1686 000c 0123     		movs	r3, #1
 1687 000e 80F82030 		strb	r3, [r0, #32]
1450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1688              		.loc 1 1451 0 discriminator 2
 1689 0012 0223     		movs	r3, #2
 1690 0014 80F82130 		strb	r3, [r0, #33]
1452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1691              		.loc 1 1454 0 discriminator 2
 1692 0018 0368     		ldr	r3, [r0]
 1693 001a CA22     		movs	r2, #202
 1694 001c 5A62     		str	r2, [r3, #36]
 1695 001e 0368     		ldr	r3, [r0]
 1696 0020 5322     		movs	r2, #83
 1697 0022 5A62     		str	r2, [r3, #36]
1455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enter Initialization mode */
1457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   status = RTC_EnterInitMode(hrtc);
 1698              		.loc 1 1457 0 discriminator 2
 1699 0024 FFF7FEFF 		bl	RTC_EnterInitMode
 1700              	.LVL135:
1458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 1701              		.loc 1 1458 0 discriminator 2
 1702 0028 0346     		mov	r3, r0
 1703 002a 58B1     		cbz	r0, .L131
 1704              	.LVL136:
 1705              	.L124:
1459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_DISABLE(hrtc);
1461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     status = RTC_ExitInitMode(hrtc);
1464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1706              		.loc 1 1467 0
 1707 002c 2268     		ldr	r2, [r4]
 1708 002e FF21     		movs	r1, #255
 1709 0030 5162     		str	r1, [r2, #36]
1468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (status == HAL_OK)
 1710              		.loc 1 1469 0
 1711 0032 13B9     		cbnz	r3, .L125
1470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_READY;
 1712              		.loc 1 1471 0
 1713 0034 0122     		movs	r2, #1
 1714 0036 84F82120 		strb	r2, [r4, #33]
 1715              	.L125:
1472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1716              		.loc 1 1475 0
 1717 003a 0022     		movs	r2, #0
 1718 003c 84F82020 		strb	r2, [r4, #32]
1476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return status;
1478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1719              		.loc 1 1478 0
 1720 0040 1846     		mov	r0, r3
 1721 0042 10BD     		pop	{r4, pc}
 1722              	.LVL137:
 1723              	.L131:
1460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1724              		.loc 1 1460 0
 1725 0044 2268     		ldr	r2, [r4]
 1726 0046 9368     		ldr	r3, [r2, #8]
 1727 0048 23F01003 		bic	r3, r3, #16
 1728 004c 9360     		str	r3, [r2, #8]
1463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
 1729              		.loc 1 1463 0
 1730 004e 2046     		mov	r0, r4
 1731              	.LVL138:
 1732 0050 FFF7FEFF 		bl	RTC_ExitInitMode
 1733              	.LVL139:
 1734 0054 0346     		mov	r3, r0
 1735              	.LVL140:
 1736 0056 E9E7     		b	.L124
 1737              	.LVL141:
 1738              	.L126:
 1739              		.cfi_def_cfa_offset 0
 1740              		.cfi_restore 4
 1741              		.cfi_restore 14
1449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1742              		.loc 1 1449 0
 1743 0058 0223     		movs	r3, #2
 1744              		.loc 1 1478 0
 1745 005a 1846     		mov	r0, r3
 1746              	.LVL142:
 1747 005c 7047     		bx	lr
 1748              		.cfi_endproc
 1749              	.LFE338:
 1751              		.section	.text.HAL_RTCEx_EnableBypassShadow,"ax",%progbits
 1752              		.align	1
 1753              		.global	HAL_RTCEx_EnableBypassShadow
 1754              		.syntax unified
 1755              		.thumb
 1756              		.thumb_func
 1757              		.fpu fpv4-sp-d16
 1759              	HAL_RTCEx_EnableBypassShadow:
 1760              	.LFB339:
1479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Enable the Bypass Shadow feature.
1482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
1483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef *hrtc)
1488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1761              		.loc 1 1488 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 0
 1764              		@ frame_needed = 0, uses_anonymous_args = 0
 1765              		@ link register save eliminated.
 1766              	.LVL143:
1489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1767              		.loc 1 1490 0
 1768 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1769 0004 012B     		cmp	r3, #1
 1770 0006 1AD0     		beq	.L134
 1771              		.loc 1 1490 0 is_stmt 0 discriminator 2
 1772 0008 0122     		movs	r2, #1
 1773 000a 80F82020 		strb	r2, [r0, #32]
1491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1774              		.loc 1 1492 0 is_stmt 1 discriminator 2
 1775 000e 0223     		movs	r3, #2
 1776 0010 80F82130 		strb	r3, [r0, #33]
1493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1777              		.loc 1 1495 0 discriminator 2
 1778 0014 0368     		ldr	r3, [r0]
 1779 0016 CA21     		movs	r1, #202
 1780 0018 5962     		str	r1, [r3, #36]
 1781 001a 0368     		ldr	r3, [r0]
 1782 001c 5321     		movs	r1, #83
 1783 001e 5962     		str	r1, [r3, #36]
1496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Set the BYPSHAD bit */
1498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   SET_BIT(hrtc->Instance->CR, RTC_CR_BYPSHAD);
 1784              		.loc 1 1498 0 discriminator 2
 1785 0020 0168     		ldr	r1, [r0]
 1786 0022 8B68     		ldr	r3, [r1, #8]
 1787 0024 43F02003 		orr	r3, r3, #32
 1788 0028 8B60     		str	r3, [r1, #8]
1499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1789              		.loc 1 1501 0 discriminator 2
 1790 002a 0368     		ldr	r3, [r0]
 1791 002c FF21     		movs	r1, #255
 1792 002e 5962     		str	r1, [r3, #36]
1502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
1504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1793              		.loc 1 1504 0 discriminator 2
 1794 0030 80F82120 		strb	r2, [r0, #33]
1505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1795              		.loc 1 1507 0 discriminator 2
 1796 0034 0023     		movs	r3, #0
 1797 0036 80F82030 		strb	r3, [r0, #32]
1508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 1798              		.loc 1 1509 0 discriminator 2
 1799 003a 1846     		mov	r0, r3
 1800              	.LVL144:
 1801 003c 7047     		bx	lr
 1802              	.LVL145:
 1803              	.L134:
1490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1804              		.loc 1 1490 0
 1805 003e 0220     		movs	r0, #2
 1806              	.LVL146:
1510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1807              		.loc 1 1510 0
 1808 0040 7047     		bx	lr
 1809              		.cfi_endproc
 1810              	.LFE339:
 1812              		.section	.text.HAL_RTCEx_DisableBypassShadow,"ax",%progbits
 1813              		.align	1
 1814              		.global	HAL_RTCEx_DisableBypassShadow
 1815              		.syntax unified
 1816              		.thumb
 1817              		.thumb_func
 1818              		.fpu fpv4-sp-d16
 1820              	HAL_RTCEx_DisableBypassShadow:
 1821              	.LFB340:
1511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Disable the Bypass Shadow feature.
1514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
1515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DisableBypassShadow(RTC_HandleTypeDef *hrtc)
1520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1822              		.loc 1 1520 0
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 0
 1825              		@ frame_needed = 0, uses_anonymous_args = 0
 1826              		@ link register save eliminated.
 1827              	.LVL147:
1521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1828              		.loc 1 1522 0
 1829 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1830 0004 012B     		cmp	r3, #1
 1831 0006 1AD0     		beq	.L137
 1832              		.loc 1 1522 0 is_stmt 0 discriminator 2
 1833 0008 0122     		movs	r2, #1
 1834 000a 80F82020 		strb	r2, [r0, #32]
1523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1835              		.loc 1 1524 0 is_stmt 1 discriminator 2
 1836 000e 0223     		movs	r3, #2
 1837 0010 80F82130 		strb	r3, [r0, #33]
1525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1838              		.loc 1 1527 0 discriminator 2
 1839 0014 0368     		ldr	r3, [r0]
 1840 0016 CA21     		movs	r1, #202
 1841 0018 5962     		str	r1, [r3, #36]
 1842 001a 0368     		ldr	r3, [r0]
 1843 001c 5321     		movs	r1, #83
 1844 001e 5962     		str	r1, [r3, #36]
1528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the BYPSHAD bit */
1530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   CLEAR_BIT(RTC->CR, RTC_CR_BYPSHAD);
 1845              		.loc 1 1530 0 discriminator 2
 1846 0020 0849     		ldr	r1, .L138
 1847 0022 8B68     		ldr	r3, [r1, #8]
 1848 0024 23F02003 		bic	r3, r3, #32
 1849 0028 8B60     		str	r3, [r1, #8]
1531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1850              		.loc 1 1533 0 discriminator 2
 1851 002a 0368     		ldr	r3, [r0]
 1852 002c FF21     		movs	r1, #255
 1853 002e 5962     		str	r1, [r3, #36]
1534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
1536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1854              		.loc 1 1536 0 discriminator 2
 1855 0030 80F82120 		strb	r2, [r0, #33]
1537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1856              		.loc 1 1539 0 discriminator 2
 1857 0034 0023     		movs	r3, #0
 1858 0036 80F82030 		strb	r3, [r0, #32]
1540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 1859              		.loc 1 1541 0 discriminator 2
 1860 003a 1846     		mov	r0, r3
 1861              	.LVL148:
 1862 003c 7047     		bx	lr
 1863              	.LVL149:
 1864              	.L137:
1522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 1865              		.loc 1 1522 0
 1866 003e 0220     		movs	r0, #2
 1867              	.LVL150:
1542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1868              		.loc 1 1542 0
 1869 0040 7047     		bx	lr
 1870              	.L139:
 1871 0042 00BF     		.align	2
 1872              	.L138:
 1873 0044 00280040 		.word	1073752064
 1874              		.cfi_endproc
 1875              	.LFE340:
 1877              		.section	.text.HAL_RTCEx_AlarmBEventCallback,"ax",%progbits
 1878              		.align	1
 1879              		.weak	HAL_RTCEx_AlarmBEventCallback
 1880              		.syntax unified
 1881              		.thumb
 1882              		.thumb_func
 1883              		.fpu fpv4-sp-d16
 1885              	HAL_RTCEx_AlarmBEventCallback:
 1886              	.LFB341:
1543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
1545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Set SSR Underflow detection with Interrupt.
1547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSSRU_IT(RTC_HandleTypeDef *hrtc)
1551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
1552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
1554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable IT SSRU */
1561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_SSRU_ENABLE_IT(hrtc, RTC_IT_SSRU);
1562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* RTC SSRU Interrupt Configuration: EXTI configuration */
1564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_SSRU_EXTI_ENABLE_IT();
1565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
1566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
1574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
1576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
1577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Deactivate SSR Underflow.
1580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateSSRU(RTC_HandleTypeDef *hrtc)
1584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
1585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
1587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
1594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_SSRU_DISABLE_IT(hrtc, RTC_IT_TS);
1595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
1603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
1605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
1606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Handle SSR underflow interrupt request.
1609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval None
1611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** void HAL_RTCEx_SSRUIRQHandler(RTC_HandleTypeDef *hrtc)
1613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
1614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((RTC->MISR & RTC_MISR_SSRUMF) != 0u)
1615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Immediatly clear flags */
1617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     RTC->SCR = RTC_SCR_CSSRUF;
1618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* SSRU callback */
1620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Call SSRUEvent registered Callback */
1622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->SSRUEventCallback(hrtc);
1623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else
1624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     HAL_RTCEx_SSRUEventCallback(hrtc);
1625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
1629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
1630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
1631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  SSR underflow callback.
1634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval None
1636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_SSRUEventCallback(RTC_HandleTypeDef *hrtc)
1638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
1639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****             the HAL_RTCEx_SSRUEventCallback could be implemented in the user file
1644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    */
1645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
1646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
1647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @}
1650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group4
1653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief    Extended features functions
1654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *
1655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @verbatim
1656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****  ===============================================================================
1657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                  ##### Extended features functions #####
1658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****  ===============================================================================
1659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     [..]  This section provides functions allowing to:
1660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) RTC Alarm B callback
1661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       (+) RTC Poll for Alarm B request
1662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @endverbatim
1664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @{
1665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Alarm B callback.
1669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval None
1671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef *hrtc)
1673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1887              		.loc 1 1673 0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 0, uses_anonymous_args = 0
 1891              		@ link register save eliminated.
 1892              	.LVL151:
1674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****             the HAL_RTCEx_AlarmBEventCallback could be implemented in the user file
1679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    */
1680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1893              		.loc 1 1680 0
 1894 0000 7047     		bx	lr
 1895              		.cfi_endproc
 1896              	.LFE341:
 1898              		.section	.text.HAL_RTCEx_PollForAlarmBEvent,"ax",%progbits
 1899              		.align	1
 1900              		.global	HAL_RTCEx_PollForAlarmBEvent
 1901              		.syntax unified
 1902              		.thumb
 1903              		.thumb_func
 1904              		.fpu fpv4-sp-d16
 1906              	HAL_RTCEx_PollForAlarmBEvent:
 1907              	.LFB342:
1681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Handle Alarm B Polling request.
1684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForAlarmBEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1908              		.loc 1 1689 0
 1909              		.cfi_startproc
 1910              		@ args = 0, pretend = 0, frame = 0
 1911              		@ frame_needed = 0, uses_anonymous_args = 0
 1912              	.LVL152:
 1913 0000 70B5     		push	{r4, r5, r6, lr}
 1914              		.cfi_def_cfa_offset 16
 1915              		.cfi_offset 4, -16
 1916              		.cfi_offset 5, -12
 1917              		.cfi_offset 6, -8
 1918              		.cfi_offset 14, -4
 1919 0002 0446     		mov	r4, r0
 1920 0004 0D46     		mov	r5, r1
1690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1921              		.loc 1 1690 0
 1922 0006 FFF7FEFF 		bl	HAL_GetTick
 1923              	.LVL153:
 1924 000a 0646     		mov	r6, r0
 1925              	.LVL154:
 1926              	.L143:
1691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) == 0U)
 1927              		.loc 1 1692 0
 1928 000c 2368     		ldr	r3, [r4]
 1929 000e DA68     		ldr	r2, [r3, #12]
 1930 0010 12F4007F 		tst	r2, #512
 1931 0014 0DD1     		bne	.L148
1693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 1932              		.loc 1 1694 0
 1933 0016 B5F1FF3F 		cmp	r5, #-1
 1934 001a F7D0     		beq	.L143
1695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
1696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1935              		.loc 1 1696 0
 1936 001c FFF7FEFF 		bl	HAL_GetTick
 1937              	.LVL155:
 1938 0020 801B     		subs	r0, r0, r6
 1939 0022 A842     		cmp	r0, r5
 1940 0024 01D8     		bhi	.L144
 1941              		.loc 1 1696 0 is_stmt 0 discriminator 1
 1942 0026 002D     		cmp	r5, #0
 1943 0028 F0D1     		bne	.L143
 1944              	.L144:
1697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
1698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1945              		.loc 1 1698 0 is_stmt 1
 1946 002a 0320     		movs	r0, #3
 1947 002c 84F82100 		strb	r0, [r4, #33]
1699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1948              		.loc 1 1699 0
 1949 0030 08E0     		b	.L145
 1950              	.L148:
1700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
1701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
1702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the Alarm Flag */
1705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 1951              		.loc 1 1705 0
 1952 0032 DA68     		ldr	r2, [r3, #12]
 1953 0034 D2B2     		uxtb	r2, r2
 1954 0036 62F42072 		orn	r2, r2, #640
 1955 003a DA60     		str	r2, [r3, #12]
1706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
1708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1956              		.loc 1 1708 0
 1957 003c 0123     		movs	r3, #1
 1958 003e 84F82130 		strb	r3, [r4, #33]
1709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 1959              		.loc 1 1710 0
 1960 0042 0020     		movs	r0, #0
 1961              	.L145:
1711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 1962              		.loc 1 1711 0
 1963 0044 70BD     		pop	{r4, r5, r6, pc}
 1964              		.cfi_endproc
 1965              	.LFE342:
 1967              		.section	.text.HAL_RTCEx_SetTamper,"ax",%progbits
 1968              		.align	1
 1969              		.global	HAL_RTCEx_SetTamper
 1970              		.syntax unified
 1971              		.thumb
 1972              		.thumb_func
 1973              		.fpu fpv4-sp-d16
 1975              	HAL_RTCEx_SetTamper:
 1976              	.LFB343:
1712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @}
1715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group5
1718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief      Extended RTC Tamper functions
1719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *
1720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @verbatim
1721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ==============================================================================
1722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                          ##### Tamper functions #####
1723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ==============================================================================
1724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   [..]
1725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    (+) Before calling any tamper or internal tamper function, you have to call first
1726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****        HAL_RTC_Init() function.
1727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    (+) In that ine you can select to output tamper event on RTC pin.
1728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   [..]
1729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    (+) Enable the Tamper and configure the Tamper filter count, trigger Edge
1730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****        or Level according to the Tamper filter (if equal to 0 Edge else Level)
1731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****        value, sampling frequency, NoErase, MaskFlag, precharge or discharge and
1732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****        Pull-UP, timestamp using the HAL_RTCEx_SetTamper() function.
1733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****        You can configure Tamper with interrupt mode using HAL_RTCEx_SetTamper_IT() function.
1734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    (+) The default configuration of the Tamper erases the backup registers. To avoid
1735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****        erase, enable the NoErase field on the TAMP_TAMPCR register.
1736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   [..]
1737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    (+) Enable Internal Tamper and configure it with interrupt, timestamp using
1738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****        the HAL_RTCEx_SetInternalTamper() function.
1739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @endverbatim
1741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @{
1742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
1745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Set Tamper
1747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
1749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef *sTamper)
1752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
1753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmpreg;
1754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process TAMP instance pointer */
1755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset);
1756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
1758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
1759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
1760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
1761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
1762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
1763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
1764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
1765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
1766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
1767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Trigger and Filter have exclusive configurations */
1768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(((sTamper->Filter != RTC_TAMPERFILTER_DISABLE) && ((sTamper->Trigger == RTC_TAMPERTR
1769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                || ((sTamper->Filter == RTC_TAMPERFILTER_DISABLE) && ((sTamper->Trigger == RTC_TAMPE
1770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configuration register 2 */
1772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpreg = tamp->CR2;
1773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpreg &= ~((sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos) | (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Po
1774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the tamper trigger bit */
1776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((sTamper->Trigger == RTC_TAMPERTRIGGER_HIGHLEVEL) || (sTamper->Trigger == RTC_TAMPERTRIGGER_F
1777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos);
1779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
1782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
1783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Pos);
1785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
1788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
1789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1NOERASE_Pos);
1791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->CR2 = tmpreg;
1793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure filtering parameters */
1795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->FLTCR = (sTamper->Filter) | (sTamper->SamplingFrequency) | \
1796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                 (sTamper->PrechargeDuration) | (sTamper->TamperPullUp);
1797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure Timestamp saving on tamper detection */
1799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_TAMPTS) != (sTamper->TimeStampOnTamperDetection))
1800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tmpreg = (hrtc->Instance->CR & ~RTC_CR_TAMPTS);
1803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->Instance->CR = (tmpreg | (sTamper->TimeStampOnTamperDetection));
1804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable selected tamper */
1808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->CR1 |= (sTamper->Tamper);
1809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
1811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
1812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
1813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Set Tamper.
1815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @note   By calling this API we disable the tamper interrupt for all tampers.
1816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
1818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef *sTamper)
1821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 1977              		.loc 1 1821 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 0
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              		@ link register save eliminated.
 1982              	.LVL156:
1822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmpreg;
1823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
1825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
1826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
1827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
1828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
1829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
1830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
1831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
1832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
1833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
1834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
1836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1983              		.loc 1 1836 0
 1984 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1985 0004 012B     		cmp	r3, #1
 1986 0006 6AD0     		beq	.L163
1821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 1987              		.loc 1 1821 0 discriminator 2
 1988 0008 70B4     		push	{r4, r5, r6}
 1989              		.cfi_def_cfa_offset 12
 1990              		.cfi_offset 4, -12
 1991              		.cfi_offset 5, -8
 1992              		.cfi_offset 6, -4
 1993              		.loc 1 1836 0 discriminator 2
 1994 000a 0123     		movs	r3, #1
 1995 000c 80F82030 		strb	r3, [r0, #32]
1837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1996              		.loc 1 1838 0 discriminator 2
 1997 0010 0223     		movs	r3, #2
 1998 0012 80F82130 		strb	r3, [r0, #33]
1839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Read register */
1841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpreg = hrtc->Instance->TAMPCR;
 1999              		.loc 1 1841 0 discriminator 2
 2000 0016 0468     		ldr	r4, [r0]
 2001 0018 236C     		ldr	r3, [r4, #64]
 2002              	.LVL157:
1842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER1_SUPPORT)
1844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((sTamper->Tamper & RTC_TAMPER_1) != 0)
 2003              		.loc 1 1844 0 discriminator 2
 2004 001a 0A68     		ldr	r2, [r1]
 2005 001c 12F0010F 		tst	r2, #1
 2006 0020 11D0     		beq	.L151
1845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     MODIFY_REG(tmpreg,
 2007              		.loc 1 1846 0
 2008 0022 23F00713 		bic	r3, r3, #458759
 2009              	.LVL158:
 2010 0026 8D68     		ldr	r5, [r1, #8]
 2011 0028 05B1     		cbz	r5, .L152
 2012 002a 0225     		movs	r5, #2
 2013              	.L152:
 2014              		.loc 1 1846 0 is_stmt 0 discriminator 4
 2015 002c 1543     		orrs	r5, r5, r2
 2016 002e CE68     		ldr	r6, [r1, #12]
 2017 0030 0EB1     		cbz	r6, .L153
 2018              		.loc 1 1846 0
 2019 0032 4FF40036 		mov	r6, #131072
 2020              	.L153:
 2021              		.loc 1 1846 0 discriminator 8
 2022 0036 3543     		orrs	r5, r5, r6
 2023 0038 0E69     		ldr	r6, [r1, #16]
 2024 003a B6F5802F 		cmp	r6, #262144
 2025 003e 00D0     		beq	.L154
 2026              		.loc 1 1846 0
 2027 0040 0026     		movs	r6, #0
 2028              	.L154:
 2029              		.loc 1 1846 0 discriminator 12
 2030 0042 3543     		orrs	r5, r5, r6
 2031 0044 2B43     		orrs	r3, r3, r5
 2032              	.LVL159:
 2033              	.L151:
1847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (RTC_TAMPCR_TAMP1E | RTC_TAMPCR_TAMP1TRG | RTC_TAMPCR_TAMPIE | RTC_TAMPCR_TAMP1IE | 
1848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                sTamper->Tamper | \
1849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->Trigger == RTC_TAMPERTRIGGER_RISINGEDGE ?  0U : RTC_TAMPCR_TAMP1TRG) | \
1850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->NoErase == RTC_TAMPER_ERASE_BACKUP_ENABLE ? 0U : RTC_TAMPCR_TAMP1NOERASE )
1851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->MaskFlag == RTC_TAMPERMASK_FLAG_ENABLE ? RTC_TAMPCR_TAMP1MF : 0U) \
1852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****               );
1853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER1_SUPPORT */
1855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER2_SUPPORT)
1857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((sTamper->Tamper & RTC_TAMPER_2) != 0)
 2034              		.loc 1 1857 0 is_stmt 1
 2035 0046 12F0080F 		tst	r2, #8
 2036 004a 13D0     		beq	.L155
1858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     MODIFY_REG(tmpreg,
 2037              		.loc 1 1859 0
 2038 004c 23F46013 		bic	r3, r3, #3670016
 2039              	.LVL160:
 2040 0050 23F01C03 		bic	r3, r3, #28
 2041 0054 8D68     		ldr	r5, [r1, #8]
 2042 0056 05B1     		cbz	r5, .L156
 2043 0058 1025     		movs	r5, #16
 2044              	.L156:
 2045              		.loc 1 1859 0 is_stmt 0 discriminator 4
 2046 005a 1543     		orrs	r5, r5, r2
 2047 005c CE68     		ldr	r6, [r1, #12]
 2048 005e 0EB1     		cbz	r6, .L157
 2049              		.loc 1 1859 0
 2050 0060 4FF48016 		mov	r6, #1048576
 2051              	.L157:
 2052              		.loc 1 1859 0 discriminator 8
 2053 0064 3543     		orrs	r5, r5, r6
 2054 0066 0E69     		ldr	r6, [r1, #16]
 2055 0068 B6F5802F 		cmp	r6, #262144
 2056 006c 31D0     		beq	.L177
 2057              		.loc 1 1859 0
 2058 006e 0026     		movs	r6, #0
 2059              	.L158:
 2060              		.loc 1 1859 0 discriminator 12
 2061 0070 3543     		orrs	r5, r5, r6
 2062 0072 2B43     		orrs	r3, r3, r5
 2063              	.LVL161:
 2064              	.L155:
1860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (RTC_TAMPCR_TAMP2E | RTC_TAMPCR_TAMP2TRG | RTC_TAMPCR_TAMPIE | RTC_TAMPCR_TAMP2IE | 
1861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                sTamper->Tamper | \
1862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->Trigger == RTC_TAMPERTRIGGER_RISINGEDGE ?  0U : RTC_TAMPCR_TAMP2TRG) | \
1863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->NoErase == RTC_TAMPER_ERASE_BACKUP_ENABLE ? 0U : RTC_TAMPCR_TAMP2NOERASE )
1864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->MaskFlag == RTC_TAMPERMASK_FLAG_ENABLE ? RTC_TAMPCR_TAMP2MF : 0U) \
1865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****               );
1866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER2_SUPPORT */
1868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
1870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((sTamper->Tamper & RTC_TAMPER_3) != 0)
 2065              		.loc 1 1870 0 is_stmt 1
 2066 0074 12F0200F 		tst	r2, #32
 2067 0078 13D0     		beq	.L159
1871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     MODIFY_REG(tmpreg,
 2068              		.loc 1 1872 0
 2069 007a 23F0E073 		bic	r3, r3, #29360128
 2070              	.LVL162:
 2071 007e 23F06403 		bic	r3, r3, #100
 2072 0082 8D68     		ldr	r5, [r1, #8]
 2073 0084 05B1     		cbz	r5, .L160
 2074 0086 4025     		movs	r5, #64
 2075              	.L160:
 2076              		.loc 1 1872 0 is_stmt 0 discriminator 4
 2077 0088 2A43     		orrs	r2, r2, r5
 2078 008a CD68     		ldr	r5, [r1, #12]
 2079 008c 0DB1     		cbz	r5, .L161
 2080              		.loc 1 1872 0
 2081 008e 4FF40005 		mov	r5, #8388608
 2082              	.L161:
 2083              		.loc 1 1872 0 discriminator 8
 2084 0092 2A43     		orrs	r2, r2, r5
 2085 0094 0D69     		ldr	r5, [r1, #16]
 2086 0096 B5F5802F 		cmp	r5, #262144
 2087 009a 1DD0     		beq	.L178
 2088              		.loc 1 1872 0
 2089 009c 0025     		movs	r5, #0
 2090              	.L162:
 2091              		.loc 1 1872 0 discriminator 12
 2092 009e 2A43     		orrs	r2, r2, r5
 2093 00a0 1343     		orrs	r3, r3, r2
 2094              	.LVL163:
 2095              	.L159:
1873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (RTC_TAMPCR_TAMP3E | RTC_TAMPCR_TAMP3TRG | RTC_TAMPCR_TAMPIE | RTC_TAMPCR_TAMP3IE | 
1874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                sTamper->Tamper | \
1875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->Trigger == RTC_TAMPERTRIGGER_RISINGEDGE ?  0U : RTC_TAMPCR_TAMP3TRG) | \
1876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->NoErase == RTC_TAMPER_ERASE_BACKUP_ENABLE ? 0U : RTC_TAMPCR_TAMP3NOERASE )
1877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->MaskFlag == RTC_TAMPERMASK_FLAG_ENABLE ? RTC_TAMPCR_TAMP3MF : 0U) \
1878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****               );
1879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
1881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Update common parameters */
1883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   MODIFY_REG(tmpreg,
 2096              		.loc 1 1883 0 is_stmt 1
 2097 00a2 23F47F43 		bic	r3, r3, #65280
 2098              	.LVL164:
 2099 00a6 23F08003 		bic	r3, r3, #128
 2100 00aa 4A69     		ldr	r2, [r1, #20]
 2101 00ac 8D69     		ldr	r5, [r1, #24]
 2102 00ae 2A43     		orrs	r2, r2, r5
 2103 00b0 CD69     		ldr	r5, [r1, #28]
 2104 00b2 2A43     		orrs	r2, r2, r5
 2105 00b4 0D6A     		ldr	r5, [r1, #32]
 2106 00b6 2A43     		orrs	r2, r2, r5
 2107 00b8 496A     		ldr	r1, [r1, #36]
 2108              	.LVL165:
 2109 00ba 0A43     		orrs	r2, r2, r1
 2110 00bc 1343     		orrs	r3, r3, r2
 2111              	.LVL166:
1884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****              (RTC_TAMPCR_TAMPTS | RTC_TAMPCR_TAMPFREQ | RTC_TAMPCR_TAMPFLT | RTC_TAMPCR_TAMPPRCH | 
1885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****              sTamper->Filter | sTamper->SamplingFrequency | sTamper->PrechargeDuration | sTamper->T
1886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****              sTamper->TimeStampOnTamperDetection \
1887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****              );
1888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Set register */
1890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   WRITE_REG (hrtc->Instance->TAMPCR, tmpreg);
 2112              		.loc 1 1890 0
 2113 00be 2364     		str	r3, [r4, #64]
1891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2114              		.loc 1 1892 0
 2115 00c0 0123     		movs	r3, #1
 2116              	.LVL167:
 2117 00c2 80F82130 		strb	r3, [r0, #33]
 2118              	.LVL168:
1893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
1895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2119              		.loc 1 1895 0
 2120 00c6 0023     		movs	r3, #0
 2121 00c8 80F82030 		strb	r3, [r0, #32]
1896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 2122              		.loc 1 1897 0
 2123 00cc 1846     		mov	r0, r3
 2124              	.LVL169:
1898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2125              		.loc 1 1898 0
 2126 00ce 70BC     		pop	{r4, r5, r6}
 2127              		.cfi_remember_state
 2128              		.cfi_restore 6
 2129              		.cfi_restore 5
 2130              		.cfi_restore 4
 2131              		.cfi_def_cfa_offset 0
 2132 00d0 7047     		bx	lr
 2133              	.LVL170:
 2134              	.L177:
 2135              		.cfi_restore_state
1859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (RTC_TAMPCR_TAMP2E | RTC_TAMPCR_TAMP2TRG | RTC_TAMPCR_TAMPIE | RTC_TAMPCR_TAMP2IE | 
 2136              		.loc 1 1859 0
 2137 00d2 4FF40016 		mov	r6, #2097152
 2138 00d6 CBE7     		b	.L158
 2139              	.L178:
1872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (RTC_TAMPCR_TAMP3E | RTC_TAMPCR_TAMP3TRG | RTC_TAMPCR_TAMPIE | RTC_TAMPCR_TAMP3IE | 
 2140              		.loc 1 1872 0
 2141 00d8 4FF08075 		mov	r5, #16777216
 2142 00dc DFE7     		b	.L162
 2143              	.L163:
 2144              		.cfi_def_cfa_offset 0
 2145              		.cfi_restore 4
 2146              		.cfi_restore 5
 2147              		.cfi_restore 6
1836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 2148              		.loc 1 1836 0
 2149 00de 0220     		movs	r0, #2
 2150              	.LVL171:
 2151              		.loc 1 1898 0
 2152 00e0 7047     		bx	lr
 2153              		.cfi_endproc
 2154              	.LFE343:
 2156              		.section	.text.HAL_RTCEx_SetTamper_IT,"ax",%progbits
 2157              		.align	1
 2158              		.global	HAL_RTCEx_SetTamper_IT
 2159              		.syntax unified
 2160              		.thumb
 2161              		.thumb_func
 2162              		.fpu fpv4-sp-d16
 2164              	HAL_RTCEx_SetTamper_IT:
 2165              	.LFB344:
1899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
1900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
1904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Set Tamper with interrupt.
1906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
1908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef *sTamper)
1911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
1912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmpreg;
1913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process TAMP instance pointer */
1914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset);
1915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
1917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
1918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
1919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
1920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
1921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
1922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
1923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
1924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
1925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
1926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Copy configuration register into temporary variable */
1928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpreg = tamp->CR2;
1929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the bits that are going to be configured and leave the others unchanged */
1931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpreg &= ~((sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos) | (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Po
1932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
1934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1TRG_Pos);
1936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the tamper flags masking bit */
1939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (sTamper->MaskFlag != RTC_TAMPERMASK_FLAG_DISABLE)
1940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1MSK_Pos);
1942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure the tamper backup registers erasure bit */
1945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if (sTamper->NoErase != RTC_TAMPER_ERASE_BACKUP_ENABLE)
1946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tmpreg |= (sTamper->Tamper << TAMP_CR2_TAMP1NOERASE_Pos);
1948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->CR2 = tmpreg;
1950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure filtering parameters */
1952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->FLTCR = (sTamper->Filter) | (sTamper->SamplingFrequency) | \
1953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                 (sTamper->PrechargeDuration) | (sTamper->TamperPullUp);
1954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure Timestamp saving on tamper detection */
1956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((hrtc->Instance->CR & RTC_CR_TAMPTS) != (sTamper->TimeStampOnTamperDetection))
1957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
1958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     tmpreg = (hrtc->Instance->CR & ~RTC_CR_TAMPTS);
1960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->Instance->CR = (tmpreg | (sTamper->TimeStampOnTamperDetection));
1961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
1963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Configure RTC Tamper Interrupt: EXTI configuration */
1965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
1966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_FALLING_EDGE();
1967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable interrupt on selected tamper */
1969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->IER |= sTamper->Tamper;
1970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Enable selected tamper */
1972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->CR1 |= sTamper->Tamper;
1973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
1975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
1976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
1977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
1979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Set Tamper with interrupt.
1980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    * @param  hrtc RTC handle
1981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
1982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
1983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
1984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef *sTamper)
1985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 2166              		.loc 1 1985 0
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 0
 2169              		@ frame_needed = 0, uses_anonymous_args = 0
 2170              		@ link register save eliminated.
 2171              	.LVL172:
1986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmpreg;
1987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
1988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
1989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
1990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_INTERRUPT(sTamper->Interrupt));
1991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
1992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_ERASE_MODE(sTamper->NoErase));
1993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_MASKFLAG_STATE(sTamper->MaskFlag));
1994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
1995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
1996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
1997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
1998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
1999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
2001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2172              		.loc 1 2001 0
 2173 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2174 0004 012B     		cmp	r3, #1
 2175 0006 79D0     		beq	.L193
1985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmpreg;
 2176              		.loc 1 1985 0 discriminator 2
 2177 0008 70B4     		push	{r4, r5, r6}
 2178              		.cfi_def_cfa_offset 12
 2179              		.cfi_offset 4, -12
 2180              		.cfi_offset 5, -8
 2181              		.cfi_offset 6, -4
 2182              		.loc 1 2001 0 discriminator 2
 2183 000a 0123     		movs	r3, #1
 2184 000c 80F82030 		strb	r3, [r0, #32]
2002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2185              		.loc 1 2003 0 discriminator 2
 2186 0010 0223     		movs	r3, #2
 2187 0012 80F82130 		strb	r3, [r0, #33]
2004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Read register */
2006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmpreg = hrtc->Instance->TAMPCR;
 2188              		.loc 1 2006 0 discriminator 2
 2189 0016 0468     		ldr	r4, [r0]
 2190 0018 236C     		ldr	r3, [r4, #64]
 2191              	.LVL173:
2007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER1_SUPPORT)
2009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((sTamper->Tamper & RTC_TAMPER_1) != 0)
 2192              		.loc 1 2009 0 discriminator 2
 2193 001a 0A68     		ldr	r2, [r1]
 2194 001c 12F0010F 		tst	r2, #1
 2195 0020 13D0     		beq	.L181
2010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
2011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     MODIFY_REG(tmpreg,
 2196              		.loc 1 2011 0
 2197 0022 23F00713 		bic	r3, r3, #458759
 2198              	.LVL174:
 2199 0026 4D68     		ldr	r5, [r1, #4]
 2200 0028 1543     		orrs	r5, r5, r2
 2201 002a 8E68     		ldr	r6, [r1, #8]
 2202 002c 06B1     		cbz	r6, .L182
 2203 002e 0226     		movs	r6, #2
 2204              	.L182:
 2205              		.loc 1 2011 0 is_stmt 0 discriminator 4
 2206 0030 3543     		orrs	r5, r5, r6
 2207 0032 CE68     		ldr	r6, [r1, #12]
 2208 0034 0EB1     		cbz	r6, .L183
 2209              		.loc 1 2011 0
 2210 0036 4FF40036 		mov	r6, #131072
 2211              	.L183:
 2212              		.loc 1 2011 0 discriminator 8
 2213 003a 3543     		orrs	r5, r5, r6
 2214 003c 0E69     		ldr	r6, [r1, #16]
 2215 003e B6F5802F 		cmp	r6, #262144
 2216 0042 00D0     		beq	.L184
 2217              		.loc 1 2011 0
 2218 0044 0026     		movs	r6, #0
 2219              	.L184:
 2220              		.loc 1 2011 0 discriminator 12
 2221 0046 3543     		orrs	r5, r5, r6
 2222 0048 2B43     		orrs	r3, r3, r5
 2223              	.LVL175:
 2224              	.L181:
2012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (RTC_TAMPCR_TAMP1E | RTC_TAMPCR_TAMP1TRG | RTC_TAMPCR_TAMPIE | RTC_TAMPCR_TAMP1IE | 
2013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                sTamper->Tamper | sTamper->Interrupt | \
2014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->Trigger == RTC_TAMPERTRIGGER_RISINGEDGE ?  0U : RTC_TAMPCR_TAMP1TRG) | \
2015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->NoErase == RTC_TAMPER_ERASE_BACKUP_ENABLE ? 0U : RTC_TAMPCR_TAMP1NOERASE )
2016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->MaskFlag == RTC_TAMPERMASK_FLAG_ENABLE ? RTC_TAMPCR_TAMP1MF : 0U) \
2017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****               );
2018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER1_SUPPORT */
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER2_SUPPORT)
2022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((sTamper->Tamper & RTC_TAMPER_2) != 0)
 2225              		.loc 1 2022 0 is_stmt 1
 2226 004a 12F0080F 		tst	r2, #8
 2227 004e 15D0     		beq	.L185
2023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
2024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     MODIFY_REG(tmpreg,
 2228              		.loc 1 2024 0
 2229 0050 23F46013 		bic	r3, r3, #3670016
 2230              	.LVL176:
 2231 0054 23F01C03 		bic	r3, r3, #28
 2232 0058 4D68     		ldr	r5, [r1, #4]
 2233 005a 1543     		orrs	r5, r5, r2
 2234 005c 8E68     		ldr	r6, [r1, #8]
 2235 005e 06B1     		cbz	r6, .L186
 2236 0060 1026     		movs	r6, #16
 2237              	.L186:
 2238              		.loc 1 2024 0 is_stmt 0 discriminator 4
 2239 0062 3543     		orrs	r5, r5, r6
 2240 0064 CE68     		ldr	r6, [r1, #12]
 2241 0066 0EB1     		cbz	r6, .L187
 2242              		.loc 1 2024 0
 2243 0068 4FF48016 		mov	r6, #1048576
 2244              	.L187:
 2245              		.loc 1 2024 0 discriminator 8
 2246 006c 3543     		orrs	r5, r5, r6
 2247 006e 0E69     		ldr	r6, [r1, #16]
 2248 0070 B6F5802F 		cmp	r6, #262144
 2249 0074 3CD0     		beq	.L207
 2250              		.loc 1 2024 0
 2251 0076 0026     		movs	r6, #0
 2252              	.L188:
 2253              		.loc 1 2024 0 discriminator 12
 2254 0078 3543     		orrs	r5, r5, r6
 2255 007a 2B43     		orrs	r3, r3, r5
 2256              	.LVL177:
 2257              	.L185:
2025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (RTC_TAMPCR_TAMP2E | RTC_TAMPCR_TAMP2TRG | RTC_TAMPCR_TAMPIE | RTC_TAMPCR_TAMP2IE | 
2026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                sTamper->Tamper | sTamper->Interrupt | \
2027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->Trigger == RTC_TAMPERTRIGGER_RISINGEDGE ?  0U : RTC_TAMPCR_TAMP2TRG) | \
2028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->NoErase == RTC_TAMPER_ERASE_BACKUP_ENABLE ? 0U : RTC_TAMPCR_TAMP2NOERASE )
2029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->MaskFlag == RTC_TAMPERMASK_FLAG_ENABLE ? RTC_TAMPCR_TAMP2MF : 0U) \
2030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****               );
2031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
2032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER2_SUPPORT */
2033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
2035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((sTamper->Tamper & RTC_TAMPER_3) != 0)
 2258              		.loc 1 2035 0 is_stmt 1
 2259 007c 12F0200F 		tst	r2, #32
 2260 0080 15D0     		beq	.L189
2036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
2037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     MODIFY_REG(tmpreg,
 2261              		.loc 1 2037 0
 2262 0082 23F0E073 		bic	r3, r3, #29360128
 2263              	.LVL178:
 2264 0086 23F06403 		bic	r3, r3, #100
 2265 008a 4D68     		ldr	r5, [r1, #4]
 2266 008c 2A43     		orrs	r2, r2, r5
 2267 008e 8D68     		ldr	r5, [r1, #8]
 2268 0090 05B1     		cbz	r5, .L190
 2269 0092 4025     		movs	r5, #64
 2270              	.L190:
 2271              		.loc 1 2037 0 is_stmt 0 discriminator 4
 2272 0094 2A43     		orrs	r2, r2, r5
 2273 0096 CD68     		ldr	r5, [r1, #12]
 2274 0098 0DB1     		cbz	r5, .L191
 2275              		.loc 1 2037 0
 2276 009a 4FF40005 		mov	r5, #8388608
 2277              	.L191:
 2278              		.loc 1 2037 0 discriminator 8
 2279 009e 2A43     		orrs	r2, r2, r5
 2280 00a0 0D69     		ldr	r5, [r1, #16]
 2281 00a2 B5F5802F 		cmp	r5, #262144
 2282 00a6 26D0     		beq	.L208
 2283              		.loc 1 2037 0
 2284 00a8 0025     		movs	r5, #0
 2285              	.L192:
 2286              		.loc 1 2037 0 discriminator 12
 2287 00aa 2A43     		orrs	r2, r2, r5
 2288 00ac 1343     		orrs	r3, r3, r2
 2289              	.LVL179:
 2290              	.L189:
2038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (RTC_TAMPCR_TAMP3E | RTC_TAMPCR_TAMP3TRG | RTC_TAMPCR_TAMPIE | RTC_TAMPCR_TAMP3IE | 
2039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                sTamper->Tamper | sTamper->Interrupt | \
2040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->Trigger == RTC_TAMPERTRIGGER_RISINGEDGE ?  0U : RTC_TAMPCR_TAMP3TRG) | \
2041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->NoErase == RTC_TAMPER_ERASE_BACKUP_ENABLE ? 0U : RTC_TAMPCR_TAMP3NOERASE )
2042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (sTamper->MaskFlag == RTC_TAMPERMASK_FLAG_ENABLE ? RTC_TAMPCR_TAMP3MF : 0U) \
2043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****               );
2044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
2045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
2046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Update common parameters */
2048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   MODIFY_REG(tmpreg,
 2291              		.loc 1 2048 0 is_stmt 1
 2292 00ae 23F47F43 		bic	r3, r3, #65280
 2293              	.LVL180:
 2294 00b2 23F08003 		bic	r3, r3, #128
 2295 00b6 4A69     		ldr	r2, [r1, #20]
 2296 00b8 8D69     		ldr	r5, [r1, #24]
 2297 00ba 2A43     		orrs	r2, r2, r5
 2298 00bc CD69     		ldr	r5, [r1, #28]
 2299 00be 2A43     		orrs	r2, r2, r5
 2300 00c0 0D6A     		ldr	r5, [r1, #32]
 2301 00c2 2A43     		orrs	r2, r2, r5
 2302 00c4 496A     		ldr	r1, [r1, #36]
 2303              	.LVL181:
 2304 00c6 0A43     		orrs	r2, r2, r1
 2305 00c8 1343     		orrs	r3, r3, r2
 2306              	.LVL182:
2049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****              (RTC_TAMPCR_TAMPTS | RTC_TAMPCR_TAMPFREQ | RTC_TAMPCR_TAMPFLT | RTC_TAMPCR_TAMPPRCH | 
2050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****              sTamper->Filter | sTamper->SamplingFrequency | sTamper->PrechargeDuration | sTamper->T
2051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****              sTamper->TimeStampOnTamperDetection \
2052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****              );
2053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Set register */
2055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   WRITE_REG (hrtc->Instance->TAMPCR, tmpreg);
 2307              		.loc 1 2055 0
 2308 00ca 2364     		str	r3, [r4, #64]
2056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
2058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 2309              		.loc 1 2058 0
 2310 00cc 0C4B     		ldr	r3, .L209
 2311              	.LVL183:
 2312 00ce 1A68     		ldr	r2, [r3]
 2313 00d0 42F40022 		orr	r2, r2, #524288
 2314 00d4 1A60     		str	r2, [r3]
 2315              	.LVL184:
2059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 2316              		.loc 1 2059 0
 2317 00d6 9A68     		ldr	r2, [r3, #8]
 2318 00d8 42F40022 		orr	r2, r2, #524288
 2319 00dc 9A60     		str	r2, [r3, #8]
2060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2320              		.loc 1 2061 0
 2321 00de 0123     		movs	r3, #1
 2322 00e0 80F82130 		strb	r3, [r0, #33]
2062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
2064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2323              		.loc 1 2064 0
 2324 00e4 0023     		movs	r3, #0
 2325 00e6 80F82030 		strb	r3, [r0, #32]
2065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 2326              		.loc 1 2066 0
 2327 00ea 1846     		mov	r0, r3
 2328              	.LVL185:
2067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2329              		.loc 1 2067 0
 2330 00ec 70BC     		pop	{r4, r5, r6}
 2331              		.cfi_remember_state
 2332              		.cfi_restore 6
 2333              		.cfi_restore 5
 2334              		.cfi_restore 4
 2335              		.cfi_def_cfa_offset 0
 2336 00ee 7047     		bx	lr
 2337              	.LVL186:
 2338              	.L207:
 2339              		.cfi_restore_state
2024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (RTC_TAMPCR_TAMP2E | RTC_TAMPCR_TAMP2TRG | RTC_TAMPCR_TAMPIE | RTC_TAMPCR_TAMP2IE | 
 2340              		.loc 1 2024 0
 2341 00f0 4FF40016 		mov	r6, #2097152
 2342 00f4 C0E7     		b	.L188
 2343              	.L208:
2037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****                (RTC_TAMPCR_TAMP3E | RTC_TAMPCR_TAMP3TRG | RTC_TAMPCR_TAMPIE | RTC_TAMPCR_TAMP3IE | 
 2344              		.loc 1 2037 0
 2345 00f6 4FF08075 		mov	r5, #16777216
 2346 00fa D6E7     		b	.L192
 2347              	.L193:
 2348              		.cfi_def_cfa_offset 0
 2349              		.cfi_restore 4
 2350              		.cfi_restore 5
 2351              		.cfi_restore 6
2001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 2352              		.loc 1 2001 0
 2353 00fc 0220     		movs	r0, #2
 2354              	.LVL187:
 2355              		.loc 1 2067 0
 2356 00fe 7047     		bx	lr
 2357              	.L210:
 2358              		.align	2
 2359              	.L209:
 2360 0100 00040140 		.word	1073808384
 2361              		.cfi_endproc
 2362              	.LFE344:
 2364              		.section	.text.HAL_RTCEx_DeactivateTamper,"ax",%progbits
 2365              		.align	1
 2366              		.global	HAL_RTCEx_DeactivateTamper
 2367              		.syntax unified
 2368              		.thumb
 2369              		.thumb_func
 2370              		.fpu fpv4-sp-d16
 2372              	HAL_RTCEx_DeactivateTamper:
 2373              	.LFB345:
2068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
2069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
2073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
2074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
2076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         This parameter can be a combination of the following values:
2077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_1
2078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_2
2079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
2080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef *hrtc, uint32_t Tamper)
2082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
2083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process TAMP instance pointer */
2084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset);
2085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
2087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
2089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->CR1 &= ~Tamper;
2090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear tamper mask/noerase/trigger configuration */
2092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->CR2 &= ~((Tamper << 24) | (Tamper << 16) | Tamper);
2093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear tamper interrupt mode configuration */
2095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->IER &= ~Tamper;
2096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear tamper interrupt and event flags (WO register) */
2098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tamp->SCR = Tamper;
2099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
2101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
2102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
2103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
2104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
2105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
2107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         This parameter can be any combination of the following values:
2108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_1
2109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_2
2110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         @arg RTC_TAMPER_3
2111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
2112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef *hrtc, uint32_t Tamper)
2114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 2374              		.loc 1 2114 0
 2375              		.cfi_startproc
 2376              		@ args = 0, pretend = 0, frame = 0
 2377              		@ frame_needed = 0, uses_anonymous_args = 0
 2378              		@ link register save eliminated.
 2379              	.LVL188:
2115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
2116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Locked */
2118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2380              		.loc 1 2118 0
 2381 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2382 0004 012B     		cmp	r3, #1
 2383 0006 30D0     		beq	.L216
 2384              		.loc 1 2118 0 is_stmt 0 discriminator 2
 2385 0008 0123     		movs	r3, #1
 2386 000a 80F82030 		strb	r3, [r0, #32]
2119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2387              		.loc 1 2120 0 is_stmt 1 discriminator 2
 2388 000e 0223     		movs	r3, #2
 2389 0010 80F82130 		strb	r3, [r0, #33]
2121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
2123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->Instance->TAMPCR &= ~Tamper;
 2390              		.loc 1 2123 0 discriminator 2
 2391 0014 0268     		ldr	r2, [r0]
 2392 0016 136C     		ldr	r3, [r2, #64]
 2393 0018 23EA0103 		bic	r3, r3, r1
 2394 001c 1364     		str	r3, [r2, #64]
2124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER1_SUPPORT)
2126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_1) != 0U)
 2395              		.loc 1 2126 0 discriminator 2
 2396 001e 11F0010F 		tst	r1, #1
 2397 0022 06D0     		beq	.L213
2127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
2128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Disable the Tamper1 interrupt */
2129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP1));
 2398              		.loc 1 2129 0
 2399 0024 0268     		ldr	r2, [r0]
 2400 0026 136C     		ldr	r3, [r2, #64]
 2401 0028 23F48033 		bic	r3, r3, #65536
 2402 002c 23F00403 		bic	r3, r3, #4
 2403 0030 1364     		str	r3, [r2, #64]
 2404              	.L213:
2130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
2131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER1_SUPPORT */
2132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_2) != 0U)
 2405              		.loc 1 2132 0
 2406 0032 11F0080F 		tst	r1, #8
 2407 0036 06D0     		beq	.L214
2133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
2134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Disable the Tamper2 interrupt */
2135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP2));
 2408              		.loc 1 2135 0
 2409 0038 0268     		ldr	r2, [r0]
 2410 003a 136C     		ldr	r3, [r2, #64]
 2411 003c 23F40023 		bic	r3, r3, #524288
 2412 0040 23F00403 		bic	r3, r3, #4
 2413 0044 1364     		str	r3, [r2, #64]
 2414              	.L214:
2136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
2137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
2138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   if ((Tamper & RTC_TAMPER_3) != 0U)
 2415              		.loc 1 2138 0
 2416 0046 11F0200F 		tst	r1, #32
 2417 004a 06D0     		beq	.L215
2139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
2140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     /* Disable the Tamper3 interrupt */
2141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     hrtc->Instance->TAMPCR &= ((uint32_t)~(RTC_IT_TAMP | RTC_IT_TAMP3));
 2418              		.loc 1 2141 0
 2419 004c 0268     		ldr	r2, [r0]
 2420 004e 136C     		ldr	r3, [r2, #64]
 2421 0050 23F48003 		bic	r3, r3, #4194304
 2422 0054 23F00403 		bic	r3, r3, #4
 2423 0058 1364     		str	r3, [r2, #64]
 2424              	.L215:
2142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
2143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
2144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2425              		.loc 1 2145 0
 2426 005a 0123     		movs	r3, #1
 2427 005c 80F82130 		strb	r3, [r0, #33]
2146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process Unlocked */
2148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2428              		.loc 1 2148 0
 2429 0060 0023     		movs	r3, #0
 2430 0062 80F82030 		strb	r3, [r0, #32]
2149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 2431              		.loc 1 2150 0
 2432 0066 1846     		mov	r0, r3
 2433              	.LVL189:
 2434 0068 7047     		bx	lr
 2435              	.LVL190:
 2436              	.L216:
2118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 2437              		.loc 1 2118 0
 2438 006a 0220     		movs	r0, #2
 2439              	.LVL191:
2151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2440              		.loc 1 2151 0
 2441 006c 7047     		bx	lr
 2442              		.cfi_endproc
 2443              	.LFE345:
 2445              		.section	.text.HAL_RTCEx_PollForTamper1Event,"ax",%progbits
 2446              		.align	1
 2447              		.global	HAL_RTCEx_PollForTamper1Event
 2448              		.syntax unified
 2449              		.thumb
 2450              		.thumb_func
 2451              		.fpu fpv4-sp-d16
 2453              	HAL_RTCEx_PollForTamper1Event:
 2454              	.LFB346:
2152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
2153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER1_SUPPORT)
2156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
2157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 1 Polling.
2158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
2160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
2161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper1Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
2163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 2455              		.loc 1 2163 0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 0
 2458              		@ frame_needed = 0, uses_anonymous_args = 0
 2459              	.LVL192:
 2460 0000 70B5     		push	{r4, r5, r6, lr}
 2461              		.cfi_def_cfa_offset 16
 2462              		.cfi_offset 4, -16
 2463              		.cfi_offset 5, -12
 2464              		.cfi_offset 6, -8
 2465              		.cfi_offset 14, -4
 2466 0002 0446     		mov	r4, r0
 2467 0004 0D46     		mov	r5, r1
2164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2468              		.loc 1 2164 0
 2469 0006 FFF7FEFF 		bl	HAL_GetTick
 2470              	.LVL193:
 2471 000a 0646     		mov	r6, r0
 2472              	.LVL194:
 2473              	.L219:
2165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
2167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) == 0U)
 2474              		.loc 1 2167 0
 2475 000c 2368     		ldr	r3, [r4]
 2476 000e DA68     		ldr	r2, [r3, #12]
 2477 0010 12F4005F 		tst	r2, #8192
 2478 0014 0DD1     		bne	.L224
2168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
2169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 2479              		.loc 1 2169 0
 2480 0016 B5F1FF3F 		cmp	r5, #-1
 2481 001a F7D0     		beq	.L219
2170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
2171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2482              		.loc 1 2171 0
 2483 001c FFF7FEFF 		bl	HAL_GetTick
 2484              	.LVL195:
 2485 0020 801B     		subs	r0, r0, r6
 2486 0022 A842     		cmp	r0, r5
 2487 0024 01D8     		bhi	.L220
 2488              		.loc 1 2171 0 is_stmt 0 discriminator 1
 2489 0026 002D     		cmp	r5, #0
 2490 0028 F0D1     		bne	.L219
 2491              	.L220:
2172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
2173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2492              		.loc 1 2173 0 is_stmt 1
 2493 002a 0320     		movs	r0, #3
 2494 002c 84F82100 		strb	r0, [r4, #33]
2174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2495              		.loc 1 2174 0
 2496 0030 08E0     		b	.L221
 2497              	.L224:
2175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
2176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
2177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
2178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
2180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP1F);
 2498              		.loc 1 2180 0
 2499 0032 DA68     		ldr	r2, [r3, #12]
 2500 0034 D2B2     		uxtb	r2, r2
 2501 0036 62F40252 		orn	r2, r2, #8320
 2502 003a DA60     		str	r2, [r3, #12]
2181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
2183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2503              		.loc 1 2183 0
 2504 003c 0123     		movs	r3, #1
 2505 003e 84F82130 		strb	r3, [r4, #33]
2184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 2506              		.loc 1 2185 0
 2507 0042 0020     		movs	r0, #0
 2508              	.L221:
2186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2509              		.loc 1 2186 0
 2510 0044 70BD     		pop	{r4, r5, r6, pc}
 2511              		.cfi_endproc
 2512              	.LFE346:
 2514              		.section	.text.HAL_RTCEx_PollForTamper2Event,"ax",%progbits
 2515              		.align	1
 2516              		.global	HAL_RTCEx_PollForTamper2Event
 2517              		.syntax unified
 2518              		.thumb
 2519              		.thumb_func
 2520              		.fpu fpv4-sp-d16
 2522              	HAL_RTCEx_PollForTamper2Event:
 2523              	.LFB347:
2187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER1_SUPPORT */
2188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
2190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 2 Polling.
2191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
2193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
2194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper2Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
2196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 2524              		.loc 1 2196 0
 2525              		.cfi_startproc
 2526              		@ args = 0, pretend = 0, frame = 0
 2527              		@ frame_needed = 0, uses_anonymous_args = 0
 2528              	.LVL196:
 2529 0000 70B5     		push	{r4, r5, r6, lr}
 2530              		.cfi_def_cfa_offset 16
 2531              		.cfi_offset 4, -16
 2532              		.cfi_offset 5, -12
 2533              		.cfi_offset 6, -8
 2534              		.cfi_offset 14, -4
 2535 0002 0446     		mov	r4, r0
 2536 0004 0D46     		mov	r5, r1
2197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2537              		.loc 1 2197 0
 2538 0006 FFF7FEFF 		bl	HAL_GetTick
 2539              	.LVL197:
 2540 000a 0646     		mov	r6, r0
 2541              	.LVL198:
 2542              	.L227:
2198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
2200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) == 0U)
 2543              		.loc 1 2200 0
 2544 000c 2368     		ldr	r3, [r4]
 2545 000e DA68     		ldr	r2, [r3, #12]
 2546 0010 12F4804F 		tst	r2, #16384
 2547 0014 0DD1     		bne	.L232
2201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
2202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 2548              		.loc 1 2202 0
 2549 0016 B5F1FF3F 		cmp	r5, #-1
 2550 001a F7D0     		beq	.L227
2203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
2204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2551              		.loc 1 2204 0
 2552 001c FFF7FEFF 		bl	HAL_GetTick
 2553              	.LVL199:
 2554 0020 801B     		subs	r0, r0, r6
 2555 0022 A842     		cmp	r0, r5
 2556 0024 01D8     		bhi	.L228
 2557              		.loc 1 2204 0 is_stmt 0 discriminator 1
 2558 0026 002D     		cmp	r5, #0
 2559 0028 F0D1     		bne	.L227
 2560              	.L228:
2205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
2206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2561              		.loc 1 2206 0 is_stmt 1
 2562 002a 0320     		movs	r0, #3
 2563 002c 84F82100 		strb	r0, [r4, #33]
2207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2564              		.loc 1 2207 0
 2565 0030 08E0     		b	.L229
 2566              	.L232:
2208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
2209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
2210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
2211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
2213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 2567              		.loc 1 2213 0
 2568 0032 DA68     		ldr	r2, [r3, #12]
 2569 0034 D2B2     		uxtb	r2, r2
 2570 0036 62F48142 		orn	r2, r2, #16512
 2571 003a DA60     		str	r2, [r3, #12]
2214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
2216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2572              		.loc 1 2216 0
 2573 003c 0123     		movs	r3, #1
 2574 003e 84F82130 		strb	r3, [r4, #33]
2217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 2575              		.loc 1 2218 0
 2576 0042 0020     		movs	r0, #0
 2577              	.L229:
2219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2578              		.loc 1 2219 0
 2579 0044 70BD     		pop	{r4, r5, r6, pc}
 2580              		.cfi_endproc
 2581              	.LFE347:
 2583              		.section	.text.HAL_RTCEx_PollForTamper3Event,"ax",%progbits
 2584              		.align	1
 2585              		.global	HAL_RTCEx_PollForTamper3Event
 2586              		.syntax unified
 2587              		.thumb
 2588              		.thumb_func
 2589              		.fpu fpv4-sp-d16
 2591              	HAL_RTCEx_PollForTamper3Event:
 2592              	.LFB348:
2220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
2222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
2223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 3 Polling.
2224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc  RTC handle
2225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  Timeout  Timeout duration
2226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval HAL status
2227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper3Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
2229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 2593              		.loc 1 2229 0
 2594              		.cfi_startproc
 2595              		@ args = 0, pretend = 0, frame = 0
 2596              		@ frame_needed = 0, uses_anonymous_args = 0
 2597              	.LVL200:
 2598 0000 70B5     		push	{r4, r5, r6, lr}
 2599              		.cfi_def_cfa_offset 16
 2600              		.cfi_offset 4, -16
 2601              		.cfi_offset 5, -12
 2602              		.cfi_offset 6, -8
 2603              		.cfi_offset 14, -4
 2604 0002 0446     		mov	r4, r0
 2605 0004 0D46     		mov	r5, r1
2230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2606              		.loc 1 2230 0
 2607 0006 FFF7FEFF 		bl	HAL_GetTick
 2608              	.LVL201:
 2609 000a 0646     		mov	r6, r0
 2610              	.LVL202:
 2611              	.L235:
2231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
2233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   while (__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) == 0U)
 2612              		.loc 1 2233 0
 2613 000c 2368     		ldr	r3, [r4]
 2614 000e DA68     		ldr	r2, [r3, #12]
 2615 0010 12F4004F 		tst	r2, #32768
 2616 0014 0CD1     		bne	.L240
2234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
2235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 2617              		.loc 1 2235 0
 2618 0016 B5F1FF3F 		cmp	r5, #-1
 2619 001a F7D0     		beq	.L235
2236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
2237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       if ((Timeout == 0) || ((HAL_GetTick() - tickstart) > Timeout))
 2620              		.loc 1 2237 0
 2621 001c 25B1     		cbz	r5, .L236
 2622              		.loc 1 2237 0 is_stmt 0 discriminator 1
 2623 001e FFF7FEFF 		bl	HAL_GetTick
 2624              	.LVL203:
 2625 0022 801B     		subs	r0, r0, r6
 2626 0024 A842     		cmp	r0, r5
 2627 0026 F1D9     		bls	.L235
 2628              	.L236:
2238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       {
2239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2629              		.loc 1 2239 0 is_stmt 1
 2630 0028 0320     		movs	r0, #3
 2631 002a 84F82100 		strb	r0, [r4, #33]
2240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2632              		.loc 1 2240 0
 2633 002e 0EE0     		b	.L237
 2634              	.L240:
2241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****       }
2242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
2243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   }
2244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
2246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 2635              		.loc 1 2246 0
 2636 0030 DA68     		ldr	r2, [r3, #12]
 2637 0032 D2B2     		uxtb	r2, r2
 2638 0034 42F07F42 		orr	r2, r2, #-16777216
 2639 0038 42F47F02 		orr	r2, r2, #16711680
 2640 003c 42F4FE42 		orr	r2, r2, #32512
 2641 0040 42F07F02 		orr	r2, r2, #127
 2642 0044 DA60     		str	r2, [r3, #12]
2247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Change RTC state */
2249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2643              		.loc 1 2249 0
 2644 0046 0123     		movs	r3, #1
 2645 0048 84F82130 		strb	r3, [r4, #33]
2250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return HAL_OK;
 2646              		.loc 1 2251 0
 2647 004c 0020     		movs	r0, #0
 2648              	.L237:
2252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2649              		.loc 1 2252 0
 2650 004e 70BD     		pop	{r4, r5, r6, pc}
 2651              		.cfi_endproc
 2652              	.LFE348:
 2654              		.section	.text.HAL_RTCEx_Tamper1EventCallback,"ax",%progbits
 2655              		.align	1
 2656              		.weak	HAL_RTCEx_Tamper1EventCallback
 2657              		.syntax unified
 2658              		.thumb
 2659              		.thumb_func
 2660              		.fpu fpv4-sp-d16
 2662              	HAL_RTCEx_Tamper1EventCallback:
 2663              	.LFB349:
2253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
2254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER1_SUPPORT)
2258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
2259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Tamper 1 callback.
2260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval None
2262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper1EventCallback(RTC_HandleTypeDef *hrtc)
2264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 2664              		.loc 1 2264 0
 2665              		.cfi_startproc
 2666              		@ args = 0, pretend = 0, frame = 0
 2667              		@ frame_needed = 0, uses_anonymous_args = 0
 2668              		@ link register save eliminated.
 2669              	.LVL204:
2265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
2266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper1EventCallback could be implemented in the user file
2270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    */
2271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2670              		.loc 1 2271 0
 2671 0000 7047     		bx	lr
 2672              		.cfi_endproc
 2673              	.LFE349:
 2675              		.section	.text.HAL_RTCEx_Tamper2EventCallback,"ax",%progbits
 2676              		.align	1
 2677              		.weak	HAL_RTCEx_Tamper2EventCallback
 2678              		.syntax unified
 2679              		.thumb
 2680              		.thumb_func
 2681              		.fpu fpv4-sp-d16
 2683              	HAL_RTCEx_Tamper2EventCallback:
 2684              	.LFB350:
2272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER1_SUPPORT */
2273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
2275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Tamper 2 callback.
2276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval None
2278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper2EventCallback(RTC_HandleTypeDef *hrtc)
2280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 2685              		.loc 1 2280 0
 2686              		.cfi_startproc
 2687              		@ args = 0, pretend = 0, frame = 0
 2688              		@ frame_needed = 0, uses_anonymous_args = 0
 2689              		@ link register save eliminated.
 2690              	.LVL205:
2281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
2282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper2EventCallback could be implemented in the user file
2286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    */
2287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2691              		.loc 1 2287 0
 2692 0000 7047     		bx	lr
 2693              		.cfi_endproc
 2694              	.LFE350:
 2696              		.section	.text.HAL_RTCEx_Tamper3EventCallback,"ax",%progbits
 2697              		.align	1
 2698              		.weak	HAL_RTCEx_Tamper3EventCallback
 2699              		.syntax unified
 2700              		.thumb
 2701              		.thumb_func
 2702              		.fpu fpv4-sp-d16
 2704              	HAL_RTCEx_Tamper3EventCallback:
 2705              	.LFB351:
2288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
2290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
2291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Tamper 3 callback.
2292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval None
2294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper3EventCallback(RTC_HandleTypeDef *hrtc)
2296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 2706              		.loc 1 2296 0
 2707              		.cfi_startproc
 2708              		@ args = 0, pretend = 0, frame = 0
 2709              		@ frame_needed = 0, uses_anonymous_args = 0
 2710              		@ link register save eliminated.
 2711              	.LVL206:
2297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
2298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   UNUSED(hrtc);
2299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper3EventCallback could be implemented in the user file
2302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    */
2303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2712              		.loc 1 2303 0
 2713 0000 7047     		bx	lr
 2714              		.cfi_endproc
 2715              	.LFE351:
 2717              		.section	.text.HAL_RTCEx_TamperTimeStampIRQHandler,"ax",%progbits
 2718              		.align	1
 2719              		.global	HAL_RTCEx_TamperTimeStampIRQHandler
 2720              		.syntax unified
 2721              		.thumb
 2722              		.thumb_func
 2723              		.fpu fpv4-sp-d16
 2725              	HAL_RTCEx_TamperTimeStampIRQHandler:
 2726              	.LFB323:
 576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 2727              		.loc 1 576 0
 2728              		.cfi_startproc
 2729              		@ args = 0, pretend = 0, frame = 0
 2730              		@ frame_needed = 0, uses_anonymous_args = 0
 2731              	.LVL207:
 2732 0000 10B5     		push	{r4, lr}
 2733              		.cfi_def_cfa_offset 8
 2734              		.cfi_offset 4, -8
 2735              		.cfi_offset 14, -4
 2736 0002 0446     		mov	r4, r0
 578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 2737              		.loc 1 578 0
 2738 0004 2A4B     		ldr	r3, .L254
 2739 0006 4FF40022 		mov	r2, #524288
 2740 000a 5A61     		str	r2, [r3, #20]
 581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 2741              		.loc 1 581 0
 2742 000c 0368     		ldr	r3, [r0]
 2743 000e 9A68     		ldr	r2, [r3, #8]
 2744 0010 12F4004F 		tst	r2, #32768
 2745 0014 03D0     		beq	.L245
 583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 2746              		.loc 1 583 0
 2747 0016 DB68     		ldr	r3, [r3, #12]
 2748 0018 13F4006F 		tst	r3, #2048
 2749 001c 1ED1     		bne	.L250
 2750              	.LVL208:
 2751              	.L245:
 599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 2752              		.loc 1 599 0
 2753 001e 2268     		ldr	r2, [r4]
 2754 0020 116C     		ldr	r1, [r2, #64]
 2755 0022 244B     		ldr	r3, .L254+4
 2756 0024 0B40     		ands	r3, r3, r1
 2757 0026 1BB1     		cbz	r3, .L246
 601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 2758              		.loc 1 601 0
 2759 0028 D368     		ldr	r3, [r2, #12]
 2760 002a 13F4005F 		tst	r3, #8192
 2761 002e 1ED1     		bne	.L251
 2762              	.L246:
 617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 2763              		.loc 1 617 0
 2764 0030 2268     		ldr	r2, [r4]
 2765 0032 116C     		ldr	r1, [r2, #64]
 2766 0034 204B     		ldr	r3, .L254+8
 2767 0036 0B40     		ands	r3, r3, r1
 2768 0038 1BB1     		cbz	r3, .L247
 619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 2769              		.loc 1 619 0
 2770 003a D368     		ldr	r3, [r2, #12]
 2771 003c 13F4804F 		tst	r3, #16384
 2772 0040 1ED1     		bne	.L252
 2773              	.L247:
 635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   {
 2774              		.loc 1 635 0
 2775 0042 2268     		ldr	r2, [r4]
 2776 0044 116C     		ldr	r1, [r2, #64]
 2777 0046 1D4B     		ldr	r3, .L254+12
 2778 0048 0B40     		ands	r3, r3, r1
 2779 004a 1BB1     		cbz	r3, .L248
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     {
 2780              		.loc 1 637 0
 2781 004c D368     		ldr	r3, [r2, #12]
 2782 004e 13F4004F 		tst	r3, #32768
 2783 0052 1ED1     		bne	.L253
 2784              	.L248:
 653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2785              		.loc 1 653 0
 2786 0054 0123     		movs	r3, #1
 2787 0056 84F82130 		strb	r3, [r4, #33]
 654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
 2788              		.loc 1 654 0
 2789 005a 10BD     		pop	{r4, pc}
 2790              	.LVL209:
 2791              	.L250:
 589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 2792              		.loc 1 589 0
 2793 005c FFF7FEFF 		bl	HAL_RTCEx_TimeStampEventCallback
 2794              	.LVL210:
 593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****     }
 2795              		.loc 1 593 0
 2796 0060 2268     		ldr	r2, [r4]
 2797 0062 D368     		ldr	r3, [r2, #12]
 2798 0064 DBB2     		uxtb	r3, r3
 2799 0066 63F40863 		orn	r3, r3, #2176
 2800 006a D360     		str	r3, [r2, #12]
 2801 006c D7E7     		b	.L245
 2802              	.L251:
 604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 2803              		.loc 1 604 0
 2804 006e D368     		ldr	r3, [r2, #12]
 2805 0070 DBB2     		uxtb	r3, r3
 2806 0072 63F40253 		orn	r3, r3, #8320
 2807 0076 D360     		str	r3, [r2, #12]
 610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 2808              		.loc 1 610 0
 2809 0078 2046     		mov	r0, r4
 2810 007a FFF7FEFF 		bl	HAL_RTCEx_Tamper1EventCallback
 2811              	.LVL211:
 2812 007e D7E7     		b	.L246
 2813              	.L252:
 622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 2814              		.loc 1 622 0
 2815 0080 D368     		ldr	r3, [r2, #12]
 2816 0082 DBB2     		uxtb	r3, r3
 2817 0084 63F48143 		orn	r3, r3, #16512
 2818 0088 D360     		str	r3, [r2, #12]
 628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 2819              		.loc 1 628 0
 2820 008a 2046     		mov	r0, r4
 2821 008c FFF7FEFF 		bl	HAL_RTCEx_Tamper2EventCallback
 2822              	.LVL212:
 2823 0090 D7E7     		b	.L247
 2824              	.L253:
 640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
 2825              		.loc 1 640 0
 2826 0092 D368     		ldr	r3, [r2, #12]
 2827 0094 DBB2     		uxtb	r3, r3
 2828 0096 43F07F43 		orr	r3, r3, #-16777216
 2829 009a 43F47F03 		orr	r3, r3, #16711680
 2830 009e 43F4FE43 		orr	r3, r3, #32512
 2831 00a2 43F07F03 		orr	r3, r3, #127
 2832 00a6 D360     		str	r3, [r2, #12]
 646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 2833              		.loc 1 646 0
 2834 00a8 2046     		mov	r0, r4
 2835 00aa FFF7FEFF 		bl	HAL_RTCEx_Tamper3EventCallback
 2836              	.LVL213:
 2837 00ae D1E7     		b	.L248
 2838              	.L255:
 2839              		.align	2
 2840              	.L254:
 2841 00b0 00040140 		.word	1073808384
 2842 00b4 04000100 		.word	65540
 2843 00b8 04000800 		.word	524292
 2844 00bc 04004000 		.word	4194308
 2845              		.cfi_endproc
 2846              	.LFE323:
 2848              		.section	.text.HAL_RTCEx_BKUPWrite,"ax",%progbits
 2849              		.align	1
 2850              		.global	HAL_RTCEx_BKUPWrite
 2851              		.syntax unified
 2852              		.thumb
 2853              		.thumb_func
 2854              		.fpu fpv4-sp-d16
 2856              	HAL_RTCEx_BKUPWrite:
 2857              	.LFB352:
2304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
2305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
2307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @}
2308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group6
2312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief      Extended RTC Backup register functions
2313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *
2314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @verbatim
2315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ===============================================================================
2316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****              ##### Extended RTC Backup register functions #####
2317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   ===============================================================================
2318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   [..]
2319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    (+) Before calling any tamper or internal tamper function, you have to call first
2320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****        HAL_RTC_Init() function.
2321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    (+) In that ine you can select to output tamper event on RTC pin.
2322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   [..]
2323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    This subsection provides functions allowing to
2324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    (+) Write a data in a specified RTC Backup data register
2325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****    (+) Read a data in a specified RTC Backup data register
2326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** @endverbatim
2327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @{
2328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
2332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Write a data in a specified RTC Backup data register.
2333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
2335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 31 to
2336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *          specify the register.
2337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  Data Data to be written in the specified Backup data register.
2338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval None
2339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** void HAL_RTCEx_BKUPWrite(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister, uint32_t Data)
2341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 2858              		.loc 1 2341 0
 2859              		.cfi_startproc
 2860              		@ args = 0, pretend = 0, frame = 8
 2861              		@ frame_needed = 0, uses_anonymous_args = 0
 2862              		@ link register save eliminated.
 2863              	.LVL214:
 2864 0000 82B0     		sub	sp, sp, #8
 2865              		.cfi_def_cfa_offset 8
2342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t __IO tmp;
2343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process TAMP instance pointer */
2345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset);
2346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
2348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
2349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (tamp->BKP0R);
2351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
2352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
2353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
2354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (hrtc->Instance->BKP0R);
 2866              		.loc 1 2355 0
 2867 0002 0368     		ldr	r3, [r0]
 2868 0004 5033     		adds	r3, r3, #80
 2869 0006 0193     		str	r3, [sp, #4]
2356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
2357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
 2870              		.loc 1 2358 0
 2871 0008 019B     		ldr	r3, [sp, #4]
 2872 000a 03EB8101 		add	r1, r3, r1, lsl #2
 2873              	.LVL215:
 2874 000e 0191     		str	r1, [sp, #4]
2359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Write the specified register */
2361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 2875              		.loc 1 2361 0
 2876 0010 019B     		ldr	r3, [sp, #4]
 2877 0012 1A60     		str	r2, [r3]
2362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2878              		.loc 1 2362 0
 2879 0014 02B0     		add	sp, sp, #8
 2880              		.cfi_def_cfa_offset 0
 2881              		@ sp needed
 2882 0016 7047     		bx	lr
 2883              		.cfi_endproc
 2884              	.LFE352:
 2886              		.section	.text.HAL_RTCEx_BKUPRead,"ax",%progbits
 2887              		.align	1
 2888              		.global	HAL_RTCEx_BKUPRead
 2889              		.syntax unified
 2890              		.thumb
 2891              		.thumb_func
 2892              		.fpu fpv4-sp-d16
 2894              	HAL_RTCEx_BKUPRead:
 2895              	.LFB353:
2363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** /**
2366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @brief  Read data from the specified RTC Backup data Register.
2367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
2368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @param  BackupRegister  RTC Backup data Register number.
2369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         This parameter can be: RTC_BKP_DRx where x can be from 0 to 31 to
2370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   *         specify the register.
2371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   * @retval Read value
2372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   */
2373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_BKUPRead(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister)
2374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** {
 2896              		.loc 1 2374 0
 2897              		.cfi_startproc
 2898              		@ args = 0, pretend = 0, frame = 0
 2899              		@ frame_needed = 0, uses_anonymous_args = 0
 2900              		@ link register save eliminated.
 2901              	.LVL216:
2375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   uint32_t tmp;
2376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Process TAMP instance pointer */
2378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   TAMP_TypeDef *tamp = (TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset);
2379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
2381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
2382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (tamp->BKP0R);
2384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
2385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Check the parameters */
2386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
2387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmp = (uint32_t) & (hrtc->Instance->BKP0R);
 2902              		.loc 1 2388 0
 2903 0000 0368     		ldr	r3, [r0]
 2904 0002 5033     		adds	r3, r3, #80
 2905              	.LVL217:
2389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
2390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
2392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** 
2393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   /* Read the specified register */
2394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c ****   return (*(__IO uint32_t *)tmp);
 2906              		.loc 1 2394 0
 2907 0004 53F82100 		ldr	r0, [r3, r1, lsl #2]
 2908              	.LVL218:
2395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.c **** }
 2909              		.loc 1 2395 0
 2910 0008 7047     		bx	lr
 2911              		.cfi_endproc
 2912              	.LFE353:
 2914              		.text
 2915              	.Letext0:
 2916              		.file 2 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 2917              		.file 3 "../system/include/cmsis/stm32l4xx/core_cm4.h"
 2918              		.file 4 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 2919              		.file 5 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 2920              		.file 6 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_def.h"
 2921              		.file 7 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_flash.h"
 2922              		.file 8 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_rtc.h"
 2923              		.file 9 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_rtc_ex.h"
 2924              		.file 10 "../system/include/stm32l4-hal-driver/stm32l4xx_hal.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_rtc_ex.c
     /tmp/ccTUQeFx.s:18     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 $t
     /tmp/ccTUQeFx.s:25     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 HAL_RTCEx_SetTimeStamp
     /tmp/ccTUQeFx.s:102    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 $t
     /tmp/ccTUQeFx.s:109    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 HAL_RTCEx_SetTimeStamp_IT
     /tmp/ccTUQeFx.s:198    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000074 $d
     /tmp/ccTUQeFx.s:203    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 $t
     /tmp/ccTUQeFx.s:210    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 HAL_RTCEx_DeactivateTimeStamp
     /tmp/ccTUQeFx.s:274    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 $t
     /tmp/ccTUQeFx.s:281    .text.HAL_RTCEx_SetInternalTimeStamp:0000000000000000 HAL_RTCEx_SetInternalTimeStamp
     /tmp/ccTUQeFx.s:335    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 $t
     /tmp/ccTUQeFx.s:342    .text.HAL_RTCEx_DeactivateInternalTimeStamp:0000000000000000 HAL_RTCEx_DeactivateInternalTimeStamp
     /tmp/ccTUQeFx.s:396    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 $t
     /tmp/ccTUQeFx.s:403    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 HAL_RTCEx_GetTimeStamp
     /tmp/ccTUQeFx.s:517    .text.HAL_RTCEx_GetTimeStamp:0000000000000098 $d
     /tmp/ccTUQeFx.s:522    .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 $t
     /tmp/ccTUQeFx.s:529    .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 HAL_RTCEx_TimeStampEventCallback
     /tmp/ccTUQeFx.s:543    .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 $t
     /tmp/ccTUQeFx.s:550    .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 HAL_RTCEx_PollForTimeStampEvent
     /tmp/ccTUQeFx.s:623    .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 $t
     /tmp/ccTUQeFx.s:630    .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 HAL_RTCEx_SetWakeUpTimer
     /tmp/ccTUQeFx.s:747    .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 $t
     /tmp/ccTUQeFx.s:754    .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 HAL_RTCEx_SetWakeUpTimer_IT
     /tmp/ccTUQeFx.s:890    .text.HAL_RTCEx_SetWakeUpTimer_IT:00000000000000c8 $d
     /tmp/ccTUQeFx.s:895    .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 $t
     /tmp/ccTUQeFx.s:902    .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 HAL_RTCEx_DeactivateWakeUpTimer
     /tmp/ccTUQeFx.s:996    .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 $t
     /tmp/ccTUQeFx.s:1003   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 HAL_RTCEx_GetWakeUpTimer
     /tmp/ccTUQeFx.s:1022   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
     /tmp/ccTUQeFx.s:1029   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
     /tmp/ccTUQeFx.s:1043   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 $t
     /tmp/ccTUQeFx.s:1050   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 HAL_RTCEx_WakeUpTimerIRQHandler
     /tmp/ccTUQeFx.s:1092   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000030 $d
     /tmp/ccTUQeFx.s:1097   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 $t
     /tmp/ccTUQeFx.s:1104   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 HAL_RTCEx_PollForWakeUpTimerEvent
     /tmp/ccTUQeFx.s:1166   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 $t
     /tmp/ccTUQeFx.s:1173   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 HAL_RTCEx_SetSmoothCalib
     /tmp/ccTUQeFx.s:1283   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 $t
     /tmp/ccTUQeFx.s:1290   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 HAL_RTCEx_SetSynchroShift
     /tmp/ccTUQeFx.s:1429   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 $t
     /tmp/ccTUQeFx.s:1436   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 HAL_RTCEx_SetCalibrationOutPut
     /tmp/ccTUQeFx.s:1509   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 $t
     /tmp/ccTUQeFx.s:1516   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 HAL_RTCEx_DeactivateCalibrationOutPut
     /tmp/ccTUQeFx.s:1570   .text.HAL_RTCEx_SetRefClock:0000000000000000 $t
     /tmp/ccTUQeFx.s:1577   .text.HAL_RTCEx_SetRefClock:0000000000000000 HAL_RTCEx_SetRefClock
     /tmp/ccTUQeFx.s:1661   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 $t
     /tmp/ccTUQeFx.s:1668   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 HAL_RTCEx_DeactivateRefClock
     /tmp/ccTUQeFx.s:1752   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 $t
     /tmp/ccTUQeFx.s:1759   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 HAL_RTCEx_EnableBypassShadow
     /tmp/ccTUQeFx.s:1813   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 $t
     /tmp/ccTUQeFx.s:1820   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 HAL_RTCEx_DisableBypassShadow
     /tmp/ccTUQeFx.s:1873   .text.HAL_RTCEx_DisableBypassShadow:0000000000000044 $d
     /tmp/ccTUQeFx.s:1878   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 $t
     /tmp/ccTUQeFx.s:1885   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 HAL_RTCEx_AlarmBEventCallback
     /tmp/ccTUQeFx.s:1899   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 $t
     /tmp/ccTUQeFx.s:1906   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 HAL_RTCEx_PollForAlarmBEvent
     /tmp/ccTUQeFx.s:1968   .text.HAL_RTCEx_SetTamper:0000000000000000 $t
     /tmp/ccTUQeFx.s:1975   .text.HAL_RTCEx_SetTamper:0000000000000000 HAL_RTCEx_SetTamper
     /tmp/ccTUQeFx.s:2157   .text.HAL_RTCEx_SetTamper_IT:0000000000000000 $t
     /tmp/ccTUQeFx.s:2164   .text.HAL_RTCEx_SetTamper_IT:0000000000000000 HAL_RTCEx_SetTamper_IT
     /tmp/ccTUQeFx.s:2360   .text.HAL_RTCEx_SetTamper_IT:0000000000000100 $d
     /tmp/ccTUQeFx.s:2365   .text.HAL_RTCEx_DeactivateTamper:0000000000000000 $t
     /tmp/ccTUQeFx.s:2372   .text.HAL_RTCEx_DeactivateTamper:0000000000000000 HAL_RTCEx_DeactivateTamper
     /tmp/ccTUQeFx.s:2446   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 $t
     /tmp/ccTUQeFx.s:2453   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 HAL_RTCEx_PollForTamper1Event
     /tmp/ccTUQeFx.s:2515   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 $t
     /tmp/ccTUQeFx.s:2522   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 HAL_RTCEx_PollForTamper2Event
     /tmp/ccTUQeFx.s:2584   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 $t
     /tmp/ccTUQeFx.s:2591   .text.HAL_RTCEx_PollForTamper3Event:0000000000000000 HAL_RTCEx_PollForTamper3Event
     /tmp/ccTUQeFx.s:2655   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 $t
     /tmp/ccTUQeFx.s:2662   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 HAL_RTCEx_Tamper1EventCallback
     /tmp/ccTUQeFx.s:2676   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 $t
     /tmp/ccTUQeFx.s:2683   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 HAL_RTCEx_Tamper2EventCallback
     /tmp/ccTUQeFx.s:2697   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 $t
     /tmp/ccTUQeFx.s:2704   .text.HAL_RTCEx_Tamper3EventCallback:0000000000000000 HAL_RTCEx_Tamper3EventCallback
     /tmp/ccTUQeFx.s:2718   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 $t
     /tmp/ccTUQeFx.s:2725   .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 HAL_RTCEx_TamperTimeStampIRQHandler
     /tmp/ccTUQeFx.s:2841   .text.HAL_RTCEx_TamperTimeStampIRQHandler:00000000000000b0 $d
     /tmp/ccTUQeFx.s:2849   .text.HAL_RTCEx_BKUPWrite:0000000000000000 $t
     /tmp/ccTUQeFx.s:2856   .text.HAL_RTCEx_BKUPWrite:0000000000000000 HAL_RTCEx_BKUPWrite
     /tmp/ccTUQeFx.s:2887   .text.HAL_RTCEx_BKUPRead:0000000000000000 $t
     /tmp/ccTUQeFx.s:2894   .text.HAL_RTCEx_BKUPRead:0000000000000000 HAL_RTCEx_BKUPRead
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.stm32l4xx_hal_conf.h.24.9ebdf529a64add7ef5197540a829be93
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.b6144e50d34fc998dd4c2cfb6387cf91
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.c14bec61d389910444dd6f90923a87b3
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.stm32l4xx_hal_def.h.58.ba9880fce6c06e05c42ff3652190ba19
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc.h.158.28a9a8aed9528254d5d00c542977dfd6
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc_ex.h.22.da7044b74af98b061fec57b6c981623c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio.h.22.cdd02b3dd2d28ab2a58b80abaa62239c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio_ex.h.22.e3066224621c54896e68c044cff2946f
                           .group:0000000000000000 wm4.stm32l4xx_hal_dma.h.22.13f7e03251508cf372ae373347b36e9b
                           .group:0000000000000000 wm4.stm32l4xx_hal_cortex.h.22.cb70b059ea6d04d060ca379a6d57d1fd
                           .group:0000000000000000 wm4.stm32l4xx_ll_adc.h.22.1a01db9155ec232fb5933b76785afed0
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc.h.321.ee3f28f76fc70066e4cbbd758e576892
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc_ex.h.22.fb5e6d418a426c9b079c9adc15fee3b1
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc.h.22.e28f2dff7c14319a60cfaa8412b63a14
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc_ex.h.22.58aa3be0563eedff5893c4b663184cf2
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac.h.22.74749bf4f9405a5fbfaaf1cc4c06eba3
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac_ex.h.22.4e3cedba5893653c1d8ca689fa739e33
                           .group:0000000000000000 wm4.stm32l4xx_hal_exti.h.22.d0c18acb1f51146e775f234290c1ac27
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.22.80f6973ea14060a68f7ca21c1dd39289
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.847.7bdb45d9d57728034960e0aaf38df4fb
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.22.5cbc76724b1dba5416e985e397b92828
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c_ex.h.22.4c81bf9806badb3d50f1da26b08d305a
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.715.a3aff164d469153c75cf623f9ff49d7a
                           .group:0000000000000000 wm4.stm32l4xx_hal_iwdg.h.22.7e954cf06602114b3daf58f5ffbb9e50
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr.h.22.0049bff0a26f90119451fdfe5f426c51
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr_ex.h.22.3d1049b6827a186d471882b21e35998d
                           .group:0000000000000000 wm4.stm32l4xx_hal_rng.h.22.3da3130b715b6ad6f9d8d49653bdfddb
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.22.21d64301309237f9b9255a8c80902f7c
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc_ex.h.22.6c248c3dbae3d1f0fefc4b9faaa2cd0b
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.977.b3b3c98b50a30362b61b120ec4fce236
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim.h.22.6c7398a1c55179e1de4bfd7d5a7564ac
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim_ex.h.22.1a7b532f5010a085c12eee7e9c7b0c21
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart.h.22.5f632bd044c516c02fe0b49488f063f8
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart_ex.h.22.de11c23890d64b2968c97dd6f5dae21a
                           .group:0000000000000000 wm4.stm32l4xx_hal.h.76.993cab68f7f350dd05a21a919b3be96f

UNDEFINED SYMBOLS
RTC_Bcd2ToByte
HAL_GetTick
HAL_RTC_WaitForSynchro
RTC_EnterInitMode
RTC_ExitInitMode
