   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_adc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_ADCEx_Calibration_Start
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_ADCEx_Calibration_Start:
  26              	.LFB317:
  27              		.file 1 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c"
   1:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
   2:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
   3:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @file    stm32l4xx_hal_adc_ex.c
   4:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *          peripheral:
   8:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *           + Operation functions
   9:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *             ++ Start, stop, get result of conversions of ADC group injected,
  10:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *                using 2 possible modes: polling, interruption.
  11:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *             ++ Calibration
  12:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *               +++ ADC automatic self-calibration
  13:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *               +++ Calibration factors get or set
  14:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *             ++ Multimode feature when available
  15:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *           + Control functions
  16:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *             ++ Channels configuration on ADC group injected
  17:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *           + State functions
  18:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *             ++ ADC group injected contexts queue management
  19:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  20:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *          "stm32l4xx_hal_adc.c".
  21:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *
  22:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   @verbatim
  23:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   [..]
  24:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  25:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       available in file of generic functions "stm32l4xx_hal_adc.c".
  26:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   [..]
  27:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   @endverbatim
  28:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
  29:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @attention
  30:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *
  31:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  32:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * All rights reserved.</center></h2>
  33:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *
  34:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  35:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * the "License"; You may not use this file except in compliance with the
  36:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * License. You may obtain a copy of the License at:
  37:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  38:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *
  39:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
  40:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
  41:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  42:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  43:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #include "stm32l4xx_hal.h"
  44:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  45:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  46:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @{
  47:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
  48:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  49:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  50:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  51:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @{
  52:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
  53:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  54:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  55:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  56:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  57:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  58:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  59:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  60:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @{
  61:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
  62:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  63:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #define ADC_JSQR_FIELDS  ((ADC_JSQR_JL | ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN |\
  64:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                            ADC_JSQR_JSQ1  | ADC_JSQR_JSQ2 |\
  65:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                            ADC_JSQR_JSQ3 | ADC_JSQR_JSQ4 ))  /*!< ADC_JSQR fields of parameters tha
  66:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  67:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  68:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: maximum ratio between ADC    */
  69:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* and CPU clock frequencies.                                                 */
  70:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* Example of profile low frequency : ADC frequency at 31.25kHz (ADC clock    */
  71:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* source PLL SAI 8MHz, ADC clock prescaler 256), CPU frequency 80MHz.        */
  72:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* Calibration time max = 116 / fADC (refer to datasheet)                     */
  73:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /*                      = 296 960 CPU cycles                                  */
  74:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         (296960UL)   /*!< ADC calibration time-out value (unit: CPU
  75:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  76:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
  77:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @}
  78:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
  79:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  80:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  81:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  82:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  83:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
  84:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  85:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
  86:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @{
  87:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
  88:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  89:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
  90:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
  91:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *
  92:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** @verbatim
  93:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
  94:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                       ##### IO operation functions #####
  95:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
  96:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
  97:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
  98:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
  99:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
 100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
 101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected.
 103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected.
 104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Poll for conversion complete on ADC group injected.
 105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Get result of ADC group injected channel conversion.
 106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected and enable interruptions.
 107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected and disable interruptions.
 108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) When multimode feature is available, start multimode and enable DMA transfer.
 110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
 111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** @endverbatim
 114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @{
 115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
 116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
 118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param  hadc       ADC handle
 122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param  SingleDiff Selection of single-ended or differential input
 123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         This parameter can be one of the following values:
 124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
 128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
  28              		.loc 1 129 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              		.cfi_def_cfa_offset 24
 130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0UL;
  40              		.loc 1 131 0
  41 0004 0022     		movs	r2, #0
  42 0006 0192     		str	r2, [sp, #4]
 132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  43              		.loc 1 138 0
  44 0008 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
  45 000c 012A     		cmp	r2, #1
  46 000e 43D0     		beq	.L8
  47 0010 0D46     		mov	r5, r1
  48 0012 0446     		mov	r4, r0
  49              		.loc 1 138 0 is_stmt 0 discriminator 2
  50 0014 0123     		movs	r3, #1
  51 0016 80F85030 		strb	r3, [r0, #80]
 139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
  52              		.loc 1 143 0 is_stmt 1 discriminator 2
  53 001a FFF7FEFF 		bl	ADC_Disable
  54              	.LVL1:
 144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
  55              		.loc 1 146 0 discriminator 2
  56 001e 0246     		mov	r2, r0
  57 0020 80BB     		cbnz	r0, .L3
 147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state */
 149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
  58              		.loc 1 149 0
  59 0022 636D     		ldr	r3, [r4, #84]
  60 0024 23F48853 		bic	r3, r3, #4352
  61 0028 23F00203 		bic	r3, r3, #2
  62 002c 43F00203 		orr	r3, r3, #2
  63 0030 6365     		str	r3, [r4, #84]
 150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Start ADC calibration in mode single-ended or differential */
 154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     LL_ADC_StartCalibration(hadc->Instance, SingleDiff);
  64              		.loc 1 154 0
  65 0032 2168     		ldr	r1, [r4]
  66              	.LVL2:
  67              	.LBB286:
  68              	.LBB287:
  69              		.file 2 "../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h"
   1:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
   2:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ******************************************************************************
   3:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @file    stm32l4xx_ll_adc.h
   4:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @author  MCD Application Team
   5:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ******************************************************************************
   7:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @attention
   8:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
   9:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
  12:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
  17:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ******************************************************************************
  18:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
  19:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  20:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #ifndef STM32L4xx_LL_ADC_H
  22:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define STM32L4xx_LL_ADC_H
  23:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  24:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #ifdef __cplusplus
  25:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** extern "C" {
  26:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif
  27:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  28:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #include "stm32l4xx.h"
  30:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  31:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @addtogroup STM32L4xx_LL_Driver
  32:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
  33:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
  34:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  35:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  36:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  37:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
  39:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
  40:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  41:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  44:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
  47:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
  48:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  49:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  50:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  51:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - sequencer register offset                                                */
  52:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  53:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  54:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  55:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  56:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  57:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  58:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  59:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  60:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  61:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  62:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  63:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  64:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  65:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  66:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  67:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  68:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  69:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  70:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  71:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  72:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  73:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  74:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  75:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  76:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  77:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  78:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  79:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  80:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  81:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  82:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  83:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  84:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  85:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  86:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  87:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  88:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  89:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - data register offset                                                     */
  90:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  91:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  92:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  93:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  94:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  95:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  96:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  97:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  98:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  99:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
 100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ1" p
 107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ2" p
 108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ3" p
 109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ4" p
 110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - regular trigger source                                                   */
 116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - injected trigger source                                                  */
 144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*   selection on groups.                                                     */
 293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* ADC registers bits positions */
 333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Value equivalent to bitfield "ADC_CFGR_RES" po
 334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1SGL
 335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1EN"
 336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Value equivalent to bitfield "ADC_CFGR_JAWD1EN
 337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* ADC registers bits groups */
 341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* ADC internal channels related definitions */
 345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Temperature sensor */
 349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30L)           /* Internal temperature sen
 352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #else
 355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Internal temperature sen
 356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is applied.
 373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Pointer to register address
 376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and multimode
 394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         disabled.
 400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** typedef struct
 402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
 403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** typedef struct
 451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
 452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (functions with prefix "REG").
 475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** typedef struct
 489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
 490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              data preserved or overwritten.
 523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** typedef struct
 549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
 550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* DMA transfer.                                                              */
 655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
 787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
 790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC3)
 793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC3        (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC3        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
 796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
 797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DFSDM_TRANSFER ADC group regular - DFSDM transfer of ADC conversion dat
 856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_NONE     (0x00000000UL)          /*!< ADC conversions are not tra
 859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_ENABLE   (ADC_CFGR_DFSDMCFG)     /*!< ADC conversion data are tra
 860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
 864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
 866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
 867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
 870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
 871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif
 875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
 889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
 898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
 899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
 900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
 901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
 902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
 903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
 913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
 914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
 915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
 917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
 918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
 919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
 928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
 929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
 930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
 931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
 932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
 933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
 934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
 935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
 936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
 937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
 938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
 939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
 940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
 941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
 942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
 943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
 948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
 951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
 952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
 957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
 972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
 975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
 976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
 977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
 982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
 985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
 986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
 991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
 994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
 995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
 996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
1140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK)   
1141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_INJ          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK)   
1144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_INJ          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
1147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK)   
1148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK)   
1151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC3)
1154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK)   
1155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK)   
1158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
1161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
1162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                                     /*!
1248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (                 ADC_CCR_MDMA_1                 ) /*!
1249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (                 ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1                 ) /*!
1251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                          
1260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      A
1261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1    
1262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | A
1263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                      
1264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | A
1265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1    
1266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | A
1267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                        
1268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | A
1269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1    
1270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | A
1271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
1286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEGACY ADC literals legacy naming
1288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SW_START           (LL_ADC_REG_TRIG_SOFTWARE)
1291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC1       (LL_ADC_REG_TRIG_EXT_TIM1_CH1)
1292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC2       (LL_ADC_REG_TRIG_EXT_TIM1_CH2)
1293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC3       (LL_ADC_REG_TRIG_EXT_TIM1_CH3)
1294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CC2       (LL_ADC_REG_TRIG_EXT_TIM2_CH2)
1295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CC4       (LL_ADC_REG_TRIG_EXT_TIM3_CH4)
1296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CC4       (LL_ADC_REG_TRIG_EXT_TIM4_CH4)
1297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SW_START           (LL_ADC_INJ_TRIG_SOFTWARE)
1299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CC4       (LL_ADC_INJ_TRIG_EXT_TIM1_CH4)
1300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CC1       (LL_ADC_INJ_TRIG_EXT_TIM2_CH1)
1301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC1       (LL_ADC_INJ_TRIG_EXT_TIM3_CH1)
1302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC3       (LL_ADC_INJ_TRIG_EXT_TIM3_CH3)
1303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC4       (LL_ADC_INJ_TRIG_EXT_TIM3_CH4)
1304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CC4       (LL_ADC_INJ_TRIG_EXT_TIM8_CH4)
1305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_NONE        (LL_ADC_OVS_SHIFT_NONE)
1307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_1           (LL_ADC_OVS_SHIFT_RIGHT_1)
1308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_2           (LL_ADC_OVS_SHIFT_RIGHT_2)
1309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_3           (LL_ADC_OVS_SHIFT_RIGHT_3)
1310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_4           (LL_ADC_OVS_SHIFT_RIGHT_4)
1311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_5           (LL_ADC_OVS_SHIFT_RIGHT_5)
1312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_6           (LL_ADC_OVS_SHIFT_RIGHT_6)
1313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_7           (LL_ADC_OVS_SHIFT_RIGHT_7)
1314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_8           (LL_ADC_OVS_SHIFT_RIGHT_8)
1315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         not timeout values.
1324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         above each literal definition.
1326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       not timeout values.                                                  */
1331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       STM32 series:                                                        */
1336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*         cycles                                                             */
1343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*         configuration.                                                     */
1345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
1352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
1358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)  /*!< Delay required between ADC end of cali
1373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Write a value in ADC register
1394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be written
1396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
1398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Read a value in ADC register
1403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be read
1405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Register value
1406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Example:
1420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           will return decimal number "4".
1422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number is returned, either defined with number
1424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                                       \
1468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                                       \
1470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                                       \
1471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                                       \
1472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                                       \
1474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from number in decimal format.
1479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Example:
1480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
1527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                                               
1528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                                               
1532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                                               
1533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                                               
1534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                                               
1538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC internal channel:
1545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a value defined from parameter definition of
1611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from ADC registers.
1614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is
1685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined (ADC1) && defined (ADC2) && defined (ADC3)
1711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                           \
1714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                           \
1718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                           \
1719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     (                                                                          \
1721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
1722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     )                                                                          \
1725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     :                                                                          \
1726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__ADC_INSTANCE__) == ADC3) ?                                             \
1727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      (                                                                         \
1728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                        \
1729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                        \
1730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                        \
1731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC3) ||                        \
1732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC3)                           \
1733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      )                                                                         \
1734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      :                                                                         \
1735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      (0UL)                                                                     \
1736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined (ADC1) && defined (ADC2)
1738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                           \
1741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                           \
1745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                           \
1746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     (                                                                          \
1748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
1749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     )                                                                          \
1752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     :                                                                          \
1753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     (0UL)                                                                      \
1754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined (ADC1)
1756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (                                                                            \
1758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)       ||                            \
1761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1)    ||                            \
1762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2)                                  \
1763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* defined (ADC1) && defined (ADC2) && defined (ADC3) */
1765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example:
1772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
1824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
1827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
1830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
1833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
1836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
1839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
1842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
1843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
1845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
1846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
1848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
1849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
1851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
1852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
1854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
1855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
1857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
1858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
1860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
1861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
1863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
1864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
1866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
1867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
1869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
1870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
1872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
1873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
1875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
1876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
1878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
1879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
1881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
1882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
1883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
1884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
1885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
1886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
1887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
1888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
1889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
1890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
1891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
1892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
1893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
1894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
1895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
1896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
1897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
1898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
1899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
1900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
1901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
1902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
1903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
1904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
1905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
1906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
1907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
1908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
1909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
1911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
1915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
1920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
1921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                                               
1922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
1923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
1924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                                               
1925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
1926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *            (< ADCx param >,
1938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *            );
1940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *            );
1962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
1986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
1990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
1991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
1992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
1993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and differential ended to 0x2A:
1994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
1995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC1,
1996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
1997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
1998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
1999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC common instance).
2027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         considered as master instances (do not depend to
2031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         any other ADC instance).
2032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC2)
2036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((((__ADCx__) == ADC2))?                                                   \
2038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (ADC1)                                                                    \
2039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                         \
2040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (__ADCx__)                                                                \
2041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
2042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #else
2043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (__ADCx__)
2045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC2 */
2046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval ADC common register instance
2057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (ADC123_COMMON)
2061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (ADC12_COMMON)
2064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #else
2065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (ADC1_COMMON)
2067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC common instance are disabled.
2072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are disabled.
2083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled.
2085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
2090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #else
2096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (refer to reference manual).
2106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a resolution to another resolution.
2119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** (((__DATA__)                                                                 \
2138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** )
2141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                       (unit: digital value).
2151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                       __ADC_DATA__,\
2160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** )
2164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Legacy define */
2166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_VOLTAGE()  __LL_ADC_CALC_DATA_TO_VOLTAGE()
2167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         reference VrefInt.
2172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         connected to pin Vref+.
2176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** )
2200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temperature sensor.
2232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                            \
2249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                   (__ADC_RESOLUTION__),          \
2251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                   LL_ADC_RESOLUTION_12B)         \
2252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                  * (__VREFANALOG_VOLTAGE__))                                     \
2253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                 / TEMPSENSOR_CAL_VREFANALOG)                                     \
2254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****  ) + TEMPSENSOR_CAL1_TEMP                                                        \
2258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** )
2259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (refer to device datasheet).
2265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                   (unit: digital value)
2270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  datasheet typical values.
2277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "Avg_Slop
2291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "V30" (co
2293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
2310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     -                                                                       \
2314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                        \
2317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
2318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
2319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** )
2320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
2323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
2327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
2333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
2337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example:
2352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
2369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval ADC register address
2371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t data_reg_addr;
2376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   {
2379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     /* Retrieve address of register DR */
2380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
2381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   }
2382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   {
2384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     /* Retrieve address of register CDR */
2385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   }
2387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return data_reg_addr;
2389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #else
2391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (void)(Register);
2395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Retrieve address of register DR */
2397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
2398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
2403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
2407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         must be respected.
2414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
2415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Add paths to the current configuration.
2516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
2533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Remove paths to the current configuration.
2551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
2595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
2599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without having to perform a new calibration using
2606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         requires their calibration).
2613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         To perform this processing, use helper macro
2617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on group regular.
2622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
2662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
2663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
2664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC resolution.
2668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC resolution.
2690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
2714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
2723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
2730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
2738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           other conversion.
2752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           applications.
2756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC channel.
2780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
2785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
2794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           other conversion.
2808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           applications.
2812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC channel.
2836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
2837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
2845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
2849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
2850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
2851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
2852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           or group injected)
2853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
2854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           converted data).
2855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
2856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are set to 0.
2858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
2859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
2860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
2861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
2862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
2869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
2870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
2871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
2872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
2873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
2874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
2875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
2876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
2877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
2878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
2879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
2880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
2916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
2925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
2928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
2930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
2932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
2933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
2934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
2938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
2939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
2940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or group injected)
2941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
2949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
2951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
2955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
2956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
2957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
2958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
2994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         converted data).
3017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are set to 0.
3020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         force offset state disable or enable
3042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              OffsetState);
3072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         offset state disabled or enabled.
3077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(ADC_TypeDef *ADCx)
3128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
3135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
3139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (equivalent to
3193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****          );
3233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or external.
3238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are configurable.
3293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             highest channel number).
3311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are configurable.
3352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             highest channel number).
3370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number of ranks.
3403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number of ranks.
3435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
3458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         enabled separately.
3469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
3475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
3476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
3477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
3478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
3479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
3480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
3481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
3482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
3483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
3484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
3485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
3486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
3487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
3488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
3489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
3490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
3538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
3552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
3555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
3559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
3578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
3580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
3582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
3583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
3584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
3585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
3586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
3587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
3588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
3589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
3590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
3591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
3592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
3593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
3594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
3595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
3596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
3597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
3645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
3658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
3660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
3662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
3663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
3664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                    );
3665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
3680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
3689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
3698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
3706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode:
3713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
3728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
3735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
3736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
3746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode:
3753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
3768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
3771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
3772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
3781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
3784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer to DFSDM.
3786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   DFSDM transfer cannot be used if DMA transfer is enabled.
3787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To configure DFSDM source address (peripheral address),
3788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use the same function as for DMA transfer:
3789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_DMA_GetRegAddr().
3790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  DFSDMTransfer This parameter can be one of the following values:
3797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDFSDMTransfer(ADC_TypeDef *ADCx, uint32_t DFSDMTransfer)
3802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DFSDMCFG, DFSDMTransfer);
3804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer to DFSDM.
3808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDFSDMTransfer(ADC_TypeDef *ADCx)
3815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DFSDMCFG));
3817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
3819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         other devices without this feature have a behavior
3825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         equivalent to data overwritten.
3826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
3834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
3843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
3849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
3857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
3861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
3864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
3865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
3869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
3877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
3884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
3885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
3909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
3913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
3916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (equivalent to
3919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
3920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
3921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
3924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
3925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
3946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
3948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
3951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
3952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
3954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
3957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
3958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****          );
3959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
3963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****             or external
3964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
3965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
3967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
3968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
3975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
3979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
3980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
3985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
3988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
3989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
3990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
3995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
3999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
4015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function retrieves:
4041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number of ranks.
4063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number of ranks.
4081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence rank.
4095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         enabled separately.
4100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence rank.
4171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
4181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
4183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
4233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                    );
4242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on ADC group injected.
4253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         independent trigger.
4256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from ADC group regular.
4261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - sequencer length
4298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If contexts queue is disabled:
4300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - only 1 sequence can be configured
4301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           and is active perpetually.
4302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If contexts queue is enabled:
4303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           into the queue).
4314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
4342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         contexts queue.
4357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - sequencer length
4360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         cannot be used):
4365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         enabled separately.
4374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
4384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
4413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
4414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
4420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
4458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
4496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
4534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
4574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
4575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
4576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
4577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
4578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
4579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
4580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
4581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
4583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
4584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
4585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
4586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
4587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
4588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
4589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
4591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
4592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
4593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
4594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
4595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
4596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JL,
4597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
4598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
4599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              SequencerNbRanks
4604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****             );
4605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
4609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
4612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
4613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
4617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
4621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         converted:
4622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
4623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
4624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         setting).
4625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
4626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TS_temp, ...).
4627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
4634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
4635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is required.
4636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
4637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
4642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
4643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
4644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
4645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
4646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
4647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
4648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
4649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
4650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
4651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
4652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
4653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
4654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
4655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
4656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
4657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
4658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
4659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
4660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
4700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
4715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
4717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
4718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
4721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
4723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
4729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
4739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
4740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
4741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
4742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
4743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
4744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
4745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
4746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
4747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
4748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
4749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
4750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
4751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
4752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
4753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
4754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
4755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
4756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
4757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
4811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
4813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
4816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
4817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                    );
4818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
4822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC channel.
4823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
4824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on ADC group regular or injected.
4825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
4826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
4827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
4828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
4829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
4838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
4839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
4840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
4843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
4844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
4846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
4864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
4865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
4866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
4869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
4871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
4872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
4873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
4874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
4875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
4876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
4880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC channel.
4881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
4884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
4885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
4886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
4887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
4896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
4897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
4899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
4917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
4919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
4921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
4925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
4928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
4929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
4933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
4934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
4935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
4936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled.
4937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
4938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
4939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
4940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         instance:
4942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
4945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
4947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             be selected. For example:
4952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
4955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
4959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
4960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
4961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
4966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
4967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
4968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
4969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
4970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
4971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
4977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
4978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
4979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
4980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
4981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
4982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
4983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
4984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
4985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
4986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
4987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
4988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
4989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
4990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
4991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
4992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
4993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
4994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
4995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
4996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
4997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
4998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
4999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
5042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
5043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
5044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
5045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
5046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
5047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
5048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
5049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
5050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
5051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
5052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
5053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
5054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
5055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
5056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
5057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
5058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
5059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
5060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
5061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
5062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
5063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
5064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
5065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
5066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
5067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
5071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
5073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
5083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
5099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
5101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           one channel.
5104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         instance:
5106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
5141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             by bitfield.
5146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
5209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.
5210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC
5215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* or a single channel.                                                     */
5222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   {
5224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     {
5226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       {
5228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  )
5232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                 );
5234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       }
5235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       else
5236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       {
5237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                 );
5241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       }
5242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     }
5243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     else
5244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     {
5245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       {
5247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                 );
5251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       }
5252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       else
5253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       {
5254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                 );
5260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       }
5261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     }
5262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   }
5263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return AnalogWDMonitChannels;
5265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
5269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         high and low.
5270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
5271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         instance:
5277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
5305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
5306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
5307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
5308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
5309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
5310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
5316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
5317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
5321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
5323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
5324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* "AWDy".                                                                  */
5325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
5326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
5328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
5331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
5332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         high or low.
5337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
5338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
5339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         instance:
5344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
5373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
5374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
5375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
5376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
5377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
5386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
5389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
5390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
5393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
5394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
5398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              AWDThresholdsHighLow,
5401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
5402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
5406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
5407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         concatenated.
5408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
5409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
5410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         using helper macro:
5411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
5412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
5415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
5416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
5417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
5418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
5419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
5420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
5421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
5430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
5431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
5433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
5436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
5439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
5440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
5441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
5445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
5448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
5449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
5453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
5465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
5466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
5467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
5469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
5477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
5479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
5483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
5491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
5492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
5493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
5502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
5504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
5508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
5518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
5519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
5520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
5521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
5522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
5524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
5529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
5531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
5535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
5542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
5548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
5550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling
5554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
5555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
5556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ratio
5557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - shift
5558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
5563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
5564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
5566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
5575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
5587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
5589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
5593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
5595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
5597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
5607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
5609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
5613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
5615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
5617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
5628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
5630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
5634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
5637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
5638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
5641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
5643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro
5652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
5654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
5657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
5668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
5670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
5674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
5679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
5692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
5694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
5698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
5729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
5730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
5731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
5732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
5735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
5743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
5745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
5749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
5778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
5779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
5789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
5791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
5795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
5796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
5797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
5798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
5799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
5800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
5805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
5807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
5810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
5823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
5829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
5831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
5835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
5836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
5852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
5857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
5859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
5861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
5864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Leg_Functions Configuration of ADC alternate functions name
5866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
5867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Old functions name kept for legacy purpose, to be replaced by the          */
5869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* current functions name.                                                    */
5870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   LL_ADC_REG_SetTriggerSource(ADCx, TriggerSource);
5873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   LL_ADC_INJ_SetTriggerSource(ADCx, TriggerSource);
5877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
5881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
5884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
5885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
5889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
5897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
5901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
5908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
5912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
5920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
5924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
5929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
5933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
5934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
5936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
5938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
5940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
5944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
5945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
5946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
5947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
5948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
5949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
5953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
5957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
5964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
5968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
5972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
5976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
5978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
5982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
5983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
5985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
5987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
5989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
5993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
5994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
5995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion start.
5996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
5997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
5998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
5999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADEN);
6015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADDIS);
6035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
6069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
6071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         requires their calibration).
6074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
  70              		.loc 2 6090 0
  71 0034 8B68     		ldr	r3, [r1, #8]
  72 0036 23F04043 		bic	r3, r3, #-1073741824
  73 003a 23F03F03 		bic	r3, r3, #63
  74 003e 05F08045 		and	r5, r5, #1073741824
  75              	.LVL3:
  76 0042 2B43     		orrs	r3, r3, r5
  77 0044 43F00043 		orr	r3, r3, #-2147483648
  78 0048 8B60     		str	r3, [r1, #8]
  79              	.L4:
  80              	.LBE287:
  81              	.LBE286:
 155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Wait for calibration completion */
 157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     while (LL_ADC_IsCalibrationOnGoing(hadc->Instance) != 0UL)
  82              		.loc 1 157 0
  83 004a 2368     		ldr	r3, [r4]
  84              	.LVL4:
  85              	.LBB288:
  86              	.LBB289:
6091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
  87              		.loc 2 6103 0
  88 004c 9B68     		ldr	r3, [r3, #8]
  89              	.LVL5:
  90 004e 002B     		cmp	r3, #0
  91 0050 11DA     		bge	.L5
  92              	.LVL6:
  93              	.LBE289:
  94              	.LBE288:
 158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       wait_loop_index++;
  95              		.loc 1 159 0
  96 0052 019B     		ldr	r3, [sp, #4]
  97 0054 0133     		adds	r3, r3, #1
  98 0056 0193     		str	r3, [sp, #4]
 160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
  99              		.loc 1 160 0
 100 0058 019B     		ldr	r3, [sp, #4]
 101 005a B3F5912F 		cmp	r3, #296960
 102 005e F4D3     		bcc	.L4
 161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 103              		.loc 1 163 0
 104 0060 636D     		ldr	r3, [r4, #84]
 105 0062 23F01203 		bic	r3, r3, #18
 106 0066 43F01003 		orr	r3, r3, #16
 107 006a 6365     		str	r3, [r4, #84]
 164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
 166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Process unlocked */
 168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 108              		.loc 1 168 0
 109 006c 0023     		movs	r3, #0
 110 006e 84F85030 		strb	r3, [r4, #80]
 169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         return HAL_ERROR;
 111              		.loc 1 170 0
 112 0072 0122     		movs	r2, #1
 113 0074 0DE0     		b	.L2
 114              	.LVL7:
 115              	.L5:
 171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state */
 175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 116              		.loc 1 175 0
 117 0076 636D     		ldr	r3, [r4, #84]
 118 0078 23F00303 		bic	r3, r3, #3
 119 007c 43F00103 		orr	r3, r3, #1
 120 0080 6365     		str	r3, [r4, #84]
 121 0082 03E0     		b	.L7
 122              	.LVL8:
 123              	.L3:
 176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
 180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 124              		.loc 1 181 0
 125 0084 636D     		ldr	r3, [r4, #84]
 126 0086 43F01003 		orr	r3, r3, #16
 127 008a 6365     		str	r3, [r4, #84]
 128              	.LVL9:
 129              	.L7:
 182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 130              		.loc 1 188 0
 131 008c 0023     		movs	r3, #0
 132 008e 84F85030 		strb	r3, [r4, #80]
 133              	.LVL10:
 134              	.L2:
 189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 135              		.loc 1 192 0
 136 0092 1046     		mov	r0, r2
 137 0094 03B0     		add	sp, sp, #12
 138              		.cfi_remember_state
 139              		.cfi_def_cfa_offset 12
 140              		@ sp needed
 141 0096 30BD     		pop	{r4, r5, pc}
 142              	.LVL11:
 143              	.L8:
 144              		.cfi_restore_state
 138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 145              		.loc 1 138 0
 146 0098 0222     		movs	r2, #2
 147 009a FAE7     		b	.L2
 148              		.cfi_endproc
 149              	.LFE317:
 151              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 152              		.align	1
 153              		.global	HAL_ADCEx_Calibration_GetValue
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	HAL_ADCEx_Calibration_GetValue:
 160              	.LFB318:
 193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
 195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Get the calibration factor.
 196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval Calibration value.
 201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
 202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 161              		.loc 1 203 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL12:
 204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return LL_ADC_GetCalibrationFactor(hadc->Instance, SingleDiff);
 167              		.loc 1 209 0
 168 0000 0368     		ldr	r3, [r0]
 169              	.LVL13:
 170              	.LBB290:
 171              	.LBB291:
2661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
 172              		.loc 2 2661 0
 173 0002 D3F8B400 		ldr	r0, [r3, #180]
 174              	.LVL14:
 175 0006 0840     		ands	r0, r0, r1
 176 0008 00F07F10 		and	r0, r0, #8323199
2662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
 177              		.loc 2 2662 0
 178 000c 090B     		lsrs	r1, r1, #12
 179              	.LVL15:
 180 000e 01F01001 		and	r1, r1, #16
 181              	.LVL16:
 182              	.LBE291:
 183              	.LBE290:
 210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 184              		.loc 1 210 0
 185 0012 C840     		lsrs	r0, r0, r1
 186 0014 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE318:
 190              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 191              		.align	1
 192              		.global	HAL_ADCEx_Calibration_SetValue
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu fpv4-sp-d16
 198              	HAL_ADCEx_Calibration_SetValue:
 199              	.LFB319:
 211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
 213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result.
 214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         ADC must be enabled and no conversion is ongoing.
 215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param CalibrationFactor Calibration factor (coded on 7 bits maximum)
 220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL state
 221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
 222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff,
 223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                  uint32_t CalibrationFactor)
 224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 200              		.loc 1 224 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205              	.LVL17:
 206 0000 0346     		mov	r3, r0
 207              	.LVL18:
 225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
 233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 208              		.loc 1 235 0
 209 0002 90F85000 		ldrb	r0, [r0, #80]	@ zero_extendqisi2
 210              	.LVL19:
 211 0006 0128     		cmp	r0, #1
 212 0008 39D0     		beq	.L17
 224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 213              		.loc 1 224 0 discriminator 2
 214 000a 70B4     		push	{r4, r5, r6}
 215              		.cfi_def_cfa_offset 12
 216              		.cfi_offset 4, -12
 217              		.cfi_offset 5, -8
 218              		.cfi_offset 6, -4
 219              		.loc 1 235 0 discriminator 2
 220 000c 0120     		movs	r0, #1
 221 000e 83F85000 		strb	r0, [r3, #80]
 236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 222              		.loc 1 239 0 discriminator 2
 223 0012 1868     		ldr	r0, [r3]
 224              	.LVL20:
 225              	.LBB292:
 226              	.LBB293:
6104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
6108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
6112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           starts immediately.
6120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTART);
6140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTP);
6160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
6169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 227              		.loc 2 6170 0 discriminator 2
 228 0014 8468     		ldr	r4, [r0, #8]
 229 0016 14F0040F 		tst	r4, #4
 230 001a 1ED0     		beq	.L18
 231              		.loc 2 6170 0 is_stmt 0
 232 001c 0125     		movs	r5, #1
 233              	.L13:
 234              	.LVL21:
 235              	.LBE293:
 236              	.LBE292:
 237              	.LBB295:
 238              	.LBB296:
6171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
6254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
6261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
6262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
6263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
6264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
6267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
6268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
6269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         separately).
6270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
6271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
6272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
6275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
6276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
6277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
6278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
6281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
6283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              ConversionData)
6284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
6285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                    );
6286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
6291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
6294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
6295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
6299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           starts immediately.
6303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
6309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
6310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
6312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
6316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTART);
6323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
6327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
6330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
6332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
6336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTP);
6343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
6347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
6348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
6350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
6352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 239              		.loc 2 6353 0 is_stmt 1
 240 001e 8468     		ldr	r4, [r0, #8]
 241 0020 14F0080F 		tst	r4, #8
 242 0024 1BD0     		beq	.L19
 243 0026 0126     		movs	r6, #1
 244              	.L14:
 245              	.LVL22:
 246              	.LBE296:
 247              	.LBE295:
 248              	.LBB298:
 249              	.LBB299:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 250              		.loc 2 6048 0
 251 0028 8468     		ldr	r4, [r0, #8]
 252 002a 14F0010F 		tst	r4, #1
 253 002e 18D0     		beq	.L15
 254              	.LVL23:
 255              	.LBE299:
 256              	.LBE298:
 240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 257              		.loc 1 243 0
 258 0030 BDB9     		cbnz	r5, .L15
 244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 259              		.loc 1 244 0
 260 0032 B6B9     		cbnz	r6, .L15
 261              	.LVL24:
 262              	.LBB300:
 263              	.LBB301:
2634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 264              		.loc 2 2634 0
 265 0034 D0F8B450 		ldr	r5, [r0, #180]
 266 0038 01F07F14 		and	r4, r1, #8323199
 267 003c 25EA0405 		bic	r5, r5, r4
 268 0040 01F07F04 		and	r4, r1, #127
 269 0044 E443     		mvns	r4, r4
 270 0046 04EA1131 		and	r1, r4, r1, lsr #12
 271              	.LVL25:
 272 004a 01F01001 		and	r1, r1, #16
 273 004e 8A40     		lsls	r2, r2, r1
 274              	.LVL26:
 275 0050 2A43     		orrs	r2, r2, r5
 276 0052 C0F8B420 		str	r2, [r0, #180]
 277              	.LBE301:
 278              	.LBE300:
 225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 279              		.loc 1 225 0
 280 0056 0020     		movs	r0, #0
 281              	.LVL27:
 282 0058 0CE0     		b	.L16
 283              	.LVL28:
 284              	.L18:
 285              	.LBB302:
 286              	.LBB294:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 287              		.loc 2 6170 0
 288 005a 0025     		movs	r5, #0
 289 005c DFE7     		b	.L13
 290              	.LVL29:
 291              	.L19:
 292              	.LBE294:
 293              	.LBE302:
 294              	.LBB303:
 295              	.LBB297:
 296              		.loc 2 6353 0
 297 005e 0026     		movs	r6, #0
 298 0060 E2E7     		b	.L14
 299              	.LVL30:
 300              	.L15:
 301              	.LBE297:
 302              	.LBE303:
 245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****      )
 246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */
 248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, SingleDiff, CalibrationFactor);
 249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
 251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine */
 253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 303              		.loc 1 253 0
 304 0062 5A6D     		ldr	r2, [r3, #84]
 305              	.LVL31:
 306 0064 42F02002 		orr	r2, r2, #32
 307 0068 5A65     		str	r2, [r3, #84]
 254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Update ADC error code */
 255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 308              		.loc 1 255 0
 309 006a 9A6D     		ldr	r2, [r3, #88]
 310 006c 42F00102 		orr	r2, r2, #1
 311 0070 9A65     		str	r2, [r3, #88]
 312              	.LVL32:
 256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 313              		.loc 1 258 0
 314 0072 0120     		movs	r0, #1
 315              	.LVL33:
 316              	.L16:
 259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 317              		.loc 1 262 0
 318 0074 0022     		movs	r2, #0
 319 0076 83F85020 		strb	r2, [r3, #80]
 263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 320              		.loc 1 266 0
 321 007a 70BC     		pop	{r4, r5, r6}
 322              		.cfi_restore 6
 323              		.cfi_restore 5
 324              		.cfi_restore 4
 325              		.cfi_def_cfa_offset 0
 326 007c 7047     		bx	lr
 327              	.LVL34:
 328              	.L17:
 235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 329              		.loc 1 235 0
 330 007e 0220     		movs	r0, #2
 331              		.loc 1 266 0
 332 0080 7047     		bx	lr
 333              		.cfi_endproc
 334              	.LFE319:
 336              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 337              		.align	1
 338              		.global	HAL_ADCEx_InjectedStart
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu fpv4-sp-d16
 344              	HAL_ADCEx_InjectedStart:
 345              	.LFB320:
 267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
 269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group.
 270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function: None.
 271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled when multimode feature is available:
 272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart() API must be called for ADC slave first,
 273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         then for ADC master.
 274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
 279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef *hadc)
 280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 346              		.loc 1 280 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL35:
 351 0000 38B5     		push	{r3, r4, r5, lr}
 352              		.cfi_def_cfa_offset 16
 353              		.cfi_offset 3, -16
 354              		.cfi_offset 4, -12
 355              		.cfi_offset 5, -8
 356              		.cfi_offset 14, -4
 357              	.LVL36:
 358              	.LBB304:
 359              	.LBB305:
5693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 360              		.loc 2 5693 0
 361 0002 3A4B     		ldr	r3, .L43
 362 0004 9D68     		ldr	r5, [r3, #8]
 363              	.LVL37:
 364              	.LBE305:
 365              	.LBE304:
 281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif
 286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 366              		.loc 1 290 0
 367 0006 0368     		ldr	r3, [r0]
 368              	.LVL38:
 369              	.LBB306:
 370              	.LBB307:
 371              		.loc 2 6353 0
 372 0008 9A68     		ldr	r2, [r3, #8]
 373 000a 12F0080F 		tst	r2, #8
 374 000e 67D1     		bne	.L36
 375 0010 05F01F05 		and	r5, r5, #31
 376              	.LVL39:
 377              	.LBE307:
 378              	.LBE306:
 291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
 293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
 295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****          the queue is empty */
 303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 379              		.loc 1 303 0
 380 0014 DA68     		ldr	r2, [r3, #12]
 381              	.LVL40:
 304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 382              		.loc 1 305 0
 383 0016 DB6C     		ldr	r3, [r3, #76]
 384 0018 13F0C00F 		tst	r3, #192
 385 001c 07D1     		bne	.L26
 306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 386              		.loc 1 306 0
 387 001e 002A     		cmp	r2, #0
 388 0020 05DB     		blt	.L26
 307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****        )
 308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 389              		.loc 1 309 0
 390 0022 436D     		ldr	r3, [r0, #84]
 391 0024 43F02003 		orr	r3, r3, #32
 392 0028 4365     		str	r3, [r0, #84]
 310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 393              		.loc 1 310 0
 394 002a 0123     		movs	r3, #1
 395 002c 59E0     		b	.L25
 396              	.L26:
 311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 397              		.loc 1 314 0
 398 002e 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 399 0032 012B     		cmp	r3, #1
 400 0034 57D0     		beq	.L37
 401 0036 0446     		mov	r4, r0
 402              		.loc 1 314 0 is_stmt 0 discriminator 2
 403 0038 0123     		movs	r3, #1
 404 003a 80F85030 		strb	r3, [r0, #80]
 315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 405              		.loc 1 317 0 is_stmt 1 discriminator 2
 406 003e FFF7FEFF 		bl	ADC_Enable
 407              	.LVL41:
 318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 408              		.loc 1 320 0 discriminator 2
 409 0042 0346     		mov	r3, r0
 410 0044 0028     		cmp	r0, #0
 411 0046 47D1     		bne	.L27
 321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 412              		.loc 1 323 0
 413 0048 626D     		ldr	r2, [r4, #84]
 414 004a 12F4807F 		tst	r2, #256
 415 004e 2DD0     		beq	.L28
 324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 416              		.loc 1 326 0
 417 0050 A26D     		ldr	r2, [r4, #88]
 418 0052 22F00802 		bic	r2, r2, #8
 419 0056 A265     		str	r2, [r4, #88]
 420              	.L29:
 327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       else
 329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 421              		.loc 1 337 0
 422 0058 626D     		ldr	r2, [r4, #84]
 423 005a 22F44052 		bic	r2, r2, #12288
 424 005e 22F00102 		bic	r2, r2, #1
 425 0062 42F48052 		orr	r2, r2, #4096
 426 0066 6265     		str	r2, [r4, #84]
 338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 427              		.loc 1 345 0
 428 0068 2268     		ldr	r2, [r4]
 429 006a 2149     		ldr	r1, .L43+4
 430 006c 8A42     		cmp	r2, r1
 431 006e 20D0     		beq	.L41
 432 0070 1146     		mov	r1, r2
 433              	.L30:
 434              		.loc 1 345 0 is_stmt 0 discriminator 4
 435 0072 8A42     		cmp	r2, r1
 436 0074 00D0     		beq	.L31
 346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 437              		.loc 1 346 0 is_stmt 1
 438 0076 1DB9     		cbnz	r5, .L32
 439              	.L31:
 347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****          )
 348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 440              		.loc 1 349 0
 441 0078 616D     		ldr	r1, [r4, #84]
 442 007a 21F48011 		bic	r1, r1, #1048576
 443 007e 6165     		str	r1, [r4, #84]
 444              	.L32:
 350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif
 352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 445              		.loc 1 355 0
 446 0080 6021     		movs	r1, #96
 447 0082 1160     		str	r1, [r2]
 356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 448              		.loc 1 360 0
 449 0084 0022     		movs	r2, #0
 450 0086 84F85020 		strb	r2, [r4, #80]
 361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 451              		.loc 1 375 0
 452 008a 2268     		ldr	r2, [r4]
 453 008c 1849     		ldr	r1, .L43+4
 454 008e 8A42     		cmp	r2, r1
 455 0090 12D0     		beq	.L42
 456 0092 1146     		mov	r1, r2
 457              	.L33:
 458              		.loc 1 375 0 is_stmt 0 discriminator 4
 459 0094 8A42     		cmp	r2, r1
 460 0096 12D0     		beq	.L34
 376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 461              		.loc 1 376 0 is_stmt 1
 462 0098 8DB1     		cbz	r5, .L34
 377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 463              		.loc 1 377 0
 464 009a 062D     		cmp	r5, #6
 465 009c 0FD0     		beq	.L34
 378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 466              		.loc 1 378 0
 467 009e 072D     		cmp	r5, #7
 468 00a0 0DD0     		beq	.L34
 379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****          )
 380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
 384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         }
 386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       else
 388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 469              		.loc 1 390 0
 470 00a2 626D     		ldr	r2, [r4, #84]
 471 00a4 42F48012 		orr	r2, r2, #1048576
 472 00a8 6265     		str	r2, [r4, #84]
 473 00aa 1AE0     		b	.L25
 474              	.L28:
 331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 475              		.loc 1 331 0
 476 00ac 0022     		movs	r2, #0
 477 00ae A265     		str	r2, [r4, #88]
 478 00b0 D2E7     		b	.L29
 479              	.L41:
 345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 480              		.loc 1 345 0
 481 00b2 A1F58071 		sub	r1, r1, #256
 482 00b6 DCE7     		b	.L30
 483              	.L42:
 375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 484              		.loc 1 375 0
 485 00b8 A1F58071 		sub	r1, r1, #256
 486 00bc EAE7     		b	.L33
 487              	.L34:
 488              	.LVL42:
 489              	.LBB308:
 490              	.LBB309:
4290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 491              		.loc 2 4290 0
 492 00be D168     		ldr	r1, [r2, #12]
 493              	.LVL43:
 494              	.LBE309:
 495              	.LBE308:
 382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
 496              		.loc 1 382 0
 497 00c0 11F0007F 		tst	r1, #33554432
 498 00c4 0DD1     		bne	.L25
 499              	.LVL44:
 500              	.LBB310:
 501              	.LBB311:
6320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 502              		.loc 2 6320 0
 503 00c6 9168     		ldr	r1, [r2, #8]
 504 00c8 21F00041 		bic	r1, r1, #-2147483648
 505 00cc 21F03F01 		bic	r1, r1, #63
 506 00d0 41F00801 		orr	r1, r1, #8
 507 00d4 9160     		str	r1, [r2, #8]
 508 00d6 04E0     		b	.L25
 509              	.LVL45:
 510              	.L27:
 511              	.LBE311:
 512              	.LBE310:
 391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #else
 393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif
 399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
 402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 513              		.loc 1 404 0
 514 00d8 0022     		movs	r2, #0
 515 00da 84F85020 		strb	r2, [r4, #80]
 516 00de 00E0     		b	.L25
 517              	.LVL46:
 518              	.L36:
 292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 519              		.loc 1 292 0
 520 00e0 0223     		movs	r3, #2
 521              	.LVL47:
 522              	.L25:
 405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 523              		.loc 1 410 0
 524 00e2 1846     		mov	r0, r3
 525 00e4 38BD     		pop	{r3, r4, r5, pc}
 526              	.LVL48:
 527              	.L37:
 314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 528              		.loc 1 314 0
 529 00e6 0223     		movs	r3, #2
 530 00e8 FBE7     		b	.L25
 531              	.L44:
 532 00ea 00BF     		.align	2
 533              	.L43:
 534 00ec 00030450 		.word	1342440192
 535 00f0 00010450 		.word	1342439680
 536              		.cfi_endproc
 537              	.LFE320:
 539              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 540              		.align	1
 541              		.global	HAL_ADCEx_InjectedStop
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu fpv4-sp-d16
 547              	HAL_ADCEx_InjectedStop:
 548              	.LFB321:
 411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
 413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   In case of multimode enabled (when multimode feature is available),
 421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop() must be called for ADC master first, then for ADC slave.
 422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
 428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef *hadc)
 429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 549              		.loc 1 429 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              	.LVL49:
 430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 554              		.loc 1 436 0
 555 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 556 0004 012B     		cmp	r3, #1
 557 0006 26D0     		beq	.L49
 429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 558              		.loc 1 429 0 discriminator 2
 559 0008 10B5     		push	{r4, lr}
 560              		.cfi_def_cfa_offset 8
 561              		.cfi_offset 4, -8
 562              		.cfi_offset 14, -4
 563 000a 0446     		mov	r4, r0
 564              		.loc 1 436 0 discriminator 2
 565 000c 0123     		movs	r3, #1
 566 000e 80F85030 		strb	r3, [r0, #80]
 437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 567              		.loc 1 439 0 discriminator 2
 568 0012 0221     		movs	r1, #2
 569 0014 FFF7FEFF 		bl	ADC_ConversionStop
 570              	.LVL50:
 440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* and if no conversion on regular group is on-going                       */
 443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 571              		.loc 1 443 0 discriminator 2
 572 0018 0346     		mov	r3, r0
 573 001a 40B9     		cbnz	r0, .L47
 444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 574              		.loc 1 445 0
 575 001c 2268     		ldr	r2, [r4]
 576              	.LVL51:
 577              	.LBB312:
 578              	.LBB313:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 579              		.loc 2 6170 0
 580 001e 9268     		ldr	r2, [r2, #8]
 581              	.LVL52:
 582 0020 12F0040F 		tst	r2, #4
 583 0024 08D0     		beq	.L48
 584              	.LVL53:
 585              	.LBE313:
 586              	.LBE312:
 446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
 462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 587              		.loc 1 464 0
 588 0026 626D     		ldr	r2, [r4, #84]
 589 0028 22F48052 		bic	r2, r2, #4096
 590 002c 6265     		str	r2, [r4, #84]
 591              	.L47:
 592              	.LVL54:
 465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 593              		.loc 1 469 0
 594 002e 0022     		movs	r2, #0
 595 0030 84F85020 		strb	r2, [r4, #80]
 470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 596              		.loc 1 473 0
 597 0034 1846     		mov	r0, r3
 598 0036 10BD     		pop	{r4, pc}
 599              	.LVL55:
 600              	.L48:
 448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 601              		.loc 1 448 0
 602 0038 2046     		mov	r0, r4
 603              	.LVL56:
 604 003a FFF7FEFF 		bl	ADC_Disable
 605              	.LVL57:
 451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 606              		.loc 1 451 0
 607 003e 0346     		mov	r3, r0
 608 0040 0028     		cmp	r0, #0
 609 0042 F4D1     		bne	.L47
 454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 610              		.loc 1 454 0
 611 0044 626D     		ldr	r2, [r4, #84]
 612 0046 22F48852 		bic	r2, r2, #4352
 613 004a 22F00102 		bic	r2, r2, #1
 614 004e 42F00102 		orr	r2, r2, #1
 615 0052 6265     		str	r2, [r4, #84]
 616 0054 EBE7     		b	.L47
 617              	.LVL58:
 618              	.L49:
 619              		.cfi_def_cfa_offset 0
 620              		.cfi_restore 4
 621              		.cfi_restore 14
 436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 622              		.loc 1 436 0
 623 0056 0223     		movs	r3, #2
 624              		.loc 1 473 0
 625 0058 1846     		mov	r0, r3
 626              	.LVL59:
 627 005a 7047     		bx	lr
 628              		.cfi_endproc
 629              	.LFE321:
 631              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 632              		.align	1
 633              		.global	HAL_ADCEx_InjectedPollForConversion
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu fpv4-sp-d16
 639              	HAL_ADCEx_InjectedPollForConversion:
 640              	.LFB322:
 474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
 476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param Timeout Timeout value in millisecond.
 479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Depending on hadc->Init.EOCSelection, JEOS or JEOC is
 480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         checked and cleared depending on AUTDLY bit status.
 481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
 483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
 484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 641              		.loc 1 484 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              	.LVL60:
 646 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 647              		.cfi_def_cfa_offset 24
 648              		.cfi_offset 4, -24
 649              		.cfi_offset 5, -20
 650              		.cfi_offset 6, -16
 651              		.cfi_offset 7, -12
 652              		.cfi_offset 8, -8
 653              		.cfi_offset 14, -4
 654 0004 0446     		mov	r4, r0
 655 0006 0E46     		mov	r6, r1
 656              	.LVL61:
 657              	.LBB314:
 658              	.LBB315:
5693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 659              		.loc 2 5693 0
 660 0008 3B4B     		ldr	r3, .L80
 661 000a 9F68     		ldr	r7, [r3, #8]
 662 000c 07F01F07 		and	r7, r7, #31
 663              	.LVL62:
 664              	.LBE315:
 665              	.LBE314:
 485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
 486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_Flag_End;
 487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_cfgr;
 490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   const ADC_TypeDef *tmpADC_Master;
 492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif
 494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* If end of sequence selected */
 499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 666              		.loc 1 499 0
 667 0010 4369     		ldr	r3, [r0, #20]
 668 0012 082B     		cmp	r3, #8
 669 0014 1FD0     		beq	.L76
 500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOS;
 502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else /* end of conversion selected */
 504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOC;
 670              		.loc 1 505 0
 671 0016 2025     		movs	r5, #32
 672              	.L55:
 673              	.LVL63:
 506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Get timeout */
 509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
 674              		.loc 1 509 0
 675 0018 FFF7FEFF 		bl	HAL_GetTick
 676              	.LVL64:
 677 001c 8046     		mov	r8, r0
 678              	.LVL65:
 679              	.L57:
 510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Wait until End of Conversion or Sequence flag is raised */
 512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 680              		.loc 1 512 0
 681 001e 2368     		ldr	r3, [r4]
 682 0020 1A68     		ldr	r2, [r3]
 683 0022 2A42     		tst	r2, r5
 684 0024 19D1     		bne	.L77
 513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
 515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 685              		.loc 1 515 0
 686 0026 B6F1FF3F 		cmp	r6, #-1
 687 002a F8D0     		beq	.L57
 516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 688              		.loc 1 517 0
 689 002c FFF7FEFF 		bl	HAL_GetTick
 690              	.LVL66:
 691 0030 A0EB0800 		sub	r0, r0, r8
 692 0034 B042     		cmp	r0, r6
 693 0036 01D8     		bhi	.L58
 694              		.loc 1 517 0 is_stmt 0 discriminator 1
 695 0038 002E     		cmp	r6, #0
 696 003a F0D1     		bne	.L57
 697              	.L58:
 518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 698              		.loc 1 520 0 is_stmt 1
 699 003c 2368     		ldr	r3, [r4]
 700 003e 1B68     		ldr	r3, [r3]
 701 0040 2B42     		tst	r3, r5
 702 0042 ECD1     		bne	.L57
 521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
 522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 703              		.loc 1 523 0
 704 0044 636D     		ldr	r3, [r4, #84]
 705 0046 43F00403 		orr	r3, r3, #4
 706 004a 6365     		str	r3, [r4, #84]
 524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
 526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 707              		.loc 1 526 0
 708 004c 0023     		movs	r3, #0
 709 004e 84F85030 		strb	r3, [r4, #80]
 527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 710              		.loc 1 528 0
 711 0052 0320     		movs	r0, #3
 712 0054 44E0     		b	.L59
 713              	.LVL67:
 714              	.L76:
 501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 715              		.loc 1 501 0
 716 0056 4025     		movs	r5, #64
 717 0058 DEE7     		b	.L55
 718              	.LVL68:
 719              	.L77:
 720              	.LBB316:
 721              	.LBB317:
3974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 722              		.loc 2 3974 0
 723 005a DA6C     		ldr	r2, [r3, #76]
 724 005c 12F0C00F 		tst	r2, #192
 725 0060 12D1     		bne	.L71
 726 0062 0120     		movs	r0, #1
 727              	.L61:
 728              	.LVL69:
 729              	.LBE317:
 730              	.LBE316:
 731              	.LBB319:
 732              	.LBB320:
3248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 733              		.loc 2 3248 0
 734 0064 DA68     		ldr	r2, [r3, #12]
 735 0066 12F4406F 		tst	r2, #3072
 736 006a 0FD1     		bne	.L72
 737 006c 0126     		movs	r6, #1
 738              	.LVL70:
 739              	.L62:
 740              	.LBE320:
 741              	.LBE319:
 529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         }
 530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Retrieve ADC configuration */
 535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
 536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode         */
 539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* available).                                                        */
 540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 742              		.loc 1 541 0
 743 006e 234A     		ldr	r2, .L80+4
 744 0070 9342     		cmp	r3, r2
 745 0072 0DD0     		beq	.L78
 746 0074 1A46     		mov	r2, r3
 747              	.L63:
 748              		.loc 1 541 0 is_stmt 0 discriminator 4
 749 0076 9342     		cmp	r3, r2
 750 0078 0DD0     		beq	.L64
 542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 751              		.loc 1 542 0 is_stmt 1
 752 007a 67B1     		cbz	r7, .L64
 543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 753              		.loc 1 543 0
 754 007c 062F     		cmp	r7, #6
 755 007e 0AD0     		beq	.L64
 544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 756              		.loc 1 544 0
 757 0080 072F     		cmp	r7, #7
 758 0082 08D0     		beq	.L64
 759              	.LVL71:
 545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****      )
 546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
 550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 760              		.loc 1 552 0 discriminator 4
 761 0084 D168     		ldr	r1, [r2, #12]
 762              	.LVL72:
 763 0086 07E0     		b	.L66
 764              	.LVL73:
 765              	.L71:
 766              	.LBB322:
 767              	.LBB318:
3974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 768              		.loc 2 3974 0
 769 0088 0020     		movs	r0, #0
 770 008a EBE7     		b	.L61
 771              	.LVL74:
 772              	.L72:
 773              	.LBE318:
 774              	.LBE322:
 775              	.LBB323:
 776              	.LBB321:
3248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 777              		.loc 2 3248 0
 778 008c 0026     		movs	r6, #0
 779              	.LVL75:
 780 008e EEE7     		b	.L62
 781              	.LVL76:
 782              	.L78:
 783              	.LBE321:
 784              	.LBE323:
 541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 785              		.loc 1 541 0
 786 0090 A2F58072 		sub	r2, r2, #256
 787 0094 EFE7     		b	.L63
 788              	.L64:
 547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 789              		.loc 1 547 0
 790 0096 D968     		ldr	r1, [r3, #12]
 791              	.LVL77:
 792              	.L66:
 553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #else
 555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif
 557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Update ADC state machine */
 559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 793              		.loc 1 559 0
 794 0098 626D     		ldr	r2, [r4, #84]
 795 009a 42F40052 		orr	r2, r2, #8192
 796 009e 6265     		str	r2, [r4, #84]
 560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
 563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* from group regular.                                                      */
 564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
 797              		.loc 1 564 0
 798 00a0 30B9     		cbnz	r0, .L67
 799              		.loc 1 564 0 is_stmt 0 discriminator 1
 800 00a2 11F0007F 		tst	r1, #33554432
 801 00a6 16D1     		bne	.L68
 565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 802              		.loc 1 565 0 is_stmt 1
 803 00a8 AEB1     		cbz	r6, .L68
 566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****        ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
 804              		.loc 1 566 0
 805 00aa 11F4005F 		tst	r1, #8192
 806 00ae 12D1     		bne	.L68
 807              	.L67:
 567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Check whether end of sequence is reached */
 570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
 808              		.loc 1 570 0
 809 00b0 1A68     		ldr	r2, [r3]
 810 00b2 12F0400F 		tst	r2, #64
 811 00b6 0ED0     		beq	.L68
 571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Particular case if injected contexts queue is enabled:             */
 573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* when the last context has been fully processed, JSQR is reset      */
 574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* by the hardware. Even if no injected conversion is planned to come */
 575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* (queue empty, triggers are ignored), it can start again            */
 576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* immediately after setting a new context (JADSTART is still set).   */
 577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Therefore, state of HAL ADC injected group is kept to busy.        */
 578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
 812              		.loc 1 578 0
 813 00b8 11F4001F 		tst	r1, #2097152
 814 00bc 0BD1     		bne	.L68
 579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 815              		.loc 1 581 0
 816 00be 626D     		ldr	r2, [r4, #84]
 817 00c0 22F48052 		bic	r2, r2, #4096
 818 00c4 6265     		str	r2, [r4, #84]
 582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
 819              		.loc 1 583 0
 820 00c6 626D     		ldr	r2, [r4, #84]
 821 00c8 12F4807F 		tst	r2, #256
 822 00cc 03D1     		bne	.L68
 584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
 585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 823              		.loc 1 585 0
 824 00ce 626D     		ldr	r2, [r4, #84]
 825 00d0 42F00102 		orr	r2, r2, #1
 826 00d4 6265     		str	r2, [r4, #84]
 827              	.L68:
 586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         }
 587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Clear polled flag */
 592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (tmp_Flag_End == ADC_FLAG_JEOS)
 828              		.loc 1 592 0
 829 00d6 402D     		cmp	r5, #64
 830 00d8 04D0     		beq	.L79
 593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Clear end of sequence JEOS flag of injected group if low power feature */
 595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature.   */
 596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* For injected groups, no new conversion will start before JEOS is       */
 597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* cleared.                                                               */
 598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
 604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 831              		.loc 1 605 0
 832 00da 2022     		movs	r2, #32
 833 00dc 1A60     		str	r2, [r3]
 606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return API HAL status */
 609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return HAL_OK;
 834              		.loc 1 609 0
 835 00de 0020     		movs	r0, #0
 836              	.LVL78:
 837              	.L59:
 610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 838              		.loc 1 610 0
 839 00e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 840              	.LVL79:
 841              	.L79:
 598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 842              		.loc 1 598 0
 843 00e4 11F4804F 		tst	r1, #16384
 844 00e8 03D1     		bne	.L74
 600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 845              		.loc 1 600 0
 846 00ea 6022     		movs	r2, #96
 847 00ec 1A60     		str	r2, [r3]
 609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 848              		.loc 1 609 0
 849 00ee 0020     		movs	r0, #0
 850 00f0 F6E7     		b	.L59
 851              	.L74:
 852 00f2 0020     		movs	r0, #0
 853 00f4 F4E7     		b	.L59
 854              	.L81:
 855 00f6 00BF     		.align	2
 856              	.L80:
 857 00f8 00030450 		.word	1342440192
 858 00fc 00010450 		.word	1342439680
 859              		.cfi_endproc
 860              	.LFE322:
 862              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 863              		.align	1
 864              		.global	HAL_ADCEx_InjectedStart_IT
 865              		.syntax unified
 866              		.thumb
 867              		.thumb_func
 868              		.fpu fpv4-sp-d16
 870              	HAL_ADCEx_InjectedStart_IT:
 871              	.LFB323:
 611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
 613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group with interruption.
 614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function according to initialization
 615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         setting : JEOC (end of conversion) or JEOS (end of sequence)
 616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is enabled):
 617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart_IT() API must be called for ADC slave first,
 618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         then for ADC master.
 619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
 623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
 624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef *hadc)
 625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 872              		.loc 1 625 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              	.LVL80:
 877 0000 38B5     		push	{r3, r4, r5, lr}
 878              		.cfi_def_cfa_offset 16
 879              		.cfi_offset 3, -16
 880              		.cfi_offset 4, -12
 881              		.cfi_offset 5, -8
 882              		.cfi_offset 14, -4
 883              	.LVL81:
 884              	.LBB324:
 885              	.LBB325:
5693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 886              		.loc 2 5693 0
 887 0002 4B4B     		ldr	r3, .L106
 888 0004 9D68     		ldr	r5, [r3, #8]
 889              	.LVL82:
 890              	.LBE325:
 891              	.LBE324:
 626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif
 631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 892              		.loc 1 635 0
 893 0006 0368     		ldr	r3, [r0]
 894              	.LVL83:
 895              	.LBB326:
 896              	.LBB327:
 897              		.loc 2 6353 0
 898 0008 9A68     		ldr	r2, [r3, #8]
 899 000a 12F0080F 		tst	r2, #8
 900 000e 40F08980 		bne	.L98
 901 0012 05F01F05 		and	r5, r5, #31
 902              	.LVL84:
 903              	.LBE327:
 904              	.LBE326:
 636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
 638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
 640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****          the queue is empty */
 648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 905              		.loc 1 648 0
 906 0016 DA68     		ldr	r2, [r3, #12]
 907              	.LVL85:
 649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 908              		.loc 1 650 0
 909 0018 DB6C     		ldr	r3, [r3, #76]
 910 001a 13F0C00F 		tst	r3, #192
 911 001e 07D1     		bne	.L84
 651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 912              		.loc 1 651 0
 913 0020 002A     		cmp	r2, #0
 914 0022 05DB     		blt	.L84
 652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****        )
 653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 915              		.loc 1 654 0
 916 0024 436D     		ldr	r3, [r0, #84]
 917 0026 43F02003 		orr	r3, r3, #32
 918 002a 4365     		str	r3, [r0, #84]
 655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 919              		.loc 1 655 0
 920 002c 0123     		movs	r3, #1
 921 002e 7AE0     		b	.L83
 922              	.L84:
 656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 923              		.loc 1 659 0
 924 0030 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 925 0034 012B     		cmp	r3, #1
 926 0036 78D0     		beq	.L99
 927 0038 0446     		mov	r4, r0
 928              		.loc 1 659 0 is_stmt 0 discriminator 2
 929 003a 0123     		movs	r3, #1
 930 003c 80F85030 		strb	r3, [r0, #80]
 660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 931              		.loc 1 662 0 is_stmt 1 discriminator 2
 932 0040 FFF7FEFF 		bl	ADC_Enable
 933              	.LVL86:
 663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 934              		.loc 1 665 0 discriminator 2
 935 0044 0346     		mov	r3, r0
 936 0046 0028     		cmp	r0, #0
 937 0048 68D1     		bne	.L85
 666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 938              		.loc 1 668 0
 939 004a 626D     		ldr	r2, [r4, #84]
 940 004c 12F4807F 		tst	r2, #256
 941 0050 43D0     		beq	.L86
 669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 942              		.loc 1 671 0
 943 0052 A26D     		ldr	r2, [r4, #88]
 944 0054 22F00802 		bic	r2, r2, #8
 945 0058 A265     		str	r2, [r4, #88]
 946              	.L87:
 672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       else
 674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 947              		.loc 1 682 0
 948 005a 626D     		ldr	r2, [r4, #84]
 949 005c 22F44052 		bic	r2, r2, #12288
 950 0060 22F00102 		bic	r2, r2, #1
 951 0064 42F48052 		orr	r2, r2, #4096
 952 0068 6265     		str	r2, [r4, #84]
 683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 953              		.loc 1 690 0
 954 006a 2268     		ldr	r2, [r4]
 955 006c 3149     		ldr	r1, .L106+4
 956 006e 8A42     		cmp	r2, r1
 957 0070 36D0     		beq	.L104
 958 0072 1146     		mov	r1, r2
 959              	.L88:
 960              		.loc 1 690 0 is_stmt 0 discriminator 4
 961 0074 8A42     		cmp	r2, r1
 962 0076 00D0     		beq	.L89
 691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 963              		.loc 1 691 0 is_stmt 1
 964 0078 1DB9     		cbnz	r5, .L90
 965              	.L89:
 692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****          )
 693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 966              		.loc 1 694 0
 967 007a 616D     		ldr	r1, [r4, #84]
 968 007c 21F48011 		bic	r1, r1, #1048576
 969 0080 6165     		str	r1, [r4, #84]
 970              	.L90:
 695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif
 697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 971              		.loc 1 700 0
 972 0082 6021     		movs	r1, #96
 973 0084 1160     		str	r1, [r2]
 701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 974              		.loc 1 705 0
 975 0086 0022     		movs	r2, #0
 976 0088 84F85020 		strb	r2, [r4, #80]
 706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature   */
 708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* is enabled.                                                            */
 709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != 0UL)
 977              		.loc 1 709 0
 978 008c 2268     		ldr	r2, [r4]
 979 008e D168     		ldr	r1, [r2, #12]
 980 0090 11F4001F 		tst	r1, #2097152
 981 0094 03D0     		beq	.L91
 710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
 982              		.loc 1 711 0
 983 0096 5168     		ldr	r1, [r2, #4]
 984 0098 41F48061 		orr	r1, r1, #1024
 985 009c 5160     		str	r1, [r2, #4]
 986              	.L91:
 712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
 715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       switch (hadc->Init.EOCSelection)
 987              		.loc 1 715 0
 988 009e 6269     		ldr	r2, [r4, #20]
 989 00a0 082A     		cmp	r2, #8
 990 00a2 20D1     		bne	.L102
 716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV:
 718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 991              		.loc 1 718 0
 992 00a4 2168     		ldr	r1, [r4]
 993 00a6 4A68     		ldr	r2, [r1, #4]
 994 00a8 22F02002 		bic	r2, r2, #32
 995 00ac 4A60     		str	r2, [r1, #4]
 719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 996              		.loc 1 719 0
 997 00ae 2168     		ldr	r1, [r4]
 998 00b0 4A68     		ldr	r2, [r1, #4]
 999 00b2 42F04002 		orr	r2, r2, #64
 1000 00b6 4A60     		str	r2, [r1, #4]
 1001              	.L94:
 720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           break;
 721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         default:
 723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           break;
 726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1002              		.loc 1 741 0
 1003 00b8 2268     		ldr	r2, [r4]
 1004 00ba 1E49     		ldr	r1, .L106+4
 1005 00bc 8A42     		cmp	r2, r1
 1006 00be 1DD0     		beq	.L105
 1007 00c0 1146     		mov	r1, r2
 1008              	.L95:
 1009              		.loc 1 741 0 is_stmt 0 discriminator 4
 1010 00c2 8A42     		cmp	r2, r1
 1011 00c4 1DD0     		beq	.L96
 742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1012              		.loc 1 742 0 is_stmt 1
 1013 00c6 E5B1     		cbz	r5, .L96
 743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 1014              		.loc 1 743 0
 1015 00c8 062D     		cmp	r5, #6
 1016 00ca 1AD0     		beq	.L96
 744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1017              		.loc 1 744 0
 1018 00cc 072D     		cmp	r5, #7
 1019 00ce 18D0     		beq	.L96
 745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****          )
 746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
 750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         }
 752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       else
 754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1020              		.loc 1 756 0
 1021 00d0 626D     		ldr	r2, [r4, #84]
 1022 00d2 42F48012 		orr	r2, r2, #1048576
 1023 00d6 6265     		str	r2, [r4, #84]
 1024 00d8 25E0     		b	.L83
 1025              	.L86:
 676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 1026              		.loc 1 676 0
 1027 00da 0022     		movs	r2, #0
 1028 00dc A265     		str	r2, [r4, #88]
 1029 00de BCE7     		b	.L87
 1030              	.L104:
 690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1031              		.loc 1 690 0
 1032 00e0 A1F58071 		sub	r1, r1, #256
 1033 00e4 C6E7     		b	.L88
 1034              	.L102:
 723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 1035              		.loc 1 723 0
 1036 00e6 2168     		ldr	r1, [r4]
 1037 00e8 4A68     		ldr	r2, [r1, #4]
 1038 00ea 22F04002 		bic	r2, r2, #64
 1039 00ee 4A60     		str	r2, [r1, #4]
 724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           break;
 1040              		.loc 1 724 0
 1041 00f0 2168     		ldr	r1, [r4]
 1042 00f2 4A68     		ldr	r2, [r1, #4]
 1043 00f4 42F02002 		orr	r2, r2, #32
 1044 00f8 4A60     		str	r2, [r1, #4]
 725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 1045              		.loc 1 725 0
 1046 00fa DDE7     		b	.L94
 1047              	.L105:
 741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1048              		.loc 1 741 0
 1049 00fc A1F58071 		sub	r1, r1, #256
 1050 0100 DFE7     		b	.L95
 1051              	.L96:
 1052              	.LVL87:
 1053              	.LBB328:
 1054              	.LBB329:
4290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1055              		.loc 2 4290 0
 1056 0102 D168     		ldr	r1, [r2, #12]
 1057              	.LVL88:
 1058              	.LBE329:
 1059              	.LBE328:
 748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
 1060              		.loc 1 748 0
 1061 0104 11F0007F 		tst	r1, #33554432
 1062 0108 0DD1     		bne	.L83
 1063              	.LVL89:
 1064              	.LBB330:
 1065              	.LBB331:
6320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1066              		.loc 2 6320 0
 1067 010a 9168     		ldr	r1, [r2, #8]
 1068 010c 21F00041 		bic	r1, r1, #-2147483648
 1069 0110 21F03F01 		bic	r1, r1, #63
 1070 0114 41F00801 		orr	r1, r1, #8
 1071 0118 9160     		str	r1, [r2, #8]
 1072 011a 04E0     		b	.L83
 1073              	.LVL90:
 1074              	.L85:
 1075              	.LBE331:
 1076              	.LBE330:
 757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #else
 759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif
 765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
 768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1077              		.loc 1 770 0
 1078 011c 0022     		movs	r2, #0
 1079 011e 84F85020 		strb	r2, [r4, #80]
 1080 0122 00E0     		b	.L83
 1081              	.LVL91:
 1082              	.L98:
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 1083              		.loc 1 637 0
 1084 0124 0223     		movs	r3, #2
 1085              	.LVL92:
 1086              	.L83:
 771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1087              		.loc 1 776 0
 1088 0126 1846     		mov	r0, r3
 1089 0128 38BD     		pop	{r3, r4, r5, pc}
 1090              	.LVL93:
 1091              	.L99:
 659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1092              		.loc 1 659 0
 1093 012a 0223     		movs	r3, #2
 1094 012c FBE7     		b	.L83
 1095              	.L107:
 1096 012e 00BF     		.align	2
 1097              	.L106:
 1098 0130 00030450 		.word	1342440192
 1099 0134 00010450 		.word	1342439680
 1100              		.cfi_endproc
 1101              	.LFE323:
 1103              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 1104              		.align	1
 1105              		.global	HAL_ADCEx_InjectedStop_IT
 1106              		.syntax unified
 1107              		.thumb
 1108              		.thumb_func
 1109              		.fpu fpv4-sp-d16
 1111              	HAL_ADCEx_InjectedStop_IT:
 1112              	.LFB324:
 777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
 779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of
 780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         is on going.
 782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is available):
 788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop_IT() API must be called for ADC master first,
 789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         then for ADC slave.
 790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop() must be used.
 794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
 797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef *hadc)
 798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1113              		.loc 1 798 0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 0
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117              	.LVL94:
 799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1118              		.loc 1 805 0
 1119 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1120 0004 012B     		cmp	r3, #1
 1121 0006 2BD0     		beq	.L112
 798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1122              		.loc 1 798 0 discriminator 2
 1123 0008 10B5     		push	{r4, lr}
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 4, -8
 1126              		.cfi_offset 14, -4
 1127 000a 0446     		mov	r4, r0
 1128              		.loc 1 805 0 discriminator 2
 1129 000c 0123     		movs	r3, #1
 1130 000e 80F85030 		strb	r3, [r0, #80]
 806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 1131              		.loc 1 808 0 discriminator 2
 1132 0012 0221     		movs	r1, #2
 1133 0014 FFF7FEFF 		bl	ADC_ConversionStop
 1134              	.LVL95:
 809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* and if no conversion on the other group (regular group) is intended to   */
 812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* continue.                                                                */
 813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1135              		.loc 1 813 0 discriminator 2
 1136 0018 0346     		mov	r3, r0
 1137 001a 68B9     		cbnz	r0, .L110
 814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for injected channels */
 816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_FLAG_JQOVF));
 1138              		.loc 1 816 0
 1139 001c 2168     		ldr	r1, [r4]
 1140 001e 4A68     		ldr	r2, [r1, #4]
 1141 0020 22F48C62 		bic	r2, r2, #1120
 1142 0024 4A60     		str	r2, [r1, #4]
 817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 1143              		.loc 1 818 0
 1144 0026 2268     		ldr	r2, [r4]
 1145              	.LVL96:
 1146              	.LBB332:
 1147              	.LBB333:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1148              		.loc 2 6170 0
 1149 0028 9268     		ldr	r2, [r2, #8]
 1150              	.LVL97:
 1151 002a 12F0040F 		tst	r2, #4
 1152 002e 08D0     		beq	.L111
 1153              	.LVL98:
 1154              	.LBE333:
 1155              	.LBE332:
 819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
 835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1156              		.loc 1 837 0
 1157 0030 626D     		ldr	r2, [r4, #84]
 1158 0032 22F48052 		bic	r2, r2, #4096
 1159 0036 6265     		str	r2, [r4, #84]
 1160              	.L110:
 1161              	.LVL99:
 838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1162              		.loc 1 842 0
 1163 0038 0022     		movs	r2, #0
 1164 003a 84F85020 		strb	r2, [r4, #80]
 843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1165              		.loc 1 846 0
 1166 003e 1846     		mov	r0, r3
 1167 0040 10BD     		pop	{r4, pc}
 1168              	.LVL100:
 1169              	.L111:
 821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1170              		.loc 1 821 0
 1171 0042 2046     		mov	r0, r4
 1172              	.LVL101:
 1173 0044 FFF7FEFF 		bl	ADC_Disable
 1174              	.LVL102:
 824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 1175              		.loc 1 824 0
 1176 0048 0346     		mov	r3, r0
 1177 004a 0028     		cmp	r0, #0
 1178 004c F4D1     		bne	.L110
 827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1179              		.loc 1 827 0
 1180 004e 626D     		ldr	r2, [r4, #84]
 1181 0050 22F48852 		bic	r2, r2, #4352
 1182 0054 22F00102 		bic	r2, r2, #1
 1183 0058 42F00102 		orr	r2, r2, #1
 1184 005c 6265     		str	r2, [r4, #84]
 1185 005e EBE7     		b	.L110
 1186              	.LVL103:
 1187              	.L112:
 1188              		.cfi_def_cfa_offset 0
 1189              		.cfi_restore 4
 1190              		.cfi_restore 14
 805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1191              		.loc 1 805 0
 1192 0060 0223     		movs	r3, #2
 1193              		.loc 1 846 0
 1194 0062 1846     		mov	r0, r3
 1195              	.LVL104:
 1196 0064 7047     		bx	lr
 1197              		.cfi_endproc
 1198              	.LFE324:
 1200              		.section	.text.HAL_ADCEx_MultiModeStart_DMA,"ax",%progbits
 1201              		.align	1
 1202              		.global	HAL_ADCEx_MultiModeStart_DMA
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1206              		.fpu fpv4-sp-d16
 1208              	HAL_ADCEx_MultiModeStart_DMA:
 1209              	.LFB325:
 847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
 850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start MultiMode conversion and transfer regular results through DMA.
 851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode must have been previously configured using
 852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
 853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
 854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *          overrun, DMA half transfer, DMA transfer complete.
 855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   State field of Slave ADC handle is not updated in this configuration:
 857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *          user should not rely on it for information related to Slave regular
 858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         conversions.
 859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
 860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param pData Destination Buffer address.
 861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param Length Length of data to be transferred from ADC peripheral to memory (in bytes).
 862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
 864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t L
 865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1210              		.loc 1 865 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 104
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              	.LVL105:
 1215 0000 70B5     		push	{r4, r5, r6, lr}
 1216              		.cfi_def_cfa_offset 16
 1217              		.cfi_offset 4, -16
 1218              		.cfi_offset 5, -12
 1219              		.cfi_offset 6, -8
 1220              		.cfi_offset 14, -4
 1221 0002 9AB0     		sub	sp, sp, #104
 1222              		.cfi_def_cfa_offset 120
 866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 1223              		.loc 1 876 0
 1224 0004 0468     		ldr	r4, [r0]
 1225              	.LVL106:
 1226              	.LBB334:
 1227              	.LBB335:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1228              		.loc 2 6170 0
 1229 0006 A468     		ldr	r4, [r4, #8]
 1230              	.LVL107:
 1231 0008 14F0040F 		tst	r4, #4
 1232 000c 5DD1     		bne	.L124
 1233              	.LVL108:
 1234              	.LBE335:
 1235              	.LBE334:
 877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
 879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
 881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
 882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1236              		.loc 1 883 0
 1237 000e 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 1238 0012 012C     		cmp	r4, #1
 1239 0014 5DD0     		beq	.L125
 1240              		.loc 1 883 0 is_stmt 0 discriminator 2
 1241 0016 0123     		movs	r3, #1
 1242 0018 80F85030 		strb	r3, [r0, #80]
 884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
 886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
 1243              		.loc 1 886 0 is_stmt 1 discriminator 2
 1244 001c 0024     		movs	r4, #0
 1245 001e 1694     		str	r4, [sp, #88]
 887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmphadcSlave);
 1246              		.loc 1 887 0 discriminator 2
 1247 0020 1794     		str	r4, [sp, #92]
 888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
 890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 1248              		.loc 1 890 0 discriminator 2
 1249 0022 0468     		ldr	r4, [r0]
 1250 0024 2C4B     		ldr	r3, .L131
 1251 0026 9C42     		cmp	r4, r3
 1252 0028 0FD0     		beq	.L127
 1253 002a 0023     		movs	r3, #0
 1254 002c 0193     		str	r3, [sp, #4]
 1255              	.L120:
 891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 1256              		.loc 1 892 0
 1257 002e 019B     		ldr	r3, [sp, #4]
 1258 0030 7BB1     		cbz	r3, .L128
 1259 0032 1646     		mov	r6, r2
 1260 0034 0D46     		mov	r5, r1
 1261 0036 0446     		mov	r4, r0
 893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripherals: master and slave (in case if not already   */
 904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* enabled previously)                                                    */
 905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 1262              		.loc 1 905 0
 1263 0038 FFF7FEFF 		bl	ADC_Enable
 1264              	.LVL109:
 906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1265              		.loc 1 906 0
 1266 003c 0346     		mov	r3, r0
 1267 003e 88B1     		cbz	r0, .L129
 1268              	.LVL110:
 1269              	.L122:
 907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(&tmphadcSlave);
 909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Start multimode conversion of ADCs pair */
 912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1270              		.loc 1 912 0
 1271 0040 ABB1     		cbz	r3, .L130
 913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                         (HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_
 917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
 918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set ADC error code to none */
 920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA transfer complete callback */
 923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA half transfer complete callback */
 926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA error callback */
 929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
 930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Pointer to the common control register  */
 932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
 935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* start (in case of SW start):                                           */
 936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
 938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */
 947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Start the DMA channel */
 950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&tmpADC_Common->CDR, (uint32_t)
 951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                    */
 953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Start ADC group regular conversion */
 957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
 958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
 960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1272              		.loc 1 962 0
 1273 0042 0022     		movs	r2, #0
 1274 0044 84F85020 		strb	r2, [r4, #80]
 1275 0048 40E0     		b	.L118
 1276              	.LVL111:
 1277              	.L127:
 890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1278              		.loc 1 890 0 discriminator 1
 1279 004a 03F58073 		add	r3, r3, #256
 1280 004e 0193     		str	r3, [sp, #4]
 1281 0050 EDE7     		b	.L120
 1282              	.L128:
 895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1283              		.loc 1 895 0
 1284 0052 436D     		ldr	r3, [r0, #84]
 1285 0054 43F02003 		orr	r3, r3, #32
 1286 0058 4365     		str	r3, [r0, #84]
 898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1287              		.loc 1 898 0
 1288 005a 0023     		movs	r3, #0
 1289 005c 80F85030 		strb	r3, [r0, #80]
 900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 1290              		.loc 1 900 0
 1291 0060 0123     		movs	r3, #1
 1292 0062 33E0     		b	.L118
 1293              	.LVL112:
 1294              	.L129:
 908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 1295              		.loc 1 908 0
 1296 0064 01A8     		add	r0, sp, #4
 1297              	.LVL113:
 1298 0066 FFF7FEFF 		bl	ADC_Enable
 1299              	.LVL114:
 1300 006a 0346     		mov	r3, r0
 1301              	.LVL115:
 1302 006c E8E7     		b	.L122
 1303              	.L130:
 915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                         (HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_
 1304              		.loc 1 915 0
 1305 006e 636D     		ldr	r3, [r4, #84]
 1306              	.LVL116:
 1307 0070 23F47063 		bic	r3, r3, #3840
 1308 0074 23F00103 		bic	r3, r3, #1
 1309 0078 43F48073 		orr	r3, r3, #256
 1310 007c 6365     		str	r3, [r4, #84]
 920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1311              		.loc 1 920 0
 1312 007e 0023     		movs	r3, #0
 1313 0080 A365     		str	r3, [r4, #88]
 923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1314              		.loc 1 923 0
 1315 0082 E26C     		ldr	r2, [r4, #76]
 1316 0084 1549     		ldr	r1, .L131+4
 1317 0086 D162     		str	r1, [r2, #44]
 926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1318              		.loc 1 926 0
 1319 0088 E26C     		ldr	r2, [r4, #76]
 1320 008a 1549     		ldr	r1, .L131+8
 1321 008c 1163     		str	r1, [r2, #48]
 929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1322              		.loc 1 929 0
 1323 008e E26C     		ldr	r2, [r4, #76]
 1324 0090 1449     		ldr	r1, .L131+12
 1325 0092 5163     		str	r1, [r2, #52]
 1326              	.LVL117:
 939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1327              		.loc 1 939 0
 1328 0094 2268     		ldr	r2, [r4]
 1329 0096 1C21     		movs	r1, #28
 1330 0098 1160     		str	r1, [r2]
 944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1331              		.loc 1 944 0
 1332 009a 84F85030 		strb	r3, [r4, #80]
 947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1333              		.loc 1 947 0
 1334 009e 2268     		ldr	r2, [r4]
 1335 00a0 5368     		ldr	r3, [r2, #4]
 1336 00a2 43F01003 		orr	r3, r3, #16
 1337 00a6 5360     		str	r3, [r2, #4]
 950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1338              		.loc 1 950 0
 1339 00a8 3346     		mov	r3, r6
 1340 00aa 2A46     		mov	r2, r5
 1341 00ac 0E49     		ldr	r1, .L131+16
 1342 00ae E06C     		ldr	r0, [r4, #76]
 1343 00b0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1344              	.LVL118:
 1345 00b4 0346     		mov	r3, r0
 1346              	.LVL119:
 957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 1347              		.loc 1 957 0
 1348 00b6 2168     		ldr	r1, [r4]
 1349              	.LVL120:
 1350              	.LBB336:
 1351              	.LBB337:
6137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1352              		.loc 2 6137 0
 1353 00b8 8A68     		ldr	r2, [r1, #8]
 1354 00ba 22F00042 		bic	r2, r2, #-2147483648
 1355 00be 22F03F02 		bic	r2, r2, #63
 1356 00c2 42F00402 		orr	r2, r2, #4
 1357 00c6 8A60     		str	r2, [r1, #8]
 1358 00c8 00E0     		b	.L118
 1359              	.LVL121:
 1360              	.L124:
 1361              	.LBE337:
 1362              	.LBE336:
 878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 1363              		.loc 1 878 0
 1364 00ca 0223     		movs	r3, #2
 1365              	.LVL122:
 1366              	.L118:
 963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1367              		.loc 1 968 0
 1368 00cc 1846     		mov	r0, r3
 1369 00ce 1AB0     		add	sp, sp, #104
 1370              		.cfi_remember_state
 1371              		.cfi_def_cfa_offset 16
 1372              		@ sp needed
 1373 00d0 70BD     		pop	{r4, r5, r6, pc}
 1374              	.LVL123:
 1375              	.L125:
 1376              		.cfi_restore_state
 883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1377              		.loc 1 883 0
 1378 00d2 0223     		movs	r3, #2
 1379 00d4 FAE7     		b	.L118
 1380              	.L132:
 1381 00d6 00BF     		.align	2
 1382              	.L131:
 1383 00d8 00000450 		.word	1342439424
 1384 00dc 00000000 		.word	ADC_DMAConvCplt
 1385 00e0 00000000 		.word	ADC_DMAHalfConvCplt
 1386 00e4 00000000 		.word	ADC_DMAError
 1387 00e8 0C030450 		.word	1342440204
 1388              		.cfi_endproc
 1389              	.LFE325:
 1391              		.section	.text.HAL_ADCEx_MultiModeStop_DMA,"ax",%progbits
 1392              		.align	1
 1393              		.global	HAL_ADCEx_MultiModeStop_DMA
 1394              		.syntax unified
 1395              		.thumb
 1396              		.thumb_func
 1397              		.fpu fpv4-sp-d16
 1399              	HAL_ADCEx_MultiModeStop_DMA:
 1400              	.LFB326:
 969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
 971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop multimode ADC conversion, disable ADC DMA transfer, disable ADC peripheral.
 972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. MultiMode DMA bits
 973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
 974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         Multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
 975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
 976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
 977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
 978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA() must be called after this function with handle of
 979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
 980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
 981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
 983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef *hadc)
 984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1401              		.loc 1 984 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 104
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              	.LVL124:
 1406 0000 70B5     		push	{r4, r5, r6, lr}
 1407              		.cfi_def_cfa_offset 16
 1408              		.cfi_offset 4, -16
 1409              		.cfi_offset 5, -12
 1410              		.cfi_offset 6, -8
 1411              		.cfi_offset 14, -4
 1412 0002 9AB0     		sub	sp, sp, #104
 1413              		.cfi_def_cfa_offset 120
 985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
 987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
 989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmphadcSlave_disable_status;
 990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1414              		.loc 1 995 0
 1415 0004 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1416 0008 012B     		cmp	r3, #1
 1417 000a 00F08880 		beq	.L151
 1418 000e 0446     		mov	r4, r0
 1419              		.loc 1 995 0 is_stmt 0 discriminator 2
 1420 0010 0123     		movs	r3, #1
 1421 0012 80F85030 		strb	r3, [r0, #80]
 996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular and injected groups */
 999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 1422              		.loc 1 999 0 is_stmt 1 discriminator 2
 1423 0016 0321     		movs	r1, #3
 1424 0018 FFF7FEFF 		bl	ADC_ConversionStop
 1425              	.LVL125:
1000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1426              		.loc 1 1002 0 discriminator 2
 1427 001c 0546     		mov	r5, r0
 1428 001e 0028     		cmp	r0, #0
 1429 0020 77D1     		bne	.L135
1003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
1005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
 1430              		.loc 1 1005 0
 1431 0022 0023     		movs	r3, #0
 1432 0024 1693     		str	r3, [sp, #88]
1006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmphadcSlave);
 1433              		.loc 1 1006 0
 1434 0026 1793     		str	r3, [sp, #92]
1007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 1435              		.loc 1 1009 0
 1436 0028 2268     		ldr	r2, [r4]
 1437 002a 3E4B     		ldr	r3, .L160
 1438 002c 9A42     		cmp	r2, r3
 1439 002e 0DD0     		beq	.L155
 1440              		.loc 1 1009 0 is_stmt 0 discriminator 2
 1441 0030 0023     		movs	r3, #0
 1442 0032 0193     		str	r3, [sp, #4]
 1443              	.L137:
1010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 1444              		.loc 1 1011 0 is_stmt 1
 1445 0034 019B     		ldr	r3, [sp, #4]
 1446 0036 6BB1     		cbz	r3, .L156
1012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
1017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
1020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 1447              		.loc 1 1026 0
 1448 0038 FFF7FEFF 		bl	HAL_GetTick
 1449              	.LVL126:
 1450 003c 0546     		mov	r5, r0
 1451              	.LVL127:
1027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 1452              		.loc 1 1028 0
 1453 003e 019B     		ldr	r3, [sp, #4]
 1454              	.LVL128:
 1455              	.LBB338:
 1456              	.LBB339:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1457              		.loc 2 6170 0
 1458 0040 9B68     		ldr	r3, [r3, #8]
 1459              	.LVL129:
 1460 0042 13F0040F 		tst	r3, #4
 1461 0046 36D1     		bne	.L139
 1462 0048 0022     		movs	r2, #0
 1463 004a 19E0     		b	.L146
 1464              	.LVL130:
 1465              	.L155:
 1466              	.LBE339:
 1467              	.LBE338:
1009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1468              		.loc 1 1009 0 discriminator 1
 1469 004c 03F58073 		add	r3, r3, #256
 1470 0050 0193     		str	r3, [sp, #4]
 1471 0052 EFE7     		b	.L137
 1472              	.L156:
1014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1473              		.loc 1 1014 0
 1474 0054 636D     		ldr	r3, [r4, #84]
 1475 0056 43F02003 		orr	r3, r3, #32
 1476 005a 6365     		str	r3, [r4, #84]
1017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1477              		.loc 1 1017 0
 1478 005c 0023     		movs	r3, #0
 1479 005e 84F85030 		strb	r3, [r4, #80]
1019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 1480              		.loc 1 1019 0
 1481 0062 0125     		movs	r5, #1
 1482 0064 58E0     		b	.L134
 1483              	.LVL131:
 1484              	.L158:
 1485              	.LBB341:
 1486              	.LBB342:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1487              		.loc 2 6170 0
 1488 0066 0122     		movs	r2, #1
 1489              	.L142:
 1490              	.LVL132:
 1491              	.LBE342:
 1492              	.LBE341:
1029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           )
1032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance
1037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 1493              		.loc 1 1037 0
 1494 0068 2368     		ldr	r3, [r4]
 1495              	.LVL133:
 1496              	.LBB344:
 1497              	.LBB345:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1498              		.loc 2 6170 0
 1499 006a 9B68     		ldr	r3, [r3, #8]
 1500              	.LVL134:
 1501 006c 13F0040F 		tst	r3, #4
 1502 0070 18D1     		bne	.L143
 1503              	.LVL135:
 1504              	.LBE345:
 1505              	.LBE344:
1038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****             || (tmphadcSlave_conversion_on_going == 1UL)
 1506              		.loc 1 1038 0
 1507 0072 BAB9     		cbnz	r2, .L143
 1508              	.L141:
1039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****            )
1040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
1041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
1045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           return HAL_ERROR;
1048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         }
1049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 1509              		.loc 1 1051 0
 1510 0074 019B     		ldr	r3, [sp, #4]
 1511              	.LVL136:
 1512              	.LBB346:
 1513              	.LBB347:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1514              		.loc 2 6170 0
 1515 0076 9B68     		ldr	r3, [r3, #8]
 1516              	.LVL137:
 1517 0078 13F0040F 		tst	r3, #4
 1518 007c 1DD1     		bne	.L144
 1519 007e 0022     		movs	r2, #0
 1520              	.LVL138:
 1521              	.L146:
 1522              	.LBE347:
 1523              	.LBE346:
1029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 1524              		.loc 1 1029 0
 1525 0080 2368     		ldr	r3, [r4]
 1526              	.LVL139:
 1527              	.LBB349:
 1528              	.LBB350:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1529              		.loc 2 6170 0
 1530 0082 9B68     		ldr	r3, [r3, #8]
 1531              	.LVL140:
 1532 0084 13F0040F 		tst	r3, #4
 1533 0088 00D1     		bne	.L147
 1534              	.LVL141:
 1535              	.LBE350:
 1536              	.LBE349:
1030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           )
 1537              		.loc 1 1030 0
 1538 008a C2B1     		cbz	r2, .L157
 1539              	.L147:
1033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 1540              		.loc 1 1033 0
 1541 008c FFF7FEFF 		bl	HAL_GetTick
 1542              	.LVL142:
 1543 0090 401B     		subs	r0, r0, r5
 1544 0092 0528     		cmp	r0, #5
 1545 0094 EED9     		bls	.L141
1036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 1546              		.loc 1 1036 0
 1547 0096 019B     		ldr	r3, [sp, #4]
 1548              	.LVL143:
 1549              	.LBB351:
 1550              	.LBB343:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1551              		.loc 2 6170 0
 1552 0098 9B68     		ldr	r3, [r3, #8]
 1553              	.LVL144:
 1554 009a 13F0040F 		tst	r3, #4
 1555 009e E2D1     		bne	.L158
 1556 00a0 0022     		movs	r2, #0
 1557 00a2 E1E7     		b	.L142
 1558              	.LVL145:
 1559              	.L143:
 1560              	.LBE343:
 1561              	.LBE351:
1042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1562              		.loc 1 1042 0
 1563 00a4 636D     		ldr	r3, [r4, #84]
 1564 00a6 43F01003 		orr	r3, r3, #16
 1565 00aa 6365     		str	r3, [r4, #84]
1045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1566              		.loc 1 1045 0
 1567 00ac 0023     		movs	r3, #0
 1568 00ae 84F85030 		strb	r3, [r4, #80]
1047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         }
 1569              		.loc 1 1047 0
 1570 00b2 0125     		movs	r5, #1
 1571              	.LVL146:
 1572 00b4 30E0     		b	.L134
 1573              	.LVL147:
 1574              	.L139:
 1575              	.LBB352:
 1576              	.LBB340:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1577              		.loc 2 6170 0
 1578 00b6 0122     		movs	r2, #1
 1579 00b8 E2E7     		b	.L146
 1580              	.LVL148:
 1581              	.L144:
 1582              	.LBE340:
 1583              	.LBE352:
 1584              	.LBB353:
 1585              	.LBB348:
 1586 00ba 0122     		movs	r2, #1
 1587 00bc E0E7     		b	.L146
 1588              	.LVL149:
 1589              	.L157:
 1590              	.LBE348:
 1591              	.LBE353:
1052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*       with HAL_ADC_Stop_DMA() API.                                     */
1058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 1592              		.loc 1 1058 0
 1593 00be E06C     		ldr	r0, [r4, #76]
 1594 00c0 FFF7FEFF 		bl	HAL_DMA_Abort
 1595              	.LVL150:
 1596 00c4 0546     		mov	r5, r0
 1597              	.LVL151:
1059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_ERROR)
 1598              		.loc 1 1061 0
 1599 00c6 0128     		cmp	r0, #1
 1600 00c8 10D0     		beq	.L159
 1601              	.L148:
1062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 1602              		.loc 1 1068 0
 1603 00ca 2268     		ldr	r2, [r4]
 1604 00cc 5368     		ldr	r3, [r2, #4]
 1605 00ce 23F01003 		bic	r3, r3, #16
 1606 00d2 5360     		str	r3, [r2, #4]
1069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
1071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1607              		.loc 1 1073 0
 1608 00d4 7DB9     		cbnz	r5, .L149
1074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmphadcSlave_disable_status = ADC_Disable(&tmphadcSlave);
 1609              		.loc 1 1075 0
 1610 00d6 01A8     		add	r0, sp, #4
 1611              	.LVL152:
 1612 00d8 FFF7FEFF 		bl	ADC_Disable
 1613              	.LVL153:
 1614 00dc 0646     		mov	r6, r0
 1615              	.LVL154:
1076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) == HAL_OK)           &&
 1616              		.loc 1 1076 0
 1617 00de 2046     		mov	r0, r4
 1618 00e0 FFF7FEFF 		bl	ADC_Disable
 1619              	.LVL155:
 1620 00e4 68B9     		cbnz	r0, .L150
 1621              		.loc 1 1076 0 is_stmt 0 discriminator 1
 1622 00e6 66B9     		cbnz	r6, .L150
1077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           (tmphadcSlave_disable_status == HAL_OK))
1078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
 1623              		.loc 1 1079 0 is_stmt 1
 1624 00e8 3546     		mov	r5, r6
 1625 00ea 0AE0     		b	.L150
 1626              	.LVL156:
 1627              	.L159:
1064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 1628              		.loc 1 1064 0
 1629 00ec 636D     		ldr	r3, [r4, #84]
 1630 00ee 43F04003 		orr	r3, r3, #64
 1631 00f2 6365     		str	r3, [r4, #84]
 1632 00f4 E9E7     		b	.L148
 1633              	.L149:
1080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
1083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC master and slave without status assert */
1085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (void) ADC_Disable(hadc);
 1634              		.loc 1 1085 0
 1635 00f6 2046     		mov	r0, r4
 1636              	.LVL157:
 1637 00f8 FFF7FEFF 		bl	ADC_Disable
 1638              	.LVL158:
1086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (void) ADC_Disable(&tmphadcSlave);
 1639              		.loc 1 1086 0
 1640 00fc 01A8     		add	r0, sp, #4
 1641 00fe FFF7FEFF 		bl	ADC_Disable
 1642              	.LVL159:
 1643              	.L150:
1087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state (ADC master) */
1090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 1644              		.loc 1 1090 0
 1645 0102 636D     		ldr	r3, [r4, #84]
 1646 0104 23F48853 		bic	r3, r3, #4352
 1647 0108 23F00103 		bic	r3, r3, #1
 1648 010c 43F00103 		orr	r3, r3, #1
 1649 0110 6365     		str	r3, [r4, #84]
 1650              	.LVL160:
 1651              	.L135:
1091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
1093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1652              		.loc 1 1096 0
 1653 0112 0023     		movs	r3, #0
 1654 0114 84F85030 		strb	r3, [r4, #80]
 1655              	.LVL161:
 1656              	.L134:
1097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
1100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1657              		.loc 1 1100 0
 1658 0118 2846     		mov	r0, r5
 1659 011a 1AB0     		add	sp, sp, #104
 1660              		.cfi_remember_state
 1661              		.cfi_def_cfa_offset 16
 1662              		@ sp needed
 1663 011c 70BD     		pop	{r4, r5, r6, pc}
 1664              	.LVL162:
 1665              	.L151:
 1666              		.cfi_restore_state
 995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1667              		.loc 1 995 0
 1668 011e 0225     		movs	r5, #2
 1669 0120 FAE7     		b	.L134
 1670              	.L161:
 1671 0122 00BF     		.align	2
 1672              	.L160:
 1673 0124 00000450 		.word	1342439424
 1674              		.cfi_endproc
 1675              	.LFE326:
 1677              		.section	.text.HAL_ADCEx_MultiModeGetValue,"ax",%progbits
 1678              		.align	1
 1679              		.global	HAL_ADCEx_MultiModeGetValue
 1680              		.syntax unified
 1681              		.thumb
 1682              		.thumb_func
 1683              		.fpu fpv4-sp-d16
 1685              	HAL_ADCEx_MultiModeGetValue:
 1686              	.LFB327:
1101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Return the last ADC Master and Slave regular conversions results when in multimode conf
1104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC Master (handle of ADC Slave must not be used)
1105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval The converted data values.
1106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef *hadc)
1108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1687              		.loc 1 1108 0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 0
 1690              		@ frame_needed = 0, uses_anonymous_args = 0
 1691              		@ link register save eliminated.
 1692              	.LVL163:
1109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   const ADC_Common_TypeDef *tmpADC_Common;
1110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
1113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* and possible no usage in __LL_ADC_COMMON_INSTANCE() below               */
1116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Pointer to the common control register  */
1119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
1120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
1122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmpADC_Common->CDR;
 1693              		.loc 1 1122 0
 1694 0000 014B     		ldr	r3, .L163
 1695 0002 D868     		ldr	r0, [r3, #12]
 1696              	.LVL164:
1123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1697              		.loc 1 1123 0
 1698 0004 7047     		bx	lr
 1699              	.L164:
 1700 0006 00BF     		.align	2
 1701              	.L163:
 1702 0008 00030450 		.word	1342440192
 1703              		.cfi_endproc
 1704              	.LFE327:
 1706              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 1707              		.align	1
 1708              		.global	HAL_ADCEx_InjectedGetValue
 1709              		.syntax unified
 1710              		.thumb
 1711              		.thumb_func
 1712              		.fpu fpv4-sp-d16
 1714              	HAL_ADCEx_InjectedGetValue:
 1715              	.LFB328:
1124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
1128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
1129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
1130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS
1131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
1132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
1133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
1134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *            to flag JEOC.
1135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
1136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
1137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
1138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
1139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
1140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
1141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         To clear this flag, either use function:
1142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion()
1144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
1145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param InjectedRank the converted ADC injected rank.
1147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_1 ADC group injected rank 1
1149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_2 ADC group injected rank 2
1150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_3 ADC group injected rank 3
1151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_4 ADC group injected rank 4
1152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
1153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef *hadc, uint32_t InjectedRank)
1155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1716              		.loc 1 1155 0
 1717              		.cfi_startproc
 1718              		@ args = 0, pretend = 0, frame = 0
 1719              		@ frame_needed = 0, uses_anonymous_args = 0
 1720              		@ link register save eliminated.
 1721              	.LVL165:
1156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_jdr;
1157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
1161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Get ADC converted value */
1163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   switch (InjectedRank)
 1722              		.loc 1 1163 0
 1723 0000 B1F5057F 		cmp	r1, #532
 1724 0004 0ED0     		beq	.L167
 1725 0006 40F21A33 		movw	r3, #794
 1726 000a 9942     		cmp	r1, r3
 1727 000c 06D0     		beq	.L168
 1728 000e B1F5877F 		cmp	r1, #270
 1729 0012 0BD0     		beq	.L172
1164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4:
1166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
1167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       break;
1168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
1169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
1170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       break;
1171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
1172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
1173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       break;
1174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
1175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     default:
1176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 1730              		.loc 1 1176 0
 1731 0014 0368     		ldr	r3, [r0]
 1732 0016 D3F88000 		ldr	r0, [r3, #128]
 1733              	.LVL166:
1177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       break;
1178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return ADC converted value */
1181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_jdr;
1182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1734              		.loc 1 1182 0
 1735 001a 7047     		bx	lr
 1736              	.LVL167:
 1737              	.L168:
1166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       break;
 1738              		.loc 1 1166 0
 1739 001c 0368     		ldr	r3, [r0]
 1740 001e D3F88C00 		ldr	r0, [r3, #140]
 1741              	.LVL168:
1167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
 1742              		.loc 1 1167 0
 1743 0022 7047     		bx	lr
 1744              	.LVL169:
 1745              	.L167:
1169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       break;
 1746              		.loc 1 1169 0
 1747 0024 0368     		ldr	r3, [r0]
 1748 0026 D3F88800 		ldr	r0, [r3, #136]
 1749              	.LVL170:
1170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
 1750              		.loc 1 1170 0
 1751 002a 7047     		bx	lr
 1752              	.LVL171:
 1753              	.L172:
1172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       break;
 1754              		.loc 1 1172 0
 1755 002c 0368     		ldr	r3, [r0]
 1756 002e D3F88400 		ldr	r0, [r3, #132]
 1757              	.LVL172:
1173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 1758              		.loc 1 1173 0
 1759 0032 7047     		bx	lr
 1760              		.cfi_endproc
 1761              	.LFE328:
 1763              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 1764              		.align	1
 1765              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 1766              		.syntax unified
 1767              		.thumb
 1768              		.thumb_func
 1769              		.fpu fpv4-sp-d16
 1771              	HAL_ADCEx_InjectedConvCpltCallback:
 1772              	.LFB329:
1183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non-blocking mode.
1186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval None
1188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
1190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1773              		.loc 1 1190 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 0
 1776              		@ frame_needed = 0, uses_anonymous_args = 0
 1777              		@ link register save eliminated.
 1778              	.LVL173:
1191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedConvCpltCallback must be implemented in the user file.
1196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1779              		.loc 1 1197 0
 1780 0000 7047     		bx	lr
 1781              		.cfi_endproc
 1782              	.LFE329:
 1784              		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 1785              		.align	1
 1786              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
 1787              		.syntax unified
 1788              		.thumb
 1789              		.thumb_func
 1790              		.fpu fpv4-sp-d16
 1792              	HAL_ADCEx_InjectedQueueOverflowCallback:
 1793              	.LFB330:
1198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Injected context queue overflow callback.
1201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
1202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
1203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
1204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****             contexts).
1205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval None
1207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef *hadc)
1209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1794              		.loc 1 1209 0
 1795              		.cfi_startproc
 1796              		@ args = 0, pretend = 0, frame = 0
 1797              		@ frame_needed = 0, uses_anonymous_args = 0
 1798              		@ link register save eliminated.
 1799              	.LVL174:
1210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented in the user file.
1215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1800              		.loc 1 1216 0
 1801 0000 7047     		bx	lr
 1802              		.cfi_endproc
 1803              	.LFE330:
 1805              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 1806              		.align	1
 1807              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 1808              		.syntax unified
 1809              		.thumb
 1810              		.thumb_func
 1811              		.fpu fpv4-sp-d16
 1813              	HAL_ADCEx_LevelOutOfWindow2Callback:
 1814              	.LFB331:
1217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
1220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval None
1222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef *hadc)
1224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1815              		.loc 1 1224 0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 0
 1818              		@ frame_needed = 0, uses_anonymous_args = 0
 1819              		@ link register save eliminated.
 1820              	.LVL175:
1225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
1230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1821              		.loc 1 1231 0
 1822 0000 7047     		bx	lr
 1823              		.cfi_endproc
 1824              	.LFE331:
 1826              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 1827              		.align	1
 1828              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 1829              		.syntax unified
 1830              		.thumb
 1831              		.thumb_func
 1832              		.fpu fpv4-sp-d16
 1834              	HAL_ADCEx_LevelOutOfWindow3Callback:
 1835              	.LFB332:
1232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
1235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval None
1237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef *hadc)
1239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1836              		.loc 1 1239 0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 0
 1839              		@ frame_needed = 0, uses_anonymous_args = 0
 1840              		@ link register save eliminated.
 1841              	.LVL176:
1240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
1245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1842              		.loc 1 1246 0
 1843 0000 7047     		bx	lr
 1844              		.cfi_endproc
 1845              	.LFE332:
 1847              		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 1848              		.align	1
 1849              		.weak	HAL_ADCEx_EndOfSamplingCallback
 1850              		.syntax unified
 1851              		.thumb
 1852              		.thumb_func
 1853              		.fpu fpv4-sp-d16
 1855              	HAL_ADCEx_EndOfSamplingCallback:
 1856              	.LFB333:
1247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
1251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval None
1253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef *hadc)
1255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1857              		.loc 1 1255 0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 0
 1860              		@ frame_needed = 0, uses_anonymous_args = 0
 1861              		@ link register save eliminated.
 1862              	.LVL177:
1256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
1261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1863              		.loc 1 1262 0
 1864 0000 7047     		bx	lr
 1865              		.cfi_endproc
 1866              	.LFE333:
 1868              		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 1869              		.align	1
 1870              		.global	HAL_ADCEx_RegularStop
 1871              		.syntax unified
 1872              		.thumb
 1873              		.thumb_func
 1874              		.fpu fpv4-sp-d16
 1876              	HAL_ADCEx_RegularStop:
 1877              	.LFB334:
1263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral if no
1267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         conversion is on going on injected group.
1268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef *hadc)
1272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1878              		.loc 1 1272 0
 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 0
 1881              		@ frame_needed = 0, uses_anonymous_args = 0
 1882              	.LVL178:
1273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
1274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1883              		.loc 1 1279 0
 1884 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1885 0004 012B     		cmp	r3, #1
 1886 0006 29D0     		beq	.L182
1272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1887              		.loc 1 1272 0 discriminator 2
 1888 0008 10B5     		push	{r4, lr}
 1889              		.cfi_def_cfa_offset 8
 1890              		.cfi_offset 4, -8
 1891              		.cfi_offset 14, -4
 1892 000a 0446     		mov	r4, r0
 1893              		.loc 1 1279 0 discriminator 2
 1894 000c 0121     		movs	r1, #1
 1895 000e 80F85010 		strb	r1, [r0, #80]
1280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1896              		.loc 1 1282 0 discriminator 2
 1897 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1898              	.LVL179:
1283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if regular conversions are effectively stopped
1285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****      and if no injected conversions are on-going */
1286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1899              		.loc 1 1286 0 discriminator 2
 1900 0016 0346     		mov	r3, r0
 1901 0018 60B9     		cbnz	r0, .L180
1287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1902              		.loc 1 1289 0
 1903 001a 626D     		ldr	r2, [r4, #84]
 1904 001c 22F48072 		bic	r2, r2, #256
 1905 0020 6265     		str	r2, [r4, #84]
1290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1906              		.loc 1 1291 0
 1907 0022 2268     		ldr	r2, [r4]
 1908              	.LVL180:
 1909              	.LBB354:
 1910              	.LBB355:
 1911              		.loc 2 6353 0
 1912 0024 9268     		ldr	r2, [r2, #8]
 1913              	.LVL181:
 1914 0026 12F0080F 		tst	r2, #8
 1915 002a 08D0     		beq	.L181
 1916              	.LVL182:
 1917              	.LBE355:
 1918              	.LBE354:
1292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
1294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
1306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
1307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
1308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1919              		.loc 1 1309 0
 1920 002c 626D     		ldr	r2, [r4, #84]
 1921 002e 42F48052 		orr	r2, r2, #4096
 1922 0032 6265     		str	r2, [r4, #84]
 1923              	.L180:
 1924              	.LVL183:
1310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1925              		.loc 1 1314 0
 1926 0034 0022     		movs	r2, #0
 1927 0036 84F85020 		strb	r2, [r4, #80]
1315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
1318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 1928              		.loc 1 1318 0
 1929 003a 1846     		mov	r0, r3
 1930 003c 10BD     		pop	{r4, pc}
 1931              	.LVL184:
 1932              	.L181:
1294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1933              		.loc 1 1294 0
 1934 003e 2046     		mov	r0, r4
 1935              	.LVL185:
 1936 0040 FFF7FEFF 		bl	ADC_Disable
 1937              	.LVL186:
1297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 1938              		.loc 1 1297 0
 1939 0044 0346     		mov	r3, r0
 1940 0046 0028     		cmp	r0, #0
 1941 0048 F4D1     		bne	.L180
1300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 1942              		.loc 1 1300 0
 1943 004a 626D     		ldr	r2, [r4, #84]
 1944 004c 22F48052 		bic	r2, r2, #4096
 1945 0050 22F00102 		bic	r2, r2, #1
 1946 0054 42F00102 		orr	r2, r2, #1
 1947 0058 6265     		str	r2, [r4, #84]
 1948 005a EBE7     		b	.L180
 1949              	.LVL187:
 1950              	.L182:
 1951              		.cfi_def_cfa_offset 0
 1952              		.cfi_restore 4
 1953              		.cfi_restore 14
1279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 1954              		.loc 1 1279 0
 1955 005c 0223     		movs	r3, #2
 1956              		.loc 1 1318 0
 1957 005e 1846     		mov	r0, r3
 1958              	.LVL188:
 1959 0060 7047     		bx	lr
 1960              		.cfi_endproc
 1961              	.LFE334:
 1963              		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 1964              		.align	1
 1965              		.global	HAL_ADCEx_RegularStop_IT
 1966              		.syntax unified
 1967              		.thumb
 1968              		.thumb_func
 1969              		.fpu fpv4-sp-d16
 1971              	HAL_ADCEx_RegularStop_IT:
 1972              	.LFB335:
1319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of ADC groups regular and injected,
1323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         disable interrution of end-of-conversion,
1324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         disable ADC peripheral if no conversion is on going
1325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         on injected group.
1326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef *hadc)
1330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 1973              		.loc 1 1330 0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 0
 1976              		@ frame_needed = 0, uses_anonymous_args = 0
 1977              	.LVL189:
1331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
1332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1978              		.loc 1 1337 0
 1979 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1980 0004 012B     		cmp	r3, #1
 1981 0006 2ED0     		beq	.L191
1330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1982              		.loc 1 1330 0 discriminator 2
 1983 0008 10B5     		push	{r4, lr}
 1984              		.cfi_def_cfa_offset 8
 1985              		.cfi_offset 4, -8
 1986              		.cfi_offset 14, -4
 1987 000a 0446     		mov	r4, r0
 1988              		.loc 1 1337 0 discriminator 2
 1989 000c 0121     		movs	r1, #1
 1990 000e 80F85010 		strb	r1, [r0, #80]
1338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1991              		.loc 1 1340 0 discriminator 2
 1992 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1993              	.LVL190:
1341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     and if no injected conversion is on-going */
1344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1994              		.loc 1 1344 0 discriminator 2
 1995 0016 0346     		mov	r3, r0
 1996 0018 88B9     		cbnz	r0, .L189
1345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1997              		.loc 1 1347 0
 1998 001a 626D     		ldr	r2, [r4, #84]
 1999 001c 22F48072 		bic	r2, r2, #256
 2000 0020 6265     		str	r2, [r4, #84]
1348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Disable all regular-related interrupts */
1350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 2001              		.loc 1 1350 0
 2002 0022 2168     		ldr	r1, [r4]
 2003 0024 4A68     		ldr	r2, [r1, #4]
 2004 0026 22F01C02 		bic	r2, r2, #28
 2005 002a 4A60     		str	r2, [r1, #4]
1351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable ADC peripheral if no injected conversions are on-going */
1353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 2006              		.loc 1 1353 0
 2007 002c 2268     		ldr	r2, [r4]
 2008              	.LVL191:
 2009              	.LBB356:
 2010              	.LBB357:
 2011              		.loc 2 6353 0
 2012 002e 9268     		ldr	r2, [r2, #8]
 2013              	.LVL192:
 2014 0030 12F0080F 		tst	r2, #8
 2015 0034 08D0     		beq	.L190
 2016              	.LVL193:
 2017              	.LBE357:
 2018              	.LBE356:
1354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* if no issue reported */
1357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
1366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 2019              		.loc 1 1367 0
 2020 0036 626D     		ldr	r2, [r4, #84]
 2021 0038 42F48052 		orr	r2, r2, #4096
 2022 003c 6265     		str	r2, [r4, #84]
 2023              	.L189:
 2024              	.LVL194:
1368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2025              		.loc 1 1372 0
 2026 003e 0022     		movs	r2, #0
 2027 0040 84F85020 		strb	r2, [r4, #80]
1373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
1376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 2028              		.loc 1 1376 0
 2029 0044 1846     		mov	r0, r3
 2030 0046 10BD     		pop	{r4, pc}
 2031              	.LVL195:
 2032              	.L190:
1355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* if no issue reported */
 2033              		.loc 1 1355 0
 2034 0048 2046     		mov	r0, r4
 2035              	.LVL196:
 2036 004a FFF7FEFF 		bl	ADC_Disable
 2037              	.LVL197:
1357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 2038              		.loc 1 1357 0
 2039 004e 0346     		mov	r3, r0
 2040 0050 0028     		cmp	r0, #0
 2041 0052 F4D1     		bne	.L189
1360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 2042              		.loc 1 1360 0
 2043 0054 626D     		ldr	r2, [r4, #84]
 2044 0056 22F48052 		bic	r2, r2, #4096
 2045 005a 22F00102 		bic	r2, r2, #1
 2046 005e 42F00102 		orr	r2, r2, #1
 2047 0062 6265     		str	r2, [r4, #84]
 2048 0064 EBE7     		b	.L189
 2049              	.LVL198:
 2050              	.L191:
 2051              		.cfi_def_cfa_offset 0
 2052              		.cfi_restore 4
 2053              		.cfi_restore 14
1337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2054              		.loc 1 1337 0
 2055 0066 0223     		movs	r3, #2
 2056              		.loc 1 1376 0
 2057 0068 1846     		mov	r0, r3
 2058              	.LVL199:
 2059 006a 7047     		bx	lr
 2060              		.cfi_endproc
 2061              	.LFE335:
 2063              		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 2064              		.align	1
 2065              		.global	HAL_ADCEx_RegularStop_DMA
 2066              		.syntax unified
 2067              		.thumb
 2068              		.thumb_func
 2069              		.fpu fpv4-sp-d16
 2071              	HAL_ADCEx_RegularStop_DMA:
 2072              	.LFB336:
1377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         ADC peripheral if no conversion is on going
1382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         on injected group.
1383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   HAL_ADCEx_RegularStop_DMA() function is dedicated to single-ADC mode only.
1384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         For multimode (when multimode feature is available),
1385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularMultiModeStop_DMA() API must be used.
1386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef *hadc)
1390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 2073              		.loc 1 1390 0
 2074              		.cfi_startproc
 2075              		@ args = 0, pretend = 0, frame = 0
 2076              		@ frame_needed = 0, uses_anonymous_args = 0
 2077              	.LVL200:
 2078 0000 38B5     		push	{r3, r4, r5, lr}
 2079              		.cfi_def_cfa_offset 16
 2080              		.cfi_offset 3, -16
 2081              		.cfi_offset 4, -12
 2082              		.cfi_offset 5, -8
 2083              		.cfi_offset 14, -4
1391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
1392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2084              		.loc 1 1397 0
 2085 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2086 0006 012B     		cmp	r3, #1
 2087 0008 41D0     		beq	.L203
 2088 000a 0446     		mov	r4, r0
 2089              		.loc 1 1397 0 is_stmt 0 discriminator 2
 2090 000c 0121     		movs	r1, #1
 2091 000e 80F85010 		strb	r1, [r0, #80]
1398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 2092              		.loc 1 1400 0 is_stmt 1 discriminator 2
 2093 0012 FFF7FEFF 		bl	ADC_ConversionStop
 2094              	.LVL201:
1401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****      and if no injected conversion is on-going */
1404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2095              		.loc 1 1404 0 discriminator 2
 2096 0016 0546     		mov	r5, r0
 2097 0018 20B1     		cbz	r0, .L205
 2098              	.LVL202:
 2099              	.L198:
1405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
1410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
1411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
1418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* to keep in memory a potential failing status.                          */
1429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
1430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
1434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       else
1436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         (void)ADC_Disable(hadc);
1438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
1450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
1452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2100              		.loc 1 1456 0
 2101 001a 0023     		movs	r3, #0
 2102 001c 84F85030 		strb	r3, [r4, #80]
 2103              	.LVL203:
 2104              	.L197:
1457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
1460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 2105              		.loc 1 1460 0
 2106 0020 2846     		mov	r0, r5
 2107 0022 38BD     		pop	{r3, r4, r5, pc}
 2108              	.LVL204:
 2109              	.L205:
1407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2110              		.loc 1 1407 0
 2111 0024 636D     		ldr	r3, [r4, #84]
 2112 0026 23F48073 		bic	r3, r3, #256
 2113 002a 6365     		str	r3, [r4, #84]
1410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2114              		.loc 1 1410 0
 2115 002c 2268     		ldr	r2, [r4]
 2116 002e D368     		ldr	r3, [r2, #12]
 2117 0030 23F00103 		bic	r3, r3, #1
 2118 0034 D360     		str	r3, [r2, #12]
1414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2119              		.loc 1 1414 0
 2120 0036 E06C     		ldr	r0, [r4, #76]
 2121              	.LVL205:
 2122 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 2123              	.LVL206:
1417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 2124              		.loc 1 1417 0
 2125 003c 0546     		mov	r5, r0
 2126 003e 18B1     		cbz	r0, .L199
1420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 2127              		.loc 1 1420 0
 2128 0040 636D     		ldr	r3, [r4, #84]
 2129 0042 43F04003 		orr	r3, r3, #64
 2130 0046 6365     		str	r3, [r4, #84]
 2131              	.L199:
1424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2132              		.loc 1 1424 0
 2133 0048 2268     		ldr	r2, [r4]
 2134 004a 5368     		ldr	r3, [r2, #4]
 2135 004c 23F01003 		bic	r3, r3, #16
 2136 0050 5360     		str	r3, [r2, #4]
1429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 2137              		.loc 1 1429 0
 2138 0052 2368     		ldr	r3, [r4]
 2139              	.LVL207:
 2140              	.LBB358:
 2141              	.LBB359:
 2142              		.loc 2 6353 0
 2143 0054 9B68     		ldr	r3, [r3, #8]
 2144              	.LVL208:
 2145 0056 13F0080F 		tst	r3, #8
 2146 005a 04D0     		beq	.L200
 2147              	.LVL209:
 2148              	.LBE359:
 2149              	.LBE358:
1451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 2150              		.loc 1 1451 0
 2151 005c 636D     		ldr	r3, [r4, #84]
 2152 005e 43F48053 		orr	r3, r3, #4096
 2153 0062 6365     		str	r3, [r4, #84]
 2154 0064 D9E7     		b	.L198
 2155              	.LVL210:
 2156              	.L200:
1431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 2157              		.loc 1 1431 0
 2158 0066 75B9     		cbnz	r5, .L201
1433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 2159              		.loc 1 1433 0
 2160 0068 2046     		mov	r0, r4
 2161              	.LVL211:
 2162 006a FFF7FEFF 		bl	ADC_Disable
 2163              	.LVL212:
 2164 006e 0546     		mov	r5, r0
 2165              	.LVL213:
 2166              	.L202:
1441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 2167              		.loc 1 1441 0
 2168 0070 002D     		cmp	r5, #0
 2169 0072 D2D1     		bne	.L198
1444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 2170              		.loc 1 1444 0
 2171 0074 636D     		ldr	r3, [r4, #84]
 2172 0076 23F48053 		bic	r3, r3, #4096
 2173 007a 23F00103 		bic	r3, r3, #1
 2174 007e 43F00103 		orr	r3, r3, #1
 2175 0082 6365     		str	r3, [r4, #84]
 2176 0084 C9E7     		b	.L198
 2177              	.LVL214:
 2178              	.L201:
1437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 2179              		.loc 1 1437 0
 2180 0086 2046     		mov	r0, r4
 2181              	.LVL215:
 2182 0088 FFF7FEFF 		bl	ADC_Disable
 2183              	.LVL216:
 2184 008c F0E7     		b	.L202
 2185              	.LVL217:
 2186              	.L203:
1397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2187              		.loc 1 1397 0
 2188 008e 0225     		movs	r5, #2
 2189 0090 C6E7     		b	.L197
 2190              		.cfi_endproc
 2191              	.LFE336:
 2193              		.section	.text.HAL_ADCEx_RegularMultiModeStop_DMA,"ax",%progbits
 2194              		.align	1
 2195              		.global	HAL_ADCEx_RegularMultiModeStop_DMA
 2196              		.syntax unified
 2197              		.thumb
 2198              		.thumb_func
 2199              		.fpu fpv4-sp-d16
 2201              	HAL_ADCEx_RegularMultiModeStop_DMA:
 2202              	.LFB337:
1461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop DMA-based multimode ADC conversion, disable ADC DMA transfer, disable ADC peripher
1465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. Multimode DMA bits
1466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularStop_DMA() must be called after this function with handle of
1472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
1473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
1474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
1475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularMultiModeStop_DMA(ADC_HandleTypeDef *hadc)
1477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 2203              		.loc 1 1477 0
 2204              		.cfi_startproc
 2205              		@ args = 0, pretend = 0, frame = 104
 2206              		@ frame_needed = 0, uses_anonymous_args = 0
 2207              	.LVL218:
1478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
1479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
1480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
1481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
1482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
1485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2208              		.loc 1 1487 0
 2209 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2210 0004 012B     		cmp	r3, #1
 2211 0006 00F09080 		beq	.L223
1477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2212              		.loc 1 1477 0 discriminator 2
 2213 000a 30B5     		push	{r4, r5, lr}
 2214              		.cfi_def_cfa_offset 12
 2215              		.cfi_offset 4, -12
 2216              		.cfi_offset 5, -8
 2217              		.cfi_offset 14, -4
 2218 000c 9BB0     		sub	sp, sp, #108
 2219              		.cfi_def_cfa_offset 120
 2220 000e 0446     		mov	r4, r0
 2221              		.loc 1 1487 0 discriminator 2
 2222 0010 0121     		movs	r1, #1
 2223 0012 80F85010 		strb	r1, [r0, #80]
1488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular groups */
1491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 2224              		.loc 1 1491 0 discriminator 2
 2225 0016 FFF7FEFF 		bl	ADC_ConversionStop
 2226              	.LVL219:
1492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2227              		.loc 1 1494 0 discriminator 2
 2228 001a 0346     		mov	r3, r0
 2229 001c 0028     		cmp	r0, #0
 2230 001e 6ED1     		bne	.L208
1495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 2231              		.loc 1 1497 0
 2232 0020 636D     		ldr	r3, [r4, #84]
 2233 0022 23F48073 		bic	r3, r3, #256
 2234 0026 6365     		str	r3, [r4, #84]
1498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
1500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
 2235              		.loc 1 1500 0
 2236 0028 0023     		movs	r3, #0
 2237 002a 1693     		str	r3, [sp, #88]
1501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmphadcSlave);
 2238              		.loc 1 1501 0
 2239 002c 1793     		str	r3, [sp, #92]
1502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 2240              		.loc 1 1504 0
 2241 002e 2268     		ldr	r2, [r4]
 2242 0030 3F4B     		ldr	r3, .L234
 2243 0032 9A42     		cmp	r2, r3
 2244 0034 0DD0     		beq	.L229
 2245              		.loc 1 1504 0 is_stmt 0 discriminator 2
 2246 0036 0023     		movs	r3, #0
 2247 0038 0193     		str	r3, [sp, #4]
 2248              	.L210:
1505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 2249              		.loc 1 1506 0 is_stmt 1
 2250 003a 019B     		ldr	r3, [sp, #4]
 2251 003c 6BB1     		cbz	r3, .L230
1507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
1512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
1515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 2252              		.loc 1 1521 0
 2253 003e FFF7FEFF 		bl	HAL_GetTick
 2254              	.LVL220:
 2255 0042 0546     		mov	r5, r0
 2256              	.LVL221:
1522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 2257              		.loc 1 1523 0
 2258 0044 019B     		ldr	r3, [sp, #4]
 2259              	.LVL222:
 2260              	.LBB360:
 2261              	.LBB361:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2262              		.loc 2 6170 0
 2263 0046 9B68     		ldr	r3, [r3, #8]
 2264              	.LVL223:
 2265 0048 13F0040F 		tst	r3, #4
 2266 004c 36D1     		bne	.L212
 2267 004e 0022     		movs	r2, #0
 2268 0050 19E0     		b	.L219
 2269              	.LVL224:
 2270              	.L229:
 2271              	.LBE361:
 2272              	.LBE360:
1504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2273              		.loc 1 1504 0 discriminator 1
 2274 0052 03F58073 		add	r3, r3, #256
 2275 0056 0193     		str	r3, [sp, #4]
 2276 0058 EFE7     		b	.L210
 2277              	.L230:
1509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2278              		.loc 1 1509 0
 2279 005a 636D     		ldr	r3, [r4, #84]
 2280 005c 43F02003 		orr	r3, r3, #32
 2281 0060 6365     		str	r3, [r4, #84]
1512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2282              		.loc 1 1512 0
 2283 0062 0023     		movs	r3, #0
 2284 0064 84F85030 		strb	r3, [r4, #80]
1514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 2285              		.loc 1 1514 0
 2286 0068 0123     		movs	r3, #1
 2287 006a 4BE0     		b	.L207
 2288              	.LVL225:
 2289              	.L232:
 2290              	.LBB363:
 2291              	.LBB364:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2292              		.loc 2 6170 0
 2293 006c 0122     		movs	r2, #1
 2294              	.L215:
 2295              	.LVL226:
 2296              	.LBE364:
 2297              	.LBE363:
1524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           )
1527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance
1532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2298              		.loc 1 1532 0
 2299 006e 2368     		ldr	r3, [r4]
 2300              	.LVL227:
 2301              	.LBB366:
 2302              	.LBB367:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2303              		.loc 2 6170 0
 2304 0070 9B68     		ldr	r3, [r3, #8]
 2305              	.LVL228:
 2306 0072 13F0040F 		tst	r3, #4
 2307 0076 18D1     		bne	.L216
 2308              	.LVL229:
 2309              	.LBE367:
 2310              	.LBE366:
1533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****             || (tmphadcSlave_conversion_on_going == 1UL)
 2311              		.loc 1 1533 0
 2312 0078 BAB9     		cbnz	r2, .L216
 2313              	.L214:
1534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****            )
1535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
1536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
1540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           return HAL_ERROR;
1543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         }
1544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 2314              		.loc 1 1546 0
 2315 007a 019B     		ldr	r3, [sp, #4]
 2316              	.LVL230:
 2317              	.LBB368:
 2318              	.LBB369:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2319              		.loc 2 6170 0
 2320 007c 9B68     		ldr	r3, [r3, #8]
 2321              	.LVL231:
 2322 007e 13F0040F 		tst	r3, #4
 2323 0082 1DD1     		bne	.L217
 2324 0084 0022     		movs	r2, #0
 2325              	.LVL232:
 2326              	.L219:
 2327              	.LBE369:
 2328              	.LBE368:
1524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 2329              		.loc 1 1524 0
 2330 0086 2368     		ldr	r3, [r4]
 2331              	.LVL233:
 2332              	.LBB371:
 2333              	.LBB372:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2334              		.loc 2 6170 0
 2335 0088 9B68     		ldr	r3, [r3, #8]
 2336              	.LVL234:
 2337 008a 13F0040F 		tst	r3, #4
 2338 008e 00D1     		bne	.L220
 2339              	.LVL235:
 2340              	.LBE372:
 2341              	.LBE371:
1525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           )
 2342              		.loc 1 1525 0
 2343 0090 C2B1     		cbz	r2, .L231
 2344              	.L220:
1528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 2345              		.loc 1 1528 0
 2346 0092 FFF7FEFF 		bl	HAL_GetTick
 2347              	.LVL236:
 2348 0096 401B     		subs	r0, r0, r5
 2349 0098 0528     		cmp	r0, #5
 2350 009a EED9     		bls	.L214
1531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2351              		.loc 1 1531 0
 2352 009c 019B     		ldr	r3, [sp, #4]
 2353              	.LVL237:
 2354              	.LBB373:
 2355              	.LBB365:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2356              		.loc 2 6170 0
 2357 009e 9B68     		ldr	r3, [r3, #8]
 2358              	.LVL238:
 2359 00a0 13F0040F 		tst	r3, #4
 2360 00a4 E2D1     		bne	.L232
 2361 00a6 0022     		movs	r2, #0
 2362 00a8 E1E7     		b	.L215
 2363              	.LVL239:
 2364              	.L216:
 2365              	.LBE365:
 2366              	.LBE373:
1537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2367              		.loc 1 1537 0
 2368 00aa 636D     		ldr	r3, [r4, #84]
 2369 00ac 43F01003 		orr	r3, r3, #16
 2370 00b0 6365     		str	r3, [r4, #84]
1540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2371              		.loc 1 1540 0
 2372 00b2 0023     		movs	r3, #0
 2373 00b4 84F85030 		strb	r3, [r4, #80]
1542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         }
 2374              		.loc 1 1542 0
 2375 00b8 0123     		movs	r3, #1
 2376 00ba 23E0     		b	.L207
 2377              	.LVL240:
 2378              	.L212:
 2379              	.LBB374:
 2380              	.LBB362:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2381              		.loc 2 6170 0
 2382 00bc 0122     		movs	r2, #1
 2383 00be E2E7     		b	.L219
 2384              	.LVL241:
 2385              	.L217:
 2386              	.LBE362:
 2387              	.LBE374:
 2388              	.LBB375:
 2389              	.LBB370:
 2390 00c0 0122     		movs	r2, #1
 2391 00c2 E0E7     		b	.L219
 2392              	.LVL242:
 2393              	.L231:
 2394              	.LBE370:
 2395              	.LBE375:
1547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* with HAL_ADCEx_RegularStop_DMA() API.                                  */
1553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 2396              		.loc 1 1553 0
 2397 00c4 E06C     		ldr	r0, [r4, #76]
 2398 00c6 FFF7FEFF 		bl	HAL_DMA_Abort
 2399              	.LVL243:
1554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
 2400              		.loc 1 1556 0
 2401 00ca 0346     		mov	r3, r0
 2402 00cc 18B1     		cbz	r0, .L221
1557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 2403              		.loc 1 1559 0
 2404 00ce 626D     		ldr	r2, [r4, #84]
 2405 00d0 42F04002 		orr	r2, r2, #64
 2406 00d4 6265     		str	r2, [r4, #84]
 2407              	.L221:
1560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2408              		.loc 1 1563 0
 2409 00d6 2168     		ldr	r1, [r4]
 2410 00d8 4A68     		ldr	r2, [r1, #4]
 2411 00da 22F01002 		bic	r2, r2, #16
 2412 00de 4A60     		str	r2, [r1, #4]
1564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave if no injected        */
1566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*   conversion is on-going.                                              */
1567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 2413              		.loc 1 1569 0
 2414 00e0 6BB9     		cbnz	r3, .L208
1570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 2415              		.loc 1 1571 0
 2416 00e2 2268     		ldr	r2, [r4]
 2417              	.LVL244:
 2418              	.LBB376:
 2419              	.LBB377:
 2420              		.loc 2 6353 0
 2421 00e4 9268     		ldr	r2, [r2, #8]
 2422              	.LVL245:
 2423 00e6 12F0080F 		tst	r2, #8
 2424 00ea 0ED0     		beq	.L233
 2425              	.LVL246:
 2426              	.L222:
 2427              	.LBE377:
 2428              	.LBE376:
1572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status =  ADC_Disable(hadc);
1574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
1575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
1576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           if (LL_ADC_INJ_IsConversionOngoing((&tmphadcSlave)->Instance) == 0UL)
1577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           {
1578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****             tmp_hal_status =  ADC_Disable(&tmphadcSlave);
1579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           }
1580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         }
1581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 2429              		.loc 1 1583 0
 2430 00ec 3BB9     		cbnz	r3, .L208
1584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Both Master and Slave ADC's could be disabled. Update Master State */
1586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_INJ_BUSY bit, set HAL_ADC_STATE_READY bit */
1587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY, HAL_ADC_STATE_READY);
 2431              		.loc 1 1587 0
 2432 00ee 626D     		ldr	r2, [r4, #84]
 2433 00f0 22F48052 		bic	r2, r2, #4096
 2434 00f4 22F00102 		bic	r2, r2, #1
 2435 00f8 42F00102 		orr	r2, r2, #1
 2436 00fc 6265     		str	r2, [r4, #84]
 2437              	.LVL247:
 2438              	.L208:
1588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       else
1590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* injected (Master or Slave) conversions are still on-going,
1592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****            no Master State change */
1593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2439              		.loc 1 1598 0
 2440 00fe 0022     		movs	r2, #0
 2441 0100 84F85020 		strb	r2, [r4, #80]
 2442              	.LVL248:
 2443              	.L207:
1599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
1602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 2444              		.loc 1 1602 0
 2445 0104 1846     		mov	r0, r3
 2446 0106 1BB0     		add	sp, sp, #108
 2447              		.cfi_remember_state
 2448              		.cfi_def_cfa_offset 12
 2449              		@ sp needed
 2450 0108 30BD     		pop	{r4, r5, pc}
 2451              	.LVL249:
 2452              	.L233:
 2453              		.cfi_restore_state
1573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
 2454              		.loc 1 1573 0
 2455 010a 2046     		mov	r0, r4
 2456              	.LVL250:
 2457 010c FFF7FEFF 		bl	ADC_Disable
 2458              	.LVL251:
1574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
 2459              		.loc 1 1574 0
 2460 0110 0346     		mov	r3, r0
 2461 0112 0028     		cmp	r0, #0
 2462 0114 EAD1     		bne	.L222
1576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           {
 2463              		.loc 1 1576 0
 2464 0116 019A     		ldr	r2, [sp, #4]
 2465              	.LVL252:
 2466              	.LBB378:
 2467              	.LBB379:
 2468              		.loc 2 6353 0
 2469 0118 9268     		ldr	r2, [r2, #8]
 2470              	.LVL253:
 2471 011a 12F0080F 		tst	r2, #8
 2472 011e E5D1     		bne	.L222
 2473              	.LVL254:
 2474              	.LBE379:
 2475              	.LBE378:
1578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           }
 2476              		.loc 1 1578 0
 2477 0120 01A8     		add	r0, sp, #4
 2478              	.LVL255:
 2479 0122 FFF7FEFF 		bl	ADC_Disable
 2480              	.LVL256:
 2481 0126 0346     		mov	r3, r0
 2482              	.LVL257:
 2483 0128 E0E7     		b	.L222
 2484              	.LVL258:
 2485              	.L223:
 2486              		.cfi_def_cfa_offset 0
 2487              		.cfi_restore 4
 2488              		.cfi_restore 5
 2489              		.cfi_restore 14
1487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2490              		.loc 1 1487 0
 2491 012a 0223     		movs	r3, #2
 2492              		.loc 1 1602 0
 2493 012c 1846     		mov	r0, r3
 2494              	.LVL259:
 2495 012e 7047     		bx	lr
 2496              	.L235:
 2497              		.align	2
 2498              	.L234:
 2499 0130 00000450 		.word	1342439424
 2500              		.cfi_endproc
 2501              	.LFE337:
 2503              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 2504              		.align	1
 2505              		.global	HAL_ADCEx_InjectedConfigChannel
 2506              		.syntax unified
 2507              		.thumb
 2508              		.thumb_func
 2509              		.fpu fpv4-sp-d16
 2511              	HAL_ADCEx_InjectedConfigChannel:
 2512              	.LFB338:
1603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @}
1607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADC Extended Peripheral Control functions
1610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
1611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *
1612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** @verbatim
1613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
1614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
1615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
1616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Configure channels on injected group
1618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Configure multimode when multimode feature is available
1619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Enable or Disable Injected Queue
1620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Disable ADC voltage regulator
1621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (+) Enter ADC deep-power-down mode
1622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** @endverbatim
1624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @{
1625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
1628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Configure a channel to be assigned to ADC group injected.
1629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this
1631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
1632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without resetting the ADC.
1633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state:
1634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         Refer to comments of structure "ADC_InjectionConfTypeDef".
1635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
1636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
1637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         These internal paths can be disabled using function
1638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
1639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use, a context must be fully
1640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         defined before start of injected conversion. All channels are configured
1641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         consecutively for the same ADC instance. Therefore, the number of calls to
1642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedConfigChannel() must be equal to the value of parameter
1643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         InjectedNbrOfConversion for each context.
1644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *  - Example 1: If 1 context is intended to be used (or if there is no use of the
1645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *    Injected Queue Context feature) and if the context contains 3 injected ranks
1646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion = 3), HAL_ADCEx_InjectedConfigChannel() must be
1647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *    called once for each channel (i.e. 3 times) before starting a conversion.
1648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *    This function must not be called to configure a 4th injected channel:
1649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *    it would start a new context into context queue.
1650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts are intended to be used and each of them contains
1651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *    3 injected ranks (InjectedNbrOfConversion = 3),
1652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and
1653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can
1654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *    start once the 1st context is set, that is after the first three
1655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() calls. The 2nd context can be set on the fly.
1656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param sConfigInjected Structure of ADC injected group and ADC channel for
1658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         injected group.
1659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
1660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
1661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef *hadc, ADC_InjectionConfTypeDef
1662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 2513              		.loc 1 1662 0
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 8
 2516              		@ frame_needed = 0, uses_anonymous_args = 0
 2517              		@ link register save eliminated.
 2518              	.LVL260:
 2519 0000 F0B4     		push	{r4, r5, r6, r7}
 2520              		.cfi_def_cfa_offset 16
 2521              		.cfi_offset 4, -16
 2522              		.cfi_offset 5, -12
 2523              		.cfi_offset 6, -8
 2524              		.cfi_offset 7, -4
 2525 0002 82B0     		sub	sp, sp, #8
 2526              		.cfi_def_cfa_offset 24
 2527 0004 0346     		mov	r3, r0
 2528              	.LVL261:
1663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
1665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_internal_channel;
1666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
1667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
1668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 2529              		.loc 1 1668 0
 2530 0006 0022     		movs	r2, #0
 2531 0008 0192     		str	r2, [sp, #4]
 2532              	.LVL262:
1669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_JSQR_ContextQueueBeingBuilt = 0U;
1671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
1675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfigInjected->InjectedSingleDiff));
1676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
1677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->QueueInjectedContext));
1678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
1679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(hadc, sConfigInjected->ExternalTrigInjecConv));
1680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfigInjected->InjectedOffsetNumber));
1681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
1682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjecOversamplingMode));
1683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 2533              		.loc 1 1684 0
 2534 000a 0069     		ldr	r0, [r0, #16]
 2535              	.LVL263:
1685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
1687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
1688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
1689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* if JOVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
1693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****      ignored (considered as reset) */
1694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(!((sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE) && (sConfigInjected->In
1695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* JDISCEN and JAUTO bits can't be set at the same time  */
1697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(!((sConfigInjected->InjectedDiscontinuousConvMode == ENABLE) && (sConfigInjected->Au
1698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*  DISCEN and JAUTO bits can't be set at the same time */
1700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (sConfigInjected->AutoInjectedConv
1701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Verification of channel number */
1703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
1704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfigInjected->InjectedChannel));
1706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
1708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfigInjected->InjectedChannel));
1710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2536              		.loc 1 1713 0
 2537 000c 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 2538 0010 012A     		cmp	r2, #1
 2539 0012 00F0B882 		beq	.L304
 2540              		.loc 1 1713 0 is_stmt 0 discriminator 2
 2541 0016 0122     		movs	r2, #1
 2542 0018 83F85020 		strb	r2, [r3, #80]
1714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
1716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
1717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
1718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*                                                                          */
1719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
1720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
1721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1)                              */
1722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
1723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
1724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1) and can  */
1725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
1726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
1727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
1728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
1729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
1730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
1731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
1732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
1733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
1734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
1735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
 2543              		.loc 1 1736 0 is_stmt 1 discriminator 2
 2544 001c A8B1     		cbz	r0, .L238
1737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 2545              		.loc 1 1737 0 discriminator 1
 2546 001e 8A69     		ldr	r2, [r1, #24]
1736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 2547              		.loc 1 1736 0 discriminator 1
 2548 0020 012A     		cmp	r2, #1
 2549 0022 12D0     		beq	.L238
1738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
1740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
1741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
1742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
1743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
1744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 can be used) */
1745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
1747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* software start.                                                      */
1750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*       software start.                                                */
1753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
1754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
1756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
1757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
1758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                           );
1759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       else
1761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
1763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, tmp_JSQR_ContextQueueBeingBuilt);
1766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
1767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_JSQR_ContextQueueBeingBuilt;
1768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
1772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
1774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* sequencer.                                                             */
1775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*                                                                        */
1776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
1777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
1778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
1779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger.                     */
1780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* if hadc->InjectionConfig.ChannelCount is equal to 0, this is the first */
1782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*   call of the context under setting                                    */
1783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
 2550              		.loc 1 1783 0
 2551 0024 186E     		ldr	r0, [r3, #96]
 2552 0026 0028     		cmp	r0, #0
 2553 0028 40F0A280 		bne	.L305
1784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
1786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*  being built                                                         */
1787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = sConfigInjected->InjectedNbrOfConversion;
 2554              		.loc 1 1787 0
 2555 002c 1A66     		str	r2, [r3, #96]
1788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Handle hadc saves the context under build up over each HAL_ADCEx_InjectedConfigChannel()
1789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****          call, this context will be written in JSQR register at the last call.
1790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****          At this point, the context is merely reset  */
1791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0x00000000U;
 2556              		.loc 1 1791 0
 2557 002e 0022     		movs	r2, #0
 2558 0030 DA65     		str	r2, [r3, #92]
1792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
1794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
1795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
1796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
1797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* software start.                                                      */
1800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*       software start.                                                */
1803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 2559              		.loc 1 1803 0
 2560 0032 0C6A     		ldr	r4, [r1, #32]
 2561 0034 002C     		cmp	r4, #0
 2562 0036 00F09880 		beq	.L244
1804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U)
 2563              		.loc 1 1805 0
 2564 003a 8A69     		ldr	r2, [r1, #24]
 2565 003c 013A     		subs	r2, r2, #1
1806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 2566              		.loc 1 1806 0
 2567 003e 04F03C04 		and	r4, r4, #60
 2568 0042 2243     		orrs	r2, r2, r4
1807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 2569              		.loc 1 1807 0
 2570 0044 4C6A     		ldr	r4, [r1, #36]
1805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 2571              		.loc 1 1805 0
 2572 0046 1443     		orrs	r4, r4, r2
 2573              	.LVL264:
 2574 0048 93E0     		b	.L243
 2575              	.LVL265:
 2576              	.L238:
1746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 2577              		.loc 1 1746 0
 2578 004a 4A68     		ldr	r2, [r1, #4]
 2579 004c 082A     		cmp	r2, #8
 2580 004e 6CD0     		beq	.L322
 2581              	.LVL266:
 2582              	.L240:
1808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                           );
1809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       else
1811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U));
1813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* 2. Continue setting of context under definition with parameter       */
1818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /*    related to each channel: channel rank sequence                    */
1819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Clear the old JSQx bits for the selected rank */
1820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt &= ~ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank);
1821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Set the JSQx bits for the selected rank */
1823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt |= ADC_JSQR_RK(sConfigInjected->InjectedChannel, sConfigInjecte
1824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Decrease channel count  */
1826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     hadc->InjectionConfig.ChannelCount--;
1827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* 3. tmp_JSQR_ContextQueueBeingBuilt is fully built for this HAL_ADCEx_InjectedConfigChannel()
1829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           call, aggregate the setting to those already built during the previous
1830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           HAL_ADCEx_InjectedConfigChannel() calls (for the same context of course)  */
1831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     hadc->InjectionConfig.ContextQueue |= tmp_JSQR_ContextQueueBeingBuilt;
1832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* 4. End of context setting: if this is the last channel set, then write context
1834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         into register JSQR and make it enter into queue                   */
1835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
1836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, hadc->InjectionConfig.ContextQueue);
1838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
1844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
1845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
1846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
1847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
1848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 2583              		.loc 1 1848 0
 2584 0050 1A68     		ldr	r2, [r3]
 2585              	.LVL267:
 2586              	.LBB380:
 2587              	.LBB381:
 2588              		.loc 2 6353 0
 2589 0052 9068     		ldr	r0, [r2, #8]
 2590 0054 10F0080F 		tst	r0, #8
 2591 0058 0DD1     		bne	.L245
 2592              	.LVL268:
 2593              	.LBE381:
 2594              	.LBE380:
1849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
1851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == DISABLE)
 2595              		.loc 1 1851 0
 2596 005a 487F     		ldrb	r0, [r1, #29]	@ zero_extendqisi2
 2597 005c 0028     		cmp	r0, #0
 2598 005e 40F0A780 		bne	.L246
1852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
 2599              		.loc 1 1853 0
 2600 0062 D068     		ldr	r0, [r2, #12]
 2601 0064 20F44010 		bic	r0, r0, #3145728
 2602 0068 8D7F     		ldrb	r5, [r1, #30]	@ zero_extendqisi2
 2603 006a 0C7F     		ldrb	r4, [r1, #28]	@ zero_extendqisi2
 2604 006c 2405     		lsls	r4, r4, #20
 2605 006e 44EA4554 		orr	r4, r4, r5, lsl #21
 2606 0072 2043     		orrs	r0, r0, r4
 2607 0074 D060     		str	r0, [r2, #12]
 2608              	.L245:
1854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext)    
1856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_DISCCONTINUOUS((uint32_t)sConfigInjected->InjectedDiscontinuousCon
1857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is    */
1859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* discarded.                                                             */
1860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
1861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
1863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext));
1865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
1868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
1872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
1873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
1874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
1875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
1876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 2609              		.loc 1 1876 0
 2610 0076 1A68     		ldr	r2, [r3]
 2611              	.LVL269:
 2612              	.LBB382:
 2613              	.LBB383:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2614              		.loc 2 6170 0
 2615 0078 9068     		ldr	r0, [r2, #8]
 2616 007a 10F0040F 		tst	r0, #4
 2617 007e 00F09F80 		beq	.L306
 2618 0082 0120     		movs	r0, #1
 2619              	.L247:
 2620              	.LVL270:
 2621              	.LBE383:
 2622              	.LBE382:
 2623              	.LBB385:
 2624              	.LBB386:
 2625              		.loc 2 6353 0
 2626 0084 9468     		ldr	r4, [r2, #8]
 2627 0086 14F0080F 		tst	r4, #8
 2628 008a 00F09B80 		beq	.L307
 2629 008e 0124     		movs	r4, #1
 2630              	.L248:
 2631              	.LVL271:
 2632              	.LBE386:
 2633              	.LBE385:
1877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
1878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2634              		.loc 1 1879 0
 2635 0090 0028     		cmp	r0, #0
 2636 0092 40F02081 		bne	.L308
1880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2637              		.loc 1 1880 0
 2638 0096 002C     		cmp	r4, #0
 2639 0098 40F05381 		bne	.L309
1881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****      )
1882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
1883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
1884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* software start): no constraint                                         */
1885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if ((sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 2640              		.loc 1 1885 0
 2641 009c 086A     		ldr	r0, [r1, #32]
 2642 009e 18B1     		cbz	r0, .L250
1886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         || (sConfigInjected->ExternalTrigInjecConvEdge == ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 2643              		.loc 1 1886 0
 2644 00a0 486A     		ldr	r0, [r1, #36]
 2645 00a2 0028     		cmp	r0, #0
 2646 00a4 40F09680 		bne	.L251
 2647              	.L250:
1887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
 2648              		.loc 1 1888 0
 2649 00a8 487F     		ldrb	r0, [r1, #29]	@ zero_extendqisi2
 2650 00aa 0128     		cmp	r0, #1
 2651 00ac 00F08C80 		beq	.L323
1889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
1891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       else
1893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 2652              		.loc 1 1894 0
 2653 00b0 D068     		ldr	r0, [r2, #12]
 2654 00b2 20F00070 		bic	r0, r0, #33554432
 2655 00b6 D060     		str	r0, [r2, #12]
1663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2656              		.loc 1 1663 0
 2657 00b8 0020     		movs	r0, #0
 2658              	.LVL272:
 2659              	.L253:
1895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
1898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
1899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
1900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
1902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
1907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       else
1909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
1911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjecOversamplingMode == ENABLE)
 2660              		.loc 1 1914 0
 2661 00ba 91F82820 		ldrb	r2, [r1, #40]	@ zero_extendqisi2
 2662 00be 012A     		cmp	r2, #1
 2663 00c0 00F09680 		beq	.L324
1915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       assert_param(IS_ADC_OVERSAMPLING_RATIO(sConfigInjected->InjecOversampling.Ratio));
1917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(sConfigInjected->InjecOversampling.RightBitShift));
1918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*  JOVSE must be reset in case of triggered regular mode  */
1920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       assert_param(!(READ_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS) == (ADC_CFG
1921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Configuration of Injected Oversampler:                                 */
1923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*  - Oversampling Ratio                                                  */
1924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*  - Right bit shift                                                     */
1925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Enable OverSampling mode */
1927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR2,
1928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
1929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_OVSR  |
1930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_OVSS,
1931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE                                  |
1932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  sConfigInjected->InjecOversampling.Ratio         |
1933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  sConfigInjected->InjecOversampling.RightBitShift
1934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                 );
1935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
1937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Disable Regular OverSampling */
1939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_JOVSE);
 2664              		.loc 1 1939 0
 2665 00c4 1C68     		ldr	r4, [r3]
 2666 00c6 2269     		ldr	r2, [r4, #16]
 2667 00c8 22F00202 		bic	r2, r2, #2
 2668 00cc 2261     		str	r2, [r4, #16]
 2669              	.L256:
1940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_SMPR1_SMPPLUS)
1943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
1944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSamplingTime == ADC_SAMPLETIME_3CYCLES_5)
1945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
1947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, LL_ADC_SAMPLI
1948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set ADC sampling time common configuration */
1950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5);
1951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
1953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
1955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInject
1956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set ADC sampling time common configuration */
1958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
1959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #else
1961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Set sampling time of the selected ADC channel */
1962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInjected
 2670              		.loc 1 1962 0
 2671 00ce 1F68     		ldr	r7, [r3]
 2672 00d0 0E68     		ldr	r6, [r1]
 2673 00d2 8D68     		ldr	r5, [r1, #8]
 2674              	.LVL273:
 2675              	.LBB388:
 2676              	.LBB389:
4720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 2677              		.loc 2 4720 0
 2678 00d4 1437     		adds	r7, r7, #20
 2679              	.LVL274:
 2680 00d6 720E     		lsrs	r2, r6, #25
 2681 00d8 9200     		lsls	r2, r2, #2
 2682 00da 02F00402 		and	r2, r2, #4
 2683              	.LVL275:
4722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2684              		.loc 2 4722 0
 2685 00de BC58     		ldr	r4, [r7, r2]
 2686 00e0 C6F30456 		ubfx	r6, r6, #20, #5
 2687              	.LVL276:
 2688 00e4 4FF0070C 		mov	ip, #7
 2689 00e8 0CFA06FC 		lsl	ip, ip, r6
 2690 00ec 24EA0C04 		bic	r4, r4, ip
 2691 00f0 B540     		lsls	r5, r5, r6
 2692              	.LVL277:
 2693 00f2 2C43     		orrs	r4, r4, r5
 2694 00f4 BC50     		str	r4, [r7, r2]
 2695              	.LVL278:
 2696              	.LBE389:
 2697              	.LBE388:
1963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif
1964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
1966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Shift the offset with respect to the selected ADC resolution. */
1968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
1969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
 2698              		.loc 1 1969 0
 2699 00f6 4D69     		ldr	r5, [r1, #20]
 2700 00f8 1C68     		ldr	r4, [r3]
 2701 00fa E268     		ldr	r2, [r4, #12]
 2702 00fc C2F3C102 		ubfx	r2, r2, #3, #2
 2703 0100 5200     		lsls	r2, r2, #1
 2704 0102 05FA02F2 		lsl	r2, r5, r2
 2705              	.LVL279:
1970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE)
 2706              		.loc 1 1971 0
 2707 0106 0E69     		ldr	r6, [r1, #16]
 2708 0108 042E     		cmp	r6, #4
 2709 010a 7DD0     		beq	.L257
 2710              	.LVL280:
 2711              	.LBB390:
 2712              	.LBB391:
2929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 2713              		.loc 2 2929 0
 2714 010c 6034     		adds	r4, r4, #96
 2715              	.LVL281:
2931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2716              		.loc 2 2931 0
 2717 010e 54F82670 		ldr	r7, [r4, r6, lsl #2]
 2718 0112 AC4D     		ldr	r5, .L333
 2719 0114 3D40     		ands	r5, r5, r7
 2720 0116 0F68     		ldr	r7, [r1]
 2721 0118 07F0F847 		and	r7, r7, #2080374784
 2722 011c 3A43     		orrs	r2, r2, r7
 2723              	.LVL282:
 2724 011e 1543     		orrs	r5, r5, r2
 2725 0120 45F00045 		orr	r5, r5, #-2147483648
 2726 0124 44F82650 		str	r5, [r4, r6, lsl #2]
 2727              	.LVL283:
 2728 0128 D6E0     		b	.L249
 2729              	.LVL284:
 2730              	.L322:
 2731              	.LBE391:
 2732              	.LBE390:
1753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 2733              		.loc 1 1753 0
 2734 012a 0C6A     		ldr	r4, [r1, #32]
 2735 012c BCB1     		cbz	r4, .L241
1755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 2736              		.loc 1 1755 0
 2737 012e 0868     		ldr	r0, [r1]
 2738 0130 820E     		lsrs	r2, r0, #26
 2739 0132 1202     		lsls	r2, r2, #8
 2740 0134 02F4F852 		and	r2, r2, #7936
1756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 2741              		.loc 1 1756 0
 2742 0138 04F03C04 		and	r4, r4, #60
 2743 013c 2243     		orrs	r2, r2, r4
1757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                           );
 2744              		.loc 1 1757 0
 2745 013e 486A     		ldr	r0, [r1, #36]
1755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 2746              		.loc 1 1755 0
 2747 0140 0243     		orrs	r2, r2, r0
 2748              	.LVL285:
 2749              	.L242:
1765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
 2750              		.loc 1 1765 0
 2751 0142 1C68     		ldr	r4, [r3]
 2752 0144 E06C     		ldr	r0, [r4, #76]
 2753 0146 20F0FB40 		bic	r0, r0, #2105540608
 2754 014a 20F4EF00 		bic	r0, r0, #7831552
 2755 014e 20F4BF40 		bic	r0, r0, #24448
 2756 0152 20F07F00 		bic	r0, r0, #127
 2757 0156 1043     		orrs	r0, r0, r2
 2758 0158 E064     		str	r0, [r4, #76]
1767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2759              		.loc 1 1767 0
 2760 015a DA65     		str	r2, [r3, #92]
 2761 015c 78E7     		b	.L240
 2762              	.LVL286:
 2763              	.L241:
1762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 2764              		.loc 1 1762 0
 2765 015e 0A68     		ldr	r2, [r1]
 2766 0160 920E     		lsrs	r2, r2, #26
 2767 0162 1202     		lsls	r2, r2, #8
 2768 0164 02F4F852 		and	r2, r2, #7936
 2769              	.LVL287:
 2770 0168 EBE7     		b	.L242
 2771              	.LVL288:
 2772              	.L244:
1812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 2773              		.loc 1 1812 0
 2774 016a 8A69     		ldr	r2, [r1, #24]
 2775 016c 541E     		subs	r4, r2, #1
 2776              	.LVL289:
 2777 016e 00E0     		b	.L243
 2778              	.LVL290:
 2779              	.L305:
1670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2780              		.loc 1 1670 0
 2781 0170 0024     		movs	r4, #0
 2782              	.LVL291:
 2783              	.L243:
1823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2784              		.loc 1 1823 0
 2785 0172 0868     		ldr	r0, [r1]
 2786 0174 C0F38460 		ubfx	r0, r0, #26, #5
 2787 0178 4A68     		ldr	r2, [r1, #4]
 2788 017a 02F01F02 		and	r2, r2, #31
 2789 017e 00FA02F2 		lsl	r2, r0, r2
 2790 0182 2243     		orrs	r2, r2, r4
 2791              	.LVL292:
1826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2792              		.loc 1 1826 0
 2793 0184 186E     		ldr	r0, [r3, #96]
 2794 0186 0138     		subs	r0, r0, #1
 2795 0188 1866     		str	r0, [r3, #96]
1831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2796              		.loc 1 1831 0
 2797 018a DC6D     		ldr	r4, [r3, #92]
 2798 018c 2243     		orrs	r2, r2, r4
 2799              	.LVL293:
 2800 018e DA65     		str	r2, [r3, #92]
1835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 2801              		.loc 1 1835 0
 2802 0190 0028     		cmp	r0, #0
 2803 0192 7FF45DAF 		bne	.L240
1837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
 2804              		.loc 1 1837 0
 2805 0196 1C68     		ldr	r4, [r3]
 2806 0198 E06C     		ldr	r0, [r4, #76]
 2807 019a 20F0FB40 		bic	r0, r0, #2105540608
 2808 019e 20F4EF00 		bic	r0, r0, #7831552
 2809 01a2 20F4BF40 		bic	r0, r0, #24448
 2810 01a6 20F07F00 		bic	r0, r0, #127
 2811 01aa 0243     		orrs	r2, r2, r0
 2812 01ac E264     		str	r2, [r4, #76]
 2813 01ae 4FE7     		b	.L240
 2814              	.L246:
1862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
 2815              		.loc 1 1862 0
 2816 01b0 D068     		ldr	r0, [r2, #12]
 2817 01b2 20F44010 		bic	r0, r0, #3145728
 2818 01b6 8C7F     		ldrb	r4, [r1, #30]	@ zero_extendqisi2
 2819 01b8 40EA4450 		orr	r0, r0, r4, lsl #21
 2820 01bc D060     		str	r0, [r2, #12]
 2821 01be 5AE7     		b	.L245
 2822              	.LVL294:
 2823              	.L306:
 2824              	.LBB392:
 2825              	.LBB384:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2826              		.loc 2 6170 0
 2827 01c0 0020     		movs	r0, #0
 2828 01c2 5FE7     		b	.L247
 2829              	.LVL295:
 2830              	.L307:
 2831              	.LBE384:
 2832              	.LBE392:
 2833              	.LBB393:
 2834              	.LBB387:
 2835              		.loc 2 6353 0
 2836 01c4 0024     		movs	r4, #0
 2837 01c6 63E7     		b	.L248
 2838              	.LVL296:
 2839              	.L323:
 2840              	.LBE387:
 2841              	.LBE393:
1890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 2842              		.loc 1 1890 0
 2843 01c8 D068     		ldr	r0, [r2, #12]
 2844 01ca 40F00070 		orr	r0, r0, #33554432
 2845 01ce D060     		str	r0, [r2, #12]
1663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2846              		.loc 1 1663 0
 2847 01d0 0020     		movs	r0, #0
 2848 01d2 72E7     		b	.L253
 2849              	.L251:
1901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 2850              		.loc 1 1901 0
 2851 01d4 487F     		ldrb	r0, [r1, #29]	@ zero_extendqisi2
 2852 01d6 0128     		cmp	r0, #1
 2853 01d8 05D0     		beq	.L325
1910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
 2854              		.loc 1 1910 0
 2855 01da D068     		ldr	r0, [r2, #12]
 2856 01dc 20F00070 		bic	r0, r0, #33554432
 2857 01e0 D060     		str	r0, [r2, #12]
1663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2858              		.loc 1 1663 0
 2859 01e2 0020     		movs	r0, #0
 2860 01e4 69E7     		b	.L253
 2861              	.L325:
1904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 2862              		.loc 1 1904 0
 2863 01e6 5A6D     		ldr	r2, [r3, #84]
 2864 01e8 42F02002 		orr	r2, r2, #32
 2865 01ec 5A65     		str	r2, [r3, #84]
 2866              	.LVL297:
 2867 01ee 64E7     		b	.L253
 2868              	.LVL298:
 2869              	.L324:
1927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
 2870              		.loc 1 1927 0
 2871 01f0 1D68     		ldr	r5, [r3]
 2872 01f2 2A69     		ldr	r2, [r5, #16]
 2873 01f4 22F4FF72 		bic	r2, r2, #510
 2874 01f8 CC6A     		ldr	r4, [r1, #44]
 2875 01fa 0E6B     		ldr	r6, [r1, #48]
 2876 01fc 3443     		orrs	r4, r4, r6
 2877 01fe 2243     		orrs	r2, r2, r4
 2878 0200 42F00202 		orr	r2, r2, #2
 2879 0204 2A61     		str	r2, [r5, #16]
 2880 0206 62E7     		b	.L256
 2881              	.LVL299:
 2882              	.L257:
 2883              	.LBB394:
 2884              	.LBB395:
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2885              		.loc 2 3010 0
 2886 0208 226E     		ldr	r2, [r4, #96]
 2887              	.LVL300:
 2888              	.LBE395:
 2889              	.LBE394:
 2890              	.LBB396:
 2891              	.LBB397:
 2892 020a 256E     		ldr	r5, [r4, #96]
 2893              	.LVL301:
 2894              	.LBE397:
 2895              	.LBE396:
1972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set ADC selected offset number */
1974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetOffset(hadc->Instance, sConfigInjected->InjectedOffsetNumber, sConfigInjected->Inje
1975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                        tmpOffsetShifted);
1976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
1977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
1978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
1979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
1980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Scan each offset register to check if the selected channel is targeted. */
1981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* If this is the case, the corresponding offset number is disabled.       */
1982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1))
 2896              		.loc 1 1982 0
 2897 020c C5F38465 		ubfx	r5, r5, #26, #5
1983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2898              		.loc 1 1983 0
 2899 0210 0A68     		ldr	r2, [r1]
 2900 0212 C2F31206 		ubfx	r6, r2, #0, #19
 2901 0216 7EBB     		cbnz	r6, .L258
 2902              		.loc 1 1983 0 is_stmt 0 discriminator 1
 2903 0218 C2F38462 		ubfx	r2, r2, #26, #5
 2904              	.L259:
1982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2905              		.loc 1 1982 0 is_stmt 1
 2906 021c 9542     		cmp	r5, r2
 2907 021e 33D0     		beq	.L326
 2908              	.L261:
1984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
1986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2))
 2909              		.loc 1 1987 0
 2910 0220 1D68     		ldr	r5, [r3]
 2911              	.LVL302:
 2912              	.LBB398:
 2913              	.LBB399:
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2914              		.loc 2 3010 0
 2915 0222 6A6E     		ldr	r2, [r5, #100]
 2916              	.LVL303:
 2917              	.LBE399:
 2918              	.LBE398:
 2919              	.LBB400:
 2920              	.LBB401:
 2921 0224 6C6E     		ldr	r4, [r5, #100]
 2922              	.LVL304:
 2923              	.LBE401:
 2924              	.LBE400:
 2925              		.loc 1 1987 0
 2926 0226 C4F38464 		ubfx	r4, r4, #26, #5
1988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2927              		.loc 1 1988 0
 2928 022a 0A68     		ldr	r2, [r1]
 2929 022c C2F31206 		ubfx	r6, r2, #0, #19
 2930 0230 7EBB     		cbnz	r6, .L262
 2931              		.loc 1 1988 0 is_stmt 0 discriminator 1
 2932 0232 C2F38462 		ubfx	r2, r2, #26, #5
 2933              	.L263:
1987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2934              		.loc 1 1987 0 is_stmt 1
 2935 0236 9442     		cmp	r4, r2
 2936 0238 33D0     		beq	.L327
 2937              	.L265:
1989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
1991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3))
 2938              		.loc 1 1992 0
 2939 023a 1D68     		ldr	r5, [r3]
 2940              	.LVL305:
 2941              	.LBB402:
 2942              	.LBB403:
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2943              		.loc 2 3010 0
 2944 023c AA6E     		ldr	r2, [r5, #104]
 2945              	.LVL306:
 2946              	.LBE403:
 2947              	.LBE402:
 2948              	.LBB404:
 2949              	.LBB405:
 2950 023e AC6E     		ldr	r4, [r5, #104]
 2951              	.LVL307:
 2952              	.LBE405:
 2953              	.LBE404:
 2954              		.loc 1 1992 0
 2955 0240 C4F38464 		ubfx	r4, r4, #26, #5
1993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2956              		.loc 1 1993 0
 2957 0244 0A68     		ldr	r2, [r1]
 2958 0246 C2F31206 		ubfx	r6, r2, #0, #19
 2959 024a 7EBB     		cbnz	r6, .L266
 2960              		.loc 1 1993 0 is_stmt 0 discriminator 1
 2961 024c C2F38462 		ubfx	r2, r2, #26, #5
 2962              	.L267:
1992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2963              		.loc 1 1992 0 is_stmt 1
 2964 0250 9442     		cmp	r4, r2
 2965 0252 33D0     		beq	.L328
 2966              	.L269:
1994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
1995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
1996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
1997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4))
 2967              		.loc 1 1997 0
 2968 0254 1D68     		ldr	r5, [r3]
 2969              	.LVL308:
 2970              	.LBB406:
 2971              	.LBB407:
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2972              		.loc 2 3010 0
 2973 0256 EA6E     		ldr	r2, [r5, #108]
 2974              	.LVL309:
 2975              	.LBE407:
 2976              	.LBE406:
 2977              	.LBB408:
 2978              	.LBB409:
 2979 0258 EC6E     		ldr	r4, [r5, #108]
 2980              	.LVL310:
 2981              	.LBE409:
 2982              	.LBE408:
 2983              		.loc 1 1997 0
 2984 025a C4F38464 		ubfx	r4, r4, #26, #5
1998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2985              		.loc 1 1998 0
 2986 025e 0A68     		ldr	r2, [r1]
 2987 0260 C2F31206 		ubfx	r6, r2, #0, #19
 2988 0264 7EBB     		cbnz	r6, .L270
 2989              		.loc 1 1998 0 is_stmt 0 discriminator 1
 2990 0266 C2F38462 		ubfx	r2, r2, #26, #5
 2991              	.L271:
1997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2992              		.loc 1 1997 0 is_stmt 1
 2993 026a 9442     		cmp	r4, r2
 2994 026c 34D1     		bne	.L249
 2995              	.LVL311:
 2996              	.LBB410:
 2997              	.LBB411:
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2998              		.loc 2 3069 0
 2999 026e EA6E     		ldr	r2, [r5, #108]
 3000 0270 22F00042 		bic	r2, r2, #-2147483648
 3001 0274 EA66     		str	r2, [r5, #108]
 3002 0276 2FE0     		b	.L249
 3003              	.LVL312:
 3004              	.L258:
 3005              	.LBE411:
 3006              	.LBE410:
 3007              	.LBB412:
 3008              	.LBB413:
 3009              		.file 3 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h"
   1:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**************************************************************************//**
   2:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @version  V5.2.0
   5:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @date     08. May 2019
   6:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  ******************************************************************************/
   7:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*
   8:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  10:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  12:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  16:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  18:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * limitations under the License.
  23:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
  24:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  25:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  28:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  34:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __has_builtin
  36:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  38:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  39:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ASM
  41:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  43:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __INLINE
  44:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  46:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  49:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif                                           
  52:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  55:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __USED
  56:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  58:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __WEAK
  59:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  61:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED
  62:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  64:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  67:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  70:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  78:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  86:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  94:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 102:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 110:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 113:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 116:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 119:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 120:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 122:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 124:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 125:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            in the used linker script.
 129:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 130:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 131:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 133:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 135:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 136:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t const* src;
 137:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 138:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 139:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __copy_table_t;
 140:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 141:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 142:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 143:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 144:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __zero_table_t;
 145:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 146:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 151:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 155:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 156:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 157:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 161:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 162:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 163:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   _start();
 164:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 165:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 166:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 168:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 169:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 172:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 173:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 176:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 177:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 180:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 181:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 184:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 185:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 189:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 190:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 191:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 192:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 196:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 198:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 200:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 201:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 202:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 203:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 207:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 209:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 211:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 212:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 213:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 214:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register
 215:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Control Register value
 217:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 218:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 220:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 221:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 222:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 224:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 225:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 226:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 227:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 229:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 233:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 235:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 236:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 237:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 239:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 240:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 241:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 242:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 243:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 244:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register
 245:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 248:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 250:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 252:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 253:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 254:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 256:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 260:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 262:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 264:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 265:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 266:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 267:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 268:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               IPSR Register value
 271:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 272:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 274:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 275:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 276:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 278:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 279:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 280:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 281:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 282:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get APSR Register
 283:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               APSR Register value
 285:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 286:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 288:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 289:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 290:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 292:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 293:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 294:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 295:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 296:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               xPSR Register value
 299:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 300:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 302:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 303:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 304:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 306:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 307:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 308:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 309:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 310:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 313:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 314:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 316:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 317:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 318:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 320:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 321:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 322:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 323:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 325:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 328:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 329:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 331:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 332:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 333:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 335:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 336:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 337:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 338:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 339:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 340:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 344:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 346:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 348:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 349:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 350:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 352:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 356:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 358:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 360:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 361:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 362:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 363:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 364:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 367:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 368:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 370:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 371:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 372:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 374:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 375:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 376:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 377:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 379:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 382:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 383:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 385:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 386:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 387:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 389:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 390:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 391:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 392:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 393:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 394:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 398:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 400:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 402:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 403:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 404:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 406:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 410:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 412:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 414:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 415:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 416:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 417:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 419:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               SP Register value
 422:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 423:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 425:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 426:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 427:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 429:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 430:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 431:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 432:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 433:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 437:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 439:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 441:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 442:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 443:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 444:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 445:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 448:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 449:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 451:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 452:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 453:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 455:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 456:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 457:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 458:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 460:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 463:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 464:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 466:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 467:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 468:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 470:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 471:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 472:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 473:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 474:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 475:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 479:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 481:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 483:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 484:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 485:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 487:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 491:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 493:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 495:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 496:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 497:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 498:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 502:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable FIQ
 503:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 506:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 508:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 510:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 511:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 512:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 513:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable FIQ
 514:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 517:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 519:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 521:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 522:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 523:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 524:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority
 525:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 527:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 528:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 530:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 531:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 532:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 534:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 535:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 536:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 537:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 539:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 542:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 543:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 545:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 546:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 547:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 549:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 550:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 551:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 552:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 553:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 554:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority
 555:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 558:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 560:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 562:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 563:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 564:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 566:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 570:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 572:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 574:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 575:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 576:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 577:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 578:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 583:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 585:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 587:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 588:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 589:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 590:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 593:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 594:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 596:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 597:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 598:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 600:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 601:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 602:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 603:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 605:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 608:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 609:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 611:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 612:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 613:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 615:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 616:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 617:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 618:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 619:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 620:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 624:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 626:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 628:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 629:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 630:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 632:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 636:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 638:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 640:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 641:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 642:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 646:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 647:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 650:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 651:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 655:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 656:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 659:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 661:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 665:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 666:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 667:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 669:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 670:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 671:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 672:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 674:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 678:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 681:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 683:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 686:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 687:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 688:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 690:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 691:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 692:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 693:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 694:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 695:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 696:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 700:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 701:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 704:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 706:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 711:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 713:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 714:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 715:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 716:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 718:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 722:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 725:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 727:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 731:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 733:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 734:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 735:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 736:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 737:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 738:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 742:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 743:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 746:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 748:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 752:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 753:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 754:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 756:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 757:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 758:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 759:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 760:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 762:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 766:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 769:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 771:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 774:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 775:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 776:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 778:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 779:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 780:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 781:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 782:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 783:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 784:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 788:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 789:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 792:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 794:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 799:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 801:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 802:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 803:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 804:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 806:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 810:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 813:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 815:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 819:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 821:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 822:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 823:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 824:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 827:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 828:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 829:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get FPSCR
 830:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 833:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 835:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 843:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 844:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 845:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 847:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 848:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 849:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(0U);
 850:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 851:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 852:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 853:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 854:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 855:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set FPSCR
 856:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 859:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 861:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 869:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 871:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 872:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)fpscr;
 873:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 874:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 875:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 876:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 877:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 879:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 880:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Access to dedicated instructions
 883:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 884:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** */
 885:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 886:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 894:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 898:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 899:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 900:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   No Operation
 901:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 903:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 905:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 906:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 909:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 911:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 912:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 913:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Event
 914:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 917:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 919:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 920:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 921:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Send Event
 922:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 924:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 926:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 927:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 928:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            after the instruction has been completed.
 932:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 933:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 935:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 937:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 938:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 939:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 940:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 944:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 946:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 948:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 949:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 950:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 951:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 955:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 957:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 959:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 960:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 961:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 962:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
 966:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 967:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 969:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 972:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 973:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 974:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 976:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 977:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 978:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 979:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 980:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 981:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
 985:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 986:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 988:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 989:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 990:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 992:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 993:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 994:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 995:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 996:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
1000:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1001:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1003:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
1006:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   int16_t result;
1007:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1008:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
1010:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
1011:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
1012:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1013:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1014:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1015:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Rotated value
1020:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1021:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1023:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   op2 %= 32U;
1024:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   if (op2 == 0U)
1025:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
1026:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     return op1;
1027:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
1028:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
1030:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1031:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1032:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1033:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Breakpoint
1034:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1039:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1041:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1042:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1043:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
1047:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1048:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1050:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
1051:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1052:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 3010              		.loc 3 1055 0 discriminator 2
 3011              		.syntax unified
 3012              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3013 0278 92FAA2F2 		rbit r2, r2
 3014              	@ 0 "" 2
 3015              	.LVL313:
 3016              		.thumb
 3017              		.syntax unified
 3018              	.LBE413:
 3019              	.LBE412:
 3020              	.LBB414:
 3021              	.LBB415:
1056:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
1057:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1059:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
1062:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     result <<= 1U;
1063:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     result |= value & 1U;
1064:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     s--;
1065:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
1066:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
1068:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
1069:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
1070:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1071:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1072:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1073:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Count leading zeros
1074:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1078:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1080:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      is non-zero".
1086:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      single CLZ instruction.
1088:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****    */
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   if (value == 0U)
 3022              		.loc 3 1089 0 discriminator 2
 3023 027c 12B1     		cbz	r2, .L310
1090:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     return 32U;
1092:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
1093:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_clz(value);
 3024              		.loc 3 1093 0
 3025 027e B2FA82F2 		clz	r2, r2
 3026 0282 CBE7     		b	.L259
 3027              	.L310:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3028              		.loc 3 1091 0
 3029 0284 2022     		movs	r2, #32
 3030 0286 C9E7     		b	.L259
 3031              	.L326:
 3032              	.LVL314:
 3033              	.LBE415:
 3034              	.LBE414:
 3035              	.LBB416:
 3036              	.LBB417:
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 3037              		.loc 2 3069 0
 3038 0288 226E     		ldr	r2, [r4, #96]
 3039 028a 22F00042 		bic	r2, r2, #-2147483648
 3040 028e 2266     		str	r2, [r4, #96]
 3041 0290 C6E7     		b	.L261
 3042              	.LVL315:
 3043              	.L262:
 3044              	.LBE417:
 3045              	.LBE416:
 3046              	.LBB418:
 3047              	.LBB419:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3048              		.loc 3 1055 0 discriminator 2
 3049              		.syntax unified
 3050              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3051 0292 92FAA2F2 		rbit r2, r2
 3052              	@ 0 "" 2
 3053              	.LVL316:
 3054              		.thumb
 3055              		.syntax unified
 3056              	.LBE419:
 3057              	.LBE418:
 3058              	.LBB420:
 3059              	.LBB421:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3060              		.loc 3 1089 0 discriminator 2
 3061 0296 12B1     		cbz	r2, .L311
 3062              		.loc 3 1093 0
 3063 0298 B2FA82F2 		clz	r2, r2
 3064 029c CBE7     		b	.L263
 3065              	.L311:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3066              		.loc 3 1091 0
 3067 029e 2022     		movs	r2, #32
 3068 02a0 C9E7     		b	.L263
 3069              	.L327:
 3070              	.LVL317:
 3071              	.LBE421:
 3072              	.LBE420:
 3073              	.LBB422:
 3074              	.LBB423:
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 3075              		.loc 2 3069 0
 3076 02a2 6A6E     		ldr	r2, [r5, #100]
 3077 02a4 22F00042 		bic	r2, r2, #-2147483648
 3078 02a8 6A66     		str	r2, [r5, #100]
 3079 02aa C6E7     		b	.L265
 3080              	.LVL318:
 3081              	.L266:
 3082              	.LBE423:
 3083              	.LBE422:
 3084              	.LBB424:
 3085              	.LBB425:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3086              		.loc 3 1055 0 discriminator 2
 3087              		.syntax unified
 3088              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3089 02ac 92FAA2F2 		rbit r2, r2
 3090              	@ 0 "" 2
 3091              	.LVL319:
 3092              		.thumb
 3093              		.syntax unified
 3094              	.LBE425:
 3095              	.LBE424:
 3096              	.LBB426:
 3097              	.LBB427:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3098              		.loc 3 1089 0 discriminator 2
 3099 02b0 12B1     		cbz	r2, .L312
 3100              		.loc 3 1093 0
 3101 02b2 B2FA82F2 		clz	r2, r2
 3102 02b6 CBE7     		b	.L267
 3103              	.L312:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3104              		.loc 3 1091 0
 3105 02b8 2022     		movs	r2, #32
 3106 02ba C9E7     		b	.L267
 3107              	.L328:
 3108              	.LVL320:
 3109              	.LBE427:
 3110              	.LBE426:
 3111              	.LBB428:
 3112              	.LBB429:
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 3113              		.loc 2 3069 0
 3114 02bc AA6E     		ldr	r2, [r5, #104]
 3115 02be 22F00042 		bic	r2, r2, #-2147483648
 3116 02c2 AA66     		str	r2, [r5, #104]
 3117 02c4 C6E7     		b	.L269
 3118              	.LVL321:
 3119              	.L270:
 3120              	.LBE429:
 3121              	.LBE428:
 3122              	.LBB430:
 3123              	.LBB431:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3124              		.loc 3 1055 0 discriminator 2
 3125              		.syntax unified
 3126              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3127 02c6 92FAA2F2 		rbit r2, r2
 3128              	@ 0 "" 2
 3129              	.LVL322:
 3130              		.thumb
 3131              		.syntax unified
 3132              	.LBE431:
 3133              	.LBE430:
 3134              	.LBB432:
 3135              	.LBB433:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3136              		.loc 3 1089 0 discriminator 2
 3137 02ca 12B1     		cbz	r2, .L313
 3138              		.loc 3 1093 0
 3139 02cc B2FA82F2 		clz	r2, r2
 3140 02d0 CBE7     		b	.L271
 3141              	.L313:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3142              		.loc 3 1091 0
 3143 02d2 2022     		movs	r2, #32
 3144 02d4 C9E7     		b	.L271
 3145              	.LVL323:
 3146              	.L308:
 3147              	.LBE433:
 3148              	.LBE432:
1663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 3149              		.loc 1 1663 0
 3150 02d6 0020     		movs	r0, #0
 3151              	.LVL324:
 3152              	.L249:
1999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
2000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
2002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
2003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
2008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
2009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 3153              		.loc 1 2009 0
 3154 02d8 1D68     		ldr	r5, [r3]
 3155              	.LVL325:
 3156              	.LBB434:
 3157              	.LBB435:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3158              		.loc 2 6048 0
 3159 02da AA68     		ldr	r2, [r5, #8]
 3160 02dc 12F0010F 		tst	r2, #1
 3161 02e0 15D1     		bne	.L273
 3162              	.LVL326:
 3163              	.LBE435:
 3164              	.LBE434:
2010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Set mode single-ended or differential input of the selected ADC channel */
2012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInjected->
 3165              		.loc 1 2012 0
 3166 02e2 0A68     		ldr	r2, [r1]
 3167 02e4 CE68     		ldr	r6, [r1, #12]
 3168              	.LVL327:
 3169              	.LBB436:
 3170              	.LBB437:
4873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 3171              		.loc 2 4873 0
 3172 02e6 D5F8B040 		ldr	r4, [r5, #176]
 3173 02ea C2F31207 		ubfx	r7, r2, #0, #19
 3174 02ee 24EA0704 		bic	r4, r4, r7
 3175 02f2 06F01807 		and	r7, r6, #24
 3176 02f6 344E     		ldr	r6, .L333+4
 3177              	.LVL328:
 3178 02f8 FE40     		lsrs	r6, r6, r7
 3179 02fa 3240     		ands	r2, r2, r6
 3180              	.LVL329:
 3181 02fc C2F31202 		ubfx	r2, r2, #0, #19
 3182 0300 2243     		orrs	r2, r2, r4
 3183 0302 C5F8B020 		str	r2, [r5, #176]
 3184              	.LVL330:
 3185              	.LBE437:
 3186              	.LBE436:
2013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Configuration of differential mode */
2015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range
2016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSingleDiff == ADC_DIFFERENTIAL_ENDED)
 3187              		.loc 1 2016 0
 3188 0306 CC68     		ldr	r4, [r1, #12]
 3189 0308 304A     		ldr	r2, .L333+8
 3190 030a 9442     		cmp	r4, r2
 3191 030c 1BD0     		beq	.L329
 3192              	.L273:
2017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
2018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance,
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
2021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
2022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
2023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Management of internal measurement channels: Vbat/VrefInt/TempSensor   */
2027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* internal measurement paths enable: If internal channel selected,       */
2028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* enable dedicated internal buffers and path.                            */
2029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Note: these internal measurement paths can be disabled using           */
2030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* HAL_ADC_DeInit().                                                      */
2031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfigInjected->InjectedChannel))
 3193              		.loc 1 2032 0
 3194 030e 0A68     		ldr	r2, [r1]
 3195 0310 2F49     		ldr	r1, .L333+12
 3196              	.LVL331:
 3197 0312 0A42     		tst	r2, r1
 3198 0314 0FD0     		beq	.L297
 3199              	.LVL332:
 3200              	.LBB438:
 3201              	.LBB439:
2590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3202              		.loc 2 2590 0
 3203 0316 2F49     		ldr	r1, .L333+16
 3204 0318 8968     		ldr	r1, [r1, #8]
 3205 031a 01F0E075 		and	r5, r1, #29360128
 3206              	.LVL333:
 3207              	.LBE439:
 3208              	.LBE438:
2033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Ins
2035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
2037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
2038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR)
 3209              		.loc 1 2038 0
 3210 031e 2E4C     		ldr	r4, .L333+20
 3211 0320 A242     		cmp	r2, r4
 3212 0322 00F0DF80 		beq	.L330
 3213              	.L298:
2039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
2041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
2043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channe
2045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Delay for temperature sensor stabilization time */
2047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Wait loop initialization and execution */
2048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /* Note: Variable divided by 2 to compensate partially              */
2049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /*       CPU processing cycles, scaling in us split to not          */
2050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         /*       exceed 32 bits register capacity and handle low frequency. */
2051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * (((SystemCoreClock / (100000U
2052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
2053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
2054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****           wait_loop_index--;
2055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         }
2056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
2057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
2058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)
 3214              		.loc 1 2058 0
 3215 0326 2D4C     		ldr	r4, .L333+24
 3216 0328 A242     		cmp	r2, r4
 3217 032a 00F00481 		beq	.L331
 3218              	.L302:
2059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****              && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
2060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
2061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
2063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
2066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
2067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)
 3219              		.loc 1 2067 0
 3220 032e 2C4C     		ldr	r4, .L333+28
 3221 0330 A242     		cmp	r2, r4
 3222 0332 00F01681 		beq	.L332
 3223              	.L297:
2068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****              && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
2070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (ADC_VREFINT_INSTANCE(hadc))
2071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
2072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
2074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
2075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
2076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else
2077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
2078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* nothing to do */
2079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
2080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
2083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3224              		.loc 1 2083 0
 3225 0336 0022     		movs	r2, #0
 3226 0338 83F85020 		strb	r2, [r3, #80]
 3227              	.LVL334:
 3228              	.L237:
2084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
2086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 3229              		.loc 1 2087 0
 3230 033c 02B0     		add	sp, sp, #8
 3231              		.cfi_remember_state
 3232              		.cfi_def_cfa_offset 16
 3233              		@ sp needed
 3234 033e F0BC     		pop	{r4, r5, r6, r7}
 3235              		.cfi_restore 7
 3236              		.cfi_restore 6
 3237              		.cfi_restore 5
 3238              		.cfi_restore 4
 3239              		.cfi_def_cfa_offset 0
 3240 0340 7047     		bx	lr
 3241              	.LVL335:
 3242              	.L309:
 3243              		.cfi_restore_state
1663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 3244              		.loc 1 1663 0
 3245 0342 0020     		movs	r0, #0
 3246 0344 C8E7     		b	.L249
 3247              	.LVL336:
 3248              	.L329:
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 3249              		.loc 1 2019 0
 3250 0346 1E68     		ldr	r6, [r3]
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3251              		.loc 1 2020 0
 3252 0348 0A68     		ldr	r2, [r1]
 3253 034a C2F31207 		ubfx	r7, r2, #0, #19
 3254 034e 002F     		cmp	r7, #0
 3255 0350 48D1     		bne	.L274
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3256              		.loc 1 2020 0 is_stmt 0 discriminator 1
 3257 0352 940E     		lsrs	r4, r2, #26
 3258 0354 0134     		adds	r4, r4, #1
 3259 0356 04F01F04 		and	r4, r4, #31
 3260 035a 092C     		cmp	r4, #9
 3261 035c 8CBF     		ite	hi
 3262 035e 0024     		movhi	r4, #0
 3263 0360 0124     		movls	r4, #1
 3264              	.L275:
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 3265              		.loc 1 2019 0 is_stmt 1
 3266 0362 002C     		cmp	r4, #0
 3267 0364 76D0     		beq	.L277
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3268              		.loc 1 2020 0
 3269 0366 002F     		cmp	r7, #0
 3270 0368 4BD1     		bne	.L278
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3271              		.loc 1 2020 0 is_stmt 0 discriminator 3
 3272 036a 950E     		lsrs	r5, r2, #26
 3273 036c 0135     		adds	r5, r5, #1
 3274 036e AD06     		lsls	r5, r5, #26
 3275 0370 05F0F845 		and	r5, r5, #2080374784
 3276              	.L279:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3277              		.loc 1 2020 0 discriminator 6
 3278 0374 002F     		cmp	r7, #0
 3279 0376 50D1     		bne	.L281
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3280              		.loc 1 2020 0 discriminator 7
 3281 0378 940E     		lsrs	r4, r2, #26
 3282 037a 0134     		adds	r4, r4, #1
 3283 037c 04F01F0C 		and	ip, r4, #31
 3284 0380 0124     		movs	r4, #1
 3285 0382 04FA0CF4 		lsl	r4, r4, ip
 3286              	.L282:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3287              		.loc 1 2020 0 discriminator 10
 3288 0386 2543     		orrs	r5, r5, r4
 3289 0388 002F     		cmp	r7, #0
 3290 038a 55D1     		bne	.L284
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3291              		.loc 1 2020 0 discriminator 11
 3292 038c 920E     		lsrs	r2, r2, #26
 3293 038e 0132     		adds	r2, r2, #1
 3294 0390 02F01F02 		and	r2, r2, #31
 3295 0394 02EB4202 		add	r2, r2, r2, lsl #1
 3296 0398 1205     		lsls	r2, r2, #20
 3297              	.L285:
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 3298              		.loc 1 2019 0 is_stmt 1
 3299 039a 2A43     		orrs	r2, r2, r5
 3300              	.L287:
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 3301              		.loc 1 2019 0 is_stmt 0 discriminator 1
 3302 039c 8D68     		ldr	r5, [r1, #8]
 3303              	.LVL337:
 3304              	.LBB440:
 3305              	.LBB441:
4720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 3306              		.loc 2 4720 0 is_stmt 1 discriminator 1
 3307 039e 1436     		adds	r6, r6, #20
 3308              	.LVL338:
 3309 03a0 540E     		lsrs	r4, r2, #25
 3310 03a2 A400     		lsls	r4, r4, #2
 3311 03a4 04F00404 		and	r4, r4, #4
 3312              	.LVL339:
4722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3313              		.loc 2 4722 0 discriminator 1
 3314 03a8 3759     		ldr	r7, [r6, r4]
 3315 03aa C2F30452 		ubfx	r2, r2, #20, #5
 3316              	.LVL340:
 3317 03ae 4FF0070C 		mov	ip, #7
 3318 03b2 0CFA02FC 		lsl	ip, ip, r2
 3319 03b6 27EA0C07 		bic	r7, r7, ip
 3320 03ba 05FA02F2 		lsl	r2, r5, r2
 3321 03be 3A43     		orrs	r2, r2, r7
 3322 03c0 3251     		str	r2, [r6, r4]
 3323              	.LVL341:
 3324 03c2 A4E7     		b	.L273
 3325              	.L334:
 3326              		.align	2
 3327              	.L333:
 3328 03c4 00F0FF03 		.word	67104768
 3329 03c8 FFFF0700 		.word	524287
 3330 03cc 00007F40 		.word	1082064896
 3331 03d0 00000880 		.word	-2146959360
 3332 03d4 00030450 		.word	1342440192
 3333 03d8 000052C7 		.word	-950927360
 3334 03dc 000084CB 		.word	-880541696
 3335 03e0 01000080 		.word	-2147483647
 3336              	.LVL342:
 3337              	.L274:
 3338              	.LBE441:
 3339              	.LBE440:
 3340              	.LBB442:
 3341              	.LBB443:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3342              		.loc 3 1055 0 discriminator 2
 3343              		.syntax unified
 3344              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3345 03e4 92FAA2F4 		rbit r4, r2
 3346              	@ 0 "" 2
 3347              	.LVL343:
 3348              		.thumb
 3349              		.syntax unified
 3350              	.LBE443:
 3351              	.LBE442:
 3352              	.LBB444:
 3353              	.LBB445:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3354              		.loc 3 1089 0 discriminator 2
 3355 03e8 4CB1     		cbz	r4, .L314
 3356              		.loc 3 1093 0
 3357 03ea B4FA84F4 		clz	r4, r4
 3358              	.L276:
 3359              	.LBE445:
 3360              	.LBE444:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3361              		.loc 1 2020 0
 3362 03ee 0134     		adds	r4, r4, #1
 3363 03f0 04F01F04 		and	r4, r4, #31
 3364 03f4 092C     		cmp	r4, #9
 3365 03f6 8CBF     		ite	hi
 3366 03f8 0024     		movhi	r4, #0
 3367 03fa 0124     		movls	r4, #1
 3368 03fc B1E7     		b	.L275
 3369              	.L314:
 3370              	.LBB447:
 3371              	.LBB446:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3372              		.loc 3 1091 0
 3373 03fe 2024     		movs	r4, #32
 3374 0400 F5E7     		b	.L276
 3375              	.L278:
 3376              	.LVL344:
 3377              	.LBE446:
 3378              	.LBE447:
 3379              	.LBB448:
 3380              	.LBB449:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3381              		.loc 3 1055 0 discriminator 4
 3382              		.syntax unified
 3383              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3384 0402 92FAA2F5 		rbit r5, r2
 3385              	@ 0 "" 2
 3386              	.LVL345:
 3387              		.thumb
 3388              		.syntax unified
 3389              	.LBE449:
 3390              	.LBE448:
 3391              	.LBB450:
 3392              	.LBB451:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3393              		.loc 3 1089 0 discriminator 4
 3394 0406 35B1     		cbz	r5, .L315
 3395              		.loc 3 1093 0
 3396 0408 B5FA85F5 		clz	r5, r5
 3397              	.L280:
 3398              	.LBE451:
 3399              	.LBE450:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3400              		.loc 1 2020 0
 3401 040c 0135     		adds	r5, r5, #1
 3402 040e AD06     		lsls	r5, r5, #26
 3403 0410 05F0F845 		and	r5, r5, #2080374784
 3404 0414 AEE7     		b	.L279
 3405              	.L315:
 3406              	.LBB453:
 3407              	.LBB452:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3408              		.loc 3 1091 0
 3409 0416 2025     		movs	r5, #32
 3410 0418 F8E7     		b	.L280
 3411              	.L281:
 3412              	.LVL346:
 3413              	.LBE452:
 3414              	.LBE453:
 3415              	.LBB454:
 3416              	.LBB455:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3417              		.loc 3 1055 0 discriminator 8
 3418              		.syntax unified
 3419              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3420 041a 92FAA2F4 		rbit r4, r2
 3421              	@ 0 "" 2
 3422              	.LVL347:
 3423              		.thumb
 3424              		.syntax unified
 3425              	.LBE455:
 3426              	.LBE454:
 3427              	.LBB456:
 3428              	.LBB457:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3429              		.loc 3 1089 0 discriminator 8
 3430 041e 4CB1     		cbz	r4, .L316
 3431              		.loc 3 1093 0
 3432 0420 B4FA84F4 		clz	r4, r4
 3433              	.L283:
 3434              	.LBE457:
 3435              	.LBE456:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3436              		.loc 1 2020 0
 3437 0424 0134     		adds	r4, r4, #1
 3438 0426 04F01F04 		and	r4, r4, #31
 3439 042a 4FF0010C 		mov	ip, #1
 3440 042e 0CFA04F4 		lsl	r4, ip, r4
 3441 0432 A8E7     		b	.L282
 3442              	.L316:
 3443              	.LBB459:
 3444              	.LBB458:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3445              		.loc 3 1091 0
 3446 0434 2024     		movs	r4, #32
 3447 0436 F5E7     		b	.L283
 3448              	.L284:
 3449              	.LVL348:
 3450              	.LBE458:
 3451              	.LBE459:
 3452              	.LBB460:
 3453              	.LBB461:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3454              		.loc 3 1055 0 discriminator 12
 3455              		.syntax unified
 3456              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3457 0438 92FAA2F2 		rbit r2, r2
 3458              	@ 0 "" 2
 3459              	.LVL349:
 3460              		.thumb
 3461              		.syntax unified
 3462              	.LBE461:
 3463              	.LBE460:
 3464              	.LBB462:
 3465              	.LBB463:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3466              		.loc 3 1089 0 discriminator 12
 3467 043c 42B1     		cbz	r2, .L317
 3468              		.loc 3 1093 0
 3469 043e B2FA82F2 		clz	r2, r2
 3470              	.L286:
 3471              	.LBE463:
 3472              	.LBE462:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3473              		.loc 1 2020 0
 3474 0442 0132     		adds	r2, r2, #1
 3475 0444 02F01F02 		and	r2, r2, #31
 3476 0448 02EB4202 		add	r2, r2, r2, lsl #1
 3477 044c 1205     		lsls	r2, r2, #20
 3478 044e A4E7     		b	.L285
 3479              	.L317:
 3480              	.LBB465:
 3481              	.LBB464:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3482              		.loc 3 1091 0
 3483 0450 2022     		movs	r2, #32
 3484 0452 F6E7     		b	.L286
 3485              	.L277:
 3486              	.LBE464:
 3487              	.LBE465:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3488              		.loc 1 2020 0
 3489 0454 D7B9     		cbnz	r7, .L288
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3490              		.loc 1 2020 0 is_stmt 0 discriminator 13
 3491 0456 950E     		lsrs	r5, r2, #26
 3492 0458 0135     		adds	r5, r5, #1
 3493 045a AD06     		lsls	r5, r5, #26
 3494 045c 05F0F845 		and	r5, r5, #2080374784
 3495              	.L289:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3496              		.loc 1 2020 0 discriminator 16
 3497 0460 07BB     		cbnz	r7, .L291
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3498              		.loc 1 2020 0 discriminator 17
 3499 0462 940E     		lsrs	r4, r2, #26
 3500 0464 0134     		adds	r4, r4, #1
 3501 0466 04F01F0C 		and	ip, r4, #31
 3502 046a 0124     		movs	r4, #1
 3503 046c 04FA0CF4 		lsl	r4, r4, ip
 3504              	.L292:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3505              		.loc 1 2020 0 discriminator 20
 3506 0470 2543     		orrs	r5, r5, r4
 3507 0472 37BB     		cbnz	r7, .L294
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3508              		.loc 1 2020 0 discriminator 21
 3509 0474 940E     		lsrs	r4, r2, #26
 3510 0476 0134     		adds	r4, r4, #1
 3511 0478 04F01F04 		and	r4, r4, #31
 3512 047c 04EB4402 		add	r2, r4, r4, lsl #1
 3513 0480 1E3A     		subs	r2, r2, #30
 3514 0482 1205     		lsls	r2, r2, #20
 3515 0484 42F00072 		orr	r2, r2, #33554432
 3516              	.L295:
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 3517              		.loc 1 2019 0 is_stmt 1 discriminator 2
 3518 0488 2A43     		orrs	r2, r2, r5
 3519 048a 87E7     		b	.L287
 3520              	.L288:
 3521              	.LVL350:
 3522              	.LBB466:
 3523              	.LBB467:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3524              		.loc 3 1055 0 discriminator 14
 3525              		.syntax unified
 3526              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3527 048c 92FAA2F5 		rbit r5, r2
 3528              	@ 0 "" 2
 3529              	.LVL351:
 3530              		.thumb
 3531              		.syntax unified
 3532              	.LBE467:
 3533              	.LBE466:
 3534              	.LBB468:
 3535              	.LBB469:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3536              		.loc 3 1089 0 discriminator 14
 3537 0490 35B1     		cbz	r5, .L318
 3538              		.loc 3 1093 0
 3539 0492 B5FA85F5 		clz	r5, r5
 3540              	.L290:
 3541              	.LBE469:
 3542              	.LBE468:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3543              		.loc 1 2020 0
 3544 0496 0135     		adds	r5, r5, #1
 3545 0498 AD06     		lsls	r5, r5, #26
 3546 049a 05F0F845 		and	r5, r5, #2080374784
 3547 049e DFE7     		b	.L289
 3548              	.L318:
 3549              	.LBB471:
 3550              	.LBB470:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3551              		.loc 3 1091 0
 3552 04a0 2025     		movs	r5, #32
 3553 04a2 F8E7     		b	.L290
 3554              	.L291:
 3555              	.LVL352:
 3556              	.LBE470:
 3557              	.LBE471:
 3558              	.LBB472:
 3559              	.LBB473:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3560              		.loc 3 1055 0 discriminator 18
 3561              		.syntax unified
 3562              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3563 04a4 92FAA2F4 		rbit r4, r2
 3564              	@ 0 "" 2
 3565              	.LVL353:
 3566              		.thumb
 3567              		.syntax unified
 3568              	.LBE473:
 3569              	.LBE472:
 3570              	.LBB474:
 3571              	.LBB475:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3572              		.loc 3 1089 0 discriminator 18
 3573 04a8 4CB1     		cbz	r4, .L319
 3574              		.loc 3 1093 0
 3575 04aa B4FA84F4 		clz	r4, r4
 3576              	.L293:
 3577              	.LBE475:
 3578              	.LBE474:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3579              		.loc 1 2020 0
 3580 04ae 0134     		adds	r4, r4, #1
 3581 04b0 04F01F04 		and	r4, r4, #31
 3582 04b4 4FF0010C 		mov	ip, #1
 3583 04b8 0CFA04F4 		lsl	r4, ip, r4
 3584 04bc D8E7     		b	.L292
 3585              	.L319:
 3586              	.LBB477:
 3587              	.LBB476:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3588              		.loc 3 1091 0
 3589 04be 2024     		movs	r4, #32
 3590 04c0 F5E7     		b	.L293
 3591              	.L294:
 3592              	.LVL354:
 3593              	.LBE476:
 3594              	.LBE477:
 3595              	.LBB478:
 3596              	.LBB479:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3597              		.loc 3 1055 0 discriminator 22
 3598              		.syntax unified
 3599              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3600 04c2 92FAA2F2 		rbit r2, r2
 3601              	@ 0 "" 2
 3602              	.LVL355:
 3603              		.thumb
 3604              		.syntax unified
 3605              	.LBE479:
 3606              	.LBE478:
 3607              	.LBB480:
 3608              	.LBB481:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3609              		.loc 3 1089 0 discriminator 22
 3610 04c6 5AB1     		cbz	r2, .L320
 3611              		.loc 3 1093 0
 3612 04c8 B2FA82F4 		clz	r4, r2
 3613              	.L296:
 3614              	.LBE481:
 3615              	.LBE480:
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3616              		.loc 1 2020 0
 3617 04cc 0134     		adds	r4, r4, #1
 3618 04ce 04F01F04 		and	r4, r4, #31
 3619 04d2 04EB4402 		add	r2, r4, r4, lsl #1
 3620 04d6 1E3A     		subs	r2, r2, #30
 3621 04d8 1205     		lsls	r2, r2, #20
 3622 04da 42F00072 		orr	r2, r2, #33554432
 3623 04de D3E7     		b	.L295
 3624              	.L320:
 3625              	.LBB483:
 3626              	.LBB482:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3627              		.loc 3 1091 0
 3628 04e0 2024     		movs	r4, #32
 3629 04e2 F3E7     		b	.L296
 3630              	.LVL356:
 3631              	.L330:
 3632              	.LBE482:
 3633              	.LBE483:
2039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 3634              		.loc 1 2039 0
 3635 04e4 11F4000F 		tst	r1, #8388608
 3636 04e8 7FF41DAF 		bne	.L298
2041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 3637              		.loc 1 2041 0
 3638 04ec 1A68     		ldr	r2, [r3]
 3639 04ee 2749     		ldr	r1, .L335
 3640 04f0 8A42     		cmp	r2, r1
 3641 04f2 04D0     		beq	.L299
2041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 3642              		.loc 1 2041 0 is_stmt 0 discriminator 1
 3643 04f4 01F50071 		add	r1, r1, #512
 3644 04f8 8A42     		cmp	r2, r1
 3645 04fa 7FF41CAF 		bne	.L297
 3646              	.L299:
2043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channe
 3647              		.loc 1 2043 0 is_stmt 1
 3648 04fe 45F40005 		orr	r5, r5, #8388608
 3649              	.LVL357:
 3650              	.LBB484:
 3651              	.LBB485:
2509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3652              		.loc 2 2509 0
 3653 0502 2349     		ldr	r1, .L335+4
 3654 0504 8A68     		ldr	r2, [r1, #8]
 3655 0506 22F0E072 		bic	r2, r2, #29360128
 3656 050a 1543     		orrs	r5, r5, r2
 3657              	.LVL358:
 3658 050c 8D60     		str	r5, [r1, #8]
 3659              	.LVL359:
 3660              	.LBE485:
 3661              	.LBE484:
2051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 3662              		.loc 1 2051 0
 3663 050e 214A     		ldr	r2, .L335+8
 3664 0510 1268     		ldr	r2, [r2]
 3665 0512 9209     		lsrs	r2, r2, #6
 3666 0514 2049     		ldr	r1, .L335+12
 3667 0516 A1FB0212 		umull	r1, r2, r1, r2
 3668 051a 9209     		lsrs	r2, r2, #6
 3669 051c 02EB4202 		add	r2, r2, r2, lsl #1
 3670 0520 9100     		lsls	r1, r2, #2
 3671 0522 1831     		adds	r1, r1, #24
 3672 0524 0191     		str	r1, [sp, #4]
2052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
 3673              		.loc 1 2052 0
 3674 0526 02E0     		b	.L300
 3675              	.L301:
2054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         }
 3676              		.loc 1 2054 0
 3677 0528 019A     		ldr	r2, [sp, #4]
 3678 052a 013A     		subs	r2, r2, #1
 3679 052c 0192     		str	r2, [sp, #4]
 3680              	.L300:
2052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         {
 3681              		.loc 1 2052 0
 3682 052e 019A     		ldr	r2, [sp, #4]
 3683 0530 002A     		cmp	r2, #0
 3684 0532 F9D1     		bne	.L301
 3685 0534 FFE6     		b	.L297
 3686              	.L331:
2059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 3687              		.loc 1 2059 0
 3688 0536 11F0807F 		tst	r1, #16777216
 3689 053a 7FF4F8AE 		bne	.L302
2061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 3690              		.loc 1 2061 0
 3691 053e 1A68     		ldr	r2, [r3]
 3692 0540 1249     		ldr	r1, .L335
 3693 0542 8A42     		cmp	r2, r1
 3694 0544 04D0     		beq	.L303
2061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 3695              		.loc 1 2061 0 is_stmt 0 discriminator 1
 3696 0546 01F50071 		add	r1, r1, #512
 3697 054a 8A42     		cmp	r2, r1
 3698 054c 7FF4F3AE 		bne	.L297
 3699              	.L303:
2063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3700              		.loc 1 2063 0 is_stmt 1
 3701 0550 45F08075 		orr	r5, r5, #16777216
 3702              	.LVL360:
 3703              	.LBB486:
 3704              	.LBB487:
2509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3705              		.loc 2 2509 0
 3706 0554 0E49     		ldr	r1, .L335+4
 3707 0556 8A68     		ldr	r2, [r1, #8]
 3708 0558 22F0E072 		bic	r2, r2, #29360128
 3709 055c 1543     		orrs	r5, r5, r2
 3710              	.LVL361:
 3711 055e 8D60     		str	r5, [r1, #8]
 3712 0560 E9E6     		b	.L297
 3713              	.LVL362:
 3714              	.L332:
 3715              	.LBE487:
 3716              	.LBE486:
2068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
 3717              		.loc 1 2068 0
 3718 0562 11F4800F 		tst	r1, #4194304
 3719 0566 7FF4E6AE 		bne	.L297
2070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
 3720              		.loc 1 2070 0
 3721 056a 1968     		ldr	r1, [r3]
 3722 056c 074A     		ldr	r2, .L335
 3723 056e 9142     		cmp	r1, r2
 3724 0570 7FF4E1AE 		bne	.L297
2072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
 3725              		.loc 1 2072 0
 3726 0574 45F48002 		orr	r2, r5, #4194304
 3727              	.LVL363:
 3728              	.LBB488:
 3729              	.LBB489:
2509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3730              		.loc 2 2509 0
 3731 0578 054C     		ldr	r4, .L335+4
 3732 057a A168     		ldr	r1, [r4, #8]
 3733 057c 21F0E071 		bic	r1, r1, #29360128
 3734 0580 0A43     		orrs	r2, r2, r1
 3735              	.LVL364:
 3736 0582 A260     		str	r2, [r4, #8]
 3737 0584 D7E6     		b	.L297
 3738              	.LVL365:
 3739              	.L304:
 3740              	.LBE489:
 3741              	.LBE488:
1713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 3742              		.loc 1 1713 0
 3743 0586 0220     		movs	r0, #2
 3744 0588 D8E6     		b	.L237
 3745              	.L336:
 3746 058a 00BF     		.align	2
 3747              	.L335:
 3748 058c 00000450 		.word	1342439424
 3749 0590 00030450 		.word	1342440192
 3750 0594 00000000 		.word	SystemCoreClock
 3751 0598 632D3E05 		.word	87960931
 3752              		.cfi_endproc
 3753              	.LFE338:
 3755              		.section	.text.HAL_ADCEx_MultiModeConfigChannel,"ax",%progbits
 3756              		.align	1
 3757              		.global	HAL_ADCEx_MultiModeConfigChannel
 3758              		.syntax unified
 3759              		.thumb
 3760              		.thumb_func
 3761              		.fpu fpv4-sp-d16
 3763              	HAL_ADCEx_MultiModeConfigChannel:
 3764              	.LFB339:
2088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
2091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
2092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
2093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following
2094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters
2095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without resetting
2096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         the ADCs.
2097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
2098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure
2099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
2100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   To move back configuration from multimode to single mode, ADC must
2101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
2102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc Master ADC handle
2103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param multimode Structure of ADC multimode configuration
2104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
2106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, ADC_MultiModeTypeDef *m
2107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 3765              		.loc 1 2107 0
 3766              		.cfi_startproc
 3767              		@ args = 0, pretend = 0, frame = 104
 3768              		@ frame_needed = 0, uses_anonymous_args = 0
 3769              		@ link register save eliminated.
 3770              	.LVL366:
2108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
2110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
2111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
2112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
2115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE(multimode->Mode));
2116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (multimode->Mode != ADC_MODE_INDEPENDENT)
2117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_DMA_ACCESS_MULTIMODE(multimode->DMAAccessMode));
2119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
2120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
2123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3771              		.loc 1 2123 0
 3772 0000 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 3773 0004 012A     		cmp	r2, #1
 3774 0006 00F09880 		beq	.L352
2107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3775              		.loc 1 2107 0 discriminator 2
 3776 000a 30B4     		push	{r4, r5}
 3777              		.cfi_def_cfa_offset 8
 3778              		.cfi_offset 4, -8
 3779              		.cfi_offset 5, -4
 3780 000c 9AB0     		sub	sp, sp, #104
 3781              		.cfi_def_cfa_offset 112
 3782 000e 0346     		mov	r3, r0
 3783              		.loc 1 2123 0 discriminator 2
 3784 0010 0122     		movs	r2, #1
 3785 0012 80F85020 		strb	r2, [r0, #80]
2124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Temporary handle minimum initialization */
2126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
 3786              		.loc 1 2126 0 discriminator 2
 3787 0016 0022     		movs	r2, #0
 3788 0018 1692     		str	r2, [sp, #88]
2127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ADC_CLEAR_ERRORCODE(&tmphadcSlave);
 3789              		.loc 1 2127 0 discriminator 2
 3790 001a 1792     		str	r2, [sp, #92]
2128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 3791              		.loc 1 2129 0 discriminator 2
 3792 001c 0268     		ldr	r2, [r0]
 3793 001e 4848     		ldr	r0, .L367
 3794              	.LVL367:
 3795 0020 8242     		cmp	r2, r0
 3796 0022 3FD0     		beq	.L365
 3797 0024 0020     		movs	r0, #0
 3798 0026 0190     		str	r0, [sp, #4]
 3799              	.L340:
2130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (tmphadcSlave.Instance == NULL)
 3800              		.loc 1 2131 0
 3801 0028 0198     		ldr	r0, [sp, #4]
 3802 002a 0028     		cmp	r0, #0
 3803 002c 3ED0     		beq	.L366
 3804              	.LVL368:
 3805              	.LBB490:
 3806              	.LBB491:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3807              		.loc 2 6170 0
 3808 002e 8068     		ldr	r0, [r0, #8]
 3809              	.LVL369:
 3810 0030 10F0040F 		tst	r0, #4
 3811 0034 43D0     		beq	.L353
 3812 0036 0120     		movs	r0, #1
 3813              	.L342:
 3814              	.LVL370:
 3815              	.LBE491:
 3816              	.LBE490:
 3817              	.LBB493:
 3818              	.LBB494:
 3819 0038 9268     		ldr	r2, [r2, #8]
 3820              	.LVL371:
 3821 003a 12F0040F 		tst	r2, #4
 3822 003e 6DD1     		bne	.L343
 3823              	.LVL372:
 3824              	.LBE494:
 3825              	.LBE493:
2132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Process unlocked */
2137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     return HAL_ERROR;
2140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
2145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*  - Multimode DMA configuration                                           */
2146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /*  - Multimode DMA mode                                                    */
2147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
2148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       && (tmphadcSlave_conversion_on_going == 0UL))
 3826              		.loc 1 2149 0
 3827 0040 0028     		cmp	r0, #0
 3828 0042 6BD1     		bne	.L343
 3829              	.LVL373:
2150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Pointer to the common control register */
2152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
2153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* If multimode is selected, configure all multimode parameters.          */
2155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Otherwise, reset multimode parameters (can be used in case of          */
2156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* transition from multimode to independent mode).                        */
2157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     if (multimode->Mode != ADC_MODE_INDEPENDENT)
 3830              		.loc 1 2157 0
 3831 0044 0A68     		ldr	r2, [r1]
 3832 0046 002A     		cmp	r2, #0
 3833 0048 41D0     		beq	.L344
2158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
2159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG,
 3834              		.loc 1 2159 0
 3835 004a 3E4C     		ldr	r4, .L367+4
 3836 004c A268     		ldr	r2, [r4, #8]
 3837 004e 22F46042 		bic	r2, r2, #57344
 3838 0052 4868     		ldr	r0, [r1, #4]
 3839 0054 93F83050 		ldrb	r5, [r3, #48]	@ zero_extendqisi2
 3840 0058 40EA4530 		orr	r0, r0, r5, lsl #13
 3841 005c 0243     		orrs	r2, r2, r0
 3842 005e A260     		str	r2, [r4, #8]
 3843              	.LVL374:
 3844              	.LBB495:
 3845              	.LBB496:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3846              		.loc 2 6048 0
 3847 0060 374A     		ldr	r2, .L367
 3848 0062 9268     		ldr	r2, [r2, #8]
 3849 0064 12F0010F 		tst	r2, #1
 3850 0068 2BD0     		beq	.L354
 3851 006a 0120     		movs	r0, #1
 3852              	.L345:
 3853              	.LVL375:
 3854              	.LBE496:
 3855              	.LBE495:
 3856              	.LBB498:
 3857              	.LBB499:
 3858 006c 364A     		ldr	r2, .L367+8
 3859 006e 9268     		ldr	r2, [r2, #8]
 3860 0070 12F0010F 		tst	r2, #1
 3861 0074 27D0     		beq	.L355
 3862 0076 0122     		movs	r2, #1
 3863              	.L346:
 3864              	.LVL376:
 3865              	.LBE499:
 3866              	.LBE498:
2160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  multimode->DMAAccessMode |
2161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                  ADC_CCR_MULTI_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
2162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*    Note: Delay range depends on selected resolution:                     */
2167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 12 clock cycles for 12 bits                               */
2168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 10 clock cycles for 10 bits,                              */
2169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 8 clock cycles for 8 bits                                 */
2170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 6 clock cycles for 6 bits                                 */
2171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*    If a higher delay is selected, it will be clipped to maximum delay    */
2172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*    range                                                                 */
2173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 3867              		.loc 1 2173 0
 3868 0078 0243     		orrs	r2, r2, r0
 3869              	.LVL377:
 3870              	.LBB501:
 3871              	.LBB502:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3872              		.loc 2 6048 0
 3873 007a 3448     		ldr	r0, .L367+12
 3874 007c 8068     		ldr	r0, [r0, #8]
 3875 007e 10F0010F 		tst	r0, #1
 3876 0082 22D0     		beq	.L356
 3877 0084 0120     		movs	r0, #1
 3878              	.L347:
 3879              	.LVL378:
 3880              	.LBE502:
 3881              	.LBE501:
 3882              		.loc 1 2173 0
 3883 0086 0243     		orrs	r2, r2, r0
 3884 0088 53D1     		bne	.L357
2174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
2175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         MODIFY_REG(tmpADC_Common->CCR,
 3885              		.loc 1 2175 0
 3886 008a 2E4C     		ldr	r4, .L367+4
 3887 008c A268     		ldr	r2, [r4, #8]
 3888 008e 22F47162 		bic	r2, r2, #3856
 3889 0092 22F00F02 		bic	r2, r2, #15
 3890 0096 0868     		ldr	r0, [r1]
 3891 0098 8968     		ldr	r1, [r1, #8]
 3892              	.LVL379:
 3893 009a 0143     		orrs	r1, r1, r0
 3894 009c 0A43     		orrs	r2, r2, r1
 3895 009e A260     		str	r2, [r4, #8]
2108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 3896              		.loc 1 2108 0
 3897 00a0 0020     		movs	r0, #0
 3898 00a2 40E0     		b	.L348
 3899              	.LVL380:
 3900              	.L365:
2129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 3901              		.loc 1 2129 0 discriminator 1
 3902 00a4 00F58070 		add	r0, r0, #256
 3903 00a8 0190     		str	r0, [sp, #4]
 3904 00aa BDE7     		b	.L340
 3905              	.L366:
2134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 3906              		.loc 1 2134 0
 3907 00ac 5A6D     		ldr	r2, [r3, #84]
 3908 00ae 42F02002 		orr	r2, r2, #32
 3909 00b2 5A65     		str	r2, [r3, #84]
2137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 3910              		.loc 1 2137 0
 3911 00b4 0022     		movs	r2, #0
 3912 00b6 83F85020 		strb	r2, [r3, #80]
2139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
 3913              		.loc 1 2139 0
 3914 00ba 0120     		movs	r0, #1
 3915 00bc 36E0     		b	.L338
 3916              	.LVL381:
 3917              	.L353:
 3918              	.LBB504:
 3919              	.LBB492:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3920              		.loc 2 6170 0
 3921 00be 0020     		movs	r0, #0
 3922 00c0 BAE7     		b	.L342
 3923              	.LVL382:
 3924              	.L354:
 3925              	.LBE492:
 3926              	.LBE504:
 3927              	.LBB505:
 3928              	.LBB497:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3929              		.loc 2 6048 0
 3930 00c2 0020     		movs	r0, #0
 3931 00c4 D2E7     		b	.L345
 3932              	.LVL383:
 3933              	.L355:
 3934              	.LBE497:
 3935              	.LBE505:
 3936              	.LBB506:
 3937              	.LBB500:
 3938 00c6 0022     		movs	r2, #0
 3939 00c8 D6E7     		b	.L346
 3940              	.LVL384:
 3941              	.L356:
 3942              	.LBE500:
 3943              	.LBE506:
 3944              	.LBB507:
 3945              	.LBB503:
 3946 00ca 0020     		movs	r0, #0
 3947 00cc DBE7     		b	.L347
 3948              	.LVL385:
 3949              	.L344:
 3950              	.LBE503:
 3951              	.LBE507:
2176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                    ADC_CCR_DUAL |
2177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                    ADC_CCR_DELAY,
2178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                    multimode->Mode |
2179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                    multimode->TwoSamplingDelay
2180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****                   );
2181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
2182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
2183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     else /* ADC_MODE_INDEPENDENT */
2184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     {
2185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG);
 3952              		.loc 1 2185 0
 3953 00ce 1D48     		ldr	r0, .L367+4
 3954 00d0 8168     		ldr	r1, [r0, #8]
 3955              	.LVL386:
 3956 00d2 21F46041 		bic	r1, r1, #57344
 3957 00d6 8160     		str	r1, [r0, #8]
 3958              	.LVL387:
 3959              	.LBB508:
 3960              	.LBB509:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3961              		.loc 2 6048 0
 3962 00d8 1949     		ldr	r1, .L367
 3963 00da 8968     		ldr	r1, [r1, #8]
 3964 00dc 11F0010F 		tst	r1, #1
 3965 00e0 18D0     		beq	.L358
 3966 00e2 0120     		movs	r0, #1
 3967              	.L349:
 3968              	.LVL388:
 3969              	.LBE509:
 3970              	.LBE508:
 3971              	.LBB511:
 3972              	.LBB512:
 3973 00e4 1849     		ldr	r1, .L367+8
 3974 00e6 8968     		ldr	r1, [r1, #8]
 3975 00e8 11F0010F 		tst	r1, #1
 3976 00ec 14D0     		beq	.L359
 3977 00ee 0121     		movs	r1, #1
 3978              	.L350:
 3979              	.LVL389:
 3980              	.LBE512:
 3981              	.LBE511:
2186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 3982              		.loc 1 2190 0
 3983 00f0 0143     		orrs	r1, r1, r0
 3984              	.LVL390:
 3985              	.LBB514:
 3986              	.LBB515:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3987              		.loc 2 6048 0
 3988 00f2 1648     		ldr	r0, .L367+12
 3989 00f4 8068     		ldr	r0, [r0, #8]
 3990 00f6 10F0010F 		tst	r0, #1
 3991 00fa 00D0     		beq	.L351
 3992 00fc 0122     		movs	r2, #1
 3993              	.L351:
 3994              	.LVL391:
 3995              	.LBE515:
 3996              	.LBE514:
 3997              		.loc 1 2190 0
 3998 00fe 0A43     		orrs	r2, r1, r2
 3999 0100 19D1     		bne	.L360
2191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       {
2192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
 4000              		.loc 1 2192 0
 4001 0102 1049     		ldr	r1, .L367+4
 4002 0104 8A68     		ldr	r2, [r1, #8]
 4003 0106 22F47162 		bic	r2, r2, #3856
 4004 010a 22F00F02 		bic	r2, r2, #15
 4005 010e 8A60     		str	r2, [r1, #8]
2108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4006              		.loc 1 2108 0
 4007 0110 0020     		movs	r0, #0
 4008 0112 08E0     		b	.L348
 4009              	.LVL392:
 4010              	.L358:
 4011              	.LBB516:
 4012              	.LBB510:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4013              		.loc 2 6048 0
 4014 0114 1046     		mov	r0, r2
 4015 0116 E5E7     		b	.L349
 4016              	.LVL393:
 4017              	.L359:
 4018              	.LBE510:
 4019              	.LBE516:
 4020              	.LBB517:
 4021              	.LBB513:
 4022 0118 1146     		mov	r1, r2
 4023 011a E9E7     		b	.L350
 4024              	.LVL394:
 4025              	.L343:
 4026              	.LBE513:
 4027              	.LBE517:
2193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       }
2194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     }
2195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
2197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
2198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
2199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 4028              		.loc 1 2201 0
 4029 011c 5A6D     		ldr	r2, [r3, #84]
 4030 011e 42F02002 		orr	r2, r2, #32
 4031 0122 5A65     		str	r2, [r3, #84]
 4032              	.LVL395:
2202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 4033              		.loc 1 2203 0
 4034 0124 0120     		movs	r0, #1
 4035              	.LVL396:
 4036              	.L348:
2204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
2207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 4037              		.loc 1 2207 0
 4038 0126 0022     		movs	r2, #0
 4039 0128 83F85020 		strb	r2, [r3, #80]
 4040              	.LVL397:
 4041              	.L338:
2208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
2210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 4042              		.loc 1 2211 0
 4043 012c 1AB0     		add	sp, sp, #104
 4044              		.cfi_remember_state
 4045              		.cfi_def_cfa_offset 8
 4046              		@ sp needed
 4047 012e 30BC     		pop	{r4, r5}
 4048              		.cfi_restore 5
 4049              		.cfi_restore 4
 4050              		.cfi_def_cfa_offset 0
 4051 0130 7047     		bx	lr
 4052              	.LVL398:
 4053              	.L357:
 4054              		.cfi_restore_state
2108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4055              		.loc 1 2108 0
 4056 0132 0020     		movs	r0, #0
 4057 0134 F7E7     		b	.L348
 4058              	.LVL399:
 4059              	.L360:
 4060 0136 0020     		movs	r0, #0
 4061 0138 F5E7     		b	.L348
 4062              	.LVL400:
 4063              	.L352:
 4064              		.cfi_def_cfa_offset 0
 4065              		.cfi_restore 4
 4066              		.cfi_restore 5
2123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
 4067              		.loc 1 2123 0
 4068 013a 0220     		movs	r0, #2
 4069              	.LVL401:
 4070              		.loc 1 2211 0
 4071 013c 7047     		bx	lr
 4072              	.L368:
 4073 013e 00BF     		.align	2
 4074              	.L367:
 4075 0140 00000450 		.word	1342439424
 4076 0144 00030450 		.word	1342440192
 4077 0148 00010450 		.word	1342439680
 4078 014c 00020450 		.word	1342439936
 4079              		.cfi_endproc
 4080              	.LFE339:
 4082              		.section	.text.HAL_ADCEx_EnableInjectedQueue,"ax",%progbits
 4083              		.align	1
 4084              		.global	HAL_ADCEx_EnableInjectedQueue
 4085              		.syntax unified
 4086              		.thumb
 4087              		.thumb_func
 4088              		.fpu fpv4-sp-d16
 4090              	HAL_ADCEx_EnableInjectedQueue:
 4091              	.LFB340:
2212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
2215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable Injected Queue
2216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   This function resets CFGR register JQDIS bit in order to enable the
2217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         conversion is ongoing.
2220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
2223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnableInjectedQueue(ADC_HandleTypeDef *hadc)
2224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 4092              		.loc 1 2224 0
 4093              		.cfi_startproc
 4094              		@ args = 0, pretend = 0, frame = 0
 4095              		@ frame_needed = 0, uses_anonymous_args = 0
 4096              		@ link register save eliminated.
 4097              	.LVL402:
2225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
2226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 4098              		.loc 1 2232 0
 4099 0000 0368     		ldr	r3, [r0]
 4100              	.LVL403:
 4101              	.LBB518:
 4102              	.LBB519:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4103              		.loc 2 6170 0
 4104 0002 9A68     		ldr	r2, [r3, #8]
 4105 0004 12F0040F 		tst	r2, #4
 4106 0008 11D0     		beq	.L373
 4107 000a 0122     		movs	r2, #1
 4108              	.L370:
 4109              	.LVL404:
 4110              	.LBE519:
 4111              	.LBE518:
 4112              	.LBB521:
 4113              	.LBB522:
 4114              		.loc 2 6353 0
 4115 000c 9968     		ldr	r1, [r3, #8]
 4116 000e 11F0080F 		tst	r1, #8
 4117 0012 0ED0     		beq	.L374
 4118 0014 0121     		movs	r1, #1
 4119              	.L371:
 4120              	.LVL405:
 4121              	.LBE522:
 4122              	.LBE521:
2233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 4123              		.loc 1 2236 0
 4124 0016 72B9     		cbnz	r2, .L375
2237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 4125              		.loc 1 2237 0
 4126 0018 79B9     		cbnz	r1, .L376
2238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****      )
2239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 4127              		.loc 1 2240 0
 4128 001a DA68     		ldr	r2, [r3, #12]
 4129 001c 22F00042 		bic	r2, r2, #-2147483648
 4130 0020 DA60     		str	r2, [r3, #12]
2241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     /* Update state, clear previous result related to injected queue overflow */
2243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 4131              		.loc 1 2243 0
 4132 0022 436D     		ldr	r3, [r0, #84]
 4133 0024 23F48043 		bic	r3, r3, #16384
 4134 0028 4365     		str	r3, [r0, #84]
 4135              	.LVL406:
2244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 4136              		.loc 1 2245 0
 4137 002a 0020     		movs	r0, #0
 4138              	.LVL407:
 4139 002c 7047     		bx	lr
 4140              	.LVL408:
 4141              	.L373:
 4142              	.LBB524:
 4143              	.LBB520:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4144              		.loc 2 6170 0
 4145 002e 0022     		movs	r2, #0
 4146 0030 ECE7     		b	.L370
 4147              	.LVL409:
 4148              	.L374:
 4149              	.LBE520:
 4150              	.LBE524:
 4151              	.LBB525:
 4152              	.LBB523:
 4153              		.loc 2 6353 0
 4154 0032 0021     		movs	r1, #0
 4155 0034 EFE7     		b	.L371
 4156              	.LVL410:
 4157              	.L375:
 4158              	.LBE523:
 4159              	.LBE525:
2246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
2248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 4160              		.loc 1 2249 0
 4161 0036 0120     		movs	r0, #1
 4162              	.LVL411:
 4163 0038 7047     		bx	lr
 4164              	.LVL412:
 4165              	.L376:
 4166 003a 0120     		movs	r0, #1
 4167              	.LVL413:
2250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 4168              		.loc 1 2253 0
 4169 003c 7047     		bx	lr
 4170              		.cfi_endproc
 4171              	.LFE340:
 4173              		.section	.text.HAL_ADCEx_DisableInjectedQueue,"ax",%progbits
 4174              		.align	1
 4175              		.global	HAL_ADCEx_DisableInjectedQueue
 4176              		.syntax unified
 4177              		.thumb
 4178              		.thumb_func
 4179              		.fpu fpv4-sp-d16
 4181              	HAL_ADCEx_DisableInjectedQueue:
 4182              	.LFB341:
2254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
2256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Disable Injected Queue
2257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   This function sets CFGR register JQDIS bit in order to disable the
2258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         conversion is ongoing.
2261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
2264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableInjectedQueue(ADC_HandleTypeDef *hadc)
2265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 4183              		.loc 1 2265 0
 4184              		.cfi_startproc
 4185              		@ args = 0, pretend = 0, frame = 0
 4186              		@ frame_needed = 0, uses_anonymous_args = 0
 4187              		@ link register save eliminated.
 4188              	.LVL414:
2266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
2267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 4189              		.loc 1 2273 0
 4190 0000 0368     		ldr	r3, [r0]
 4191              	.LVL415:
 4192              	.LBB526:
 4193              	.LBB527:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4194              		.loc 2 6170 0
 4195 0002 9A68     		ldr	r2, [r3, #8]
 4196 0004 12F0040F 		tst	r2, #4
 4197 0008 11D0     		beq	.L381
 4198 000a 0122     		movs	r2, #1
 4199              	.L378:
 4200              	.LVL416:
 4201              	.LBE527:
 4202              	.LBE526:
 4203              	.LBB529:
 4204              	.LBB530:
 4205              		.loc 2 6353 0
 4206 000c 9968     		ldr	r1, [r3, #8]
 4207 000e 11F0080F 		tst	r1, #8
 4208 0012 0ED0     		beq	.L382
 4209 0014 0121     		movs	r1, #1
 4210              	.L379:
 4211              	.LVL417:
 4212              	.LBE530:
 4213              	.LBE529:
2274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 4214              		.loc 1 2277 0
 4215 0016 72B9     		cbnz	r2, .L383
2278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 4216              		.loc 1 2278 0
 4217 0018 79B9     		cbnz	r1, .L384
 4218              	.LVL418:
 4219              	.LBB532:
 4220              	.LBB533:
4336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4221              		.loc 2 4336 0
 4222 001a DA68     		ldr	r2, [r3, #12]
 4223 001c 22F00042 		bic	r2, r2, #-2147483648
 4224 0020 22F40012 		bic	r2, r2, #2097152
 4225 0024 42F00042 		orr	r2, r2, #-2147483648
 4226 0028 DA60     		str	r2, [r3, #12]
 4227              	.LVL419:
 4228              	.LBE533:
 4229              	.LBE532:
2279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****      )
2280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     LL_ADC_INJ_SetQueueMode(hadc->Instance, LL_ADC_INJ_QUEUE_DISABLE);
2282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 4230              		.loc 1 2282 0
 4231 002a 0020     		movs	r0, #0
 4232              	.LVL420:
 4233 002c 7047     		bx	lr
 4234              	.LVL421:
 4235              	.L381:
 4236              	.LBB534:
 4237              	.LBB528:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4238              		.loc 2 6170 0
 4239 002e 0022     		movs	r2, #0
 4240 0030 ECE7     		b	.L378
 4241              	.LVL422:
 4242              	.L382:
 4243              	.LBE528:
 4244              	.LBE534:
 4245              	.LBB535:
 4246              	.LBB531:
 4247              		.loc 2 6353 0
 4248 0032 0021     		movs	r1, #0
 4249 0034 EFE7     		b	.L379
 4250              	.LVL423:
 4251              	.L383:
 4252              	.LBE531:
 4253              	.LBE535:
2283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
2285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 4254              		.loc 1 2286 0
 4255 0036 0120     		movs	r0, #1
 4256              	.LVL424:
 4257 0038 7047     		bx	lr
 4258              	.LVL425:
 4259              	.L384:
 4260 003a 0120     		movs	r0, #1
 4261              	.LVL426:
2287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 4262              		.loc 1 2290 0
 4263 003c 7047     		bx	lr
 4264              		.cfi_endproc
 4265              	.LFE341:
 4267              		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 4268              		.align	1
 4269              		.global	HAL_ADCEx_DisableVoltageRegulator
 4270              		.syntax unified
 4271              		.thumb
 4272              		.thumb_func
 4273              		.fpu fpv4-sp-d16
 4275              	HAL_ADCEx_DisableVoltageRegulator:
 4276              	.LFB342:
2291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
2293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
2294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
2295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
2296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
2297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
2298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
2301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef *hadc)
2302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 4277              		.loc 1 2302 0
 4278              		.cfi_startproc
 4279              		@ args = 0, pretend = 0, frame = 0
 4280              		@ frame_needed = 0, uses_anonymous_args = 0
 4281              		@ link register save eliminated.
 4282              	.LVL427:
2303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
2304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 4283              		.loc 1 2309 0
 4284 0000 0268     		ldr	r2, [r0]
 4285              	.LVL428:
 4286              	.LBB536:
 4287              	.LBB537:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4288              		.loc 2 6048 0
 4289 0002 9368     		ldr	r3, [r2, #8]
 4290 0004 13F0010F 		tst	r3, #1
 4291 0008 07D1     		bne	.L387
 4292              	.LVL429:
 4293              	.LBE537:
 4294              	.LBE536:
 4295              	.LBB538:
 4296              	.LBB539:
5977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4297              		.loc 2 5977 0
 4298 000a 9368     		ldr	r3, [r2, #8]
 4299 000c 23F01043 		bic	r3, r3, #-1879048192
 4300 0010 23F03F03 		bic	r3, r3, #63
 4301 0014 9360     		str	r3, [r2, #8]
 4302              	.LVL430:
 4303              	.LBE539:
 4304              	.LBE538:
2310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
2312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 4305              		.loc 1 2312 0
 4306 0016 0020     		movs	r0, #0
 4307              	.LVL431:
 4308 0018 7047     		bx	lr
 4309              	.LVL432:
 4310              	.L387:
2313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
2315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 4311              		.loc 1 2316 0
 4312 001a 0120     		movs	r0, #1
 4313              	.LVL433:
2317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 4314              		.loc 1 2320 0
 4315 001c 7047     		bx	lr
 4316              		.cfi_endproc
 4317              	.LFE342:
 4319              		.section	.text.HAL_ADCEx_EnterADCDeepPowerDownMode,"ax",%progbits
 4320              		.align	1
 4321              		.global	HAL_ADCEx_EnterADCDeepPowerDownMode
 4322              		.syntax unified
 4323              		.thumb
 4324              		.thumb_func
 4325              		.fpu fpv4-sp-d16
 4327              	HAL_ADCEx_EnterADCDeepPowerDownMode:
 4328              	.LFB343:
2321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** /**
2323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @brief  Enter ADC deep-power-down mode
2324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   This mode is achieved in setting DEEPPWD bit and allows to save power
2325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         in reducing leakage currents. It is particularly interesting before
2326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         entering stop modes.
2327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   Setting DEEPPWD automatically clears ADVREGEN bit and disables the
2328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         ADC voltage regulator. This means that this API encompasses
2329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_DisableVoltageRegulator(). Additionally, the internal
2330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         calibration is lost.
2331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @note   To exit the ADC deep-power-down mode, the user is expected to
2332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API as well as to relaunch a calibration
2333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         with HAL_ADCEx_Calibration_Start() API or to re-apply a previously
2334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   *         saved calibration factor.
2335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   */
2338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnterADCDeepPowerDownMode(ADC_HandleTypeDef *hadc)
2339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** {
 4329              		.loc 1 2339 0
 4330              		.cfi_startproc
 4331              		@ args = 0, pretend = 0, frame = 0
 4332              		@ frame_needed = 0, uses_anonymous_args = 0
 4333              		@ link register save eliminated.
 4334              	.LVL434:
2340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
2341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 4335              		.loc 1 2346 0
 4336 0000 0268     		ldr	r2, [r0]
 4337              	.LVL435:
 4338              	.LBB540:
 4339              	.LBB541:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4340              		.loc 2 6048 0
 4341 0002 9368     		ldr	r3, [r2, #8]
 4342 0004 13F0010F 		tst	r3, #1
 4343 0008 09D1     		bne	.L390
 4344              	.LVL436:
 4345              	.LBE541:
 4346              	.LBE540:
 4347              	.LBB542:
 4348              	.LBB543:
5905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4349              		.loc 2 5905 0
 4350 000a 9368     		ldr	r3, [r2, #8]
 4351 000c 23F02043 		bic	r3, r3, #-1610612736
 4352 0010 23F03F03 		bic	r3, r3, #63
 4353 0014 43F00053 		orr	r3, r3, #536870912
 4354 0018 9360     		str	r3, [r2, #8]
 4355              	.LVL437:
 4356              	.LBE543:
 4357              	.LBE542:
2347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     LL_ADC_EnableDeepPowerDown(hadc->Instance);
2349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 4358              		.loc 1 2349 0
 4359 001a 0020     		movs	r0, #0
 4360              	.LVL438:
 4361 001c 7047     		bx	lr
 4362              	.LVL439:
 4363              	.L390:
2350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   else
2352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   {
2353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 4364              		.loc 1 2353 0
 4365 001e 0120     		movs	r0, #1
 4366              	.LVL440:
2354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   }
2355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** 
2356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.c **** }
 4367              		.loc 1 2357 0
 4368 0020 7047     		bx	lr
 4369              		.cfi_endproc
 4370              	.LFE343:
 4372              		.text
 4373              	.Letext0:
 4374              		.file 4 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 4375              		.file 5 "../system/include/cmsis/stm32l4xx/core_cm4.h"
 4376              		.file 6 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 4377              		.file 7 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 4378              		.file 8 "../system/include/cmsis/stm32l4xx/device/stm32l4xx.h"
 4379              		.file 9 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_def.h"
 4380              		.file 10 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_dma.h"
 4381              		.file 11 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_adc.h"
 4382              		.file 12 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.h"
 4383              		.file 13 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_flash.h"
 4384              		.file 14 "../system/include/stm32l4-hal-driver/stm32l4xx_hal.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_adc_ex.c
     /tmp/cc4icRVZ.s:18     .text.HAL_ADCEx_Calibration_Start:0000000000000000 $t
     /tmp/cc4icRVZ.s:25     .text.HAL_ADCEx_Calibration_Start:0000000000000000 HAL_ADCEx_Calibration_Start
     /tmp/cc4icRVZ.s:152    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 $t
     /tmp/cc4icRVZ.s:159    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 HAL_ADCEx_Calibration_GetValue
     /tmp/cc4icRVZ.s:191    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 $t
     /tmp/cc4icRVZ.s:198    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 HAL_ADCEx_Calibration_SetValue
     /tmp/cc4icRVZ.s:337    .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
     /tmp/cc4icRVZ.s:344    .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
     /tmp/cc4icRVZ.s:534    .text.HAL_ADCEx_InjectedStart:00000000000000ec $d
     /tmp/cc4icRVZ.s:540    .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
     /tmp/cc4icRVZ.s:547    .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
     /tmp/cc4icRVZ.s:632    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
     /tmp/cc4icRVZ.s:639    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
     /tmp/cc4icRVZ.s:857    .text.HAL_ADCEx_InjectedPollForConversion:00000000000000f8 $d
     /tmp/cc4icRVZ.s:863    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
     /tmp/cc4icRVZ.s:870    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
     /tmp/cc4icRVZ.s:1098   .text.HAL_ADCEx_InjectedStart_IT:0000000000000130 $d
     /tmp/cc4icRVZ.s:1104   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
     /tmp/cc4icRVZ.s:1111   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
     /tmp/cc4icRVZ.s:1201   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 $t
     /tmp/cc4icRVZ.s:1208   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 HAL_ADCEx_MultiModeStart_DMA
     /tmp/cc4icRVZ.s:1383   .text.HAL_ADCEx_MultiModeStart_DMA:00000000000000d8 $d
     /tmp/cc4icRVZ.s:1392   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 $t
     /tmp/cc4icRVZ.s:1399   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 HAL_ADCEx_MultiModeStop_DMA
     /tmp/cc4icRVZ.s:1673   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000124 $d
     /tmp/cc4icRVZ.s:1678   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 $t
     /tmp/cc4icRVZ.s:1685   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 HAL_ADCEx_MultiModeGetValue
     /tmp/cc4icRVZ.s:1702   .text.HAL_ADCEx_MultiModeGetValue:0000000000000008 $d
     /tmp/cc4icRVZ.s:1707   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
     /tmp/cc4icRVZ.s:1714   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
     /tmp/cc4icRVZ.s:1764   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
     /tmp/cc4icRVZ.s:1771   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/cc4icRVZ.s:1785   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 $t
     /tmp/cc4icRVZ.s:1792   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 HAL_ADCEx_InjectedQueueOverflowCallback
     /tmp/cc4icRVZ.s:1806   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 $t
     /tmp/cc4icRVZ.s:1813   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow2Callback
     /tmp/cc4icRVZ.s:1827   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 $t
     /tmp/cc4icRVZ.s:1834   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow3Callback
     /tmp/cc4icRVZ.s:1848   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 $t
     /tmp/cc4icRVZ.s:1855   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 HAL_ADCEx_EndOfSamplingCallback
     /tmp/cc4icRVZ.s:1869   .text.HAL_ADCEx_RegularStop:0000000000000000 $t
     /tmp/cc4icRVZ.s:1876   .text.HAL_ADCEx_RegularStop:0000000000000000 HAL_ADCEx_RegularStop
     /tmp/cc4icRVZ.s:1964   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 $t
     /tmp/cc4icRVZ.s:1971   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 HAL_ADCEx_RegularStop_IT
     /tmp/cc4icRVZ.s:2064   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 $t
     /tmp/cc4icRVZ.s:2071   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 HAL_ADCEx_RegularStop_DMA
     /tmp/cc4icRVZ.s:2194   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000000 $t
     /tmp/cc4icRVZ.s:2201   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000000 HAL_ADCEx_RegularMultiModeStop_DMA
     /tmp/cc4icRVZ.s:2499   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000130 $d
     /tmp/cc4icRVZ.s:2504   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
     /tmp/cc4icRVZ.s:2511   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/cc4icRVZ.s:3328   .text.HAL_ADCEx_InjectedConfigChannel:00000000000003c4 $d
     /tmp/cc4icRVZ.s:3345   .text.HAL_ADCEx_InjectedConfigChannel:00000000000003e4 $t
     /tmp/cc4icRVZ.s:3748   .text.HAL_ADCEx_InjectedConfigChannel:000000000000058c $d
     /tmp/cc4icRVZ.s:3756   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 $t
     /tmp/cc4icRVZ.s:3763   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 HAL_ADCEx_MultiModeConfigChannel
     /tmp/cc4icRVZ.s:4075   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000140 $d
     /tmp/cc4icRVZ.s:4083   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 $t
     /tmp/cc4icRVZ.s:4090   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 HAL_ADCEx_EnableInjectedQueue
     /tmp/cc4icRVZ.s:4174   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 $t
     /tmp/cc4icRVZ.s:4181   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 HAL_ADCEx_DisableInjectedQueue
     /tmp/cc4icRVZ.s:4268   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 $t
     /tmp/cc4icRVZ.s:4275   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 HAL_ADCEx_DisableVoltageRegulator
     /tmp/cc4icRVZ.s:4320   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 $t
     /tmp/cc4icRVZ.s:4327   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 HAL_ADCEx_EnterADCDeepPowerDownMode
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.stm32l4xx_hal_conf.h.24.9ebdf529a64add7ef5197540a829be93
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.b6144e50d34fc998dd4c2cfb6387cf91
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.c14bec61d389910444dd6f90923a87b3
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.stm32l4xx_hal_def.h.58.ba9880fce6c06e05c42ff3652190ba19
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc.h.158.28a9a8aed9528254d5d00c542977dfd6
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc_ex.h.22.da7044b74af98b061fec57b6c981623c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio.h.22.cdd02b3dd2d28ab2a58b80abaa62239c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio_ex.h.22.e3066224621c54896e68c044cff2946f
                           .group:0000000000000000 wm4.stm32l4xx_hal_dma.h.22.13f7e03251508cf372ae373347b36e9b
                           .group:0000000000000000 wm4.stm32l4xx_hal_cortex.h.22.cb70b059ea6d04d060ca379a6d57d1fd
                           .group:0000000000000000 wm4.stm32l4xx_ll_adc.h.22.1a01db9155ec232fb5933b76785afed0
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc.h.321.ee3f28f76fc70066e4cbbd758e576892
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc_ex.h.22.fb5e6d418a426c9b079c9adc15fee3b1
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc.h.22.e28f2dff7c14319a60cfaa8412b63a14
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc_ex.h.22.58aa3be0563eedff5893c4b663184cf2
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac.h.22.74749bf4f9405a5fbfaaf1cc4c06eba3
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac_ex.h.22.4e3cedba5893653c1d8ca689fa739e33
                           .group:0000000000000000 wm4.stm32l4xx_hal_exti.h.22.d0c18acb1f51146e775f234290c1ac27
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.22.80f6973ea14060a68f7ca21c1dd39289
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.847.7bdb45d9d57728034960e0aaf38df4fb
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.22.5cbc76724b1dba5416e985e397b92828
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c_ex.h.22.4c81bf9806badb3d50f1da26b08d305a
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.715.a3aff164d469153c75cf623f9ff49d7a
                           .group:0000000000000000 wm4.stm32l4xx_hal_iwdg.h.22.7e954cf06602114b3daf58f5ffbb9e50
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr.h.22.0049bff0a26f90119451fdfe5f426c51
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr_ex.h.22.3d1049b6827a186d471882b21e35998d
                           .group:0000000000000000 wm4.stm32l4xx_hal_rng.h.22.3da3130b715b6ad6f9d8d49653bdfddb
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.22.21d64301309237f9b9255a8c80902f7c
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc_ex.h.22.6c248c3dbae3d1f0fefc4b9faaa2cd0b
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.977.b3b3c98b50a30362b61b120ec4fce236
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim.h.22.6c7398a1c55179e1de4bfd7d5a7564ac
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim_ex.h.22.1a7b532f5010a085c12eee7e9c7b0c21
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart.h.22.5f632bd044c516c02fe0b49488f063f8
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart_ex.h.22.de11c23890d64b2968c97dd6f5dae21a
                           .group:0000000000000000 wm4.stm32l4xx_hal.h.76.993cab68f7f350dd05a21a919b3be96f

UNDEFINED SYMBOLS
ADC_Disable
ADC_Enable
ADC_ConversionStop
HAL_GetTick
HAL_DMA_Start_IT
ADC_DMAConvCplt
ADC_DMAHalfConvCplt
ADC_DMAError
HAL_DMA_Abort
SystemCoreClock
