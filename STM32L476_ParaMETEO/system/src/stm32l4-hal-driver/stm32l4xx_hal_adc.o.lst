   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_ADC_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_ADC_MspInit:
  26              	.LFB319:
  27              		.file 1 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c"
   1:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
   2:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   ******************************************************************************
   3:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @file    stm32l4xx_hal_adc.c
   4:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @author  MCD Application Team
   5:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          peripheral:
   8:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *           + Operation functions
  11:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *           + Control functions
  14:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *           + State functions
  17:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *             ++ ADC state machine management
  18:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          "stm32l4xx_hal_adc_ex.c".
  21:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *
  22:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   @verbatim
  23:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   ==============================================================================
  24:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                      ##### ADC peripheral features #####
  25:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   ==============================================================================
  26:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   [..]
  27:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  28:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  29:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  30:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       analog watchdog or overrun events.
  31:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  32:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  33:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  34:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  35:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  36:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  37:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  38:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  39:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  40:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  41:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  42:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  43:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  44:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  45:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  46:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  47:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  48:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  49:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) ADC calibration
  50:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  51:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) ADC conversion of regular group.
  52:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  53:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  54:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  55:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  56:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       Vdda or to an external voltage reference).
  57:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  58:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  59:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                      ##### How to use this driver #####
  60:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   ==============================================================================
  61:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]
  62:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  63:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  64:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      ============================================================
  65:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      [..]
  66:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  67:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) Enable the ADC interface
  68:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  69:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  70:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  71:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  72:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  73:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  74:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from APB clock
  75:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    or asynchronous clock derived from system clock, PLLSAI1 or the PLLSAI2
  76:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    running up to 80MHz.
  77:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  78:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****              (+++) Example:
  79:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  80:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
  81:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  82:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  83:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
  84:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  85:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  86:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
  87:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  88:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  89:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  90:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  91:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  92:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
  93:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  94:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  95:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  96:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               using function HAL_GPIO_Init()
  97:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
  98:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
  99:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               ADCx_IRQHandler().
 104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      ================================================================
 116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      [..]
 117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         using function HAL_ADC_Init().
 121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         monitored, thresholds, ...)
 128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      *** Execution of ADC conversions ***
 131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      ====================================
 132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      [..]
 133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         conversion accuracy
 136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         transfer by DMA.
 140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         (++) ADC conversion by polling:
 142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start()
 144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results
 147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         (++) ADC conversion by interruption:
 152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 (this function must be implemented in user program)
 157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results
 158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 (these functions must be implemented in user program)
 168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 destination variable address.
 170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      [..]
 174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      *** Deinitialization of ADC ***
 182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      ============================================================
 183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      [..]
 184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) Disable the ADC interface
 186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         (++) ADC clock disable
 190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****              (+++) Example:
 192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
 194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
 199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          (++) Deinitialize the DMA
 208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]
 213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     *** Callback registration ***
 215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     =============================================
 216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]
 217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      to register an interrupt callback.
 222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]
 223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      and a pointer to the user callback function.
 238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]
 239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      weak function.
 242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]
 243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      and the Callback ID.
 246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      This function allows to reset following callbacks:
 247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      [..]
 259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]
 267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      [..]
 271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]
 277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      [..]
 282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      are set to the corresponding weak functions.
 286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   @endverbatim
 288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   ******************************************************************************
 289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @attention
 290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *
 291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * All rights reserved.</center></h2>
 293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *
 294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
 296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *
 299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   ******************************************************************************
 300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #include "stm32l4xx_hal.h"
 304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /** @addtogroup STM32L4xx_HAL_Driver
 306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @{
 307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /** @defgroup ADC ADC
 310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief ADC HAL module driver
 311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @{
 312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @{
 321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                              ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                              ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                              ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields of paramete
 327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /*   disable settling time, ...).                                             */
 330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /*   maximum prescalers.                                                      */
 332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
 339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /*   - System clock / ADC clock <= 4096 (hypothesis of maximum clock ratio)   */
 340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /*   Calculation: 653 * 4096 * 256 CPU clock cycles max                       */
 342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (653UL * 4096UL * 256UL)  /*!< ADC conversion completion
 344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
 347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @}
 348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @{
 357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *
 362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** @verbatim
 363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****  ===============================================================================
 364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****  ===============================================================================
 366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) De-initialize the ADC.
 369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** @endverbatim
 370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @{
 371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
 374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         in header of this file).
 379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         before HAL_ADC_Init().
 386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         only if all ADCs are disabled.
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         without  disabling the other ADCs.
 398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status
 400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
 403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpCFGR;
 405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (hadc == NULL)
 412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DFSDMCFG_MODE(hadc));
 422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
 423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Init the low level hardware */
 470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
 472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Init the low level hardware */
 473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Set ADC error code to none */
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Initialize Lock */
 480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Disable ADC deep power down mode */
 487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       wait_loop_index--;
 506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
 532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Set ADC state */
 534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - clock configuration                                                 */
 543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*                                                                      */
 549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*                                                                      */
 553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* parameters):                                                         */
 558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* start.                                                                 */
 590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*       software start.                                                  */
 593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                  );
 598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update Configuration Register CFGR */
 601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
 607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        )
 614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
 616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Configuration of Oversampler:                                      */
 629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*  - Oversampling Ratio                                              */
 630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*  - Right bit shift                                                 */
 631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*  - Triggered mode                                                  */
 632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                           */
 633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2,
 634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSS  |
 636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_TROVS |
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_ROVSM,
 638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.Ratio         |
 640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset
 643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                   );
 644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
 646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
 668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Initialize the ADC state */
 673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
 677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
 685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
 689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         common group is still running.
 700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status
 705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
 708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (hadc == NULL)
 712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Stop potential conversion on going */
 723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* injected sequence.                                                       */
 731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Disable the ADC peripheral */
 737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Change ADC state */
 743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register IER */
 755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register ISR */
 762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register CR */
 769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
 771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      no direct reset applicable.
 772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      Update CR register to reset value where doable by software */
 773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register CFGR */
 777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
 778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register CFGR2 */
 781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
 782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register SMPR1 */
 785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
 786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register SMPR2 */
 788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
 791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register TR1 */
 793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register TR2 */
 796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register TR3 */
 799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register SQR1 */
 802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register SQR2 */
 806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
 807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register SQR3 */
 810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register SQR4 */
 814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register DR */
 819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register OFR1 */
 822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register OFR2 */
 824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register OFR3 */
 826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register OFR4 */
 828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register AWD2CR */
 834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register AWD3CR */
 837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register DIFSEL */
 840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register CALFACT */
 843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
 847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
 849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      ADCs are disabled.   */
 850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
 853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
 854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA,
 855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
 856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
 857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     */
 859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
 860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripherals instances        */
 863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* sharing the same common ADC instance: ADC state is forced to           */
 864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* a similar state as after device power-on.                              */
 865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Note: A possible implementation is to add RCC bus reset of ADC         */
 866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* (for example, using macro                                              */
 867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
 868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
 869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (hadc->MspDeInitCallback == NULL)
 871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* DeInit the low level hardware */
 876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->MspDeInitCallback(hadc);
 877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
 878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* DeInit the low level hardware */
 879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Set ADC error code to none */
 884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
 887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
 888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Process unlocked */
 894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
 897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
 901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval None
 904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
  28              		.loc 1 906 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****    */
 913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
  34              		.loc 1 913 0
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE319:
  39              		.section	.text.HAL_ADC_Init,"ax",%progbits
  40              		.align	1
  41              		.global	HAL_ADC_Init
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HAL_ADC_Init:
  48              	.LFB317:
 402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  49              		.loc 1 402 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 8
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              	.LVL1:
  54 0000 30B5     		push	{r4, r5, lr}
  55              		.cfi_def_cfa_offset 12
  56              		.cfi_offset 4, -12
  57              		.cfi_offset 5, -8
  58              		.cfi_offset 14, -4
  59 0002 83B0     		sub	sp, sp, #12
  60              		.cfi_def_cfa_offset 24
  61              	.LVL2:
 406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
  62              		.loc 1 406 0
  63 0004 0023     		movs	r3, #0
  64 0006 0193     		str	r3, [sp, #4]
 411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
  65              		.loc 1 411 0
  66 0008 0028     		cmp	r0, #0
  67 000a 00F0F780 		beq	.L24
  68 000e 0446     		mov	r4, r0
 450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
  69              		.loc 1 450 0
  70 0010 436D     		ldr	r3, [r0, #84]
  71 0012 13B3     		cbz	r3, .L33
  72              	.LVL3:
  73              	.L4:
 484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
  74              		.loc 1 484 0
  75 0014 2368     		ldr	r3, [r4]
  76              	.LVL4:
  77              	.LBB342:
  78              	.LBB343:
  79              		.file 2 "../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h"
   1:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
   2:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ******************************************************************************
   3:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @file    stm32l4xx_ll_adc.h
   4:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @author  MCD Application Team
   5:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ******************************************************************************
   7:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @attention
   8:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
   9:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
  12:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
  17:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ******************************************************************************
  18:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
  19:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  20:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #ifndef STM32L4xx_LL_ADC_H
  22:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define STM32L4xx_LL_ADC_H
  23:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  24:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #ifdef __cplusplus
  25:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** extern "C" {
  26:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif
  27:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  28:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #include "stm32l4xx.h"
  30:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  31:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @addtogroup STM32L4xx_LL_Driver
  32:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
  33:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
  34:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  35:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  36:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  37:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
  39:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
  40:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  41:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  44:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
  47:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
  48:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  49:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  50:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  51:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - sequencer register offset                                                */
  52:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  53:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  54:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  55:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  56:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  57:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  58:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  59:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  60:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  61:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  62:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  63:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  64:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  65:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  66:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  67:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  68:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  69:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  70:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  71:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  72:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  73:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  74:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  75:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  76:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  77:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  78:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  79:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  80:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  81:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  82:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  83:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  84:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  85:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  86:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  87:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  88:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  89:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - data register offset                                                     */
  90:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  91:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  92:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  93:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  94:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  95:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  96:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  97:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  98:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
  99:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
 100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ1" p
 107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ2" p
 108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ3" p
 109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ4" p
 110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - regular trigger source                                                   */
 116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - injected trigger source                                                  */
 144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*   selection on groups.                                                     */
 293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* ADC registers bits positions */
 333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Value equivalent to bitfield "ADC_CFGR_RES" po
 334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1SGL
 335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1EN"
 336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Value equivalent to bitfield "ADC_CFGR_JAWD1EN
 337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* ADC registers bits groups */
 341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* ADC internal channels related definitions */
 345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Temperature sensor */
 349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30L)           /* Internal temperature sen
 352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #else
 355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Internal temperature sen
 356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is applied.
 373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Pointer to register address
 376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and multimode
 394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         disabled.
 400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** typedef struct
 402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
 403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** typedef struct
 451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
 452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (functions with prefix "REG").
 475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** typedef struct
 489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
 490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              data preserved or overwritten.
 523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** typedef struct
 549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
 550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* DMA transfer.                                                              */
 655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
 787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
 790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC3)
 793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC3        (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC3        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
 796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
 797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DFSDM_TRANSFER ADC group regular - DFSDM transfer of ADC conversion dat
 856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_NONE     (0x00000000UL)          /*!< ADC conversions are not tra
 859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_ENABLE   (ADC_CFGR_DFSDMCFG)     /*!< ADC conversion data are tra
 860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
 864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
 866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
 867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
 870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
 871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif
 875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
 889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
 898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
 899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
 900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
 901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
 902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
 903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
 913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
 914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
 915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
 917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
 918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
 919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
 928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
 929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
 930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
 931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
 932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
 933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
 934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
 935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
 936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
 937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
 938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
 939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
 940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
 941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
 942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
 943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
 948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
 951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
 952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
 957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
 972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
 975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
 976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
 977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
 982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
 985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
 986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
 991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
 992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
 994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
 995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
 996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
 997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
 998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
 999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
1140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK)   
1141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_INJ          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK)   
1144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_INJ          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
1147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK)   
1148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK)   
1151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC3)
1154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK)   
1155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK)   
1158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
1161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
1162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                                     /*!
1248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (                 ADC_CCR_MDMA_1                 ) /*!
1249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (                 ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1                 ) /*!
1251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                          
1260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      A
1261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1    
1262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | A
1263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                      
1264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | A
1265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1    
1266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | A
1267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                        
1268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | A
1269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1    
1270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | A
1271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
1286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEGACY ADC literals legacy naming
1288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SW_START           (LL_ADC_REG_TRIG_SOFTWARE)
1291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC1       (LL_ADC_REG_TRIG_EXT_TIM1_CH1)
1292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC2       (LL_ADC_REG_TRIG_EXT_TIM1_CH2)
1293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC3       (LL_ADC_REG_TRIG_EXT_TIM1_CH3)
1294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CC2       (LL_ADC_REG_TRIG_EXT_TIM2_CH2)
1295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CC4       (LL_ADC_REG_TRIG_EXT_TIM3_CH4)
1296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CC4       (LL_ADC_REG_TRIG_EXT_TIM4_CH4)
1297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SW_START           (LL_ADC_INJ_TRIG_SOFTWARE)
1299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CC4       (LL_ADC_INJ_TRIG_EXT_TIM1_CH4)
1300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CC1       (LL_ADC_INJ_TRIG_EXT_TIM2_CH1)
1301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC1       (LL_ADC_INJ_TRIG_EXT_TIM3_CH1)
1302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC3       (LL_ADC_INJ_TRIG_EXT_TIM3_CH3)
1303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC4       (LL_ADC_INJ_TRIG_EXT_TIM3_CH4)
1304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CC4       (LL_ADC_INJ_TRIG_EXT_TIM8_CH4)
1305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_NONE        (LL_ADC_OVS_SHIFT_NONE)
1307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_1           (LL_ADC_OVS_SHIFT_RIGHT_1)
1308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_2           (LL_ADC_OVS_SHIFT_RIGHT_2)
1309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_3           (LL_ADC_OVS_SHIFT_RIGHT_3)
1310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_4           (LL_ADC_OVS_SHIFT_RIGHT_4)
1311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_5           (LL_ADC_OVS_SHIFT_RIGHT_5)
1312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_6           (LL_ADC_OVS_SHIFT_RIGHT_6)
1313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_7           (LL_ADC_OVS_SHIFT_RIGHT_7)
1314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_8           (LL_ADC_OVS_SHIFT_RIGHT_8)
1315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         not timeout values.
1324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         above each literal definition.
1326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       not timeout values.                                                  */
1331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       STM32 series:                                                        */
1336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*         cycles                                                             */
1343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*         configuration.                                                     */
1345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
1352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
1358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)  /*!< Delay required between ADC end of cali
1373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Write a value in ADC register
1394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be written
1396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
1398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Read a value in ADC register
1403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be read
1405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Register value
1406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
1410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
1414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Example:
1420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           will return decimal number "4".
1422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number is returned, either defined with number
1424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                                       \
1468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                                       \
1470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                                       \
1471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                                       \
1472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                                       \
1474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from number in decimal format.
1479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Example:
1480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
1527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                                               
1528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                                               
1532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                                               
1533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                                               
1534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                                               
1538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC internal channel:
1545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a value defined from parameter definition of
1611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from ADC registers.
1614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is
1685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined (ADC1) && defined (ADC2) && defined (ADC3)
1711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                           \
1714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                           \
1718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                           \
1719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     (                                                                          \
1721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
1722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     )                                                                          \
1725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     :                                                                          \
1726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__ADC_INSTANCE__) == ADC3) ?                                             \
1727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      (                                                                         \
1728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                        \
1729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                        \
1730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                        \
1731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC3) ||                        \
1732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC3)                           \
1733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      )                                                                         \
1734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      :                                                                         \
1735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      (0UL)                                                                     \
1736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined (ADC1) && defined (ADC2)
1738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (                                                                           \
1741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                           \
1745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                           \
1746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     (                                                                          \
1748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
1749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     )                                                                          \
1752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     :                                                                          \
1753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     (0UL)                                                                      \
1754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined (ADC1)
1756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (                                                                            \
1758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)       ||                            \
1761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1)    ||                            \
1762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2)                                  \
1763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* defined (ADC1) && defined (ADC2) && defined (ADC3) */
1765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example:
1772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
1824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
1827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
1830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
1833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
1836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
1839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
1842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
1843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
1845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
1846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
1848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
1849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
1851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
1852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
1854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
1855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
1857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
1858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
1860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
1861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
1863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
1864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
1866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
1867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
1869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
1870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
1872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
1873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
1875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
1876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
1878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
1879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
1881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
1882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
1883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
1884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
1885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
1886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
1887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
1888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
1889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
1890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
1891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
1892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
1893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
1894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
1895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
1896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
1897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
1898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
1899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
1900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
1901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
1902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
1903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
1904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
1905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
1906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
1907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
1908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
1909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
1910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
1911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
1915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
1920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
1921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                                               
1922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
1923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
1924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                                               
1925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
1926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
1927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *            (< ADCx param >,
1938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *            );
1940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *            );
1962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
1985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
1986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
1988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
1989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
1990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
1991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
1992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
1993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and differential ended to 0x2A:
1994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
1995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC1,
1996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
1997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
1998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
1999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC common instance).
2027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         considered as master instances (do not depend to
2031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         any other ADC instance).
2032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC2)
2036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ((((__ADCx__) == ADC2))?                                                   \
2038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (ADC1)                                                                    \
2039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    :                                                                         \
2040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    (__ADCx__)                                                                \
2041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   )
2042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #else
2043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (__ADCx__)
2045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC2 */
2046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval ADC common register instance
2057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (ADC123_COMMON)
2061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (ADC12_COMMON)
2064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #else
2065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (ADC1_COMMON)
2067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC common instance are disabled.
2072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are disabled.
2083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled.
2085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
2090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #else
2096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (refer to reference manual).
2106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a resolution to another resolution.
2119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** (((__DATA__)                                                                 \
2138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** )
2141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                       (unit: digital value).
2151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                       __ADC_DATA__,\
2160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** )
2164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Legacy define */
2166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_VOLTAGE()  __LL_ADC_CALC_DATA_TO_VOLTAGE()
2167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         reference VrefInt.
2172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         connected to pin Vref+.
2176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** )
2200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temperature sensor.
2232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                            \
2249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                   (__ADC_RESOLUTION__),          \
2251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                   LL_ADC_RESOLUTION_12B)         \
2252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                  * (__VREFANALOG_VOLTAGE__))                                     \
2253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                 / TEMPSENSOR_CAL_VREFANALOG)                                     \
2254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****  ) + TEMPSENSOR_CAL1_TEMP                                                        \
2258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** )
2259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (refer to device datasheet).
2265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                   (unit: digital value)
2270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  datasheet typical values.
2277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "Avg_Slop
2291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "V30" (co
2293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
2310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     -                                                                       \
2314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****    )                                                                        \
2317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
2318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
2319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** )
2320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
2323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
2327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
2333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
2337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example:
2352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
2369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval ADC register address
2371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t data_reg_addr;
2376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   {
2379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     /* Retrieve address of register DR */
2380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
2381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   }
2382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   {
2384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     /* Retrieve address of register CDR */
2385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   }
2387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return data_reg_addr;
2389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #else
2391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   (void)(Register);
2395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Retrieve address of register DR */
2397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
2398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
2403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
2407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         must be respected.
2414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
2415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Add paths to the current configuration.
2516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
2533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Remove paths to the current configuration.
2551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
2595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
2599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without having to perform a new calibration using
2606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         requires their calibration).
2613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         To perform this processing, use helper macro
2617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on group regular.
2622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
2662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
2663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
2664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC resolution.
2668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC resolution.
2690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
2714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
2723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
2730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
2738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           other conversion.
2752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           applications.
2756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC channel.
2780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
2785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
2794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           other conversion.
2808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           applications.
2812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC channel.
2836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
2837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
2845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
2849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
2850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
2851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
2852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           or group injected)
2853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
2854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           converted data).
2855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
2856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are set to 0.
2858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
2859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
2860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
2861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
2862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
2864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
2869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
2870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
2871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
2872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
2873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
2874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
2875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
2876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
2877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
2878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
2879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
2880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
2916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
2925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
2926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
2927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
2928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
2929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
2930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
2932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
2933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
2934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
2935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
2936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
2937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
2938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
2939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
2940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or group injected)
2941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
2949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
2951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
2955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
2956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
2957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
2958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
2994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         converted data).
3017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are set to 0.
3020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         force offset state disable or enable
3042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              OffsetState);
3072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         offset state disabled or enabled.
3077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(ADC_TypeDef *ADCx)
3128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
3135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
3139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (equivalent to
3193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****          );
3233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or external.
3238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are configurable.
3293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             highest channel number).
3311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are configurable.
3352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             highest channel number).
3370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number of ranks.
3403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number of ranks.
3435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
3458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         enabled separately.
3469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
3475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
3476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
3477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
3478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
3479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
3480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
3481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
3482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
3483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
3484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
3485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
3486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
3487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
3488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
3489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
3490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
3538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
3552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
3555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
3559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
3578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
3580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
3582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
3583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
3584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
3585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
3586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
3587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
3588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
3589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
3590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
3591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
3592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
3593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
3594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
3595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
3596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
3597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
3645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
3658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
3660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
3662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
3663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
3664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                    );
3665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
3680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
3689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
3698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
3706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode:
3713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
3728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
3735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
3736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
3746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode:
3753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
3768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
3771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
3772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
3781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
3784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer to DFSDM.
3786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   DFSDM transfer cannot be used if DMA transfer is enabled.
3787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To configure DFSDM source address (peripheral address),
3788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use the same function as for DMA transfer:
3789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_DMA_GetRegAddr().
3790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  DFSDMTransfer This parameter can be one of the following values:
3797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDFSDMTransfer(ADC_TypeDef *ADCx, uint32_t DFSDMTransfer)
3802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DFSDMCFG, DFSDMTransfer);
3804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer to DFSDM.
3808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDFSDMTransfer(ADC_TypeDef *ADCx)
3815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DFSDMCFG));
3817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
3819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         other devices without this feature have a behavior
3825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         equivalent to data overwritten.
3826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
3833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
3834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
3843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
3849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
3857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
3861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
3864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
3865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
3869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
3877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
3884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
3885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
3909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
3913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
3916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (equivalent to
3919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
3920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
3921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
3924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
3925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
3946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
3948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
3951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
3952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
3954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
3957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
3958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****          );
3959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
3963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****             or external
3964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
3965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
3967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
3968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
3975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
3979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
3980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
3982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
3985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
3988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
3989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
3990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
3991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
3992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
3994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
3995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
3996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
3997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
3998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
3999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
4015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function retrieves:
4041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number of ranks.
4063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         number of ranks.
4081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence rank.
4095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         enabled separately.
4100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sequence rank.
4171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
4181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
4183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
4233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                    );
4242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on ADC group injected.
4253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         independent trigger.
4256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         from ADC group regular.
4261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - sequencer length
4298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If contexts queue is disabled:
4300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - only 1 sequence can be configured
4301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           and is active perpetually.
4302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If contexts queue is enabled:
4303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           into the queue).
4314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
4342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         contexts queue.
4357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - sequencer length
4360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         cannot be used):
4365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         enabled separately.
4374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
4384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
4413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
4414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
4420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
4458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
4496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
4534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
4574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
4575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
4576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
4577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
4578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
4579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
4580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
4581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
4583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
4584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
4585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
4586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
4587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
4588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
4589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
4591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
4592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
4593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
4594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
4595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
4596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_JSQR_JL,
4597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
4598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
4599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              SequencerNbRanks
4604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****             );
4605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
4609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
4612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
4613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
4617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
4621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         converted:
4622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
4623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
4624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         setting).
4625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
4626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TS_temp, ...).
4627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
4634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
4635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is required.
4636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
4637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
4642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
4643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
4644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
4645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
4646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
4647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
4648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
4649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
4650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
4651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
4652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
4653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
4654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
4655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
4656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
4657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
4658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
4659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
4660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
4700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
4715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
4717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
4718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
4721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
4723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
4729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
4739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
4740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
4741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
4742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
4743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
4744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
4745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
4746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
4747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
4748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
4749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
4750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
4751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
4752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
4753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
4754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
4755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
4756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
4757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
4806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
4811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
4813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
4816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
4817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                    );
4818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
4822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC channel.
4823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
4824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on ADC group regular or injected.
4825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
4826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
4827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
4828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
4829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
4838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
4839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
4840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
4843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
4844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
4846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
4864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
4865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
4866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
4867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
4869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
4871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
4872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
4873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
4874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
4875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
4876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
4880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC channel.
4881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
4884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
4885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
4886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
4887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
4896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
4897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
4899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
4917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
4919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
4920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
4921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
4922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
4925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
4928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
4929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
4930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
4931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
4932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
4933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
4934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
4935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
4936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled.
4937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
4938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
4939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
4940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         instance:
4942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
4945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
4947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             be selected. For example:
4952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
4955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
4959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
4960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
4961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
4963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
4966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
4967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
4968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
4969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
4970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
4971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
4977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
4978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
4979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
4980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
4981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
4982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
4983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
4984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
4985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
4986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
4987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
4988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
4989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
4990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
4991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
4992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
4993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
4994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
4995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
4996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
4997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
4998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
4999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
5042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
5043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
5044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
5045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
5046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
5047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
5048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
5049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
5050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
5051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
5052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
5053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
5054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
5055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
5056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
5057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
5058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
5059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
5060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
5061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
5062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
5063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
5064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
5065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
5066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
5067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
5071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
5073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
5083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
5099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
5101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           one channel.
5104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         instance:
5106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
5141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             by bitfield.
5146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
5209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.
5210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC
5215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* or a single channel.                                                     */
5222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   {
5224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     {
5226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       {
5228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  )
5232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                 );
5234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       }
5235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       else
5236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       {
5237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                 );
5241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       }
5242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     }
5243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     else
5244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     {
5245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       {
5247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                 );
5251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       }
5252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       else
5253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       {
5254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                 );
5260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****       }
5261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****     }
5262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   }
5263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return AnalogWDMonitChannels;
5265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
5269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         high and low.
5270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
5271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         instance:
5277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
5305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
5306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
5307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
5308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
5309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
5310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
5316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
5317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
5321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
5323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
5324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* "AWDy".                                                                  */
5325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
5326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
5328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
5331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
5332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         high or low.
5337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
5338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
5339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         instance:
5344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
5373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
5374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
5375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
5376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
5377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
5386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
5389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
5390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
5393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
5394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
5398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              AWDThresholdsHighLow,
5401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
5402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
5406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
5407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         concatenated.
5408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
5409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
5410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         using helper macro:
5411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
5412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
5415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
5416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
5417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
5418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
5419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
5420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
5421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
5430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
5431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
5433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
5436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
5439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
5440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
5441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
5445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
5448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
5449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
5453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
5465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
5466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
5467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
5469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
5477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
5479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
5483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
5491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
5492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
5493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
5502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
5504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
5508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on group regular.
5518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
5519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
5520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
5521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
5522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
5524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
5529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
5531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
5535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
5542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
5548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
5550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling
5554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
5555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
5556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ratio
5557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - shift
5558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
5563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
5564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
5566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
5575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
5587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
5589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
5593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
5595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
5597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
5607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
5609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
5613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
5615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
5617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
5628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
5630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
5634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
5637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
5638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
5641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
5643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro
5652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
5654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
5657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
5668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
5670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
5674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
5679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
5692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
5694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
5698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
5729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
5730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
5731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
5732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
5735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
5743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
5745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
5749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
5778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
5779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
5789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
5791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
5795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
5796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
5797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
5798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
5799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
5800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
5805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
5807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
5810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
5823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
5829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
5831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
5835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
5836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *
5852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
5857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
5859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
5861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
5864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Leg_Functions Configuration of ADC alternate functions name
5866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
5867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* Old functions name kept for legacy purpose, to be replaced by the          */
5869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /* current functions name.                                                    */
5870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   LL_ADC_REG_SetTriggerSource(ADCx, TriggerSource);
5873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   LL_ADC_INJ_SetTriggerSource(ADCx, TriggerSource);
5877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
5881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
5884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
5885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
5889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
5897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
5901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
5908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
5912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
5920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
5924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
5929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
5933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
5934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
5936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
5938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
  80              		.loc 2 5939 0
  81 0016 9A68     		ldr	r2, [r3, #8]
  82 0018 12F0005F 		tst	r2, #536870912
  83 001c 05D0     		beq	.L5
  84              	.LVL5:
  85              	.LBE343:
  86              	.LBE342:
  87              	.LBB344:
  88              	.LBB345:
5928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
  89              		.loc 2 5928 0
  90 001e 9A68     		ldr	r2, [r3, #8]
  91 0020 22F02042 		bic	r2, r2, #-1610612736
  92 0024 22F03F02 		bic	r2, r2, #63
  93 0028 9A60     		str	r2, [r3, #8]
  94              	.LVL6:
  95              	.L5:
  96              	.LBE345:
  97              	.LBE344:
 494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
  98              		.loc 1 494 0
  99 002a 2268     		ldr	r2, [r4]
 100              	.LVL7:
 101              	.LBB346:
 102              	.LBB347:
5940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
5944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
5945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
5946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
5947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
5948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
5949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
5953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
5957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
5964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
5968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
5970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
5972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
5974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
5976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
5978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
5982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
5983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
5985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
5986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
5987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
5988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 103              		.loc 2 5988 0
 104 002c 9368     		ldr	r3, [r2, #8]
 105 002e 13F0805F 		tst	r3, #268435456
 106 0032 1FD1     		bne	.L6
 107              	.LVL8:
 108              	.LBE347:
 109              	.LBE346:
 110              	.LBB348:
 111              	.LBB349:
5961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 112              		.loc 2 5961 0
 113 0034 9368     		ldr	r3, [r2, #8]
 114 0036 23F01043 		bic	r3, r3, #-1879048192
 115 003a 23F03F03 		bic	r3, r3, #63
 116 003e 43F08053 		orr	r3, r3, #268435456
 117 0042 9360     		str	r3, [r2, #8]
 118              	.LVL9:
 119              	.LBE349:
 120              	.LBE348:
 502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 121              		.loc 1 502 0
 122 0044 6E4B     		ldr	r3, .L37
 123 0046 1B68     		ldr	r3, [r3]
 124 0048 9B09     		lsrs	r3, r3, #6
 125 004a 6E4A     		ldr	r2, .L37+4
 126 004c A2FB0323 		umull	r2, r3, r2, r3
 127 0050 9B09     		lsrs	r3, r3, #6
 128 0052 0133     		adds	r3, r3, #1
 129 0054 5B00     		lsls	r3, r3, #1
 130 0056 0193     		str	r3, [sp, #4]
 503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 131              		.loc 1 503 0
 132 0058 09E0     		b	.L7
 133              	.LVL10:
 134              	.L33:
 473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 135              		.loc 1 473 0
 136 005a FFF7FEFF 		bl	HAL_ADC_MspInit
 137              	.LVL11:
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 138              		.loc 1 477 0
 139 005e 0023     		movs	r3, #0
 140 0060 A365     		str	r3, [r4, #88]
 480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 141              		.loc 1 480 0
 142 0062 84F85030 		strb	r3, [r4, #80]
 143 0066 D5E7     		b	.L4
 144              	.L8:
 505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 145              		.loc 1 505 0
 146 0068 019B     		ldr	r3, [sp, #4]
 147 006a 013B     		subs	r3, r3, #1
 148 006c 0193     		str	r3, [sp, #4]
 149              	.L7:
 503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 150              		.loc 1 503 0
 151 006e 019B     		ldr	r3, [sp, #4]
 152 0070 002B     		cmp	r3, #0
 153 0072 F9D1     		bne	.L8
 154              	.L6:
 512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 155              		.loc 1 512 0
 156 0074 2368     		ldr	r3, [r4]
 157              	.LVL12:
 158              	.LBB350:
 159              	.LBB351:
 160              		.loc 2 5988 0
 161 0076 9A68     		ldr	r2, [r3, #8]
 162 0078 12F0805F 		tst	r2, #268435456
 163 007c 40F08980 		bne	.L25
 164              	.LVL13:
 165              	.LBE351:
 166              	.LBE350:
 515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 167              		.loc 1 515 0
 168 0080 626D     		ldr	r2, [r4, #84]
 169 0082 42F01002 		orr	r2, r2, #16
 170 0086 6265     		str	r2, [r4, #84]
 518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 171              		.loc 1 518 0
 172 0088 A26D     		ldr	r2, [r4, #88]
 173 008a 42F00102 		orr	r2, r2, #1
 174 008e A265     		str	r2, [r4, #88]
 175              	.LVL14:
 520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 176              		.loc 1 520 0
 177 0090 0120     		movs	r0, #1
 178              	.LVL15:
 179              	.L9:
 180              	.LBB352:
 181              	.LBB353:
5989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
5990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
5991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
5992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
5993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
5994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
5995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC conversion start.
5996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
5997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
5998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
5999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADEN);
6015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADDIS);
6035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
6069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
6071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         requires their calibration).
6074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
6108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
6112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           starts immediately.
6120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTART);
6140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTP);
6160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
6169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 182              		.loc 2 6170 0
 183 0092 9A68     		ldr	r2, [r3, #8]
 184 0094 12F0040F 		tst	r2, #4
 185 0098 7DD0     		beq	.L26
 186 009a 0121     		movs	r1, #1
 187              	.L10:
 188              	.LVL16:
 189              	.LBE353:
 190              	.LBE352:
 529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 191              		.loc 1 529 0
 192 009c 626D     		ldr	r2, [r4, #84]
 193 009e 12F0100F 		tst	r2, #16
 194 00a2 40F0A480 		bne	.L11
 530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
 195              		.loc 1 530 0
 196 00a6 0029     		cmp	r1, #0
 197 00a8 40F0A180 		bne	.L11
 534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 198              		.loc 1 534 0
 199 00ac 626D     		ldr	r2, [r4, #84]
 200 00ae 22F48172 		bic	r2, r2, #258
 201 00b2 42F00202 		orr	r2, r2, #2
 202 00b6 6265     		str	r2, [r4, #84]
 203              	.LVL17:
 204              	.LBB355:
 205              	.LBB356:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 206              		.loc 2 6048 0
 207 00b8 9B68     		ldr	r3, [r3, #8]
 208              	.LVL18:
 209 00ba 13F0010F 		tst	r3, #1
 210 00be 1BD1     		bne	.L12
 211              	.LVL19:
 212              	.LBE356:
 213              	.LBE355:
 214              	.LBB357:
 215              	.LBB358:
 216 00c0 514B     		ldr	r3, .L37+8
 217 00c2 9B68     		ldr	r3, [r3, #8]
 218 00c4 13F0010F 		tst	r3, #1
 219 00c8 67D0     		beq	.L27
 220 00ca 0121     		movs	r1, #1
 221              	.L13:
 222              	.LVL20:
 223              	.LBE358:
 224              	.LBE357:
 225              	.LBB360:
 226              	.LBB361:
 227 00cc 4F4A     		ldr	r2, .L37+12
 228 00ce 9268     		ldr	r2, [r2, #8]
 229 00d0 12F0010F 		tst	r2, #1
 230 00d4 63D0     		beq	.L28
 231 00d6 0123     		movs	r3, #1
 232              	.L14:
 233              	.LVL21:
 234              	.LBE361:
 235              	.LBE360:
 545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 236              		.loc 1 545 0
 237 00d8 0B43     		orrs	r3, r3, r1
 238              	.LVL22:
 239              	.LBB363:
 240              	.LBB364:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 241              		.loc 2 6048 0
 242 00da 4D4A     		ldr	r2, .L37+16
 243 00dc 9268     		ldr	r2, [r2, #8]
 244 00de 12F0010F 		tst	r2, #1
 245 00e2 5ED0     		beq	.L29
 246 00e4 0122     		movs	r2, #1
 247              	.L15:
 248              	.LVL23:
 249              	.LBE364:
 250              	.LBE363:
 545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 251              		.loc 1 545 0
 252 00e6 1343     		orrs	r3, r3, r2
 253 00e8 06D1     		bne	.L12
 564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 254              		.loc 1 564 0
 255 00ea 6368     		ldr	r3, [r4, #4]
 256              	.LVL24:
 257              	.LBB366:
 258              	.LBB367:
2445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 259              		.loc 2 2445 0
 260 00ec 4949     		ldr	r1, .L37+20
 261 00ee 8A68     		ldr	r2, [r1, #8]
 262 00f0 22F47C12 		bic	r2, r2, #4128768
 263 00f4 1343     		orrs	r3, r3, r2
 264              	.LVL25:
 265 00f6 8B60     		str	r3, [r1, #8]
 266              	.LVL26:
 267              	.L12:
 268              	.LBE367:
 269              	.LBE366:
 577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 270              		.loc 1 577 0
 271 00f8 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 272              		.loc 1 578 0
 273 00fa 636B     		ldr	r3, [r4, #52]
 577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 274              		.loc 1 577 0
 275 00fc 43EA4233 		orr	r3, r3, r2, lsl #13
 579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 276              		.loc 1 579 0
 277 0100 E268     		ldr	r2, [r4, #12]
 578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 278              		.loc 1 578 0
 279 0102 1343     		orrs	r3, r3, r2
 580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 280              		.loc 1 580 0
 281 0104 A268     		ldr	r2, [r4, #8]
 579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 282              		.loc 1 579 0
 283 0106 1343     		orrs	r3, r3, r2
 581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 284              		.loc 1 581 0
 285 0108 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 286              		.loc 1 577 0
 287 010c 43EA0243 		orr	r3, r3, r2, lsl #16
 288              	.LVL27:
 583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 289              		.loc 1 583 0
 290 0110 012A     		cmp	r2, #1
 291 0112 48D0     		beq	.L34
 292              	.L16:
 593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 293              		.loc 1 593 0
 294 0114 A26A     		ldr	r2, [r4, #40]
 295 0116 22B1     		cbz	r2, .L17
 595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 296              		.loc 1 595 0
 297 0118 02F47072 		and	r2, r2, #960
 596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                  );
 298              		.loc 1 596 0
 299 011c E16A     		ldr	r1, [r4, #44]
 300 011e 0A43     		orrs	r2, r2, r1
 595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 301              		.loc 1 595 0
 302 0120 1343     		orrs	r3, r3, r2
 303              	.LVL28:
 304              	.L17:
 601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 305              		.loc 1 601 0
 306 0122 2168     		ldr	r1, [r4]
 307 0124 CD68     		ldr	r5, [r1, #12]
 308 0126 3C4A     		ldr	r2, .L37+24
 309 0128 2A40     		ands	r2, r2, r5
 310 012a 1343     		orrs	r3, r3, r2
 311              	.LVL29:
 312 012c CB60     		str	r3, [r1, #12]
 609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 313              		.loc 1 609 0
 314 012e 2368     		ldr	r3, [r4]
 315              	.LVL30:
 316              	.LBB368:
 317              	.LBB369:
 318              		.loc 2 6170 0
 319 0130 9A68     		ldr	r2, [r3, #8]
 320 0132 12F0040F 		tst	r2, #4
 321 0136 3BD0     		beq	.L30
 322 0138 0121     		movs	r1, #1
 323              	.L18:
 324              	.LVL31:
 325              	.LBE369:
 326              	.LBE368:
 327              	.LBB371:
 328              	.LBB372:
6171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
6254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
6261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
6262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
6263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
6264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
6267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
6268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
6269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         separately).
6270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
6271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
6272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
6275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
6276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
6277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
6278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
6281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
6283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              ConversionData)
6284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
6285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                    );
6286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
6291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
6294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
6295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
6299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           starts immediately.
6303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
6309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
6310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
6312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
6316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTART);
6323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
6327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC state:
6329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
6330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
6332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
6336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTP);
6343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
6347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
6348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
6350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
6352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 329              		.loc 2 6353 0
 330 013a 9A68     		ldr	r2, [r3, #8]
 331 013c 12F0080F 		tst	r2, #8
 332 0140 38D0     		beq	.L31
 333 0142 0122     		movs	r2, #1
 334              	.L19:
 335              	.LVL32:
 336              	.LBE372:
 337              	.LBE371:
 611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 338              		.loc 1 611 0
 339 0144 B1B9     		cbnz	r1, .L20
 612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        )
 340              		.loc 1 612 0
 341 0146 AAB9     		cbnz	r2, .L20
 616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 342              		.loc 1 616 0
 343 0148 217E     		ldrb	r1, [r4, #24]	@ zero_extendqisi2
 617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 344              		.loc 1 617 0
 345 014a 94F83020 		ldrb	r2, [r4, #48]	@ zero_extendqisi2
 346 014e 5200     		lsls	r2, r2, #1
 615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 347              		.loc 1 615 0
 348 0150 42EA8131 		orr	r1, r2, r1, lsl #14
 349              	.LVL33:
 619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 350              		.loc 1 619 0
 351 0154 DA68     		ldr	r2, [r3, #12]
 352 0156 22F48042 		bic	r2, r2, #16384
 353 015a 22F00202 		bic	r2, r2, #2
 354 015e 0A43     		orrs	r2, r2, r1
 355 0160 DA60     		str	r2, [r3, #12]
 621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 356              		.loc 1 621 0
 357 0162 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 358 0166 012B     		cmp	r3, #1
 359 0168 26D0     		beq	.L35
 648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 360              		.loc 1 648 0
 361 016a 2268     		ldr	r2, [r4]
 362 016c 1369     		ldr	r3, [r2, #16]
 363 016e 23F00103 		bic	r3, r3, #1
 364 0172 1361     		str	r3, [r2, #16]
 365              	.LVL34:
 366              	.L20:
 662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 367              		.loc 1 662 0
 368 0174 2369     		ldr	r3, [r4, #16]
 369 0176 012B     		cmp	r3, #1
 370 0178 30D0     		beq	.L36
 669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 371              		.loc 1 669 0
 372 017a 2268     		ldr	r2, [r4]
 373 017c 136B     		ldr	r3, [r2, #48]
 374 017e 23F00F03 		bic	r3, r3, #15
 375 0182 1363     		str	r3, [r2, #48]
 376              	.L23:
 674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 377              		.loc 1 674 0
 378 0184 636D     		ldr	r3, [r4, #84]
 379 0186 23F00303 		bic	r3, r3, #3
 380 018a 43F00103 		orr	r3, r3, #1
 381 018e 6365     		str	r3, [r4, #84]
 382 0190 32E0     		b	.L3
 383              	.LVL35:
 384              	.L25:
 403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpCFGR;
 385              		.loc 1 403 0
 386 0192 0020     		movs	r0, #0
 387 0194 7DE7     		b	.L9
 388              	.LVL36:
 389              	.L26:
 390              	.LBB374:
 391              	.LBB354:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 392              		.loc 2 6170 0
 393 0196 0021     		movs	r1, #0
 394 0198 80E7     		b	.L10
 395              	.LVL37:
 396              	.L27:
 397              	.LBE354:
 398              	.LBE374:
 399              	.LBB375:
 400              	.LBB359:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 401              		.loc 2 6048 0
 402 019a 0021     		movs	r1, #0
 403 019c 96E7     		b	.L13
 404              	.LVL38:
 405              	.L28:
 406              	.LBE359:
 407              	.LBE375:
 408              	.LBB376:
 409              	.LBB362:
 410 019e 0023     		movs	r3, #0
 411 01a0 9AE7     		b	.L14
 412              	.LVL39:
 413              	.L29:
 414              	.LBE362:
 415              	.LBE376:
 416              	.LBB377:
 417              	.LBB365:
 418 01a2 0022     		movs	r2, #0
 419 01a4 9FE7     		b	.L15
 420              	.LVL40:
 421              	.L34:
 422              	.LBE365:
 423              	.LBE377:
 585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 424              		.loc 1 585 0
 425 01a6 626A     		ldr	r2, [r4, #36]
 426 01a8 013A     		subs	r2, r2, #1
 427 01aa 43EA4243 		orr	r3, r3, r2, lsl #17
 428              	.LVL41:
 429 01ae B1E7     		b	.L16
 430              	.LVL42:
 431              	.L30:
 432              	.LBB378:
 433              	.LBB370:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 434              		.loc 2 6170 0
 435 01b0 0021     		movs	r1, #0
 436 01b2 C2E7     		b	.L18
 437              	.LVL43:
 438              	.L31:
 439              	.LBE370:
 440              	.LBE378:
 441              	.LBB379:
 442              	.LBB373:
 443              		.loc 2 6353 0
 444 01b4 0022     		movs	r2, #0
 445 01b6 C5E7     		b	.L19
 446              	.LVL44:
 447              	.L35:
 448              	.LBE373:
 449              	.LBE379:
 633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 450              		.loc 1 633 0
 451 01b8 2168     		ldr	r1, [r4]
 452              	.LVL45:
 453 01ba 0B69     		ldr	r3, [r1, #16]
 454 01bc 23F4FF63 		bic	r3, r3, #2040
 455 01c0 23F00403 		bic	r3, r3, #4
 456 01c4 E26B     		ldr	r2, [r4, #60]
 457 01c6 256C     		ldr	r5, [r4, #64]
 458 01c8 2A43     		orrs	r2, r2, r5
 459 01ca 656C     		ldr	r5, [r4, #68]
 460 01cc 2A43     		orrs	r2, r2, r5
 461 01ce A56C     		ldr	r5, [r4, #72]
 462 01d0 2A43     		orrs	r2, r2, r5
 463 01d2 1343     		orrs	r3, r3, r2
 464 01d4 43F00103 		orr	r3, r3, #1
 465 01d8 0B61     		str	r3, [r1, #16]
 466 01da CBE7     		b	.L20
 467              	.L36:
 665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 468              		.loc 1 665 0
 469 01dc 2168     		ldr	r1, [r4]
 470 01de 0B6B     		ldr	r3, [r1, #48]
 471 01e0 23F00F03 		bic	r3, r3, #15
 472 01e4 E269     		ldr	r2, [r4, #28]
 473 01e6 013A     		subs	r2, r2, #1
 474 01e8 1343     		orrs	r3, r3, r2
 475 01ea 0B63     		str	r3, [r1, #48]
 476 01ec CAE7     		b	.L23
 477              	.L11:
 679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 478              		.loc 1 679 0
 479 01ee 636D     		ldr	r3, [r4, #84]
 480 01f0 43F01003 		orr	r3, r3, #16
 481 01f4 6365     		str	r3, [r4, #84]
 482              	.LVL46:
 681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 483              		.loc 1 681 0
 484 01f6 0120     		movs	r0, #1
 485              	.LVL47:
 486              	.L3:
 686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 487              		.loc 1 686 0
 488 01f8 03B0     		add	sp, sp, #12
 489              		.cfi_remember_state
 490              		.cfi_def_cfa_offset 12
 491              		@ sp needed
 492 01fa 30BD     		pop	{r4, r5, pc}
 493              	.LVL48:
 494              	.L24:
 495              		.cfi_restore_state
 413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 496              		.loc 1 413 0
 497 01fc 0120     		movs	r0, #1
 498              	.LVL49:
 499 01fe FBE7     		b	.L3
 500              	.L38:
 501              		.align	2
 502              	.L37:
 503 0200 00000000 		.word	SystemCoreClock
 504 0204 632D3E05 		.word	87960931
 505 0208 00000450 		.word	1342439424
 506 020c 00010450 		.word	1342439680
 507 0210 00020450 		.word	1342439936
 508 0214 00030450 		.word	1342440192
 509 0218 07C0F0FF 		.word	-999417
 510              		.cfi_endproc
 511              	.LFE317:
 513              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 514              		.align	1
 515              		.weak	HAL_ADC_MspDeInit
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 519              		.fpu fpv4-sp-d16
 521              	HAL_ADC_MspDeInit:
 522              	.LFB320:
 914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
 916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval None
 921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
 523              		.loc 1 923 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528              	.LVL50:
 924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****    */
 930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 529              		.loc 1 930 0
 530 0000 7047     		bx	lr
 531              		.cfi_endproc
 532              	.LFE320:
 534              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 535              		.align	1
 536              		.global	HAL_ADC_PollForConversion
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 540              		.fpu fpv4-sp-d16
 542              	HAL_ADC_PollForConversion:
 543              	.LFB323:
 931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
 934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status
 955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
 956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
 959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (pCallback == NULL)
 962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update the error code */
 964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     switch (CallbackID)
 972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
 976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
 980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
 984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
 988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
 992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
 994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
 995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
 996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
 998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
 999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
1003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
1007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       default :
1018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Update the error code */
1019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Return error status */
1022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         status = HAL_ERROR;
1023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       default :
1039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Update the error code */
1040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Return error status */
1043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         status = HAL_ERROR;
1044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
1048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update the error code */
1050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Return error status */
1053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     status =  HAL_ERROR;
1054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return status;
1057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
1058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
1060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         This parameter can be one of the following values:
1066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status
1080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
1081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
1083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       default :
1134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Update the error code */
1135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Return error status */
1138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         status =  HAL_ERROR;
1139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       default :
1155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Update the error code */
1156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Return error status */
1159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         status =  HAL_ERROR;
1160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
1161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
1164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update the error code */
1166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Return error status */
1169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     status =  HAL_ERROR;
1170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return status;
1173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
1174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
1178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @}
1179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
1180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief    ADC IO operation functions
1183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *
1184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** @verbatim
1185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****  ===============================================================================
1186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                       ##### IO operation functions #####
1187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****  ===============================================================================
1188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group.
1190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group.
1191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Poll for conversion event.
1193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Handle ADC interrupt request
1197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** @endverbatim
1200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @{
1201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
1202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
1204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started,
1208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
1209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status
1211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
1212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
1214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
1219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Process locked */
1227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
1236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          )
1249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
1253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
1255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
1262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
1280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          )
1290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
1294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
1296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
1301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
1309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
1311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
1314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
1322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
1324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
1330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
1335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
1337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
1339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
1347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
1349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Process locked */
1355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
1380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
1382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
1384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status
1400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
1401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
 544              		.loc 1 1402 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548              	.LVL51:
 549 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 550              		.cfi_def_cfa_offset 24
 551              		.cfi_offset 4, -24
 552              		.cfi_offset 5, -20
 553              		.cfi_offset 6, -16
 554              		.cfi_offset 7, -12
 555              		.cfi_offset 8, -8
 556              		.cfi_offset 14, -4
 557              	.LVL52:
 558              	.LBB380:
 559              	.LBB381:
5693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 560              		.loc 2 5693 0
 561 0004 414B     		ldr	r3, .L66
 562 0006 9F68     		ldr	r7, [r3, #8]
 563 0008 07F01F07 		and	r7, r7, #31
 564              	.LVL53:
 565              	.LBE381:
 566              	.LBE380:
1403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
1404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_Flag_End;
1405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
1406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
1410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 567              		.loc 1 1415 0
 568 000c 4369     		ldr	r3, [r0, #20]
 569 000e 082B     		cmp	r3, #8
 570 0010 3FD0     		beq	.L55
1416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* each conversion:                                                       */
1424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 571              		.loc 1 1429 0
 572 0012 57B1     		cbz	r7, .L42
1430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 573              		.loc 1 1430 0
 574 0014 052F     		cmp	r7, #5
 575 0016 08D0     		beq	.L42
1431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 576              		.loc 1 1431 0
 577 0018 092F     		cmp	r7, #9
 578 001a 06D0     		beq	.L42
 579              	.LVL54:
 580              	.LBB382:
 581              	.LBB383:
5790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 582              		.loc 2 5790 0
 583 001c 3B4B     		ldr	r3, .L66
 584 001e 9B68     		ldr	r3, [r3, #8]
 585              	.LVL55:
 586              	.LBE383:
 587              	.LBE382:
1432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        )
1433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in independent mode on ADC group regular */
1435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
1439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
1441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
1443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
1446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in multimode on ADC group regular */
1448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_
 588              		.loc 1 1448 0
 589 0020 13F4604F 		tst	r3, #57344
 590 0024 2FD1     		bne	.L61
1449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
1452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
1454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 591              		.loc 1 1455 0
 592 0026 0426     		movs	r6, #4
 593 0028 05E0     		b	.L41
 594              	.L42:
1435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 595              		.loc 1 1435 0
 596 002a 0368     		ldr	r3, [r0]
 597 002c DB68     		ldr	r3, [r3, #12]
 598 002e 13F0010F 		tst	r3, #1
 599 0032 21D1     		bne	.L62
1442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 600              		.loc 1 1442 0
 601 0034 0426     		movs	r6, #4
 602              	.L41:
 603 0036 0D46     		mov	r5, r1
 604 0038 0446     		mov	r4, r0
 605              	.LVL56:
1456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
1459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check ADC DMA mode */
1460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
1464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
1466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
1468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
1470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Get tick count */
1473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 606              		.loc 1 1473 0
 607 003a FFF7FEFF 		bl	HAL_GetTick
 608              	.LVL57:
 609 003e 8046     		mov	r8, r0
 610              	.LVL58:
 611              	.L46:
1474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 612              		.loc 1 1476 0
 613 0040 2368     		ldr	r3, [r4]
 614 0042 1A68     		ldr	r2, [r3]
 615 0044 3242     		tst	r2, r6
 616 0046 26D1     		bne	.L63
1477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 617              		.loc 1 1479 0
 618 0048 B5F1FF3F 		cmp	r5, #-1
 619 004c F8D0     		beq	.L46
1480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 620              		.loc 1 1481 0
 621 004e FFF7FEFF 		bl	HAL_GetTick
 622              	.LVL59:
 623 0052 A0EB0800 		sub	r0, r0, r8
 624 0056 A842     		cmp	r0, r5
 625 0058 01D8     		bhi	.L47
 626              		.loc 1 1481 0 is_stmt 0 discriminator 1
 627 005a 002D     		cmp	r5, #0
 628 005c F0D1     		bne	.L46
 629              	.L47:
1482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 630              		.loc 1 1484 0 is_stmt 1
 631 005e 2368     		ldr	r3, [r4]
 632 0060 1B68     		ldr	r3, [r3]
 633 0062 3342     		tst	r3, r6
 634 0064 ECD1     		bne	.L46
1485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
1486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 635              		.loc 1 1487 0
 636 0066 636D     		ldr	r3, [r4, #84]
 637 0068 43F00403 		orr	r3, r3, #4
 638 006c 6365     		str	r3, [r4, #84]
1488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Process unlocked */
1490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 639              		.loc 1 1490 0
 640 006e 0023     		movs	r3, #0
 641 0070 84F85030 		strb	r3, [r4, #80]
1491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           return HAL_TIMEOUT;
 642              		.loc 1 1492 0
 643 0074 0320     		movs	r0, #3
 644 0076 04E0     		b	.L44
 645              	.LVL60:
 646              	.L62:
1437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
 647              		.loc 1 1437 0
 648 0078 436D     		ldr	r3, [r0, #84]
 649 007a 43F02003 		orr	r3, r3, #32
 650 007e 4365     		str	r3, [r0, #84]
1438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 651              		.loc 1 1438 0
 652 0080 0120     		movs	r0, #1
 653              	.LVL61:
 654              	.L44:
1493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
1494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Update ADC state machine */
1499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
1505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
1506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
1509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
1514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* available).                                                              */
1523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
1529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
1534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
1538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
1540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Retrieve handle ADC CFGR register */
1541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
1543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Clear polled flag */
1545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
1546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
1550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
1555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
1561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return HAL_OK;
1562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 655              		.loc 1 1562 0
 656 0082 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 657              	.LVL62:
 658              	.L61:
1450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
 659              		.loc 1 1450 0
 660 0086 436D     		ldr	r3, [r0, #84]
 661 0088 43F02003 		orr	r3, r3, #32
 662 008c 4365     		str	r3, [r0, #84]
1451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 663              		.loc 1 1451 0
 664 008e 0120     		movs	r0, #1
 665              	.LVL63:
 666 0090 F7E7     		b	.L44
 667              	.LVL64:
 668              	.L55:
1417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 669              		.loc 1 1417 0
 670 0092 0826     		movs	r6, #8
 671 0094 CFE7     		b	.L41
 672              	.LVL65:
 673              	.L63:
1499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 674              		.loc 1 1499 0
 675 0096 626D     		ldr	r2, [r4, #84]
 676 0098 42F40072 		orr	r2, r2, #512
 677 009c 6265     		str	r2, [r4, #84]
 678              	.LVL66:
 679              	.LBB384:
 680              	.LBB385:
3248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 681              		.loc 2 3248 0
 682 009e DA68     		ldr	r2, [r3, #12]
 683 00a0 12F4406F 		tst	r2, #3072
 684 00a4 11D1     		bne	.L49
 685              	.LVL67:
 686              	.LBE385:
 687              	.LBE384:
1504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
 688              		.loc 1 1504 0
 689 00a6 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 690 00a8 7AB9     		cbnz	r2, .L49
1508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 691              		.loc 1 1508 0
 692 00aa 1A68     		ldr	r2, [r3]
 693 00ac 12F0080F 		tst	r2, #8
 694 00b0 0BD0     		beq	.L49
1511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 695              		.loc 1 1511 0
 696 00b2 626D     		ldr	r2, [r4, #84]
 697 00b4 22F48072 		bic	r2, r2, #256
 698 00b8 6265     		str	r2, [r4, #84]
1513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 699              		.loc 1 1513 0
 700 00ba 626D     		ldr	r2, [r4, #84]
 701 00bc 12F4805F 		tst	r2, #4096
 702 00c0 03D1     		bne	.L49
1515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 703              		.loc 1 1515 0
 704 00c2 626D     		ldr	r2, [r4, #84]
 705 00c4 42F00102 		orr	r2, r2, #1
 706 00c8 6265     		str	r2, [r4, #84]
 707              	.L49:
1524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 708              		.loc 1 1524 0
 709 00ca 114A     		ldr	r2, .L66+4
 710 00cc 9342     		cmp	r3, r2
 711 00ce 09D0     		beq	.L64
 712 00d0 1A46     		mov	r2, r3
 713              	.L50:
1524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 714              		.loc 1 1524 0 is_stmt 0 discriminator 4
 715 00d2 9342     		cmp	r3, r2
 716 00d4 09D0     		beq	.L51
1525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 717              		.loc 1 1525 0 is_stmt 1
 718 00d6 47B1     		cbz	r7, .L51
1526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 719              		.loc 1 1526 0
 720 00d8 052F     		cmp	r7, #5
 721 00da 06D0     		beq	.L51
1527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
 722              		.loc 1 1527 0
 723 00dc 092F     		cmp	r7, #9
 724 00de 04D0     		beq	.L51
 725              	.LVL68:
1537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 726              		.loc 1 1537 0 discriminator 4
 727 00e0 D268     		ldr	r2, [r2, #12]
 728              	.LVL69:
 729 00e2 03E0     		b	.L53
 730              	.LVL70:
 731              	.L64:
1524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 732              		.loc 1 1524 0
 733 00e4 A2F58072 		sub	r2, r2, #256
 734 00e8 F3E7     		b	.L50
 735              	.L51:
1531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 736              		.loc 1 1531 0
 737 00ea DA68     		ldr	r2, [r3, #12]
 738              	.LVL71:
 739              	.L53:
1545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 740              		.loc 1 1545 0
 741 00ec 082E     		cmp	r6, #8
 742 00ee 06D0     		beq	.L65
1554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 743              		.loc 1 1554 0
 744 00f0 12F4804F 		tst	r2, #16384
 745 00f4 07D1     		bne	.L59
1556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 746              		.loc 1 1556 0
 747 00f6 0C22     		movs	r2, #12
 748              	.LVL72:
 749 00f8 1A60     		str	r2, [r3]
1561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 750              		.loc 1 1561 0
 751 00fa 0020     		movs	r0, #0
 752 00fc C1E7     		b	.L44
 753              	.LVL73:
 754              	.L65:
1547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 755              		.loc 1 1547 0
 756 00fe 0822     		movs	r2, #8
 757              	.LVL74:
 758 0100 1A60     		str	r2, [r3]
1561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 759              		.loc 1 1561 0
 760 0102 0020     		movs	r0, #0
 761 0104 BDE7     		b	.L44
 762              	.LVL75:
 763              	.L59:
 764 0106 0020     		movs	r0, #0
 765 0108 BBE7     		b	.L44
 766              	.L67:
 767 010a 00BF     		.align	2
 768              	.L66:
 769 010c 00030450 		.word	1342440192
 770 0110 00010450 		.word	1342439680
 771              		.cfi_endproc
 772              	.LFE323:
 774              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 775              		.align	1
 776              		.global	HAL_ADC_PollForEvent
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 780              		.fpu fpv4-sp-d16
 782              	HAL_ADC_PollForEvent:
 783              	.LFB324:
1563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
1565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Poll for ADC event.
1566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param EventType the ADC event type.
1568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
1569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status
1583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
1584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
 784              		.loc 1 1585 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788              	.LVL76:
 789 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 790              		.cfi_def_cfa_offset 24
 791              		.cfi_offset 3, -24
 792              		.cfi_offset 4, -20
 793              		.cfi_offset 5, -16
 794              		.cfi_offset 6, -12
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 0546     		mov	r5, r0
 798 0004 0C46     		mov	r4, r1
 799 0006 1646     		mov	r6, r2
1586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
1587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Get tick count */
1593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 800              		.loc 1 1593 0
 801 0008 FFF7FEFF 		bl	HAL_GetTick
 802              	.LVL77:
 803 000c 0746     		mov	r7, r0
 804              	.LVL78:
 805              	.L70:
1594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check selected event flag */
1596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 806              		.loc 1 1596 0
 807 000e 2B68     		ldr	r3, [r5]
 808 0010 1A68     		ldr	r2, [r3]
 809 0012 34EA0202 		bics	r2, r4, r2
 810 0016 17D0     		beq	.L83
1597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 811              		.loc 1 1599 0
 812 0018 B6F1FF3F 		cmp	r6, #-1
 813 001c F7D0     		beq	.L70
1600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 814              		.loc 1 1601 0
 815 001e FFF7FEFF 		bl	HAL_GetTick
 816              	.LVL79:
 817 0022 C01B     		subs	r0, r0, r7
 818 0024 B042     		cmp	r0, r6
 819 0026 01D8     		bhi	.L71
 820              		.loc 1 1601 0 is_stmt 0 discriminator 1
 821 0028 002E     		cmp	r6, #0
 822 002a F0D1     		bne	.L70
 823              	.L71:
1602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 824              		.loc 1 1604 0 is_stmt 1
 825 002c 2B68     		ldr	r3, [r5]
 826 002e 1B68     		ldr	r3, [r3]
 827 0030 34EA0303 		bics	r3, r4, r3
 828 0034 EBD0     		beq	.L70
1605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
1606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 829              		.loc 1 1607 0
 830 0036 6B6D     		ldr	r3, [r5, #84]
 831 0038 43F00403 		orr	r3, r3, #4
 832 003c 6B65     		str	r3, [r5, #84]
1608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Process unlocked */
1610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 833              		.loc 1 1610 0
 834 003e 0023     		movs	r3, #0
 835 0040 85F85030 		strb	r3, [r5, #80]
1611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           return HAL_TIMEOUT;
 836              		.loc 1 1612 0
 837 0044 0320     		movs	r0, #3
 838 0046 29E0     		b	.L72
 839              	.L83:
1613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
1614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   switch (EventType)
 840              		.loc 1 1618 0
 841 0048 B4F5807F 		cmp	r4, #256
 842 004c 27D0     		beq	.L75
 843 004e 0BD8     		bhi	.L76
 844 0050 022C     		cmp	r4, #2
 845 0052 1CD0     		beq	.L77
 846 0054 802C     		cmp	r4, #128
 847 0056 34D1     		bne	.L74
1619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* End Of Sampling event */
1621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       break;
1629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* For example:                                                             */
1635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     case ADC_AWD_EVENT:
1641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 848              		.loc 1 1642 0
 849 0058 6A6D     		ldr	r2, [r5, #84]
 850 005a 42F48032 		orr	r2, r2, #65536
 851 005e 6A65     		str	r2, [r5, #84]
1643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 852              		.loc 1 1645 0
 853 0060 8022     		movs	r2, #128
 854 0062 1A60     		str	r2, [r3]
1646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       break;
1648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       break;
1658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       break;
1668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Injected context queue overflow event */
1670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       break;
1681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Overrun event */
1683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* considered as an error.                                                */
1686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* overrun ")                                                             */
1688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set ADC state */
1691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set ADC error code to overrun */
1694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
1697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            as OVR is cleared. */
1701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       break;
1704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
1707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return HAL_OK;
 855              		.loc 1 1707 0
 856 0064 0020     		movs	r0, #0
1647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 857              		.loc 1 1647 0
 858 0066 19E0     		b	.L72
 859              	.L76:
1618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 860              		.loc 1 1618 0
 861 0068 B4F5007F 		cmp	r4, #512
 862 006c 20D0     		beq	.L79
 863 006e B4F5806F 		cmp	r4, #1024
 864 0072 26D1     		bne	.L74
1672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 865              		.loc 1 1672 0
 866 0074 6A6D     		ldr	r2, [r5, #84]
 867 0076 42F48042 		orr	r2, r2, #16384
 868 007a 6A65     		str	r2, [r5, #84]
1675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 869              		.loc 1 1675 0
 870 007c AA6D     		ldr	r2, [r5, #88]
 871 007e 42F00802 		orr	r2, r2, #8
 872 0082 AA65     		str	r2, [r5, #88]
1678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 873              		.loc 1 1678 0
 874 0084 4FF48062 		mov	r2, #1024
 875 0088 1A60     		str	r2, [r3]
 876              		.loc 1 1707 0
 877 008a 0020     		movs	r0, #0
1680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 878              		.loc 1 1680 0
 879 008c 06E0     		b	.L72
 880              	.L77:
1623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 881              		.loc 1 1623 0
 882 008e 6A6D     		ldr	r2, [r5, #84]
 883 0090 42F40062 		orr	r2, r2, #2048
 884 0094 6A65     		str	r2, [r5, #84]
1626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 885              		.loc 1 1626 0
 886 0096 0222     		movs	r2, #2
 887 0098 1A60     		str	r2, [r3]
 888              		.loc 1 1707 0
 889 009a 0020     		movs	r0, #0
 890              	.L72:
1708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 891              		.loc 1 1708 0
 892 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 893              	.LVL80:
 894              	.L75:
1652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 895              		.loc 1 1652 0
 896 009e 6A6D     		ldr	r2, [r5, #84]
 897 00a0 42F40032 		orr	r2, r2, #131072
 898 00a4 6A65     		str	r2, [r5, #84]
1655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 899              		.loc 1 1655 0
 900 00a6 4FF48072 		mov	r2, #256
 901 00aa 1A60     		str	r2, [r3]
1707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 902              		.loc 1 1707 0
 903 00ac 0020     		movs	r0, #0
1657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 904              		.loc 1 1657 0
 905 00ae F5E7     		b	.L72
 906              	.L79:
1662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 907              		.loc 1 1662 0
 908 00b0 6A6D     		ldr	r2, [r5, #84]
 909 00b2 42F48022 		orr	r2, r2, #262144
 910 00b6 6A65     		str	r2, [r5, #84]
1665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 911              		.loc 1 1665 0
 912 00b8 4FF40072 		mov	r2, #512
 913 00bc 1A60     		str	r2, [r3]
1707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 914              		.loc 1 1707 0
 915 00be 0020     		movs	r0, #0
1667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 916              		.loc 1 1667 0
 917 00c0 ECE7     		b	.L72
 918              	.L74:
1688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 919              		.loc 1 1688 0
 920 00c2 6A6B     		ldr	r2, [r5, #52]
 921 00c4 1AB1     		cbz	r2, .L84
1701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 922              		.loc 1 1701 0
 923 00c6 1022     		movs	r2, #16
 924 00c8 1A60     		str	r2, [r3]
1707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 925              		.loc 1 1707 0
 926 00ca 0020     		movs	r0, #0
 927 00cc E6E7     		b	.L72
 928              	.L84:
1691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 929              		.loc 1 1691 0
 930 00ce 6B6D     		ldr	r3, [r5, #84]
 931 00d0 43F48063 		orr	r3, r3, #1024
 932 00d4 6B65     		str	r3, [r5, #84]
1694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 933              		.loc 1 1694 0
 934 00d6 AB6D     		ldr	r3, [r5, #88]
 935 00d8 43F00203 		orr	r3, r3, #2
 936 00dc AB65     		str	r3, [r5, #88]
1707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 937              		.loc 1 1707 0
 938 00de 0020     		movs	r0, #0
 939 00e0 DCE7     		b	.L72
 940              		.cfi_endproc
 941              	.LFE324:
 943              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 944              		.align	1
 945              		.global	HAL_ADC_GetValue
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu fpv4-sp-d16
 951              	HAL_ADC_GetValue:
 952              	.LFB329:
1709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
1711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         OVR overrun.
1715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         ADC Master.
1719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         mode), the user must:
1727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status
1732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
1733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
1735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
1740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Process locked */
1748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
1757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          )
1770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
1774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
1776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
1778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
1783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
1806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         default:
1808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
1810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
1825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          )
1835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
1839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
1847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               break;
1851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             default:
1853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               break;
1856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
1857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
1858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
1863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
1867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
1868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
1871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
1872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
1873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
1875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
1877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               break;
1881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             default:
1883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               break;
1886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
1887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
1888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
1890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* ADC instance is not a multimode slave instance with multimode regular conversions enabled 
1891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
1893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Enable as well injected interruptions in case
1896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          allows to start regular and injected conversions when JAUTO is
1898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          set with a single call to HAL_ADC_Start_IT() */
1899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         switch (hadc->Init.EOCSelection)
1900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
1901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           case ADC_EOC_SEQ_CONV:
1902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             break;
1905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* case ADC_EOC_SINGLE_CONV */
1906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           default:
1907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             break;
1910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
1911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
1912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
1916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
1918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
1925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
1930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
1932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
1934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
1940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
1942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Process locked */
1948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
1956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
1966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
1971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
1972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
1977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
1979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
1980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
1981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
1986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
1987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
1988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param pData Destination Buffer address.
1990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
1993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
1994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
1995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
1999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Process locked */
2007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
2008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Ensure that multimode regular conversions are not enabled.   */
2011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
2012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        )
2016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
2017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Enable the ADC peripheral */
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
2023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set ADC state                                                        */
2025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
2028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
2033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           - if ADC instance is master or if multimode feature is not available
2034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           - if multimode setting is disabled (ADC instance slave in independent mode) */
2035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            )
2038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
2042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
2045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
2048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         else
2050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Reset all ADC error code fields */
2052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
2053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set the DMA error callback */
2062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* operations)                                                        */
2071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Process unlocked */
2074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Enable ADC DMA mode */
2084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Start the DMA channel */
2087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
2088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* trigger event.                                                       */
2093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
2094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
2097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Process unlocked */
2099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
2105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
2107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Process unlocked */
2108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
2111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
2113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
2118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
2119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
2120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
2122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         ADC peripheral.
2125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
2129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
2130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
2131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status.
2133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
2136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Process locked */
2142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
2151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
2156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
2161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
2163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
2176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
2178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (void)ADC_Disable(hadc);
2180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Process unlocked */
2194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
2197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
2198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
2199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
2201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            to flag EOC.
2209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         To clear this flag, either use function:
2213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval ADC group regular conversion data
2218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
2220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
 953              		.loc 1 2220 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		@ link register save eliminated.
 958              	.LVL81:
2221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return ADC converted value */
2228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return hadc->Instance->DR;
 959              		.loc 1 2228 0
 960 0000 0368     		ldr	r3, [r0]
 961 0002 186C     		ldr	r0, [r3, #64]
 962              	.LVL82:
2229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 963              		.loc 1 2229 0
 964 0004 7047     		bx	lr
 965              		.cfi_endproc
 966              	.LFE329:
 968              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 969              		.align	1
 970              		.weak	HAL_ADC_ConvCpltCallback
 971              		.syntax unified
 972              		.thumb
 973              		.thumb_func
 974              		.fpu fpv4-sp-d16
 976              	HAL_ADC_ConvCpltCallback:
 977              	.LFB331:
2230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
2232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval None
2235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
2238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
2239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
2240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
2241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
2244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
2246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
2248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
2255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
2261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* End Of Sampling callback */
2264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
2267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
2268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
2272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
2276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
2277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
2288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
2292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* available).                                                          */
2293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          )
2299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
2301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
2304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
2306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
2310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
2312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
2315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
2323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* Set ADC state */
2330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
2331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
2333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             {
2334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             }
2336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
2337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           else
2338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
2339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* Change ADC state to error state */
2340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
2345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
2350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*       possibility to use:                                              */
2353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
2354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
2357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
2366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
2370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
2371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Retrieve ADC configuration */
2380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
2381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
2382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
2384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* available).                                                        */
2385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
2389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
2390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        )
2391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
2395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
2400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
2402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (tmp_adc_inj_is_trigger_source_sw_start != 0UL)
2409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL) ||
2411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
2412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
2413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Particular case if injected contexts queue is enabled:             */
2418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* when the last context has been fully processed, JSQR is reset      */
2419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* by the hardware. Even if no injected conversion is planned to come */
2420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* (queue empty, triggers are ignored), it can start again            */
2421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* immediately after setting a new context (JADSTART is still set).   */
2422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Therefore, state of HAL ADC injected group is kept to busy.        */
2423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
2424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
2425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* JADSTART==0 (no conversion on going)                             */
2427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
2428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             {
2429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               /* Disable ADC end of sequence conversion interrupt  */
2430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               /* Set ADC state */
2433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
2436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               {
2437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                 SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               }
2439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             }
2440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             else
2441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             {
2442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               /* Update ADC state machine to error */
2443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               /* Set ADC error code to ADC peripheral internal error */
2446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             }
2448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
2449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Injected Conversion complete callback */
2454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               sequence.    */
2459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
2462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Clear injected group conversion flag */
2466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Level out of window 1 callback */
2476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
2479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Level out of window 2 callback */
2493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
2496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Level out of window 3 callback */
2510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
2513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* overrun ")                                                             */
2527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* error.                                                                 */
2529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       overrun_error = 1UL;
2532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
2534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Check DMA configuration */
2536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (tmp_multimode_config != LL_ADC_MULTI_INDEPENDENT)
2538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled,
2540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_RE
2542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           overrun_error = 1UL;
2544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
2547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
2548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->CFGR & ADC_CFGR_DMAEN) != 0UL)
2551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           overrun_error = 1UL;
2553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (overrun_error == 1UL)
2558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Change ADC state to error state */
2560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC error code to overrun */
2563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Error callback */
2566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
2573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Clear ADC overrun flag */
2578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Change ADC state to overrun state */
2585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Injected context queue overflow callback */
2594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
2596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
2597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
2602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
2604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval None
2607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
 978              		.loc 1 2609 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 983              	.LVL83:
2610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****    */
2616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 984              		.loc 1 2616 0
 985 0000 7047     		bx	lr
 986              		.cfi_endproc
 987              	.LFE331:
 989              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 990              		.align	1
 991              		.weak	HAL_ADC_ConvHalfCpltCallback
 992              		.syntax unified
 993              		.thumb
 994              		.thumb_func
 995              		.fpu fpv4-sp-d16
 997              	HAL_ADC_ConvHalfCpltCallback:
 998              	.LFB332:
2617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
2619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval None
2622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
 999              		.loc 1 2624 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 0
 1002              		@ frame_needed = 0, uses_anonymous_args = 0
 1003              		@ link register save eliminated.
 1004              	.LVL84:
2625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 1005              		.loc 1 2631 0
 1006 0000 7047     		bx	lr
 1007              		.cfi_endproc
 1008              	.LFE332:
 1010              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1011              		.align	1
 1012              		.global	ADC_DMAHalfConvCplt
 1013              		.syntax unified
 1014              		.thumb
 1015              		.thumb_func
 1016              		.fpu fpv4-sp-d16
 1018              	ADC_DMAHalfConvCplt:
 1019              	.LFB343:
2632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
2634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval None
2637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
2640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
2647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
2649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval None
2659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
2662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
2669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
2671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @}
2672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief    Peripheral Control functions
2676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *
2677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** @verbatim
2678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****  ===============================================================================
2679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****              ##### Peripheral Control functions #####
2680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****  ===============================================================================
2681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Configure channels on regular group
2683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Configure the analog watchdog
2684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** @endverbatim
2686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @{
2687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
2690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         These internal paths can be disabled using function
2694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         without resetting the ADC.
2700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status
2705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
2707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
2708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      ignored (considered as reset) */
2725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Verification of channel number */
2728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
2731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
2733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfig->Channel));
2735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Process locked */
2738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /*  - Channel number                                                        */
2744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /*  - Channel rank                                                          */
2745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if !defined (USE_FULL_ASSERT)
2748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Correspondence for compatibility with legacy definition of             */
2749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* sequencer ranks in direct number format. This correspondence can       */
2750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* be done only on ranks 1 to 5 due to literal values.                    */
2751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Note: Sequencer ranks in direct number format are no more used         */
2752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*       and are detected by activating USE_FULL_ASSERT feature.          */
2753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (sConfig->Rank <= 5U)
2754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       switch (sConfig->Rank)
2756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case 2U:
2758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_2;
2759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
2760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case 3U:
2761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_3;
2762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
2763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case 4U:
2764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_4;
2765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
2766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case 5U:
2767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_5;
2768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
2769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* case 1U */
2770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         default:
2771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           sConfig->Rank = ADC_REGULAR_RANK_1;
2772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
2773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
2776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - Channel offset                                                        */
2785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
2789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        )
2790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if defined(ADC_SMPR1_SMPPLUS)
2792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
2793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (sConfig->SamplingTime == ADC_SAMPLETIME_3CYCLES_5)
2794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, LL_ADC_SAMPLINGTIME_2CYCLES
2797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5)
2800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
2802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
2808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
2810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
2813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
2819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
2821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set ADC selected offset number */
2823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted)
2824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
2827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)
2831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)
2836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)
2841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)
2846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
2847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
2855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /*  - Single or differential mode                                           */
2856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
2859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
2860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Configuration of differential mode */
2862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
2863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
2866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
2868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
2869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* If internal channel selected, enable dedicated internal buffers and    */
2875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* paths.                                                                 */
2876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Note: these internal measurement paths can be disabled using           */
2877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* HAL_ADC_DeInit().                                                      */
2878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
2881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->I
2882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* If the requested internal measurement path has already been enabled, */
2884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* bypass the configuration processing.                                 */
2885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Wait loop initialization and execution */
2895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
2899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
2900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
2901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             wait_loop_index--;
2902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
2903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PAT
2906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VREFINT)
2914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (ADC_VREFINT_INSTANCE(hadc))
2917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
2918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
2921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
2923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
2924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* nothing to do */
2925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
2926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
2927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* parameters.                                                              */
2932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
2933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
2935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Process unlocked */
2941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
2944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
2945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
2946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
2948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         the ADC.
2954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds cannot be modified
2958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         while ADC conversion is on going.
2959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
2961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status
2962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
2963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *Analog
2964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
2965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
2967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
2968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
2974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
2975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
2976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if ((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
2978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
2979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
2980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, AnalogWDGConfig->Channel));
2982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
2984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Verify thresholds range */
2985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
2988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
2989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
2990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
2991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
2992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
2994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
2995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
2996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
2997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
2998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
2999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Process locked */
3001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
3002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
3004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
3005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
3006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
3008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
3011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
3012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
3013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
3014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Analog watchdog configuration */
3015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
3025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
3026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
3030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
3031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
3035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
3036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
3039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
3040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
3043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
3044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
3047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
3048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
3051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
3052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Shift the offset in function of the selected ADC resolution:         */
3055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* are set to 0                                                         */
3057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
3058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
3059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
3062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       tmpAWDLowThresholdShifted);
3063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
3072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
3075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
3077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
3079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
3081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
3085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
3095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
3097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           else
3098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
3099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
3101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
3102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
3108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
3112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Shift the thresholds in function of the selected ADC resolution      */
3115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* have to be left-aligned on bit 7, the LSB (right bits) are set to 0  */
3116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
3117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
3118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
3121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       tmpAWDLowThresholdShifted);
3122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
3133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
3138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         else
3140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
3142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       else
3146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
3155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
3160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         else
3162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
3164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
3169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on ADC group regular or injected, no update  */
3170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
3171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else
3172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
3173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
3174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
3177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
3178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Process unlocked */
3179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return function status */
3182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
3183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
3184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
3187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @}
3188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *
3193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** @verbatim
3194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****  ===============================================================================
3195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****  ===============================================================================
3197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     [..]
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     peripheral.
3200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Check the ADC state
3201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (+) Check the ADC error code
3202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** @endverbatim
3204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @{
3205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
3208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC handle state.
3209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         compared with states bits.
3211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         For example:
3212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
3218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
3219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return ADC handle state */
3223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return hadc->State;
3224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
3225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
3227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC error code.
3228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
3232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
3233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return hadc->ErrorCode;
3237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
3238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
3240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @}
3241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
3244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @}
3245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @{
3249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
3252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion.
3253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
3256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
3257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
3258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
3259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
3263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
3265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
3266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
3279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
3280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
3281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
3282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* auto-delay mode.                                                       */
3284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* (see reference manual).                                                */
3288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
3289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
3290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
3291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        )
3292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Use stop of regular group */
3294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
3295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
3297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
3298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
3300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
3308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
3310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Clear JEOS */
3313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
3314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
3318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Stop ADC group regular conversion */
3325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
3326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
3332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
3335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Stop ADC group injected conversion */
3339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
3340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     switch (conversion_group_reassigned)
3346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
3349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
3350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
3352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
3353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
3354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       default:
3355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
3356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
3357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
3376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
3381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return HAL_OK;
3384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
3385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
3387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
3395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
3403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
3405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
3406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
3408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
3414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
3417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
3418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           has been cleared (after a calibration), ADEN bit is reset by the
3426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           calibration logic.
3427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           The workaround is to continue setting ADEN until ADRDY is becomes 1.
3428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           4 ADC clock cycle duration */
3430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Note: Test of ADC enabled required due to hardware constraint to     */
3431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /*       not enable ADC if already enabled.                             */
3432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         LL_ADC_Enable(hadc->Instance);
3435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
3438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
3449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
3453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return HAL_OK;
3456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
3457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
3459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   *         stopped.
3462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
3467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
3469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /*       disabled.                                                          */
3473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
3474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
3475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
3476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
3477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Disable the ADC peripheral */
3481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
3482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
3483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
3485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
3487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
3493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Get tick count */
3497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
3502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
3513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
3517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   return HAL_OK;
3520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
3521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
3523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval None
3526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
3529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
3534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
3535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Set ADC state */
3536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
3541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
3543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* Is CONT bit set ? */
3548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
3549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
3554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
3556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
3560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
3564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
3565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
3569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
3571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
3572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
3575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
3578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
3581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
3583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
3589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     else
3593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
3594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Call ADC DMA error callback */
3595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
3597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
3598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
3599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
3601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval None
3604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
 1020              		.loc 1 3606 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024              	.LVL85:
 1025 0000 08B5     		push	{r3, lr}
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 3, -8
 1028              		.cfi_offset 14, -4
 1029              	.LVL86:
3607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Half conversion callback */
3611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
3614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1030              		.loc 1 3614 0
 1031 0002 806A     		ldr	r0, [r0, #40]
 1032              	.LVL87:
 1033 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1034              	.LVL88:
3615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 1035              		.loc 1 3616 0
 1036 0008 08BD     		pop	{r3, pc}
 1037              		.cfi_endproc
 1038              	.LFE343:
 1040              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1041              		.align	1
 1042              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu fpv4-sp-d16
 1048              	HAL_ADC_LevelOutOfWindowCallback:
 1049              	.LFB333:
2639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1050              		.loc 1 2639 0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054              		@ link register save eliminated.
 1055              	.LVL89:
2646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1056              		.loc 1 2646 0
 1057 0000 7047     		bx	lr
 1058              		.cfi_endproc
 1059              	.LFE333:
 1061              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1062              		.align	1
 1063              		.weak	HAL_ADC_ErrorCallback
 1064              		.syntax unified
 1065              		.thumb
 1066              		.thumb_func
 1067              		.fpu fpv4-sp-d16
 1069              	HAL_ADC_ErrorCallback:
 1070              	.LFB334:
2661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1071              		.loc 1 2661 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075              		@ link register save eliminated.
 1076              	.LVL90:
2668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1077              		.loc 1 2668 0
 1078 0000 7047     		bx	lr
 1079              		.cfi_endproc
 1080              	.LFE334:
 1082              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1083              		.align	1
 1084              		.global	HAL_ADC_IRQHandler
 1085              		.syntax unified
 1086              		.thumb
 1087              		.thumb_func
 1088              		.fpu fpv4-sp-d16
 1090              	HAL_ADC_IRQHandler:
 1091              	.LFB330:
2237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1092              		.loc 1 2237 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096              	.LVL91:
 1097 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1098              		.cfi_def_cfa_offset 24
 1099              		.cfi_offset 3, -24
 1100              		.cfi_offset 4, -20
 1101              		.cfi_offset 5, -16
 1102              		.cfi_offset 6, -12
 1103              		.cfi_offset 7, -8
 1104              		.cfi_offset 14, -4
 1105 0002 0446     		mov	r4, r0
 1106              	.LVL92:
2239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1107              		.loc 1 2239 0
 1108 0004 0368     		ldr	r3, [r0]
 1109 0006 1D68     		ldr	r5, [r3]
 1110              	.LVL93:
2240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1111              		.loc 1 2240 0
 1112 0008 5E68     		ldr	r6, [r3, #4]
 1113              	.LVL94:
 1114              	.LBB386:
 1115              	.LBB387:
5693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1116              		.loc 2 5693 0
 1117 000a A04B     		ldr	r3, .L139
 1118 000c 9F68     		ldr	r7, [r3, #8]
 1119 000e 07F01F07 		and	r7, r7, #31
 1120              	.LVL95:
 1121              	.LBE387:
 1122              	.LBE386:
2254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1123              		.loc 1 2254 0
 1124 0012 15F0020F 		tst	r5, #2
 1125 0016 10D0     		beq	.L93
2254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1126              		.loc 1 2254 0 is_stmt 0 discriminator 1
 1127 0018 16F0020F 		tst	r6, #2
 1128 001c 0DD0     		beq	.L93
2257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 1129              		.loc 1 2257 0 is_stmt 1
 1130 001e 436D     		ldr	r3, [r0, #84]
 1131 0020 13F0100F 		tst	r3, #16
 1132 0024 03D1     		bne	.L94
2260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 1133              		.loc 1 2260 0
 1134 0026 436D     		ldr	r3, [r0, #84]
 1135 0028 43F40063 		orr	r3, r3, #2048
 1136 002c 4365     		str	r3, [r0, #84]
 1137              	.L94:
2267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1138              		.loc 1 2267 0
 1139 002e 2046     		mov	r0, r4
 1140              	.LVL96:
 1141 0030 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1142              	.LVL97:
2271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 1143              		.loc 1 2271 0
 1144 0034 2368     		ldr	r3, [r4]
 1145 0036 0222     		movs	r2, #2
 1146 0038 1A60     		str	r2, [r3]
 1147              	.L93:
2275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1148              		.loc 1 2275 0
 1149 003a 15F0040F 		tst	r5, #4
 1150 003e 02D0     		beq	.L95
2275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1151              		.loc 1 2275 0 is_stmt 0 discriminator 1
 1152 0040 16F0040F 		tst	r6, #4
 1153 0044 05D1     		bne	.L96
 1154              	.L95:
2275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1155              		.loc 1 2275 0 discriminator 3
 1156 0046 15F0080F 		tst	r5, #8
 1157 004a 4AD0     		beq	.L97
2276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1158              		.loc 1 2276 0 is_stmt 1
 1159 004c 16F0080F 		tst	r6, #8
 1160 0050 47D0     		beq	.L97
 1161              	.L96:
2279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 1162              		.loc 1 2279 0
 1163 0052 636D     		ldr	r3, [r4, #84]
 1164 0054 13F0100F 		tst	r3, #16
 1165 0058 03D1     		bne	.L98
2282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 1166              		.loc 1 2282 0
 1167 005a 636D     		ldr	r3, [r4, #84]
 1168 005c 43F40073 		orr	r3, r3, #512
 1169 0060 6365     		str	r3, [r4, #84]
 1170              	.L98:
2288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 1171              		.loc 1 2288 0
 1172 0062 2368     		ldr	r3, [r4]
 1173              	.LVL98:
 1174              	.LBB388:
 1175              	.LBB389:
3248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1176              		.loc 2 3248 0
 1177 0064 DA68     		ldr	r2, [r3, #12]
 1178 0066 12F4406F 		tst	r2, #3072
 1179 006a 34D1     		bne	.L99
 1180              	.LVL99:
 1181              	.LBE389:
 1182              	.LBE388:
2294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1183              		.loc 1 2294 0
 1184 006c 884A     		ldr	r2, .L139+4
 1185 006e 9342     		cmp	r3, r2
 1186 0070 09D0     		beq	.L133
 1187 0072 1A46     		mov	r2, r3
 1188              	.L100:
2294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1189              		.loc 1 2294 0 is_stmt 0 discriminator 4
 1190 0074 9342     		cmp	r3, r2
 1191 0076 09D0     		beq	.L101
2295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 1192              		.loc 1 2295 0 is_stmt 1
 1193 0078 47B1     		cbz	r7, .L101
2296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 1194              		.loc 1 2296 0
 1195 007a 052F     		cmp	r7, #5
 1196 007c 06D0     		beq	.L101
2297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          )
 1197              		.loc 1 2297 0
 1198 007e 092F     		cmp	r7, #9
 1199 0080 04D0     		beq	.L101
 1200              	.LVL100:
2307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 1201              		.loc 1 2307 0 discriminator 4
 1202 0082 D268     		ldr	r2, [r2, #12]
 1203              	.LVL101:
 1204 0084 03E0     		b	.L103
 1205              	.LVL102:
 1206              	.L133:
2294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1207              		.loc 1 2294 0
 1208 0086 A2F58072 		sub	r2, r2, #256
 1209 008a F3E7     		b	.L100
 1210              	.L101:
2301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 1211              		.loc 1 2301 0
 1212 008c DA68     		ldr	r2, [r3, #12]
 1213              	.LVL103:
 1214              	.L103:
2314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 1215              		.loc 1 2314 0
 1216 008e 12F4005F 		tst	r2, #8192
 1217 0092 20D1     		bne	.L99
2317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 1218              		.loc 1 2317 0
 1219 0094 1A68     		ldr	r2, [r3]
 1220              	.LVL104:
 1221 0096 12F0080F 		tst	r2, #8
 1222 009a 1CD0     		beq	.L99
 1223              	.LVL105:
 1224              	.LBB390:
 1225              	.LBB391:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1226              		.loc 2 6170 0
 1227 009c 9A68     		ldr	r2, [r3, #8]
 1228 009e 12F0040F 		tst	r2, #4
 1229 00a2 10D1     		bne	.L104
 1230              	.LVL106:
 1231              	.LBE391:
 1232              	.LBE390:
2327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1233              		.loc 1 2327 0
 1234 00a4 5A68     		ldr	r2, [r3, #4]
 1235 00a6 22F00C02 		bic	r2, r2, #12
 1236 00aa 5A60     		str	r2, [r3, #4]
2330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1237              		.loc 1 2330 0
 1238 00ac 636D     		ldr	r3, [r4, #84]
 1239 00ae 23F48073 		bic	r3, r3, #256
 1240 00b2 6365     		str	r3, [r4, #84]
2332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             {
 1241              		.loc 1 2332 0
 1242 00b4 636D     		ldr	r3, [r4, #84]
 1243 00b6 13F4805F 		tst	r3, #4096
 1244 00ba 0CD1     		bne	.L99
2334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             }
 1245              		.loc 1 2334 0
 1246 00bc 636D     		ldr	r3, [r4, #84]
 1247 00be 43F00103 		orr	r3, r3, #1
 1248 00c2 6365     		str	r3, [r4, #84]
 1249 00c4 07E0     		b	.L99
 1250              	.LVL107:
 1251              	.L104:
2340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1252              		.loc 1 2340 0
 1253 00c6 636D     		ldr	r3, [r4, #84]
 1254 00c8 43F01003 		orr	r3, r3, #16
 1255 00cc 6365     		str	r3, [r4, #84]
2343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 1256              		.loc 1 2343 0
 1257 00ce A36D     		ldr	r3, [r4, #88]
 1258 00d0 43F00103 		orr	r3, r3, #1
 1259 00d4 A365     		str	r3, [r4, #88]
 1260              	.L99:
2357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1261              		.loc 1 2357 0
 1262 00d6 2046     		mov	r0, r4
 1263 00d8 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1264              	.LVL108:
2365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 1265              		.loc 1 2365 0
 1266 00dc 2368     		ldr	r3, [r4]
 1267 00de 0C22     		movs	r2, #12
 1268 00e0 1A60     		str	r2, [r3]
 1269              	.L97:
2369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1270              		.loc 1 2369 0
 1271 00e2 15F0200F 		tst	r5, #32
 1272 00e6 02D0     		beq	.L106
2369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1273              		.loc 1 2369 0 is_stmt 0 discriminator 1
 1274 00e8 16F0200F 		tst	r6, #32
 1275 00ec 05D1     		bne	.L107
 1276              	.L106:
2369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1277              		.loc 1 2369 0 discriminator 3
 1278 00ee 15F0400F 		tst	r5, #64
 1279 00f2 5CD0     		beq	.L108
2370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1280              		.loc 1 2370 0 is_stmt 1
 1281 00f4 16F0400F 		tst	r6, #64
 1282 00f8 59D0     		beq	.L108
 1283              	.L107:
2373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 1284              		.loc 1 2373 0
 1285 00fa 636D     		ldr	r3, [r4, #84]
 1286 00fc 13F0100F 		tst	r3, #16
 1287 0100 03D1     		bne	.L109
2376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 1288              		.loc 1 2376 0
 1289 0102 636D     		ldr	r3, [r4, #84]
 1290 0104 43F40053 		orr	r3, r3, #8192
 1291 0108 6365     		str	r3, [r4, #84]
 1292              	.L109:
2380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1293              		.loc 1 2380 0
 1294 010a 2368     		ldr	r3, [r4]
 1295              	.LVL109:
 1296              	.LBB392:
 1297              	.LBB393:
3974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1298              		.loc 2 3974 0
 1299 010c DA6C     		ldr	r2, [r3, #76]
 1300 010e 12F0C00F 		tst	r2, #192
 1301 0112 12D1     		bne	.L129
 1302 0114 0121     		movs	r1, #1
 1303              	.L110:
 1304              	.LVL110:
 1305              	.LBE393:
 1306              	.LBE392:
 1307              	.LBB395:
 1308              	.LBB396:
3248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1309              		.loc 2 3248 0
 1310 0116 DA68     		ldr	r2, [r3, #12]
 1311 0118 12F4406F 		tst	r2, #3072
 1312 011c 0FD1     		bne	.L130
 1313 011e 0120     		movs	r0, #1
 1314              	.L111:
 1315              	.LVL111:
 1316              	.LBE396:
 1317              	.LBE395:
2386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1318              		.loc 1 2386 0
 1319 0120 5B4A     		ldr	r2, .L139+4
 1320 0122 9342     		cmp	r3, r2
 1321 0124 0DD0     		beq	.L134
 1322 0126 1A46     		mov	r2, r3
 1323              	.L112:
2386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1324              		.loc 1 2386 0 is_stmt 0 discriminator 4
 1325 0128 9342     		cmp	r3, r2
 1326 012a 0DD0     		beq	.L113
2387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 1327              		.loc 1 2387 0 is_stmt 1
 1328 012c 67B1     		cbz	r7, .L113
2388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1329              		.loc 1 2388 0
 1330 012e 062F     		cmp	r7, #6
 1331 0130 0AD0     		beq	.L113
2389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        )
 1332              		.loc 1 2389 0
 1333 0132 072F     		cmp	r7, #7
 1334 0134 08D0     		beq	.L113
 1335              	.LVL112:
2397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 1336              		.loc 1 2397 0 discriminator 4
 1337 0136 D268     		ldr	r2, [r2, #12]
 1338              	.LVL113:
 1339 0138 07E0     		b	.L115
 1340              	.LVL114:
 1341              	.L129:
 1342              	.LBB398:
 1343              	.LBB394:
3974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1344              		.loc 2 3974 0
 1345 013a 0021     		movs	r1, #0
 1346 013c EBE7     		b	.L110
 1347              	.LVL115:
 1348              	.L130:
 1349              	.LBE394:
 1350              	.LBE398:
 1351              	.LBB399:
 1352              	.LBB397:
3248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1353              		.loc 2 3248 0
 1354 013e 0020     		movs	r0, #0
 1355 0140 EEE7     		b	.L111
 1356              	.LVL116:
 1357              	.L134:
 1358              	.LBE397:
 1359              	.LBE399:
2386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1360              		.loc 1 2386 0
 1361 0142 A2F58072 		sub	r2, r2, #256
 1362 0146 EFE7     		b	.L112
 1363              	.L113:
2392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 1364              		.loc 1 2392 0
 1365 0148 DA68     		ldr	r2, [r3, #12]
 1366              	.LVL117:
 1367              	.L115:
2408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 1368              		.loc 1 2408 0
 1369 014a 51B3     		cbz	r1, .L116
2410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1370              		.loc 1 2410 0
 1371 014c 12F0007F 		tst	r2, #33554432
 1372 0150 03D0     		beq	.L117
2410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1373              		.loc 1 2410 0 is_stmt 0 discriminator 1
 1374 0152 30B3     		cbz	r0, .L116
2411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
 1375              		.loc 1 2411 0 is_stmt 1
 1376 0154 12F4005F 		tst	r2, #8192
 1377 0158 23D1     		bne	.L116
 1378              	.L117:
2415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 1379              		.loc 1 2415 0
 1380 015a 1968     		ldr	r1, [r3]
 1381 015c 11F0400F 		tst	r1, #64
 1382 0160 1FD0     		beq	.L116
2423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
 1383              		.loc 1 2423 0
 1384 0162 12F4001F 		tst	r2, #2097152
 1385 0166 1CD1     		bne	.L116
 1386              	.LVL118:
 1387              	.LBB400:
 1388              	.LBB401:
 1389              		.loc 2 6353 0
 1390 0168 9A68     		ldr	r2, [r3, #8]
 1391              	.LVL119:
 1392 016a 12F0080F 		tst	r2, #8
 1393 016e 10D1     		bne	.L118
 1394              	.LVL120:
 1395              	.LBE401:
 1396              	.LBE400:
2430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1397              		.loc 1 2430 0
 1398 0170 5A68     		ldr	r2, [r3, #4]
 1399 0172 22F06002 		bic	r2, r2, #96
 1400 0176 5A60     		str	r2, [r3, #4]
2433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1401              		.loc 1 2433 0
 1402 0178 636D     		ldr	r3, [r4, #84]
 1403 017a 23F48053 		bic	r3, r3, #4096
 1404 017e 6365     		str	r3, [r4, #84]
2435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               {
 1405              		.loc 1 2435 0
 1406 0180 636D     		ldr	r3, [r4, #84]
 1407 0182 13F4807F 		tst	r3, #256
 1408 0186 0CD1     		bne	.L116
2437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               }
 1409              		.loc 1 2437 0
 1410 0188 636D     		ldr	r3, [r4, #84]
 1411 018a 43F00103 		orr	r3, r3, #1
 1412 018e 6365     		str	r3, [r4, #84]
 1413 0190 07E0     		b	.L116
 1414              	.LVL121:
 1415              	.L118:
2443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1416              		.loc 1 2443 0
 1417 0192 636D     		ldr	r3, [r4, #84]
 1418 0194 43F01003 		orr	r3, r3, #16
 1419 0198 6365     		str	r3, [r4, #84]
2446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             }
 1420              		.loc 1 2446 0
 1421 019a A36D     		ldr	r3, [r4, #88]
 1422 019c 43F00103 		orr	r3, r3, #1
 1423 01a0 A365     		str	r3, [r4, #88]
 1424              	.L116:
2462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1425              		.loc 1 2462 0
 1426 01a2 2046     		mov	r0, r4
 1427 01a4 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1428              	.LVL122:
2466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 1429              		.loc 1 2466 0
 1430 01a8 2368     		ldr	r3, [r4]
 1431 01aa 6022     		movs	r2, #96
 1432 01ac 1A60     		str	r2, [r3]
 1433              	.L108:
2470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1434              		.loc 1 2470 0
 1435 01ae 15F0800F 		tst	r5, #128
 1436 01b2 02D0     		beq	.L120
2470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1437              		.loc 1 2470 0 is_stmt 0 discriminator 1
 1438 01b4 16F0800F 		tst	r6, #128
 1439 01b8 2FD1     		bne	.L135
 1440              	.L120:
2487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1441              		.loc 1 2487 0 is_stmt 1
 1442 01ba 15F4807F 		tst	r5, #256
 1443 01be 02D0     		beq	.L121
2487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1444              		.loc 1 2487 0 is_stmt 0 discriminator 1
 1445 01c0 16F4807F 		tst	r6, #256
 1446 01c4 34D1     		bne	.L136
 1447              	.L121:
2504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1448              		.loc 1 2504 0 is_stmt 1
 1449 01c6 15F4007F 		tst	r5, #512
 1450 01ca 02D0     		beq	.L122
2504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1451              		.loc 1 2504 0 is_stmt 0 discriminator 1
 1452 01cc 16F4007F 		tst	r6, #512
 1453 01d0 3AD1     		bne	.L137
 1454              	.L122:
2521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1455              		.loc 1 2521 0 is_stmt 1
 1456 01d2 15F0100F 		tst	r5, #16
 1457 01d6 19D0     		beq	.L123
2521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1458              		.loc 1 2521 0 is_stmt 0 discriminator 1
 1459 01d8 16F0100F 		tst	r6, #16
 1460 01dc 16D0     		beq	.L123
2529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 1461              		.loc 1 2529 0 is_stmt 1
 1462 01de 636B     		ldr	r3, [r4, #52]
 1463 01e0 33B1     		cbz	r3, .L124
2537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 1464              		.loc 1 2537 0
 1465 01e2 002F     		cmp	r7, #0
 1466 01e4 3CD0     		beq	.L125
 1467              	.LVL123:
 1468              	.LBB402:
 1469              	.LBB403:
5790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1470              		.loc 2 5790 0
 1471 01e6 294B     		ldr	r3, .L139
 1472 01e8 9B68     		ldr	r3, [r3, #8]
 1473              	.LVL124:
 1474              	.LBE403:
 1475              	.LBE402:
2541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 1476              		.loc 1 2541 0
 1477 01ea 13F4604F 		tst	r3, #57344
 1478 01ee 0AD0     		beq	.L126
 1479              	.L124:
2560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1480              		.loc 1 2560 0
 1481 01f0 636D     		ldr	r3, [r4, #84]
 1482 01f2 43F48063 		orr	r3, r3, #1024
 1483 01f6 6365     		str	r3, [r4, #84]
2563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1484              		.loc 1 2563 0
 1485 01f8 A36D     		ldr	r3, [r4, #88]
 1486 01fa 43F00203 		orr	r3, r3, #2
 1487 01fe A365     		str	r3, [r4, #88]
2573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1488              		.loc 1 2573 0
 1489 0200 2046     		mov	r0, r4
 1490 0202 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1491              	.LVL125:
 1492              	.L126:
2578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 1493              		.loc 1 2578 0
 1494 0206 2368     		ldr	r3, [r4]
 1495 0208 1022     		movs	r2, #16
 1496 020a 1A60     		str	r2, [r3]
 1497              	.L123:
2582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1498              		.loc 1 2582 0
 1499 020c 15F4806F 		tst	r5, #1024
 1500 0210 02D0     		beq	.L92
2582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1501              		.loc 1 2582 0 is_stmt 0 discriminator 1
 1502 0212 16F4806F 		tst	r6, #1024
 1503 0216 29D1     		bne	.L138
 1504              	.L92:
2601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1505              		.loc 1 2601 0 is_stmt 1
 1506 0218 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1507              	.LVL126:
 1508              	.L135:
2473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1509              		.loc 1 2473 0
 1510 021a 636D     		ldr	r3, [r4, #84]
 1511 021c 43F48033 		orr	r3, r3, #65536
 1512 0220 6365     		str	r3, [r4, #84]
2479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1513              		.loc 1 2479 0
 1514 0222 2046     		mov	r0, r4
 1515 0224 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1516              	.LVL127:
2483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 1517              		.loc 1 2483 0
 1518 0228 2368     		ldr	r3, [r4]
 1519 022a 8022     		movs	r2, #128
 1520 022c 1A60     		str	r2, [r3]
 1521 022e C4E7     		b	.L120
 1522              	.L136:
2490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1523              		.loc 1 2490 0
 1524 0230 636D     		ldr	r3, [r4, #84]
 1525 0232 43F40033 		orr	r3, r3, #131072
 1526 0236 6365     		str	r3, [r4, #84]
2496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1527              		.loc 1 2496 0
 1528 0238 2046     		mov	r0, r4
 1529 023a FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1530              	.LVL128:
2500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 1531              		.loc 1 2500 0
 1532 023e 2368     		ldr	r3, [r4]
 1533 0240 4FF48072 		mov	r2, #256
 1534 0244 1A60     		str	r2, [r3]
 1535 0246 BEE7     		b	.L121
 1536              	.L137:
2507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1537              		.loc 1 2507 0
 1538 0248 636D     		ldr	r3, [r4, #84]
 1539 024a 43F48023 		orr	r3, r3, #262144
 1540 024e 6365     		str	r3, [r4, #84]
2513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1541              		.loc 1 2513 0
 1542 0250 2046     		mov	r0, r4
 1543 0252 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1544              	.LVL129:
2517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 1545              		.loc 1 2517 0
 1546 0256 2368     		ldr	r3, [r4]
 1547 0258 4FF40072 		mov	r2, #512
 1548 025c 1A60     		str	r2, [r3]
 1549 025e B8E7     		b	.L122
 1550              	.L125:
2550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 1551              		.loc 1 2550 0
 1552 0260 2368     		ldr	r3, [r4]
 1553 0262 DB68     		ldr	r3, [r3, #12]
 1554 0264 13F0010F 		tst	r3, #1
 1555 0268 CDD0     		beq	.L126
 1556 026a C1E7     		b	.L124
 1557              	.L138:
2585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1558              		.loc 1 2585 0
 1559 026c 636D     		ldr	r3, [r4, #84]
 1560 026e 43F48043 		orr	r3, r3, #16384
 1561 0272 6365     		str	r3, [r4, #84]
2588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1562              		.loc 1 2588 0
 1563 0274 A36D     		ldr	r3, [r4, #88]
 1564 0276 43F00803 		orr	r3, r3, #8
 1565 027a A365     		str	r3, [r4, #88]
2591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1566              		.loc 1 2591 0
 1567 027c 2368     		ldr	r3, [r4]
 1568 027e 4FF48062 		mov	r2, #1024
 1569 0282 1A60     		str	r2, [r3]
2597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1570              		.loc 1 2597 0
 1571 0284 2046     		mov	r0, r4
 1572 0286 FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 1573              	.LVL130:
2601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1574              		.loc 1 2601 0
 1575 028a C5E7     		b	.L92
 1576              	.L140:
 1577              		.align	2
 1578              	.L139:
 1579 028c 00030450 		.word	1342440192
 1580 0290 00010450 		.word	1342439680
 1581              		.cfi_endproc
 1582              	.LFE330:
 1584              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1585              		.align	1
 1586              		.global	ADC_DMAConvCplt
 1587              		.syntax unified
 1588              		.thumb
 1589              		.thumb_func
 1590              		.fpu fpv4-sp-d16
 1592              	ADC_DMAConvCplt:
 1593              	.LFB342:
3528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1594              		.loc 1 3528 0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 0
 1597              		@ frame_needed = 0, uses_anonymous_args = 0
 1598              	.LVL131:
 1599 0000 08B5     		push	{r3, lr}
 1600              		.cfi_def_cfa_offset 8
 1601              		.cfi_offset 3, -8
 1602              		.cfi_offset 14, -4
3530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1603              		.loc 1 3530 0
 1604 0002 836A     		ldr	r3, [r0, #40]
 1605              	.LVL132:
3533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1606              		.loc 1 3533 0
 1607 0004 5A6D     		ldr	r2, [r3, #84]
 1608 0006 12F0500F 		tst	r2, #80
 1609 000a 31D1     		bne	.L142
3536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1610              		.loc 1 3536 0
 1611 000c 5A6D     		ldr	r2, [r3, #84]
 1612 000e 42F40072 		orr	r2, r2, #512
 1613 0012 5A65     		str	r2, [r3, #84]
3542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 1614              		.loc 1 3542 0
 1615 0014 1A68     		ldr	r2, [r3]
 1616 0016 1168     		ldr	r1, [r2]
 1617 0018 11F0080F 		tst	r1, #8
 1618 001c 14D0     		beq	.L143
 1619              	.LVL133:
 1620              	.LBB404:
 1621              	.LBB405:
3248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1622              		.loc 2 3248 0
 1623 001e D168     		ldr	r1, [r2, #12]
 1624 0020 11F4406F 		tst	r1, #3072
 1625 0024 20D1     		bne	.L144
 1626              	.LVL134:
 1627              	.LBE405:
 1628              	.LBE404:
3548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 1629              		.loc 1 3548 0
 1630 0026 D268     		ldr	r2, [r2, #12]
 1631 0028 12F4005F 		tst	r2, #8192
 1632 002c 1CD1     		bne	.L144
3551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1633              		.loc 1 3551 0
 1634 002e 5A6D     		ldr	r2, [r3, #84]
 1635 0030 22F48072 		bic	r2, r2, #256
 1636 0034 5A65     		str	r2, [r3, #84]
3552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
 1637              		.loc 1 3552 0
 1638 0036 5A6D     		ldr	r2, [r3, #84]
 1639 0038 12F4805F 		tst	r2, #4096
 1640 003c 14D1     		bne	.L144
3554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 1641              		.loc 1 3554 0
 1642 003e 5A6D     		ldr	r2, [r3, #84]
 1643 0040 42F00102 		orr	r2, r2, #1
 1644 0044 5A65     		str	r2, [r3, #84]
 1645 0046 0FE0     		b	.L144
 1646              	.L143:
3563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 1647              		.loc 1 3563 0
 1648 0048 D268     		ldr	r2, [r2, #12]
 1649 004a 12F0020F 		tst	r2, #2
 1650 004e 0BD1     		bne	.L144
3566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1651              		.loc 1 3566 0
 1652 0050 5A6D     		ldr	r2, [r3, #84]
 1653 0052 22F48072 		bic	r2, r2, #256
 1654 0056 5A65     		str	r2, [r3, #84]
3567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 1655              		.loc 1 3567 0
 1656 0058 5A6D     		ldr	r2, [r3, #84]
 1657 005a 12F4805F 		tst	r2, #4096
 1658 005e 03D1     		bne	.L144
3569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 1659              		.loc 1 3569 0
 1660 0060 5A6D     		ldr	r2, [r3, #84]
 1661 0062 42F00102 		orr	r2, r2, #1
 1662 0066 5A65     		str	r2, [r3, #84]
 1663              	.L144:
3578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1664              		.loc 1 3578 0
 1665 0068 1846     		mov	r0, r3
 1666              	.LVL135:
 1667 006a FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1668              	.LVL136:
 1669              	.L141:
3598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1670              		.loc 1 3598 0
 1671 006e 08BD     		pop	{r3, pc}
 1672              	.LVL137:
 1673              	.L142:
3583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 1674              		.loc 1 3583 0
 1675 0070 5A6D     		ldr	r2, [r3, #84]
 1676 0072 12F0100F 		tst	r2, #16
 1677 0076 03D1     		bne	.L148
3595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 1678              		.loc 1 3595 0
 1679 0078 DB6C     		ldr	r3, [r3, #76]
 1680              	.LVL138:
 1681 007a 5B6B     		ldr	r3, [r3, #52]
 1682 007c 9847     		blx	r3
 1683              	.LVL139:
3598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1684              		.loc 1 3598 0
 1685 007e F6E7     		b	.L141
 1686              	.LVL140:
 1687              	.L148:
3589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1688              		.loc 1 3589 0
 1689 0080 1846     		mov	r0, r3
 1690              	.LVL141:
 1691 0082 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1692              	.LVL142:
 1693 0086 F2E7     		b	.L141
 1694              		.cfi_endproc
 1695              	.LFE342:
 1697              		.section	.text.ADC_DMAError,"ax",%progbits
 1698              		.align	1
 1699              		.global	ADC_DMAError
 1700              		.syntax unified
 1701              		.thumb
 1702              		.thumb_func
 1703              		.fpu fpv4-sp-d16
 1705              	ADC_DMAError:
 1706              	.LFB344:
3617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** /**
3619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @brief  DMA error callback.
3620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   * @retval None
3622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   */
3623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** {
 1707              		.loc 1 3624 0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 0
 1710              		@ frame_needed = 0, uses_anonymous_args = 0
 1711              	.LVL143:
 1712 0000 08B5     		push	{r3, lr}
 1713              		.cfi_def_cfa_offset 8
 1714              		.cfi_offset 3, -8
 1715              		.cfi_offset 14, -4
3625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1716              		.loc 1 3626 0
 1717 0002 806A     		ldr	r0, [r0, #40]
 1718              	.LVL144:
3627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Set ADC state */
3629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1719              		.loc 1 3629 0
 1720 0004 436D     		ldr	r3, [r0, #84]
 1721 0006 43F04003 		orr	r3, r3, #64
 1722 000a 4365     		str	r3, [r0, #84]
3630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1723              		.loc 1 3632 0
 1724 000c 836D     		ldr	r3, [r0, #88]
 1725 000e 43F00403 		orr	r3, r3, #4
 1726 0012 8365     		str	r3, [r0, #88]
3633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
3634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Error callback */
3635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #else
3638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1727              		.loc 1 3638 0
 1728 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1729              	.LVL145:
3639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 1730              		.loc 1 3640 0
 1731 0018 08BD     		pop	{r3, pc}
 1732              		.cfi_endproc
 1733              	.LFE344:
 1735              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1736              		.align	1
 1737              		.global	HAL_ADC_ConfigChannel
 1738              		.syntax unified
 1739              		.thumb
 1740              		.thumb_func
 1741              		.fpu fpv4-sp-d16
 1743              	HAL_ADC_ConfigChannel:
 1744              	.LFB335:
2707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1745              		.loc 1 2707 0
 1746              		.cfi_startproc
 1747              		@ args = 0, pretend = 0, frame = 8
 1748              		@ frame_needed = 0, uses_anonymous_args = 0
 1749              		@ link register save eliminated.
 1750              	.LVL146:
 1751 0000 F0B4     		push	{r4, r5, r6, r7}
 1752              		.cfi_def_cfa_offset 16
 1753              		.cfi_offset 4, -16
 1754              		.cfi_offset 5, -12
 1755              		.cfi_offset 6, -8
 1756              		.cfi_offset 7, -4
 1757 0002 82B0     		sub	sp, sp, #8
 1758              		.cfi_def_cfa_offset 24
 1759              	.LVL147:
2711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 1760              		.loc 1 2711 0
 1761 0004 0022     		movs	r2, #0
 1762 0006 0192     		str	r2, [sp, #4]
2738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1763              		.loc 1 2738 0
 1764 0008 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 1765 000c 012A     		cmp	r2, #1
 1766 000e 00F03A82 		beq	.L211
 1767 0012 0346     		mov	r3, r0
2738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1768              		.loc 1 2738 0 is_stmt 0 discriminator 2
 1769 0014 0122     		movs	r2, #1
 1770 0016 80F85020 		strb	r2, [r0, #80]
2745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 1771              		.loc 1 2745 0 is_stmt 1 discriminator 2
 1772 001a 0268     		ldr	r2, [r0]
 1773              	.LVL148:
 1774              	.LBB406:
 1775              	.LBB407:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1776              		.loc 2 6170 0 discriminator 2
 1777 001c 9268     		ldr	r2, [r2, #8]
 1778              	.LVL149:
 1779 001e 12F0040F 		tst	r2, #4
 1780 0022 0AD0     		beq	.L153
 1781              	.LVL150:
 1782              	.LBE407:
 1783              	.LBE406:
2935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1784              		.loc 1 2935 0
 1785 0024 426D     		ldr	r2, [r0, #84]
 1786 0026 42F02002 		orr	r2, r2, #32
 1787 002a 4265     		str	r2, [r0, #84]
 1788              	.LVL151:
2937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 1789              		.loc 1 2937 0
 1790 002c 0120     		movs	r0, #1
 1791              	.LVL152:
 1792              	.L154:
2941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1793              		.loc 1 2941 0
 1794 002e 0022     		movs	r2, #0
 1795 0030 83F85020 		strb	r2, [r3, #80]
 1796              	.LVL153:
 1797              	.L152:
2945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1798              		.loc 1 2945 0
 1799 0034 02B0     		add	sp, sp, #8
 1800              		.cfi_remember_state
 1801              		.cfi_def_cfa_offset 16
 1802              		@ sp needed
 1803 0036 F0BC     		pop	{r4, r5, r6, r7}
 1804              		.cfi_restore 7
 1805              		.cfi_restore 6
 1806              		.cfi_restore 5
 1807              		.cfi_restore 4
 1808              		.cfi_def_cfa_offset 0
 1809 0038 7047     		bx	lr
 1810              	.LVL154:
 1811              	.L153:
 1812              		.cfi_restore_state
2753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 1813              		.loc 1 2753 0
 1814 003a 4A68     		ldr	r2, [r1, #4]
 1815 003c 052A     		cmp	r2, #5
 1816 003e 09D8     		bhi	.L155
2755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 1817              		.loc 1 2755 0
 1818 0040 023A     		subs	r2, r2, #2
 1819 0042 032A     		cmp	r2, #3
 1820 0044 00F28E80 		bhi	.L156
 1821 0048 DFE802F0 		tbb	[pc, r2]
 1822              	.LVL155:
 1823              	.L158:
 1824 004c 02       		.byte	(.L157-.L158)/2
 1825 004d 82       		.byte	(.L159-.L158)/2
 1826 004e 85       		.byte	(.L160-.L158)/2
 1827 004f 88       		.byte	(.L161-.L158)/2
 1828              		.p2align 1
 1829              	.L157:
2758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
 1830              		.loc 1 2758 0
 1831 0050 0C22     		movs	r2, #12
 1832 0052 4A60     		str	r2, [r1, #4]
 1833              	.L155:
2778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1834              		.loc 1 2778 0
 1835 0054 1E68     		ldr	r6, [r3]
 1836 0056 4D68     		ldr	r5, [r1, #4]
 1837 0058 0C68     		ldr	r4, [r1]
 1838              	.LVL156:
 1839              	.LBB408:
 1840              	.LBB409:
3554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 1841              		.loc 2 3554 0
 1842 005a 3036     		adds	r6, r6, #48
 1843              	.LVL157:
 1844 005c 2A0A     		lsrs	r2, r5, #8
 1845 005e 9200     		lsls	r2, r2, #2
 1846 0060 02F00C02 		and	r2, r2, #12
 1847              	.LVL158:
3556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1848              		.loc 2 3556 0
 1849 0064 B058     		ldr	r0, [r6, r2]
 1850 0066 05F01F05 		and	r5, r5, #31
 1851              	.LVL159:
 1852 006a 1F27     		movs	r7, #31
 1853 006c AF40     		lsls	r7, r7, r5
 1854 006e 20EA0700 		bic	r0, r0, r7
 1855 0072 C4F38464 		ubfx	r4, r4, #26, #5
 1856              	.LVL160:
 1857 0076 AC40     		lsls	r4, r4, r5
 1858 0078 2043     		orrs	r0, r0, r4
 1859 007a B050     		str	r0, [r6, r2]
 1860              	.LVL161:
 1861              	.LBE409:
 1862              	.LBE408:
2785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 1863              		.loc 1 2785 0
 1864 007c 1A68     		ldr	r2, [r3]
 1865              	.LVL162:
 1866              	.LBB410:
 1867              	.LBB411:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1868              		.loc 2 6170 0
 1869 007e 9068     		ldr	r0, [r2, #8]
 1870 0080 10F0040F 		tst	r0, #4
 1871 0084 71D0     		beq	.L212
 1872 0086 0120     		movs	r0, #1
 1873              	.L162:
 1874              	.LVL163:
 1875              	.LBE411:
 1876              	.LBE410:
 1877              	.LBB413:
 1878              	.LBB414:
 1879              		.loc 2 6353 0
 1880 0088 9468     		ldr	r4, [r2, #8]
 1881 008a 14F0080F 		tst	r4, #8
 1882 008e 6ED0     		beq	.L213
 1883 0090 0124     		movs	r4, #1
 1884              	.L163:
 1885              	.LVL164:
 1886              	.LBE414:
 1887              	.LBE413:
2787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 1888              		.loc 1 2787 0
 1889 0092 50BB     		cbnz	r0, .L164
2788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        )
 1890              		.loc 1 2788 0
 1891 0094 4CBB     		cbnz	r4, .L164
2811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif
 1892              		.loc 1 2811 0
 1893 0096 0E68     		ldr	r6, [r1]
 1894 0098 8D68     		ldr	r5, [r1, #8]
 1895              	.LVL165:
 1896              	.LBB416:
 1897              	.LBB417:
4720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 1898              		.loc 2 4720 0
 1899 009a 1432     		adds	r2, r2, #20
 1900              	.LVL166:
 1901 009c 700E     		lsrs	r0, r6, #25
 1902 009e 8000     		lsls	r0, r0, #2
 1903 00a0 00F00400 		and	r0, r0, #4
 1904              	.LVL167:
4722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 1905              		.loc 2 4722 0
 1906 00a4 1458     		ldr	r4, [r2, r0]
 1907 00a6 C6F30456 		ubfx	r6, r6, #20, #5
 1908              	.LVL168:
 1909 00aa 0727     		movs	r7, #7
 1910 00ac B740     		lsls	r7, r7, r6
 1911 00ae 24EA0704 		bic	r4, r4, r7
 1912 00b2 B540     		lsls	r5, r5, r6
 1913              	.LVL169:
 1914 00b4 2C43     		orrs	r4, r4, r5
 1915 00b6 1450     		str	r4, [r2, r0]
 1916              	.LVL170:
 1917              	.LBE417:
 1918              	.LBE416:
2818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1919              		.loc 1 2818 0
 1920 00b8 4C69     		ldr	r4, [r1, #20]
 1921 00ba 1868     		ldr	r0, [r3]
 1922 00bc C268     		ldr	r2, [r0, #12]
 1923 00be C2F3C102 		ubfx	r2, r2, #3, #2
 1924 00c2 5200     		lsls	r2, r2, #1
 1925 00c4 04FA02F2 		lsl	r2, r4, r2
 1926              	.LVL171:
2820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 1927              		.loc 1 2820 0
 1928 00c8 0D69     		ldr	r5, [r1, #16]
 1929 00ca 042D     		cmp	r5, #4
 1930 00cc 51D0     		beq	.L165
2823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1931              		.loc 1 2823 0
 1932 00ce 0E68     		ldr	r6, [r1]
 1933              	.LVL172:
 1934              	.LBB418:
 1935              	.LBB419:
2929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 1936              		.loc 2 2929 0
 1937 00d0 6030     		adds	r0, r0, #96
 1938              	.LVL173:
2931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 1939              		.loc 2 2931 0
 1940 00d2 50F82570 		ldr	r7, [r0, r5, lsl #2]
 1941 00d6 AE4C     		ldr	r4, .L240
 1942 00d8 3C40     		ands	r4, r4, r7
 1943 00da 06F0F846 		and	r6, r6, #2080374784
 1944              	.LVL174:
 1945 00de 3243     		orrs	r2, r2, r6
 1946              	.LVL175:
 1947 00e0 1443     		orrs	r4, r4, r2
 1948 00e2 44F00044 		orr	r4, r4, #-2147483648
 1949 00e6 40F82540 		str	r4, [r0, r5, lsl #2]
 1950              	.LVL176:
 1951              	.L164:
 1952              	.LBE419:
 1953              	.LBE418:
2856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 1954              		.loc 1 2856 0
 1955 00ea 1868     		ldr	r0, [r3]
 1956              	.LVL177:
 1957              	.LBB420:
 1958              	.LBB421:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 1959              		.loc 2 6048 0
 1960 00ec 8268     		ldr	r2, [r0, #8]
 1961 00ee 12F0010F 		tst	r2, #1
 1962 00f2 16D1     		bne	.L181
 1963              	.LVL178:
 1964              	.LBE421:
 1965              	.LBE420:
2859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 1966              		.loc 1 2859 0
 1967 00f4 0A68     		ldr	r2, [r1]
 1968 00f6 CD68     		ldr	r5, [r1, #12]
 1969              	.LVL179:
 1970              	.LBB422:
 1971              	.LBB423:
4873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1972              		.loc 2 4873 0
 1973 00f8 D0F8B040 		ldr	r4, [r0, #176]
 1974 00fc C2F31206 		ubfx	r6, r2, #0, #19
 1975 0100 24EA0604 		bic	r4, r4, r6
 1976 0104 05F01806 		and	r6, r5, #24
 1977 0108 A24D     		ldr	r5, .L240+4
 1978              	.LVL180:
 1979 010a F540     		lsrs	r5, r5, r6
 1980 010c 2A40     		ands	r2, r2, r5
 1981              	.LVL181:
 1982 010e C2F31202 		ubfx	r2, r2, #0, #19
 1983 0112 2243     		orrs	r2, r2, r4
 1984 0114 C0F8B020 		str	r2, [r0, #176]
 1985              	.LVL182:
 1986              	.LBE423:
 1987              	.LBE422:
2862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 1988              		.loc 1 2862 0
 1989 0118 C868     		ldr	r0, [r1, #12]
 1990 011a 9F4A     		ldr	r2, .L240+8
 1991 011c 9042     		cmp	r0, r2
 1992 011e 00F08F80 		beq	.L232
 1993              	.L181:
2879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 1994              		.loc 1 2879 0
 1995 0122 0A68     		ldr	r2, [r1]
 1996 0124 9D49     		ldr	r1, .L240+12
 1997              	.LVL183:
 1998 0126 0A42     		tst	r2, r1
 1999 0128 00F0A981 		beq	.L225
 2000              	.LVL184:
 2001              	.LBB424:
 2002              	.LBB425:
2590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2003              		.loc 2 2590 0
 2004 012c 9C49     		ldr	r1, .L240+16
 2005 012e 8968     		ldr	r1, [r1, #8]
 2006 0130 01F0E074 		and	r4, r1, #29360128
 2007              	.LVL185:
 2008              	.LBE425:
 2009              	.LBE424:
2885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2010              		.loc 1 2885 0
 2011 0134 9B48     		ldr	r0, .L240+20
 2012 0136 8242     		cmp	r2, r0
 2013 0138 00F04B81 		beq	.L233
 2014              	.L205:
2905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 2015              		.loc 1 2905 0
 2016 013c 9A48     		ldr	r0, .L240+24
 2017 013e 8242     		cmp	r2, r0
 2018 0140 00F07281 		beq	.L234
 2019              	.L209:
2913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2020              		.loc 1 2913 0
 2021 0144 9948     		ldr	r0, .L240+28
 2022 0146 8242     		cmp	r2, r0
 2023 0148 00F08681 		beq	.L235
2708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2024              		.loc 1 2708 0
 2025 014c 0020     		movs	r0, #0
 2026 014e 6EE7     		b	.L154
 2027              	.LVL186:
 2028              	.L159:
2761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
 2029              		.loc 1 2761 0
 2030 0150 1222     		movs	r2, #18
 2031 0152 4A60     		str	r2, [r1, #4]
2762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case 4U:
 2032              		.loc 1 2762 0
 2033 0154 7EE7     		b	.L155
 2034              	.L160:
2764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
 2035              		.loc 1 2764 0
 2036 0156 1822     		movs	r2, #24
 2037 0158 4A60     		str	r2, [r1, #4]
2765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         case 5U:
 2038              		.loc 1 2765 0
 2039 015a 7BE7     		b	.L155
 2040              	.L161:
2767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
 2041              		.loc 1 2767 0
 2042 015c 4FF48072 		mov	r2, #256
 2043 0160 4A60     		str	r2, [r1, #4]
2768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* case 1U */
 2044              		.loc 1 2768 0
 2045 0162 77E7     		b	.L155
 2046              	.L156:
2771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
 2047              		.loc 1 2771 0
 2048 0164 0622     		movs	r2, #6
 2049 0166 4A60     		str	r2, [r1, #4]
2772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 2050              		.loc 1 2772 0
 2051 0168 74E7     		b	.L155
 2052              	.LVL187:
 2053              	.L212:
 2054              	.LBB426:
 2055              	.LBB412:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2056              		.loc 2 6170 0
 2057 016a 0020     		movs	r0, #0
 2058 016c 8CE7     		b	.L162
 2059              	.LVL188:
 2060              	.L213:
 2061              	.LBE412:
 2062              	.LBE426:
 2063              	.LBB427:
 2064              	.LBB415:
 2065              		.loc 2 6353 0
 2066 016e 0024     		movs	r4, #0
 2067 0170 8FE7     		b	.L163
 2068              	.LVL189:
 2069              	.L165:
 2070              	.LBE415:
 2071              	.LBE427:
 2072              	.LBB428:
 2073              	.LBB429:
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2074              		.loc 2 3010 0
 2075 0172 026E     		ldr	r2, [r0, #96]
 2076              	.LVL190:
 2077              	.LBE429:
 2078              	.LBE428:
 2079              	.LBB430:
 2080              	.LBB431:
 2081 0174 046E     		ldr	r4, [r0, #96]
 2082              	.LVL191:
 2083              	.LBE431:
 2084              	.LBE430:
2830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2085              		.loc 1 2830 0
 2086 0176 C4F38464 		ubfx	r4, r4, #26, #5
2831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2087              		.loc 1 2831 0
 2088 017a 0A68     		ldr	r2, [r1]
 2089 017c C2F31205 		ubfx	r5, r2, #0, #19
 2090 0180 7DBB     		cbnz	r5, .L166
2831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2091              		.loc 1 2831 0 is_stmt 0 discriminator 1
 2092 0182 C2F38462 		ubfx	r2, r2, #26, #5
 2093              	.L167:
2830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2094              		.loc 1 2830 0 is_stmt 1
 2095 0186 9442     		cmp	r4, r2
 2096 0188 33D0     		beq	.L236
 2097              	.L169:
2835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2098              		.loc 1 2835 0
 2099 018a 1C68     		ldr	r4, [r3]
 2100              	.LVL192:
 2101              	.LBB432:
 2102              	.LBB433:
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2103              		.loc 2 3010 0
 2104 018c 626E     		ldr	r2, [r4, #100]
 2105              	.LVL193:
 2106              	.LBE433:
 2107              	.LBE432:
 2108              	.LBB434:
 2109              	.LBB435:
 2110 018e 606E     		ldr	r0, [r4, #100]
 2111              	.LVL194:
 2112              	.LBE435:
 2113              	.LBE434:
2835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2114              		.loc 1 2835 0
 2115 0190 C0F38460 		ubfx	r0, r0, #26, #5
2836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2116              		.loc 1 2836 0
 2117 0194 0A68     		ldr	r2, [r1]
 2118 0196 C2F31205 		ubfx	r5, r2, #0, #19
 2119 019a 7DBB     		cbnz	r5, .L170
2836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2120              		.loc 1 2836 0 is_stmt 0 discriminator 1
 2121 019c C2F38462 		ubfx	r2, r2, #26, #5
 2122              	.L171:
2835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2123              		.loc 1 2835 0 is_stmt 1
 2124 01a0 9042     		cmp	r0, r2
 2125 01a2 33D0     		beq	.L237
 2126              	.L173:
2840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2127              		.loc 1 2840 0
 2128 01a4 1C68     		ldr	r4, [r3]
 2129              	.LVL195:
 2130              	.LBB436:
 2131              	.LBB437:
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2132              		.loc 2 3010 0
 2133 01a6 A26E     		ldr	r2, [r4, #104]
 2134              	.LVL196:
 2135              	.LBE437:
 2136              	.LBE436:
 2137              	.LBB438:
 2138              	.LBB439:
 2139 01a8 A06E     		ldr	r0, [r4, #104]
 2140              	.LVL197:
 2141              	.LBE439:
 2142              	.LBE438:
2840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2143              		.loc 1 2840 0
 2144 01aa C0F38460 		ubfx	r0, r0, #26, #5
2841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2145              		.loc 1 2841 0
 2146 01ae 0A68     		ldr	r2, [r1]
 2147 01b0 C2F31205 		ubfx	r5, r2, #0, #19
 2148 01b4 7DBB     		cbnz	r5, .L174
2841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2149              		.loc 1 2841 0 is_stmt 0 discriminator 1
 2150 01b6 C2F38462 		ubfx	r2, r2, #26, #5
 2151              	.L175:
2840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2152              		.loc 1 2840 0 is_stmt 1
 2153 01ba 9042     		cmp	r0, r2
 2154 01bc 33D0     		beq	.L238
 2155              	.L177:
2845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2156              		.loc 1 2845 0
 2157 01be 1C68     		ldr	r4, [r3]
 2158              	.LVL198:
 2159              	.LBB440:
 2160              	.LBB441:
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2161              		.loc 2 3010 0
 2162 01c0 E26E     		ldr	r2, [r4, #108]
 2163              	.LVL199:
 2164              	.LBE441:
 2165              	.LBE440:
 2166              	.LBB442:
 2167              	.LBB443:
 2168 01c2 E06E     		ldr	r0, [r4, #108]
 2169              	.LVL200:
 2170              	.LBE443:
 2171              	.LBE442:
2845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2172              		.loc 1 2845 0
 2173 01c4 C0F38460 		ubfx	r0, r0, #26, #5
2846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2174              		.loc 1 2846 0
 2175 01c8 0A68     		ldr	r2, [r1]
 2176 01ca C2F31205 		ubfx	r5, r2, #0, #19
 2177 01ce 7DBB     		cbnz	r5, .L178
2846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2178              		.loc 1 2846 0 is_stmt 0 discriminator 1
 2179 01d0 C2F38462 		ubfx	r2, r2, #26, #5
 2180              	.L179:
2845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 2181              		.loc 1 2845 0 is_stmt 1
 2182 01d4 9042     		cmp	r0, r2
 2183 01d6 88D1     		bne	.L164
 2184              	.LVL201:
 2185              	.LBB444:
 2186              	.LBB445:
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2187              		.loc 2 3069 0
 2188 01d8 E26E     		ldr	r2, [r4, #108]
 2189 01da 22F00042 		bic	r2, r2, #-2147483648
 2190 01de E266     		str	r2, [r4, #108]
 2191 01e0 83E7     		b	.L164
 2192              	.LVL202:
 2193              	.L166:
 2194              	.LBE445:
 2195              	.LBE444:
 2196              	.LBB446:
 2197              	.LBB447:
 2198              		.file 3 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h"
   1:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**************************************************************************//**
   2:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @version  V5.2.0
   5:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @date     08. May 2019
   6:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  ******************************************************************************/
   7:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*
   8:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  10:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  12:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  16:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  18:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * limitations under the License.
  23:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
  24:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  25:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  28:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  34:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __has_builtin
  36:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  38:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  39:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ASM
  41:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  43:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __INLINE
  44:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  46:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  49:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif                                           
  52:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  55:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __USED
  56:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  58:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __WEAK
  59:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  61:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED
  62:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  64:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  67:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  70:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  78:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  86:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  94:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 102:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 110:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 113:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 116:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 119:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 120:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 122:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 124:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 125:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            in the used linker script.
 129:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 130:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 131:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 133:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 135:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 136:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t const* src;
 137:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 138:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 139:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __copy_table_t;
 140:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 141:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 142:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 143:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 144:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __zero_table_t;
 145:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 146:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 151:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 155:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 156:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 157:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 161:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 162:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 163:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   _start();
 164:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 165:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 166:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 168:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 169:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 172:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 173:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 176:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 177:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 180:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 181:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 184:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 185:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 189:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 190:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 191:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 192:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 196:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 198:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 200:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 201:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 202:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 203:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 207:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 209:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 211:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 212:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 213:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 214:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register
 215:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Control Register value
 217:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 218:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 220:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 221:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 222:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 224:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 225:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 226:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 227:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 229:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 233:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 235:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 236:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 237:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 239:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 240:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 241:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 242:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 243:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 244:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register
 245:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 248:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 250:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 252:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 253:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 254:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 256:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 260:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 262:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 264:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 265:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 266:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 267:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 268:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               IPSR Register value
 271:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 272:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 274:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 275:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 276:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 278:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 279:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 280:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 281:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 282:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get APSR Register
 283:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               APSR Register value
 285:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 286:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 288:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 289:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 290:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 292:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 293:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 294:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 295:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 296:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               xPSR Register value
 299:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 300:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 302:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 303:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 304:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 306:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 307:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 308:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 309:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 310:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 313:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 314:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 316:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 317:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 318:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 320:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 321:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 322:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 323:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 325:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 328:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 329:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 331:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 332:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 333:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 335:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 336:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 337:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 338:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 339:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 340:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 344:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 346:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 348:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 349:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 350:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 352:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 356:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 358:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 360:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 361:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 362:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 363:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 364:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 367:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 368:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 370:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 371:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 372:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 374:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 375:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 376:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 377:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 379:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 382:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 383:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 385:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 386:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 387:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 389:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 390:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 391:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 392:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 393:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 394:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 398:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 400:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 402:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 403:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 404:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 406:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 410:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 412:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 414:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 415:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 416:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 417:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 419:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               SP Register value
 422:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 423:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 425:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 426:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 427:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 429:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 430:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 431:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 432:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 433:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 437:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 439:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 441:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 442:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 443:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 444:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 445:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 448:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 449:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 451:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 452:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 453:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 455:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 456:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 457:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 458:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 460:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 463:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 464:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 466:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 467:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 468:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 470:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 471:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 472:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 473:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 474:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 475:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 479:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 481:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 483:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 484:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 485:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 487:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 491:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 493:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 495:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 496:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 497:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 498:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 502:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable FIQ
 503:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 506:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 508:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 510:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 511:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 512:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 513:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable FIQ
 514:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 517:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 519:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 521:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 522:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 523:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 524:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority
 525:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 527:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 528:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 530:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 531:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 532:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 534:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 535:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 536:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 537:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 539:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 542:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 543:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 545:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 546:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 547:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 549:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 550:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 551:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 552:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 553:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 554:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority
 555:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 558:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 560:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 562:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 563:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 564:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 566:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 570:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 572:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 574:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 575:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 576:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 577:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 578:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 583:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 585:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 587:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 588:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 589:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 590:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 593:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 594:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 596:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 597:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 598:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 600:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 601:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 602:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 603:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 605:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 608:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 609:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 611:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 612:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 613:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 615:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 616:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 617:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 618:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 619:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 620:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 624:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 626:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 628:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 629:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 630:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 632:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 636:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 638:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 640:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 641:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 642:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 646:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 647:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 650:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 651:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 655:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 656:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 659:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 661:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 665:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 666:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 667:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 669:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 670:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 671:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 672:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 674:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 678:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 681:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 683:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 686:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 687:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 688:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 690:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 691:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 692:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 693:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 694:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 695:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 696:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 700:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 701:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 704:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 706:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 711:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 713:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 714:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 715:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 716:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 718:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 722:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 725:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 727:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 731:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 733:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 734:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 735:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 736:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 737:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 738:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 742:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 743:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 746:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 748:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 752:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 753:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 754:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 756:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 757:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 758:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 759:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 760:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 762:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 766:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 769:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 771:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 774:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 775:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 776:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 778:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 779:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 780:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 781:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 782:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 783:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 784:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 788:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 789:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 792:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 794:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 799:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 801:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 802:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 803:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 804:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 806:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 810:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 813:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 815:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 819:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 821:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 822:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 823:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 824:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 827:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 828:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 829:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get FPSCR
 830:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 833:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 835:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 843:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 844:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 845:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 847:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 848:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 849:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(0U);
 850:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 851:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 852:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 853:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 854:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 855:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set FPSCR
 856:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 859:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 861:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 869:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 871:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 872:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)fpscr;
 873:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 874:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 875:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 876:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 877:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 879:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 880:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Access to dedicated instructions
 883:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 884:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** */
 885:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 886:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 894:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 898:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 899:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 900:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   No Operation
 901:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 903:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 905:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 906:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 909:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 911:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 912:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 913:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Event
 914:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 917:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 919:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 920:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 921:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Send Event
 922:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 924:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 926:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 927:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 928:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            after the instruction has been completed.
 932:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 933:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 935:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 937:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 938:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 939:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 940:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 944:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 946:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 948:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 949:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 950:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 951:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 955:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 957:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 959:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 960:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 961:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 962:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
 966:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 967:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 969:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 972:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 973:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 974:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 976:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 977:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 978:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 979:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 980:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 981:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
 985:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 986:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 988:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 989:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 990:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 992:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 993:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 994:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 995:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 996:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
1000:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1001:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1003:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
1006:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   int16_t result;
1007:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1008:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
1010:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
1011:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
1012:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1013:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1014:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1015:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Rotated value
1020:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1021:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1023:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   op2 %= 32U;
1024:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   if (op2 == 0U)
1025:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
1026:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     return op1;
1027:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
1028:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
1030:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1031:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1032:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1033:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Breakpoint
1034:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1039:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1041:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1042:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1043:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
1047:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1048:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1050:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
1051:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1052:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2199              		.loc 3 1055 0 discriminator 2
 2200              		.syntax unified
 2201              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 2202 01e2 92FAA2F2 		rbit r2, r2
 2203              	@ 0 "" 2
 2204              	.LVL203:
 2205              		.thumb
 2206              		.syntax unified
 2207              	.LBE447:
 2208              	.LBE446:
 2209              	.LBB448:
 2210              	.LBB449:
1056:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
1057:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1059:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
1062:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     result <<= 1U;
1063:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     result |= value & 1U;
1064:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     s--;
1065:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
1066:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
1068:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
1069:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
1070:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1071:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1072:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1073:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Count leading zeros
1074:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1078:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1080:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      is non-zero".
1086:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      single CLZ instruction.
1088:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****    */
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   if (value == 0U)
 2211              		.loc 3 1089 0 discriminator 2
 2212 01e6 12B1     		cbz	r2, .L214
1090:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     return 32U;
1092:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
1093:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_clz(value);
 2213              		.loc 3 1093 0
 2214 01e8 B2FA82F2 		clz	r2, r2
 2215 01ec CBE7     		b	.L167
 2216              	.L214:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 2217              		.loc 3 1091 0
 2218 01ee 2022     		movs	r2, #32
 2219 01f0 C9E7     		b	.L167
 2220              	.L236:
 2221              	.LVL204:
 2222              	.LBE449:
 2223              	.LBE448:
 2224              	.LBB450:
 2225              	.LBB451:
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2226              		.loc 2 3069 0
 2227 01f2 026E     		ldr	r2, [r0, #96]
 2228 01f4 22F00042 		bic	r2, r2, #-2147483648
 2229 01f8 0266     		str	r2, [r0, #96]
 2230 01fa C6E7     		b	.L169
 2231              	.LVL205:
 2232              	.L170:
 2233              	.LBE451:
 2234              	.LBE450:
 2235              	.LBB452:
 2236              	.LBB453:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 2237              		.loc 3 1055 0 discriminator 2
 2238              		.syntax unified
 2239              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 2240 01fc 92FAA2F2 		rbit r2, r2
 2241              	@ 0 "" 2
 2242              	.LVL206:
 2243              		.thumb
 2244              		.syntax unified
 2245              	.LBE453:
 2246              	.LBE452:
 2247              	.LBB454:
 2248              	.LBB455:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 2249              		.loc 3 1089 0 discriminator 2
 2250 0200 12B1     		cbz	r2, .L215
 2251              		.loc 3 1093 0
 2252 0202 B2FA82F2 		clz	r2, r2
 2253 0206 CBE7     		b	.L171
 2254              	.L215:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 2255              		.loc 3 1091 0
 2256 0208 2022     		movs	r2, #32
 2257 020a C9E7     		b	.L171
 2258              	.L237:
 2259              	.LVL207:
 2260              	.LBE455:
 2261              	.LBE454:
 2262              	.LBB456:
 2263              	.LBB457:
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2264              		.loc 2 3069 0
 2265 020c 626E     		ldr	r2, [r4, #100]
 2266 020e 22F00042 		bic	r2, r2, #-2147483648
 2267 0212 6266     		str	r2, [r4, #100]
 2268 0214 C6E7     		b	.L173
 2269              	.LVL208:
 2270              	.L174:
 2271              	.LBE457:
 2272              	.LBE456:
 2273              	.LBB458:
 2274              	.LBB459:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 2275              		.loc 3 1055 0 discriminator 2
 2276              		.syntax unified
 2277              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 2278 0216 92FAA2F2 		rbit r2, r2
 2279              	@ 0 "" 2
 2280              	.LVL209:
 2281              		.thumb
 2282              		.syntax unified
 2283              	.LBE459:
 2284              	.LBE458:
 2285              	.LBB460:
 2286              	.LBB461:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 2287              		.loc 3 1089 0 discriminator 2
 2288 021a 12B1     		cbz	r2, .L216
 2289              		.loc 3 1093 0
 2290 021c B2FA82F2 		clz	r2, r2
 2291 0220 CBE7     		b	.L175
 2292              	.L216:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 2293              		.loc 3 1091 0
 2294 0222 2022     		movs	r2, #32
 2295 0224 C9E7     		b	.L175
 2296              	.L238:
 2297              	.LVL210:
 2298              	.LBE461:
 2299              	.LBE460:
 2300              	.LBB462:
 2301              	.LBB463:
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2302              		.loc 2 3069 0
 2303 0226 A26E     		ldr	r2, [r4, #104]
 2304 0228 22F00042 		bic	r2, r2, #-2147483648
 2305 022c A266     		str	r2, [r4, #104]
 2306 022e C6E7     		b	.L177
 2307              	.LVL211:
 2308              	.L178:
 2309              	.LBE463:
 2310              	.LBE462:
 2311              	.LBB464:
 2312              	.LBB465:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 2313              		.loc 3 1055 0 discriminator 2
 2314              		.syntax unified
 2315              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 2316 0230 92FAA2F2 		rbit r2, r2
 2317              	@ 0 "" 2
 2318              	.LVL212:
 2319              		.thumb
 2320              		.syntax unified
 2321              	.LBE465:
 2322              	.LBE464:
 2323              	.LBB466:
 2324              	.LBB467:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 2325              		.loc 3 1089 0 discriminator 2
 2326 0234 12B1     		cbz	r2, .L217
 2327              		.loc 3 1093 0
 2328 0236 B2FA82F2 		clz	r2, r2
 2329 023a CBE7     		b	.L179
 2330              	.L217:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 2331              		.loc 3 1091 0
 2332 023c 2022     		movs	r2, #32
 2333 023e C9E7     		b	.L179
 2334              	.L232:
 2335              	.LBE467:
 2336              	.LBE466:
2866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2337              		.loc 1 2866 0
 2338 0240 1D68     		ldr	r5, [r3]
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2339              		.loc 1 2867 0
 2340 0242 0A68     		ldr	r2, [r1]
 2341 0244 C2F31206 		ubfx	r6, r2, #0, #19
 2342 0248 002E     		cmp	r6, #0
 2343 024a 35D1     		bne	.L182
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2344              		.loc 1 2867 0 is_stmt 0 discriminator 1
 2345 024c 900E     		lsrs	r0, r2, #26
 2346 024e 0130     		adds	r0, r0, #1
 2347 0250 00F01F00 		and	r0, r0, #31
 2348 0254 0928     		cmp	r0, #9
 2349 0256 8CBF     		ite	hi
 2350 0258 0020     		movhi	r0, #0
 2351 025a 0120     		movls	r0, #1
 2352              	.L183:
2866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2353              		.loc 1 2866 0 is_stmt 1
 2354 025c 0028     		cmp	r0, #0
 2355 025e 62D0     		beq	.L185
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2356              		.loc 1 2867 0
 2357 0260 002E     		cmp	r6, #0
 2358 0262 38D1     		bne	.L186
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2359              		.loc 1 2867 0 is_stmt 0 discriminator 3
 2360 0264 940E     		lsrs	r4, r2, #26
 2361 0266 0134     		adds	r4, r4, #1
 2362 0268 A406     		lsls	r4, r4, #26
 2363 026a 04F0F844 		and	r4, r4, #2080374784
 2364              	.L187:
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2365              		.loc 1 2867 0 discriminator 6
 2366 026e 002E     		cmp	r6, #0
 2367 0270 3DD1     		bne	.L189
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2368              		.loc 1 2867 0 discriminator 7
 2369 0272 900E     		lsrs	r0, r2, #26
 2370 0274 0130     		adds	r0, r0, #1
 2371 0276 00F01F07 		and	r7, r0, #31
 2372 027a 0120     		movs	r0, #1
 2373 027c B840     		lsls	r0, r0, r7
 2374              	.L190:
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2375              		.loc 1 2867 0 discriminator 10
 2376 027e 0443     		orrs	r4, r4, r0
 2377 0280 002E     		cmp	r6, #0
 2378 0282 42D1     		bne	.L192
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2379              		.loc 1 2867 0 discriminator 11
 2380 0284 920E     		lsrs	r2, r2, #26
 2381 0286 0132     		adds	r2, r2, #1
 2382 0288 02F01F02 		and	r2, r2, #31
 2383 028c 02EB4202 		add	r2, r2, r2, lsl #1
 2384 0290 1205     		lsls	r2, r2, #20
 2385              	.L193:
2866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2386              		.loc 1 2866 0 is_stmt 1
 2387 0292 2243     		orrs	r2, r2, r4
 2388              	.L195:
2866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2389              		.loc 1 2866 0 is_stmt 0 discriminator 1
 2390 0294 8C68     		ldr	r4, [r1, #8]
 2391              	.LVL213:
 2392              	.LBB468:
 2393              	.LBB469:
4720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 2394              		.loc 2 4720 0 is_stmt 1 discriminator 1
 2395 0296 1435     		adds	r5, r5, #20
 2396              	.LVL214:
 2397 0298 500E     		lsrs	r0, r2, #25
 2398 029a 8000     		lsls	r0, r0, #2
 2399 029c 00F00400 		and	r0, r0, #4
 2400              	.LVL215:
4722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2401              		.loc 2 4722 0 discriminator 1
 2402 02a0 2E58     		ldr	r6, [r5, r0]
 2403 02a2 C2F30452 		ubfx	r2, r2, #20, #5
 2404              	.LVL216:
 2405 02a6 0727     		movs	r7, #7
 2406 02a8 9740     		lsls	r7, r7, r2
 2407 02aa 26EA0706 		bic	r6, r6, r7
 2408 02ae 04FA02F2 		lsl	r2, r4, r2
 2409 02b2 3243     		orrs	r2, r2, r6
 2410 02b4 2A50     		str	r2, [r5, r0]
 2411              	.LVL217:
 2412 02b6 34E7     		b	.L181
 2413              	.LVL218:
 2414              	.L182:
 2415              	.LBE469:
 2416              	.LBE468:
 2417              	.LBB470:
 2418              	.LBB471:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 2419              		.loc 3 1055 0 discriminator 2
 2420              		.syntax unified
 2421              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 2422 02b8 92FAA2F0 		rbit r0, r2
 2423              	@ 0 "" 2
 2424              	.LVL219:
 2425              		.thumb
 2426              		.syntax unified
 2427              	.LBE471:
 2428              	.LBE470:
 2429              	.LBB472:
 2430              	.LBB473:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 2431              		.loc 3 1089 0 discriminator 2
 2432 02bc 48B1     		cbz	r0, .L218
 2433              		.loc 3 1093 0
 2434 02be B0FA80F0 		clz	r0, r0
 2435              	.L184:
 2436              	.LBE473:
 2437              	.LBE472:
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2438              		.loc 1 2867 0
 2439 02c2 0130     		adds	r0, r0, #1
 2440 02c4 00F01F00 		and	r0, r0, #31
 2441 02c8 0928     		cmp	r0, #9
 2442 02ca 8CBF     		ite	hi
 2443 02cc 0020     		movhi	r0, #0
 2444 02ce 0120     		movls	r0, #1
 2445 02d0 C4E7     		b	.L183
 2446              	.L218:
 2447              	.LBB475:
 2448              	.LBB474:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 2449              		.loc 3 1091 0
 2450 02d2 2020     		movs	r0, #32
 2451 02d4 F5E7     		b	.L184
 2452              	.L186:
 2453              	.LVL220:
 2454              	.LBE474:
 2455              	.LBE475:
 2456              	.LBB476:
 2457              	.LBB477:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 2458              		.loc 3 1055 0 discriminator 4
 2459              		.syntax unified
 2460              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 2461 02d6 92FAA2F4 		rbit r4, r2
 2462              	@ 0 "" 2
 2463              	.LVL221:
 2464              		.thumb
 2465              		.syntax unified
 2466              	.LBE477:
 2467              	.LBE476:
 2468              	.LBB478:
 2469              	.LBB479:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 2470              		.loc 3 1089 0 discriminator 4
 2471 02da 14B1     		cbz	r4, .L219
 2472              		.loc 3 1093 0
 2473 02dc B4FA84F4 		clz	r4, r4
 2474 02e0 00E0     		b	.L188
 2475              	.L219:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 2476              		.loc 3 1091 0
 2477 02e2 2024     		movs	r4, #32
 2478              	.L188:
 2479              	.LBE479:
 2480              	.LBE478:
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2481              		.loc 1 2867 0
 2482 02e4 0134     		adds	r4, r4, #1
 2483 02e6 A406     		lsls	r4, r4, #26
 2484 02e8 04F0F844 		and	r4, r4, #2080374784
 2485 02ec BFE7     		b	.L187
 2486              	.L189:
 2487              	.LVL222:
 2488              	.LBB480:
 2489              	.LBB481:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 2490              		.loc 3 1055 0 discriminator 8
 2491              		.syntax unified
 2492              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 2493 02ee 92FAA2F0 		rbit r0, r2
 2494              	@ 0 "" 2
 2495              	.LVL223:
 2496              		.thumb
 2497              		.syntax unified
 2498              	.LBE481:
 2499              	.LBE480:
 2500              	.LBB482:
 2501              	.LBB483:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 2502              		.loc 3 1089 0 discriminator 8
 2503 02f2 10B1     		cbz	r0, .L220
 2504              		.loc 3 1093 0
 2505 02f4 B0FA80F0 		clz	r0, r0
 2506 02f8 00E0     		b	.L191
 2507              	.L220:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 2508              		.loc 3 1091 0
 2509 02fa 2020     		movs	r0, #32
 2510              	.L191:
 2511              	.LBE483:
 2512              	.LBE482:
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2513              		.loc 1 2867 0
 2514 02fc 0130     		adds	r0, r0, #1
 2515 02fe 00F01F00 		and	r0, r0, #31
 2516 0302 0127     		movs	r7, #1
 2517 0304 07FA00F0 		lsl	r0, r7, r0
 2518 0308 B9E7     		b	.L190
 2519              	.L192:
 2520              	.LVL224:
 2521              	.LBB484:
 2522              	.LBB485:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 2523              		.loc 3 1055 0 discriminator 12
 2524              		.syntax unified
 2525              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 2526 030a 92FAA2F2 		rbit r2, r2
 2527              	@ 0 "" 2
 2528              	.LVL225:
 2529              		.thumb
 2530              		.syntax unified
 2531              	.LBE485:
 2532              	.LBE484:
 2533              	.LBB486:
 2534              	.LBB487:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 2535              		.loc 3 1089 0 discriminator 12
 2536 030e 12B1     		cbz	r2, .L221
 2537              		.loc 3 1093 0
 2538 0310 B2FA82F2 		clz	r2, r2
 2539 0314 00E0     		b	.L194
 2540              	.L221:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 2541              		.loc 3 1091 0
 2542 0316 2022     		movs	r2, #32
 2543              	.L194:
 2544              	.LBE487:
 2545              	.LBE486:
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2546              		.loc 1 2867 0
 2547 0318 0132     		adds	r2, r2, #1
 2548 031a 02F01F02 		and	r2, r2, #31
 2549 031e 02EB4202 		add	r2, r2, r2, lsl #1
 2550 0322 1205     		lsls	r2, r2, #20
 2551 0324 B5E7     		b	.L193
 2552              	.L185:
 2553 0326 CEB9     		cbnz	r6, .L196
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2554              		.loc 1 2867 0 is_stmt 0 discriminator 13
 2555 0328 940E     		lsrs	r4, r2, #26
 2556 032a 0134     		adds	r4, r4, #1
 2557 032c A406     		lsls	r4, r4, #26
 2558 032e 04F0F844 		and	r4, r4, #2080374784
 2559              	.L197:
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2560              		.loc 1 2867 0 discriminator 16
 2561 0332 FEB9     		cbnz	r6, .L199
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2562              		.loc 1 2867 0 discriminator 17
 2563 0334 900E     		lsrs	r0, r2, #26
 2564 0336 0130     		adds	r0, r0, #1
 2565 0338 00F01F07 		and	r7, r0, #31
 2566 033c 0120     		movs	r0, #1
 2567 033e B840     		lsls	r0, r0, r7
 2568              	.L200:
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2569              		.loc 1 2867 0 discriminator 20
 2570 0340 0443     		orrs	r4, r4, r0
 2571 0342 AEBB     		cbnz	r6, .L202
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2572              		.loc 1 2867 0 discriminator 21
 2573 0344 900E     		lsrs	r0, r2, #26
 2574 0346 0130     		adds	r0, r0, #1
 2575 0348 00F01F00 		and	r0, r0, #31
 2576 034c 00EB4002 		add	r2, r0, r0, lsl #1
 2577 0350 1E3A     		subs	r2, r2, #30
 2578 0352 1205     		lsls	r2, r2, #20
 2579 0354 42F00072 		orr	r2, r2, #33554432
 2580              	.L203:
2866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2581              		.loc 1 2866 0 is_stmt 1 discriminator 2
 2582 0358 2243     		orrs	r2, r2, r4
 2583 035a 9BE7     		b	.L195
 2584              	.L196:
 2585              	.LVL226:
 2586              	.LBB488:
 2587              	.LBB489:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 2588              		.loc 3 1055 0 discriminator 14
 2589              		.syntax unified
 2590              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 2591 035c 92FAA2F4 		rbit r4, r2
 2592              	@ 0 "" 2
 2593              	.LVL227:
 2594              		.thumb
 2595              		.syntax unified
 2596              	.LBE489:
 2597              	.LBE488:
 2598              	.LBB490:
 2599              	.LBB491:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 2600              		.loc 3 1089 0 discriminator 14
 2601 0360 14B1     		cbz	r4, .L222
 2602              		.loc 3 1093 0
 2603 0362 B4FA84F4 		clz	r4, r4
 2604 0366 00E0     		b	.L198
 2605              	.L222:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 2606              		.loc 3 1091 0
 2607 0368 2024     		movs	r4, #32
 2608              	.L198:
 2609              	.LBE491:
 2610              	.LBE490:
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2611              		.loc 1 2867 0
 2612 036a 0134     		adds	r4, r4, #1
 2613 036c A406     		lsls	r4, r4, #26
 2614 036e 04F0F844 		and	r4, r4, #2080374784
 2615 0372 DEE7     		b	.L197
 2616              	.L199:
 2617              	.LVL228:
 2618              	.LBB492:
 2619              	.LBB493:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 2620              		.loc 3 1055 0 discriminator 18
 2621              		.syntax unified
 2622              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 2623 0374 92FAA2F0 		rbit r0, r2
 2624              	@ 0 "" 2
 2625              	.LVL229:
 2626              		.thumb
 2627              		.syntax unified
 2628              	.LBE493:
 2629              	.LBE492:
 2630              	.LBB494:
 2631              	.LBB495:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 2632              		.loc 3 1089 0 discriminator 18
 2633 0378 10B1     		cbz	r0, .L223
 2634              		.loc 3 1093 0
 2635 037a B0FA80F0 		clz	r0, r0
 2636 037e 00E0     		b	.L201
 2637              	.L223:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 2638              		.loc 3 1091 0
 2639 0380 2020     		movs	r0, #32
 2640              	.L201:
 2641              	.LBE495:
 2642              	.LBE494:
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2643              		.loc 1 2867 0
 2644 0382 0130     		adds	r0, r0, #1
 2645 0384 00F01F00 		and	r0, r0, #31
 2646 0388 0127     		movs	r7, #1
 2647 038a 07FA00F0 		lsl	r0, r7, r0
 2648 038e D7E7     		b	.L200
 2649              	.L241:
 2650              		.align	2
 2651              	.L240:
 2652 0390 00F0FF03 		.word	67104768
 2653 0394 FFFF0700 		.word	524287
 2654 0398 00007F40 		.word	1082064896
 2655 039c 00000880 		.word	-2146959360
 2656 03a0 00030450 		.word	1342440192
 2657 03a4 000052C7 		.word	-950927360
 2658 03a8 000084CB 		.word	-880541696
 2659 03ac 01000080 		.word	-2147483647
 2660              	.L202:
 2661              	.LVL230:
 2662              	.LBB496:
 2663              	.LBB497:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 2664              		.loc 3 1055 0 discriminator 22
 2665              		.syntax unified
 2666              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 2667 03b0 92FAA2F2 		rbit r2, r2
 2668              	@ 0 "" 2
 2669              	.LVL231:
 2670              		.thumb
 2671              		.syntax unified
 2672              	.LBE497:
 2673              	.LBE496:
 2674              	.LBB498:
 2675              	.LBB499:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 2676              		.loc 3 1089 0 discriminator 22
 2677 03b4 12B1     		cbz	r2, .L224
 2678              		.loc 3 1093 0
 2679 03b6 B2FA82F0 		clz	r0, r2
 2680 03ba 00E0     		b	.L204
 2681              	.L224:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 2682              		.loc 3 1091 0
 2683 03bc 2020     		movs	r0, #32
 2684              	.L204:
 2685              	.LBE499:
 2686              	.LBE498:
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2687              		.loc 1 2867 0
 2688 03be 0130     		adds	r0, r0, #1
 2689 03c0 00F01F00 		and	r0, r0, #31
 2690 03c4 00EB4002 		add	r2, r0, r0, lsl #1
 2691 03c8 1E3A     		subs	r2, r2, #30
 2692 03ca 1205     		lsls	r2, r2, #20
 2693 03cc 42F00072 		orr	r2, r2, #33554432
 2694 03d0 C2E7     		b	.L203
 2695              	.LVL232:
 2696              	.L233:
2886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 2697              		.loc 1 2886 0
 2698 03d2 11F4000F 		tst	r1, #8388608
 2699 03d6 7FF4B1AE 		bne	.L205
2888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2700              		.loc 1 2888 0
 2701 03da 1A68     		ldr	r2, [r3]
 2702 03dc 2B49     		ldr	r1, .L242
 2703 03de 8A42     		cmp	r2, r1
 2704 03e0 05D0     		beq	.L206
2888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2705              		.loc 1 2888 0 is_stmt 0 discriminator 1
 2706 03e2 01F50071 		add	r1, r1, #512
 2707 03e6 8A42     		cmp	r2, r1
 2708 03e8 01D0     		beq	.L206
2708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2709              		.loc 1 2708 0 is_stmt 1
 2710 03ea 0020     		movs	r0, #0
 2711 03ec 1FE6     		b	.L154
 2712              	.L206:
2890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 2713              		.loc 1 2890 0
 2714 03ee 44F40004 		orr	r4, r4, #8388608
 2715              	.LVL233:
 2716              	.LBB500:
 2717              	.LBB501:
2509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2718              		.loc 2 2509 0
 2719 03f2 2749     		ldr	r1, .L242+4
 2720 03f4 8A68     		ldr	r2, [r1, #8]
 2721 03f6 22F0E072 		bic	r2, r2, #29360128
 2722 03fa 1443     		orrs	r4, r4, r2
 2723              	.LVL234:
 2724 03fc 8C60     		str	r4, [r1, #8]
 2725              	.LVL235:
 2726              	.LBE501:
 2727              	.LBE500:
2898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2728              		.loc 1 2898 0
 2729 03fe 254A     		ldr	r2, .L242+8
 2730 0400 1268     		ldr	r2, [r2]
 2731 0402 9209     		lsrs	r2, r2, #6
 2732 0404 2449     		ldr	r1, .L242+12
 2733 0406 A1FB0212 		umull	r1, r2, r1, r2
 2734 040a 9209     		lsrs	r2, r2, #6
 2735 040c 0132     		adds	r2, r2, #1
 2736 040e 02EB4202 		add	r2, r2, r2, lsl #1
 2737 0412 9100     		lsls	r1, r2, #2
 2738 0414 0191     		str	r1, [sp, #4]
2899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
 2739              		.loc 1 2899 0
 2740 0416 02E0     		b	.L207
 2741              	.L208:
2901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 2742              		.loc 1 2901 0
 2743 0418 019A     		ldr	r2, [sp, #4]
 2744 041a 013A     		subs	r2, r2, #1
 2745 041c 0192     		str	r2, [sp, #4]
 2746              	.L207:
2899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
 2747              		.loc 1 2899 0
 2748 041e 019A     		ldr	r2, [sp, #4]
 2749 0420 002A     		cmp	r2, #0
 2750 0422 F9D1     		bne	.L208
2708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2751              		.loc 1 2708 0
 2752 0424 0020     		movs	r0, #0
 2753 0426 02E6     		b	.L154
 2754              	.L234:
2905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 2755              		.loc 1 2905 0 discriminator 1
 2756 0428 11F0807F 		tst	r1, #16777216
 2757 042c 7FF48AAE 		bne	.L209
2907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2758              		.loc 1 2907 0
 2759 0430 1A68     		ldr	r2, [r3]
 2760 0432 1649     		ldr	r1, .L242
 2761 0434 8A42     		cmp	r2, r1
 2762 0436 05D0     		beq	.L210
2907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2763              		.loc 1 2907 0 is_stmt 0 discriminator 1
 2764 0438 01F50071 		add	r1, r1, #512
 2765 043c 8A42     		cmp	r2, r1
 2766 043e 01D0     		beq	.L210
2708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2767              		.loc 1 2708 0 is_stmt 1
 2768 0440 0020     		movs	r0, #0
 2769 0442 F4E5     		b	.L154
 2770              	.L210:
2909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 2771              		.loc 1 2909 0
 2772 0444 44F08072 		orr	r2, r4, #16777216
 2773              	.LVL236:
 2774              	.LBB502:
 2775              	.LBB503:
2509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2776              		.loc 2 2509 0
 2777 0448 1148     		ldr	r0, .L242+4
 2778 044a 8168     		ldr	r1, [r0, #8]
 2779 044c 21F0E071 		bic	r1, r1, #29360128
 2780 0450 0A43     		orrs	r2, r2, r1
 2781              	.LVL237:
 2782 0452 8260     		str	r2, [r0, #8]
 2783              	.LBE503:
 2784              	.LBE502:
2708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2785              		.loc 1 2708 0
 2786 0454 0020     		movs	r0, #0
 2787 0456 EAE5     		b	.L154
 2788              	.LVL238:
 2789              	.L235:
2914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 2790              		.loc 1 2914 0
 2791 0458 11F4800F 		tst	r1, #4194304
 2792 045c 11D1     		bne	.L229
2916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 2793              		.loc 1 2916 0
 2794 045e 1968     		ldr	r1, [r3]
 2795 0460 0A4A     		ldr	r2, .L242
 2796 0462 9142     		cmp	r1, r2
 2797 0464 01D0     		beq	.L239
2708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2798              		.loc 1 2708 0
 2799 0466 0020     		movs	r0, #0
 2800 0468 E1E5     		b	.L154
 2801              	.L239:
2918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 2802              		.loc 1 2918 0
 2803 046a 44F48002 		orr	r2, r4, #4194304
 2804              	.LVL239:
 2805              	.LBB504:
 2806              	.LBB505:
2509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2807              		.loc 2 2509 0
 2808 046e 0848     		ldr	r0, .L242+4
 2809 0470 8168     		ldr	r1, [r0, #8]
 2810 0472 21F0E071 		bic	r1, r1, #29360128
 2811 0476 0A43     		orrs	r2, r2, r1
 2812              	.LVL240:
 2813 0478 8260     		str	r2, [r0, #8]
 2814              	.LBE505:
 2815              	.LBE504:
2708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2816              		.loc 1 2708 0
 2817 047a 0020     		movs	r0, #0
 2818 047c D7E5     		b	.L154
 2819              	.LVL241:
 2820              	.L225:
 2821 047e 0020     		movs	r0, #0
 2822 0480 D5E5     		b	.L154
 2823              	.L229:
 2824 0482 0020     		movs	r0, #0
 2825 0484 D3E5     		b	.L154
 2826              	.LVL242:
 2827              	.L211:
2738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 2828              		.loc 1 2738 0
 2829 0486 0220     		movs	r0, #2
 2830              	.LVL243:
 2831 0488 D4E5     		b	.L152
 2832              	.L243:
 2833 048a 00BF     		.align	2
 2834              	.L242:
 2835 048c 00000450 		.word	1342439424
 2836 0490 00030450 		.word	1342440192
 2837 0494 00000000 		.word	SystemCoreClock
 2838 0498 632D3E05 		.word	87960931
 2839              		.cfi_endproc
 2840              	.LFE335:
 2842              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2843              		.align	1
 2844              		.global	HAL_ADC_AnalogWDGConfig
 2845              		.syntax unified
 2846              		.thumb
 2847              		.thumb_func
 2848              		.fpu fpv4-sp-d16
 2850              	HAL_ADC_AnalogWDGConfig:
 2851              	.LFB336:
2964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2852              		.loc 1 2964 0
 2853              		.cfi_startproc
 2854              		@ args = 0, pretend = 0, frame = 0
 2855              		@ frame_needed = 0, uses_anonymous_args = 0
 2856              		@ link register save eliminated.
 2857              	.LVL244:
3001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 2858              		.loc 1 3001 0
 2859 0000 90F85020 		ldrb	r2, [r0, #80]	@ zero_extendqisi2
 2860 0004 012A     		cmp	r2, #1
 2861 0006 00F0A181 		beq	.L280
2964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2862              		.loc 1 2964 0 discriminator 2
 2863 000a F0B4     		push	{r4, r5, r6, r7}
 2864              		.cfi_def_cfa_offset 16
 2865              		.cfi_offset 4, -16
 2866              		.cfi_offset 5, -12
 2867              		.cfi_offset 6, -8
 2868              		.cfi_offset 7, -4
 2869 000c 0346     		mov	r3, r0
3001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 2870              		.loc 1 3001 0 discriminator 2
 2871 000e 0122     		movs	r2, #1
 2872 0010 80F85020 		strb	r2, [r0, #80]
3008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2873              		.loc 1 3008 0 discriminator 2
 2874 0014 0268     		ldr	r2, [r0]
 2875              	.LVL245:
 2876              	.LBB506:
 2877              	.LBB507:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2878              		.loc 2 6170 0 discriminator 2
 2879 0016 9068     		ldr	r0, [r2, #8]
 2880              	.LVL246:
 2881 0018 10F0040F 		tst	r0, #4
 2882 001c 36D0     		beq	.L281
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2883              		.loc 2 6170 0 is_stmt 0
 2884 001e 0120     		movs	r0, #1
 2885              	.L246:
 2886              	.LVL247:
 2887              	.LBE507:
 2888              	.LBE506:
 2889              	.LBB509:
 2890              	.LBB510:
 2891              		.loc 2 6353 0 is_stmt 1
 2892 0020 9468     		ldr	r4, [r2, #8]
 2893 0022 14F0080F 		tst	r4, #8
 2894 0026 33D0     		beq	.L282
 2895 0028 0124     		movs	r4, #1
 2896              	.L247:
 2897              	.LVL248:
 2898              	.LBE510:
 2899              	.LBE509:
3010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2900              		.loc 1 3010 0
 2901 002a 0028     		cmp	r0, #0
 2902 002c 40F08481 		bne	.L248
3011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
 2903              		.loc 1 3011 0
 2904 0030 002C     		cmp	r4, #0
 2905 0032 40F08181 		bne	.L248
3015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 2906              		.loc 1 3015 0
 2907 0036 0868     		ldr	r0, [r1]
 2908 0038 BA4C     		ldr	r4, .L298
 2909 003a A042     		cmp	r0, r4
 2910 003c 2AD0     		beq	.L289
3086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 2911              		.loc 1 3086 0
 2912 003e 4C68     		ldr	r4, [r1, #4]
 2913 0040 B4F1807F 		cmp	r4, #16777216
 2914 0044 00F0F380 		beq	.L262
 2915 0048 40F2B380 		bls	.L290
 2916 004c B4F1C07F 		cmp	r4, #25165824
 2917 0050 00F0ED80 		beq	.L262
 2918 0054 B4F1E07F 		cmp	r4, #29360128
 2919 0058 00F0B280 		beq	.L264
 2920 005c B4F1A07F 		cmp	r4, #20971520
 2921 0060 00F0AE80 		beq	.L264
 2922              	.L261:
 2923              	.LVL249:
 2924              	.LBB512:
 2925              	.LBB513:
5081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 2926              		.loc 2 5081 0
 2927 0064 0C32     		adds	r2, r2, #12
 2928              	.LVL250:
 2929 0066 C0F30154 		ubfx	r4, r0, #20, #2
 2930 006a 00F00106 		and	r6, r0, #1
 2931 006e F500     		lsls	r5, r6, #3
 2932 0070 3544     		add	r5, r5, r6
 2933 0072 AE00     		lsls	r6, r5, #2
 2934 0074 3444     		add	r4, r4, r6
 2935              	.LVL251:
5084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2936              		.loc 2 5084 0
 2937 0076 52F82450 		ldr	r5, [r2, r4, lsl #2]
 2938 007a 20F00240 		bic	r0, r0, #-2113929216
 2939              	.LVL252:
 2940 007e 20F46010 		bic	r0, r0, #3670016
 2941 0082 25EA0000 		bic	r0, r5, r0
 2942 0086 42F82400 		str	r0, [r2, r4, lsl #2]
 2943              	.LVL253:
 2944 008a E8E0     		b	.L269
 2945              	.LVL254:
 2946              	.L281:
 2947              	.LBE513:
 2948              	.LBE512:
 2949              	.LBB514:
 2950              	.LBB508:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 2951              		.loc 2 6170 0
 2952 008c 0020     		movs	r0, #0
 2953 008e C7E7     		b	.L246
 2954              	.LVL255:
 2955              	.L282:
 2956              	.LBE508:
 2957              	.LBE514:
 2958              	.LBB515:
 2959              	.LBB511:
 2960              		.loc 2 6353 0
 2961 0090 0024     		movs	r4, #0
 2962 0092 CAE7     		b	.L247
 2963              	.LVL256:
 2964              	.L289:
 2965              	.LBE511:
 2966              	.LBE515:
3020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 2967              		.loc 1 3020 0
 2968 0094 4868     		ldr	r0, [r1, #4]
 2969 0096 B0F1807F 		cmp	r0, #16777216
 2970 009a 72D0     		beq	.L251
 2971 009c 0FD9     		bls	.L291
 2972 009e B0F1C07F 		cmp	r0, #25165824
 2973 00a2 77D0     		beq	.L255
 2974 00a4 B0F1E07F 		cmp	r0, #29360128
 2975 00a8 55D0     		beq	.L256
 2976 00aa B0F1A07F 		cmp	r0, #20971520
 2977 00ae 45D0     		beq	.L292
 2978              	.L250:
 2979              	.LVL257:
 2980              	.LBB516:
 2981              	.LBB517:
5084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2982              		.loc 2 5084 0
 2983 00b0 D068     		ldr	r0, [r2, #12]
 2984 00b2 20F0FB40 		bic	r0, r0, #2105540608
 2985 00b6 20F48000 		bic	r0, r0, #4194304
 2986 00ba D060     		str	r0, [r2, #12]
 2987 00bc 11E0     		b	.L258
 2988              	.LVL258:
 2989              	.L291:
 2990              	.LBE517:
 2991              	.LBE516:
3020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 2992              		.loc 1 3020 0
 2993 00be B0F5000F 		cmp	r0, #8388608
 2994 00c2 55D0     		beq	.L253
 2995 00c4 B0F5400F 		cmp	r0, #12582912
 2996 00c8 F2D1     		bne	.L250
3023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 2997              		.loc 1 3023 0
 2998 00ca 8C68     		ldr	r4, [r1, #8]
 2999              	.LVL259:
 3000              	.LBB518:
 3001              	.LBB519:
5084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3002              		.loc 2 5084 0
 3003 00cc D068     		ldr	r0, [r2, #12]
 3004 00ce 20F0FB40 		bic	r0, r0, #2105540608
 3005 00d2 20F48000 		bic	r0, r0, #4194304
 3006 00d6 04F0F844 		and	r4, r4, #2080374784
 3007              	.LVL260:
 3008 00da 44F44004 		orr	r4, r4, #12582912
 3009 00de 2043     		orrs	r0, r0, r4
 3010 00e0 D060     		str	r0, [r2, #12]
 3011              	.LVL261:
 3012              	.L258:
 3013              	.LBE519:
 3014              	.LBE518:
3057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3015              		.loc 1 3057 0
 3016 00e2 0D69     		ldr	r5, [r1, #16]
 3017 00e4 1868     		ldr	r0, [r3]
 3018 00e6 C268     		ldr	r2, [r0, #12]
 3019 00e8 C2F3C102 		ubfx	r2, r2, #3, #2
 3020 00ec 5200     		lsls	r2, r2, #1
 3021 00ee 05FA02F6 		lsl	r6, r5, r2
 3022              	.LVL262:
3058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3023              		.loc 1 3058 0
 3024 00f2 4A69     		ldr	r2, [r1, #20]
 3025 00f4 C568     		ldr	r5, [r0, #12]
 3026 00f6 C5F3C105 		ubfx	r5, r5, #3, #2
 3027 00fa 6D00     		lsls	r5, r5, #1
 3028 00fc 02FA05F5 		lsl	r5, r2, r5
 3029              	.LVL263:
3061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       tmpAWDLowThresholdShifted);
 3030              		.loc 1 3061 0
 3031 0100 0A68     		ldr	r2, [r1]
 3032              	.LVL264:
 3033              	.LBB520:
 3034              	.LBB521:
5327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 3035              		.loc 2 5327 0
 3036 0102 2030     		adds	r0, r0, #32
 3037              	.LVL265:
 3038 0104 120D     		lsrs	r2, r2, #20
 3039              	.LVL266:
 3040 0106 9200     		lsls	r2, r2, #2
 3041 0108 02F00C02 		and	r2, r2, #12
 3042              	.LVL267:
5329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3043              		.loc 2 5329 0
 3044 010c 8458     		ldr	r4, [r0, r2]
 3045 010e 04F0F024 		and	r4, r4, #-268374016
 3046 0112 45EA0645 		orr	r5, r5, r6, lsl #16
 3047              	.LVL268:
 3048 0116 2C43     		orrs	r4, r4, r5
 3049 0118 8450     		str	r4, [r0, r2]
 3050              	.LVL269:
 3051              	.LBE521:
 3052              	.LBE520:
3065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3053              		.loc 1 3065 0
 3054 011a 5A6D     		ldr	r2, [r3, #84]
 3055 011c 22F48032 		bic	r2, r2, #65536
 3056 0120 5A65     		str	r2, [r3, #84]
3071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3057              		.loc 1 3071 0
 3058 0122 1A68     		ldr	r2, [r3]
 3059              	.LVL270:
 3060              	.LBB522:
 3061              	.LBB523:
6354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
6358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
6359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
6361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
6365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
6373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
6374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
6375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
6376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef *ADCx, uint32_t Rank)
6385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                    );
6391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
6400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
6401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
6402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
6403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef *ADCx, uint32_t Rank)
6412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
6416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                    );
6418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
6427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
6428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
6429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
6430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(ADC_TypeDef *ADCx, uint32_t Rank)
6439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
6443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                    );
6445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
6454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
6455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
6456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
6457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(ADC_TypeDef *ADCx, uint32_t Rank)
6466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
6470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
6471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                   );
6472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
6481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
6482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
6483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
6484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(ADC_TypeDef *ADCx, uint32_t Rank)
6493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
6495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
6497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
6498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                   );
6499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
6503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
6506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
6507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC ready.
6511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
6515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
6519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
6521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
6525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
6526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
6530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
6532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
6536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
6537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
6541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
6543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
6547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
6548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
6552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
6554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
6558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
6559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
6563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
6565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
6569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
6570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(ADC_TypeDef *ADCx)
6574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
6576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
6580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
6581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef *ADCx)
6585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
6587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
6591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
6592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(ADC_TypeDef *ADCx)
6596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
6598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
6602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
6603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
6607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
6609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
6613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
6614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
6618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
6620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
6624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
6625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
6629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
6631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
6635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
6639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
6643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
6645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
6649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
6650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
6654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
6656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
6660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
6661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
6665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
6667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
6671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
6672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
6676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
6678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
6682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
6683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
6687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
6689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
6693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
6694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
6698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
6700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
6704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
6705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
6709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
6711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
6715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
6716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
6720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
6722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
6726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
6727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
6731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 3062              		.loc 2 6732 0
 3063 0124 8020     		movs	r0, #128
 3064 0126 1060     		str	r0, [r2]
 3065              	.LVL271:
 3066              	.LBE523:
 3067              	.LBE522:
3074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 3068              		.loc 1 3074 0
 3069 0128 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
 3070 012a 012A     		cmp	r2, #1
 3071 012c 3BD0     		beq	.L293
3080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 3072              		.loc 1 3080 0
 3073 012e 1968     		ldr	r1, [r3]
 3074              	.LVL272:
 3075              	.LBB524:
 3076              	.LBB525:
6733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
6737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
6738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
6742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
6744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
6748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
6749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
6751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
6753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
6755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
6760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
6761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
6766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
6768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
6772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
6773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
6778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
6780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
6784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
6785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
6790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
6792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
6796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
6797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
6802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
6804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
6808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
6809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
6814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
6816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
6820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
6821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
6826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
6828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
6832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
6833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
6838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
6840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
6844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
6845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
6850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
6852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
6856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
6857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
6862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
6864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
6868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
6869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
6874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
6876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
6880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
6881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
6886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
6888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
6892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
6893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
6898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
6900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
6904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
6905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
6910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
6912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
6916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
6917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
6922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
6924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
6928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
6929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
6934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
6936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
6940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
6941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
6946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
6948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
6952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
6953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
6958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
6960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
6964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
6965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
6970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
6972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
6976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
6977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
6982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
6984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
6988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
6989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
6993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
6994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
6995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
6996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
6997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
6998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
6999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
7000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
7001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
7008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
7012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
7013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
7020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @}
7025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @{
7029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC ready.
7033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
7044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
7055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
7128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
7144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
7150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
7183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
7187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
7188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
7192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
7194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
7198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
7199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
7203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
7210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
7214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
7220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
7221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
7225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
7231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
7232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
7236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
7242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
7243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
7247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 3077              		.loc 2 7248 0
 3078 0130 4A68     		ldr	r2, [r1, #4]
 3079 0132 22F08002 		bic	r2, r2, #128
 3080 0136 4A60     		str	r2, [r1, #4]
 3081              	.LBE525:
 3082              	.LBE524:
2965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3083              		.loc 1 2965 0
 3084 0138 0020     		movs	r0, #0
 3085 013a 02E1     		b	.L260
 3086              	.LVL273:
 3087              	.L292:
3028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3088              		.loc 1 3028 0
 3089 013c 8C68     		ldr	r4, [r1, #8]
 3090              	.LVL274:
 3091              	.LBB526:
 3092              	.LBB527:
5084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3093              		.loc 2 5084 0
 3094 013e D068     		ldr	r0, [r2, #12]
 3095 0140 20F0FB40 		bic	r0, r0, #2105540608
 3096 0144 20F48000 		bic	r0, r0, #4194304
 3097 0148 04F0F844 		and	r4, r4, #2080374784
 3098              	.LVL275:
 3099 014c 44F0A074 		orr	r4, r4, #20971520
 3100 0150 2043     		orrs	r0, r0, r4
 3101 0152 D060     		str	r0, [r2, #12]
 3102              	.LVL276:
 3103 0154 C5E7     		b	.L258
 3104              	.LVL277:
 3105              	.L256:
 3106              	.LBE527:
 3107              	.LBE526:
3033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3108              		.loc 1 3033 0
 3109 0156 8C68     		ldr	r4, [r1, #8]
 3110              	.LVL278:
 3111              	.LBB528:
 3112              	.LBB529:
5084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3113              		.loc 2 5084 0
 3114 0158 D068     		ldr	r0, [r2, #12]
 3115 015a 20F0FB40 		bic	r0, r0, #2105540608
 3116 015e 20F48000 		bic	r0, r0, #4194304
 3117 0162 04F0F844 		and	r4, r4, #2080374784
 3118              	.LVL279:
 3119 0166 44F0E074 		orr	r4, r4, #29360128
 3120 016a 2043     		orrs	r0, r0, r4
 3121 016c D060     		str	r0, [r2, #12]
 3122              	.LVL280:
 3123 016e B8E7     		b	.L258
 3124              	.LVL281:
 3125              	.L253:
 3126              	.LBE529:
 3127              	.LBE528:
 3128              	.LBB530:
 3129              	.LBB531:
 3130 0170 D068     		ldr	r0, [r2, #12]
 3131 0172 20F0FB40 		bic	r0, r0, #2105540608
 3132 0176 20F48000 		bic	r0, r0, #4194304
 3133 017a 40F40000 		orr	r0, r0, #8388608
 3134 017e D060     		str	r0, [r2, #12]
 3135 0180 AFE7     		b	.L258
 3136              	.LVL282:
 3137              	.L251:
 3138              	.LBE531:
 3139              	.LBE530:
 3140              	.LBB532:
 3141              	.LBB533:
 3142 0182 D068     		ldr	r0, [r2, #12]
 3143 0184 20F0FB40 		bic	r0, r0, #2105540608
 3144 0188 20F48000 		bic	r0, r0, #4194304
 3145 018c 40F08070 		orr	r0, r0, #16777216
 3146 0190 D060     		str	r0, [r2, #12]
 3147 0192 A6E7     		b	.L258
 3148              	.LVL283:
 3149              	.L255:
 3150              	.LBE533:
 3151              	.LBE532:
 3152              	.LBB534:
 3153              	.LBB535:
 3154 0194 D068     		ldr	r0, [r2, #12]
 3155 0196 20F0FB40 		bic	r0, r0, #2105540608
 3156 019a 20F48000 		bic	r0, r0, #4194304
 3157 019e 40F0C070 		orr	r0, r0, #25165824
 3158 01a2 D060     		str	r0, [r2, #12]
 3159 01a4 9DE7     		b	.L258
 3160              	.LVL284:
 3161              	.L293:
 3162              	.LBE535:
 3163              	.LBE534:
3076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 3164              		.loc 1 3076 0
 3165 01a6 1968     		ldr	r1, [r3]
 3166              	.LVL285:
 3167              	.LBB536:
 3168              	.LBB537:
7127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3169              		.loc 2 7127 0
 3170 01a8 4A68     		ldr	r2, [r1, #4]
 3171 01aa 0243     		orrs	r2, r2, r0
 3172 01ac 4A60     		str	r2, [r1, #4]
 3173              	.LBE537:
 3174              	.LBE536:
2965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3175              		.loc 1 2965 0
 3176 01ae 0020     		movs	r0, #0
 3177 01b0 C7E0     		b	.L260
 3178              	.LVL286:
 3179              	.L290:
3086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 3180              		.loc 1 3086 0
 3181 01b2 B4F5000F 		cmp	r4, #8388608
 3182 01b6 3AD0     		beq	.L262
 3183 01b8 B4F5400F 		cmp	r4, #12582912
 3184 01bc 7FF452AF 		bne	.L261
 3185              	.L264:
3093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
 3186              		.loc 1 3093 0
 3187 01c0 594C     		ldr	r4, .L298+4
 3188 01c2 A042     		cmp	r0, r4
 3189 01c4 0DD0     		beq	.L294
3099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 3190              		.loc 1 3099 0
 3191 01c6 8868     		ldr	r0, [r1, #8]
 3192 01c8 C0F31204 		ubfx	r4, r0, #0, #19
 3193 01cc 1CBB     		cbnz	r4, .L270
3099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 3194              		.loc 1 3099 0 is_stmt 0 discriminator 1
 3195 01ce C0F38460 		ubfx	r0, r0, #26, #5
 3196 01d2 0124     		movs	r4, #1
 3197 01d4 8440     		lsls	r4, r4, r0
 3198              	.L271:
3099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 3199              		.loc 1 3099 0 discriminator 4
 3200 01d6 D2F8A400 		ldr	r0, [r2, #164]
 3201 01da 2043     		orrs	r0, r0, r4
 3202 01dc C2F8A400 		str	r0, [r2, #164]
 3203 01e0 3DE0     		b	.L269
 3204              	.L294:
3095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 3205              		.loc 1 3095 0 is_stmt 1
 3206 01e2 8868     		ldr	r0, [r1, #8]
 3207 01e4 C0F31204 		ubfx	r4, r0, #0, #19
 3208 01e8 4CB9     		cbnz	r4, .L266
3095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 3209              		.loc 1 3095 0 is_stmt 0 discriminator 1
 3210 01ea C0F38460 		ubfx	r0, r0, #26, #5
 3211 01ee 0124     		movs	r4, #1
 3212 01f0 8440     		lsls	r4, r4, r0
 3213              	.L267:
3095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 3214              		.loc 1 3095 0 discriminator 4
 3215 01f2 D2F8A000 		ldr	r0, [r2, #160]
 3216 01f6 2043     		orrs	r0, r0, r4
 3217 01f8 C2F8A000 		str	r0, [r2, #160]
 3218 01fc 2FE0     		b	.L269
 3219              	.L266:
 3220              	.LVL287:
 3221              	.LBB538:
 3222              	.LBB539:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3223              		.loc 3 1055 0 is_stmt 1 discriminator 2
 3224              		.syntax unified
 3225              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3226 01fe 90FAA0F0 		rbit r0, r0
 3227              	@ 0 "" 2
 3228              	.LVL288:
 3229              		.thumb
 3230              		.syntax unified
 3231              	.LBE539:
 3232              	.LBE538:
 3233              	.LBB540:
 3234              	.LBB541:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3235              		.loc 3 1089 0 discriminator 2
 3236 0202 30B1     		cbz	r0, .L283
 3237              		.loc 3 1093 0
 3238 0204 B0FA80F0 		clz	r0, r0
 3239              	.L268:
 3240              	.LBE541:
 3241              	.LBE540:
3095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 3242              		.loc 1 3095 0
 3243 0208 00F01F00 		and	r0, r0, #31
 3244 020c 0124     		movs	r4, #1
 3245 020e 8440     		lsls	r4, r4, r0
 3246 0210 EFE7     		b	.L267
 3247              	.L283:
 3248              	.LBB543:
 3249              	.LBB542:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3250              		.loc 3 1091 0
 3251 0212 2020     		movs	r0, #32
 3252 0214 F8E7     		b	.L268
 3253              	.L270:
 3254              	.LVL289:
 3255              	.LBE542:
 3256              	.LBE543:
 3257              	.LBB544:
 3258              	.LBB545:
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 3259              		.loc 3 1055 0 discriminator 2
 3260              		.syntax unified
 3261              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 3262 0216 90FAA0F0 		rbit r0, r0
 3263              	@ 0 "" 2
 3264              	.LVL290:
 3265              		.thumb
 3266              		.syntax unified
 3267              	.LBE545:
 3268              	.LBE544:
 3269              	.LBB546:
 3270              	.LBB547:
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
 3271              		.loc 3 1089 0 discriminator 2
 3272 021a 30B1     		cbz	r0, .L284
 3273              		.loc 3 1093 0
 3274 021c B0FA80F0 		clz	r0, r0
 3275              	.L272:
 3276              	.LBE547:
 3277              	.LBE546:
3099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 3278              		.loc 1 3099 0
 3279 0220 00F01F00 		and	r0, r0, #31
 3280 0224 0124     		movs	r4, #1
 3281 0226 8440     		lsls	r4, r4, r0
 3282 0228 D5E7     		b	.L271
 3283              	.L284:
 3284              	.LBB549:
 3285              	.LBB548:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 3286              		.loc 3 1091 0
 3287 022a 2020     		movs	r0, #32
 3288 022c F8E7     		b	.L272
 3289              	.L262:
 3290              	.LVL291:
 3291              	.LBE548:
 3292              	.LBE549:
 3293              	.LBB550:
 3294              	.LBB551:
5081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
 3295              		.loc 2 5081 0
 3296 022e 0C32     		adds	r2, r2, #12
 3297              	.LVL292:
 3298 0230 C0F30155 		ubfx	r5, r0, #20, #2
 3299 0234 00F00106 		and	r6, r0, #1
 3300 0238 F400     		lsls	r4, r6, #3
 3301 023a 3444     		add	r4, r4, r6
 3302 023c A600     		lsls	r6, r4, #2
 3303 023e 3544     		add	r5, r5, r6
 3304              	.LVL293:
5084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3305              		.loc 2 5084 0
 3306 0240 52F82540 		ldr	r4, [r2, r5, lsl #2]
 3307 0244 20F00246 		bic	r6, r0, #-2113929216
 3308 0248 26F46016 		bic	r6, r6, #3670016
 3309 024c 24EA0604 		bic	r4, r4, r6
 3310 0250 20F07E40 		bic	r0, r0, #-33554432
 3311              	.LVL294:
 3312 0254 20F4F000 		bic	r0, r0, #7864320
 3313 0258 2043     		orrs	r0, r0, r4
 3314 025a 42F82500 		str	r0, [r2, r5, lsl #2]
 3315              	.LVL295:
 3316              	.L269:
 3317              	.LBE551:
 3318              	.LBE550:
3116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3319              		.loc 1 3116 0
 3320 025e 1868     		ldr	r0, [r3]
 3321 0260 C268     		ldr	r2, [r0, #12]
 3322 0262 02F01802 		and	r2, r2, #24
 3323 0266 182A     		cmp	r2, #24
 3324 0268 3ED0     		beq	.L273
3116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3325              		.loc 1 3116 0 is_stmt 0 discriminator 1
 3326 026a 0D69     		ldr	r5, [r1, #16]
 3327 026c C268     		ldr	r2, [r0, #12]
 3328 026e C2F3C102 		ubfx	r2, r2, #3, #2
 3329 0272 C2EBC272 		rsb	r2, r2, r2, lsl #31
 3330 0276 5700     		lsls	r7, r2, #1
 3331 0278 3E1D     		adds	r6, r7, #4
 3332 027a 06F01F06 		and	r6, r6, #31
 3333 027e 25FA06F6 		lsr	r6, r5, r6
 3334              	.L274:
 3335              	.LVL296:
3117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3336              		.loc 1 3117 0 is_stmt 1 discriminator 4
 3337 0282 C268     		ldr	r2, [r0, #12]
 3338 0284 02F01802 		and	r2, r2, #24
 3339 0288 182A     		cmp	r2, #24
 3340 028a 30D0     		beq	.L275
3117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3341              		.loc 1 3117 0 is_stmt 0 discriminator 1
 3342 028c 4D69     		ldr	r5, [r1, #20]
 3343 028e C268     		ldr	r2, [r0, #12]
 3344 0290 C2F3C102 		ubfx	r2, r2, #3, #2
 3345 0294 C2EBC272 		rsb	r2, r2, r2, lsl #31
 3346 0298 5400     		lsls	r4, r2, #1
 3347 029a 0434     		adds	r4, r4, #4
 3348 029c 04F01F04 		and	r4, r4, #31
 3349 02a0 E540     		lsrs	r5, r5, r4
 3350              	.L276:
 3351              	.LVL297:
3120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                       tmpAWDLowThresholdShifted);
 3352              		.loc 1 3120 0 is_stmt 1 discriminator 4
 3353 02a2 0A68     		ldr	r2, [r1]
 3354              	.LVL298:
 3355              	.LBB552:
 3356              	.LBB553:
5327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
 3357              		.loc 2 5327 0 discriminator 4
 3358 02a4 2030     		adds	r0, r0, #32
 3359              	.LVL299:
 3360 02a6 120D     		lsrs	r2, r2, #20
 3361              	.LVL300:
 3362 02a8 9200     		lsls	r2, r2, #2
 3363 02aa 02F00C02 		and	r2, r2, #12
 3364              	.LVL301:
5329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3365              		.loc 2 5329 0 discriminator 4
 3366 02ae 8458     		ldr	r4, [r0, r2]
 3367 02b0 04F0F024 		and	r4, r4, #-268374016
 3368 02b4 45EA0645 		orr	r5, r5, r6, lsl #16
 3369              	.LVL302:
 3370 02b8 2C43     		orrs	r4, r4, r5
 3371 02ba 8450     		str	r4, [r0, r2]
 3372              	.LVL303:
 3373              	.LBE553:
 3374              	.LBE552:
3123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 3375              		.loc 1 3123 0 discriminator 4
 3376 02bc 0868     		ldr	r0, [r1]
 3377 02be 1A4A     		ldr	r2, .L298+4
 3378 02c0 9042     		cmp	r0, r2
 3379 02c2 17D0     		beq	.L295
3148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3380              		.loc 1 3148 0
 3381 02c4 5A6D     		ldr	r2, [r3, #84]
 3382 02c6 22F48022 		bic	r2, r2, #262144
 3383 02ca 5A65     		str	r2, [r3, #84]
3154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3384              		.loc 1 3154 0
 3385 02cc 1A68     		ldr	r2, [r3]
 3386              	.LVL304:
 3387              	.LBB554:
 3388              	.LBB555:
6754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3389              		.loc 2 6754 0
 3390 02ce 4FF40070 		mov	r0, #512
 3391 02d2 1060     		str	r0, [r2]
 3392              	.LVL305:
 3393              	.LBE555:
 3394              	.LBE554:
3157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 3395              		.loc 1 3157 0
 3396 02d4 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
 3397 02d6 012A     		cmp	r2, #1
 3398 02d8 28D0     		beq	.L296
3163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 3399              		.loc 1 3163 0
 3400 02da 1968     		ldr	r1, [r3]
 3401              	.LVL306:
 3402              	.LBB556:
 3403              	.LBB557:
7249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
7253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
7254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
7258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
7261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** 
7262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** /**
7263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
7264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
7265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   * @retval None
7267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   */
7268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
7269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** {
7270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 3404              		.loc 2 7270 0
 3405 02dc 4A68     		ldr	r2, [r1, #4]
 3406 02de 22F40072 		bic	r2, r2, #512
 3407 02e2 4A60     		str	r2, [r1, #4]
 3408              	.LBE557:
 3409              	.LBE556:
2965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3410              		.loc 1 2965 0
 3411 02e4 0020     		movs	r0, #0
 3412 02e6 2CE0     		b	.L260
 3413              	.LVL307:
 3414              	.L273:
3116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3415              		.loc 1 3116 0 discriminator 2
 3416 02e8 0D69     		ldr	r5, [r1, #16]
 3417 02ea AE00     		lsls	r6, r5, #2
 3418 02ec C9E7     		b	.L274
 3419              	.LVL308:
 3420              	.L275:
3117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3421              		.loc 1 3117 0 discriminator 2
 3422 02ee 4D69     		ldr	r5, [r1, #20]
 3423 02f0 AD00     		lsls	r5, r5, #2
 3424 02f2 D6E7     		b	.L276
 3425              	.L295:
3126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3426              		.loc 1 3126 0
 3427 02f4 5A6D     		ldr	r2, [r3, #84]
 3428 02f6 22F40032 		bic	r2, r2, #131072
 3429 02fa 5A65     		str	r2, [r3, #84]
3132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3430              		.loc 1 3132 0
 3431 02fc 1A68     		ldr	r2, [r3]
 3432              	.LVL309:
 3433              	.LBB558:
 3434              	.LBB559:
6743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3435              		.loc 2 6743 0
 3436 02fe 4FF48070 		mov	r0, #256
 3437 0302 1060     		str	r0, [r2]
 3438              	.LVL310:
 3439              	.LBE559:
 3440              	.LBE558:
3135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 3441              		.loc 1 3135 0
 3442 0304 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
 3443 0306 012A     		cmp	r2, #1
 3444 0308 06D0     		beq	.L297
3141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 3445              		.loc 1 3141 0
 3446 030a 1968     		ldr	r1, [r3]
 3447              	.LVL311:
 3448              	.LBB560:
 3449              	.LBB561:
7259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3450              		.loc 2 7259 0
 3451 030c 4A68     		ldr	r2, [r1, #4]
 3452 030e 22F48072 		bic	r2, r2, #256
 3453 0312 4A60     		str	r2, [r1, #4]
 3454              	.LBE561:
 3455              	.LBE560:
2965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3456              		.loc 1 2965 0
 3457 0314 0020     		movs	r0, #0
 3458 0316 14E0     		b	.L260
 3459              	.LVL312:
 3460              	.L297:
3137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 3461              		.loc 1 3137 0
 3462 0318 1968     		ldr	r1, [r3]
 3463              	.LVL313:
 3464              	.LBB562:
 3465              	.LBB563:
7138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3466              		.loc 2 7138 0
 3467 031a 4A68     		ldr	r2, [r1, #4]
 3468 031c 0243     		orrs	r2, r2, r0
 3469 031e 4A60     		str	r2, [r1, #4]
 3470              	.LBE563:
 3471              	.LBE562:
2965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3472              		.loc 1 2965 0
 3473 0320 0020     		movs	r0, #0
 3474 0322 0EE0     		b	.L260
 3475              	.L299:
 3476              		.align	2
 3477              	.L298:
 3478 0324 0000C07D 		.word	2109734912
 3479 0328 FFFF1700 		.word	1572863
 3480              	.LVL314:
 3481              	.L296:
3159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 3482              		.loc 1 3159 0
 3483 032c 1968     		ldr	r1, [r3]
 3484              	.LVL315:
 3485              	.LBB564:
 3486              	.LBB565:
7149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3487              		.loc 2 7149 0
 3488 032e 4A68     		ldr	r2, [r1, #4]
 3489 0330 0243     		orrs	r2, r2, r0
 3490 0332 4A60     		str	r2, [r1, #4]
 3491              	.LBE565:
 3492              	.LBE564:
2965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3493              		.loc 1 2965 0
 3494 0334 0020     		movs	r0, #0
 3495 0336 04E0     		b	.L260
 3496              	.LVL316:
 3497              	.L248:
3174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3498              		.loc 1 3174 0
 3499 0338 5A6D     		ldr	r2, [r3, #84]
 3500 033a 42F02002 		orr	r2, r2, #32
 3501 033e 5A65     		str	r2, [r3, #84]
 3502              	.LVL317:
3176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 3503              		.loc 1 3176 0
 3504 0340 0120     		movs	r0, #1
 3505              	.LVL318:
 3506              	.L260:
3179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3507              		.loc 1 3179 0
 3508 0342 0022     		movs	r2, #0
 3509 0344 83F85020 		strb	r2, [r3, #80]
3183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3510              		.loc 1 3183 0
 3511 0348 F0BC     		pop	{r4, r5, r6, r7}
 3512              		.cfi_restore 7
 3513              		.cfi_restore 6
 3514              		.cfi_restore 5
 3515              		.cfi_restore 4
 3516              		.cfi_def_cfa_offset 0
 3517 034a 7047     		bx	lr
 3518              	.LVL319:
 3519              	.L280:
3001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3520              		.loc 1 3001 0
 3521 034c 0220     		movs	r0, #2
 3522              	.LVL320:
3183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3523              		.loc 1 3183 0
 3524 034e 7047     		bx	lr
 3525              		.cfi_endproc
 3526              	.LFE336:
 3528              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 3529              		.align	1
 3530              		.global	HAL_ADC_GetState
 3531              		.syntax unified
 3532              		.thumb
 3533              		.thumb_func
 3534              		.fpu fpv4-sp-d16
 3536              	HAL_ADC_GetState:
 3537              	.LFB337:
3218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 3538              		.loc 1 3218 0
 3539              		.cfi_startproc
 3540              		@ args = 0, pretend = 0, frame = 0
 3541              		@ frame_needed = 0, uses_anonymous_args = 0
 3542              		@ link register save eliminated.
 3543              	.LVL321:
3223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 3544              		.loc 1 3223 0
 3545 0000 406D     		ldr	r0, [r0, #84]
 3546              	.LVL322:
3224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3547              		.loc 1 3224 0
 3548 0002 7047     		bx	lr
 3549              		.cfi_endproc
 3550              	.LFE337:
 3552              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 3553              		.align	1
 3554              		.global	HAL_ADC_GetError
 3555              		.syntax unified
 3556              		.thumb
 3557              		.thumb_func
 3558              		.fpu fpv4-sp-d16
 3560              	HAL_ADC_GetError:
 3561              	.LFB338:
3232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 3562              		.loc 1 3232 0
 3563              		.cfi_startproc
 3564              		@ args = 0, pretend = 0, frame = 0
 3565              		@ frame_needed = 0, uses_anonymous_args = 0
 3566              		@ link register save eliminated.
 3567              	.LVL323:
3236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 3568              		.loc 1 3236 0
 3569 0000 806D     		ldr	r0, [r0, #88]
 3570              	.LVL324:
3237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3571              		.loc 1 3237 0
 3572 0002 7047     		bx	lr
 3573              		.cfi_endproc
 3574              	.LFE338:
 3576              		.section	.text.ADC_ConversionStop,"ax",%progbits
 3577              		.align	1
 3578              		.global	ADC_ConversionStop
 3579              		.syntax unified
 3580              		.thumb
 3581              		.thumb_func
 3582              		.fpu fpv4-sp-d16
 3584              	ADC_ConversionStop:
 3585              	.LFB339:
3262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 3586              		.loc 1 3262 0
 3587              		.cfi_startproc
 3588              		@ args = 0, pretend = 0, frame = 0
 3589              		@ frame_needed = 0, uses_anonymous_args = 0
 3590              	.LVL325:
 3591 0000 70B5     		push	{r4, r5, r6, lr}
 3592              		.cfi_def_cfa_offset 16
 3593              		.cfi_offset 4, -16
 3594              		.cfi_offset 5, -12
 3595              		.cfi_offset 6, -8
 3596              		.cfi_offset 14, -4
 3597 0002 0446     		mov	r4, r0
 3598              	.LVL326:
3276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3599              		.loc 1 3276 0
 3600 0004 0368     		ldr	r3, [r0]
 3601              	.LVL327:
 3602              	.LBB566:
 3603              	.LBB567:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3604              		.loc 2 6170 0
 3605 0006 9A68     		ldr	r2, [r3, #8]
 3606 0008 12F0040F 		tst	r2, #4
 3607 000c 56D0     		beq	.L319
 3608 000e 0120     		movs	r0, #1
 3609              	.LVL328:
 3610              	.L303:
 3611              	.LBE567:
 3612              	.LBE566:
 3613              	.LBB569:
 3614              	.LBB570:
6353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3615              		.loc 2 6353 0
 3616 0010 9A68     		ldr	r2, [r3, #8]
 3617 0012 12F0080F 		tst	r2, #8
 3618 0016 53D0     		beq	.L320
 3619 0018 0122     		movs	r2, #1
 3620              	.L304:
 3621              	.LVL329:
 3622              	.LBE570:
 3623              	.LBE569:
3278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 3624              		.loc 1 3278 0
 3625 001a 08B9     		cbnz	r0, .L305
3279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
 3626              		.loc 1 3279 0
 3627 001c 002A     		cmp	r2, #0
 3628 001e 6FD0     		beq	.L321
 3629              	.L305:
3288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 3630              		.loc 1 3288 0
 3631 0020 DA68     		ldr	r2, [r3, #12]
 3632 0022 12F0007F 		tst	r2, #33554432
 3633 0026 04D0     		beq	.L307
3290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        )
 3634              		.loc 1 3290 0
 3635 0028 208B     		ldrh	r0, [r4, #24]
 3636 002a 40F20112 		movw	r2, #257
 3637 002e 9042     		cmp	r0, r2
 3638 0030 5AD0     		beq	.L326
 3639              	.L307:
3317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 3640              		.loc 1 3317 0
 3641 0032 0229     		cmp	r1, #2
 3642 0034 10D0     		beq	.L312
 3643              	.LVL330:
 3644              	.L311:
3320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 3645              		.loc 1 3320 0
 3646 0036 2368     		ldr	r3, [r4]
 3647              	.LVL331:
 3648              	.LBB572:
 3649              	.LBB573:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3650              		.loc 2 6170 0
 3651 0038 9A68     		ldr	r2, [r3, #8]
 3652 003a 12F0040F 		tst	r2, #4
 3653 003e 0BD0     		beq	.L312
 3654              	.LVL332:
 3655              	.LBE573:
 3656              	.LBE572:
 3657              	.LBB574:
 3658              	.LBB575:
6059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3659              		.loc 2 6059 0
 3660 0040 9A68     		ldr	r2, [r3, #8]
 3661 0042 12F0020F 		tst	r2, #2
 3662 0046 07D1     		bne	.L312
 3663              	.LVL333:
 3664              	.LBE575:
 3665              	.LBE574:
 3666              	.LBB576:
 3667              	.LBB577:
6157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3668              		.loc 2 6157 0
 3669 0048 9A68     		ldr	r2, [r3, #8]
 3670 004a 22F00042 		bic	r2, r2, #-2147483648
 3671 004e 22F03F02 		bic	r2, r2, #63
 3672 0052 42F01002 		orr	r2, r2, #16
 3673 0056 9A60     		str	r2, [r3, #8]
 3674              	.LVL334:
 3675              	.L312:
 3676              	.LBE577:
 3677              	.LBE576:
3331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 3678              		.loc 1 3331 0
 3679 0058 0129     		cmp	r1, #1
 3680 005a 10D0     		beq	.L313
3334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 3681              		.loc 1 3334 0
 3682 005c 2368     		ldr	r3, [r4]
 3683              	.LVL335:
 3684              	.LBB578:
 3685              	.LBB579:
6353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3686              		.loc 2 6353 0
 3687 005e 9A68     		ldr	r2, [r3, #8]
 3688 0060 12F0080F 		tst	r2, #8
 3689 0064 0BD0     		beq	.L313
 3690              	.LVL336:
 3691              	.LBE579:
 3692              	.LBE578:
 3693              	.LBB580:
 3694              	.LBB581:
6059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3695              		.loc 2 6059 0
 3696 0066 9A68     		ldr	r2, [r3, #8]
 3697 0068 12F0020F 		tst	r2, #2
 3698 006c 07D1     		bne	.L313
 3699              	.LVL337:
 3700              	.LBE581:
 3701              	.LBE580:
 3702              	.LBB582:
 3703              	.LBB583:
6340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3704              		.loc 2 6340 0
 3705 006e 9A68     		ldr	r2, [r3, #8]
 3706 0070 22F00042 		bic	r2, r2, #-2147483648
 3707 0074 22F03F02 		bic	r2, r2, #63
 3708 0078 42F02002 		orr	r2, r2, #32
 3709 007c 9A60     		str	r2, [r3, #8]
 3710              	.LVL338:
 3711              	.L313:
 3712              	.LBE583:
 3713              	.LBE582:
3345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 3714              		.loc 1 3345 0
 3715 007e 0229     		cmp	r1, #2
 3716 0080 3AD0     		beq	.L323
 3717 0082 0329     		cmp	r1, #3
 3718 0084 36D1     		bne	.L324
3348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
 3719              		.loc 1 3348 0
 3720 0086 0C25     		movs	r5, #12
 3721              	.L315:
 3722              	.LVL339:
3360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3723              		.loc 1 3360 0
 3724 0088 FFF7FEFF 		bl	HAL_GetTick
 3725              	.LVL340:
 3726 008c 0646     		mov	r6, r0
 3727              	.LVL341:
 3728              	.L317:
3362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 3729              		.loc 1 3362 0
 3730 008e 2368     		ldr	r3, [r4]
 3731 0090 9B68     		ldr	r3, [r3, #8]
 3732 0092 2B42     		tst	r3, r5
 3733 0094 32D0     		beq	.L327
3364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 3734              		.loc 1 3364 0
 3735 0096 FFF7FEFF 		bl	HAL_GetTick
 3736              	.LVL342:
 3737 009a 801B     		subs	r0, r0, r6
 3738 009c 0528     		cmp	r0, #5
 3739 009e F6D9     		bls	.L317
3367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 3740              		.loc 1 3367 0
 3741 00a0 2368     		ldr	r3, [r4]
 3742 00a2 9B68     		ldr	r3, [r3, #8]
 3743 00a4 2B42     		tst	r3, r5
 3744 00a6 F2D0     		beq	.L317
3370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3745              		.loc 1 3370 0
 3746 00a8 636D     		ldr	r3, [r4, #84]
 3747 00aa 43F01003 		orr	r3, r3, #16
 3748 00ae 6365     		str	r3, [r4, #84]
3373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3749              		.loc 1 3373 0
 3750 00b0 A36D     		ldr	r3, [r4, #88]
 3751 00b2 43F00103 		orr	r3, r3, #1
 3752 00b6 A365     		str	r3, [r4, #88]
3375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 3753              		.loc 1 3375 0
 3754 00b8 0120     		movs	r0, #1
 3755 00ba 20E0     		b	.L306
 3756              	.LVL343:
 3757              	.L319:
 3758              	.LBB584:
 3759              	.LBB568:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3760              		.loc 2 6170 0
 3761 00bc 0020     		movs	r0, #0
 3762              	.LVL344:
 3763 00be A7E7     		b	.L303
 3764              	.LVL345:
 3765              	.L320:
 3766              	.LBE568:
 3767              	.LBE584:
 3768              	.LBB585:
 3769              	.LBB571:
6353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3770              		.loc 2 6353 0
 3771 00c0 0022     		movs	r2, #0
 3772 00c2 AAE7     		b	.L304
 3773              	.LVL346:
 3774              	.L309:
 3775              	.LBE571:
 3776              	.LBE585:
3309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 3777              		.loc 1 3309 0
 3778 00c4 0132     		adds	r2, r2, #1
 3779              	.LVL347:
 3780              	.L308:
3297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 3781              		.loc 1 3297 0
 3782 00c6 1968     		ldr	r1, [r3]
 3783 00c8 11F0400F 		tst	r1, #64
 3784 00cc 0ED1     		bne	.L328
3299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 3785              		.loc 1 3299 0
 3786 00ce 0D49     		ldr	r1, .L329
 3787 00d0 8A42     		cmp	r2, r1
 3788 00d2 F7D9     		bls	.L309
3302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3789              		.loc 1 3302 0
 3790 00d4 636D     		ldr	r3, [r4, #84]
 3791 00d6 43F01003 		orr	r3, r3, #16
 3792 00da 6365     		str	r3, [r4, #84]
3305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3793              		.loc 1 3305 0
 3794 00dc A36D     		ldr	r3, [r4, #88]
 3795 00de 43F00103 		orr	r3, r3, #1
 3796 00e2 A365     		str	r3, [r4, #88]
3307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 3797              		.loc 1 3307 0
 3798 00e4 0120     		movs	r0, #1
 3799 00e6 0AE0     		b	.L306
 3800              	.LVL348:
 3801              	.L326:
3264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 3802              		.loc 1 3264 0
 3803 00e8 0022     		movs	r2, #0
 3804 00ea ECE7     		b	.L308
 3805              	.LVL349:
 3806              	.L328:
3313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 3807              		.loc 1 3313 0
 3808 00ec 4022     		movs	r2, #64
 3809              	.LVL350:
 3810 00ee 1A60     		str	r2, [r3]
 3811              	.LVL351:
3294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3812              		.loc 1 3294 0
 3813 00f0 0121     		movs	r1, #1
 3814 00f2 A0E7     		b	.L311
 3815              	.LVL352:
 3816              	.L324:
3355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
 3817              		.loc 1 3355 0
 3818 00f4 0425     		movs	r5, #4
3356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 3819              		.loc 1 3356 0
 3820 00f6 C7E7     		b	.L315
 3821              	.LVL353:
 3822              	.L323:
3351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         break;
 3823              		.loc 1 3351 0
 3824 00f8 0825     		movs	r5, #8
 3825 00fa C5E7     		b	.L315
 3826              	.LVL354:
 3827              	.L327:
3383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 3828              		.loc 1 3383 0
 3829 00fc 0020     		movs	r0, #0
 3830              	.LVL355:
 3831              	.L306:
3384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3832              		.loc 1 3384 0
 3833 00fe 70BD     		pop	{r4, r5, r6, pc}
 3834              	.LVL356:
 3835              	.L321:
3383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 3836              		.loc 1 3383 0
 3837 0100 0020     		movs	r0, #0
 3838 0102 FCE7     		b	.L306
 3839              	.L330:
 3840              		.align	2
 3841              	.L329:
 3842 0104 FFFF3FA3 		.word	-1556086785
 3843              		.cfi_endproc
 3844              	.LFE339:
 3846              		.section	.text.ADC_Enable,"ax",%progbits
 3847              		.align	1
 3848              		.global	ADC_Enable
 3849              		.syntax unified
 3850              		.thumb
 3851              		.thumb_func
 3852              		.fpu fpv4-sp-d16
 3854              	ADC_Enable:
 3855              	.LFB340:
3394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 3856              		.loc 1 3394 0
 3857              		.cfi_startproc
 3858              		@ args = 0, pretend = 0, frame = 0
 3859              		@ frame_needed = 0, uses_anonymous_args = 0
 3860              	.LVL357:
 3861 0000 38B5     		push	{r3, r4, r5, lr}
 3862              		.cfi_def_cfa_offset 16
 3863              		.cfi_offset 3, -16
 3864              		.cfi_offset 4, -12
 3865              		.cfi_offset 5, -8
 3866              		.cfi_offset 14, -4
3401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 3867              		.loc 1 3401 0
 3868 0002 0368     		ldr	r3, [r0]
 3869              	.LVL358:
 3870              	.LBB586:
 3871              	.LBB587:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3872              		.loc 2 6048 0
 3873 0004 9A68     		ldr	r2, [r3, #8]
 3874 0006 12F0010F 		tst	r2, #1
 3875 000a 40D1     		bne	.L337
 3876              	.LVL359:
 3877              	.LBE587:
 3878              	.LBE586:
3404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
 3879              		.loc 1 3404 0
 3880 000c 9968     		ldr	r1, [r3, #8]
 3881 000e 214A     		ldr	r2, .L340
 3882 0010 1142     		tst	r1, r2
 3883 0012 09D0     		beq	.L333
3408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3884              		.loc 1 3408 0
 3885 0014 436D     		ldr	r3, [r0, #84]
 3886 0016 43F01003 		orr	r3, r3, #16
 3887 001a 4365     		str	r3, [r0, #84]
3411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3888              		.loc 1 3411 0
 3889 001c 836D     		ldr	r3, [r0, #88]
 3890 001e 43F00103 		orr	r3, r3, #1
 3891 0022 8365     		str	r3, [r0, #88]
3413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 3892              		.loc 1 3413 0
 3893 0024 0120     		movs	r0, #1
 3894              	.LVL360:
 3895 0026 33E0     		b	.L332
 3896              	.LVL361:
 3897              	.L333:
 3898 0028 0446     		mov	r4, r0
 3899              	.LVL362:
 3900              	.LBB588:
 3901              	.LBB589:
6012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3902              		.loc 2 6012 0
 3903 002a 9A68     		ldr	r2, [r3, #8]
 3904 002c 22F00042 		bic	r2, r2, #-2147483648
 3905 0030 22F03F02 		bic	r2, r2, #63
 3906 0034 42F00102 		orr	r2, r2, #1
 3907 0038 9A60     		str	r2, [r3, #8]
 3908              	.LVL363:
 3909              	.LBE589:
 3910              	.LBE588:
3420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3911              		.loc 1 3420 0
 3912 003a FFF7FEFF 		bl	HAL_GetTick
 3913              	.LVL364:
 3914 003e 0546     		mov	r5, r0
 3915              	.LVL365:
 3916              	.L334:
3422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 3917              		.loc 1 3422 0
 3918 0040 2368     		ldr	r3, [r4]
 3919 0042 1A68     		ldr	r2, [r3]
 3920 0044 12F0010F 		tst	r2, #1
 3921 0048 1FD1     		bne	.L339
 3922              	.LVL366:
 3923              	.LBB590:
 3924              	.LBB591:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 3925              		.loc 2 6048 0
 3926 004a 9A68     		ldr	r2, [r3, #8]
 3927 004c 12F0010F 		tst	r2, #1
 3928 0050 07D1     		bne	.L335
 3929              	.LVL367:
 3930              	.LBE591:
 3931              	.LBE590:
 3932              	.LBB592:
 3933              	.LBB593:
6012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3934              		.loc 2 6012 0
 3935 0052 9A68     		ldr	r2, [r3, #8]
 3936 0054 22F00042 		bic	r2, r2, #-2147483648
 3937 0058 22F03F02 		bic	r2, r2, #63
 3938 005c 42F00102 		orr	r2, r2, #1
 3939 0060 9A60     		str	r2, [r3, #8]
 3940              	.LVL368:
 3941              	.L335:
 3942              	.LBE593:
 3943              	.LBE592:
3437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 3944              		.loc 1 3437 0
 3945 0062 FFF7FEFF 		bl	HAL_GetTick
 3946              	.LVL369:
 3947 0066 401B     		subs	r0, r0, r5
 3948 0068 0228     		cmp	r0, #2
 3949 006a E9D9     		bls	.L334
3440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 3950              		.loc 1 3440 0
 3951 006c 2368     		ldr	r3, [r4]
 3952 006e 1B68     		ldr	r3, [r3]
 3953 0070 13F0010F 		tst	r3, #1
 3954 0074 E4D1     		bne	.L334
3443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3955              		.loc 1 3443 0
 3956 0076 636D     		ldr	r3, [r4, #84]
 3957 0078 43F01003 		orr	r3, r3, #16
 3958 007c 6365     		str	r3, [r4, #84]
3446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3959              		.loc 1 3446 0
 3960 007e A36D     		ldr	r3, [r4, #88]
 3961 0080 43F00103 		orr	r3, r3, #1
 3962 0084 A365     		str	r3, [r4, #88]
3448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 3963              		.loc 1 3448 0
 3964 0086 0120     		movs	r0, #1
 3965 0088 02E0     		b	.L332
 3966              	.L339:
3455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 3967              		.loc 1 3455 0
 3968 008a 0020     		movs	r0, #0
 3969 008c 00E0     		b	.L332
 3970              	.LVL370:
 3971              	.L337:
 3972 008e 0020     		movs	r0, #0
 3973              	.LVL371:
 3974              	.L332:
3456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 3975              		.loc 1 3456 0
 3976 0090 38BD     		pop	{r3, r4, r5, pc}
 3977              	.L341:
 3978 0092 00BF     		.align	2
 3979              	.L340:
 3980 0094 3F000080 		.word	-2147483585
 3981              		.cfi_endproc
 3982              	.LFE340:
 3984              		.section	.text.HAL_ADC_Start,"ax",%progbits
 3985              		.align	1
 3986              		.global	HAL_ADC_Start
 3987              		.syntax unified
 3988              		.thumb
 3989              		.thumb_func
 3990              		.fpu fpv4-sp-d16
 3992              	HAL_ADC_Start:
 3993              	.LFB321:
1213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3994              		.loc 1 1213 0
 3995              		.cfi_startproc
 3996              		@ args = 0, pretend = 0, frame = 0
 3997              		@ frame_needed = 0, uses_anonymous_args = 0
 3998              	.LVL372:
 3999 0000 38B5     		push	{r3, r4, r5, lr}
 4000              		.cfi_def_cfa_offset 16
 4001              		.cfi_offset 3, -16
 4002              		.cfi_offset 4, -12
 4003              		.cfi_offset 5, -8
 4004              		.cfi_offset 14, -4
 4005              	.LVL373:
 4006              	.LBB594:
 4007              	.LBB595:
5693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4008              		.loc 2 5693 0
 4009 0002 3B4B     		ldr	r3, .L361
 4010 0004 9D68     		ldr	r5, [r3, #8]
 4011              	.LVL374:
 4012              	.LBE595:
 4013              	.LBE594:
1224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 4014              		.loc 1 1224 0
 4015 0006 0368     		ldr	r3, [r0]
 4016              	.LVL375:
 4017              	.LBB596:
 4018              	.LBB597:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4019              		.loc 2 6170 0
 4020 0008 9B68     		ldr	r3, [r3, #8]
 4021              	.LVL376:
 4022 000a 13F0040F 		tst	r3, #4
 4023 000e 6AD1     		bne	.L354
 4024 0010 05F01F05 		and	r5, r5, #31
 4025              	.LVL377:
 4026              	.LBE597:
 4027              	.LBE596:
1227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4028              		.loc 1 1227 0
 4029 0014 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 4030 0018 012B     		cmp	r3, #1
 4031 001a 67D0     		beq	.L355
 4032 001c 0446     		mov	r4, r0
1227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4033              		.loc 1 1227 0 is_stmt 0 discriminator 2
 4034 001e 0123     		movs	r3, #1
 4035 0020 80F85030 		strb	r3, [r0, #80]
1230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4036              		.loc 1 1230 0 is_stmt 1 discriminator 2
 4037 0024 FFF7FEFF 		bl	ADC_Enable
 4038              	.LVL378:
1233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 4039              		.loc 1 1233 0 discriminator 2
 4040 0028 0346     		mov	r3, r0
 4041 002a 0028     		cmp	r0, #0
 4042 002c 57D1     		bne	.L344
1238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4043              		.loc 1 1238 0
 4044 002e 626D     		ldr	r2, [r4, #84]
 4045 0030 22F47062 		bic	r2, r2, #3840
 4046 0034 22F00102 		bic	r2, r2, #1
 4047 0038 42F48072 		orr	r2, r2, #256
 4048 003c 6265     		str	r2, [r4, #84]
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4049              		.loc 1 1246 0
 4050 003e 2268     		ldr	r2, [r4]
 4051 0040 2C49     		ldr	r1, .L361+4
 4052 0042 8A42     		cmp	r2, r1
 4053 0044 2FD0     		beq	.L359
 4054 0046 1146     		mov	r1, r2
 4055              	.L345:
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4056              		.loc 1 1246 0 is_stmt 0 discriminator 4
 4057 0048 8A42     		cmp	r2, r1
 4058 004a 00D0     		beq	.L346
1247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          )
 4059              		.loc 1 1247 0 is_stmt 1
 4060 004c 1DB9     		cbnz	r5, .L347
 4061              	.L346:
1250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 4062              		.loc 1 1250 0
 4063 004e 616D     		ldr	r1, [r4, #84]
 4064 0050 21F48011 		bic	r1, r1, #1048576
 4065 0054 6165     		str	r1, [r4, #84]
 4066              	.L347:
1256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 4067              		.loc 1 1256 0
 4068 0056 616D     		ldr	r1, [r4, #84]
 4069 0058 11F4805F 		tst	r1, #4096
 4070 005c 26D0     		beq	.L348
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 4071              		.loc 1 1259 0
 4072 005e A16D     		ldr	r1, [r4, #88]
 4073 0060 21F00601 		bic	r1, r1, #6
 4074 0064 A165     		str	r1, [r4, #88]
 4075              	.L349:
1269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4076              		.loc 1 1269 0
 4077 0066 1C21     		movs	r1, #28
 4078 0068 1160     		str	r1, [r2]
1274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4079              		.loc 1 1274 0
 4080 006a 0022     		movs	r2, #0
 4081 006c 84F85020 		strb	r2, [r4, #80]
1285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4082              		.loc 1 1285 0
 4083 0070 2168     		ldr	r1, [r4]
 4084 0072 204A     		ldr	r2, .L361+4
 4085 0074 9142     		cmp	r1, r2
 4086 0076 1CD0     		beq	.L360
 4087 0078 0A46     		mov	r2, r1
 4088              	.L350:
1285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4089              		.loc 1 1285 0 is_stmt 0 discriminator 4
 4090 007a 9142     		cmp	r1, r2
 4091 007c 1CD0     		beq	.L351
1286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4092              		.loc 1 1286 0 is_stmt 1
 4093 007e DDB1     		cbz	r5, .L351
1287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 4094              		.loc 1 1287 0
 4095 0080 052D     		cmp	r5, #5
 4096 0082 19D0     		beq	.L351
1288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          )
 4097              		.loc 1 1288 0
 4098 0084 092D     		cmp	r5, #9
 4099 0086 17D0     		beq	.L351
1303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
 4100              		.loc 1 1303 0
 4101 0088 616D     		ldr	r1, [r4, #84]
 4102 008a 41F48011 		orr	r1, r1, #1048576
 4103 008e 6165     		str	r1, [r4, #84]
 4104              	.LVL379:
1307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 4105              		.loc 1 1307 0
 4106 0090 D268     		ldr	r2, [r2, #12]
 4107              	.LVL380:
 4108 0092 12F0007F 		tst	r2, #33554432
 4109 0096 27D0     		beq	.L343
1309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 4110              		.loc 1 1309 0
 4111 0098 626D     		ldr	r2, [r4, #84]
 4112 009a 22F44052 		bic	r2, r2, #12288
 4113 009e 42F48052 		orr	r2, r2, #4096
 4114 00a2 6265     		str	r2, [r4, #84]
 4115 00a4 20E0     		b	.L343
 4116              	.L359:
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4117              		.loc 1 1246 0
 4118 00a6 A1F58071 		sub	r1, r1, #256
 4119 00aa CDE7     		b	.L345
 4120              	.L348:
1264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 4121              		.loc 1 1264 0
 4122 00ac 0021     		movs	r1, #0
 4123 00ae A165     		str	r1, [r4, #88]
 4124 00b0 D9E7     		b	.L349
 4125              	.L360:
1285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4126              		.loc 1 1285 0
 4127 00b2 A2F58072 		sub	r2, r2, #256
 4128 00b6 E0E7     		b	.L350
 4129              	.L351:
1292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 4130              		.loc 1 1292 0
 4131 00b8 CA68     		ldr	r2, [r1, #12]
 4132 00ba 12F0007F 		tst	r2, #33554432
 4133 00be 05D0     		beq	.L353
1294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 4134              		.loc 1 1294 0
 4135 00c0 626D     		ldr	r2, [r4, #84]
 4136 00c2 22F44052 		bic	r2, r2, #12288
 4137 00c6 42F48052 		orr	r2, r2, #4096
 4138 00ca 6265     		str	r2, [r4, #84]
 4139              	.L353:
 4140              	.LVL381:
 4141              	.LBB598:
 4142              	.LBB599:
6137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4143              		.loc 2 6137 0
 4144 00cc 8A68     		ldr	r2, [r1, #8]
 4145 00ce 22F00042 		bic	r2, r2, #-2147483648
 4146 00d2 22F03F02 		bic	r2, r2, #63
 4147 00d6 42F00402 		orr	r2, r2, #4
 4148 00da 8A60     		str	r2, [r1, #8]
 4149 00dc 04E0     		b	.L343
 4150              	.LVL382:
 4151              	.L344:
 4152              	.LBE599:
 4153              	.LBE598:
1326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 4154              		.loc 1 1326 0
 4155 00de 0022     		movs	r2, #0
 4156 00e0 84F85020 		strb	r2, [r4, #80]
 4157 00e4 00E0     		b	.L343
 4158              	.LVL383:
 4159              	.L354:
1331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 4160              		.loc 1 1331 0
 4161 00e6 0223     		movs	r3, #2
 4162              	.LVL384:
 4163              	.L343:
1336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4164              		.loc 1 1336 0
 4165 00e8 1846     		mov	r0, r3
 4166 00ea 38BD     		pop	{r3, r4, r5, pc}
 4167              	.LVL385:
 4168              	.L355:
1227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4169              		.loc 1 1227 0
 4170 00ec 0223     		movs	r3, #2
 4171 00ee FBE7     		b	.L343
 4172              	.L362:
 4173              		.align	2
 4174              	.L361:
 4175 00f0 00030450 		.word	1342440192
 4176 00f4 00010450 		.word	1342439680
 4177              		.cfi_endproc
 4178              	.LFE321:
 4180              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 4181              		.align	1
 4182              		.global	HAL_ADC_Start_IT
 4183              		.syntax unified
 4184              		.thumb
 4185              		.thumb_func
 4186              		.fpu fpv4-sp-d16
 4188              	HAL_ADC_Start_IT:
 4189              	.LFB325:
1734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4190              		.loc 1 1734 0
 4191              		.cfi_startproc
 4192              		@ args = 0, pretend = 0, frame = 0
 4193              		@ frame_needed = 0, uses_anonymous_args = 0
 4194              	.LVL386:
 4195 0000 38B5     		push	{r3, r4, r5, lr}
 4196              		.cfi_def_cfa_offset 16
 4197              		.cfi_offset 3, -16
 4198              		.cfi_offset 4, -12
 4199              		.cfi_offset 5, -8
 4200              		.cfi_offset 14, -4
 4201              	.LVL387:
 4202              	.LBB600:
 4203              	.LBB601:
5693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4204              		.loc 2 5693 0
 4205 0002 604B     		ldr	r3, .L393
 4206 0004 9D68     		ldr	r5, [r3, #8]
 4207              	.LVL388:
 4208              	.LBE601:
 4209              	.LBE600:
1745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 4210              		.loc 1 1745 0
 4211 0006 0368     		ldr	r3, [r0]
 4212              	.LVL389:
 4213              	.LBB602:
 4214              	.LBB603:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4215              		.loc 2 6170 0
 4216 0008 9B68     		ldr	r3, [r3, #8]
 4217              	.LVL390:
 4218 000a 13F0040F 		tst	r3, #4
 4219 000e 40F0B480 		bne	.L383
 4220 0012 05F01F05 		and	r5, r5, #31
 4221              	.LVL391:
 4222              	.LBE603:
 4223              	.LBE602:
1748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4224              		.loc 1 1748 0
 4225 0016 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 4226 001a 012B     		cmp	r3, #1
 4227 001c 00F0B080 		beq	.L384
 4228 0020 0446     		mov	r4, r0
1748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4229              		.loc 1 1748 0 is_stmt 0 discriminator 2
 4230 0022 0123     		movs	r3, #1
 4231 0024 80F85030 		strb	r3, [r0, #80]
1751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4232              		.loc 1 1751 0 is_stmt 1 discriminator 2
 4233 0028 FFF7FEFF 		bl	ADC_Enable
 4234              	.LVL392:
1754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 4235              		.loc 1 1754 0 discriminator 2
 4236 002c 0346     		mov	r3, r0
 4237 002e 0028     		cmp	r0, #0
 4238 0030 40F09F80 		bne	.L365
1759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4239              		.loc 1 1759 0
 4240 0034 626D     		ldr	r2, [r4, #84]
 4241 0036 22F47062 		bic	r2, r2, #3840
 4242 003a 22F00102 		bic	r2, r2, #1
 4243 003e 42F48072 		orr	r2, r2, #256
 4244 0042 6265     		str	r2, [r4, #84]
1767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4245              		.loc 1 1767 0
 4246 0044 2268     		ldr	r2, [r4]
 4247 0046 5049     		ldr	r1, .L393+4
 4248 0048 8A42     		cmp	r2, r1
 4249 004a 4FD0     		beq	.L391
 4250 004c 1146     		mov	r1, r2
 4251              	.L366:
1767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4252              		.loc 1 1767 0 is_stmt 0 discriminator 4
 4253 004e 8A42     		cmp	r2, r1
 4254 0050 00D0     		beq	.L367
1768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          )
 4255              		.loc 1 1768 0 is_stmt 1
 4256 0052 1DB9     		cbnz	r5, .L368
 4257              	.L367:
1771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 4258              		.loc 1 1771 0
 4259 0054 616D     		ldr	r1, [r4, #84]
 4260 0056 21F48011 		bic	r1, r1, #1048576
 4261 005a 6165     		str	r1, [r4, #84]
 4262              	.L368:
1777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 4263              		.loc 1 1777 0
 4264 005c 616D     		ldr	r1, [r4, #84]
 4265 005e 11F4805F 		tst	r1, #4096
 4266 0062 46D0     		beq	.L369
1780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 4267              		.loc 1 1780 0
 4268 0064 A16D     		ldr	r1, [r4, #88]
 4269 0066 21F00601 		bic	r1, r1, #6
 4270 006a A165     		str	r1, [r4, #88]
 4271              	.L370:
1790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4272              		.loc 1 1790 0
 4273 006c 1C21     		movs	r1, #28
 4274 006e 1160     		str	r1, [r2]
1795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4275              		.loc 1 1795 0
 4276 0070 0022     		movs	r2, #0
 4277 0072 84F85020 		strb	r2, [r4, #80]
1798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4278              		.loc 1 1798 0
 4279 0076 2168     		ldr	r1, [r4]
 4280 0078 4A68     		ldr	r2, [r1, #4]
 4281 007a 22F01C02 		bic	r2, r2, #28
 4282 007e 4A60     		str	r2, [r1, #4]
1801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 4283              		.loc 1 1801 0
 4284 0080 6269     		ldr	r2, [r4, #20]
 4285 0082 082A     		cmp	r2, #8
 4286 0084 38D1     		bne	.L387
1804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
 4287              		.loc 1 1804 0
 4288 0086 2168     		ldr	r1, [r4]
 4289 0088 4A68     		ldr	r2, [r1, #4]
 4290 008a 42F00802 		orr	r2, r2, #8
 4291 008e 4A60     		str	r2, [r1, #4]
 4292              	.L373:
1816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 4293              		.loc 1 1816 0
 4294 0090 626B     		ldr	r2, [r4, #52]
 4295 0092 22B9     		cbnz	r2, .L374
1818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 4296              		.loc 1 1818 0
 4297 0094 2168     		ldr	r1, [r4]
 4298 0096 4A68     		ldr	r2, [r1, #4]
 4299 0098 42F01002 		orr	r2, r2, #16
 4300 009c 4A60     		str	r2, [r1, #4]
 4301              	.L374:
1830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4302              		.loc 1 1830 0
 4303 009e 2268     		ldr	r2, [r4]
 4304 00a0 3949     		ldr	r1, .L393+4
 4305 00a2 8A42     		cmp	r2, r1
 4306 00a4 2ED0     		beq	.L392
 4307 00a6 1146     		mov	r1, r2
 4308              	.L375:
1830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4309              		.loc 1 1830 0 is_stmt 0 discriminator 4
 4310 00a8 8A42     		cmp	r2, r1
 4311 00aa 2ED0     		beq	.L376
1831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4312              		.loc 1 1831 0 is_stmt 1
 4313 00ac 6DB3     		cbz	r5, .L376
1832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 4314              		.loc 1 1832 0
 4315 00ae 052D     		cmp	r5, #5
 4316 00b0 2BD0     		beq	.L376
1833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****          )
 4317              		.loc 1 1833 0
 4318 00b2 092D     		cmp	r5, #9
 4319 00b4 29D0     		beq	.L376
1865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
 4320              		.loc 1 1865 0
 4321 00b6 606D     		ldr	r0, [r4, #84]
 4322              	.LVL393:
 4323 00b8 40F48010 		orr	r0, r0, #1048576
 4324 00bc 6065     		str	r0, [r4, #84]
 4325              	.LVL394:
1869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 4326              		.loc 1 1869 0
 4327 00be C968     		ldr	r1, [r1, #12]
 4328              	.LVL395:
 4329 00c0 11F0007F 		tst	r1, #33554432
 4330 00c4 5AD0     		beq	.L364
1873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
 4331              		.loc 1 1873 0
 4332 00c6 616D     		ldr	r1, [r4, #84]
 4333 00c8 21F44051 		bic	r1, r1, #12288
 4334 00cc 41F48051 		orr	r1, r1, #4096
 4335 00d0 6165     		str	r1, [r4, #84]
1875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
 4336              		.loc 1 1875 0
 4337 00d2 6169     		ldr	r1, [r4, #20]
 4338 00d4 0829     		cmp	r1, #8
 4339 00d6 42D1     		bne	.L389
1878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 4340              		.loc 1 1878 0
 4341 00d8 5168     		ldr	r1, [r2, #4]
 4342 00da 21F02001 		bic	r1, r1, #32
 4343 00de 5160     		str	r1, [r2, #4]
1879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               break;
 4344              		.loc 1 1879 0
 4345 00e0 2168     		ldr	r1, [r4]
 4346 00e2 4A68     		ldr	r2, [r1, #4]
 4347 00e4 42F04002 		orr	r2, r2, #64
 4348 00e8 4A60     		str	r2, [r1, #4]
1880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 4349              		.loc 1 1880 0
 4350 00ea 47E0     		b	.L364
 4351              	.LVL396:
 4352              	.L391:
1767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4353              		.loc 1 1767 0
 4354 00ec A1F58071 		sub	r1, r1, #256
 4355 00f0 ADE7     		b	.L366
 4356              	.L369:
1785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 4357              		.loc 1 1785 0
 4358 00f2 0021     		movs	r1, #0
 4359 00f4 A165     		str	r1, [r4, #88]
 4360 00f6 B9E7     		b	.L370
 4361              	.L387:
1808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           break;
 4362              		.loc 1 1808 0
 4363 00f8 2168     		ldr	r1, [r4]
 4364 00fa 4A68     		ldr	r2, [r1, #4]
 4365 00fc 42F00402 		orr	r2, r2, #4
 4366 0100 4A60     		str	r2, [r1, #4]
1809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 4367              		.loc 1 1809 0
 4368 0102 C5E7     		b	.L373
 4369              	.L392:
1830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4370              		.loc 1 1830 0
 4371 0104 A1F58071 		sub	r1, r1, #256
 4372 0108 CEE7     		b	.L375
 4373              	.L376:
1837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 4374              		.loc 1 1837 0
 4375 010a D168     		ldr	r1, [r2, #12]
 4376 010c 11F0007F 		tst	r1, #33554432
 4377 0110 11D0     		beq	.L378
1839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4378              		.loc 1 1839 0
 4379 0112 616D     		ldr	r1, [r4, #84]
 4380 0114 21F44051 		bic	r1, r1, #12288
 4381 0118 41F48051 		orr	r1, r1, #4096
 4382 011c 6165     		str	r1, [r4, #84]
1845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           {
 4383              		.loc 1 1845 0
 4384 011e 6169     		ldr	r1, [r4, #20]
 4385 0120 0829     		cmp	r1, #8
 4386 0122 12D1     		bne	.L388
1848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 4387              		.loc 1 1848 0
 4388 0124 5168     		ldr	r1, [r2, #4]
 4389 0126 21F02001 		bic	r1, r1, #32
 4390 012a 5160     		str	r1, [r2, #4]
1849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               break;
 4391              		.loc 1 1849 0
 4392 012c 2168     		ldr	r1, [r4]
 4393 012e 4A68     		ldr	r2, [r1, #4]
 4394 0130 42F04002 		orr	r2, r2, #64
 4395 0134 4A60     		str	r2, [r1, #4]
 4396              	.L378:
1860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 4397              		.loc 1 1860 0
 4398 0136 2168     		ldr	r1, [r4]
 4399              	.LVL397:
 4400              	.LBB604:
 4401              	.LBB605:
6137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4402              		.loc 2 6137 0
 4403 0138 8A68     		ldr	r2, [r1, #8]
 4404 013a 22F00042 		bic	r2, r2, #-2147483648
 4405 013e 22F03F02 		bic	r2, r2, #63
 4406 0142 42F00402 		orr	r2, r2, #4
 4407 0146 8A60     		str	r2, [r1, #8]
 4408 0148 18E0     		b	.L364
 4409              	.LVL398:
 4410              	.L388:
 4411              	.LBE605:
 4412              	.LBE604:
1853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4413              		.loc 1 1853 0
 4414 014a 5168     		ldr	r1, [r2, #4]
 4415 014c 21F04001 		bic	r1, r1, #64
 4416 0150 5160     		str	r1, [r2, #4]
1854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               break;
 4417              		.loc 1 1854 0
 4418 0152 2168     		ldr	r1, [r4]
 4419 0154 4A68     		ldr	r2, [r1, #4]
 4420 0156 42F02002 		orr	r2, r2, #32
 4421 015a 4A60     		str	r2, [r1, #4]
1855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 4422              		.loc 1 1855 0
 4423 015c EBE7     		b	.L378
 4424              	.LVL399:
 4425              	.L389:
1883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4426              		.loc 1 1883 0
 4427 015e 5168     		ldr	r1, [r2, #4]
 4428 0160 21F04001 		bic	r1, r1, #64
 4429 0164 5160     		str	r1, [r2, #4]
1884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****               break;
 4430              		.loc 1 1884 0
 4431 0166 2168     		ldr	r1, [r4]
 4432 0168 4A68     		ldr	r2, [r1, #4]
 4433 016a 42F02002 		orr	r2, r2, #32
 4434 016e 4A60     		str	r2, [r1, #4]
1885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****           }
 4435              		.loc 1 1885 0
 4436 0170 04E0     		b	.L364
 4437              	.LVL400:
 4438              	.L365:
1920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 4439              		.loc 1 1920 0
 4440 0172 0022     		movs	r2, #0
 4441 0174 84F85020 		strb	r2, [r4, #80]
 4442 0178 00E0     		b	.L364
 4443              	.LVL401:
 4444              	.L383:
1926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 4445              		.loc 1 1926 0
 4446 017a 0223     		movs	r3, #2
 4447              	.LVL402:
 4448              	.L364:
1931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4449              		.loc 1 1931 0
 4450 017c 1846     		mov	r0, r3
 4451 017e 38BD     		pop	{r3, r4, r5, pc}
 4452              	.LVL403:
 4453              	.L384:
1748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4454              		.loc 1 1748 0
 4455 0180 0223     		movs	r3, #2
 4456 0182 FBE7     		b	.L364
 4457              	.L394:
 4458              		.align	2
 4459              	.L393:
 4460 0184 00030450 		.word	1342440192
 4461 0188 00010450 		.word	1342439680
 4462              		.cfi_endproc
 4463              	.LFE325:
 4465              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 4466              		.align	1
 4467              		.global	HAL_ADC_Start_DMA
 4468              		.syntax unified
 4469              		.thumb
 4470              		.thumb_func
 4471              		.fpu fpv4-sp-d16
 4473              	HAL_ADC_Start_DMA:
 4474              	.LFB327:
1994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4475              		.loc 1 1994 0
 4476              		.cfi_startproc
 4477              		@ args = 0, pretend = 0, frame = 0
 4478              		@ frame_needed = 0, uses_anonymous_args = 0
 4479              	.LVL404:
 4480 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4481              		.cfi_def_cfa_offset 24
 4482              		.cfi_offset 3, -24
 4483              		.cfi_offset 4, -20
 4484              		.cfi_offset 5, -16
 4485              		.cfi_offset 6, -12
 4486              		.cfi_offset 7, -8
 4487              		.cfi_offset 14, -4
 4488              	.LVL405:
 4489              	.LBB606:
 4490              	.LBB607:
5693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4491              		.loc 2 5693 0
 4492 0002 3C4B     		ldr	r3, .L410
 4493 0004 9D68     		ldr	r5, [r3, #8]
 4494              	.LVL406:
 4495              	.LBE607:
 4496              	.LBE606:
2004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 4497              		.loc 1 2004 0
 4498 0006 0368     		ldr	r3, [r0]
 4499              	.LVL407:
 4500              	.LBB608:
 4501              	.LBB609:
6170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4502              		.loc 2 6170 0
 4503 0008 9B68     		ldr	r3, [r3, #8]
 4504              	.LVL408:
 4505 000a 13F0040F 		tst	r3, #4
 4506 000e 6BD1     		bne	.L405
 4507 0010 05F01F05 		and	r5, r5, #31
 4508              	.LVL409:
 4509              	.LBE609:
 4510              	.LBE608:
2007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4511              		.loc 1 2007 0
 4512 0014 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 4513 0018 012B     		cmp	r3, #1
 4514 001a 68D0     		beq	.L406
2007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4515              		.loc 1 2007 0 is_stmt 0 discriminator 2
 4516 001c 0123     		movs	r3, #1
 4517 001e 80F85030 		strb	r3, [r0, #80]
2012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4518              		.loc 1 2012 0 is_stmt 1 discriminator 2
 4519 0022 45B1     		cbz	r5, .L397
2013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 4520              		.loc 1 2013 0
 4521 0024 052D     		cmp	r5, #5
 4522 0026 06D0     		beq	.L397
2014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****        )
 4523              		.loc 1 2014 0
 4524 0028 092D     		cmp	r5, #9
 4525 002a 04D0     		beq	.L397
 4526              	.LVL410:
2108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 4527              		.loc 1 2108 0
 4528 002c 0023     		movs	r3, #0
 4529 002e 80F85030 		strb	r3, [r0, #80]
2106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       /* Process unlocked */
 4530              		.loc 1 2106 0
 4531 0032 0123     		movs	r3, #1
 4532 0034 59E0     		b	.L396
 4533              	.LVL411:
 4534              	.L397:
 4535 0036 1746     		mov	r7, r2
 4536 0038 0E46     		mov	r6, r1
 4537 003a 0446     		mov	r4, r0
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4538              		.loc 1 2019 0
 4539 003c FFF7FEFF 		bl	ADC_Enable
 4540              	.LVL412:
2022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 4541              		.loc 1 2022 0
 4542 0040 0346     		mov	r3, r0
 4543 0042 0028     		cmp	r0, #0
 4544 0044 4CD1     		bne	.L399
2027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 4545              		.loc 1 2027 0
 4546 0046 636D     		ldr	r3, [r4, #84]
 4547 0048 23F47063 		bic	r3, r3, #3840
 4548 004c 23F00103 		bic	r3, r3, #1
 4549 0050 43F48073 		orr	r3, r3, #256
 4550 0054 6365     		str	r3, [r4, #84]
2035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4551              		.loc 1 2035 0
 4552 0056 2368     		ldr	r3, [r4]
 4553 0058 274A     		ldr	r2, .L410+4
 4554 005a 9342     		cmp	r3, r2
 4555 005c 3AD0     		beq	.L409
 4556 005e 1A46     		mov	r2, r3
 4557              	.L400:
2035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4558              		.loc 1 2035 0 is_stmt 0 discriminator 4
 4559 0060 9342     		cmp	r3, r2
 4560 0062 00D0     		beq	.L401
2036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****            )
 4561              		.loc 1 2036 0 is_stmt 1
 4562 0064 1DB9     		cbnz	r5, .L402
 4563              	.L401:
2039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 4564              		.loc 1 2039 0
 4565 0066 636D     		ldr	r3, [r4, #84]
 4566 0068 23F48013 		bic	r3, r3, #1048576
 4567 006c 6365     		str	r3, [r4, #84]
 4568              	.L402:
2044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 4569              		.loc 1 2044 0
 4570 006e 636D     		ldr	r3, [r4, #84]
 4571 0070 13F4805F 		tst	r3, #4096
 4572 0074 31D0     		beq	.L403
2047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 4573              		.loc 1 2047 0
 4574 0076 A36D     		ldr	r3, [r4, #88]
 4575 0078 23F00603 		bic	r3, r3, #6
 4576 007c A365     		str	r3, [r4, #88]
 4577              	.L404:
2056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4578              		.loc 1 2056 0
 4579 007e E36C     		ldr	r3, [r4, #76]
 4580 0080 1E4A     		ldr	r2, .L410+8
 4581 0082 DA62     		str	r2, [r3, #44]
2059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4582              		.loc 1 2059 0
 4583 0084 E36C     		ldr	r3, [r4, #76]
 4584 0086 1E4A     		ldr	r2, .L410+12
 4585 0088 1A63     		str	r2, [r3, #48]
2062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4586              		.loc 1 2062 0
 4587 008a E36C     		ldr	r3, [r4, #76]
 4588 008c 1D4A     		ldr	r2, .L410+16
 4589 008e 5A63     		str	r2, [r3, #52]
2071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4590              		.loc 1 2071 0
 4591 0090 2368     		ldr	r3, [r4]
 4592 0092 1C22     		movs	r2, #28
 4593 0094 1A60     		str	r2, [r3]
2076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4594              		.loc 1 2076 0
 4595 0096 0023     		movs	r3, #0
 4596 0098 84F85030 		strb	r3, [r4, #80]
2081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4597              		.loc 1 2081 0
 4598 009c 2268     		ldr	r2, [r4]
 4599 009e 5368     		ldr	r3, [r2, #4]
 4600 00a0 43F01003 		orr	r3, r3, #16
 4601 00a4 5360     		str	r3, [r2, #4]
2084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4602              		.loc 1 2084 0
 4603 00a6 2268     		ldr	r2, [r4]
 4604 00a8 D368     		ldr	r3, [r2, #12]
 4605 00aa 43F00103 		orr	r3, r3, #1
 4606 00ae D360     		str	r3, [r2, #12]
2087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4607              		.loc 1 2087 0
 4608 00b0 2168     		ldr	r1, [r4]
 4609 00b2 3B46     		mov	r3, r7
 4610 00b4 3246     		mov	r2, r6
 4611 00b6 4031     		adds	r1, r1, #64
 4612 00b8 E06C     		ldr	r0, [r4, #76]
 4613              	.LVL413:
 4614 00ba FFF7FEFF 		bl	HAL_DMA_Start_IT
 4615              	.LVL414:
 4616 00be 0346     		mov	r3, r0
 4617              	.LVL415:
2094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 4618              		.loc 1 2094 0
 4619 00c0 2168     		ldr	r1, [r4]
 4620              	.LVL416:
 4621              	.LBB610:
 4622              	.LBB611:
6137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4623              		.loc 2 6137 0
 4624 00c2 8A68     		ldr	r2, [r1, #8]
 4625 00c4 22F00042 		bic	r2, r2, #-2147483648
 4626 00c8 22F03F02 		bic	r2, r2, #63
 4627 00cc 42F00402 		orr	r2, r2, #4
 4628 00d0 8A60     		str	r2, [r1, #8]
 4629 00d2 0AE0     		b	.L396
 4630              	.LVL417:
 4631              	.L409:
 4632              	.LBE611:
 4633              	.LBE610:
2035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4634              		.loc 1 2035 0
 4635 00d4 A2F58072 		sub	r2, r2, #256
 4636 00d8 C2E7     		b	.L400
 4637              	.L403:
2052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 4638              		.loc 1 2052 0
 4639 00da 0023     		movs	r3, #0
 4640 00dc A365     		str	r3, [r4, #88]
 4641 00de CEE7     		b	.L404
 4642              	.L399:
2099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 4643              		.loc 1 2099 0
 4644 00e0 0022     		movs	r2, #0
 4645 00e2 84F85020 		strb	r2, [r4, #80]
 4646 00e6 00E0     		b	.L396
 4647              	.LVL418:
 4648              	.L405:
2114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 4649              		.loc 1 2114 0
 4650 00e8 0223     		movs	r3, #2
 4651              	.LVL419:
 4652              	.L396:
2119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4653              		.loc 1 2119 0
 4654 00ea 1846     		mov	r0, r3
 4655 00ec F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4656              	.LVL420:
 4657              	.L406:
2007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4658              		.loc 1 2007 0
 4659 00ee 0223     		movs	r3, #2
 4660 00f0 FBE7     		b	.L396
 4661              	.L411:
 4662 00f2 00BF     		.align	2
 4663              	.L410:
 4664 00f4 00030450 		.word	1342440192
 4665 00f8 00010450 		.word	1342439680
 4666 00fc 00000000 		.word	ADC_DMAConvCplt
 4667 0100 00000000 		.word	ADC_DMAHalfConvCplt
 4668 0104 00000000 		.word	ADC_DMAError
 4669              		.cfi_endproc
 4670              	.LFE327:
 4672              		.section	.text.ADC_Disable,"ax",%progbits
 4673              		.align	1
 4674              		.global	ADC_Disable
 4675              		.syntax unified
 4676              		.thumb
 4677              		.thumb_func
 4678              		.fpu fpv4-sp-d16
 4680              	ADC_Disable:
 4681              	.LFB341:
3466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 4682              		.loc 1 3466 0
 4683              		.cfi_startproc
 4684              		@ args = 0, pretend = 0, frame = 0
 4685              		@ frame_needed = 0, uses_anonymous_args = 0
 4686              	.LVL421:
 4687 0000 38B5     		push	{r3, r4, r5, lr}
 4688              		.cfi_def_cfa_offset 16
 4689              		.cfi_offset 3, -16
 4690              		.cfi_offset 4, -12
 4691              		.cfi_offset 5, -8
 4692              		.cfi_offset 14, -4
3468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4693              		.loc 1 3468 0
 4694 0002 0368     		ldr	r3, [r0]
 4695              	.LVL422:
 4696              	.LBB612:
 4697              	.LBB613:
6059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4698              		.loc 2 6059 0
 4699 0004 9A68     		ldr	r2, [r3, #8]
 4700 0006 12F0020F 		tst	r2, #2
 4701 000a 15D0     		beq	.L418
 4702 000c 0121     		movs	r1, #1
 4703              	.L413:
 4704              	.LVL423:
 4705              	.LBE613:
 4706              	.LBE612:
 4707              	.LBB615:
 4708              	.LBB616:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4709              		.loc 2 6048 0
 4710 000e 9A68     		ldr	r2, [r3, #8]
 4711 0010 12F0010F 		tst	r2, #1
 4712 0014 3CD0     		beq	.L419
 4713              	.LVL424:
 4714              	.LBE616:
 4715              	.LBE615:
3474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****      )
 4716              		.loc 1 3474 0
 4717 0016 0029     		cmp	r1, #0
 4718 0018 3CD1     		bne	.L420
3478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 4719              		.loc 1 3478 0
 4720 001a 9A68     		ldr	r2, [r3, #8]
 4721 001c 02F00D02 		and	r2, r2, #13
 4722 0020 012A     		cmp	r2, #1
 4723 0022 0BD0     		beq	.L422
3487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4724              		.loc 1 3487 0
 4725 0024 436D     		ldr	r3, [r0, #84]
 4726 0026 43F01003 		orr	r3, r3, #16
 4727 002a 4365     		str	r3, [r0, #84]
3490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4728              		.loc 1 3490 0
 4729 002c 836D     		ldr	r3, [r0, #88]
 4730 002e 43F00103 		orr	r3, r3, #1
 4731 0032 8365     		str	r3, [r0, #88]
3492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 4732              		.loc 1 3492 0
 4733 0034 0120     		movs	r0, #1
 4734              	.LVL425:
 4735 0036 2CE0     		b	.L414
 4736              	.LVL426:
 4737              	.L418:
 4738              	.LBB617:
 4739              	.LBB614:
6059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4740              		.loc 2 6059 0
 4741 0038 0021     		movs	r1, #0
 4742 003a E8E7     		b	.L413
 4743              	.LVL427:
 4744              	.L422:
 4745 003c 0446     		mov	r4, r0
 4746              	.LVL428:
 4747              	.LBE614:
 4748              	.LBE617:
 4749              	.LBB618:
 4750              	.LBB619:
6032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4751              		.loc 2 6032 0
 4752 003e 9A68     		ldr	r2, [r3, #8]
 4753 0040 22F00042 		bic	r2, r2, #-2147483648
 4754 0044 22F03F02 		bic	r2, r2, #63
 4755 0048 42F00202 		orr	r2, r2, #2
 4756 004c 9A60     		str	r2, [r3, #8]
 4757              	.LVL429:
 4758              	.LBE619:
 4759              	.LBE618:
3482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 4760              		.loc 1 3482 0
 4761 004e 0368     		ldr	r3, [r0]
 4762 0050 0322     		movs	r2, #3
 4763 0052 1A60     		str	r2, [r3]
3497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4764              		.loc 1 3497 0
 4765 0054 FFF7FEFF 		bl	HAL_GetTick
 4766              	.LVL430:
 4767 0058 0546     		mov	r5, r0
 4768              	.LVL431:
 4769              	.L416:
3499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 4770              		.loc 1 3499 0
 4771 005a 2368     		ldr	r3, [r4]
 4772 005c 9B68     		ldr	r3, [r3, #8]
 4773 005e 13F0010F 		tst	r3, #1
 4774 0062 13D0     		beq	.L423
3501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 4775              		.loc 1 3501 0
 4776 0064 FFF7FEFF 		bl	HAL_GetTick
 4777              	.LVL432:
 4778 0068 401B     		subs	r0, r0, r5
 4779 006a 0228     		cmp	r0, #2
 4780 006c F5D9     		bls	.L416
3504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         {
 4781              		.loc 1 3504 0
 4782 006e 2368     		ldr	r3, [r4]
 4783 0070 9B68     		ldr	r3, [r3, #8]
 4784 0072 13F0010F 		tst	r3, #1
 4785 0076 F0D0     		beq	.L416
3507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4786              		.loc 1 3507 0
 4787 0078 636D     		ldr	r3, [r4, #84]
 4788 007a 43F01003 		orr	r3, r3, #16
 4789 007e 6365     		str	r3, [r4, #84]
3510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4790              		.loc 1 3510 0
 4791 0080 A36D     		ldr	r3, [r4, #88]
 4792 0082 43F00103 		orr	r3, r3, #1
 4793 0086 A365     		str	r3, [r4, #88]
3512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****         }
 4794              		.loc 1 3512 0
 4795 0088 0120     		movs	r0, #1
 4796 008a 02E0     		b	.L414
 4797              	.L423:
3519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 4798              		.loc 1 3519 0
 4799 008c 0020     		movs	r0, #0
 4800 008e 00E0     		b	.L414
 4801              	.LVL433:
 4802              	.L419:
 4803 0090 0020     		movs	r0, #0
 4804              	.LVL434:
 4805              	.L414:
3520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4806              		.loc 1 3520 0
 4807 0092 38BD     		pop	{r3, r4, r5, pc}
 4808              	.LVL435:
 4809              	.L420:
3519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** }
 4810              		.loc 1 3519 0
 4811 0094 0020     		movs	r0, #0
 4812              	.LVL436:
 4813 0096 FCE7     		b	.L414
 4814              		.cfi_endproc
 4815              	.LFE341:
 4817              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 4818              		.align	1
 4819              		.global	HAL_ADC_DeInit
 4820              		.syntax unified
 4821              		.thumb
 4822              		.thumb_func
 4823              		.fpu fpv4-sp-d16
 4825              	HAL_ADC_DeInit:
 4826              	.LFB318:
 707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4827              		.loc 1 707 0
 4828              		.cfi_startproc
 4829              		@ args = 0, pretend = 0, frame = 0
 4830              		@ frame_needed = 0, uses_anonymous_args = 0
 4831              	.LVL437:
 4832 0000 38B5     		push	{r3, r4, r5, lr}
 4833              		.cfi_def_cfa_offset 16
 4834              		.cfi_offset 3, -16
 4835              		.cfi_offset 4, -12
 4836              		.cfi_offset 5, -8
 4837              		.cfi_offset 14, -4
 711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 4838              		.loc 1 711 0
 4839 0002 0028     		cmp	r0, #0
 4840 0004 00F0CF80 		beq	.L431
 4841 0008 0446     		mov	r4, r0
 720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4842              		.loc 1 720 0
 4843 000a 436D     		ldr	r3, [r0, #84]
 4844 000c 43F00203 		orr	r3, r3, #2
 4845 0010 4365     		str	r3, [r0, #84]
 723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4846              		.loc 1 723 0
 4847 0012 0321     		movs	r1, #3
 4848 0014 FFF7FEFF 		bl	ADC_ConversionStop
 4849              	.LVL438:
 731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4850              		.loc 1 731 0
 4851 0018 2268     		ldr	r2, [r4]
 4852 001a D368     		ldr	r3, [r2, #12]
 4853 001c 43F40013 		orr	r3, r3, #2097152
 4854 0020 D360     		str	r3, [r2, #12]
 734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 4855              		.loc 1 734 0
 4856 0022 0546     		mov	r5, r0
 4857 0024 0028     		cmp	r0, #0
 4858 0026 00F09F80 		beq	.L436
 4859              	.L426:
 4860              	.LVL439:
 755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 4861              		.loc 1 755 0
 4862 002a 2268     		ldr	r2, [r4]
 4863 002c 5368     		ldr	r3, [r2, #4]
 4864 002e 23F4FF63 		bic	r3, r3, #2040
 4865 0032 23F00703 		bic	r3, r3, #7
 4866 0036 5360     		str	r3, [r2, #4]
 762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 4867              		.loc 1 762 0
 4868 0038 2368     		ldr	r3, [r4]
 4869 003a 40F2FF72 		movw	r2, #2047
 4870 003e 1A60     		str	r2, [r3]
 773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 4871              		.loc 1 773 0
 4872 0040 2268     		ldr	r2, [r4]
 4873 0042 9368     		ldr	r3, [r2, #8]
 4874 0044 23F0A043 		bic	r3, r3, #1342177280
 4875 0048 9360     		str	r3, [r2, #8]
 774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4876              		.loc 1 774 0
 4877 004a 2268     		ldr	r2, [r4]
 4878 004c 9368     		ldr	r3, [r2, #8]
 4879 004e 43F00053 		orr	r3, r3, #536870912
 4880 0052 9360     		str	r3, [r2, #8]
 777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 4881              		.loc 1 777 0
 4882 0054 2268     		ldr	r2, [r4]
 4883 0056 D168     		ldr	r1, [r2, #12]
 4884 0058 544B     		ldr	r3, .L438
 4885 005a 0B40     		ands	r3, r3, r1
 4886 005c D360     		str	r3, [r2, #12]
 778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4887              		.loc 1 778 0
 4888 005e 2268     		ldr	r2, [r4]
 4889 0060 D368     		ldr	r3, [r2, #12]
 4890 0062 43F00043 		orr	r3, r3, #-2147483648
 4891 0066 D360     		str	r3, [r2, #12]
 781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 4892              		.loc 1 781 0
 4893 0068 2268     		ldr	r2, [r4]
 4894 006a 1369     		ldr	r3, [r2, #16]
 4895 006c 23F4FF63 		bic	r3, r3, #2040
 4896 0070 23F00703 		bic	r3, r3, #7
 4897 0074 1361     		str	r3, [r2, #16]
 785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4898              		.loc 1 785 0
 4899 0076 2268     		ldr	r2, [r4]
 4900 0078 5369     		ldr	r3, [r2, #20]
 4901 007a 03F04043 		and	r3, r3, #-1073741824
 4902 007e 5361     		str	r3, [r2, #20]
 788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 4903              		.loc 1 788 0
 4904 0080 2268     		ldr	r2, [r4]
 4905 0082 9369     		ldr	r3, [r2, #24]
 4906 0084 03F07843 		and	r3, r3, #-134217728
 4907 0088 9361     		str	r3, [r2, #24]
 793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4908              		.loc 1 793 0
 4909 008a 2268     		ldr	r2, [r4]
 4910 008c 136A     		ldr	r3, [r2, #32]
 4911 008e 03F0F023 		and	r3, r3, #-268374016
 4912 0092 1362     		str	r3, [r2, #32]
 796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4913              		.loc 1 796 0
 4914 0094 2268     		ldr	r2, [r4]
 4915 0096 536A     		ldr	r3, [r2, #36]
 4916 0098 03F0FF23 		and	r3, r3, #-16711936
 4917 009c 5362     		str	r3, [r2, #36]
 799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4918              		.loc 1 799 0
 4919 009e 2268     		ldr	r2, [r4]
 4920 00a0 936A     		ldr	r3, [r2, #40]
 4921 00a2 03F0FF23 		and	r3, r3, #-16711936
 4922 00a6 9362     		str	r3, [r2, #40]
 802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 4923              		.loc 1 802 0
 4924 00a8 2268     		ldr	r2, [r4]
 4925 00aa 116B     		ldr	r1, [r2, #48]
 4926 00ac 404B     		ldr	r3, .L438+4
 4927 00ae 0B40     		ands	r3, r3, r1
 4928 00b0 1363     		str	r3, [r2, #48]
 806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 4929              		.loc 1 806 0
 4930 00b2 2368     		ldr	r3, [r4]
 4931 00b4 5A6B     		ldr	r2, [r3, #52]
 4932 00b6 3F49     		ldr	r1, .L438+8
 4933 00b8 0A40     		ands	r2, r2, r1
 4934 00ba 5A63     		str	r2, [r3, #52]
 810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 4935              		.loc 1 810 0
 4936 00bc 2268     		ldr	r2, [r4]
 4937 00be 936B     		ldr	r3, [r2, #56]
 4938 00c0 0B40     		ands	r3, r3, r1
 4939 00c2 9363     		str	r3, [r2, #56]
 814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4940              		.loc 1 814 0
 4941 00c4 2268     		ldr	r2, [r4]
 4942 00c6 D36B     		ldr	r3, [r2, #60]
 4943 00c8 23F4FB63 		bic	r3, r3, #2008
 4944 00cc 23F00703 		bic	r3, r3, #7
 4945 00d0 D363     		str	r3, [r2, #60]
 822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register OFR2 */
 4946              		.loc 1 822 0
 4947 00d2 2168     		ldr	r1, [r4]
 4948 00d4 0A6E     		ldr	r2, [r1, #96]
 4949 00d6 384B     		ldr	r3, .L438+12
 4950 00d8 1A40     		ands	r2, r2, r3
 4951 00da 0A66     		str	r2, [r1, #96]
 824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register OFR3 */
 4952              		.loc 1 824 0
 4953 00dc 2168     		ldr	r1, [r4]
 4954 00de 4A6E     		ldr	r2, [r1, #100]
 4955 00e0 1A40     		ands	r2, r2, r3
 4956 00e2 4A66     		str	r2, [r1, #100]
 826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   /* Reset register OFR4 */
 4957              		.loc 1 826 0
 4958 00e4 2168     		ldr	r1, [r4]
 4959 00e6 8A6E     		ldr	r2, [r1, #104]
 4960 00e8 1A40     		ands	r2, r2, r3
 4961 00ea 8A66     		str	r2, [r1, #104]
 828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4962              		.loc 1 828 0
 4963 00ec 2168     		ldr	r1, [r4]
 4964 00ee CA6E     		ldr	r2, [r1, #108]
 4965 00f0 1340     		ands	r3, r3, r2
 4966 00f2 CB66     		str	r3, [r1, #108]
 834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4967              		.loc 1 834 0
 4968 00f4 2268     		ldr	r2, [r4]
 4969 00f6 D2F8A030 		ldr	r3, [r2, #160]
 4970 00fa DB0C     		lsrs	r3, r3, #19
 4971 00fc DB04     		lsls	r3, r3, #19
 4972 00fe C2F8A030 		str	r3, [r2, #160]
 837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4973              		.loc 1 837 0
 4974 0102 2268     		ldr	r2, [r4]
 4975 0104 D2F8A430 		ldr	r3, [r2, #164]
 4976 0108 DB0C     		lsrs	r3, r3, #19
 4977 010a DB04     		lsls	r3, r3, #19
 4978 010c C2F8A430 		str	r3, [r2, #164]
 840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4979              		.loc 1 840 0
 4980 0110 2268     		ldr	r2, [r4]
 4981 0112 D2F8B030 		ldr	r3, [r2, #176]
 4982 0116 DB0C     		lsrs	r3, r3, #19
 4983 0118 DB04     		lsls	r3, r3, #19
 4984 011a C2F8B030 		str	r3, [r2, #176]
 843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 4985              		.loc 1 843 0
 4986 011e 2268     		ldr	r2, [r4]
 4987 0120 D2F8B430 		ldr	r3, [r2, #180]
 4988 0124 23F07F13 		bic	r3, r3, #8323199
 4989 0128 C2F8B430 		str	r3, [r2, #180]
 4990              	.LVL440:
 4991              	.LBB620:
 4992              	.LBB621:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 4993              		.loc 2 6048 0
 4994 012c 234B     		ldr	r3, .L438+16
 4995 012e 9B68     		ldr	r3, [r3, #8]
 4996 0130 13F0010F 		tst	r3, #1
 4997 0134 22D0     		beq	.L432
 4998 0136 0122     		movs	r2, #1
 4999              	.L427:
 5000              	.LVL441:
 5001              	.LBE621:
 5002              	.LBE620:
 5003              	.LBB623:
 5004              	.LBB624:
 5005 0138 214B     		ldr	r3, .L438+20
 5006 013a 9B68     		ldr	r3, [r3, #8]
 5007 013c 13F0010F 		tst	r3, #1
 5008 0140 1ED0     		beq	.L433
 5009 0142 0123     		movs	r3, #1
 5010              	.L428:
 5011              	.LVL442:
 5012              	.LBE624:
 5013              	.LBE623:
 850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 5014              		.loc 1 850 0
 5015 0144 1343     		orrs	r3, r3, r2
 5016              	.LVL443:
 5017              	.LBB626:
 5018              	.LBB627:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 5019              		.loc 2 6048 0
 5020 0146 1F4A     		ldr	r2, .L438+24
 5021 0148 9268     		ldr	r2, [r2, #8]
 5022 014a 12F0010F 		tst	r2, #1
 5023 014e 19D0     		beq	.L434
 5024 0150 0122     		movs	r2, #1
 5025              	.L429:
 5026              	.LVL444:
 5027              	.LBE627:
 5028              	.LBE626:
 850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 5029              		.loc 1 850 0
 5030 0152 1343     		orrs	r3, r3, r2
 5031 0154 18D0     		beq	.L437
 5032              	.L430:
 884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5033              		.loc 1 884 0
 5034 0156 0023     		movs	r3, #0
 5035 0158 A365     		str	r3, [r4, #88]
 887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5036              		.loc 1 887 0
 5037 015a E365     		str	r3, [r4, #92]
 888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5038              		.loc 1 888 0
 5039 015c 2366     		str	r3, [r4, #96]
 891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5040              		.loc 1 891 0
 5041 015e 6365     		str	r3, [r4, #84]
 894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5042              		.loc 1 894 0
 5043 0160 84F85030 		strb	r3, [r4, #80]
 5044              	.LVL445:
 5045              	.L425:
 898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5046              		.loc 1 898 0
 5047 0164 2846     		mov	r0, r5
 5048 0166 38BD     		pop	{r3, r4, r5, pc}
 5049              	.LVL446:
 5050              	.L436:
 737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5051              		.loc 1 737 0
 5052 0168 2046     		mov	r0, r4
 5053              	.LVL447:
 5054 016a FFF7FEFF 		bl	ADC_Disable
 5055              	.LVL448:
 740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 5056              		.loc 1 740 0
 5057 016e 0546     		mov	r5, r0
 5058 0170 0028     		cmp	r0, #0
 5059 0172 7FF45AAF 		bne	.L426
 743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 5060              		.loc 1 743 0
 5061 0176 0123     		movs	r3, #1
 5062 0178 6365     		str	r3, [r4, #84]
 5063 017a 56E7     		b	.L426
 5064              	.LVL449:
 5065              	.L432:
 5066              	.LBB629:
 5067              	.LBB622:
6048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_adc.h **** }
 5068              		.loc 2 6048 0
 5069 017c 0022     		movs	r2, #0
 5070 017e DBE7     		b	.L427
 5071              	.LVL450:
 5072              	.L433:
 5073              	.LBE622:
 5074              	.LBE629:
 5075              	.LBB630:
 5076              	.LBB625:
 5077 0180 0023     		movs	r3, #0
 5078 0182 DFE7     		b	.L428
 5079              	.LVL451:
 5080              	.L434:
 5081              	.LBE625:
 5082              	.LBE630:
 5083              	.LBB631:
 5084              	.LBB628:
 5085 0184 0022     		movs	r2, #0
 5086 0186 E4E7     		b	.L429
 5087              	.LVL452:
 5088              	.L437:
 5089              	.LBE628:
 5090              	.LBE631:
 859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5091              		.loc 1 859 0
 5092 0188 0F4A     		ldr	r2, .L438+28
 5093 018a 9368     		ldr	r3, [r2, #8]
 5094 018c 23F0FF73 		bic	r3, r3, #33423360
 5095 0190 23F4F733 		bic	r3, r3, #126464
 5096 0194 23F48F73 		bic	r3, r3, #286
 5097 0198 23F00103 		bic	r3, r3, #1
 5098 019c 9360     		str	r3, [r2, #8]
 879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 5099              		.loc 1 879 0
 5100 019e 2046     		mov	r0, r4
 5101 01a0 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 5102              	.LVL453:
 5103 01a4 D7E7     		b	.L430
 5104              	.LVL454:
 5105              	.L431:
 713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   }
 5106              		.loc 1 713 0
 5107 01a6 0125     		movs	r5, #1
 5108 01a8 DCE7     		b	.L425
 5109              	.L439:
 5110 01aa 00BF     		.align	2
 5111              	.L438:
 5112 01ac 04800080 		.word	-2147450876
 5113 01b0 300882E0 		.word	-528349136
 5114 01b4 200882E0 		.word	-528349152
 5115 01b8 00F0FF03 		.word	67104768
 5116 01bc 00000450 		.word	1342439424
 5117 01c0 00010450 		.word	1342439680
 5118 01c4 00020450 		.word	1342439936
 5119 01c8 00030450 		.word	1342440192
 5120              		.cfi_endproc
 5121              	.LFE318:
 5123              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 5124              		.align	1
 5125              		.global	HAL_ADC_Stop
 5126              		.syntax unified
 5127              		.thumb
 5128              		.thumb_func
 5129              		.fpu fpv4-sp-d16
 5131              	HAL_ADC_Stop:
 5132              	.LFB322:
1348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5133              		.loc 1 1348 0
 5134              		.cfi_startproc
 5135              		@ args = 0, pretend = 0, frame = 0
 5136              		@ frame_needed = 0, uses_anonymous_args = 0
 5137              	.LVL455:
1355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5138              		.loc 1 1355 0
 5139 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5140 0004 012B     		cmp	r3, #1
 5141 0006 1DD0     		beq	.L443
1348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5142              		.loc 1 1348 0 discriminator 2
 5143 0008 10B5     		push	{r4, lr}
 5144              		.cfi_def_cfa_offset 8
 5145              		.cfi_offset 4, -8
 5146              		.cfi_offset 14, -4
 5147 000a 0446     		mov	r4, r0
1355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5148              		.loc 1 1355 0 discriminator 2
 5149 000c 0123     		movs	r3, #1
 5150 000e 80F85030 		strb	r3, [r0, #80]
1358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5151              		.loc 1 1358 0 discriminator 2
 5152 0012 0321     		movs	r1, #3
 5153 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5154              	.LVL456:
1361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 5155              		.loc 1 1361 0 discriminator 2
 5156 0018 0346     		mov	r3, r0
 5157 001a 20B1     		cbz	r0, .L448
 5158              	.L442:
 5159              	.LVL457:
1377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5160              		.loc 1 1377 0
 5161 001c 0022     		movs	r2, #0
 5162 001e 84F85020 		strb	r2, [r4, #80]
1381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5163              		.loc 1 1381 0
 5164 0022 1846     		mov	r0, r3
 5165 0024 10BD     		pop	{r4, pc}
 5166              	.LVL458:
 5167              	.L448:
1364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5168              		.loc 1 1364 0
 5169 0026 2046     		mov	r0, r4
 5170              	.LVL459:
 5171 0028 FFF7FEFF 		bl	ADC_Disable
 5172              	.LVL460:
1367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 5173              		.loc 1 1367 0
 5174 002c 0346     		mov	r3, r0
 5175 002e 0028     		cmp	r0, #0
 5176 0030 F4D1     		bne	.L442
1370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5177              		.loc 1 1370 0
 5178 0032 626D     		ldr	r2, [r4, #84]
 5179 0034 22F48852 		bic	r2, r2, #4352
 5180 0038 22F00102 		bic	r2, r2, #1
 5181 003c 42F00102 		orr	r2, r2, #1
 5182 0040 6265     		str	r2, [r4, #84]
 5183 0042 EBE7     		b	.L442
 5184              	.LVL461:
 5185              	.L443:
 5186              		.cfi_def_cfa_offset 0
 5187              		.cfi_restore 4
 5188              		.cfi_restore 14
1355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5189              		.loc 1 1355 0
 5190 0044 0223     		movs	r3, #2
1381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5191              		.loc 1 1381 0
 5192 0046 1846     		mov	r0, r3
 5193              	.LVL462:
 5194 0048 7047     		bx	lr
 5195              		.cfi_endproc
 5196              	.LFE322:
 5198              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 5199              		.align	1
 5200              		.global	HAL_ADC_Stop_IT
 5201              		.syntax unified
 5202              		.thumb
 5203              		.thumb_func
 5204              		.fpu fpv4-sp-d16
 5206              	HAL_ADC_Stop_IT:
 5207              	.LFB326:
1941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5208              		.loc 1 1941 0
 5209              		.cfi_startproc
 5210              		@ args = 0, pretend = 0, frame = 0
 5211              		@ frame_needed = 0, uses_anonymous_args = 0
 5212              	.LVL463:
1948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5213              		.loc 1 1948 0
 5214 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5215 0004 012B     		cmp	r3, #1
 5216 0006 22D0     		beq	.L452
1941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5217              		.loc 1 1941 0 discriminator 2
 5218 0008 10B5     		push	{r4, lr}
 5219              		.cfi_def_cfa_offset 8
 5220              		.cfi_offset 4, -8
 5221              		.cfi_offset 14, -4
 5222 000a 0446     		mov	r4, r0
1948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5223              		.loc 1 1948 0 discriminator 2
 5224 000c 0123     		movs	r3, #1
 5225 000e 80F85030 		strb	r3, [r0, #80]
1951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5226              		.loc 1 1951 0 discriminator 2
 5227 0012 0321     		movs	r1, #3
 5228 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5229              	.LVL464:
1954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 5230              		.loc 1 1954 0 discriminator 2
 5231 0018 0346     		mov	r3, r0
 5232 001a 20B1     		cbz	r0, .L457
 5233              	.L451:
 5234              	.LVL465:
1974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5235              		.loc 1 1974 0
 5236 001c 0022     		movs	r2, #0
 5237 001e 84F85020 		strb	r2, [r4, #80]
1978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5238              		.loc 1 1978 0
 5239 0022 1846     		mov	r0, r3
 5240 0024 10BD     		pop	{r4, pc}
 5241              	.LVL466:
 5242              	.L457:
1958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5243              		.loc 1 1958 0
 5244 0026 2268     		ldr	r2, [r4]
 5245 0028 5368     		ldr	r3, [r2, #4]
 5246 002a 23F01C03 		bic	r3, r3, #28
 5247 002e 5360     		str	r3, [r2, #4]
1961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5248              		.loc 1 1961 0
 5249 0030 2046     		mov	r0, r4
 5250              	.LVL467:
 5251 0032 FFF7FEFF 		bl	ADC_Disable
 5252              	.LVL468:
1964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 5253              		.loc 1 1964 0
 5254 0036 0346     		mov	r3, r0
 5255 0038 0028     		cmp	r0, #0
 5256 003a EFD1     		bne	.L451
1967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5257              		.loc 1 1967 0
 5258 003c 626D     		ldr	r2, [r4, #84]
 5259 003e 22F48852 		bic	r2, r2, #4352
 5260 0042 22F00102 		bic	r2, r2, #1
 5261 0046 42F00102 		orr	r2, r2, #1
 5262 004a 6265     		str	r2, [r4, #84]
 5263 004c E6E7     		b	.L451
 5264              	.LVL469:
 5265              	.L452:
 5266              		.cfi_def_cfa_offset 0
 5267              		.cfi_restore 4
 5268              		.cfi_restore 14
1948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5269              		.loc 1 1948 0
 5270 004e 0223     		movs	r3, #2
1978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5271              		.loc 1 1978 0
 5272 0050 1846     		mov	r0, r3
 5273              	.LVL470:
 5274 0052 7047     		bx	lr
 5275              		.cfi_endproc
 5276              	.LFE326:
 5278              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 5279              		.align	1
 5280              		.global	HAL_ADC_Stop_DMA
 5281              		.syntax unified
 5282              		.thumb
 5283              		.thumb_func
 5284              		.fpu fpv4-sp-d16
 5286              	HAL_ADC_Stop_DMA:
 5287              	.LFB328:
2135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5288              		.loc 1 2135 0
 5289              		.cfi_startproc
 5290              		@ args = 0, pretend = 0, frame = 0
 5291              		@ frame_needed = 0, uses_anonymous_args = 0
 5292              	.LVL471:
 5293 0000 38B5     		push	{r3, r4, r5, lr}
 5294              		.cfi_def_cfa_offset 16
 5295              		.cfi_offset 3, -16
 5296              		.cfi_offset 4, -12
 5297              		.cfi_offset 5, -8
 5298              		.cfi_offset 14, -4
2142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5299              		.loc 1 2142 0
 5300 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 5301 0006 012B     		cmp	r3, #1
 5302 0008 39D0     		beq	.L464
 5303 000a 0446     		mov	r4, r0
2142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5304              		.loc 1 2142 0 is_stmt 0 discriminator 2
 5305 000c 0123     		movs	r3, #1
 5306 000e 80F85030 		strb	r3, [r0, #80]
2145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5307              		.loc 1 2145 0 is_stmt 1 discriminator 2
 5308 0012 0321     		movs	r1, #3
 5309 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5310              	.LVL472:
2148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****   {
 5311              		.loc 1 2148 0 discriminator 2
 5312 0018 0546     		mov	r5, r0
 5313 001a E8B9     		cbnz	r0, .L460
2151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5314              		.loc 1 2151 0
 5315 001c 2268     		ldr	r2, [r4]
 5316 001e D368     		ldr	r3, [r2, #12]
 5317 0020 23F00103 		bic	r3, r3, #1
 5318 0024 D360     		str	r3, [r2, #12]
2155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 5319              		.loc 1 2155 0
 5320 0026 E06C     		ldr	r0, [r4, #76]
 5321              	.LVL473:
 5322 0028 90F82530 		ldrb	r3, [r0, #37]	@ zero_extendqisi2
 5323 002c DBB2     		uxtb	r3, r3
 5324 002e 022B     		cmp	r3, #2
 5325 0030 17D0     		beq	.L466
 5326              	.L461:
 5327              	.LVL474:
2168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5328              		.loc 1 2168 0
 5329 0032 2268     		ldr	r2, [r4]
 5330 0034 5368     		ldr	r3, [r2, #4]
 5331 0036 23F01003 		bic	r3, r3, #16
 5332 003a 5360     		str	r3, [r2, #4]
2173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 5333              		.loc 1 2173 0
 5334 003c DDB9     		cbnz	r5, .L462
2175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 5335              		.loc 1 2175 0
 5336 003e 2046     		mov	r0, r4
 5337 0040 FFF7FEFF 		bl	ADC_Disable
 5338              	.LVL475:
 5339 0044 0546     		mov	r5, r0
 5340              	.LVL476:
 5341              	.L463:
2183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     {
 5342              		.loc 1 2183 0
 5343 0046 3DB9     		cbnz	r5, .L460
2186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 5344              		.loc 1 2186 0
 5345 0048 636D     		ldr	r3, [r4, #84]
 5346 004a 23F48853 		bic	r3, r3, #4352
 5347 004e 23F00103 		bic	r3, r3, #1
 5348 0052 43F00103 		orr	r3, r3, #1
 5349 0056 6365     		str	r3, [r4, #84]
 5350              	.LVL477:
 5351              	.L460:
2194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5352              		.loc 1 2194 0
 5353 0058 0023     		movs	r3, #0
 5354 005a 84F85030 		strb	r3, [r4, #80]
 5355              	.LVL478:
 5356              	.L459:
2198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5357              		.loc 1 2198 0
 5358 005e 2846     		mov	r0, r5
 5359 0060 38BD     		pop	{r3, r4, r5, pc}
 5360              	.LVL479:
 5361              	.L466:
2157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5362              		.loc 1 2157 0
 5363 0062 FFF7FEFF 		bl	HAL_DMA_Abort
 5364              	.LVL480:
2160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       {
 5365              		.loc 1 2160 0
 5366 0066 0546     		mov	r5, r0
 5367 0068 0028     		cmp	r0, #0
 5368 006a E2D0     		beq	.L461
2163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****       }
 5369              		.loc 1 2163 0
 5370 006c 636D     		ldr	r3, [r4, #84]
 5371 006e 43F04003 		orr	r3, r3, #64
 5372 0072 6365     		str	r3, [r4, #84]
 5373 0074 DDE7     		b	.L461
 5374              	.LVL481:
 5375              	.L462:
2179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c ****     }
 5376              		.loc 1 2179 0
 5377 0076 2046     		mov	r0, r4
 5378 0078 FFF7FEFF 		bl	ADC_Disable
 5379              	.LVL482:
 5380 007c E3E7     		b	.L463
 5381              	.LVL483:
 5382              	.L464:
2142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_adc.c **** 
 5383              		.loc 1 2142 0
 5384 007e 0225     		movs	r5, #2
 5385 0080 EDE7     		b	.L459
 5386              		.cfi_endproc
 5387              	.LFE328:
 5389              		.text
 5390              	.Letext0:
 5391              		.file 4 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 5392              		.file 5 "../system/include/cmsis/stm32l4xx/core_cm4.h"
 5393              		.file 6 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 5394              		.file 7 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 5395              		.file 8 "../system/include/cmsis/stm32l4xx/device/stm32l4xx.h"
 5396              		.file 9 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_def.h"
 5397              		.file 10 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_dma.h"
 5398              		.file 11 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_adc.h"
 5399              		.file 12 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_flash.h"
 5400              		.file 13 "../system/include/stm32l4-hal-driver/stm32l4xx_hal.h"
 5401              		.file 14 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_adc_ex.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_adc.c
     /tmp/ccNsqd4W.s:18     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccNsqd4W.s:25     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccNsqd4W.s:40     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccNsqd4W.s:47     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccNsqd4W.s:503    .text.HAL_ADC_Init:0000000000000200 $d
     /tmp/ccNsqd4W.s:514    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccNsqd4W.s:521    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccNsqd4W.s:535    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccNsqd4W.s:542    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccNsqd4W.s:769    .text.HAL_ADC_PollForConversion:000000000000010c $d
     /tmp/ccNsqd4W.s:775    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccNsqd4W.s:782    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccNsqd4W.s:944    .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccNsqd4W.s:951    .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccNsqd4W.s:969    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccNsqd4W.s:976    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccNsqd4W.s:990    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccNsqd4W.s:997    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccNsqd4W.s:1011   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccNsqd4W.s:1018   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccNsqd4W.s:1041   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccNsqd4W.s:1048   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccNsqd4W.s:1062   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccNsqd4W.s:1069   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccNsqd4W.s:1083   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccNsqd4W.s:1090   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccNsqd4W.s:1579   .text.HAL_ADC_IRQHandler:000000000000028c $d
     /tmp/ccNsqd4W.s:1585   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccNsqd4W.s:1592   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccNsqd4W.s:1698   .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccNsqd4W.s:1705   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccNsqd4W.s:1736   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccNsqd4W.s:1743   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccNsqd4W.s:1824   .text.HAL_ADC_ConfigChannel:000000000000004c $d
     /tmp/ccNsqd4W.s:1828   .text.HAL_ADC_ConfigChannel:0000000000000050 $t
     /tmp/ccNsqd4W.s:2652   .text.HAL_ADC_ConfigChannel:0000000000000390 $d
     /tmp/ccNsqd4W.s:2667   .text.HAL_ADC_ConfigChannel:00000000000003b0 $t
     /tmp/ccNsqd4W.s:2835   .text.HAL_ADC_ConfigChannel:000000000000048c $d
     /tmp/ccNsqd4W.s:2843   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccNsqd4W.s:2850   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccNsqd4W.s:3478   .text.HAL_ADC_AnalogWDGConfig:0000000000000324 $d
     /tmp/ccNsqd4W.s:3483   .text.HAL_ADC_AnalogWDGConfig:000000000000032c $t
     /tmp/ccNsqd4W.s:3529   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccNsqd4W.s:3536   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccNsqd4W.s:3553   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccNsqd4W.s:3560   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccNsqd4W.s:3577   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/ccNsqd4W.s:3584   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
     /tmp/ccNsqd4W.s:3842   .text.ADC_ConversionStop:0000000000000104 $d
     /tmp/ccNsqd4W.s:3847   .text.ADC_Enable:0000000000000000 $t
     /tmp/ccNsqd4W.s:3854   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/ccNsqd4W.s:3980   .text.ADC_Enable:0000000000000094 $d
     /tmp/ccNsqd4W.s:3985   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccNsqd4W.s:3992   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccNsqd4W.s:4175   .text.HAL_ADC_Start:00000000000000f0 $d
     /tmp/ccNsqd4W.s:4181   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccNsqd4W.s:4188   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccNsqd4W.s:4460   .text.HAL_ADC_Start_IT:0000000000000184 $d
     /tmp/ccNsqd4W.s:4466   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccNsqd4W.s:4473   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccNsqd4W.s:4664   .text.HAL_ADC_Start_DMA:00000000000000f4 $d
     /tmp/ccNsqd4W.s:4673   .text.ADC_Disable:0000000000000000 $t
     /tmp/ccNsqd4W.s:4680   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/ccNsqd4W.s:4818   .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccNsqd4W.s:4825   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccNsqd4W.s:5112   .text.HAL_ADC_DeInit:00000000000001ac $d
     /tmp/ccNsqd4W.s:5124   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccNsqd4W.s:5131   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccNsqd4W.s:5199   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccNsqd4W.s:5206   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccNsqd4W.s:5279   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccNsqd4W.s:5286   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.stm32l4xx_hal_conf.h.24.9ebdf529a64add7ef5197540a829be93
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.b6144e50d34fc998dd4c2cfb6387cf91
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.c14bec61d389910444dd6f90923a87b3
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.stm32l4xx_hal_def.h.58.ba9880fce6c06e05c42ff3652190ba19
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc.h.158.28a9a8aed9528254d5d00c542977dfd6
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc_ex.h.22.da7044b74af98b061fec57b6c981623c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio.h.22.cdd02b3dd2d28ab2a58b80abaa62239c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio_ex.h.22.e3066224621c54896e68c044cff2946f
                           .group:0000000000000000 wm4.stm32l4xx_hal_dma.h.22.13f7e03251508cf372ae373347b36e9b
                           .group:0000000000000000 wm4.stm32l4xx_hal_cortex.h.22.cb70b059ea6d04d060ca379a6d57d1fd
                           .group:0000000000000000 wm4.stm32l4xx_ll_adc.h.22.1a01db9155ec232fb5933b76785afed0
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc.h.321.ee3f28f76fc70066e4cbbd758e576892
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc_ex.h.22.fb5e6d418a426c9b079c9adc15fee3b1
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc.h.22.e28f2dff7c14319a60cfaa8412b63a14
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc_ex.h.22.58aa3be0563eedff5893c4b663184cf2
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac.h.22.74749bf4f9405a5fbfaaf1cc4c06eba3
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac_ex.h.22.4e3cedba5893653c1d8ca689fa739e33
                           .group:0000000000000000 wm4.stm32l4xx_hal_exti.h.22.d0c18acb1f51146e775f234290c1ac27
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.22.80f6973ea14060a68f7ca21c1dd39289
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.847.7bdb45d9d57728034960e0aaf38df4fb
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.22.5cbc76724b1dba5416e985e397b92828
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c_ex.h.22.4c81bf9806badb3d50f1da26b08d305a
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.715.a3aff164d469153c75cf623f9ff49d7a
                           .group:0000000000000000 wm4.stm32l4xx_hal_iwdg.h.22.7e954cf06602114b3daf58f5ffbb9e50
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr.h.22.0049bff0a26f90119451fdfe5f426c51
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr_ex.h.22.3d1049b6827a186d471882b21e35998d
                           .group:0000000000000000 wm4.stm32l4xx_hal_rng.h.22.3da3130b715b6ad6f9d8d49653bdfddb
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.22.21d64301309237f9b9255a8c80902f7c
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc_ex.h.22.6c248c3dbae3d1f0fefc4b9faaa2cd0b
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.977.b3b3c98b50a30362b61b120ec4fce236
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim.h.22.6c7398a1c55179e1de4bfd7d5a7564ac
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim_ex.h.22.1a7b532f5010a085c12eee7e9c7b0c21
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart.h.22.5f632bd044c516c02fe0b49488f063f8
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart_ex.h.22.de11c23890d64b2968c97dd6f5dae21a
                           .group:0000000000000000 wm4.stm32l4xx_hal.h.76.993cab68f7f350dd05a21a919b3be96f

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
