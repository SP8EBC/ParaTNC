   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB366:
  26              		.file 1 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c"
   1:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
   2:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  10:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *
  12:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *
  13:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   @verbatim
  14:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****  ===============================================================================
  15:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****  ===============================================================================
  17:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   [..]
  18:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  20:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  24:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
  31:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  43:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  44:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  45:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  46:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  47:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  48:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  49:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  50:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  51:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  52:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  53:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  54:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  55:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  56:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  57:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  58:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  59:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  60:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  61:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  62:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  63:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  64:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  65:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  66:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
  67:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  68:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  69:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  70:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  71:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     ##### Callback registration #####
  72:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     ==================================
  73:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  74:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
  75:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  76:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  77:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  78:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
  79:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  80:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  81:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  82:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  83:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  84:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  85:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  86:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  87:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  88:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  89:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  90:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
  91:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  92:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  93:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
  94:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  95:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  96:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  97:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     and a pointer to the user callback function.
  98:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
  99:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
 100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
 101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     weak (surcharged) function.
 102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     and the Callback ID.
 104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     This function allows to reset following callbacks:
 105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
 118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
 122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     respectively @ref HAL_UART_RegisterRxEventCallback() , @ref HAL_UART_UnRegisterRxEventCallback(
 124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
 126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
 136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
 145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   @endverbatim
 151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   ******************************************************************************
 152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @attention
 153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *
 154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *
 157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *
 162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   ******************************************************************************
 163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @{
 170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @{
 175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @{
 183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
 189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
 197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @}
 208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
 213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @{
 219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @}
 247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @{
 253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *
 258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** @verbatim
 259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** ===============================================================================
 260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****  ===============================================================================
 262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
 263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) Word Length
 268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
 272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
 274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
 284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     are available in reference manual).
 288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** @endverbatim
 290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   following table.
 294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @{
 313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
 320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
 335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
 356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
 393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
 421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart             UART handle.
 461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
 466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
 507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart        UART handle.
 550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
 563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
 591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
 665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
 677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
 683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****    */
 692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
 698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****    */
 707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
 729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
 733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       default :
 807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       default :
 826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
 833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return status;
 842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
 863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
 866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       default :
 934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       default :
 953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
 960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return status;
 969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart     Uart handle
 975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
 977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
 978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Process locked */
 990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
 997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
1001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Release Lock */
1004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return status;
1007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart     Uart handle
1013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Process locked */
1020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
1027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
1031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Release Lock */
1034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return status;
1036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @}
1042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
1046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *
1047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** @verbatim
1048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****  ===============================================================================
1049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
1050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****  ===============================================================================
1051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
1053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
1055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            after finishing transfer.
1058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            using DMA mode.
1063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
1068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
1108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            in Interrupt mode reception .
1111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            user callback is executed.
1119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** @endverbatim
1124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @{
1125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
1171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
1174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
1176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
1177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
1188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pdata16bits++;
1191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
1193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pdata8bits++;
1196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
1198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
1203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_OK;
1209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
1211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
1236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
1257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
1261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
1266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
1269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
1271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
1272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
1277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
1284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pdata16bits++;
1287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
1289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pdata8bits++;
1292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
1294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_OK;
1300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
1302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
1333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
1347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
1357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
1364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
1374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
1378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
1380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
1382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_OK;
1391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
1393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
1424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if(READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
1427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
1430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return(UART_Start_Receive_IT(huart, pData, Size));
1434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
1436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         of u16 provided through pData.
1446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the DMA error callback */
1479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the DMA abort callback */
1482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Set error code to DMA */
1488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         return HAL_ERROR;
1496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_OK;
1508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
1510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
1519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         of u16 available through pData.
1522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (!(IS_LPUART_INSTANCE(huart->Instance)))
1543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Check that USART RTOEN bit is set */
1545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if(READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
1546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Enable the UART Receiver Timeout Interrupt */
1548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
1549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return(UART_Start_Receive_DMA(huart, pData, Size));
1553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
1555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
1592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
1624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
1656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
1661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
1680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
1685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
1692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                                    USART_CR1_TCIE));
1712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
1714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
1741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
1746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
1766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
1771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
1801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
1822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
1842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
1847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
1866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
1887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
1912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
1914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
1918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
1919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
1920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
1937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
1938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
1940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
1952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
1953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
1955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE |
1960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                                    USART_CR1_TXEIE_TXFNFIE));
1961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
1963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
1973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
1975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
1985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
1989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
1992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
1996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
1998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
1999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
2001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
2022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
2024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
2043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
2044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
2046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
2048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (abortcplt == 1U)
2054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Clear ISR function pointers */
2060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxISR = NULL;
2061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
2062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
2064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
2065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Discard the received data */
2078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
2082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
2096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
2111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
2115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
2142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0U;
2145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->TxISR = NULL;
2148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
2163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
2169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
2192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
2207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
2223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
2245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0U;
2248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Discard the received data */
2256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
2273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
2298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
2312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t errorcode;
2313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* If no error occurs */
2315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (errorflags == 0U)
2317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
2325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
2326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (huart->RxISR != NULL)
2329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxISR(huart);
2331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return;
2333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* If some errors occur */
2337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
2339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
2341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
2343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
2344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
2345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
2379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
2380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
2391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
2405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
2406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if (huart->RxISR != NULL)
2409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
2410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->RxISR(huart);
2411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
2412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           - Receiver Timeout error in Reception
2416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           - Overrun error in Reception
2417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           - any error occurs in DMA mode reception
2418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       */
2419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
2431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           {
2436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
2441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             {
2443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             }
2446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           }
2447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           else
2448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           {
2449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             /* Call user error callback */
2450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             /*Call registered error callback*/
2452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           }
2459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
2460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         else
2461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
2462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Call user error callback */
2463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /*Call registered error callback*/
2465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
2471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
2473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            Error is notified to user through user error callback */
2476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call registered error callback*/
2478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return;
2487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
2489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check current reception Mode :
2491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (  (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       &&((isrflags & USART_ISR_IDLE) != 0U)
2494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       &&((cr1its & USART_ISR_IDLE) != 0U))
2495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
2497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* DMA mode enabled */
2502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          (DMA cplt callback will be called).
2504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
2506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (  (nb_remaining_rx_data > 0U)
2507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           &&(nb_remaining_rx_data < huart->RxXferSize))
2508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Reception is not complete */
2510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
2511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_CLR(huart->hdmarx->Instance->CCR, DMA_CCR_CIRC))
2514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
2515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****              in the UART CR3 register */
2521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
2525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
2531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
2532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
2539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return;
2541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
2543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* DMA mode not enabled */
2545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
2548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (  (huart->RxXferCount > 0U)
2549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           &&(nb_rx_data > 0U) )
2550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
2551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
2554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) and RX FIFO 
2556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
2564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Clear RxISR function pointer */
2570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxISR = NULL;
2571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
2579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
2580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
2581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return;
2582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return;
2601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
2610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
2611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->TxISR != NULL)
2614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->TxISR(huart);
2616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return;
2618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return;
2625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return;
2639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
2648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return;
2652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****    */
2669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****    */
2684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****    */
2699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****    */
2714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  UART error callback.
2718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****    */
2729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****    */
2744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****    */
2759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****    */
2774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle
2779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *               reception buffer until which, data are available)
2781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UNUSED(Size);
2788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****    */
2792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @}
2796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
2800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *
2801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** @verbatim
2802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****  ===============================================================================
2803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****  ===============================================================================
2805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
2806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** @endverbatim
2820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @{
2821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
2845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Process Locked */
2853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_LOCK(huart);
2854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set the USART RTOEN bit */
2858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
2863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_OK;
2866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
2868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_BUSY;
2870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
2873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
2875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
2883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Process Locked */
2891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_LOCK(huart);
2892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
2901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_OK;
2904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
2906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
2907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_BUSY;
2908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
2909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
2911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
2912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
2913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
2914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
2921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
2941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
2961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
2971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
2988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
2989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
2990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
2991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status.
2994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
2995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
2997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
3001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
3002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
3004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
3005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
3011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
3016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
3018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
3020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the parameters */
3022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
3023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
3025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
3027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Send break characters */
3029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
3030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
3036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @}
3040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
3043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
3044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *
3045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** @verbatim
3046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   ==============================================================================
3047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
3048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   ==============================================================================
3049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     [..]
3050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
3051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
3052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
3053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** @endverbatim
3055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @{
3056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Return the UART handle state.
3060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
3061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
3062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL state
3063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
3065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t temp1;
3067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t temp2;
3068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
3069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
3070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
3072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
3076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
3077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
3078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval UART Error Code
3079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
3081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
3083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @}
3086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @}
3090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
3093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @{
3094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
3098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval none
3100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
3103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Init the UART Callback settings */
3105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
3106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
3107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
3108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
3109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
3110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
3111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
3112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
3113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
3114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
3116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
3117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
3119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
3125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
3127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
3129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t tmpreg;
3131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t brrtemp;
3132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
3133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t usartdiv;
3134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
3135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
3137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t pclk;
3139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the parameters */
3141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
3143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
3146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
3148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
3151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
3156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
3157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
3159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
3163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
3164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
3165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
3166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
3167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
3168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
3169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
3170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
3173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * to huart->Init.StopBits value */
3174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
3175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Configure
3178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
3179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
3180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
3181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
3182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
3183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
3185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
3187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
3189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
3192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Configure
3193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
3194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
3195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
3199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
3201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
3202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
3204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     switch (clocksource)
3205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       default:
3219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = 0U;
3220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* If proper clock source reported */
3225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
3226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Compute clock after Prescaler */
3229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
3230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
3233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
3234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
3235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
3237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
3238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
3239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
3240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
3241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescale
3242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
3243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
3244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
3245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
3246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         else
3247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
3248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
3249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
3250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
3251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                 (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
3252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* No Prescaler applicable */
3254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
3255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if ((pclk < (3U * huart->Init.BaudRate)) ||
3256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           (pclk > (4096U * huart->Init.BaudRate)))
3257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
3258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
3260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
3261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
3262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate));
3263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
3264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
3265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
3266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
3267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         else
3268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
3269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
3270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
3271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       } /* if ( (pclk < (3 * huart->Init.BaudRate) ) || (pclk > (4096 * huart->Init.BaudRate) )) */
3272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     } /* if (pclk != 0) */
3274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
3277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     switch (clocksource)
3279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       default:
3296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = 0U;
3297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
3303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
3306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
3308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
3311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
3312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
3314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
3315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
3316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
3317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
3319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
3322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     switch (clocksource)
3324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       default:
3341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pclk = 0U;
3342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
3344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (pclk != 0U)
3347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
3351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
3353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
3356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->Instance->BRR = usartdiv;
3357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
3358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
3359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
3360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
3362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Clear ISR function pointers */
3372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
3373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
3374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return ret;
3376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
3382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
3403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
3456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
3460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout management */
3465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
3466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
3490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
3497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
3502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Tickstart Tick start value
3505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
3507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
3512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
3515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
3519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****            interrupts for the interrupt process */
3521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
3534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
3535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
3538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
3540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****              interrupts for the interrupt process */
3545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TX
3547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
3550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
3554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           /* Process Unlocked */
3557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
3560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
3561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
3562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
3565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
3577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
3581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferSize  = Size;
3582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = Size;
3583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxISR       = NULL;
3584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Computation of UART mask to apply to RDR register */
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_MASK_COMPUTATION(huart);
3587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Configure Rx interrupt processing */
3596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
3597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT_FIFOEN;
3602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
3604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT_FIFOEN;
3606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
3609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
3611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
3613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
3615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
3617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
3620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
3622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
3624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
3627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
3630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Set the Rx ISR function pointer according to the data word length */
3633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxISR = UART_RxISR_16BIT;
3636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
3638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxISR = UART_RxISR_8BIT;
3640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
3645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
3646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
3648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval HAL status
3660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
3664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferSize = Size;
3665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
3672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
3673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
3675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
3676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
3678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
3679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
3681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
3682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Enable the DMA channel */
3684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPt
3685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Set error code to DMA */
3687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
3688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
3690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to ready */
3692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
3693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
3695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   in the UART CR3 register */
3707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return HAL_OK;
3710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
3717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
  27              		.loc 1 3719 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
3720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
3723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
3724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 3726 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 1368     		ldr	r3, [r2]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 1360     		str	r3, [r2]
3727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  38              		.loc 1 3730 0
  39 000a 2023     		movs	r3, #32
  40 000c 8367     		str	r3, [r0, #120]
3731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
  41              		.loc 1 3731 0
  42 000e 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE366:
  46              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	UART_EndRxTransfer:
  54              	.LFB367:
3732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
3738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
  55              		.loc 1 3740 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL1:
3741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  61              		.loc 1 3746 0
  62 0000 0268     		ldr	r2, [r0]
  63 0002 1368     		ldr	r3, [r2]
  64 0004 23F49073 		bic	r3, r3, #288
  65 0008 1360     		str	r3, [r2]
3747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  66              		.loc 1 3747 0
  67 000a 0268     		ldr	r2, [r0]
  68 000c 9368     		ldr	r3, [r2, #8]
  69 000e 23F00103 		bic	r3, r3, #1
  70 0012 9360     		str	r3, [r2, #8]
3748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
  71              		.loc 1 3751 0
  72 0014 036E     		ldr	r3, [r0, #96]
  73 0016 012B     		cmp	r3, #1
  74 0018 05D0     		beq	.L4
  75              	.L3:
3752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
3754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  76              		.loc 1 3757 0
  77 001a 2023     		movs	r3, #32
  78 001c C367     		str	r3, [r0, #124]
3758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
  79              		.loc 1 3758 0
  80 001e 0023     		movs	r3, #0
  81 0020 0366     		str	r3, [r0, #96]
3759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
  82              		.loc 1 3761 0
  83 0022 4366     		str	r3, [r0, #100]
3762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
  84              		.loc 1 3762 0
  85 0024 7047     		bx	lr
  86              	.L4:
3753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
  87              		.loc 1 3753 0
  88 0026 0268     		ldr	r2, [r0]
  89 0028 1368     		ldr	r3, [r2]
  90 002a 23F01003 		bic	r3, r3, #16
  91 002e 1360     		str	r3, [r2]
  92 0030 F3E7     		b	.L3
  93              		.cfi_endproc
  94              	.LFE367:
  96              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu fpv4-sp-d16
 103              	UART_TxISR_8BIT:
 104              	.LFB378:
3763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
3769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
3787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
3788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
3803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
3821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
3846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check current reception Mode :
3850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
3859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
3862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
3878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check current reception Mode :
3884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize/2U);
3890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize/2U);
3893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
3896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
3912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
3952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
3963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
3967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
3969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
3975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
3976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
3978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
3985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
3987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return;
3988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
3989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
3990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
3998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
4000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
4003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
4004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
4005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
4006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
4007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
4010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
4011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
4012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
4017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
4018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
4020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
4021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
4023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
4026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
4027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
4028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
4029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
4030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
4031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
4032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
4033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
4034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
4035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
4036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
4038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
4040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
4041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
4042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
4043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
4044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       return;
4045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
4046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
4047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
4049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
4050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
4051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
4053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
4054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
4057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Discard the received data */
4059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
4062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
4063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
4064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
4069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
4070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
4072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
4073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
4075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
4078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
4079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
4080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
4081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
4082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
4083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
4084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
4085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
4086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
4087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
4088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
4090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
4093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
4094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
4095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
4096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
4097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
4100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
4101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
4105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
4106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
4108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
4109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
4111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
4113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
4114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
4115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
4116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
4117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
4118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
4119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
4120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
4121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
4122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
4123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
4125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
4127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
4128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Discard the received data */
4130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
4131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
4133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
4134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
4137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
4139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
4140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
4142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
4143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
4145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
4147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
4148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
4152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
4153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
4154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 105              		.loc 1 4154 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.LVL2:
4155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 111              		.loc 1 4156 0
 112 0000 836F     		ldr	r3, [r0, #120]
 113 0002 212B     		cmp	r3, #33
 114 0004 00D0     		beq	.L8
 115              	.L5:
4157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
4158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
4159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
4160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
4163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
4165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
4169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
4170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
4171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
4172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
4173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
4174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
4175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
4176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
4177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 116              		.loc 1 4177 0
 117 0006 7047     		bx	lr
 118              	.L8:
4158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 119              		.loc 1 4158 0
 120 0008 B0F85230 		ldrh	r3, [r0, #82]
 121 000c 9BB2     		uxth	r3, r3
 122 000e 6BB1     		cbz	r3, .L9
4172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 123              		.loc 1 4172 0
 124 0010 C26C     		ldr	r2, [r0, #76]
 125 0012 0368     		ldr	r3, [r0]
 126 0014 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 127 0016 1A85     		strh	r2, [r3, #40]	@ movhi
4173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 128              		.loc 1 4173 0
 129 0018 C36C     		ldr	r3, [r0, #76]
 130 001a 0133     		adds	r3, r3, #1
 131 001c C364     		str	r3, [r0, #76]
4174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 132              		.loc 1 4174 0
 133 001e B0F85230 		ldrh	r3, [r0, #82]
 134 0022 013B     		subs	r3, r3, #1
 135 0024 9BB2     		uxth	r3, r3
 136 0026 A0F85230 		strh	r3, [r0, #82]	@ movhi
 137              		.loc 1 4177 0
 138 002a ECE7     		b	.L5
 139              	.L9:
4164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 140              		.loc 1 4164 0
 141 002c 0268     		ldr	r2, [r0]
 142 002e 1368     		ldr	r3, [r2]
 143 0030 23F08003 		bic	r3, r3, #128
 144 0034 1360     		str	r3, [r2]
4168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 145              		.loc 1 4168 0
 146 0036 0268     		ldr	r2, [r0]
 147 0038 1368     		ldr	r3, [r2]
 148 003a 43F04003 		orr	r3, r3, #64
 149 003e 1360     		str	r3, [r2]
 150 0040 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE378:
 154              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv4-sp-d16
 161              	UART_TxISR_16BIT:
 162              	.LFB379:
4178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
4180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
4181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
4185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
4186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
4187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 163              		.loc 1 4187 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168              	.LVL3:
4188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
4189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 169              		.loc 1 4191 0
 170 0000 836F     		ldr	r3, [r0, #120]
 171 0002 212B     		cmp	r3, #33
 172 0004 00D0     		beq	.L13
 173              	.L10:
4192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
4193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
4194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
4195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
4196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
4198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
4200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
4203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
4204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
4205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     else
4206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
4207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
4208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
4209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
4210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
4211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
4212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
4213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 174              		.loc 1 4213 0
 175 0006 7047     		bx	lr
 176              	.L13:
4193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 177              		.loc 1 4193 0
 178 0008 B0F85230 		ldrh	r3, [r0, #82]
 179 000c 9BB2     		uxth	r3, r3
 180 000e 7BB1     		cbz	r3, .L14
4207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 181              		.loc 1 4207 0
 182 0010 C36C     		ldr	r3, [r0, #76]
 183              	.LVL4:
4208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 184              		.loc 1 4208 0
 185 0012 1B88     		ldrh	r3, [r3]
 186              	.LVL5:
 187 0014 0268     		ldr	r2, [r0]
 188 0016 C3F30803 		ubfx	r3, r3, #0, #9
 189 001a 1385     		strh	r3, [r2, #40]	@ movhi
 190              	.LVL6:
4209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 191              		.loc 1 4209 0
 192 001c C36C     		ldr	r3, [r0, #76]
 193 001e 0233     		adds	r3, r3, #2
 194 0020 C364     		str	r3, [r0, #76]
4210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 195              		.loc 1 4210 0
 196 0022 B0F85230 		ldrh	r3, [r0, #82]
 197 0026 013B     		subs	r3, r3, #1
 198 0028 9BB2     		uxth	r3, r3
 199 002a A0F85230 		strh	r3, [r0, #82]	@ movhi
 200              		.loc 1 4213 0
 201 002e EAE7     		b	.L10
 202              	.L14:
4199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 203              		.loc 1 4199 0
 204 0030 0268     		ldr	r2, [r0]
 205 0032 1368     		ldr	r3, [r2]
 206 0034 23F08003 		bic	r3, r3, #128
 207 0038 1360     		str	r3, [r2]
4203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 208              		.loc 1 4203 0
 209 003a 0268     		ldr	r2, [r0]
 210 003c 1368     		ldr	r3, [r2]
 211 003e 43F04003 		orr	r3, r3, #64
 212 0042 1360     		str	r3, [r2]
 213 0044 7047     		bx	lr
 214              		.cfi_endproc
 215              	.LFE379:
 217              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 218              		.align	1
 219              		.weak	HAL_UART_MspInit
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv4-sp-d16
 225              	HAL_UART_MspInit:
 226              	.LFB322:
 685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 227              		.loc 1 685 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232              	.LVL7:
 692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 233              		.loc 1 692 0
 234 0000 7047     		bx	lr
 235              		.cfi_endproc
 236              	.LFE322:
 238              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 239              		.align	1
 240              		.weak	HAL_UART_MspDeInit
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 244              		.fpu fpv4-sp-d16
 246              	HAL_UART_MspDeInit:
 247              	.LFB323:
 700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 248              		.loc 1 700 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253              	.LVL8:
 707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 254              		.loc 1 707 0
 255 0000 7047     		bx	lr
 256              		.cfi_endproc
 257              	.LFE323:
 259              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 260              		.align	1
 261              		.global	HAL_UART_DeInit
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	HAL_UART_DeInit:
 268              	.LFB321:
 639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 269              		.loc 1 639 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              	.LVL9:
 641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 274              		.loc 1 641 0
 275 0000 D0B1     		cbz	r0, .L19
 639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 276              		.loc 1 639 0
 277 0002 38B5     		push	{r3, r4, r5, lr}
 278              		.cfi_def_cfa_offset 16
 279              		.cfi_offset 3, -16
 280              		.cfi_offset 4, -12
 281              		.cfi_offset 5, -8
 282              		.cfi_offset 14, -4
 283 0004 0446     		mov	r4, r0
 649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 284              		.loc 1 649 0
 285 0006 2423     		movs	r3, #36
 286 0008 8367     		str	r3, [r0, #120]
 651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 287              		.loc 1 651 0
 288 000a 0268     		ldr	r2, [r0]
 289 000c 1368     		ldr	r3, [r2]
 290 000e 23F00103 		bic	r3, r3, #1
 291 0012 1360     		str	r3, [r2]
 653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 292              		.loc 1 653 0
 293 0014 0368     		ldr	r3, [r0]
 294 0016 0025     		movs	r5, #0
 295 0018 1D60     		str	r5, [r3]
 654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 296              		.loc 1 654 0
 297 001a 0368     		ldr	r3, [r0]
 298 001c 5D60     		str	r5, [r3, #4]
 655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 299              		.loc 1 655 0
 300 001e 0368     		ldr	r3, [r0]
 301 0020 9D60     		str	r5, [r3, #8]
 666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 302              		.loc 1 666 0
 303 0022 FFF7FEFF 		bl	HAL_UART_MspDeInit
 304              	.LVL10:
 669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 305              		.loc 1 669 0
 306 0026 C4F88050 		str	r5, [r4, #128]
 670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 307              		.loc 1 670 0
 308 002a A567     		str	r5, [r4, #120]
 671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 309              		.loc 1 671 0
 310 002c E567     		str	r5, [r4, #124]
 672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 311              		.loc 1 672 0
 312 002e 2566     		str	r5, [r4, #96]
 674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 313              		.loc 1 674 0
 314 0030 84F87450 		strb	r5, [r4, #116]
 676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 315              		.loc 1 676 0
 316 0034 2846     		mov	r0, r5
 677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 317              		.loc 1 677 0
 318 0036 38BD     		pop	{r3, r4, r5, pc}
 319              	.LVL11:
 320              	.L19:
 321              		.cfi_def_cfa_offset 0
 322              		.cfi_restore 3
 323              		.cfi_restore 4
 324              		.cfi_restore 5
 325              		.cfi_restore 14
 643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 326              		.loc 1 643 0
 327 0038 0120     		movs	r0, #1
 328              	.LVL12:
 677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 329              		.loc 1 677 0
 330 003a 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE321:
 334              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 335              		.align	1
 336              		.global	HAL_UART_Transmit_IT
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv4-sp-d16
 342              	HAL_UART_Transmit_IT:
 343              	.LFB326:
1318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 344              		.loc 1 1318 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349              	.LVL13:
1320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 350              		.loc 1 1320 0
 351 0000 836F     		ldr	r3, [r0, #120]
 352 0002 202B     		cmp	r3, #32
 353 0004 29D1     		bne	.L28
1322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 354              		.loc 1 1322 0
 355 0006 51B3     		cbz	r1, .L29
1322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 356              		.loc 1 1322 0 is_stmt 0 discriminator 1
 357 0008 5AB3     		cbz	r2, .L30
1327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 358              		.loc 1 1327 0 is_stmt 1
 359 000a 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 360 000e 012B     		cmp	r3, #1
 361 0010 29D0     		beq	.L31
1327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 362              		.loc 1 1327 0 is_stmt 0 discriminator 2
 363 0012 0123     		movs	r3, #1
 364 0014 80F87430 		strb	r3, [r0, #116]
1329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 365              		.loc 1 1329 0 is_stmt 1 discriminator 2
 366 0018 C164     		str	r1, [r0, #76]
1330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 367              		.loc 1 1330 0 discriminator 2
 368 001a A0F85020 		strh	r2, [r0, #80]	@ movhi
1331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 369              		.loc 1 1331 0 discriminator 2
 370 001e A0F85220 		strh	r2, [r0, #82]	@ movhi
1332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 371              		.loc 1 1332 0 discriminator 2
 372 0022 0023     		movs	r3, #0
 373 0024 8366     		str	r3, [r0, #104]
1334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 374              		.loc 1 1334 0 discriminator 2
 375 0026 C0F88030 		str	r3, [r0, #128]
1335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 376              		.loc 1 1335 0 discriminator 2
 377 002a 2123     		movs	r3, #33
 378 002c 8367     		str	r3, [r0, #120]
1375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 379              		.loc 1 1375 0 discriminator 2
 380 002e 8368     		ldr	r3, [r0, #8]
 381 0030 B3F5805F 		cmp	r3, #4096
 382 0034 0BD0     		beq	.L32
 383              	.L26:
1381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 384              		.loc 1 1381 0
 385 0036 0D4B     		ldr	r3, .L33
 386 0038 8366     		str	r3, [r0, #104]
 387              	.L27:
1384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 388              		.loc 1 1384 0
 389 003a 0023     		movs	r3, #0
 390 003c 80F87430 		strb	r3, [r0, #116]
1387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 391              		.loc 1 1387 0
 392 0040 0168     		ldr	r1, [r0]
 393              	.LVL14:
 394 0042 0A68     		ldr	r2, [r1]
 395              	.LVL15:
 396 0044 42F08002 		orr	r2, r2, #128
 397 0048 0A60     		str	r2, [r1]
 398              	.LVL16:
1390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 399              		.loc 1 1390 0
 400 004a 1846     		mov	r0, r3
 401              	.LVL17:
 402 004c 7047     		bx	lr
 403              	.LVL18:
 404              	.L32:
1375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 405              		.loc 1 1375 0 discriminator 1
 406 004e 0369     		ldr	r3, [r0, #16]
 407 0050 002B     		cmp	r3, #0
 408 0052 F0D1     		bne	.L26
1377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 409              		.loc 1 1377 0
 410 0054 064B     		ldr	r3, .L33+4
 411 0056 8366     		str	r3, [r0, #104]
 412 0058 EFE7     		b	.L27
 413              	.L28:
1394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 414              		.loc 1 1394 0
 415 005a 0220     		movs	r0, #2
 416              	.LVL19:
 417 005c 7047     		bx	lr
 418              	.LVL20:
 419              	.L29:
1324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 420              		.loc 1 1324 0
 421 005e 0120     		movs	r0, #1
 422              	.LVL21:
 423 0060 7047     		bx	lr
 424              	.LVL22:
 425              	.L30:
 426 0062 0120     		movs	r0, #1
 427              	.LVL23:
 428 0064 7047     		bx	lr
 429              	.LVL24:
 430              	.L31:
1327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 431              		.loc 1 1327 0
 432 0066 0220     		movs	r0, #2
 433              	.LVL25:
1396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 434              		.loc 1 1396 0
 435 0068 7047     		bx	lr
 436              	.L34:
 437 006a 00BF     		.align	2
 438              	.L33:
 439 006c 00000000 		.word	UART_TxISR_8BIT
 440 0070 00000000 		.word	UART_TxISR_16BIT
 441              		.cfi_endproc
 442              	.LFE326:
 444              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 445              		.align	1
 446              		.global	HAL_UART_Transmit_DMA
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv4-sp-d16
 452              	HAL_UART_Transmit_DMA:
 453              	.LFB328:
1452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 454              		.loc 1 1452 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              	.LVL26:
 459 0000 10B5     		push	{r4, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 4, -8
 462              		.cfi_offset 14, -4
1454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 463              		.loc 1 1454 0
 464 0002 846F     		ldr	r4, [r0, #120]
 465 0004 202C     		cmp	r4, #32
 466 0006 40D1     		bne	.L38
1456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 467              		.loc 1 1456 0
 468 0008 0029     		cmp	r1, #0
 469 000a 40D0     		beq	.L39
1456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 470              		.loc 1 1456 0 is_stmt 0 discriminator 1
 471 000c 002A     		cmp	r2, #0
 472 000e 40D0     		beq	.L40
1461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 473              		.loc 1 1461 0 is_stmt 1
 474 0010 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 475 0014 012B     		cmp	r3, #1
 476 0016 3ED0     		beq	.L41
 477 0018 1346     		mov	r3, r2
 478 001a 0446     		mov	r4, r0
1461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 479              		.loc 1 1461 0 is_stmt 0 discriminator 2
 480 001c 0122     		movs	r2, #1
 481              	.LVL27:
 482 001e 80F87420 		strb	r2, [r0, #116]
1463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 483              		.loc 1 1463 0 is_stmt 1 discriminator 2
 484 0022 C164     		str	r1, [r0, #76]
1464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 485              		.loc 1 1464 0 discriminator 2
 486 0024 A0F85030 		strh	r3, [r0, #80]	@ movhi
1465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 487              		.loc 1 1465 0 discriminator 2
 488 0028 A0F85230 		strh	r3, [r0, #82]	@ movhi
1467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 489              		.loc 1 1467 0 discriminator 2
 490 002c 0022     		movs	r2, #0
 491 002e C0F88020 		str	r2, [r0, #128]
1468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 492              		.loc 1 1468 0 discriminator 2
 493 0032 2122     		movs	r2, #33
 494 0034 8267     		str	r2, [r0, #120]
1470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 495              		.loc 1 1470 0 discriminator 2
 496 0036 C26E     		ldr	r2, [r0, #108]
 497 0038 8AB1     		cbz	r2, .L37
1473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 498              		.loc 1 1473 0
 499 003a 1849     		ldr	r1, .L44
 500              	.LVL28:
 501 003c D162     		str	r1, [r2, #44]
 502              	.LVL29:
1476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 503              		.loc 1 1476 0
 504 003e C26E     		ldr	r2, [r0, #108]
 505 0040 1749     		ldr	r1, .L44+4
 506 0042 1163     		str	r1, [r2, #48]
1479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 507              		.loc 1 1479 0
 508 0044 C26E     		ldr	r2, [r0, #108]
 509 0046 1749     		ldr	r1, .L44+8
 510 0048 5163     		str	r1, [r2, #52]
1482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 511              		.loc 1 1482 0
 512 004a C26E     		ldr	r2, [r0, #108]
 513 004c 0021     		movs	r1, #0
 514 004e 9163     		str	r1, [r2, #56]
1485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 515              		.loc 1 1485 0
 516 0050 0268     		ldr	r2, [r0]
 517 0052 2832     		adds	r2, r2, #40
 518 0054 C16C     		ldr	r1, [r0, #76]
 519 0056 C06E     		ldr	r0, [r0, #108]
 520              	.LVL30:
 521 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 522              	.LVL31:
 523 005c 58B9     		cbnz	r0, .L43
 524              	.L37:
1499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 525              		.loc 1 1499 0
 526 005e 2368     		ldr	r3, [r4]
 527 0060 4022     		movs	r2, #64
 528 0062 1A62     		str	r2, [r3, #32]
1501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 529              		.loc 1 1501 0
 530 0064 0020     		movs	r0, #0
 531 0066 84F87400 		strb	r0, [r4, #116]
1505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 532              		.loc 1 1505 0
 533 006a 2268     		ldr	r2, [r4]
 534 006c 9368     		ldr	r3, [r2, #8]
 535 006e 43F08003 		orr	r3, r3, #128
 536 0072 9360     		str	r3, [r2, #8]
1507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 537              		.loc 1 1507 0
 538 0074 0AE0     		b	.L36
 539              	.L43:
1488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 540              		.loc 1 1488 0
 541 0076 1023     		movs	r3, #16
 542 0078 C4F88030 		str	r3, [r4, #128]
1490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 543              		.loc 1 1490 0
 544 007c 0023     		movs	r3, #0
 545 007e 84F87430 		strb	r3, [r4, #116]
1493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 546              		.loc 1 1493 0
 547 0082 2023     		movs	r3, #32
 548 0084 A367     		str	r3, [r4, #120]
1495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 549              		.loc 1 1495 0
 550 0086 0120     		movs	r0, #1
 551 0088 00E0     		b	.L36
 552              	.LVL32:
 553              	.L38:
1511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 554              		.loc 1 1511 0
 555 008a 0220     		movs	r0, #2
 556              	.LVL33:
 557              	.L36:
1513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 558              		.loc 1 1513 0
 559 008c 10BD     		pop	{r4, pc}
 560              	.LVL34:
 561              	.L39:
1458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 562              		.loc 1 1458 0
 563 008e 0120     		movs	r0, #1
 564              	.LVL35:
 565 0090 FCE7     		b	.L36
 566              	.LVL36:
 567              	.L40:
 568 0092 0120     		movs	r0, #1
 569              	.LVL37:
 570 0094 FAE7     		b	.L36
 571              	.LVL38:
 572              	.L41:
1461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 573              		.loc 1 1461 0
 574 0096 0220     		movs	r0, #2
 575              	.LVL39:
 576 0098 F8E7     		b	.L36
 577              	.L45:
 578 009a 00BF     		.align	2
 579              	.L44:
 580 009c 00000000 		.word	UART_DMATransmitCplt
 581 00a0 00000000 		.word	UART_DMATxHalfCplt
 582 00a4 00000000 		.word	UART_DMAError
 583              		.cfi_endproc
 584              	.LFE328:
 586              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 587              		.align	1
 588              		.global	HAL_UART_DMAPause
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu fpv4-sp-d16
 594              	HAL_UART_DMAPause:
 595              	.LFB330:
1566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 596              		.loc 1 1566 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LVL40:
 602 0000 10B4     		push	{r4}
 603              		.cfi_def_cfa_offset 4
 604              		.cfi_offset 4, -4
1567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 605              		.loc 1 1567 0
 606 0002 846F     		ldr	r4, [r0, #120]
 607              	.LVL41:
1568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 608              		.loc 1 1568 0
 609 0004 C16F     		ldr	r1, [r0, #124]
 610              	.LVL42:
1570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 611              		.loc 1 1570 0
 612 0006 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 613 000a 012B     		cmp	r3, #1
 614 000c 2BD0     		beq	.L50
1570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 615              		.loc 1 1570 0 is_stmt 0 discriminator 2
 616 000e 0123     		movs	r3, #1
 617 0010 80F87430 		strb	r3, [r0, #116]
1572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 618              		.loc 1 1572 0 is_stmt 1 discriminator 2
 619 0014 0368     		ldr	r3, [r0]
 620 0016 9A68     		ldr	r2, [r3, #8]
 621 0018 12F0800F 		tst	r2, #128
 622 001c 01D0     		beq	.L48
1572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 623              		.loc 1 1572 0 is_stmt 0 discriminator 1
 624 001e 212C     		cmp	r4, #33
 625 0020 0DD0     		beq	.L52
 626              	.L48:
1578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 627              		.loc 1 1578 0 is_stmt 1
 628 0022 0368     		ldr	r3, [r0]
 629 0024 9A68     		ldr	r2, [r3, #8]
 630 0026 12F0400F 		tst	r2, #64
 631 002a 01D0     		beq	.L49
1578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 632              		.loc 1 1578 0 is_stmt 0 discriminator 1
 633 002c 2229     		cmp	r1, #34
 634 002e 0BD0     		beq	.L53
 635              	.L49:
1589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 636              		.loc 1 1589 0 is_stmt 1
 637 0030 0023     		movs	r3, #0
 638 0032 80F87430 		strb	r3, [r0, #116]
1591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 639              		.loc 1 1591 0
 640 0036 1846     		mov	r0, r3
 641              	.LVL43:
 642              	.L47:
1592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 643              		.loc 1 1592 0
 644 0038 5DF8044B 		ldr	r4, [sp], #4
 645              		.cfi_remember_state
 646              		.cfi_restore 4
 647              		.cfi_def_cfa_offset 0
 648              	.LVL44:
 649 003c 7047     		bx	lr
 650              	.LVL45:
 651              	.L52:
 652              		.cfi_restore_state
1576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 653              		.loc 1 1576 0
 654 003e 9A68     		ldr	r2, [r3, #8]
 655 0040 22F08002 		bic	r2, r2, #128
 656 0044 9A60     		str	r2, [r3, #8]
 657 0046 ECE7     		b	.L48
 658              	.L53:
1582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 659              		.loc 1 1582 0
 660 0048 1A68     		ldr	r2, [r3]
 661 004a 22F48072 		bic	r2, r2, #256
 662 004e 1A60     		str	r2, [r3]
1583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 663              		.loc 1 1583 0
 664 0050 0268     		ldr	r2, [r0]
 665 0052 9368     		ldr	r3, [r2, #8]
 666 0054 23F00103 		bic	r3, r3, #1
 667 0058 9360     		str	r3, [r2, #8]
1586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 668              		.loc 1 1586 0
 669 005a 0268     		ldr	r2, [r0]
 670 005c 9368     		ldr	r3, [r2, #8]
 671 005e 23F04003 		bic	r3, r3, #64
 672 0062 9360     		str	r3, [r2, #8]
 673 0064 E4E7     		b	.L49
 674              	.L50:
1570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 675              		.loc 1 1570 0
 676 0066 0220     		movs	r0, #2
 677              	.LVL46:
 678 0068 E6E7     		b	.L47
 679              		.cfi_endproc
 680              	.LFE330:
 682              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 683              		.align	1
 684              		.global	HAL_UART_DMAResume
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu fpv4-sp-d16
 690              	HAL_UART_DMAResume:
 691              	.LFB331:
1600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 692              		.loc 1 1600 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696              		@ link register save eliminated.
 697              	.LVL47:
1601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 698              		.loc 1 1601 0
 699 0000 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 700 0004 012B     		cmp	r3, #1
 701 0006 26D0     		beq	.L58
1601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 702              		.loc 1 1601 0 is_stmt 0 discriminator 2
 703 0008 0123     		movs	r3, #1
 704 000a 80F87430 		strb	r3, [r0, #116]
1603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 705              		.loc 1 1603 0 is_stmt 1 discriminator 2
 706 000e 836F     		ldr	r3, [r0, #120]
 707 0010 212B     		cmp	r3, #33
 708 0012 07D0     		beq	.L59
 709              	.L56:
1608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 710              		.loc 1 1608 0
 711 0014 C36F     		ldr	r3, [r0, #124]
 712 0016 222B     		cmp	r3, #34
 713 0018 0AD0     		beq	.L60
 714              	.L57:
1621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 715              		.loc 1 1621 0
 716 001a 0023     		movs	r3, #0
 717 001c 80F87430 		strb	r3, [r0, #116]
1623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 718              		.loc 1 1623 0
 719 0020 1846     		mov	r0, r3
 720              	.LVL48:
 721 0022 7047     		bx	lr
 722              	.LVL49:
 723              	.L59:
1606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 724              		.loc 1 1606 0
 725 0024 0268     		ldr	r2, [r0]
 726 0026 9368     		ldr	r3, [r2, #8]
 727 0028 43F08003 		orr	r3, r3, #128
 728 002c 9360     		str	r3, [r2, #8]
 729 002e F1E7     		b	.L56
 730              	.L60:
1611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 731              		.loc 1 1611 0
 732 0030 0368     		ldr	r3, [r0]
 733 0032 0822     		movs	r2, #8
 734 0034 1A62     		str	r2, [r3, #32]
1614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 735              		.loc 1 1614 0
 736 0036 0268     		ldr	r2, [r0]
 737 0038 1368     		ldr	r3, [r2]
 738 003a 43F48073 		orr	r3, r3, #256
 739 003e 1360     		str	r3, [r2]
1615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 740              		.loc 1 1615 0
 741 0040 0268     		ldr	r2, [r0]
 742 0042 9368     		ldr	r3, [r2, #8]
 743 0044 43F00103 		orr	r3, r3, #1
 744 0048 9360     		str	r3, [r2, #8]
1618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 745              		.loc 1 1618 0
 746 004a 0268     		ldr	r2, [r0]
 747 004c 9368     		ldr	r3, [r2, #8]
 748 004e 43F04003 		orr	r3, r3, #64
 749 0052 9360     		str	r3, [r2, #8]
 750 0054 E1E7     		b	.L57
 751              	.L58:
1601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 752              		.loc 1 1601 0
 753 0056 0220     		movs	r0, #2
 754              	.LVL50:
1624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 755              		.loc 1 1624 0
 756 0058 7047     		bx	lr
 757              		.cfi_endproc
 758              	.LFE331:
 760              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 761              		.align	1
 762              		.global	HAL_UART_DMAStop
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 766              		.fpu fpv4-sp-d16
 768              	HAL_UART_DMAStop:
 769              	.LFB332:
1632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 770              		.loc 1 1632 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              	.LVL51:
 775 0000 38B5     		push	{r3, r4, r5, lr}
 776              		.cfi_def_cfa_offset 16
 777              		.cfi_offset 3, -16
 778              		.cfi_offset 4, -12
 779              		.cfi_offset 5, -8
 780              		.cfi_offset 14, -4
 781 0002 0446     		mov	r4, r0
1640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 782              		.loc 1 1640 0
 783 0004 816F     		ldr	r1, [r0, #120]
 784              	.LVL52:
1641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 785              		.loc 1 1641 0
 786 0006 C56F     		ldr	r5, [r0, #124]
 787              	.LVL53:
1644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 788              		.loc 1 1644 0
 789 0008 0368     		ldr	r3, [r0]
 790 000a 9A68     		ldr	r2, [r3, #8]
 791 000c 12F0800F 		tst	r2, #128
 792 0010 01D0     		beq	.L62
1644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 793              		.loc 1 1644 0 is_stmt 0 discriminator 1
 794 0012 2129     		cmp	r1, #33
 795 0014 08D0     		beq	.L69
 796              	.LVL54:
 797              	.L62:
1668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 798              		.loc 1 1668 0 is_stmt 1
 799 0016 2368     		ldr	r3, [r4]
 800 0018 9A68     		ldr	r2, [r3, #8]
 801 001a 12F0400F 		tst	r2, #64
 802 001e 32D0     		beq	.L66
1668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 803              		.loc 1 1668 0 is_stmt 0 discriminator 1
 804 0020 222D     		cmp	r5, #34
 805 0022 18D0     		beq	.L70
1691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 806              		.loc 1 1691 0 is_stmt 1
 807 0024 0020     		movs	r0, #0
 808 0026 2FE0     		b	.L64
 809              	.LVL55:
 810              	.L69:
1647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 811              		.loc 1 1647 0
 812 0028 9A68     		ldr	r2, [r3, #8]
 813 002a 22F08002 		bic	r2, r2, #128
 814 002e 9A60     		str	r2, [r3, #8]
1650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 815              		.loc 1 1650 0
 816 0030 C06E     		ldr	r0, [r0, #108]
 817              	.LVL56:
 818 0032 10B1     		cbz	r0, .L63
1652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 819              		.loc 1 1652 0
 820 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 821              	.LVL57:
 822 0038 18B9     		cbnz	r0, .L71
 823              	.L63:
1664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 824              		.loc 1 1664 0
 825 003a 2046     		mov	r0, r4
 826 003c FFF7FEFF 		bl	UART_EndTxTransfer
 827              	.LVL58:
 828 0040 E9E7     		b	.L62
 829              	.L71:
1654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
 830              		.loc 1 1654 0
 831 0042 E06E     		ldr	r0, [r4, #108]
 832 0044 FFF7FEFF 		bl	HAL_DMA_GetError
 833              	.LVL59:
 834 0048 2028     		cmp	r0, #32
 835 004a F6D1     		bne	.L63
1657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 836              		.loc 1 1657 0
 837 004c 1023     		movs	r3, #16
 838 004e C4F88030 		str	r3, [r4, #128]
1659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
 839              		.loc 1 1659 0
 840 0052 0320     		movs	r0, #3
 841 0054 18E0     		b	.L64
 842              	.L70:
1671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 843              		.loc 1 1671 0
 844 0056 9A68     		ldr	r2, [r3, #8]
 845 0058 22F04002 		bic	r2, r2, #64
 846 005c 9A60     		str	r2, [r3, #8]
1674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 847              		.loc 1 1674 0
 848 005e 206F     		ldr	r0, [r4, #112]
 849 0060 10B1     		cbz	r0, .L65
1676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 850              		.loc 1 1676 0
 851 0062 FFF7FEFF 		bl	HAL_DMA_Abort
 852              	.LVL60:
 853 0066 20B9     		cbnz	r0, .L72
 854              	.L65:
1688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 855              		.loc 1 1688 0
 856 0068 2046     		mov	r0, r4
 857 006a FFF7FEFF 		bl	UART_EndRxTransfer
 858              	.LVL61:
1691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 859              		.loc 1 1691 0
 860 006e 0020     		movs	r0, #0
 861 0070 0AE0     		b	.L64
 862              	.L72:
1678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
 863              		.loc 1 1678 0
 864 0072 206F     		ldr	r0, [r4, #112]
 865 0074 FFF7FEFF 		bl	HAL_DMA_GetError
 866              	.LVL62:
 867 0078 2028     		cmp	r0, #32
 868 007a F5D1     		bne	.L65
1681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 869              		.loc 1 1681 0
 870 007c 1023     		movs	r3, #16
 871 007e C4F88030 		str	r3, [r4, #128]
1683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
 872              		.loc 1 1683 0
 873 0082 0320     		movs	r0, #3
 874 0084 00E0     		b	.L64
 875              	.L66:
1691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 876              		.loc 1 1691 0
 877 0086 0020     		movs	r0, #0
 878              	.L64:
1692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 879              		.loc 1 1692 0
 880 0088 38BD     		pop	{r3, r4, r5, pc}
 881              		.cfi_endproc
 882              	.LFE332:
 884              		.section	.text.HAL_UART_Abort,"ax",%progbits
 885              		.align	1
 886              		.global	HAL_UART_Abort
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 890              		.fpu fpv4-sp-d16
 892              	HAL_UART_Abort:
 893              	.LFB333:
1707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 894              		.loc 1 1707 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              	.LVL63:
 899 0000 10B5     		push	{r4, lr}
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 4, -8
 902              		.cfi_offset 14, -4
 903 0002 0446     		mov	r4, r0
1715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 904              		.loc 1 1715 0
 905 0004 0268     		ldr	r2, [r0]
 906 0006 1368     		ldr	r3, [r2]
 907 0008 23F4F073 		bic	r3, r3, #480
 908 000c 1360     		str	r3, [r2]
1716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 909              		.loc 1 1716 0
 910 000e 0268     		ldr	r2, [r0]
 911 0010 9368     		ldr	r3, [r2, #8]
 912 0012 23F00103 		bic	r3, r3, #1
 913 0016 9360     		str	r3, [r2, #8]
1720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 914              		.loc 1 1720 0
 915 0018 036E     		ldr	r3, [r0, #96]
 916 001a 012B     		cmp	r3, #1
 917 001c 35D0     		beq	.L79
 918              	.L74:
1726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 919              		.loc 1 1726 0
 920 001e 2368     		ldr	r3, [r4]
 921 0020 9A68     		ldr	r2, [r3, #8]
 922 0022 12F0800F 		tst	r2, #128
 923 0026 0BD0     		beq	.L75
1728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 924              		.loc 1 1728 0
 925 0028 9A68     		ldr	r2, [r3, #8]
 926 002a 22F08002 		bic	r2, r2, #128
 927 002e 9A60     		str	r2, [r3, #8]
1731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 928              		.loc 1 1731 0
 929 0030 E36E     		ldr	r3, [r4, #108]
 930 0032 2BB1     		cbz	r3, .L75
1735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 931              		.loc 1 1735 0
 932 0034 0022     		movs	r2, #0
 933 0036 9A63     		str	r2, [r3, #56]
1737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 934              		.loc 1 1737 0
 935 0038 E06E     		ldr	r0, [r4, #108]
 936              	.LVL64:
 937 003a FFF7FEFF 		bl	HAL_DMA_Abort
 938              	.LVL65:
 939 003e 50BB     		cbnz	r0, .L80
 940              	.L75:
1751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 941              		.loc 1 1751 0
 942 0040 2368     		ldr	r3, [r4]
 943 0042 9A68     		ldr	r2, [r3, #8]
 944 0044 12F0400F 		tst	r2, #64
 945 0048 0BD0     		beq	.L77
1753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 946              		.loc 1 1753 0
 947 004a 9A68     		ldr	r2, [r3, #8]
 948 004c 22F04002 		bic	r2, r2, #64
 949 0050 9A60     		str	r2, [r3, #8]
1756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 950              		.loc 1 1756 0
 951 0052 236F     		ldr	r3, [r4, #112]
 952 0054 2BB1     		cbz	r3, .L77
1760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 953              		.loc 1 1760 0
 954 0056 0022     		movs	r2, #0
 955 0058 9A63     		str	r2, [r3, #56]
1762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 956              		.loc 1 1762 0
 957 005a 206F     		ldr	r0, [r4, #112]
 958 005c FFF7FEFF 		bl	HAL_DMA_Abort
 959              	.LVL66:
 960 0060 18BB     		cbnz	r0, .L81
 961              	.L77:
1776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 962              		.loc 1 1776 0
 963 0062 0020     		movs	r0, #0
 964 0064 A4F85200 		strh	r0, [r4, #82]	@ movhi
1777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 965              		.loc 1 1777 0
 966 0068 A4F85A00 		strh	r0, [r4, #90]	@ movhi
1780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 967              		.loc 1 1780 0
 968 006c 2368     		ldr	r3, [r4]
 969 006e 0F22     		movs	r2, #15
 970 0070 1A62     		str	r2, [r3, #32]
1791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 971              		.loc 1 1791 0
 972 0072 2268     		ldr	r2, [r4]
 973 0074 138B     		ldrh	r3, [r2, #24]
 974 0076 43F00803 		orr	r3, r3, #8
 975 007a 1383     		strh	r3, [r2, #24]	@ movhi
1794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 976              		.loc 1 1794 0
 977 007c 2023     		movs	r3, #32
 978 007e A367     		str	r3, [r4, #120]
1795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 979              		.loc 1 1795 0
 980 0080 E367     		str	r3, [r4, #124]
1796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 981              		.loc 1 1796 0
 982 0082 2066     		str	r0, [r4, #96]
1798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 983              		.loc 1 1798 0
 984 0084 C4F88000 		str	r0, [r4, #128]
 985              	.L76:
1801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 986              		.loc 1 1801 0
 987 0088 10BD     		pop	{r4, pc}
 988              	.LVL67:
 989              	.L79:
1722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 990              		.loc 1 1722 0
 991 008a 0268     		ldr	r2, [r0]
 992 008c 1368     		ldr	r3, [r2]
 993 008e 23F01003 		bic	r3, r3, #16
 994 0092 1360     		str	r3, [r2]
 995 0094 C3E7     		b	.L74
 996              	.LVL68:
 997              	.L80:
1739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
 998              		.loc 1 1739 0
 999 0096 E06E     		ldr	r0, [r4, #108]
 1000 0098 FFF7FEFF 		bl	HAL_DMA_GetError
 1001              	.LVL69:
 1002 009c 2028     		cmp	r0, #32
 1003 009e CFD1     		bne	.L75
1742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1004              		.loc 1 1742 0
 1005 00a0 1023     		movs	r3, #16
 1006 00a2 C4F88030 		str	r3, [r4, #128]
1744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
 1007              		.loc 1 1744 0
 1008 00a6 0320     		movs	r0, #3
 1009 00a8 EEE7     		b	.L76
 1010              	.L81:
1764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
 1011              		.loc 1 1764 0
 1012 00aa 206F     		ldr	r0, [r4, #112]
 1013 00ac FFF7FEFF 		bl	HAL_DMA_GetError
 1014              	.LVL70:
 1015 00b0 2028     		cmp	r0, #32
 1016 00b2 D6D1     		bne	.L77
1767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1017              		.loc 1 1767 0
 1018 00b4 1023     		movs	r3, #16
 1019 00b6 C4F88030 		str	r3, [r4, #128]
1769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
 1020              		.loc 1 1769 0
 1021 00ba 0320     		movs	r0, #3
 1022 00bc E4E7     		b	.L76
 1023              		.cfi_endproc
 1024              	.LFE333:
 1026              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1027              		.align	1
 1028              		.global	HAL_UART_AbortTransmit
 1029              		.syntax unified
 1030              		.thumb
 1031              		.thumb_func
 1032              		.fpu fpv4-sp-d16
 1034              	HAL_UART_AbortTransmit:
 1035              	.LFB334:
1816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1036              		.loc 1 1816 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              	.LVL71:
 1041 0000 10B5     		push	{r4, lr}
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 4, -8
 1044              		.cfi_offset 14, -4
 1045 0002 0446     		mov	r4, r0
1823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1046              		.loc 1 1823 0
 1047 0004 0268     		ldr	r2, [r0]
 1048 0006 1368     		ldr	r3, [r2]
 1049 0008 23F0C003 		bic	r3, r3, #192
 1050 000c 1360     		str	r3, [r2]
1827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1051              		.loc 1 1827 0
 1052 000e 0368     		ldr	r3, [r0]
 1053 0010 9A68     		ldr	r2, [r3, #8]
 1054 0012 12F0800F 		tst	r2, #128
 1055 0016 0BD0     		beq	.L83
1829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1056              		.loc 1 1829 0
 1057 0018 9A68     		ldr	r2, [r3, #8]
 1058 001a 22F08002 		bic	r2, r2, #128
 1059 001e 9A60     		str	r2, [r3, #8]
1832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 1060              		.loc 1 1832 0
 1061 0020 C36E     		ldr	r3, [r0, #108]
 1062 0022 2BB1     		cbz	r3, .L83
1836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1063              		.loc 1 1836 0
 1064 0024 0022     		movs	r2, #0
 1065 0026 9A63     		str	r2, [r3, #56]
1838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 1066              		.loc 1 1838 0
 1067 0028 C06E     		ldr	r0, [r0, #108]
 1068              	.LVL72:
 1069 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1070              	.LVL73:
 1071 002e 28B9     		cbnz	r0, .L86
 1072              	.L83:
1852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1073              		.loc 1 1852 0
 1074 0030 0020     		movs	r0, #0
 1075 0032 A4F85200 		strh	r0, [r4, #82]	@ movhi
1863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1076              		.loc 1 1863 0
 1077 0036 2023     		movs	r3, #32
 1078 0038 A367     		str	r3, [r4, #120]
 1079              	.L84:
1866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1080              		.loc 1 1866 0
 1081 003a 10BD     		pop	{r4, pc}
 1082              	.LVL74:
 1083              	.L86:
1840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
 1084              		.loc 1 1840 0
 1085 003c E06E     		ldr	r0, [r4, #108]
 1086 003e FFF7FEFF 		bl	HAL_DMA_GetError
 1087              	.LVL75:
 1088 0042 2028     		cmp	r0, #32
 1089 0044 F4D1     		bne	.L83
1843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1090              		.loc 1 1843 0
 1091 0046 1023     		movs	r3, #16
 1092 0048 C4F88030 		str	r3, [r4, #128]
1845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
 1093              		.loc 1 1845 0
 1094 004c 0320     		movs	r0, #3
 1095 004e F4E7     		b	.L84
 1096              		.cfi_endproc
 1097              	.LFE334:
 1099              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1100              		.align	1
 1101              		.global	HAL_UART_AbortReceive
 1102              		.syntax unified
 1103              		.thumb
 1104              		.thumb_func
 1105              		.fpu fpv4-sp-d16
 1107              	HAL_UART_AbortReceive:
 1108              	.LFB335:
1881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1109              		.loc 1 1881 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 1113              	.LVL76:
 1114 0000 10B5     		push	{r4, lr}
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 4, -8
 1117              		.cfi_offset 14, -4
 1118 0002 0446     		mov	r4, r0
1888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1119              		.loc 1 1888 0
 1120 0004 0268     		ldr	r2, [r0]
 1121 0006 1368     		ldr	r3, [r2]
 1122 0008 23F49073 		bic	r3, r3, #288
 1123 000c 1360     		str	r3, [r2]
1889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1124              		.loc 1 1889 0
 1125 000e 0268     		ldr	r2, [r0]
 1126 0010 9368     		ldr	r3, [r2, #8]
 1127 0012 23F00103 		bic	r3, r3, #1
 1128 0016 9360     		str	r3, [r2, #8]
1893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1129              		.loc 1 1893 0
 1130 0018 036E     		ldr	r3, [r0, #96]
 1131 001a 012B     		cmp	r3, #1
 1132 001c 1FD0     		beq	.L92
 1133              	.L88:
1899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1134              		.loc 1 1899 0
 1135 001e 2368     		ldr	r3, [r4]
 1136 0020 9A68     		ldr	r2, [r3, #8]
 1137 0022 12F0400F 		tst	r2, #64
 1138 0026 0BD0     		beq	.L89
1901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1139              		.loc 1 1901 0
 1140 0028 9A68     		ldr	r2, [r3, #8]
 1141 002a 22F04002 		bic	r2, r2, #64
 1142 002e 9A60     		str	r2, [r3, #8]
1904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 1143              		.loc 1 1904 0
 1144 0030 236F     		ldr	r3, [r4, #112]
 1145 0032 2BB1     		cbz	r3, .L89
1908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1146              		.loc 1 1908 0
 1147 0034 0022     		movs	r2, #0
 1148 0036 9A63     		str	r2, [r3, #56]
1910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 1149              		.loc 1 1910 0
 1150 0038 206F     		ldr	r0, [r4, #112]
 1151              	.LVL77:
 1152 003a FFF7FEFF 		bl	HAL_DMA_Abort
 1153              	.LVL78:
 1154 003e A0B9     		cbnz	r0, .L93
 1155              	.L89:
1924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1156              		.loc 1 1924 0
 1157 0040 0020     		movs	r0, #0
 1158 0042 A4F85A00 		strh	r0, [r4, #90]	@ movhi
1927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1159              		.loc 1 1927 0
 1160 0046 2368     		ldr	r3, [r4]
 1161 0048 0F22     		movs	r2, #15
 1162 004a 1A62     		str	r2, [r3, #32]
1930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1163              		.loc 1 1930 0
 1164 004c 2268     		ldr	r2, [r4]
 1165 004e 138B     		ldrh	r3, [r2, #24]
 1166 0050 43F00803 		orr	r3, r3, #8
 1167 0054 1383     		strh	r3, [r2, #24]	@ movhi
1933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1168              		.loc 1 1933 0
 1169 0056 2023     		movs	r3, #32
 1170 0058 E367     		str	r3, [r4, #124]
1934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1171              		.loc 1 1934 0
 1172 005a 2066     		str	r0, [r4, #96]
 1173              	.L90:
1937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1174              		.loc 1 1937 0
 1175 005c 10BD     		pop	{r4, pc}
 1176              	.LVL79:
 1177              	.L92:
1895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 1178              		.loc 1 1895 0
 1179 005e 0268     		ldr	r2, [r0]
 1180 0060 1368     		ldr	r3, [r2]
 1181 0062 23F01003 		bic	r3, r3, #16
 1182 0066 1360     		str	r3, [r2]
 1183 0068 D9E7     		b	.L88
 1184              	.LVL80:
 1185              	.L93:
1912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
 1186              		.loc 1 1912 0
 1187 006a 206F     		ldr	r0, [r4, #112]
 1188 006c FFF7FEFF 		bl	HAL_DMA_GetError
 1189              	.LVL81:
 1190 0070 2028     		cmp	r0, #32
 1191 0072 E5D1     		bne	.L89
1915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1192              		.loc 1 1915 0
 1193 0074 1023     		movs	r3, #16
 1194 0076 C4F88030 		str	r3, [r4, #128]
1917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
 1195              		.loc 1 1917 0
 1196 007a 0320     		movs	r0, #3
 1197 007c EEE7     		b	.L90
 1198              		.cfi_endproc
 1199              	.LFE335:
 1201              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1202              		.align	1
 1203              		.weak	HAL_UART_TxCpltCallback
 1204              		.syntax unified
 1205              		.thumb
 1206              		.thumb_func
 1207              		.fpu fpv4-sp-d16
 1209              	HAL_UART_TxCpltCallback:
 1210              	.LFB340:
2662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1211              		.loc 1 2662 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
 1216              	.LVL82:
2669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1217              		.loc 1 2669 0
 1218 0000 7047     		bx	lr
 1219              		.cfi_endproc
 1220              	.LFE340:
 1222              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1223              		.align	1
 1224              		.syntax unified
 1225              		.thumb
 1226              		.thumb_func
 1227              		.fpu fpv4-sp-d16
 1229              	UART_DMATransmitCplt:
 1230              	.LFB368:
3771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1231              		.loc 1 3771 0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 0
 1234              		@ frame_needed = 0, uses_anonymous_args = 0
 1235              	.LVL83:
 1236 0000 08B5     		push	{r3, lr}
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 3, -8
 1239              		.cfi_offset 14, -4
3772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1240              		.loc 1 3772 0
 1241 0002 836A     		ldr	r3, [r0, #40]
 1242              	.LVL84:
3775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1243              		.loc 1 3775 0
 1244 0004 0268     		ldr	r2, [r0]
 1245 0006 1268     		ldr	r2, [r2]
 1246 0008 12F0200F 		tst	r2, #32
 1247 000c 0DD1     		bne	.L96
3777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1248              		.loc 1 3777 0
 1249 000e 0022     		movs	r2, #0
 1250 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
3781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1251              		.loc 1 3781 0
 1252 0014 1968     		ldr	r1, [r3]
 1253 0016 8A68     		ldr	r2, [r1, #8]
 1254 0018 22F08002 		bic	r2, r2, #128
 1255 001c 8A60     		str	r2, [r1, #8]
3784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 1256              		.loc 1 3784 0
 1257 001e 1A68     		ldr	r2, [r3]
 1258 0020 1368     		ldr	r3, [r2]
 1259              	.LVL85:
 1260 0022 43F04003 		orr	r3, r3, #64
 1261 0026 1360     		str	r3, [r2]
 1262              	.LVL86:
 1263              	.L95:
3797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1264              		.loc 1 3797 0
 1265 0028 08BD     		pop	{r3, pc}
 1266              	.LVL87:
 1267              	.L96:
3794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1268              		.loc 1 3794 0
 1269 002a 1846     		mov	r0, r3
 1270              	.LVL88:
 1271 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1272              	.LVL89:
3797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1273              		.loc 1 3797 0
 1274 0030 FAE7     		b	.L95
 1275              		.cfi_endproc
 1276              	.LFE368:
 1278              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1279              		.align	1
 1280              		.syntax unified
 1281              		.thumb
 1282              		.thumb_func
 1283              		.fpu fpv4-sp-d16
 1285              	UART_EndTransmit_IT:
 1286              	.LFB380:
4214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
4217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
4218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
4222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
4223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
4224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
4225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
4226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
4229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
4230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
4231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
4232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
4233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
4234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
4236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
4239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
4241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
4242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
4243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
4244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
4245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr++;
4246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
4247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
4248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
4249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
4250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Nothing to do */
4251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
4252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
4253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
4254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
4255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
4257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length and FIFO mode is enabled.
4258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
4260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
4262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
4263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
4264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
4265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
4266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
4267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
4269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
4270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
4271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
4272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
4273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
4274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
4275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
4276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
4277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
4279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
4280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
4282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
4283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
4284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
4285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
4286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
4287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
4288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
4289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
4290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
4291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
4292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Nothing to do */
4293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
4294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
4295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
4296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
4297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
4300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
4301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
4302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
4303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
4304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
4305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
4306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 1287              		.loc 1 4306 0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 0, uses_anonymous_args = 0
 1291              	.LVL90:
 1292 0000 08B5     		push	{r3, lr}
 1293              		.cfi_def_cfa_offset 8
 1294              		.cfi_offset 3, -8
 1295              		.cfi_offset 14, -4
4307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
4308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1296              		.loc 1 4308 0
 1297 0002 0168     		ldr	r1, [r0]
 1298 0004 0A68     		ldr	r2, [r1]
 1299 0006 22F04002 		bic	r2, r2, #64
 1300 000a 0A60     		str	r2, [r1]
4309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
4311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1301              		.loc 1 4311 0
 1302 000c 2022     		movs	r2, #32
 1303 000e 8267     		str	r2, [r0, #120]
4312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
4314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 1304              		.loc 1 4314 0
 1305 0010 0022     		movs	r2, #0
 1306 0012 8266     		str	r2, [r0, #104]
4315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
4318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
4319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
4321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1307              		.loc 1 4321 0
 1308 0014 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1309              	.LVL91:
4322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 1310              		.loc 1 4323 0
 1311 0018 08BD     		pop	{r3, pc}
 1312              		.cfi_endproc
 1313              	.LFE380:
 1315              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1316              		.align	1
 1317              		.weak	HAL_UART_TxHalfCpltCallback
 1318              		.syntax unified
 1319              		.thumb
 1320              		.thumb_func
 1321              		.fpu fpv4-sp-d16
 1323              	HAL_UART_TxHalfCpltCallback:
 1324              	.LFB341:
2677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1325              		.loc 1 2677 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330              	.LVL92:
2684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1331              		.loc 1 2684 0
 1332 0000 7047     		bx	lr
 1333              		.cfi_endproc
 1334              	.LFE341:
 1336              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1337              		.align	1
 1338              		.syntax unified
 1339              		.thumb
 1340              		.thumb_func
 1341              		.fpu fpv4-sp-d16
 1343              	UART_DMATxHalfCplt:
 1344              	.LFB369:
3805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1345              		.loc 1 3805 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 0
 1348              		@ frame_needed = 0, uses_anonymous_args = 0
 1349              	.LVL93:
 1350 0000 08B5     		push	{r3, lr}
 1351              		.cfi_def_cfa_offset 8
 1352              		.cfi_offset 3, -8
 1353              		.cfi_offset 14, -4
 1354              	.LVL94:
3813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1355              		.loc 1 3813 0
 1356 0002 806A     		ldr	r0, [r0, #40]
 1357              	.LVL95:
 1358 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1359              	.LVL96:
3815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1360              		.loc 1 3815 0
 1361 0008 08BD     		pop	{r3, pc}
 1362              		.cfi_endproc
 1363              	.LFE369:
 1365              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1366              		.align	1
 1367              		.weak	HAL_UART_RxCpltCallback
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1371              		.fpu fpv4-sp-d16
 1373              	HAL_UART_RxCpltCallback:
 1374              	.LFB342:
2692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1375              		.loc 1 2692 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 1380              	.LVL97:
2699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1381              		.loc 1 2699 0
 1382 0000 7047     		bx	lr
 1383              		.cfi_endproc
 1384              	.LFE342:
 1386              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1387              		.align	1
 1388              		.weak	HAL_UART_RxHalfCpltCallback
 1389              		.syntax unified
 1390              		.thumb
 1391              		.thumb_func
 1392              		.fpu fpv4-sp-d16
 1394              	HAL_UART_RxHalfCpltCallback:
 1395              	.LFB343:
2707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1396              		.loc 1 2707 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400              		@ link register save eliminated.
 1401              	.LVL98:
2714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1402              		.loc 1 2714 0
 1403 0000 7047     		bx	lr
 1404              		.cfi_endproc
 1405              	.LFE343:
 1407              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1408              		.align	1
 1409              		.weak	HAL_UART_ErrorCallback
 1410              		.syntax unified
 1411              		.thumb
 1412              		.thumb_func
 1413              		.fpu fpv4-sp-d16
 1415              	HAL_UART_ErrorCallback:
 1416              	.LFB344:
2722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1417              		.loc 1 2722 0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 0
 1420              		@ frame_needed = 0, uses_anonymous_args = 0
 1421              		@ link register save eliminated.
 1422              	.LVL99:
2729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1423              		.loc 1 2729 0
 1424 0000 7047     		bx	lr
 1425              		.cfi_endproc
 1426              	.LFE344:
 1428              		.section	.text.UART_DMAError,"ax",%progbits
 1429              		.align	1
 1430              		.syntax unified
 1431              		.thumb
 1432              		.thumb_func
 1433              		.fpu fpv4-sp-d16
 1435              	UART_DMAError:
 1436              	.LFB372:
3914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1437              		.loc 1 3914 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441              	.LVL100:
 1442 0000 38B5     		push	{r3, r4, r5, lr}
 1443              		.cfi_def_cfa_offset 16
 1444              		.cfi_offset 3, -16
 1445              		.cfi_offset 4, -12
 1446              		.cfi_offset 5, -8
 1447              		.cfi_offset 14, -4
3915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1448              		.loc 1 3915 0
 1449 0002 846A     		ldr	r4, [r0, #40]
 1450              	.LVL101:
3917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1451              		.loc 1 3917 0
 1452 0004 A26F     		ldr	r2, [r4, #120]
 1453              	.LVL102:
3918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1454              		.loc 1 3918 0
 1455 0006 E56F     		ldr	r5, [r4, #124]
 1456              	.LVL103:
3921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1457              		.loc 1 3921 0
 1458 0008 2368     		ldr	r3, [r4]
 1459 000a 9B68     		ldr	r3, [r3, #8]
 1460 000c 13F0800F 		tst	r3, #128
 1461 0010 01D0     		beq	.L108
3921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1462              		.loc 1 3921 0 is_stmt 0 discriminator 1
 1463 0012 212A     		cmp	r2, #33
 1464 0014 10D0     		beq	.L111
 1465              	.LVL104:
 1466              	.L108:
3929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1467              		.loc 1 3929 0 is_stmt 1
 1468 0016 2368     		ldr	r3, [r4]
 1469 0018 9B68     		ldr	r3, [r3, #8]
 1470 001a 13F0400F 		tst	r3, #64
 1471 001e 01D0     		beq	.L109
3929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1472              		.loc 1 3929 0 is_stmt 0 discriminator 1
 1473 0020 222D     		cmp	r5, #34
 1474 0022 10D0     		beq	.L112
 1475              	.L109:
3936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1476              		.loc 1 3936 0 is_stmt 1
 1477 0024 D4F88030 		ldr	r3, [r4, #128]
 1478 0028 43F01003 		orr	r3, r3, #16
 1479 002c C4F88030 		str	r3, [r4, #128]
3943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1480              		.loc 1 3943 0
 1481 0030 2046     		mov	r0, r4
 1482 0032 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1483              	.LVL105:
3945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1484              		.loc 1 3945 0
 1485 0036 38BD     		pop	{r3, r4, r5, pc}
 1486              	.LVL106:
 1487              	.L111:
3924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1488              		.loc 1 3924 0
 1489 0038 0023     		movs	r3, #0
 1490 003a A4F85230 		strh	r3, [r4, #82]	@ movhi
3925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 1491              		.loc 1 3925 0
 1492 003e 2046     		mov	r0, r4
 1493              	.LVL107:
 1494 0040 FFF7FEFF 		bl	UART_EndTxTransfer
 1495              	.LVL108:
 1496 0044 E7E7     		b	.L108
 1497              	.L112:
3932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1498              		.loc 1 3932 0
 1499 0046 0023     		movs	r3, #0
 1500 0048 A4F85A30 		strh	r3, [r4, #90]	@ movhi
3933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 1501              		.loc 1 3933 0
 1502 004c 2046     		mov	r0, r4
 1503 004e FFF7FEFF 		bl	UART_EndRxTransfer
 1504              	.LVL109:
 1505 0052 E7E7     		b	.L109
 1506              		.cfi_endproc
 1507              	.LFE372:
 1509              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 1510              		.align	1
 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1514              		.fpu fpv4-sp-d16
 1516              	UART_DMAAbortOnError:
 1517              	.LFB373:
3954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1518              		.loc 1 3954 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              	.LVL110:
 1523 0000 08B5     		push	{r3, lr}
 1524              		.cfi_def_cfa_offset 8
 1525              		.cfi_offset 3, -8
 1526              		.cfi_offset 14, -4
3955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1527              		.loc 1 3955 0
 1528 0002 806A     		ldr	r0, [r0, #40]
 1529              	.LVL111:
3956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 1530              		.loc 1 3956 0
 1531 0004 0023     		movs	r3, #0
 1532 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1533              		.loc 1 3957 0
 1534 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
3964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1535              		.loc 1 3964 0
 1536 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1537              	.LVL112:
3966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1538              		.loc 1 3966 0
 1539 0012 08BD     		pop	{r3, pc}
 1540              		.cfi_endproc
 1541              	.LFE373:
 1543              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 1544              		.align	1
 1545              		.weak	HAL_UART_AbortCpltCallback
 1546              		.syntax unified
 1547              		.thumb
 1548              		.thumb_func
 1549              		.fpu fpv4-sp-d16
 1551              	HAL_UART_AbortCpltCallback:
 1552              	.LFB345:
2737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1553              		.loc 1 2737 0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 1557              		@ link register save eliminated.
 1558              	.LVL113:
2744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1559              		.loc 1 2744 0
 1560 0000 7047     		bx	lr
 1561              		.cfi_endproc
 1562              	.LFE345:
 1564              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 1565              		.align	1
 1566              		.global	HAL_UART_Abort_IT
 1567              		.syntax unified
 1568              		.thumb
 1569              		.thumb_func
 1570              		.fpu fpv4-sp-d16
 1572              	HAL_UART_Abort_IT:
 1573              	.LFB336:
1954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 1574              		.loc 1 1954 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578              	.LVL114:
 1579 0000 10B5     		push	{r4, lr}
 1580              		.cfi_def_cfa_offset 8
 1581              		.cfi_offset 4, -8
 1582              		.cfi_offset 14, -4
 1583 0002 0446     		mov	r4, r0
 1584              	.LVL115:
1963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1585              		.loc 1 1963 0
 1586 0004 0268     		ldr	r2, [r0]
 1587 0006 1368     		ldr	r3, [r2]
 1588 0008 23F4F073 		bic	r3, r3, #480
 1589 000c 1360     		str	r3, [r2]
1964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1590              		.loc 1 1964 0
 1591 000e 0268     		ldr	r2, [r0]
 1592 0010 9368     		ldr	r3, [r2, #8]
 1593 0012 23F00103 		bic	r3, r3, #1
 1594 0016 9360     		str	r3, [r2, #8]
1968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1595              		.loc 1 1968 0
 1596 0018 036E     		ldr	r3, [r0, #96]
 1597 001a 012B     		cmp	r3, #1
 1598 001c 26D0     		beq	.L130
 1599              	.L117:
1976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1600              		.loc 1 1976 0
 1601 001e E36E     		ldr	r3, [r4, #108]
 1602 0020 33B1     		cbz	r3, .L118
1980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 1603              		.loc 1 1980 0
 1604 0022 2268     		ldr	r2, [r4]
 1605 0024 9268     		ldr	r2, [r2, #8]
 1606 0026 12F0800F 		tst	r2, #128
 1607 002a 25D0     		beq	.L119
1982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 1608              		.loc 1 1982 0
 1609 002c 2F4A     		ldr	r2, .L131
 1610 002e 9A63     		str	r2, [r3, #56]
 1611              	.L118:
1990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1612              		.loc 1 1990 0
 1613 0030 236F     		ldr	r3, [r4, #112]
 1614 0032 33B1     		cbz	r3, .L120
1994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 1615              		.loc 1 1994 0
 1616 0034 2268     		ldr	r2, [r4]
 1617 0036 9268     		ldr	r2, [r2, #8]
 1618 0038 12F0400F 		tst	r2, #64
 1619 003c 1FD0     		beq	.L121
1996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 1620              		.loc 1 1996 0
 1621 003e 2C4A     		ldr	r2, .L131+4
 1622 0040 9A63     		str	r2, [r3, #56]
 1623              	.L120:
2005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1624              		.loc 1 2005 0
 1625 0042 2368     		ldr	r3, [r4]
 1626 0044 9A68     		ldr	r2, [r3, #8]
 1627 0046 12F0800F 		tst	r2, #128
 1628 004a 1BD0     		beq	.L126
2008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1629              		.loc 1 2008 0
 1630 004c 9A68     		ldr	r2, [r3, #8]
 1631 004e 22F08002 		bic	r2, r2, #128
 1632 0052 9A60     		str	r2, [r3, #8]
2011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 1633              		.loc 1 2011 0
 1634 0054 E06E     		ldr	r0, [r4, #108]
 1635              	.LVL116:
 1636 0056 0028     		cmp	r0, #0
 1637 0058 3FD0     		beq	.L127
2017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 1638              		.loc 1 2017 0
 1639 005a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1640              	.LVL117:
 1641 005e 0028     		cmp	r0, #0
 1642 0060 3DD0     		beq	.L128
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 1643              		.loc 1 2019 0
 1644 0062 E36E     		ldr	r3, [r4, #108]
 1645 0064 0022     		movs	r2, #0
 1646 0066 9A63     		str	r2, [r3, #56]
1955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1647              		.loc 1 1955 0
 1648 0068 0121     		movs	r1, #1
 1649 006a 0CE0     		b	.L122
 1650              	.LVL118:
 1651              	.L130:
1970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 1652              		.loc 1 1970 0
 1653 006c 0268     		ldr	r2, [r0]
 1654 006e 1368     		ldr	r3, [r2]
 1655 0070 23F01003 		bic	r3, r3, #16
 1656 0074 1360     		str	r3, [r2]
 1657 0076 D2E7     		b	.L117
 1658              	.L119:
1986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 1659              		.loc 1 1986 0
 1660 0078 0022     		movs	r2, #0
 1661 007a 9A63     		str	r2, [r3, #56]
 1662 007c D8E7     		b	.L118
 1663              	.L121:
2000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 1664              		.loc 1 2000 0
 1665 007e 0022     		movs	r2, #0
 1666 0080 9A63     		str	r2, [r3, #56]
 1667 0082 DEE7     		b	.L120
 1668              	.L126:
1955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1669              		.loc 1 1955 0
 1670 0084 0121     		movs	r1, #1
 1671              	.LVL119:
 1672              	.L122:
2029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1673              		.loc 1 2029 0
 1674 0086 2368     		ldr	r3, [r4]
 1675 0088 9A68     		ldr	r2, [r3, #8]
 1676 008a 12F0400F 		tst	r2, #64
 1677 008e 28D0     		beq	.L123
2031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1678              		.loc 1 2031 0
 1679 0090 9A68     		ldr	r2, [r3, #8]
 1680 0092 22F04002 		bic	r2, r2, #64
 1681 0096 9A60     		str	r2, [r3, #8]
2034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 1682              		.loc 1 2034 0
 1683 0098 206F     		ldr	r0, [r4, #112]
 1684 009a 10B3     		cbz	r0, .L123
2040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 1685              		.loc 1 2040 0
 1686 009c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1687              	.LVL120:
 1688 00a0 08B3     		cbz	r0, .L124
2042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 1689              		.loc 1 2042 0
 1690 00a2 236F     		ldr	r3, [r4, #112]
 1691 00a4 0022     		movs	r2, #0
 1692 00a6 9A63     		str	r2, [r3, #56]
 1693              	.LVL121:
 1694              	.L125:
2056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 1695              		.loc 1 2056 0
 1696 00a8 0023     		movs	r3, #0
 1697 00aa A4F85230 		strh	r3, [r4, #82]	@ movhi
2057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1698              		.loc 1 2057 0
 1699 00ae A4F85A30 		strh	r3, [r4, #90]	@ movhi
2060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 1700              		.loc 1 2060 0
 1701 00b2 6366     		str	r3, [r4, #100]
2061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1702              		.loc 1 2061 0
 1703 00b4 A366     		str	r3, [r4, #104]
2064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1704              		.loc 1 2064 0
 1705 00b6 C4F88030 		str	r3, [r4, #128]
2067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1706              		.loc 1 2067 0
 1707 00ba 2268     		ldr	r2, [r4]
 1708 00bc 0F21     		movs	r1, #15
 1709 00be 1162     		str	r1, [r2, #32]
2078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1710              		.loc 1 2078 0
 1711 00c0 2168     		ldr	r1, [r4]
 1712 00c2 0A8B     		ldrh	r2, [r1, #24]
 1713 00c4 42F00802 		orr	r2, r2, #8
 1714 00c8 0A83     		strh	r2, [r1, #24]	@ movhi
2081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1715              		.loc 1 2081 0
 1716 00ca 2022     		movs	r2, #32
 1717 00cc A267     		str	r2, [r4, #120]
2082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1718              		.loc 1 2082 0
 1719 00ce E267     		str	r2, [r4, #124]
2083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1720              		.loc 1 2083 0
 1721 00d0 2366     		str	r3, [r4, #96]
2091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1722              		.loc 1 2091 0
 1723 00d2 2046     		mov	r0, r4
 1724 00d4 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1725              	.LVL122:
 1726 00d8 05E0     		b	.L124
 1727              	.LVL123:
 1728              	.L127:
1955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1729              		.loc 1 1955 0
 1730 00da 0121     		movs	r1, #1
 1731 00dc D3E7     		b	.L122
 1732              	.L128:
2023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 1733              		.loc 1 2023 0
 1734 00de 0021     		movs	r1, #0
 1735 00e0 D1E7     		b	.L122
 1736              	.LVL124:
 1737              	.L123:
2053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1738              		.loc 1 2053 0
 1739 00e2 0029     		cmp	r1, #0
 1740 00e4 E0D1     		bne	.L125
 1741              	.LVL125:
 1742              	.L124:
2096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1743              		.loc 1 2096 0
 1744 00e6 0020     		movs	r0, #0
 1745 00e8 10BD     		pop	{r4, pc}
 1746              	.LVL126:
 1747              	.L132:
 1748 00ea 00BF     		.align	2
 1749              	.L131:
 1750 00ec 00000000 		.word	UART_DMATxAbortCallback
 1751 00f0 00000000 		.word	UART_DMARxAbortCallback
 1752              		.cfi_endproc
 1753              	.LFE336:
 1755              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 1756              		.align	1
 1757              		.syntax unified
 1758              		.thumb
 1759              		.thumb_func
 1760              		.fpu fpv4-sp-d16
 1762              	UART_DMARxAbortCallback:
 1763              	.LFB375:
4034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1764              		.loc 1 4034 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              	.LVL127:
 1769 0000 08B5     		push	{r3, lr}
 1770              		.cfi_def_cfa_offset 8
 1771              		.cfi_offset 3, -8
 1772              		.cfi_offset 14, -4
4035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1773              		.loc 1 4035 0
 1774 0002 806A     		ldr	r0, [r0, #40]
 1775              	.LVL128:
4037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1776              		.loc 1 4037 0
 1777 0004 036F     		ldr	r3, [r0, #112]
 1778 0006 0022     		movs	r2, #0
 1779 0008 9A63     		str	r2, [r3, #56]
4040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1780              		.loc 1 4040 0
 1781 000a C36E     		ldr	r3, [r0, #108]
 1782 000c 13B1     		cbz	r3, .L134
4042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 1783              		.loc 1 4042 0
 1784 000e 9B6B     		ldr	r3, [r3, #56]
 1785 0010 03B1     		cbz	r3, .L134
 1786              	.LVL129:
 1787              	.L133:
4074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1788              		.loc 1 4074 0
 1789 0012 08BD     		pop	{r3, pc}
 1790              	.LVL130:
 1791              	.L134:
4049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1792              		.loc 1 4049 0
 1793 0014 0023     		movs	r3, #0
 1794 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
4050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1795              		.loc 1 4050 0
 1796 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
4053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1797              		.loc 1 4053 0
 1798 001e C0F88030 		str	r3, [r0, #128]
4056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1799              		.loc 1 4056 0
 1800 0022 0268     		ldr	r2, [r0]
 1801 0024 0F21     		movs	r1, #15
 1802 0026 1162     		str	r1, [r2, #32]
4059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1803              		.loc 1 4059 0
 1804 0028 0168     		ldr	r1, [r0]
 1805 002a 0A8B     		ldrh	r2, [r1, #24]
 1806 002c 42F00802 		orr	r2, r2, #8
 1807 0030 0A83     		strh	r2, [r1, #24]	@ movhi
4062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1808              		.loc 1 4062 0
 1809 0032 2022     		movs	r2, #32
 1810 0034 8267     		str	r2, [r0, #120]
4063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1811              		.loc 1 4063 0
 1812 0036 C267     		str	r2, [r0, #124]
4064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1813              		.loc 1 4064 0
 1814 0038 0366     		str	r3, [r0, #96]
4072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1815              		.loc 1 4072 0
 1816 003a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1817              	.LVL131:
 1818 003e E8E7     		b	.L133
 1819              		.cfi_endproc
 1820              	.LFE375:
 1822              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 1823              		.align	1
 1824              		.syntax unified
 1825              		.thumb
 1826              		.thumb_func
 1827              		.fpu fpv4-sp-d16
 1829              	UART_DMATxAbortCallback:
 1830              	.LFB374:
3977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1831              		.loc 1 3977 0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835              	.LVL132:
 1836 0000 08B5     		push	{r3, lr}
 1837              		.cfi_def_cfa_offset 8
 1838              		.cfi_offset 3, -8
 1839              		.cfi_offset 14, -4
3978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1840              		.loc 1 3978 0
 1841 0002 806A     		ldr	r0, [r0, #40]
 1842              	.LVL133:
3980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1843              		.loc 1 3980 0
 1844 0004 C36E     		ldr	r3, [r0, #108]
 1845 0006 0022     		movs	r2, #0
 1846 0008 9A63     		str	r2, [r3, #56]
3983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1847              		.loc 1 3983 0
 1848 000a 036F     		ldr	r3, [r0, #112]
 1849 000c 13B1     		cbz	r3, .L138
3985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 1850              		.loc 1 3985 0
 1851 000e 9B6B     		ldr	r3, [r3, #56]
 1852 0010 03B1     		cbz	r3, .L138
 1853              	.LVL134:
 1854              	.L137:
4022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1855              		.loc 1 4022 0
 1856 0012 08BD     		pop	{r3, pc}
 1857              	.LVL135:
 1858              	.L138:
3992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1859              		.loc 1 3992 0
 1860 0014 0023     		movs	r3, #0
 1861 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
3993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1862              		.loc 1 3993 0
 1863 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
3996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1864              		.loc 1 3996 0
 1865 001e C0F88030 		str	r3, [r0, #128]
3999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1866              		.loc 1 3999 0
 1867 0022 0268     		ldr	r2, [r0]
 1868 0024 0F21     		movs	r1, #15
 1869 0026 1162     		str	r1, [r2, #32]
4010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1870              		.loc 1 4010 0
 1871 0028 2022     		movs	r2, #32
 1872 002a 8267     		str	r2, [r0, #120]
4011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1873              		.loc 1 4011 0
 1874 002c C267     		str	r2, [r0, #124]
4012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1875              		.loc 1 4012 0
 1876 002e 0366     		str	r3, [r0, #96]
4020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1877              		.loc 1 4020 0
 1878 0030 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 1879              	.LVL136:
 1880 0034 EDE7     		b	.L137
 1881              		.cfi_endproc
 1882              	.LFE374:
 1884              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 1885              		.align	1
 1886              		.weak	HAL_UART_AbortTransmitCpltCallback
 1887              		.syntax unified
 1888              		.thumb
 1889              		.thumb_func
 1890              		.fpu fpv4-sp-d16
 1892              	HAL_UART_AbortTransmitCpltCallback:
 1893              	.LFB346:
2752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1894              		.loc 1 2752 0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898              		@ link register save eliminated.
 1899              	.LVL137:
2759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1900              		.loc 1 2759 0
 1901 0000 7047     		bx	lr
 1902              		.cfi_endproc
 1903              	.LFE346:
 1905              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 1906              		.align	1
 1907              		.global	HAL_UART_AbortTransmit_IT
 1908              		.syntax unified
 1909              		.thumb
 1910              		.thumb_func
 1911              		.fpu fpv4-sp-d16
 1913              	HAL_UART_AbortTransmit_IT:
 1914              	.LFB337:
2113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
 1915              		.loc 1 2113 0
 1916              		.cfi_startproc
 1917              		@ args = 0, pretend = 0, frame = 0
 1918              		@ frame_needed = 0, uses_anonymous_args = 0
 1919              	.LVL138:
 1920 0000 10B5     		push	{r4, lr}
 1921              		.cfi_def_cfa_offset 8
 1922              		.cfi_offset 4, -8
 1923              		.cfi_offset 14, -4
 1924 0002 0446     		mov	r4, r0
2119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 1925              		.loc 1 2119 0
 1926 0004 0268     		ldr	r2, [r0]
 1927 0006 1368     		ldr	r3, [r2]
 1928 0008 23F0C003 		bic	r3, r3, #192
 1929 000c 1360     		str	r3, [r2]
2123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 1930              		.loc 1 2123 0
 1931 000e 0368     		ldr	r3, [r0]
 1932 0010 9A68     		ldr	r2, [r3, #8]
 1933 0012 12F0800F 		tst	r2, #128
 1934 0016 19D0     		beq	.L143
2125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1935              		.loc 1 2125 0
 1936 0018 9A68     		ldr	r2, [r3, #8]
 1937 001a 22F08002 		bic	r2, r2, #128
 1938 001e 9A60     		str	r2, [r3, #8]
2128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 1939              		.loc 1 2128 0
 1940 0020 C36E     		ldr	r3, [r0, #108]
 1941 0022 53B1     		cbz	r3, .L144
2132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1942              		.loc 1 2132 0
 1943 0024 0E4A     		ldr	r2, .L147
 1944 0026 9A63     		str	r2, [r3, #56]
2135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 1945              		.loc 1 2135 0
 1946 0028 C06E     		ldr	r0, [r0, #108]
 1947              	.LVL139:
 1948 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 1949              	.LVL140:
 1950 002e 10B1     		cbz	r0, .L145
2138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 1951              		.loc 1 2138 0
 1952 0030 E06E     		ldr	r0, [r4, #108]
 1953 0032 836B     		ldr	r3, [r0, #56]
 1954 0034 9847     		blx	r3
 1955              	.LVL141:
 1956              	.L145:
2192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1957              		.loc 1 2192 0
 1958 0036 0020     		movs	r0, #0
 1959 0038 10BD     		pop	{r4, pc}
 1960              	.LVL142:
 1961              	.L144:
2144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1962              		.loc 1 2144 0
 1963 003a 0023     		movs	r3, #0
 1964 003c A0F85230 		strh	r3, [r0, #82]	@ movhi
2147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1965              		.loc 1 2147 0
 1966 0040 8366     		str	r3, [r0, #104]
2150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1967              		.loc 1 2150 0
 1968 0042 2023     		movs	r3, #32
 1969 0044 8367     		str	r3, [r0, #120]
2158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1970              		.loc 1 2158 0
 1971 0046 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1972              	.LVL143:
 1973 004a F4E7     		b	.L145
 1974              	.LVL144:
 1975              	.L143:
2165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1976              		.loc 1 2165 0
 1977 004c 0023     		movs	r3, #0
 1978 004e A0F85230 		strh	r3, [r0, #82]	@ movhi
2168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1979              		.loc 1 2168 0
 1980 0052 8366     		str	r3, [r0, #104]
2179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 1981              		.loc 1 2179 0
 1982 0054 2023     		movs	r3, #32
 1983 0056 8367     		str	r3, [r0, #120]
2187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1984              		.loc 1 2187 0
 1985 0058 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 1986              	.LVL145:
 1987 005c EBE7     		b	.L145
 1988              	.L148:
 1989 005e 00BF     		.align	2
 1990              	.L147:
 1991 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 1992              		.cfi_endproc
 1993              	.LFE337:
 1995              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 1996              		.align	1
 1997              		.syntax unified
 1998              		.thumb
 1999              		.thumb_func
 2000              		.fpu fpv4-sp-d16
 2002              	UART_DMATxOnlyAbortCallback:
 2003              	.LFB376:
4086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2004              		.loc 1 4086 0
 2005              		.cfi_startproc
 2006              		@ args = 0, pretend = 0, frame = 0
 2007              		@ frame_needed = 0, uses_anonymous_args = 0
 2008              	.LVL146:
 2009 0000 08B5     		push	{r3, lr}
 2010              		.cfi_def_cfa_offset 8
 2011              		.cfi_offset 3, -8
 2012              		.cfi_offset 14, -4
4087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2013              		.loc 1 4087 0
 2014 0002 806A     		ldr	r0, [r0, #40]
 2015              	.LVL147:
4089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2016              		.loc 1 4089 0
 2017 0004 0023     		movs	r3, #0
 2018 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
4100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2019              		.loc 1 4100 0
 2020 000a 2023     		movs	r3, #32
 2021 000c 8367     		str	r3, [r0, #120]
4108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2022              		.loc 1 4108 0
 2023 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2024              	.LVL148:
4110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2025              		.loc 1 4110 0
 2026 0012 08BD     		pop	{r3, pc}
 2027              		.cfi_endproc
 2028              	.LFE376:
 2030              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2031              		.align	1
 2032              		.weak	HAL_UART_AbortReceiveCpltCallback
 2033              		.syntax unified
 2034              		.thumb
 2035              		.thumb_func
 2036              		.fpu fpv4-sp-d16
 2038              	HAL_UART_AbortReceiveCpltCallback:
 2039              	.LFB347:
2767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2040              		.loc 1 2767 0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 0
 2043              		@ frame_needed = 0, uses_anonymous_args = 0
 2044              		@ link register save eliminated.
 2045              	.LVL149:
2774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2046              		.loc 1 2774 0
 2047 0000 7047     		bx	lr
 2048              		.cfi_endproc
 2049              	.LFE347:
 2051              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2052              		.align	1
 2053              		.global	HAL_UART_AbortReceive_IT
 2054              		.syntax unified
 2055              		.thumb
 2056              		.thumb_func
 2057              		.fpu fpv4-sp-d16
 2059              	HAL_UART_AbortReceive_IT:
 2060              	.LFB338:
2209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2061              		.loc 1 2209 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 0
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 2065              	.LVL150:
 2066 0000 10B5     		push	{r4, lr}
 2067              		.cfi_def_cfa_offset 8
 2068              		.cfi_offset 4, -8
 2069              		.cfi_offset 14, -4
 2070 0002 0446     		mov	r4, r0
2215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2071              		.loc 1 2215 0
 2072 0004 0268     		ldr	r2, [r0]
 2073 0006 1368     		ldr	r3, [r2]
 2074 0008 23F49073 		bic	r3, r3, #288
 2075 000c 1360     		str	r3, [r2]
2216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2076              		.loc 1 2216 0
 2077 000e 0268     		ldr	r2, [r0]
 2078 0010 9368     		ldr	r3, [r2, #8]
 2079 0012 23F00103 		bic	r3, r3, #1
 2080 0016 9360     		str	r3, [r2, #8]
2220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 2081              		.loc 1 2220 0
 2082 0018 036E     		ldr	r3, [r0, #96]
 2083 001a 012B     		cmp	r3, #1
 2084 001c 15D0     		beq	.L158
 2085              	.L153:
2226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 2086              		.loc 1 2226 0
 2087 001e 2368     		ldr	r3, [r4]
 2088 0020 9A68     		ldr	r2, [r3, #8]
 2089 0022 12F0400F 		tst	r2, #64
 2090 0026 29D0     		beq	.L154
2228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2091              		.loc 1 2228 0
 2092 0028 9A68     		ldr	r2, [r3, #8]
 2093 002a 22F04002 		bic	r2, r2, #64
 2094 002e 9A60     		str	r2, [r3, #8]
2231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2095              		.loc 1 2231 0
 2096 0030 236F     		ldr	r3, [r4, #112]
 2097 0032 83B1     		cbz	r3, .L155
2235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2098              		.loc 1 2235 0
 2099 0034 184A     		ldr	r2, .L159
 2100 0036 9A63     		str	r2, [r3, #56]
2238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 2101              		.loc 1 2238 0
 2102 0038 206F     		ldr	r0, [r4, #112]
 2103              	.LVL151:
 2104 003a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2105              	.LVL152:
 2106 003e 10B1     		cbz	r0, .L156
2241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 2107              		.loc 1 2241 0
 2108 0040 206F     		ldr	r0, [r4, #112]
 2109 0042 836B     		ldr	r3, [r0, #56]
 2110 0044 9847     		blx	r3
 2111              	.LVL153:
 2112              	.L156:
2298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2113              		.loc 1 2298 0
 2114 0046 0020     		movs	r0, #0
 2115 0048 10BD     		pop	{r4, pc}
 2116              	.LVL154:
 2117              	.L158:
2222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 2118              		.loc 1 2222 0
 2119 004a 0268     		ldr	r2, [r0]
 2120 004c 1368     		ldr	r3, [r2]
 2121 004e 23F01003 		bic	r3, r3, #16
 2122 0052 1360     		str	r3, [r2]
 2123 0054 E3E7     		b	.L153
 2124              	.L155:
2247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2125              		.loc 1 2247 0
 2126 0056 0023     		movs	r3, #0
 2127 0058 A4F85A30 		strh	r3, [r4, #90]	@ movhi
2250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2128              		.loc 1 2250 0
 2129 005c 6365     		str	r3, [r4, #84]
2253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2130              		.loc 1 2253 0
 2131 005e 2268     		ldr	r2, [r4]
 2132 0060 0F21     		movs	r1, #15
 2133 0062 1162     		str	r1, [r2, #32]
2256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2134              		.loc 1 2256 0
 2135 0064 2168     		ldr	r1, [r4]
 2136 0066 0A8B     		ldrh	r2, [r1, #24]
 2137 0068 42F00802 		orr	r2, r2, #8
 2138 006c 0A83     		strh	r2, [r1, #24]	@ movhi
2259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2139              		.loc 1 2259 0
 2140 006e 2022     		movs	r2, #32
 2141 0070 E267     		str	r2, [r4, #124]
2260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2142              		.loc 1 2260 0
 2143 0072 2366     		str	r3, [r4, #96]
2268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2144              		.loc 1 2268 0
 2145 0074 2046     		mov	r0, r4
 2146              	.LVL155:
 2147 0076 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2148              	.LVL156:
 2149 007a E4E7     		b	.L156
 2150              	.LVL157:
 2151              	.L154:
2275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2152              		.loc 1 2275 0
 2153 007c 0022     		movs	r2, #0
 2154 007e A4F85A20 		strh	r2, [r4, #90]	@ movhi
2278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2155              		.loc 1 2278 0
 2156 0082 6265     		str	r2, [r4, #84]
2281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2157              		.loc 1 2281 0
 2158 0084 0F21     		movs	r1, #15
 2159 0086 1962     		str	r1, [r3, #32]
2284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2160              		.loc 1 2284 0
 2161 0088 2023     		movs	r3, #32
 2162 008a E367     		str	r3, [r4, #124]
2285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2163              		.loc 1 2285 0
 2164 008c 2266     		str	r2, [r4, #96]
2293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2165              		.loc 1 2293 0
 2166 008e 2046     		mov	r0, r4
 2167              	.LVL158:
 2168 0090 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2169              	.LVL159:
 2170 0094 D7E7     		b	.L156
 2171              	.L160:
 2172 0096 00BF     		.align	2
 2173              	.L159:
 2174 0098 00000000 		.word	UART_DMARxOnlyAbortCallback
 2175              		.cfi_endproc
 2176              	.LFE338:
 2178              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2179              		.align	1
 2180              		.syntax unified
 2181              		.thumb
 2182              		.thumb_func
 2183              		.fpu fpv4-sp-d16
 2185              	UART_DMARxOnlyAbortCallback:
 2186              	.LFB377:
4121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2187              		.loc 1 4121 0
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 0
 2190              		@ frame_needed = 0, uses_anonymous_args = 0
 2191              	.LVL160:
 2192 0000 08B5     		push	{r3, lr}
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 3, -8
 2195              		.cfi_offset 14, -4
4122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2196              		.loc 1 4122 0
 2197 0002 806A     		ldr	r0, [r0, #40]
 2198              	.LVL161:
4124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2199              		.loc 1 4124 0
 2200 0004 0022     		movs	r2, #0
 2201 0006 A0F85A20 		strh	r2, [r0, #90]	@ movhi
4127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2202              		.loc 1 4127 0
 2203 000a 0368     		ldr	r3, [r0]
 2204 000c 0F21     		movs	r1, #15
 2205 000e 1962     		str	r1, [r3, #32]
4130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2206              		.loc 1 4130 0
 2207 0010 0168     		ldr	r1, [r0]
 2208 0012 0B8B     		ldrh	r3, [r1, #24]
 2209 0014 43F00803 		orr	r3, r3, #8
 2210 0018 0B83     		strh	r3, [r1, #24]	@ movhi
4133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2211              		.loc 1 4133 0
 2212 001a 2023     		movs	r3, #32
 2213 001c C367     		str	r3, [r0, #124]
4134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2214              		.loc 1 4134 0
 2215 001e 0266     		str	r2, [r0, #96]
4142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2216              		.loc 1 4142 0
 2217 0020 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2218              	.LVL162:
4144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2219              		.loc 1 4144 0
 2220 0024 08BD     		pop	{r3, pc}
 2221              		.cfi_endproc
 2222              	.LFE377:
 2224              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 2225              		.align	1
 2226              		.weak	HAL_UARTEx_RxEventCallback
 2227              		.syntax unified
 2228              		.thumb
 2229              		.thumb_func
 2230              		.fpu fpv4-sp-d16
 2232              	HAL_UARTEx_RxEventCallback:
 2233              	.LFB348:
2784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2234              		.loc 1 2784 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 0
 2237              		@ frame_needed = 0, uses_anonymous_args = 0
 2238              		@ link register save eliminated.
 2239              	.LVL163:
2792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2240              		.loc 1 2792 0
 2241 0000 7047     		bx	lr
 2242              		.cfi_endproc
 2243              	.LFE348:
 2245              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2246              		.align	1
 2247              		.global	HAL_UART_IRQHandler
 2248              		.syntax unified
 2249              		.thumb
 2250              		.thumb_func
 2251              		.fpu fpv4-sp-d16
 2253              	HAL_UART_IRQHandler:
 2254              	.LFB339:
2306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2255              		.loc 1 2306 0
 2256              		.cfi_startproc
 2257              		@ args = 0, pretend = 0, frame = 0
 2258              		@ frame_needed = 0, uses_anonymous_args = 0
 2259              	.LVL164:
 2260 0000 70B5     		push	{r4, r5, r6, lr}
 2261              		.cfi_def_cfa_offset 16
 2262              		.cfi_offset 4, -16
 2263              		.cfi_offset 5, -12
 2264              		.cfi_offset 6, -8
 2265              		.cfi_offset 14, -4
 2266 0002 0446     		mov	r4, r0
2307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2267              		.loc 1 2307 0
 2268 0004 0168     		ldr	r1, [r0]
 2269 0006 CB69     		ldr	r3, [r1, #28]
 2270              	.LVL165:
2308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2271              		.loc 1 2308 0
 2272 0008 0868     		ldr	r0, [r1]
 2273              	.LVL166:
2309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2274              		.loc 1 2309 0
 2275 000a 8D68     		ldr	r5, [r1, #8]
 2276              	.LVL167:
2315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (errorflags == 0U)
 2277              		.loc 1 2315 0
 2278 000c 40F60F02 		movw	r2, #2063
 2279              	.LVL168:
2316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 2280              		.loc 1 2316 0
 2281 0010 1A40     		ands	r2, r3, r2
 2282              	.LVL169:
 2283 0012 0AD1     		bne	.L165
2324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2284              		.loc 1 2324 0
 2285 0014 13F0200F 		tst	r3, #32
 2286 0018 07D0     		beq	.L165
2325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2287              		.loc 1 2325 0
 2288 001a 10F0200F 		tst	r0, #32
 2289 001e 04D0     		beq	.L165
2328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 2290              		.loc 1 2328 0
 2291 0020 636E     		ldr	r3, [r4, #100]
 2292              	.LVL170:
 2293 0022 0BB1     		cbz	r3, .L164
2330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 2294              		.loc 1 2330 0
 2295 0024 2046     		mov	r0, r4
 2296              	.LVL171:
 2297 0026 9847     		blx	r3
 2298              	.LVL172:
 2299              	.L164:
2654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2300              		.loc 1 2654 0
 2301 0028 70BD     		pop	{r4, r5, r6, pc}
 2302              	.LVL173:
 2303              	.L165:
2342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 2304              		.loc 1 2342 0
 2305 002a 002A     		cmp	r2, #0
 2306 002c 00F08D80 		beq	.L167
2343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 2307              		.loc 1 2343 0
 2308 0030 15F00102 		ands	r2, r5, #1
 2309              	.LVL174:
 2310 0034 03D1     		bne	.L168
2344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2311              		.loc 1 2344 0
 2312 0036 8F4E     		ldr	r6, .L189
 2313 0038 3042     		tst	r0, r6
 2314 003a 00F08680 		beq	.L167
 2315              	.L168:
2348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2316              		.loc 1 2348 0
 2317 003e 13F0010F 		tst	r3, #1
 2318 0042 09D0     		beq	.L169
2348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2319              		.loc 1 2348 0 is_stmt 0 discriminator 1
 2320 0044 10F4807F 		tst	r0, #256
 2321 0048 06D0     		beq	.L169
2350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2322              		.loc 1 2350 0 is_stmt 1
 2323 004a 0125     		movs	r5, #1
 2324              	.LVL175:
 2325 004c 0D62     		str	r5, [r1, #32]
2352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 2326              		.loc 1 2352 0
 2327 004e D4F88010 		ldr	r1, [r4, #128]
 2328 0052 2943     		orrs	r1, r1, r5
 2329 0054 C4F88010 		str	r1, [r4, #128]
 2330              	.L169:
2356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2331              		.loc 1 2356 0
 2332 0058 13F0020F 		tst	r3, #2
 2333 005c 09D0     		beq	.L170
2356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2334              		.loc 1 2356 0 is_stmt 0 discriminator 1
 2335 005e 42B1     		cbz	r2, .L170
2358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2336              		.loc 1 2358 0 is_stmt 1
 2337 0060 2168     		ldr	r1, [r4]
 2338 0062 0225     		movs	r5, #2
 2339 0064 0D62     		str	r5, [r1, #32]
2360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 2340              		.loc 1 2360 0
 2341 0066 D4F88010 		ldr	r1, [r4, #128]
 2342 006a 41F00401 		orr	r1, r1, #4
 2343 006e C4F88010 		str	r1, [r4, #128]
 2344              	.L170:
2364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2345              		.loc 1 2364 0
 2346 0072 13F0040F 		tst	r3, #4
 2347 0076 09D0     		beq	.L171
2364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2348              		.loc 1 2364 0 is_stmt 0 discriminator 1
 2349 0078 42B1     		cbz	r2, .L171
2366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2350              		.loc 1 2366 0 is_stmt 1
 2351 007a 2168     		ldr	r1, [r4]
 2352 007c 0425     		movs	r5, #4
 2353 007e 0D62     		str	r5, [r1, #32]
2368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 2354              		.loc 1 2368 0
 2355 0080 D4F88010 		ldr	r1, [r4, #128]
 2356 0084 41F00201 		orr	r1, r1, #2
 2357 0088 C4F88010 		str	r1, [r4, #128]
 2358              	.L171:
2377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 2359              		.loc 1 2377 0
 2360 008c 13F0080F 		tst	r3, #8
 2361 0090 0BD0     		beq	.L172
2378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2362              		.loc 1 2378 0
 2363 0092 10F0200F 		tst	r0, #32
 2364 0096 00D1     		bne	.L173
2378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2365              		.loc 1 2378 0 is_stmt 0 discriminator 1
 2366 0098 3AB1     		cbz	r2, .L172
 2367              	.L173:
2382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2368              		.loc 1 2382 0 is_stmt 1
 2369 009a 2268     		ldr	r2, [r4]
 2370 009c 0821     		movs	r1, #8
 2371 009e 1162     		str	r1, [r2, #32]
2384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 2372              		.loc 1 2384 0
 2373 00a0 D4F88020 		ldr	r2, [r4, #128]
 2374 00a4 0A43     		orrs	r2, r2, r1
 2375 00a6 C4F88020 		str	r2, [r4, #128]
 2376              	.L172:
2388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2377              		.loc 1 2388 0
 2378 00aa 13F4006F 		tst	r3, #2048
 2379 00ae 0CD0     		beq	.L174
2388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2380              		.loc 1 2388 0 is_stmt 0 discriminator 1
 2381 00b0 10F0806F 		tst	r0, #67108864
 2382 00b4 09D0     		beq	.L174
2390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2383              		.loc 1 2390 0 is_stmt 1
 2384 00b6 2268     		ldr	r2, [r4]
 2385 00b8 4FF40061 		mov	r1, #2048
 2386 00bc 1162     		str	r1, [r2, #32]
2392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 2387              		.loc 1 2392 0
 2388 00be D4F88020 		ldr	r2, [r4, #128]
 2389 00c2 42F02002 		orr	r2, r2, #32
 2390 00c6 C4F88020 		str	r2, [r4, #128]
 2391              	.L174:
2396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2392              		.loc 1 2396 0
 2393 00ca D4F88020 		ldr	r2, [r4, #128]
 2394 00ce 002A     		cmp	r2, #0
 2395 00d0 AAD0     		beq	.L164
2404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2396              		.loc 1 2404 0
 2397 00d2 13F0200F 		tst	r3, #32
 2398 00d6 06D0     		beq	.L175
2405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2399              		.loc 1 2405 0
 2400 00d8 10F0200F 		tst	r0, #32
 2401 00dc 03D0     		beq	.L175
2408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
 2402              		.loc 1 2408 0
 2403 00de 636E     		ldr	r3, [r4, #100]
 2404              	.LVL176:
 2405 00e0 0BB1     		cbz	r3, .L175
2410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
 2406              		.loc 1 2410 0
 2407 00e2 2046     		mov	r0, r4
 2408              	.LVL177:
 2409 00e4 9847     		blx	r3
 2410              	.LVL178:
 2411              	.L175:
2419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 2412              		.loc 1 2419 0
 2413 00e6 D4F88020 		ldr	r2, [r4, #128]
 2414              	.LVL179:
2420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2415              		.loc 1 2420 0
 2416 00ea 2368     		ldr	r3, [r4]
 2417 00ec 9B68     		ldr	r3, [r3, #8]
 2418 00ee 13F0400F 		tst	r3, #64
 2419 00f2 02D1     		bne	.L176
2420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2420              		.loc 1 2420 0 is_stmt 0 discriminator 1
 2421 00f4 12F0280F 		tst	r2, #40
 2422 00f8 20D0     		beq	.L177
 2423              	.L176:
2426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2424              		.loc 1 2426 0 is_stmt 1
 2425 00fa 2046     		mov	r0, r4
 2426 00fc FFF7FEFF 		bl	UART_EndRxTransfer
 2427              	.LVL180:
2429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
 2428              		.loc 1 2429 0
 2429 0100 2368     		ldr	r3, [r4]
 2430 0102 9A68     		ldr	r2, [r3, #8]
 2431 0104 12F0400F 		tst	r2, #64
 2432 0108 14D0     		beq	.L178
2431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2433              		.loc 1 2431 0
 2434 010a 9A68     		ldr	r2, [r3, #8]
 2435 010c 22F04002 		bic	r2, r2, #64
 2436 0110 9A60     		str	r2, [r3, #8]
2434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           {
 2437              		.loc 1 2434 0
 2438 0112 236F     		ldr	r3, [r4, #112]
 2439 0114 53B1     		cbz	r3, .L179
2438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2440              		.loc 1 2438 0
 2441 0116 584A     		ldr	r2, .L189+4
 2442 0118 9A63     		str	r2, [r3, #56]
2441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             {
 2443              		.loc 1 2441 0
 2444 011a 206F     		ldr	r0, [r4, #112]
 2445 011c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2446              	.LVL181:
 2447 0120 0028     		cmp	r0, #0
 2448 0122 81D0     		beq	.L164
2444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****             }
 2449              		.loc 1 2444 0
 2450 0124 206F     		ldr	r0, [r4, #112]
 2451 0126 836B     		ldr	r3, [r0, #56]
 2452 0128 9847     		blx	r3
 2453              	.LVL182:
 2454 012a 7DE7     		b	.L164
 2455              	.L179:
2455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2456              		.loc 1 2455 0
 2457 012c 2046     		mov	r0, r4
 2458 012e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2459              	.LVL183:
 2460 0132 79E7     		b	.L164
 2461              	.L178:
2468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2462              		.loc 1 2468 0
 2463 0134 2046     		mov	r0, r4
 2464 0136 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2465              	.LVL184:
 2466 013a 75E7     		b	.L164
 2467              	.LVL185:
 2468              	.L177:
2481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2469              		.loc 1 2481 0
 2470 013c 2046     		mov	r0, r4
 2471 013e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2472              	.LVL186:
2483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 2473              		.loc 1 2483 0
 2474 0142 0023     		movs	r3, #0
 2475 0144 C4F88030 		str	r3, [r4, #128]
 2476 0148 6EE7     		b	.L164
 2477              	.LVL187:
 2478              	.L167:
2492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       &&((isrflags & USART_ISR_IDLE) != 0U)
 2479              		.loc 1 2492 0
 2480 014a 226E     		ldr	r2, [r4, #96]
 2481 014c 012A     		cmp	r2, #1
 2482 014e 12D0     		beq	.L186
 2483              	.L180:
2586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 2484              		.loc 1 2586 0
 2485 0150 13F4801F 		tst	r3, #1048576
 2486 0154 02D0     		beq	.L183
2586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 2487              		.loc 1 2586 0 is_stmt 0 discriminator 1
 2488 0156 15F4800F 		tst	r5, #4194304
 2489 015a 77D1     		bne	.L187
 2490              	.L183:
2609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 2491              		.loc 1 2609 0 is_stmt 1
 2492 015c 13F0800F 		tst	r3, #128
 2493 0160 7BD0     		beq	.L184
2610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2494              		.loc 1 2610 0
 2495 0162 10F0800F 		tst	r0, #128
 2496 0166 78D0     		beq	.L184
2613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2497              		.loc 1 2613 0
 2498 0168 A36E     		ldr	r3, [r4, #104]
 2499              	.LVL188:
 2500 016a 002B     		cmp	r3, #0
 2501 016c 3FF45CAF 		beq	.L164
2615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 2502              		.loc 1 2615 0
 2503 0170 2046     		mov	r0, r4
 2504              	.LVL189:
 2505 0172 9847     		blx	r3
 2506              	.LVL190:
 2507 0174 58E7     		b	.L164
 2508              	.LVL191:
 2509              	.L186:
2493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       &&((cr1its & USART_ISR_IDLE) != 0U))
 2510              		.loc 1 2493 0
 2511 0176 13F0100F 		tst	r3, #16
 2512 017a E9D0     		beq	.L180
2494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 2513              		.loc 1 2494 0
 2514 017c 10F0100F 		tst	r0, #16
 2515 0180 E6D0     		beq	.L180
2496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2516              		.loc 1 2496 0
 2517 0182 1023     		movs	r3, #16
 2518              	.LVL192:
 2519 0184 0B62     		str	r3, [r1, #32]
2499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2520              		.loc 1 2499 0
 2521 0186 2268     		ldr	r2, [r4]
 2522 0188 9368     		ldr	r3, [r2, #8]
 2523 018a 13F0400F 		tst	r3, #64
 2524 018e 37D0     		beq	.L181
 2525              	.LBB2:
2505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (  (nb_remaining_rx_data > 0U)
 2526              		.loc 1 2505 0
 2527 0190 216F     		ldr	r1, [r4, #112]
 2528 0192 0B68     		ldr	r3, [r1]
 2529 0194 5B68     		ldr	r3, [r3, #4]
 2530 0196 9BB2     		uxth	r3, r3
 2531              	.LVL193:
2506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           &&(nb_remaining_rx_data < huart->RxXferSize))
 2532              		.loc 1 2506 0
 2533 0198 002B     		cmp	r3, #0
 2534 019a 3FF445AF 		beq	.L164
2507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 2535              		.loc 1 2507 0
 2536 019e B4F85800 		ldrh	r0, [r4, #88]
 2537              	.LVL194:
 2538 01a2 9842     		cmp	r0, r3
 2539 01a4 7FF640AF 		bls	.L164
2510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2540              		.loc 1 2510 0
 2541 01a8 A4F85A30 		strh	r3, [r4, #90]	@ movhi
2513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
 2542              		.loc 1 2513 0
 2543 01ac 0B68     		ldr	r3, [r1]
 2544              	.LVL195:
 2545 01ae 1B68     		ldr	r3, [r3]
 2546 01b0 13F0200F 		tst	r3, #32
 2547 01b4 09D0     		beq	.L188
 2548              	.LVL196:
 2549              	.L182:
2537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
 2550              		.loc 1 2537 0
 2551 01b6 B4F85810 		ldrh	r1, [r4, #88]
 2552 01ba B4F85A30 		ldrh	r3, [r4, #90]
 2553 01be C91A     		subs	r1, r1, r3
 2554 01c0 89B2     		uxth	r1, r1
 2555 01c2 2046     		mov	r0, r4
 2556 01c4 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 2557              	.LVL197:
 2558 01c8 2EE7     		b	.L164
 2559              	.LVL198:
 2560              	.L188:
2516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2561              		.loc 1 2516 0
 2562 01ca 1368     		ldr	r3, [r2]
 2563 01cc 23F48073 		bic	r3, r3, #256
 2564 01d0 1360     		str	r3, [r2]
 2565              	.LVL199:
2517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2566              		.loc 1 2517 0
 2567 01d2 2268     		ldr	r2, [r4]
 2568 01d4 9368     		ldr	r3, [r2, #8]
 2569 01d6 23F00103 		bic	r3, r3, #1
 2570 01da 9360     		str	r3, [r2, #8]
2521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2571              		.loc 1 2521 0
 2572 01dc 2268     		ldr	r2, [r4]
 2573 01de 9368     		ldr	r3, [r2, #8]
 2574 01e0 23F04003 		bic	r3, r3, #64
 2575 01e4 9360     		str	r3, [r2, #8]
2524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2576              		.loc 1 2524 0
 2577 01e6 2023     		movs	r3, #32
 2578 01e8 E367     		str	r3, [r4, #124]
2525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2579              		.loc 1 2525 0
 2580 01ea 0023     		movs	r3, #0
 2581 01ec 2366     		str	r3, [r4, #96]
2527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2582              		.loc 1 2527 0
 2583 01ee 2268     		ldr	r2, [r4]
 2584 01f0 1368     		ldr	r3, [r2]
 2585 01f2 23F01003 		bic	r3, r3, #16
 2586 01f6 1360     		str	r3, [r2]
2530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
 2587              		.loc 1 2530 0
 2588 01f8 206F     		ldr	r0, [r4, #112]
 2589 01fa FFF7FEFF 		bl	HAL_DMA_Abort
 2590              	.LVL200:
 2591 01fe DAE7     		b	.L182
 2592              	.LVL201:
 2593              	.L181:
 2594              	.LBE2:
 2595              	.LBB3:
2547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (  (huart->RxXferCount > 0U)
 2596              		.loc 1 2547 0
 2597 0200 B4F85810 		ldrh	r1, [r4, #88]
 2598 0204 B4F85A30 		ldrh	r3, [r4, #90]
 2599 0208 C91A     		subs	r1, r1, r3
 2600 020a 89B2     		uxth	r1, r1
 2601              	.LVL202:
2548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           &&(nb_rx_data > 0U) )
 2602              		.loc 1 2548 0
 2603 020c B4F85A30 		ldrh	r3, [r4, #90]
 2604 0210 9BB2     		uxth	r3, r3
 2605 0212 002B     		cmp	r3, #0
 2606 0214 3FF408AF 		beq	.L164
2549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 2607              		.loc 1 2549 0
 2608 0218 0029     		cmp	r1, #0
 2609 021a 3FF405AF 		beq	.L164
2559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2610              		.loc 1 2559 0
 2611 021e 1368     		ldr	r3, [r2]
 2612 0220 23F49073 		bic	r3, r3, #288
 2613 0224 1360     		str	r3, [r2]
2562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
 2614              		.loc 1 2562 0
 2615 0226 2268     		ldr	r2, [r4]
 2616 0228 9368     		ldr	r3, [r2, #8]
 2617 022a 23F00103 		bic	r3, r3, #1
 2618 022e 9360     		str	r3, [r2, #8]
2566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2619              		.loc 1 2566 0
 2620 0230 2023     		movs	r3, #32
 2621 0232 E367     		str	r3, [r4, #124]
2567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2622              		.loc 1 2567 0
 2623 0234 0023     		movs	r3, #0
 2624 0236 2366     		str	r3, [r4, #96]
2570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2625              		.loc 1 2570 0
 2626 0238 6366     		str	r3, [r4, #100]
2572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 2627              		.loc 1 2572 0
 2628 023a 2268     		ldr	r2, [r4]
 2629 023c 1368     		ldr	r3, [r2]
 2630 023e 23F01003 		bic	r3, r3, #16
 2631 0242 1360     		str	r3, [r2]
2578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
 2632              		.loc 1 2578 0
 2633 0244 2046     		mov	r0, r4
 2634              	.LVL203:
 2635 0246 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 2636              	.LVL204:
 2637 024a EDE6     		b	.L164
 2638              	.LVL205:
 2639              	.L187:
 2640              	.LBE3:
2588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2641              		.loc 1 2588 0
 2642 024c 4FF48013 		mov	r3, #1048576
 2643              	.LVL206:
 2644 0250 0B62     		str	r3, [r1, #32]
2598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2645              		.loc 1 2598 0
 2646 0252 2046     		mov	r0, r4
 2647              	.LVL207:
 2648 0254 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2649              	.LVL208:
2600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 2650              		.loc 1 2600 0
 2651 0258 E6E6     		b	.L164
 2652              	.LVL209:
 2653              	.L184:
2621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 2654              		.loc 1 2621 0
 2655 025a 13F0400F 		tst	r3, #64
 2656 025e 3FF4E3AE 		beq	.L164
2621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 2657              		.loc 1 2621 0 is_stmt 0 discriminator 1
 2658 0262 10F0400F 		tst	r0, #64
 2659 0266 3FF4DFAE 		beq	.L164
2623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     return;
 2660              		.loc 1 2623 0 is_stmt 1
 2661 026a 2046     		mov	r0, r4
 2662              	.LVL210:
 2663 026c FFF7FEFF 		bl	UART_EndTransmit_IT
 2664              	.LVL211:
2624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 2665              		.loc 1 2624 0
 2666 0270 DAE6     		b	.L164
 2667              	.L190:
 2668 0272 00BF     		.align	2
 2669              	.L189:
 2670 0274 20010004 		.word	67109152
 2671 0278 00000000 		.word	UART_DMAAbortOnError
 2672              		.cfi_endproc
 2673              	.LFE339:
 2675              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 2676              		.align	1
 2677              		.syntax unified
 2678              		.thumb
 2679              		.thumb_func
 2680              		.fpu fpv4-sp-d16
 2682              	UART_RxISR_8BIT:
 2683              	.LFB381:
4324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
4326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
4327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
4329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
4330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
4331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 2684              		.loc 1 4331 0
 2685              		.cfi_startproc
 2686              		@ args = 0, pretend = 0, frame = 0
 2687              		@ frame_needed = 0, uses_anonymous_args = 0
 2688              	.LVL212:
4332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2689              		.loc 1 4332 0
 2690 0000 B0F85C30 		ldrh	r3, [r0, #92]
 2691              	.LVL213:
4333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
4334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2692              		.loc 1 4336 0
 2693 0004 C26F     		ldr	r2, [r0, #124]
 2694 0006 222A     		cmp	r2, #34
 2695 0008 05D0     		beq	.L200
4337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
4338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
4339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
4340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr++;
4341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
4342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
4344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
4345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
4346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
4348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
4350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
4354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
4357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
4360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Check current reception Mode :
4362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
4364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
4365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Disable IDLE interrupt */
4366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
4367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
4374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
4375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
4376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
4377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
4378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Standard reception API called */
4379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
4387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
4389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
4390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
4391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
4392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2696              		.loc 1 4393 0
 2697 000a 0268     		ldr	r2, [r0]
 2698 000c 138B     		ldrh	r3, [r2, #24]
 2699              	.LVL214:
 2700 000e 43F00803 		orr	r3, r3, #8
 2701 0012 1383     		strh	r3, [r2, #24]	@ movhi
 2702              	.LVL215:
4394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
4395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 2703              		.loc 1 4395 0
 2704 0014 7047     		bx	lr
 2705              	.LVL216:
 2706              	.L200:
4338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 2707              		.loc 1 4338 0
 2708 0016 0268     		ldr	r2, [r0]
 2709 0018 918C     		ldrh	r1, [r2, #36]
 2710              	.LVL217:
4339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr++;
 2711              		.loc 1 4339 0
 2712 001a DBB2     		uxtb	r3, r3
 2713              	.LVL218:
 2714 001c 426D     		ldr	r2, [r0, #84]
 2715 001e 0B40     		ands	r3, r3, r1
 2716 0020 1370     		strb	r3, [r2]
 2717              	.LVL219:
4340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 2718              		.loc 1 4340 0
 2719 0022 436D     		ldr	r3, [r0, #84]
 2720 0024 0133     		adds	r3, r3, #1
 2721 0026 4365     		str	r3, [r0, #84]
4341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2722              		.loc 1 4341 0
 2723 0028 B0F85A30 		ldrh	r3, [r0, #90]
 2724 002c 013B     		subs	r3, r3, #1
 2725 002e 9BB2     		uxth	r3, r3
 2726 0030 A0F85A30 		strh	r3, [r0, #90]	@ movhi
4343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2727              		.loc 1 4343 0
 2728 0034 B0F85A30 		ldrh	r3, [r0, #90]
 2729 0038 9BB2     		uxth	r3, r3
 2730 003a 0BBB     		cbnz	r3, .L197
4331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2731              		.loc 1 4331 0
 2732 003c 10B5     		push	{r4, lr}
 2733              		.cfi_def_cfa_offset 8
 2734              		.cfi_offset 4, -8
 2735              		.cfi_offset 14, -4
 2736 003e 0446     		mov	r4, r0
4349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2737              		.loc 1 4349 0
 2738 0040 0268     		ldr	r2, [r0]
 2739 0042 1368     		ldr	r3, [r2]
 2740 0044 23F49073 		bic	r3, r3, #288
 2741 0048 1360     		str	r3, [r2]
4353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2742              		.loc 1 4353 0
 2743 004a 0268     		ldr	r2, [r0]
 2744 004c 9368     		ldr	r3, [r2, #8]
 2745 004e 23F00103 		bic	r3, r3, #1
 2746 0052 9360     		str	r3, [r2, #8]
4356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2747              		.loc 1 4356 0
 2748 0054 2023     		movs	r3, #32
 2749 0056 C367     		str	r3, [r0, #124]
4359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2750              		.loc 1 4359 0
 2751 0058 0023     		movs	r3, #0
 2752 005a 4366     		str	r3, [r0, #100]
4363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 2753              		.loc 1 4363 0
 2754 005c 036E     		ldr	r3, [r0, #96]
 2755 005e 012B     		cmp	r3, #1
 2756 0060 04D0     		beq	.L201
4384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2757              		.loc 1 4384 0
 2758 0062 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2759              	.LVL220:
 2760              	.L195:
4387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 2761              		.loc 1 4387 0
 2762 0066 0023     		movs	r3, #0
 2763 0068 2366     		str	r3, [r4, #96]
 2764              		.loc 1 4395 0
 2765 006a 10BD     		pop	{r4, pc}
 2766              	.LVL221:
 2767              	.L201:
4366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2768              		.loc 1 4366 0
 2769 006c 0268     		ldr	r2, [r0]
 2770 006e 1368     		ldr	r3, [r2]
 2771 0070 23F01003 		bic	r3, r3, #16
 2772 0074 1360     		str	r3, [r2]
4373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
 2773              		.loc 1 4373 0
 2774 0076 B0F85810 		ldrh	r1, [r0, #88]
 2775              	.LVL222:
 2776 007a FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 2777              	.LVL223:
 2778 007e F2E7     		b	.L195
 2779              	.LVL224:
 2780              	.L197:
 2781              		.cfi_def_cfa_offset 0
 2782              		.cfi_restore 4
 2783              		.cfi_restore 14
 2784 0080 7047     		bx	lr
 2785              		.cfi_endproc
 2786              	.LFE381:
 2788              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 2789              		.align	1
 2790              		.syntax unified
 2791              		.thumb
 2792              		.thumb_func
 2793              		.fpu fpv4-sp-d16
 2795              	UART_RxISR_16BIT:
 2796              	.LFB382:
4396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
4398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
4399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
4400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
4401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
4402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   * @retval None
4403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   */
4404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
4405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** {
 2797              		.loc 1 4405 0
 2798              		.cfi_startproc
 2799              		@ args = 0, pretend = 0, frame = 0
 2800              		@ frame_needed = 0, uses_anonymous_args = 0
 2801              	.LVL225:
4406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
4407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2802              		.loc 1 4407 0
 2803 0000 B0F85C30 		ldrh	r3, [r0, #92]
 2804              	.LVL226:
4408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
4409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
4411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2805              		.loc 1 4411 0
 2806 0004 C26F     		ldr	r2, [r0, #124]
 2807 0006 222A     		cmp	r2, #34
 2808 0008 05D0     		beq	.L211
4412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
4413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
4414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
4415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
4416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
4417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
4418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
4420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
4421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
4422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
4423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
4424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
4426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
4427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
4429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
4430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
4432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
4433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
4435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
4436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       /* Check current reception Mode :
4438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
4439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
4440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
4441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Disable IDLE interrupt */
4442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
4443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
4444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
4446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
4447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
4449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
4450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
4451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
4452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       else
4453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
4454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /* Standard reception API called */
4455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #else
4459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
4463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
4464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
4465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
4466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   else
4467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
4468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2809              		.loc 1 4469 0
 2810 000a 0268     		ldr	r2, [r0]
 2811 000c 138B     		ldrh	r3, [r2, #24]
 2812              	.LVL227:
 2813 000e 43F00803 		orr	r3, r3, #8
 2814 0012 1383     		strh	r3, [r2, #24]	@ movhi
 2815              	.LVL228:
4470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
4471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 2816              		.loc 1 4471 0
 2817 0014 7047     		bx	lr
 2818              	.LVL229:
 2819              	.L211:
4413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 2820              		.loc 1 4413 0
 2821 0016 0268     		ldr	r2, [r0]
 2822 0018 918C     		ldrh	r1, [r2, #36]
 2823              	.LVL230:
4414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 2824              		.loc 1 4414 0
 2825 001a 426D     		ldr	r2, [r0, #84]
 2826              	.LVL231:
4415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 2827              		.loc 1 4415 0
 2828 001c 0B40     		ands	r3, r3, r1
 2829              	.LVL232:
 2830 001e 1380     		strh	r3, [r2]	@ movhi
 2831              	.LVL233:
4416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 2832              		.loc 1 4416 0
 2833 0020 436D     		ldr	r3, [r0, #84]
 2834 0022 0233     		adds	r3, r3, #2
 2835 0024 4365     		str	r3, [r0, #84]
4417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2836              		.loc 1 4417 0
 2837 0026 B0F85A30 		ldrh	r3, [r0, #90]
 2838 002a 013B     		subs	r3, r3, #1
 2839 002c 9BB2     		uxth	r3, r3
 2840 002e A0F85A30 		strh	r3, [r0, #90]	@ movhi
4419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2841              		.loc 1 4419 0
 2842 0032 B0F85A30 		ldrh	r3, [r0, #90]
 2843 0036 9BB2     		uxth	r3, r3
 2844 0038 0BBB     		cbnz	r3, .L208
4405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 2845              		.loc 1 4405 0
 2846 003a 10B5     		push	{r4, lr}
 2847              		.cfi_def_cfa_offset 8
 2848              		.cfi_offset 4, -8
 2849              		.cfi_offset 14, -4
 2850 003c 0446     		mov	r4, r0
4425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 2851              		.loc 1 4425 0
 2852 003e 0268     		ldr	r2, [r0]
 2853              	.LVL234:
 2854 0040 1368     		ldr	r3, [r2]
 2855 0042 23F49073 		bic	r3, r3, #288
 2856 0046 1360     		str	r3, [r2]
4429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2857              		.loc 1 4429 0
 2858 0048 0268     		ldr	r2, [r0]
 2859 004a 9368     		ldr	r3, [r2, #8]
 2860 004c 23F00103 		bic	r3, r3, #1
 2861 0050 9360     		str	r3, [r2, #8]
4432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2862              		.loc 1 4432 0
 2863 0052 2023     		movs	r3, #32
 2864 0054 C367     		str	r3, [r0, #124]
4435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2865              		.loc 1 4435 0
 2866 0056 0023     		movs	r3, #0
 2867 0058 4366     		str	r3, [r0, #100]
4439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 2868              		.loc 1 4439 0
 2869 005a 036E     		ldr	r3, [r0, #96]
 2870 005c 012B     		cmp	r3, #1
 2871 005e 04D0     		beq	.L212
4460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2872              		.loc 1 4460 0
 2873 0060 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2874              	.LVL235:
 2875              	.L206:
4463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 2876              		.loc 1 4463 0
 2877 0064 0023     		movs	r3, #0
 2878 0066 2366     		str	r3, [r4, #96]
 2879              		.loc 1 4471 0
 2880 0068 10BD     		pop	{r4, pc}
 2881              	.LVL236:
 2882              	.L212:
4442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2883              		.loc 1 4442 0
 2884 006a 0268     		ldr	r2, [r0]
 2885 006c 1368     		ldr	r3, [r2]
 2886 006e 23F01003 		bic	r3, r3, #16
 2887 0072 1360     		str	r3, [r2]
4449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
 2888              		.loc 1 4449 0
 2889 0074 B0F85810 		ldrh	r1, [r0, #88]
 2890              	.LVL237:
 2891 0078 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 2892              	.LVL238:
 2893 007c F2E7     		b	.L206
 2894              	.LVL239:
 2895              	.L208:
 2896              		.cfi_def_cfa_offset 0
 2897              		.cfi_restore 4
 2898              		.cfi_restore 14
 2899 007e 7047     		bx	lr
 2900              		.cfi_endproc
 2901              	.LFE382:
 2903              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2904              		.align	1
 2905              		.syntax unified
 2906              		.thumb
 2907              		.thumb_func
 2908              		.fpu fpv4-sp-d16
 2910              	UART_DMARxHalfCplt:
 2911              	.LFB371:
3880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2912              		.loc 1 3880 0
 2913              		.cfi_startproc
 2914              		@ args = 0, pretend = 0, frame = 0
 2915              		@ frame_needed = 0, uses_anonymous_args = 0
 2916              	.LVL240:
 2917 0000 08B5     		push	{r3, lr}
 2918              		.cfi_def_cfa_offset 8
 2919              		.cfi_offset 3, -8
 2920              		.cfi_offset 14, -4
3881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2921              		.loc 1 3881 0
 2922 0002 806A     		ldr	r0, [r0, #40]
 2923              	.LVL241:
3885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 2924              		.loc 1 3885 0
 2925 0004 036E     		ldr	r3, [r0, #96]
 2926 0006 012B     		cmp	r3, #1
 2927 0008 02D0     		beq	.L217
3903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2928              		.loc 1 3903 0
 2929 000a FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2930              	.LVL242:
 2931              	.L213:
3906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2932              		.loc 1 3906 0
 2933 000e 08BD     		pop	{r3, pc}
 2934              	.LVL243:
 2935              	.L217:
3892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2936              		.loc 1 3892 0
 2937 0010 B0F85810 		ldrh	r1, [r0, #88]
 2938 0014 4908     		lsrs	r1, r1, #1
 2939 0016 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 2940              	.LVL244:
 2941 001a F8E7     		b	.L213
 2942              		.cfi_endproc
 2943              	.LFE371:
 2945              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2946              		.align	1
 2947              		.syntax unified
 2948              		.thumb
 2949              		.thumb_func
 2950              		.fpu fpv4-sp-d16
 2952              	UART_DMAReceiveCplt:
 2953              	.LFB370:
3823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2954              		.loc 1 3823 0
 2955              		.cfi_startproc
 2956              		@ args = 0, pretend = 0, frame = 0
 2957              		@ frame_needed = 0, uses_anonymous_args = 0
 2958              	.LVL245:
 2959 0000 08B5     		push	{r3, lr}
 2960              		.cfi_def_cfa_offset 8
 2961              		.cfi_offset 3, -8
 2962              		.cfi_offset 14, -4
3824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2963              		.loc 1 3824 0
 2964 0002 836A     		ldr	r3, [r0, #40]
 2965              	.LVL246:
3827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 2966              		.loc 1 3827 0
 2967 0004 0268     		ldr	r2, [r0]
 2968 0006 1268     		ldr	r2, [r2]
 2969 0008 12F0200F 		tst	r2, #32
 2970 000c 16D1     		bne	.L219
3829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2971              		.loc 1 3829 0
 2972 000e 0022     		movs	r2, #0
 2973 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2974              		.loc 1 3832 0
 2975 0014 1968     		ldr	r1, [r3]
 2976 0016 0A68     		ldr	r2, [r1]
 2977 0018 22F48072 		bic	r2, r2, #256
 2978 001c 0A60     		str	r2, [r1]
3833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2979              		.loc 1 3833 0
 2980 001e 1968     		ldr	r1, [r3]
 2981 0020 8A68     		ldr	r2, [r1, #8]
 2982 0022 22F00102 		bic	r2, r2, #1
 2983 0026 8A60     		str	r2, [r1, #8]
3837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2984              		.loc 1 3837 0
 2985 0028 1968     		ldr	r1, [r3]
 2986 002a 8A68     		ldr	r2, [r1, #8]
 2987 002c 22F04002 		bic	r2, r2, #64
 2988 0030 8A60     		str	r2, [r1, #8]
3840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 2989              		.loc 1 3840 0
 2990 0032 2022     		movs	r2, #32
 2991 0034 DA67     		str	r2, [r3, #124]
3843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 2992              		.loc 1 3843 0
 2993 0036 1A6E     		ldr	r2, [r3, #96]
 2994 0038 012A     		cmp	r2, #1
 2995 003a 06D0     		beq	.L223
 2996              	.L219:
3851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 2997              		.loc 1 3851 0
 2998 003c 1A6E     		ldr	r2, [r3, #96]
 2999 003e 012A     		cmp	r2, #1
 3000 0040 09D0     		beq	.L224
3869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3001              		.loc 1 3869 0
 3002 0042 1846     		mov	r0, r3
 3003              	.LVL247:
 3004 0044 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 3005              	.LVL248:
 3006              	.L218:
3872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3007              		.loc 1 3872 0
 3008 0048 08BD     		pop	{r3, pc}
 3009              	.LVL249:
 3010              	.L223:
3845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 3011              		.loc 1 3845 0
 3012 004a 1968     		ldr	r1, [r3]
 3013 004c 0A68     		ldr	r2, [r1]
 3014 004e 22F01002 		bic	r2, r2, #16
 3015 0052 0A60     		str	r2, [r1]
 3016 0054 F2E7     		b	.L219
 3017              	.L224:
3858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3018              		.loc 1 3858 0
 3019 0056 B3F85810 		ldrh	r1, [r3, #88]
 3020 005a 1846     		mov	r0, r3
 3021              	.LVL250:
 3022 005c FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 3023              	.LVL251:
 3024 0060 F2E7     		b	.L218
 3025              		.cfi_endproc
 3026              	.LFE370:
 3028              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 3029              		.align	1
 3030              		.global	HAL_UART_ReceiverTimeout_Config
 3031              		.syntax unified
 3032              		.thumb
 3033              		.thumb_func
 3034              		.fpu fpv4-sp-d16
 3036              	HAL_UART_ReceiverTimeout_Config:
 3037              	.LFB349:
2832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3038              		.loc 1 2832 0
 3039              		.cfi_startproc
 3040              		@ args = 0, pretend = 0, frame = 0
 3041              		@ frame_needed = 0, uses_anonymous_args = 0
 3042              		@ link register save eliminated.
 3043              	.LVL252:
2833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 3044              		.loc 1 2833 0
 3045 0000 0268     		ldr	r2, [r0]
 3046 0002 044B     		ldr	r3, .L227
 3047 0004 9A42     		cmp	r2, r3
 3048 0006 04D0     		beq	.L225
2836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 3049              		.loc 1 2836 0
 3050 0008 5369     		ldr	r3, [r2, #20]
 3051 000a 03F07F43 		and	r3, r3, #-16777216
 3052 000e 1943     		orrs	r1, r1, r3
 3053              	.LVL253:
 3054 0010 5161     		str	r1, [r2, #20]
 3055              	.L225:
2838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3056              		.loc 1 2838 0
 3057 0012 7047     		bx	lr
 3058              	.L228:
 3059              		.align	2
 3060              	.L227:
 3061 0014 00800040 		.word	1073774592
 3062              		.cfi_endproc
 3063              	.LFE349:
 3065              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 3066              		.align	1
 3067              		.global	HAL_UART_EnableReceiverTimeout
 3068              		.syntax unified
 3069              		.thumb
 3070              		.thumb_func
 3071              		.fpu fpv4-sp-d16
 3073              	HAL_UART_EnableReceiverTimeout:
 3074              	.LFB350:
2847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3075              		.loc 1 2847 0
 3076              		.cfi_startproc
 3077              		@ args = 0, pretend = 0, frame = 0
 3078              		@ frame_needed = 0, uses_anonymous_args = 0
 3079              		@ link register save eliminated.
 3080              	.LVL254:
2848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 3081              		.loc 1 2848 0
 3082 0000 0368     		ldr	r3, [r0]
 3083 0002 104A     		ldr	r2, .L234
 3084 0004 9342     		cmp	r3, r2
 3085 0006 16D0     		beq	.L231
2850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 3086              		.loc 1 2850 0
 3087 0008 826F     		ldr	r2, [r0, #120]
 3088 000a 202A     		cmp	r2, #32
 3089 000c 15D1     		bne	.L232
2853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3090              		.loc 1 2853 0
 3091 000e 90F87420 		ldrb	r2, [r0, #116]	@ zero_extendqisi2
 3092 0012 012A     		cmp	r2, #1
 3093 0014 13D0     		beq	.L233
2853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3094              		.loc 1 2853 0 is_stmt 0 discriminator 2
 3095 0016 0122     		movs	r2, #1
 3096 0018 80F87420 		strb	r2, [r0, #116]
2855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3097              		.loc 1 2855 0 is_stmt 1 discriminator 2
 3098 001c 2422     		movs	r2, #36
 3099 001e 8267     		str	r2, [r0, #120]
2858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3100              		.loc 1 2858 0 discriminator 2
 3101 0020 5A68     		ldr	r2, [r3, #4]
 3102 0022 42F40002 		orr	r2, r2, #8388608
 3103 0026 5A60     		str	r2, [r3, #4]
2860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3104              		.loc 1 2860 0 discriminator 2
 3105 0028 2023     		movs	r3, #32
 3106 002a 8367     		str	r3, [r0, #120]
2863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3107              		.loc 1 2863 0 discriminator 2
 3108 002c 0023     		movs	r3, #0
 3109 002e 80F87430 		strb	r3, [r0, #116]
2865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 3110              		.loc 1 2865 0 discriminator 2
 3111 0032 1846     		mov	r0, r3
 3112              	.LVL255:
 3113 0034 7047     		bx	lr
 3114              	.LVL256:
 3115              	.L231:
2874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 3116              		.loc 1 2874 0
 3117 0036 0120     		movs	r0, #1
 3118              	.LVL257:
 3119 0038 7047     		bx	lr
 3120              	.LVL258:
 3121              	.L232:
2869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 3122              		.loc 1 2869 0
 3123 003a 0220     		movs	r0, #2
 3124              	.LVL259:
 3125 003c 7047     		bx	lr
 3126              	.LVL260:
 3127              	.L233:
2853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3128              		.loc 1 2853 0
 3129 003e 0220     		movs	r0, #2
 3130              	.LVL261:
2876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3131              		.loc 1 2876 0
 3132 0040 7047     		bx	lr
 3133              	.L235:
 3134 0042 00BF     		.align	2
 3135              	.L234:
 3136 0044 00800040 		.word	1073774592
 3137              		.cfi_endproc
 3138              	.LFE350:
 3140              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 3141              		.align	1
 3142              		.global	HAL_UART_DisableReceiverTimeout
 3143              		.syntax unified
 3144              		.thumb
 3145              		.thumb_func
 3146              		.fpu fpv4-sp-d16
 3148              	HAL_UART_DisableReceiverTimeout:
 3149              	.LFB351:
2885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3150              		.loc 1 2885 0
 3151              		.cfi_startproc
 3152              		@ args = 0, pretend = 0, frame = 0
 3153              		@ frame_needed = 0, uses_anonymous_args = 0
 3154              		@ link register save eliminated.
 3155              	.LVL262:
2886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 3156              		.loc 1 2886 0
 3157 0000 0368     		ldr	r3, [r0]
 3158 0002 104A     		ldr	r2, .L241
 3159 0004 9342     		cmp	r3, r2
 3160 0006 16D0     		beq	.L238
2888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 3161              		.loc 1 2888 0
 3162 0008 826F     		ldr	r2, [r0, #120]
 3163 000a 202A     		cmp	r2, #32
 3164 000c 15D1     		bne	.L239
2891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3165              		.loc 1 2891 0
 3166 000e 90F87420 		ldrb	r2, [r0, #116]	@ zero_extendqisi2
 3167 0012 012A     		cmp	r2, #1
 3168 0014 13D0     		beq	.L240
2891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3169              		.loc 1 2891 0 is_stmt 0 discriminator 2
 3170 0016 0122     		movs	r2, #1
 3171 0018 80F87420 		strb	r2, [r0, #116]
2893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3172              		.loc 1 2893 0 is_stmt 1 discriminator 2
 3173 001c 2422     		movs	r2, #36
 3174 001e 8267     		str	r2, [r0, #120]
2896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3175              		.loc 1 2896 0 discriminator 2
 3176 0020 5A68     		ldr	r2, [r3, #4]
 3177 0022 22F40002 		bic	r2, r2, #8388608
 3178 0026 5A60     		str	r2, [r3, #4]
2898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3179              		.loc 1 2898 0 discriminator 2
 3180 0028 2023     		movs	r3, #32
 3181 002a 8367     		str	r3, [r0, #120]
2901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3182              		.loc 1 2901 0 discriminator 2
 3183 002c 0023     		movs	r3, #0
 3184 002e 80F87430 		strb	r3, [r0, #116]
2903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 3185              		.loc 1 2903 0 discriminator 2
 3186 0032 1846     		mov	r0, r3
 3187              	.LVL263:
 3188 0034 7047     		bx	lr
 3189              	.LVL264:
 3190              	.L238:
2912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 3191              		.loc 1 2912 0
 3192 0036 0120     		movs	r0, #1
 3193              	.LVL265:
 3194 0038 7047     		bx	lr
 3195              	.LVL266:
 3196              	.L239:
2907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 3197              		.loc 1 2907 0
 3198 003a 0220     		movs	r0, #2
 3199              	.LVL267:
 3200 003c 7047     		bx	lr
 3201              	.LVL268:
 3202              	.L240:
2891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3203              		.loc 1 2891 0
 3204 003e 0220     		movs	r0, #2
 3205              	.LVL269:
2914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3206              		.loc 1 2914 0
 3207 0040 7047     		bx	lr
 3208              	.L242:
 3209 0042 00BF     		.align	2
 3210              	.L241:
 3211 0044 00800040 		.word	1073774592
 3212              		.cfi_endproc
 3213              	.LFE351:
 3215              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3216              		.align	1
 3217              		.global	HAL_MultiProcessor_EnterMuteMode
 3218              		.syntax unified
 3219              		.thumb
 3220              		.thumb_func
 3221              		.fpu fpv4-sp-d16
 3223              	HAL_MultiProcessor_EnterMuteMode:
 3224              	.LFB354:
2963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3225              		.loc 1 2963 0
 3226              		.cfi_startproc
 3227              		@ args = 0, pretend = 0, frame = 0
 3228              		@ frame_needed = 0, uses_anonymous_args = 0
 3229              		@ link register save eliminated.
 3230              	.LVL270:
2964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 3231              		.loc 1 2964 0
 3232 0000 0268     		ldr	r2, [r0]
 3233 0002 138B     		ldrh	r3, [r2, #24]
 3234 0004 43F00403 		orr	r3, r3, #4
 3235 0008 1383     		strh	r3, [r2, #24]	@ movhi
2965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3236              		.loc 1 2965 0
 3237 000a 7047     		bx	lr
 3238              		.cfi_endproc
 3239              	.LFE354:
 3241              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3242              		.align	1
 3243              		.global	HAL_HalfDuplex_EnableTransmitter
 3244              		.syntax unified
 3245              		.thumb
 3246              		.thumb_func
 3247              		.fpu fpv4-sp-d16
 3249              	HAL_HalfDuplex_EnableTransmitter:
 3250              	.LFB355:
2973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3251              		.loc 1 2973 0
 3252              		.cfi_startproc
 3253              		@ args = 0, pretend = 0, frame = 0
 3254              		@ frame_needed = 0, uses_anonymous_args = 0
 3255              		@ link register save eliminated.
 3256              	.LVL271:
2974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3257              		.loc 1 2974 0
 3258 0000 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 3259 0004 012B     		cmp	r3, #1
 3260 0006 15D0     		beq	.L246
2974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3261              		.loc 1 2974 0 is_stmt 0 discriminator 2
 3262 0008 0123     		movs	r3, #1
 3263 000a 80F87430 		strb	r3, [r0, #116]
2975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3264              		.loc 1 2975 0 is_stmt 1 discriminator 2
 3265 000e 2423     		movs	r3, #36
 3266 0010 8367     		str	r3, [r0, #120]
2978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3267              		.loc 1 2978 0 discriminator 2
 3268 0012 0268     		ldr	r2, [r0]
 3269 0014 1368     		ldr	r3, [r2]
 3270 0016 23F00C03 		bic	r3, r3, #12
 3271 001a 1360     		str	r3, [r2]
2981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3272              		.loc 1 2981 0 discriminator 2
 3273 001c 0268     		ldr	r2, [r0]
 3274 001e 1368     		ldr	r3, [r2]
 3275 0020 43F00803 		orr	r3, r3, #8
 3276 0024 1360     		str	r3, [r2]
2983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3277              		.loc 1 2983 0 discriminator 2
 3278 0026 2023     		movs	r3, #32
 3279 0028 8367     		str	r3, [r0, #120]
2985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3280              		.loc 1 2985 0 discriminator 2
 3281 002a 0023     		movs	r3, #0
 3282 002c 80F87430 		strb	r3, [r0, #116]
2987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 3283              		.loc 1 2987 0 discriminator 2
 3284 0030 1846     		mov	r0, r3
 3285              	.LVL272:
 3286 0032 7047     		bx	lr
 3287              	.LVL273:
 3288              	.L246:
2974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3289              		.loc 1 2974 0
 3290 0034 0220     		movs	r0, #2
 3291              	.LVL274:
2988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3292              		.loc 1 2988 0
 3293 0036 7047     		bx	lr
 3294              		.cfi_endproc
 3295              	.LFE355:
 3297              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3298              		.align	1
 3299              		.global	HAL_HalfDuplex_EnableReceiver
 3300              		.syntax unified
 3301              		.thumb
 3302              		.thumb_func
 3303              		.fpu fpv4-sp-d16
 3305              	HAL_HalfDuplex_EnableReceiver:
 3306              	.LFB356:
2996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3307              		.loc 1 2996 0
 3308              		.cfi_startproc
 3309              		@ args = 0, pretend = 0, frame = 0
 3310              		@ frame_needed = 0, uses_anonymous_args = 0
 3311              		@ link register save eliminated.
 3312              	.LVL275:
2997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3313              		.loc 1 2997 0
 3314 0000 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 3315 0004 012B     		cmp	r3, #1
 3316 0006 15D0     		beq	.L249
2997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3317              		.loc 1 2997 0 is_stmt 0 discriminator 2
 3318 0008 0123     		movs	r3, #1
 3319 000a 80F87430 		strb	r3, [r0, #116]
2998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3320              		.loc 1 2998 0 is_stmt 1 discriminator 2
 3321 000e 2423     		movs	r3, #36
 3322 0010 8367     		str	r3, [r0, #120]
3001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3323              		.loc 1 3001 0 discriminator 2
 3324 0012 0268     		ldr	r2, [r0]
 3325 0014 1368     		ldr	r3, [r2]
 3326 0016 23F00C03 		bic	r3, r3, #12
 3327 001a 1360     		str	r3, [r2]
3004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3328              		.loc 1 3004 0 discriminator 2
 3329 001c 0268     		ldr	r2, [r0]
 3330 001e 1368     		ldr	r3, [r2]
 3331 0020 43F00403 		orr	r3, r3, #4
 3332 0024 1360     		str	r3, [r2]
3006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3333              		.loc 1 3006 0 discriminator 2
 3334 0026 2023     		movs	r3, #32
 3335 0028 8367     		str	r3, [r0, #120]
3008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3336              		.loc 1 3008 0 discriminator 2
 3337 002a 0023     		movs	r3, #0
 3338 002c 80F87430 		strb	r3, [r0, #116]
3010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 3339              		.loc 1 3010 0 discriminator 2
 3340 0030 1846     		mov	r0, r3
 3341              	.LVL276:
 3342 0032 7047     		bx	lr
 3343              	.LVL277:
 3344              	.L249:
2997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3345              		.loc 1 2997 0
 3346 0034 0220     		movs	r0, #2
 3347              	.LVL278:
3011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3348              		.loc 1 3011 0
 3349 0036 7047     		bx	lr
 3350              		.cfi_endproc
 3351              	.LFE356:
 3353              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3354              		.align	1
 3355              		.global	HAL_LIN_SendBreak
 3356              		.syntax unified
 3357              		.thumb
 3358              		.thumb_func
 3359              		.fpu fpv4-sp-d16
 3361              	HAL_LIN_SendBreak:
 3362              	.LFB357:
3020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 3363              		.loc 1 3020 0
 3364              		.cfi_startproc
 3365              		@ args = 0, pretend = 0, frame = 0
 3366              		@ frame_needed = 0, uses_anonymous_args = 0
 3367              		@ link register save eliminated.
 3368              	.LVL279:
3024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3369              		.loc 1 3024 0
 3370 0000 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 3371 0004 012B     		cmp	r3, #1
 3372 0006 10D0     		beq	.L252
3024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3373              		.loc 1 3024 0 is_stmt 0 discriminator 2
 3374 0008 0123     		movs	r3, #1
 3375 000a 80F87430 		strb	r3, [r0, #116]
3026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3376              		.loc 1 3026 0 is_stmt 1 discriminator 2
 3377 000e 2423     		movs	r3, #36
 3378 0010 8367     		str	r3, [r0, #120]
3029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3379              		.loc 1 3029 0 discriminator 2
 3380 0012 0268     		ldr	r2, [r0]
 3381 0014 138B     		ldrh	r3, [r2, #24]
 3382 0016 43F00203 		orr	r3, r3, #2
 3383 001a 1383     		strh	r3, [r2, #24]	@ movhi
3031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3384              		.loc 1 3031 0 discriminator 2
 3385 001c 2023     		movs	r3, #32
 3386 001e 8367     		str	r3, [r0, #120]
3033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3387              		.loc 1 3033 0 discriminator 2
 3388 0020 0023     		movs	r3, #0
 3389 0022 80F87430 		strb	r3, [r0, #116]
3035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 3390              		.loc 1 3035 0 discriminator 2
 3391 0026 1846     		mov	r0, r3
 3392              	.LVL280:
 3393 0028 7047     		bx	lr
 3394              	.LVL281:
 3395              	.L252:
3024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3396              		.loc 1 3024 0
 3397 002a 0220     		movs	r0, #2
 3398              	.LVL282:
3036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3399              		.loc 1 3036 0
 3400 002c 7047     		bx	lr
 3401              		.cfi_endproc
 3402              	.LFE357:
 3404              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3405              		.align	1
 3406              		.global	HAL_UART_GetState
 3407              		.syntax unified
 3408              		.thumb
 3409              		.thumb_func
 3410              		.fpu fpv4-sp-d16
 3412              	HAL_UART_GetState:
 3413              	.LFB358:
3065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t temp1;
 3414              		.loc 1 3065 0
 3415              		.cfi_startproc
 3416              		@ args = 0, pretend = 0, frame = 0
 3417              		@ frame_needed = 0, uses_anonymous_args = 0
 3418              		@ link register save eliminated.
 3419              	.LVL283:
3068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 3420              		.loc 1 3068 0
 3421 0000 826F     		ldr	r2, [r0, #120]
 3422              	.LVL284:
3069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3423              		.loc 1 3069 0
 3424 0002 C06F     		ldr	r0, [r0, #124]
 3425              	.LVL285:
3072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3426              		.loc 1 3072 0
 3427 0004 1043     		orrs	r0, r0, r2
 3428              	.LVL286:
 3429 0006 7047     		bx	lr
 3430              		.cfi_endproc
 3431              	.LFE358:
 3433              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3434              		.align	1
 3435              		.global	HAL_UART_GetError
 3436              		.syntax unified
 3437              		.thumb
 3438              		.thumb_func
 3439              		.fpu fpv4-sp-d16
 3441              	HAL_UART_GetError:
 3442              	.LFB359:
3081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 3443              		.loc 1 3081 0
 3444              		.cfi_startproc
 3445              		@ args = 0, pretend = 0, frame = 0
 3446              		@ frame_needed = 0, uses_anonymous_args = 0
 3447              		@ link register save eliminated.
 3448              	.LVL287:
3082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 3449              		.loc 1 3082 0
 3450 0000 D0F88000 		ldr	r0, [r0, #128]
 3451              	.LVL288:
3083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** /**
 3452              		.loc 1 3083 0
 3453 0004 7047     		bx	lr
 3454              		.cfi_endproc
 3455              	.LFE359:
 3457              		.global	__aeabi_uldivmod
 3458              		.section	.text.UART_SetConfig,"ax",%progbits
 3459              		.align	1
 3460              		.global	UART_SetConfig
 3461              		.syntax unified
 3462              		.thumb
 3463              		.thumb_func
 3464              		.fpu fpv4-sp-d16
 3466              	UART_SetConfig:
 3467              	.LFB360:
3129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t tmpreg;
 3468              		.loc 1 3129 0
 3469              		.cfi_startproc
 3470              		@ args = 0, pretend = 0, frame = 0
 3471              		@ frame_needed = 0, uses_anonymous_args = 0
 3472              	.LVL289:
 3473 0000 2DE9D848 		push	{r3, r4, r6, r7, fp, lr}
 3474              		.cfi_def_cfa_offset 24
 3475              		.cfi_offset 3, -24
 3476              		.cfi_offset 4, -20
 3477              		.cfi_offset 6, -16
 3478              		.cfi_offset 7, -12
 3479              		.cfi_offset 11, -8
 3480              		.cfi_offset 14, -4
 3481 0004 0446     		mov	r4, r0
 3482              	.LVL290:
3143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 3483              		.loc 1 3143 0
 3484 0006 0168     		ldr	r1, [r0]
3168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 3485              		.loc 1 3168 0
 3486 0008 8368     		ldr	r3, [r0, #8]
 3487 000a 0269     		ldr	r2, [r0, #16]
 3488 000c 1343     		orrs	r3, r3, r2
 3489 000e 4269     		ldr	r2, [r0, #20]
 3490 0010 1343     		orrs	r3, r3, r2
 3491 0012 C269     		ldr	r2, [r0, #28]
 3492 0014 1343     		orrs	r3, r3, r2
 3493              	.LVL291:
3169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3494              		.loc 1 3169 0
 3495 0016 0868     		ldr	r0, [r1]
 3496              	.LVL292:
 3497 0018 9B4A     		ldr	r2, .L352
 3498 001a 0240     		ands	r2, r2, r0
 3499 001c 1343     		orrs	r3, r3, r2
 3500              	.LVL293:
 3501 001e 0B60     		str	r3, [r1]
 3502              	.LVL294:
3174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3503              		.loc 1 3174 0
 3504 0020 2268     		ldr	r2, [r4]
 3505 0022 5368     		ldr	r3, [r2, #4]
 3506 0024 23F44053 		bic	r3, r3, #12288
 3507 0028 E168     		ldr	r1, [r4, #12]
 3508 002a 0B43     		orrs	r3, r3, r1
 3509 002c 5360     		str	r3, [r2, #4]
3182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3510              		.loc 1 3182 0
 3511 002e A169     		ldr	r1, [r4, #24]
 3512              	.LVL295:
3184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 3513              		.loc 1 3184 0
 3514 0030 2268     		ldr	r2, [r4]
 3515 0032 964B     		ldr	r3, .L352+4
 3516 0034 9A42     		cmp	r2, r3
 3517 0036 01D0     		beq	.L256
3186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 3518              		.loc 1 3186 0
 3519 0038 236A     		ldr	r3, [r4, #32]
 3520 003a 1943     		orrs	r1, r1, r3
 3521              	.LVL296:
 3522              	.L256:
3188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3523              		.loc 1 3188 0
 3524 003c 9368     		ldr	r3, [r2, #8]
 3525 003e 23F43063 		bic	r3, r3, #2816
 3526 0042 0B43     		orrs	r3, r3, r1
 3527 0044 9360     		str	r3, [r2, #8]
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3528              		.loc 1 3198 0
 3529 0046 2368     		ldr	r3, [r4]
 3530 0048 914A     		ldr	r2, .L352+8
 3531 004a 9342     		cmp	r3, r2
 3532 004c 27D0     		beq	.L338
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3533              		.loc 1 3198 0 is_stmt 0 discriminator 2
 3534 004e 914A     		ldr	r2, .L352+12
 3535 0050 9342     		cmp	r3, r2
 3536 0052 38D0     		beq	.L339
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3537              		.loc 1 3198 0 discriminator 14
 3538 0054 904A     		ldr	r2, .L352+16
 3539 0056 9342     		cmp	r3, r2
 3540 0058 4ED0     		beq	.L340
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3541              		.loc 1 3198 0 discriminator 26
 3542 005a 904A     		ldr	r2, .L352+20
 3543 005c 9342     		cmp	r3, r2
 3544 005e 61D0     		beq	.L341
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3545              		.loc 1 3198 0 discriminator 38
 3546 0060 8F4A     		ldr	r2, .L352+24
 3547 0062 9342     		cmp	r3, r2
 3548 0064 74D0     		beq	.L342
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3549              		.loc 1 3198 0 discriminator 50
 3550 0066 894A     		ldr	r2, .L352+4
 3551 0068 9342     		cmp	r3, r2
 3552 006a 00F08A80 		beq	.L343
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3553              		.loc 1 3198 0
 3554 006e 1022     		movs	r2, #16
 3555              	.LVL297:
 3556              	.L262:
3201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 3557              		.loc 1 3201 0 is_stmt 1
 3558 0070 8649     		ldr	r1, .L352+4
 3559 0072 8B42     		cmp	r3, r1
 3560 0074 00F0AA80 		beq	.L344
3276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 3561              		.loc 1 3276 0
 3562 0078 E369     		ldr	r3, [r4, #28]
 3563 007a B3F5004F 		cmp	r3, #32768
 3564 007e 00F0D880 		beq	.L345
3323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 3565              		.loc 1 3323 0
 3566 0082 082A     		cmp	r2, #8
 3567 0084 00F24581 		bhi	.L333
 3568 0088 DFE812F0 		tbh	[pc, r2, lsl #1]
 3569              	.L310:
 3570 008c 1501     		.2byte	(.L309-.L310)/2
 3571 008e 2C01     		.2byte	(.L311-.L310)/2
 3572 0090 1301     		.2byte	(.L312-.L310)/2
 3573 0092 4301     		.2byte	(.L333-.L310)/2
 3574 0094 2F01     		.2byte	(.L313-.L310)/2
 3575 0096 4301     		.2byte	(.L333-.L310)/2
 3576 0098 4301     		.2byte	(.L333-.L310)/2
 3577 009a 4301     		.2byte	(.L333-.L310)/2
 3578 009c 3201     		.2byte	(.L334-.L310)/2
 3579              	.LVL298:
 3580              		.p2align 1
 3581              	.L338:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3582              		.loc 1 3198 0 discriminator 1
 3583 009e 02F55842 		add	r2, r2, #55296
 3584 00a2 D2F88820 		ldr	r2, [r2, #136]
 3585 00a6 02F00302 		and	r2, r2, #3
 3586 00aa 032A     		cmp	r2, #3
 3587 00ac 09D8     		bhi	.L258
 3588 00ae DFE802F0 		tbb	[pc, r2]
 3589              	.LVL299:
 3590              	.L260:
 3591 00b2 02       		.byte	(.L259-.L260)/2
 3592 00b3 04       		.byte	(.L261-.L260)/2
 3593 00b4 81       		.byte	(.L316-.L260)/2
 3594 00b5 06       		.byte	(.L263-.L260)/2
 3595              		.p2align 1
 3596              	.L259:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3597              		.loc 1 3198 0 is_stmt 0
 3598 00b6 0122     		movs	r2, #1
 3599 00b8 DAE7     		b	.L262
 3600              	.L261:
 3601              	.LVL300:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3602              		.loc 1 3198 0 discriminator 5
 3603 00ba 0422     		movs	r2, #4
 3604 00bc D8E7     		b	.L262
 3605              	.LVL301:
 3606              	.L263:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3607              		.loc 1 3198 0 discriminator 7
 3608 00be 0822     		movs	r2, #8
 3609 00c0 D6E7     		b	.L262
 3610              	.LVL302:
 3611              	.L258:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3612              		.loc 1 3198 0 discriminator 3
 3613 00c2 1022     		movs	r2, #16
 3614 00c4 D4E7     		b	.L262
 3615              	.LVL303:
 3616              	.L339:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3617              		.loc 1 3198 0 discriminator 13
 3618 00c6 02F5E632 		add	r2, r2, #117760
 3619 00ca D2F88820 		ldr	r2, [r2, #136]
 3620 00ce 02F00C02 		and	r2, r2, #12
 3621 00d2 0C2A     		cmp	r2, #12
 3622 00d4 0ED8     		bhi	.L265
 3623 00d6 DFE802F0 		tbb	[pc, r2]
 3624              	.LVL304:
 3625              	.L267:
 3626 00da 07       		.byte	(.L266-.L267)/2
 3627 00db 0D       		.byte	(.L265-.L267)/2
 3628 00dc 0D       		.byte	(.L265-.L267)/2
 3629 00dd 0D       		.byte	(.L265-.L267)/2
 3630 00de 09       		.byte	(.L268-.L267)/2
 3631 00df 0D       		.byte	(.L265-.L267)/2
 3632 00e0 0D       		.byte	(.L265-.L267)/2
 3633 00e1 0D       		.byte	(.L265-.L267)/2
 3634 00e2 6F       		.byte	(.L317-.L267)/2
 3635 00e3 0D       		.byte	(.L265-.L267)/2
 3636 00e4 0D       		.byte	(.L265-.L267)/2
 3637 00e5 0D       		.byte	(.L265-.L267)/2
 3638 00e6 0B       		.byte	(.L269-.L267)/2
 3639 00e7 00       		.p2align 1
 3640              	.L266:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3641              		.loc 1 3198 0
 3642 00e8 0022     		movs	r2, #0
 3643 00ea C1E7     		b	.L262
 3644              	.L268:
 3645              	.LVL305:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3646              		.loc 1 3198 0 discriminator 17
 3647 00ec 0422     		movs	r2, #4
 3648 00ee BFE7     		b	.L262
 3649              	.LVL306:
 3650              	.L269:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3651              		.loc 1 3198 0 discriminator 19
 3652 00f0 0822     		movs	r2, #8
 3653 00f2 BDE7     		b	.L262
 3654              	.LVL307:
 3655              	.L265:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3656              		.loc 1 3198 0 discriminator 15
 3657 00f4 1022     		movs	r2, #16
 3658 00f6 BBE7     		b	.L262
 3659              	.LVL308:
 3660              	.L340:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3661              		.loc 1 3198 0 discriminator 25
 3662 00f8 02F5E432 		add	r2, r2, #116736
 3663 00fc D2F88820 		ldr	r2, [r2, #136]
 3664 0100 02F03002 		and	r2, r2, #48
 3665 0104 102A     		cmp	r2, #16
 3666 0106 09D0     		beq	.L272
 3667 0108 05D9     		bls	.L346
 3668 010a 202A     		cmp	r2, #32
 3669 010c 56D0     		beq	.L318
 3670 010e 302A     		cmp	r2, #48
 3671 0110 06D1     		bne	.L271
 3672              	.LVL309:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3673              		.loc 1 3198 0 discriminator 31
 3674 0112 0822     		movs	r2, #8
 3675 0114 ACE7     		b	.L262
 3676              	.LVL310:
 3677              	.L346:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3678              		.loc 1 3198 0 discriminator 25
 3679 0116 1AB9     		cbnz	r2, .L271
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3680              		.loc 1 3198 0
 3681 0118 0022     		movs	r2, #0
 3682 011a A9E7     		b	.L262
 3683              	.L272:
 3684              	.LVL311:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3685              		.loc 1 3198 0 discriminator 29
 3686 011c 0422     		movs	r2, #4
 3687 011e A7E7     		b	.L262
 3688              	.LVL312:
 3689              	.L271:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3690              		.loc 1 3198 0 discriminator 27
 3691 0120 1022     		movs	r2, #16
 3692 0122 A5E7     		b	.L262
 3693              	.LVL313:
 3694              	.L341:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3695              		.loc 1 3198 0 discriminator 37
 3696 0124 02F5E232 		add	r2, r2, #115712
 3697 0128 D2F88820 		ldr	r2, [r2, #136]
 3698 012c 02F0C002 		and	r2, r2, #192
 3699 0130 402A     		cmp	r2, #64
 3700 0132 09D0     		beq	.L278
 3701 0134 05D9     		bls	.L347
 3702 0136 802A     		cmp	r2, #128
 3703 0138 42D0     		beq	.L319
 3704 013a C02A     		cmp	r2, #192
 3705 013c 06D1     		bne	.L277
 3706              	.LVL314:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3707              		.loc 1 3198 0 discriminator 43
 3708 013e 0822     		movs	r2, #8
 3709 0140 96E7     		b	.L262
 3710              	.LVL315:
 3711              	.L347:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3712              		.loc 1 3198 0 discriminator 37
 3713 0142 1AB9     		cbnz	r2, .L277
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3714              		.loc 1 3198 0
 3715 0144 0022     		movs	r2, #0
 3716 0146 93E7     		b	.L262
 3717              	.L278:
 3718              	.LVL316:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3719              		.loc 1 3198 0 discriminator 41
 3720 0148 0422     		movs	r2, #4
 3721 014a 91E7     		b	.L262
 3722              	.LVL317:
 3723              	.L277:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3724              		.loc 1 3198 0 discriminator 39
 3725 014c 1022     		movs	r2, #16
 3726 014e 8FE7     		b	.L262
 3727              	.LVL318:
 3728              	.L342:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3729              		.loc 1 3198 0 discriminator 49
 3730 0150 02F5E032 		add	r2, r2, #114688
 3731 0154 D2F88820 		ldr	r2, [r2, #136]
 3732 0158 02F44072 		and	r2, r2, #768
 3733 015c B2F5807F 		cmp	r2, #256
 3734 0160 0BD0     		beq	.L284
 3735 0162 07D9     		bls	.L348
 3736 0164 B2F5007F 		cmp	r2, #512
 3737 0168 2CD0     		beq	.L320
 3738 016a B2F5407F 		cmp	r2, #768
 3739 016e 06D1     		bne	.L283
 3740              	.LVL319:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3741              		.loc 1 3198 0 discriminator 55
 3742 0170 0822     		movs	r2, #8
 3743 0172 7DE7     		b	.L262
 3744              	.LVL320:
 3745              	.L348:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3746              		.loc 1 3198 0 discriminator 49
 3747 0174 1AB9     		cbnz	r2, .L283
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3748              		.loc 1 3198 0
 3749 0176 0022     		movs	r2, #0
 3750 0178 7AE7     		b	.L262
 3751              	.L284:
 3752              	.LVL321:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3753              		.loc 1 3198 0 discriminator 53
 3754 017a 0422     		movs	r2, #4
 3755 017c 78E7     		b	.L262
 3756              	.LVL322:
 3757              	.L283:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3758              		.loc 1 3198 0 discriminator 51
 3759 017e 1022     		movs	r2, #16
 3760 0180 76E7     		b	.L262
 3761              	.LVL323:
 3762              	.L343:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3763              		.loc 1 3198 0 discriminator 61
 3764 0182 02F5C832 		add	r2, r2, #102400
 3765 0186 D2F88820 		ldr	r2, [r2, #136]
 3766 018a 02F44062 		and	r2, r2, #3072
 3767 018e B2F5806F 		cmp	r2, #1024
 3768 0192 0BD0     		beq	.L289
 3769 0194 07D9     		bls	.L349
 3770 0196 B2F5006F 		cmp	r2, #2048
 3771 019a 15D0     		beq	.L322
 3772 019c B2F5406F 		cmp	r2, #3072
 3773 01a0 06D1     		bne	.L288
 3774              	.LVL324:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3775              		.loc 1 3198 0 discriminator 67
 3776 01a2 0822     		movs	r2, #8
 3777 01a4 64E7     		b	.L262
 3778              	.LVL325:
 3779              	.L349:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3780              		.loc 1 3198 0 discriminator 61
 3781 01a6 1AB9     		cbnz	r2, .L288
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3782              		.loc 1 3198 0
 3783 01a8 0022     		movs	r2, #0
 3784 01aa 61E7     		b	.L262
 3785              	.L289:
 3786              	.LVL326:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3787              		.loc 1 3198 0 discriminator 65
 3788 01ac 0422     		movs	r2, #4
 3789 01ae 5FE7     		b	.L262
 3790              	.LVL327:
 3791              	.L288:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3792              		.loc 1 3198 0 discriminator 63
 3793 01b0 1022     		movs	r2, #16
 3794 01b2 5DE7     		b	.L262
 3795              	.LVL328:
 3796              	.L316:
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 3797              		.loc 1 3198 0
 3798 01b4 0222     		movs	r2, #2
 3799 01b6 5BE7     		b	.L262
 3800              	.L317:
 3801 01b8 0222     		movs	r2, #2
 3802 01ba 59E7     		b	.L262
 3803              	.LVL329:
 3804              	.L318:
 3805 01bc 0222     		movs	r2, #2
 3806 01be 57E7     		b	.L262
 3807              	.L319:
 3808 01c0 0222     		movs	r2, #2
 3809 01c2 55E7     		b	.L262
 3810              	.L320:
 3811 01c4 0222     		movs	r2, #2
 3812 01c6 53E7     		b	.L262
 3813              	.L322:
 3814 01c8 0222     		movs	r2, #2
 3815 01ca 51E7     		b	.L262
 3816              	.LVL330:
 3817              	.L344:
3204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 3818              		.loc 1 3204 0 is_stmt 1
 3819 01cc 082A     		cmp	r2, #8
 3820 01ce 00F29280 		bhi	.L323
 3821 01d2 DFE802F0 		tbb	[pc, r2]
 3822              	.L296:
 3823 01d6 08       		.byte	(.L295-.L296)/2
 3824 01d7 90       		.byte	(.L323-.L296)/2
 3825 01d8 10       		.byte	(.L324-.L296)/2
 3826 01d9 90       		.byte	(.L323-.L296)/2
 3827 01da 0D       		.byte	(.L298-.L296)/2
 3828 01db 90       		.byte	(.L323-.L296)/2
 3829 01dc 90       		.byte	(.L323-.L296)/2
 3830 01dd 90       		.byte	(.L323-.L296)/2
 3831 01de 05       		.byte	(.L299-.L296)/2
 3832 01df 00       		.p2align 1
 3833              	.L299:
3216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 3834              		.loc 1 3216 0
 3835 01e0 4FF40040 		mov	r0, #32768
 3836 01e4 08E0     		b	.L297
 3837              	.L295:
3207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 3838              		.loc 1 3207 0
 3839 01e6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3840              	.LVL331:
 3841              	.L300:
3225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 3842              		.loc 1 3225 0
 3843 01ea 28B9     		cbnz	r0, .L297
 3844 01ec 0020     		movs	r0, #0
 3845              	.LVL332:
 3846 01ee 74E0     		b	.L294
 3847              	.LVL333:
 3848              	.L298:
3213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 3849              		.loc 1 3213 0
 3850 01f0 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3851              	.LVL334:
3214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3852              		.loc 1 3214 0
 3853 01f4 F9E7     		b	.L300
 3854              	.LVL335:
 3855              	.L324:
3210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 3856              		.loc 1 3210 0
 3857 01f6 2B48     		ldr	r0, .L352+28
 3858              	.LVL336:
 3859              	.L297:
3255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           (pclk > (4096U * huart->Init.BaudRate)))
 3860              		.loc 1 3255 0
 3861 01f8 6268     		ldr	r2, [r4, #4]
 3862 01fa 02EB4203 		add	r3, r2, r2, lsl #1
 3863 01fe 8342     		cmp	r3, r0
 3864 0200 7BD8     		bhi	.L326
3255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           (pclk > (4096U * huart->Init.BaudRate)))
 3865              		.loc 1 3255 0 is_stmt 0 discriminator 1
 3866 0202 B0EB023F 		cmp	r0, r2, lsl #12
 3867 0206 7AD8     		bhi	.L327
3262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 3868              		.loc 1 3262 0 is_stmt 1
 3869 0208 0023     		movs	r3, #0
 3870 020a 070E     		lsrs	r7, r0, #24
 3871 020c 0602     		lsls	r6, r0, #8
 3872 020e 5008     		lsrs	r0, r2, #1
 3873 0210 16EB000B 		adds	fp, r6, r0
 3874 0214 47F1000C 		adc	ip, r7, #0
 3875 0218 5846     		mov	r0, fp
 3876 021a 6146     		mov	r1, ip
 3877 021c FFF7FEFF 		bl	__aeabi_uldivmod
 3878              	.LVL337:
3263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
 3879              		.loc 1 3263 0
 3880 0220 A0F54072 		sub	r2, r0, #768
 3881 0224 204B     		ldr	r3, .L352+32
 3882 0226 9A42     		cmp	r2, r3
 3883 0228 6BD8     		bhi	.L328
3265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
 3884              		.loc 1 3265 0
 3885 022a 2368     		ldr	r3, [r4]
 3886 022c D860     		str	r0, [r3, #12]
 3887 022e 0020     		movs	r0, #0
 3888              	.LVL338:
 3889 0230 53E0     		b	.L294
 3890              	.LVL339:
 3891              	.L345:
3278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 3892              		.loc 1 3278 0
 3893 0232 082A     		cmp	r2, #8
 3894 0234 67D8     		bhi	.L329
 3895 0236 DFE802F0 		tbb	[pc, r2]
 3896              	.L303:
 3897 023a 07       		.byte	(.L302-.L303)/2
 3898 023b 21       		.byte	(.L304-.L303)/2
 3899 023c 05       		.byte	(.L305-.L303)/2
 3900 023d 66       		.byte	(.L329-.L303)/2
 3901 023e 24       		.byte	(.L306-.L303)/2
 3902 023f 66       		.byte	(.L329-.L303)/2
 3903 0240 66       		.byte	(.L329-.L303)/2
 3904 0241 66       		.byte	(.L329-.L303)/2
 3905 0242 39       		.byte	(.L330-.L303)/2
 3906 0243 00       		.p2align 1
 3907              	.L305:
3287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 3908              		.loc 1 3287 0
 3909 0244 1748     		ldr	r0, .L352+28
 3910 0246 03E0     		b	.L307
 3911              	.L302:
3281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 3912              		.loc 1 3281 0
 3913 0248 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3914              	.LVL340:
 3915              	.L308:
3302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 3916              		.loc 1 3302 0
 3917 024c 0028     		cmp	r0, #0
 3918 024e 5CD0     		beq	.L350
 3919              	.LVL341:
 3920              	.L307:
3307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 3921              		.loc 1 3307 0
 3922 0250 6268     		ldr	r2, [r4, #4]
 3923 0252 5308     		lsrs	r3, r2, #1
 3924 0254 03EB4003 		add	r3, r3, r0, lsl #1
 3925 0258 B3FBF2F3 		udiv	r3, r3, r2
 3926 025c 9BB2     		uxth	r3, r3
 3927              	.LVL342:
3309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 3928              		.loc 1 3309 0
 3929 025e A3F11001 		sub	r1, r3, #16
 3930 0262 4FF6EF72 		movw	r2, #65519
 3931 0266 9142     		cmp	r1, r2
 3932 0268 51D8     		bhi	.L332
3311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3933              		.loc 1 3311 0
 3934 026a 23F00F02 		bic	r2, r3, #15
 3935              	.LVL343:
3312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 3936              		.loc 1 3312 0
 3937 026e C3F34203 		ubfx	r3, r3, #1, #3
 3938              	.LVL344:
 3939 0272 1343     		orrs	r3, r3, r2
 3940              	.LVL345:
3313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 3941              		.loc 1 3313 0
 3942 0274 2268     		ldr	r2, [r4]
 3943 0276 D360     		str	r3, [r2, #12]
 3944 0278 0020     		movs	r0, #0
 3945 027a 2EE0     		b	.L294
 3946              	.LVL346:
 3947              	.L304:
3284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 3948              		.loc 1 3284 0
 3949 027c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3950              	.LVL347:
3285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3951              		.loc 1 3285 0
 3952 0280 E4E7     		b	.L308
 3953              	.LVL348:
 3954              	.L306:
3290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 3955              		.loc 1 3290 0
 3956 0282 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3957              	.LVL349:
3291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3958              		.loc 1 3291 0
 3959 0286 E1E7     		b	.L308
 3960              	.L353:
 3961              		.align	2
 3962              	.L352:
 3963 0288 F369FFEF 		.word	-268473869
 3964 028c 00800040 		.word	1073774592
 3965 0290 00380140 		.word	1073821696
 3966 0294 00440040 		.word	1073759232
 3967 0298 00480040 		.word	1073760256
 3968 029c 004C0040 		.word	1073761280
 3969 02a0 00500040 		.word	1073762304
 3970 02a4 0024F400 		.word	16000000
 3971 02a8 FFFC0F00 		.word	1047807
 3972              	.LVL350:
 3973              	.L330:
3293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 3974              		.loc 1 3293 0
 3975 02ac 4FF40040 		mov	r0, #32768
 3976 02b0 CEE7     		b	.L307
 3977              	.L312:
3332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 3978              		.loc 1 3332 0
 3979 02b2 1B48     		ldr	r0, .L354
 3980 02b4 02E0     		b	.L314
 3981              	.L309:
3326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 3982              		.loc 1 3326 0
 3983 02b6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3984              	.LVL351:
 3985              	.L315:
3346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 3986              		.loc 1 3346 0
 3987 02ba 60B3     		cbz	r0, .L351
 3988              	.LVL352:
 3989              	.L314:
3352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
 3990              		.loc 1 3352 0
 3991 02bc 6368     		ldr	r3, [r4, #4]
 3992 02be 00EB5300 		add	r0, r0, r3, lsr #1
 3993 02c2 B0FBF3F0 		udiv	r0, r0, r3
 3994 02c6 80B2     		uxth	r0, r0
 3995              	.LVL353:
3354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 3996              		.loc 1 3354 0
 3997 02c8 A0F11002 		sub	r2, r0, #16
 3998 02cc 4FF6EF73 		movw	r3, #65519
 3999 02d0 9A42     		cmp	r2, r3
 4000 02d2 22D8     		bhi	.L336
3356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 4001              		.loc 1 3356 0
 4002 02d4 2368     		ldr	r3, [r4]
 4003 02d6 D860     		str	r0, [r3, #12]
 4004 02d8 0020     		movs	r0, #0
 4005              	.LVL354:
 4006              	.L294:
3372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 4007              		.loc 1 3372 0
 4008 02da 0023     		movs	r3, #0
 4009 02dc 6366     		str	r3, [r4, #100]
3373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4010              		.loc 1 3373 0
 4011 02de A366     		str	r3, [r4, #104]
3376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4012              		.loc 1 3376 0
 4013 02e0 BDE8D888 		pop	{r3, r4, r6, r7, fp, pc}
 4014              	.LVL355:
 4015              	.L311:
3329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 4016              		.loc 1 3329 0
 4017 02e4 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4018              	.LVL356:
3330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 4019              		.loc 1 3330 0
 4020 02e8 E7E7     		b	.L315
 4021              	.LVL357:
 4022              	.L313:
3335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 4023              		.loc 1 3335 0
 4024 02ea FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4025              	.LVL358:
3336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4026              		.loc 1 3336 0
 4027 02ee E4E7     		b	.L315
 4028              	.LVL359:
 4029              	.L334:
3338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 4030              		.loc 1 3338 0
 4031 02f0 4FF40040 		mov	r0, #32768
 4032 02f4 E2E7     		b	.L314
 4033              	.L323:
3220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 4034              		.loc 1 3220 0
 4035 02f6 0120     		movs	r0, #1
 4036 02f8 EFE7     		b	.L294
 4037              	.LVL360:
 4038              	.L326:
3258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 4039              		.loc 1 3258 0
 4040 02fa 0120     		movs	r0, #1
 4041 02fc EDE7     		b	.L294
 4042              	.L327:
 4043 02fe 0120     		movs	r0, #1
 4044 0300 EBE7     		b	.L294
 4045              	.LVL361:
 4046              	.L328:
3269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
 4047              		.loc 1 3269 0
 4048 0302 0120     		movs	r0, #1
 4049              	.LVL362:
 4050 0304 E9E7     		b	.L294
 4051              	.LVL363:
 4052              	.L329:
3297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 4053              		.loc 1 3297 0
 4054 0306 0120     		movs	r0, #1
 4055 0308 E7E7     		b	.L294
 4056              	.LVL364:
 4057              	.L350:
 4058 030a 0020     		movs	r0, #0
 4059              	.LVL365:
 4060 030c E5E7     		b	.L294
 4061              	.LVL366:
 4062              	.L332:
3317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 4063              		.loc 1 3317 0
 4064 030e 0120     		movs	r0, #1
 4065 0310 E3E7     		b	.L294
 4066              	.LVL367:
 4067              	.L333:
3342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         break;
 4068              		.loc 1 3342 0
 4069 0312 0120     		movs	r0, #1
 4070 0314 E1E7     		b	.L294
 4071              	.LVL368:
 4072              	.L351:
 4073 0316 0020     		movs	r0, #0
 4074              	.LVL369:
 4075 0318 DFE7     		b	.L294
 4076              	.LVL370:
 4077              	.L336:
3360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 4078              		.loc 1 3360 0
 4079 031a 0120     		movs	r0, #1
 4080              	.LVL371:
 4081 031c DDE7     		b	.L294
 4082              	.L355:
 4083 031e 00BF     		.align	2
 4084              	.L354:
 4085 0320 0024F400 		.word	16000000
 4086              		.cfi_endproc
 4087              	.LFE360:
 4089              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 4090              		.align	1
 4091              		.global	UART_AdvFeatureConfig
 4092              		.syntax unified
 4093              		.thumb
 4094              		.thumb_func
 4095              		.fpu fpv4-sp-d16
 4097              	UART_AdvFeatureConfig:
 4098              	.LFB361:
3384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 4099              		.loc 1 3384 0
 4100              		.cfi_startproc
 4101              		@ args = 0, pretend = 0, frame = 0
 4102              		@ frame_needed = 0, uses_anonymous_args = 0
 4103              		@ link register save eliminated.
 4104              	.LVL372:
3389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4105              		.loc 1 3389 0
 4106 0000 436A     		ldr	r3, [r0, #36]
 4107 0002 13F0010F 		tst	r3, #1
 4108 0006 06D0     		beq	.L357
3392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4109              		.loc 1 3392 0
 4110 0008 0268     		ldr	r2, [r0]
 4111 000a 5368     		ldr	r3, [r2, #4]
 4112 000c 23F40033 		bic	r3, r3, #131072
 4113 0010 816A     		ldr	r1, [r0, #40]
 4114 0012 0B43     		orrs	r3, r3, r1
 4115 0014 5360     		str	r3, [r2, #4]
 4116              	.L357:
3396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4117              		.loc 1 3396 0
 4118 0016 436A     		ldr	r3, [r0, #36]
 4119 0018 13F0020F 		tst	r3, #2
 4120 001c 06D0     		beq	.L358
3399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4121              		.loc 1 3399 0
 4122 001e 0268     		ldr	r2, [r0]
 4123 0020 5368     		ldr	r3, [r2, #4]
 4124 0022 23F48033 		bic	r3, r3, #65536
 4125 0026 C16A     		ldr	r1, [r0, #44]
 4126 0028 0B43     		orrs	r3, r3, r1
 4127 002a 5360     		str	r3, [r2, #4]
 4128              	.L358:
3403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4129              		.loc 1 3403 0
 4130 002c 436A     		ldr	r3, [r0, #36]
 4131 002e 13F0040F 		tst	r3, #4
 4132 0032 06D0     		beq	.L359
3406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4133              		.loc 1 3406 0
 4134 0034 0268     		ldr	r2, [r0]
 4135 0036 5368     		ldr	r3, [r2, #4]
 4136 0038 23F48023 		bic	r3, r3, #262144
 4137 003c 016B     		ldr	r1, [r0, #48]
 4138 003e 0B43     		orrs	r3, r3, r1
 4139 0040 5360     		str	r3, [r2, #4]
 4140              	.L359:
3410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4141              		.loc 1 3410 0
 4142 0042 436A     		ldr	r3, [r0, #36]
 4143 0044 13F0080F 		tst	r3, #8
 4144 0048 06D0     		beq	.L360
3413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4145              		.loc 1 3413 0
 4146 004a 0268     		ldr	r2, [r0]
 4147 004c 5368     		ldr	r3, [r2, #4]
 4148 004e 23F40043 		bic	r3, r3, #32768
 4149 0052 416B     		ldr	r1, [r0, #52]
 4150 0054 0B43     		orrs	r3, r3, r1
 4151 0056 5360     		str	r3, [r2, #4]
 4152              	.L360:
3417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4153              		.loc 1 3417 0
 4154 0058 436A     		ldr	r3, [r0, #36]
 4155 005a 13F0100F 		tst	r3, #16
 4156 005e 06D0     		beq	.L361
3420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4157              		.loc 1 3420 0
 4158 0060 0268     		ldr	r2, [r0]
 4159 0062 9368     		ldr	r3, [r2, #8]
 4160 0064 23F48053 		bic	r3, r3, #4096
 4161 0068 816B     		ldr	r1, [r0, #56]
 4162 006a 0B43     		orrs	r3, r3, r1
 4163 006c 9360     		str	r3, [r2, #8]
 4164              	.L361:
3424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4165              		.loc 1 3424 0
 4166 006e 436A     		ldr	r3, [r0, #36]
 4167 0070 13F0200F 		tst	r3, #32
 4168 0074 06D0     		beq	.L362
3427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4169              		.loc 1 3427 0
 4170 0076 0268     		ldr	r2, [r0]
 4171 0078 9368     		ldr	r3, [r2, #8]
 4172 007a 23F40053 		bic	r3, r3, #8192
 4173 007e C16B     		ldr	r1, [r0, #60]
 4174 0080 0B43     		orrs	r3, r3, r1
 4175 0082 9360     		str	r3, [r2, #8]
 4176              	.L362:
3431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4177              		.loc 1 3431 0
 4178 0084 436A     		ldr	r3, [r0, #36]
 4179 0086 13F0400F 		tst	r3, #64
 4180 008a 0AD0     		beq	.L363
3435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 4181              		.loc 1 3435 0
 4182 008c 0268     		ldr	r2, [r0]
 4183 008e 5368     		ldr	r3, [r2, #4]
 4184 0090 23F48013 		bic	r3, r3, #1048576
 4185 0094 016C     		ldr	r1, [r0, #64]
 4186 0096 0B43     		orrs	r3, r3, r1
 4187 0098 5360     		str	r3, [r2, #4]
3437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4188              		.loc 1 3437 0
 4189 009a 036C     		ldr	r3, [r0, #64]
 4190 009c B3F5801F 		cmp	r3, #1048576
 4191 00a0 0BD0     		beq	.L365
 4192              	.L363:
3445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4193              		.loc 1 3445 0
 4194 00a2 436A     		ldr	r3, [r0, #36]
 4195 00a4 13F0800F 		tst	r3, #128
 4196 00a8 06D0     		beq	.L356
3448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4197              		.loc 1 3448 0
 4198 00aa 0268     		ldr	r2, [r0]
 4199 00ac 5368     		ldr	r3, [r2, #4]
 4200 00ae 23F40023 		bic	r3, r3, #524288
 4201 00b2 816C     		ldr	r1, [r0, #72]
 4202 00b4 0B43     		orrs	r3, r3, r1
 4203 00b6 5360     		str	r3, [r2, #4]
 4204              	.L356:
3450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4205              		.loc 1 3450 0
 4206 00b8 7047     		bx	lr
 4207              	.L365:
3440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4208              		.loc 1 3440 0
 4209 00ba 0268     		ldr	r2, [r0]
 4210 00bc 5368     		ldr	r3, [r2, #4]
 4211 00be 23F4C003 		bic	r3, r3, #6291456
 4212 00c2 416C     		ldr	r1, [r0, #68]
 4213 00c4 0B43     		orrs	r3, r3, r1
 4214 00c6 5360     		str	r3, [r2, #4]
 4215 00c8 EBE7     		b	.L363
 4216              		.cfi_endproc
 4217              	.LFE361:
 4219              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4220              		.align	1
 4221              		.global	UART_WaitOnFlagUntilTimeout
 4222              		.syntax unified
 4223              		.thumb
 4224              		.thumb_func
 4225              		.fpu fpv4-sp-d16
 4227              	UART_WaitOnFlagUntilTimeout:
 4228              	.LFB363:
3510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
 4229              		.loc 1 3510 0
 4230              		.cfi_startproc
 4231              		@ args = 4, pretend = 0, frame = 0
 4232              		@ frame_needed = 0, uses_anonymous_args = 0
 4233              	.LVL373:
 4234 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4235              		.cfi_def_cfa_offset 24
 4236              		.cfi_offset 4, -24
 4237              		.cfi_offset 5, -20
 4238              		.cfi_offset 6, -16
 4239              		.cfi_offset 7, -12
 4240              		.cfi_offset 8, -8
 4241              		.cfi_offset 14, -4
 4242 0004 0446     		mov	r4, r0
 4243 0006 0F46     		mov	r7, r1
 4244 0008 1646     		mov	r6, r2
 4245 000a 9846     		mov	r8, r3
 4246 000c 069D     		ldr	r5, [sp, #24]
 4247              	.LVL374:
 4248              	.L368:
3512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4249              		.loc 1 3512 0
 4250 000e 2368     		ldr	r3, [r4]
 4251 0010 DB69     		ldr	r3, [r3, #28]
 4252 0012 37EA0303 		bics	r3, r7, r3
 4253 0016 0CBF     		ite	eq
 4254 0018 0123     		moveq	r3, #1
 4255 001a 0023     		movne	r3, #0
 4256 001c B342     		cmp	r3, r6
 4257 001e 3BD1     		bne	.L374
3515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4258              		.loc 1 3515 0
 4259 0020 B5F1FF3F 		cmp	r5, #-1
 4260 0024 F3D0     		beq	.L368
3517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 4261              		.loc 1 3517 0
 4262 0026 FFF7FEFF 		bl	HAL_GetTick
 4263              	.LVL375:
 4264 002a A0EB0800 		sub	r0, r0, r8
 4265 002e A842     		cmp	r0, r5
 4266 0030 20D8     		bhi	.L369
3517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 4267              		.loc 1 3517 0 is_stmt 0 discriminator 1
 4268 0032 FDB1     		cbz	r5, .L369
3536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 4269              		.loc 1 3536 0 is_stmt 1
 4270 0034 2368     		ldr	r3, [r4]
 4271 0036 1A68     		ldr	r2, [r3]
 4272 0038 12F0040F 		tst	r2, #4
 4273 003c E7D0     		beq	.L368
3538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         {
 4274              		.loc 1 3538 0
 4275 003e DA69     		ldr	r2, [r3, #28]
 4276 0040 12F4006F 		tst	r2, #2048
 4277 0044 E3D0     		beq	.L368
3541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4278              		.loc 1 3541 0
 4279 0046 4FF40062 		mov	r2, #2048
 4280 004a 1A62     		str	r2, [r3, #32]
3548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif
 4281              		.loc 1 3548 0
 4282 004c 2268     		ldr	r2, [r4]
 4283 004e 1368     		ldr	r3, [r2]
 4284 0050 23F4D073 		bic	r3, r3, #416
 4285 0054 1360     		str	r3, [r2]
3550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4286              		.loc 1 3550 0
 4287 0056 2268     		ldr	r2, [r4]
 4288 0058 9368     		ldr	r3, [r2, #8]
 4289 005a 23F00103 		bic	r3, r3, #1
 4290 005e 9360     		str	r3, [r2, #8]
3552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 4291              		.loc 1 3552 0
 4292 0060 2023     		movs	r3, #32
 4293 0062 A367     		str	r3, [r4, #120]
3553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 4294              		.loc 1 3553 0
 4295 0064 E367     		str	r3, [r4, #124]
3554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4296              		.loc 1 3554 0
 4297 0066 C4F88030 		str	r3, [r4, #128]
3557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4298              		.loc 1 3557 0
 4299 006a 0023     		movs	r3, #0
 4300 006c 84F87430 		strb	r3, [r4, #116]
3559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         }
 4301              		.loc 1 3559 0
 4302 0070 0320     		movs	r0, #3
 4303 0072 12E0     		b	.L371
 4304              	.L369:
3524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 4305              		.loc 1 3524 0
 4306 0074 2268     		ldr	r2, [r4]
 4307 0076 1368     		ldr	r3, [r2]
 4308 0078 23F4D073 		bic	r3, r3, #416
 4309 007c 1360     		str	r3, [r2]
3526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4310              		.loc 1 3526 0
 4311 007e 2268     		ldr	r2, [r4]
 4312 0080 9368     		ldr	r3, [r2, #8]
 4313 0082 23F00103 		bic	r3, r3, #1
 4314 0086 9360     		str	r3, [r2, #8]
3528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4315              		.loc 1 3528 0
 4316 0088 2023     		movs	r3, #32
 4317 008a A367     		str	r3, [r4, #120]
3529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4318              		.loc 1 3529 0
 4319 008c E367     		str	r3, [r4, #124]
3531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4320              		.loc 1 3531 0
 4321 008e 0023     		movs	r3, #0
 4322 0090 84F87430 		strb	r3, [r4, #116]
3533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 4323              		.loc 1 3533 0
 4324 0094 0320     		movs	r0, #3
 4325 0096 00E0     		b	.L371
 4326              	.L374:
3564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 4327              		.loc 1 3564 0
 4328 0098 0020     		movs	r0, #0
 4329              	.L371:
3565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4330              		.loc 1 3565 0
 4331 009a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4332              		.cfi_endproc
 4333              	.LFE363:
 4335              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 4336              		.align	1
 4337              		.global	HAL_UART_Transmit
 4338              		.syntax unified
 4339              		.thumb
 4340              		.thumb_func
 4341              		.fpu fpv4-sp-d16
 4343              	HAL_UART_Transmit:
 4344              	.LFB324:
1143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4345              		.loc 1 1143 0
 4346              		.cfi_startproc
 4347              		@ args = 0, pretend = 0, frame = 0
 4348              		@ frame_needed = 0, uses_anonymous_args = 0
 4349              	.LVL376:
 4350 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4351              		.cfi_def_cfa_offset 24
 4352              		.cfi_offset 4, -24
 4353              		.cfi_offset 5, -20
 4354              		.cfi_offset 6, -16
 4355              		.cfi_offset 7, -12
 4356              		.cfi_offset 8, -8
 4357              		.cfi_offset 14, -4
 4358 0004 82B0     		sub	sp, sp, #8
 4359              		.cfi_def_cfa_offset 32
 4360 0006 1E46     		mov	r6, r3
1149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4361              		.loc 1 1149 0
 4362 0008 836F     		ldr	r3, [r0, #120]
 4363              	.LVL377:
 4364 000a 202B     		cmp	r3, #32
 4365 000c 56D1     		bne	.L382
 4366 000e 0446     		mov	r4, r0
 4367 0010 0D46     		mov	r5, r1
 4368 0012 9046     		mov	r8, r2
1151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4369              		.loc 1 1151 0
 4370 0014 0029     		cmp	r1, #0
 4371 0016 56D0     		beq	.L383
1151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4372              		.loc 1 1151 0 is_stmt 0 discriminator 1
 4373 0018 002A     		cmp	r2, #0
 4374 001a 56D0     		beq	.L384
1156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4375              		.loc 1 1156 0 is_stmt 1
 4376 001c 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 4377 0020 012B     		cmp	r3, #1
 4378 0022 54D0     		beq	.L385
1156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4379              		.loc 1 1156 0 is_stmt 0 discriminator 2
 4380 0024 0123     		movs	r3, #1
 4381 0026 80F87430 		strb	r3, [r0, #116]
1158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4382              		.loc 1 1158 0 is_stmt 1 discriminator 2
 4383 002a 0023     		movs	r3, #0
 4384 002c C0F88030 		str	r3, [r0, #128]
1159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4385              		.loc 1 1159 0 discriminator 2
 4386 0030 2123     		movs	r3, #33
 4387 0032 8367     		str	r3, [r0, #120]
1162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4388              		.loc 1 1162 0 discriminator 2
 4389 0034 FFF7FEFF 		bl	HAL_GetTick
 4390              	.LVL378:
 4391 0038 0746     		mov	r7, r0
 4392              	.LVL379:
1164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 4393              		.loc 1 1164 0 discriminator 2
 4394 003a A4F85080 		strh	r8, [r4, #80]	@ movhi
1165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4395              		.loc 1 1165 0 discriminator 2
 4396 003e A4F85280 		strh	r8, [r4, #82]	@ movhi
1168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4397              		.loc 1 1168 0 discriminator 2
 4398 0042 A368     		ldr	r3, [r4, #8]
 4399 0044 B3F5805F 		cmp	r3, #4096
 4400 0048 05D0     		beq	.L391
1176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4401              		.loc 1 1176 0
 4402 004a 4FF00008 		mov	r8, #0
 4403              	.LVL380:
 4404              	.L377:
1179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4405              		.loc 1 1179 0
 4406 004e 0023     		movs	r3, #0
 4407 0050 84F87430 		strb	r3, [r4, #116]
1181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4408              		.loc 1 1181 0
 4409 0054 13E0     		b	.L378
 4410              	.LVL381:
 4411              	.L391:
1168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4412              		.loc 1 1168 0 discriminator 1
 4413 0056 2369     		ldr	r3, [r4, #16]
 4414 0058 13B1     		cbz	r3, .L387
1176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4415              		.loc 1 1176 0
 4416 005a 4FF00008 		mov	r8, #0
 4417 005e F6E7     		b	.L377
 4418              	.L387:
1171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4419              		.loc 1 1171 0
 4420 0060 A846     		mov	r8, r5
1170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 4421              		.loc 1 1170 0
 4422 0062 0025     		movs	r5, #0
 4423              	.LVL382:
 4424 0064 F3E7     		b	.L377
 4425              	.LVL383:
 4426              	.L393:
1189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pdata16bits++;
 4427              		.loc 1 1189 0
 4428 0066 38F8023B 		ldrh	r3, [r8], #2
 4429              	.LVL384:
 4430 006a 2268     		ldr	r2, [r4]
 4431 006c C3F30803 		ubfx	r3, r3, #0, #9
 4432 0070 1385     		strh	r3, [r2, #40]	@ movhi
 4433              	.LVL385:
 4434              	.L380:
1197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4435              		.loc 1 1197 0
 4436 0072 B4F85230 		ldrh	r3, [r4, #82]
 4437 0076 013B     		subs	r3, r3, #1
 4438 0078 9BB2     		uxth	r3, r3
 4439 007a A4F85230 		strh	r3, [r4, #82]	@ movhi
 4440              	.L378:
1181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4441              		.loc 1 1181 0
 4442 007e B4F85230 		ldrh	r3, [r4, #82]
 4443 0082 9BB2     		uxth	r3, r3
 4444 0084 73B1     		cbz	r3, .L392
1183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 4445              		.loc 1 1183 0
 4446 0086 0096     		str	r6, [sp]
 4447 0088 3B46     		mov	r3, r7
 4448 008a 0022     		movs	r2, #0
 4449 008c 8021     		movs	r1, #128
 4450 008e 2046     		mov	r0, r4
 4451 0090 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4452              	.LVL386:
 4453 0094 E8B9     		cbnz	r0, .L388
1187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 4454              		.loc 1 1187 0
 4455 0096 002D     		cmp	r5, #0
 4456 0098 E5D0     		beq	.L393
1194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pdata8bits++;
 4457              		.loc 1 1194 0
 4458 009a 2368     		ldr	r3, [r4]
 4459 009c 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 4460              	.LVL387:
 4461 00a0 1A85     		strh	r2, [r3, #40]	@ movhi
 4462              	.LVL388:
 4463 00a2 E6E7     		b	.L380
 4464              	.L392:
1200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4465              		.loc 1 1200 0
 4466 00a4 0096     		str	r6, [sp]
 4467 00a6 3B46     		mov	r3, r7
 4468 00a8 0022     		movs	r2, #0
 4469 00aa 4021     		movs	r1, #64
 4470 00ac 2046     		mov	r0, r4
 4471 00ae FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4472              	.LVL389:
 4473 00b2 0346     		mov	r3, r0
 4474 00b4 78B9     		cbnz	r0, .L389
1206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4475              		.loc 1 1206 0
 4476 00b6 2022     		movs	r2, #32
 4477 00b8 A267     		str	r2, [r4, #120]
1208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4478              		.loc 1 1208 0
 4479 00ba 00E0     		b	.L376
 4480              	.LVL390:
 4481              	.L382:
1212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4482              		.loc 1 1212 0
 4483 00bc 0223     		movs	r3, #2
 4484              	.LVL391:
 4485              	.L376:
1214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4486              		.loc 1 1214 0
 4487 00be 1846     		mov	r0, r3
 4488 00c0 02B0     		add	sp, sp, #8
 4489              		.cfi_remember_state
 4490              		.cfi_def_cfa_offset 24
 4491              		@ sp needed
 4492 00c2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4493              	.LVL392:
 4494              	.L383:
 4495              		.cfi_restore_state
1153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4496              		.loc 1 1153 0
 4497 00c6 0123     		movs	r3, #1
 4498 00c8 F9E7     		b	.L376
 4499              	.L384:
 4500 00ca 0123     		movs	r3, #1
 4501 00cc F7E7     		b	.L376
 4502              	.L385:
1156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4503              		.loc 1 1156 0
 4504 00ce 0223     		movs	r3, #2
 4505 00d0 F5E7     		b	.L376
 4506              	.LVL393:
 4507              	.L388:
1185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 4508              		.loc 1 1185 0
 4509 00d2 0323     		movs	r3, #3
 4510 00d4 F3E7     		b	.L376
 4511              	.L389:
1202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4512              		.loc 1 1202 0
 4513 00d6 0323     		movs	r3, #3
 4514 00d8 F1E7     		b	.L376
 4515              		.cfi_endproc
 4516              	.LFE324:
 4518              		.section	.text.HAL_UART_Receive,"ax",%progbits
 4519              		.align	1
 4520              		.global	HAL_UART_Receive
 4521              		.syntax unified
 4522              		.thumb
 4523              		.thumb_func
 4524              		.fpu fpv4-sp-d16
 4526              	HAL_UART_Receive:
 4527              	.LFB325:
1232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4528              		.loc 1 1232 0
 4529              		.cfi_startproc
 4530              		@ args = 0, pretend = 0, frame = 0
 4531              		@ frame_needed = 0, uses_anonymous_args = 0
 4532              	.LVL394:
 4533 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4534              		.cfi_def_cfa_offset 28
 4535              		.cfi_offset 4, -28
 4536              		.cfi_offset 5, -24
 4537              		.cfi_offset 6, -20
 4538              		.cfi_offset 7, -16
 4539              		.cfi_offset 8, -12
 4540              		.cfi_offset 9, -8
 4541              		.cfi_offset 14, -4
 4542 0004 83B0     		sub	sp, sp, #12
 4543              		.cfi_def_cfa_offset 40
 4544 0006 1E46     		mov	r6, r3
1239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4545              		.loc 1 1239 0
 4546 0008 C36F     		ldr	r3, [r0, #124]
 4547              	.LVL395:
 4548 000a 202B     		cmp	r3, #32
 4549 000c 7DD1     		bne	.L408
 4550 000e 0446     		mov	r4, r0
 4551 0010 0D46     		mov	r5, r1
 4552 0012 9046     		mov	r8, r2
1241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4553              		.loc 1 1241 0
 4554 0014 0029     		cmp	r1, #0
 4555 0016 7CD0     		beq	.L409
1241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4556              		.loc 1 1241 0 is_stmt 0 discriminator 1
 4557 0018 002A     		cmp	r2, #0
 4558 001a 7CD0     		beq	.L410
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4559              		.loc 1 1246 0 is_stmt 1
 4560 001c 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 4561 0020 012B     		cmp	r3, #1
 4562 0022 7AD0     		beq	.L411
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4563              		.loc 1 1246 0 is_stmt 0 discriminator 2
 4564 0024 0123     		movs	r3, #1
 4565 0026 80F87430 		strb	r3, [r0, #116]
1248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4566              		.loc 1 1248 0 is_stmt 1 discriminator 2
 4567 002a 0023     		movs	r3, #0
 4568 002c C0F88030 		str	r3, [r0, #128]
1249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4569              		.loc 1 1249 0 discriminator 2
 4570 0030 2222     		movs	r2, #34
 4571              	.LVL396:
 4572 0032 C267     		str	r2, [r0, #124]
1250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4573              		.loc 1 1250 0 discriminator 2
 4574 0034 0366     		str	r3, [r0, #96]
1253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4575              		.loc 1 1253 0 discriminator 2
 4576 0036 FFF7FEFF 		bl	HAL_GetTick
 4577              	.LVL397:
 4578 003a 0746     		mov	r7, r0
 4579              	.LVL398:
1255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 4580              		.loc 1 1255 0 discriminator 2
 4581 003c A4F85880 		strh	r8, [r4, #88]	@ movhi
1256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4582              		.loc 1 1256 0 discriminator 2
 4583 0040 A4F85A80 		strh	r8, [r4, #90]	@ movhi
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4584              		.loc 1 1259 0 discriminator 2
 4585 0044 A368     		ldr	r3, [r4, #8]
 4586 0046 B3F5805F 		cmp	r3, #4096
 4587 004a 06D0     		beq	.L416
 4588 004c A3B9     		cbnz	r3, .L399
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4589              		.loc 1 1259 0 is_stmt 0 discriminator 5
 4590 004e 2269     		ldr	r2, [r4, #16]
 4591 0050 72B9     		cbnz	r2, .L400
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4592              		.loc 1 1259 0 discriminator 7
 4593 0052 FF22     		movs	r2, #255
 4594 0054 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4595 0058 14E0     		b	.L398
 4596              	.L416:
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4597              		.loc 1 1259 0 discriminator 1
 4598 005a 2269     		ldr	r2, [r4, #16]
 4599 005c 22B9     		cbnz	r2, .L397
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4600              		.loc 1 1259 0 discriminator 3
 4601 005e 40F2FF12 		movw	r2, #511
 4602 0062 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4603 0066 0DE0     		b	.L398
 4604              	.L397:
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4605              		.loc 1 1259 0 discriminator 4
 4606 0068 FF22     		movs	r2, #255
 4607 006a A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4608 006e 09E0     		b	.L398
 4609              	.L400:
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4610              		.loc 1 1259 0 discriminator 8
 4611 0070 7F22     		movs	r2, #127
 4612 0072 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4613 0076 05E0     		b	.L398
 4614              	.L399:
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4615              		.loc 1 1259 0 discriminator 6
 4616 0078 B3F1805F 		cmp	r3, #268435456
 4617 007c 0DD0     		beq	.L417
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4618              		.loc 1 1259 0 discriminator 10
 4619 007e 0022     		movs	r2, #0
 4620 0080 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4621              	.L398:
1260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4622              		.loc 1 1260 0 is_stmt 1
 4623 0084 B4F85C80 		ldrh	r8, [r4, #92]
 4624              	.LVL399:
1263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4625              		.loc 1 1263 0
 4626 0088 B3F5805F 		cmp	r3, #4096
 4627 008c 0FD0     		beq	.L418
1271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4628              		.loc 1 1271 0
 4629 008e 4FF00009 		mov	r9, #0
 4630              	.LVL400:
 4631              	.L403:
1274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4632              		.loc 1 1274 0
 4633 0092 0023     		movs	r3, #0
 4634 0094 84F87430 		strb	r3, [r4, #116]
1277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4635              		.loc 1 1277 0
 4636 0098 1DE0     		b	.L404
 4637              	.LVL401:
 4638              	.L417:
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4639              		.loc 1 1259 0 discriminator 9
 4640 009a 2269     		ldr	r2, [r4, #16]
 4641 009c 1AB9     		cbnz	r2, .L402
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4642              		.loc 1 1259 0 is_stmt 0 discriminator 11
 4643 009e 7F22     		movs	r2, #127
 4644 00a0 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4645 00a4 EEE7     		b	.L398
 4646              	.L402:
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4647              		.loc 1 1259 0 discriminator 12
 4648 00a6 3F22     		movs	r2, #63
 4649 00a8 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4650 00ac EAE7     		b	.L398
 4651              	.LVL402:
 4652              	.L418:
1263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4653              		.loc 1 1263 0 is_stmt 1 discriminator 1
 4654 00ae 2369     		ldr	r3, [r4, #16]
 4655 00b0 13B1     		cbz	r3, .L413
1271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4656              		.loc 1 1271 0
 4657 00b2 4FF00009 		mov	r9, #0
 4658 00b6 ECE7     		b	.L403
 4659              	.L413:
1266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4660              		.loc 1 1266 0
 4661 00b8 A946     		mov	r9, r5
1265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 4662              		.loc 1 1265 0
 4663 00ba 0025     		movs	r5, #0
 4664              	.LVL403:
 4665 00bc E9E7     		b	.L403
 4666              	.LVL404:
 4667              	.L420:
1285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pdata16bits++;
 4668              		.loc 1 1285 0
 4669 00be 2368     		ldr	r3, [r4]
 4670 00c0 9B8C     		ldrh	r3, [r3, #36]
 4671 00c2 08EA0303 		and	r3, r8, r3
 4672 00c6 29F8023B 		strh	r3, [r9], #2	@ movhi
 4673              	.LVL405:
 4674              	.L406:
1293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4675              		.loc 1 1293 0
 4676 00ca B4F85A30 		ldrh	r3, [r4, #90]
 4677 00ce 013B     		subs	r3, r3, #1
 4678 00d0 9BB2     		uxth	r3, r3
 4679 00d2 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 4680              	.L404:
1277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4681              		.loc 1 1277 0
 4682 00d6 B4F85A30 		ldrh	r3, [r4, #90]
 4683 00da 9BB2     		uxth	r3, r3
 4684 00dc 8BB1     		cbz	r3, .L419
1279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 4685              		.loc 1 1279 0
 4686 00de 0096     		str	r6, [sp]
 4687 00e0 3B46     		mov	r3, r7
 4688 00e2 0022     		movs	r2, #0
 4689 00e4 2021     		movs	r1, #32
 4690 00e6 2046     		mov	r0, r4
 4691 00e8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4692              	.LVL406:
 4693 00ec B8B9     		cbnz	r0, .L414
1283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 4694              		.loc 1 1283 0
 4695 00ee 002D     		cmp	r5, #0
 4696 00f0 E5D0     		beq	.L420
1290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****         pdata8bits++;
 4697              		.loc 1 1290 0
 4698 00f2 2368     		ldr	r3, [r4]
 4699 00f4 9A8C     		ldrh	r2, [r3, #36]
 4700 00f6 5FFA88F3 		uxtb	r3, r8
 4701 00fa 1340     		ands	r3, r3, r2
 4702 00fc 05F8013B 		strb	r3, [r5], #1
 4703              	.LVL407:
 4704 0100 E3E7     		b	.L406
 4705              	.L419:
1297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4706              		.loc 1 1297 0
 4707 0102 2023     		movs	r3, #32
 4708 0104 E367     		str	r3, [r4, #124]
1299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4709              		.loc 1 1299 0
 4710 0106 0020     		movs	r0, #0
 4711 0108 00E0     		b	.L395
 4712              	.LVL408:
 4713              	.L408:
1303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4714              		.loc 1 1303 0
 4715 010a 0220     		movs	r0, #2
 4716              	.LVL409:
 4717              	.L395:
1305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4718              		.loc 1 1305 0
 4719 010c 03B0     		add	sp, sp, #12
 4720              		.cfi_remember_state
 4721              		.cfi_def_cfa_offset 28
 4722              		@ sp needed
 4723 010e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4724              	.LVL410:
 4725              	.L409:
 4726              		.cfi_restore_state
1243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4727              		.loc 1 1243 0
 4728 0112 0120     		movs	r0, #1
 4729              	.LVL411:
 4730 0114 FAE7     		b	.L395
 4731              	.LVL412:
 4732              	.L410:
 4733 0116 0120     		movs	r0, #1
 4734              	.LVL413:
 4735 0118 F8E7     		b	.L395
 4736              	.LVL414:
 4737              	.L411:
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4738              		.loc 1 1246 0
 4739 011a 0220     		movs	r0, #2
 4740              	.LVL415:
 4741 011c F6E7     		b	.L395
 4742              	.LVL416:
 4743              	.L414:
1281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 4744              		.loc 1 1281 0
 4745 011e 0320     		movs	r0, #3
 4746 0120 F4E7     		b	.L395
 4747              		.cfi_endproc
 4748              	.LFE325:
 4750              		.section	.text.UART_CheckIdleState,"ax",%progbits
 4751              		.align	1
 4752              		.global	UART_CheckIdleState
 4753              		.syntax unified
 4754              		.thumb
 4755              		.thumb_func
 4756              		.fpu fpv4-sp-d16
 4758              	UART_CheckIdleState:
 4759              	.LFB362:
3458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
 4760              		.loc 1 3458 0
 4761              		.cfi_startproc
 4762              		@ args = 0, pretend = 0, frame = 0
 4763              		@ frame_needed = 0, uses_anonymous_args = 0
 4764              	.LVL417:
 4765 0000 30B5     		push	{r4, r5, lr}
 4766              		.cfi_def_cfa_offset 12
 4767              		.cfi_offset 4, -12
 4768              		.cfi_offset 5, -8
 4769              		.cfi_offset 14, -4
 4770 0002 83B0     		sub	sp, sp, #12
 4771              		.cfi_def_cfa_offset 24
 4772 0004 0446     		mov	r4, r0
3462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4773              		.loc 1 3462 0
 4774 0006 0023     		movs	r3, #0
 4775 0008 C0F88030 		str	r3, [r0, #128]
3465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4776              		.loc 1 3465 0
 4777 000c FFF7FEFF 		bl	HAL_GetTick
 4778              	.LVL418:
 4779 0010 0546     		mov	r5, r0
 4780              	.LVL419:
3468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4781              		.loc 1 3468 0
 4782 0012 2368     		ldr	r3, [r4]
 4783 0014 1B68     		ldr	r3, [r3]
 4784 0016 13F0080F 		tst	r3, #8
 4785 001a 0DD1     		bne	.L428
 4786              	.LVL420:
 4787              	.L422:
3479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4788              		.loc 1 3479 0
 4789 001c 2368     		ldr	r3, [r4]
 4790 001e 1B68     		ldr	r3, [r3]
 4791 0020 13F0040F 		tst	r3, #4
 4792 0024 16D1     		bne	.L429
 4793              	.L424:
3490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4794              		.loc 1 3490 0
 4795 0026 2023     		movs	r3, #32
 4796 0028 A367     		str	r3, [r4, #120]
3491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4797              		.loc 1 3491 0
 4798 002a E367     		str	r3, [r4, #124]
3492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4799              		.loc 1 3492 0
 4800 002c 0020     		movs	r0, #0
 4801 002e 2066     		str	r0, [r4, #96]
3494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4802              		.loc 1 3494 0
 4803 0030 84F87400 		strb	r0, [r4, #116]
 4804              	.L423:
3497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4805              		.loc 1 3497 0
 4806 0034 03B0     		add	sp, sp, #12
 4807              		.cfi_remember_state
 4808              		.cfi_def_cfa_offset 12
 4809              		@ sp needed
 4810 0036 30BD     		pop	{r4, r5, pc}
 4811              	.LVL421:
 4812              	.L428:
 4813              		.cfi_restore_state
3471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4814              		.loc 1 3471 0
 4815 0038 6FF07E43 		mvn	r3, #-33554432
 4816 003c 0093     		str	r3, [sp]
 4817 003e 0346     		mov	r3, r0
 4818 0040 0022     		movs	r2, #0
 4819 0042 4FF40011 		mov	r1, #2097152
 4820 0046 2046     		mov	r0, r4
 4821              	.LVL422:
 4822 0048 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4823              	.LVL423:
 4824 004c 0028     		cmp	r0, #0
 4825 004e E5D0     		beq	.L422
3474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4826              		.loc 1 3474 0
 4827 0050 0320     		movs	r0, #3
 4828 0052 EFE7     		b	.L423
 4829              	.L429:
3482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 4830              		.loc 1 3482 0
 4831 0054 6FF07E43 		mvn	r3, #-33554432
 4832 0058 0093     		str	r3, [sp]
 4833 005a 2B46     		mov	r3, r5
 4834 005c 0022     		movs	r2, #0
 4835 005e 4FF48001 		mov	r1, #4194304
 4836 0062 2046     		mov	r0, r4
 4837 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4838              	.LVL424:
 4839 0068 0028     		cmp	r0, #0
 4840 006a DCD0     		beq	.L424
3485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 4841              		.loc 1 3485 0
 4842 006c 0320     		movs	r0, #3
 4843 006e E1E7     		b	.L423
 4844              		.cfi_endproc
 4845              	.LFE362:
 4847              		.section	.text.HAL_UART_Init,"ax",%progbits
 4848              		.align	1
 4849              		.global	HAL_UART_Init
 4850              		.syntax unified
 4851              		.thumb
 4852              		.thumb_func
 4853              		.fpu fpv4-sp-d16
 4855              	HAL_UART_Init:
 4856              	.LFB317:
 322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4857              		.loc 1 322 0
 4858              		.cfi_startproc
 4859              		@ args = 0, pretend = 0, frame = 0
 4860              		@ frame_needed = 0, uses_anonymous_args = 0
 4861              	.LVL425:
 324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4862              		.loc 1 324 0
 4863 0000 68B3     		cbz	r0, .L434
 322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4864              		.loc 1 322 0
 4865 0002 10B5     		push	{r4, lr}
 4866              		.cfi_def_cfa_offset 8
 4867              		.cfi_offset 4, -8
 4868              		.cfi_offset 14, -4
 4869 0004 0446     		mov	r4, r0
 340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4870              		.loc 1 340 0
 4871 0006 836F     		ldr	r3, [r0, #120]
 4872 0008 03B3     		cbz	r3, .L439
 4873              	.LVL426:
 4874              	.L432:
 361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4875              		.loc 1 361 0
 4876 000a 2423     		movs	r3, #36
 4877 000c A367     		str	r3, [r4, #120]
 363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4878              		.loc 1 363 0
 4879 000e 2268     		ldr	r2, [r4]
 4880 0010 1368     		ldr	r3, [r2]
 4881 0012 23F00103 		bic	r3, r3, #1
 4882 0016 1360     		str	r3, [r2]
 366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4883              		.loc 1 366 0
 4884 0018 2046     		mov	r0, r4
 4885 001a FFF7FEFF 		bl	UART_SetConfig
 4886              	.LVL427:
 4887 001e 0128     		cmp	r0, #1
 4888 0020 13D0     		beq	.L431
 371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4889              		.loc 1 371 0
 4890 0022 636A     		ldr	r3, [r4, #36]
 4891 0024 BBB9     		cbnz	r3, .L440
 4892              	.L433:
 379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4893              		.loc 1 379 0
 4894 0026 2268     		ldr	r2, [r4]
 4895 0028 5368     		ldr	r3, [r2, #4]
 4896 002a 23F49043 		bic	r3, r3, #18432
 4897 002e 5360     		str	r3, [r2, #4]
 380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4898              		.loc 1 380 0
 4899 0030 2268     		ldr	r2, [r4]
 4900 0032 9368     		ldr	r3, [r2, #8]
 4901 0034 23F02A03 		bic	r3, r3, #42
 4902 0038 9360     		str	r3, [r2, #8]
 382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4903              		.loc 1 382 0
 4904 003a 2268     		ldr	r2, [r4]
 4905 003c 1368     		ldr	r3, [r2]
 4906 003e 43F00103 		orr	r3, r3, #1
 4907 0042 1360     		str	r3, [r2]
 385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 4908              		.loc 1 385 0
 4909 0044 2046     		mov	r0, r4
 4910 0046 FFF7FEFF 		bl	UART_CheckIdleState
 4911              	.LVL428:
 4912              	.L431:
 386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4913              		.loc 1 386 0
 4914 004a 10BD     		pop	{r4, pc}
 4915              	.LVL429:
 4916              	.L439:
 343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4917              		.loc 1 343 0
 4918 004c 80F87430 		strb	r3, [r0, #116]
 357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4919              		.loc 1 357 0
 4920 0050 FFF7FEFF 		bl	HAL_UART_MspInit
 4921              	.LVL430:
 4922 0054 D9E7     		b	.L432
 4923              	.L440:
 373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4924              		.loc 1 373 0
 4925 0056 2046     		mov	r0, r4
 4926 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4927              	.LVL431:
 4928 005c E3E7     		b	.L433
 4929              	.LVL432:
 4930              	.L434:
 4931              		.cfi_def_cfa_offset 0
 4932              		.cfi_restore 4
 4933              		.cfi_restore 14
 326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 4934              		.loc 1 326 0
 4935 005e 0120     		movs	r0, #1
 4936              	.LVL433:
 386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4937              		.loc 1 386 0
 4938 0060 7047     		bx	lr
 4939              		.cfi_endproc
 4940              	.LFE317:
 4942              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4943              		.align	1
 4944              		.global	HAL_HalfDuplex_Init
 4945              		.syntax unified
 4946              		.thumb
 4947              		.thumb_func
 4948              		.fpu fpv4-sp-d16
 4950              	HAL_HalfDuplex_Init:
 4951              	.LFB318:
 395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4952              		.loc 1 395 0
 4953              		.cfi_startproc
 4954              		@ args = 0, pretend = 0, frame = 0
 4955              		@ frame_needed = 0, uses_anonymous_args = 0
 4956              	.LVL434:
 397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4957              		.loc 1 397 0
 4958 0000 0028     		cmp	r0, #0
 4959 0002 32D0     		beq	.L445
 395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4960              		.loc 1 395 0
 4961 0004 10B5     		push	{r4, lr}
 4962              		.cfi_def_cfa_offset 8
 4963              		.cfi_offset 4, -8
 4964              		.cfi_offset 14, -4
 4965 0006 0446     		mov	r4, r0
 405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4966              		.loc 1 405 0
 4967 0008 836F     		ldr	r3, [r0, #120]
 4968 000a 2BB3     		cbz	r3, .L450
 4969              	.LVL435:
 4970              	.L443:
 426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4971              		.loc 1 426 0
 4972 000c 2423     		movs	r3, #36
 4973 000e A367     		str	r3, [r4, #120]
 428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4974              		.loc 1 428 0
 4975 0010 2268     		ldr	r2, [r4]
 4976 0012 1368     		ldr	r3, [r2]
 4977 0014 23F00103 		bic	r3, r3, #1
 4978 0018 1360     		str	r3, [r2]
 431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4979              		.loc 1 431 0
 4980 001a 2046     		mov	r0, r4
 4981 001c FFF7FEFF 		bl	UART_SetConfig
 4982              	.LVL436:
 4983 0020 0128     		cmp	r0, #1
 4984 0022 18D0     		beq	.L442
 436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 4985              		.loc 1 436 0
 4986 0024 636A     		ldr	r3, [r4, #36]
 4987 0026 E3B9     		cbnz	r3, .L451
 4988              	.L444:
 444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 4989              		.loc 1 444 0
 4990 0028 2268     		ldr	r2, [r4]
 4991 002a 5368     		ldr	r3, [r2, #4]
 4992 002c 23F49043 		bic	r3, r3, #18432
 4993 0030 5360     		str	r3, [r2, #4]
 445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4994              		.loc 1 445 0
 4995 0032 2268     		ldr	r2, [r4]
 4996 0034 9368     		ldr	r3, [r2, #8]
 4997 0036 23F02203 		bic	r3, r3, #34
 4998 003a 9360     		str	r3, [r2, #8]
 448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 4999              		.loc 1 448 0
 5000 003c 2268     		ldr	r2, [r4]
 5001 003e 9368     		ldr	r3, [r2, #8]
 5002 0040 43F00803 		orr	r3, r3, #8
 5003 0044 9360     		str	r3, [r2, #8]
 450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5004              		.loc 1 450 0
 5005 0046 2268     		ldr	r2, [r4]
 5006 0048 1368     		ldr	r3, [r2]
 5007 004a 43F00103 		orr	r3, r3, #1
 5008 004e 1360     		str	r3, [r2]
 453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 5009              		.loc 1 453 0
 5010 0050 2046     		mov	r0, r4
 5011 0052 FFF7FEFF 		bl	UART_CheckIdleState
 5012              	.LVL437:
 5013              	.L442:
 454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5014              		.loc 1 454 0
 5015 0056 10BD     		pop	{r4, pc}
 5016              	.LVL438:
 5017              	.L450:
 408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5018              		.loc 1 408 0
 5019 0058 80F87430 		strb	r3, [r0, #116]
 422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5020              		.loc 1 422 0
 5021 005c FFF7FEFF 		bl	HAL_UART_MspInit
 5022              	.LVL439:
 5023 0060 D4E7     		b	.L443
 5024              	.L451:
 438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5025              		.loc 1 438 0
 5026 0062 2046     		mov	r0, r4
 5027 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5028              	.LVL440:
 5029 0068 DEE7     		b	.L444
 5030              	.LVL441:
 5031              	.L445:
 5032              		.cfi_def_cfa_offset 0
 5033              		.cfi_restore 4
 5034              		.cfi_restore 14
 399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5035              		.loc 1 399 0
 5036 006a 0120     		movs	r0, #1
 5037              	.LVL442:
 454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5038              		.loc 1 454 0
 5039 006c 7047     		bx	lr
 5040              		.cfi_endproc
 5041              	.LFE318:
 5043              		.section	.text.HAL_LIN_Init,"ax",%progbits
 5044              		.align	1
 5045              		.global	HAL_LIN_Init
 5046              		.syntax unified
 5047              		.thumb
 5048              		.thumb_func
 5049              		.fpu fpv4-sp-d16
 5051              	HAL_LIN_Init:
 5052              	.LFB319:
 468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5053              		.loc 1 468 0
 5054              		.cfi_startproc
 5055              		@ args = 0, pretend = 0, frame = 0
 5056              		@ frame_needed = 0, uses_anonymous_args = 0
 5057              	.LVL443:
 470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5058              		.loc 1 470 0
 5059 0000 0028     		cmp	r0, #0
 5060 0002 40D0     		beq	.L456
 468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5061              		.loc 1 468 0
 5062 0004 38B5     		push	{r3, r4, r5, lr}
 5063              		.cfi_def_cfa_offset 16
 5064              		.cfi_offset 3, -16
 5065              		.cfi_offset 4, -12
 5066              		.cfi_offset 5, -8
 5067              		.cfi_offset 14, -4
 5068 0006 0446     		mov	r4, r0
 481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5069              		.loc 1 481 0
 5070 0008 C369     		ldr	r3, [r0, #28]
 5071 000a B3F5004F 		cmp	r3, #32768
 5072 000e 3CD0     		beq	.L457
 486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5073              		.loc 1 486 0
 5074 0010 8368     		ldr	r3, [r0, #8]
 5075 0012 002B     		cmp	r3, #0
 5076 0014 3BD1     		bne	.L458
 5077 0016 0D46     		mov	r5, r1
 491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5078              		.loc 1 491 0
 5079 0018 836F     		ldr	r3, [r0, #120]
 5080 001a 5BB3     		cbz	r3, .L463
 5081              	.LVL444:
 5082              	.L454:
 512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5083              		.loc 1 512 0
 5084 001c 2423     		movs	r3, #36
 5085 001e A367     		str	r3, [r4, #120]
 514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5086              		.loc 1 514 0
 5087 0020 2268     		ldr	r2, [r4]
 5088 0022 1368     		ldr	r3, [r2]
 5089 0024 23F00103 		bic	r3, r3, #1
 5090 0028 1360     		str	r3, [r2]
 517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5091              		.loc 1 517 0
 5092 002a 2046     		mov	r0, r4
 5093 002c FFF7FEFF 		bl	UART_SetConfig
 5094              	.LVL445:
 5095 0030 0128     		cmp	r0, #1
 5096 0032 2DD0     		beq	.L453
 522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5097              		.loc 1 522 0
 5098 0034 636A     		ldr	r3, [r4, #36]
 5099 0036 13BB     		cbnz	r3, .L464
 5100              	.L455:
 530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 5101              		.loc 1 530 0
 5102 0038 2268     		ldr	r2, [r4]
 5103 003a 5368     		ldr	r3, [r2, #4]
 5104 003c 23F40063 		bic	r3, r3, #2048
 5105 0040 5360     		str	r3, [r2, #4]
 531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5106              		.loc 1 531 0
 5107 0042 2268     		ldr	r2, [r4]
 5108 0044 9368     		ldr	r3, [r2, #8]
 5109 0046 23F02A03 		bic	r3, r3, #42
 5110 004a 9360     		str	r3, [r2, #8]
 534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5111              		.loc 1 534 0
 5112 004c 2268     		ldr	r2, [r4]
 5113 004e 5368     		ldr	r3, [r2, #4]
 5114 0050 43F48043 		orr	r3, r3, #16384
 5115 0054 5360     		str	r3, [r2, #4]
 537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5116              		.loc 1 537 0
 5117 0056 2368     		ldr	r3, [r4]
 5118 0058 5968     		ldr	r1, [r3, #4]
 5119 005a 21F02001 		bic	r1, r1, #32
 5120 005e 2943     		orrs	r1, r1, r5
 5121 0060 5960     		str	r1, [r3, #4]
 539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5122              		.loc 1 539 0
 5123 0062 2268     		ldr	r2, [r4]
 5124 0064 1368     		ldr	r3, [r2]
 5125 0066 43F00103 		orr	r3, r3, #1
 5126 006a 1360     		str	r3, [r2]
 542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 5127              		.loc 1 542 0
 5128 006c 2046     		mov	r0, r4
 5129 006e FFF7FEFF 		bl	UART_CheckIdleState
 5130              	.LVL446:
 5131 0072 0DE0     		b	.L453
 5132              	.LVL447:
 5133              	.L463:
 494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5134              		.loc 1 494 0
 5135 0074 80F87430 		strb	r3, [r0, #116]
 508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5136              		.loc 1 508 0
 5137 0078 FFF7FEFF 		bl	HAL_UART_MspInit
 5138              	.LVL448:
 5139 007c CEE7     		b	.L454
 5140              	.L464:
 524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5141              		.loc 1 524 0
 5142 007e 2046     		mov	r0, r4
 5143 0080 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5144              	.LVL449:
 5145 0084 D8E7     		b	.L455
 5146              	.LVL450:
 5147              	.L456:
 5148              		.cfi_def_cfa_offset 0
 5149              		.cfi_restore 3
 5150              		.cfi_restore 4
 5151              		.cfi_restore 5
 5152              		.cfi_restore 14
 472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5153              		.loc 1 472 0
 5154 0086 0120     		movs	r0, #1
 5155              	.LVL451:
 543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5156              		.loc 1 543 0
 5157 0088 7047     		bx	lr
 5158              	.LVL452:
 5159              	.L457:
 5160              		.cfi_def_cfa_offset 16
 5161              		.cfi_offset 3, -16
 5162              		.cfi_offset 4, -12
 5163              		.cfi_offset 5, -8
 5164              		.cfi_offset 14, -4
 483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5165              		.loc 1 483 0
 5166 008a 0120     		movs	r0, #1
 5167              	.LVL453:
 5168 008c 00E0     		b	.L453
 5169              	.LVL454:
 5170              	.L458:
 488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5171              		.loc 1 488 0
 5172 008e 0120     		movs	r0, #1
 5173              	.LVL455:
 5174              	.L453:
 543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5175              		.loc 1 543 0
 5176 0090 38BD     		pop	{r3, r4, r5, pc}
 5177              		.cfi_endproc
 5178              	.LFE319:
 5180              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 5181              		.align	1
 5182              		.global	HAL_MultiProcessor_Init
 5183              		.syntax unified
 5184              		.thumb
 5185              		.thumb_func
 5186              		.fpu fpv4-sp-d16
 5188              	HAL_MultiProcessor_Init:
 5189              	.LFB320:
 565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5190              		.loc 1 565 0
 5191              		.cfi_startproc
 5192              		@ args = 0, pretend = 0, frame = 0
 5193              		@ frame_needed = 0, uses_anonymous_args = 0
 5194              	.LVL456:
 567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5195              		.loc 1 567 0
 5196 0000 0028     		cmp	r0, #0
 5197 0002 40D0     		beq	.L470
 565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5198              		.loc 1 565 0
 5199 0004 70B5     		push	{r4, r5, r6, lr}
 5200              		.cfi_def_cfa_offset 16
 5201              		.cfi_offset 4, -16
 5202              		.cfi_offset 5, -12
 5203              		.cfi_offset 6, -8
 5204              		.cfi_offset 14, -4
 5205 0006 0446     		mov	r4, r0
 5206 0008 1546     		mov	r5, r2
 5207 000a 0E46     		mov	r6, r1
 575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5208              		.loc 1 575 0
 5209 000c 836F     		ldr	r3, [r0, #120]
 5210 000e 4BB3     		cbz	r3, .L475
 5211              	.LVL457:
 5212              	.L467:
 596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5213              		.loc 1 596 0
 5214 0010 2423     		movs	r3, #36
 5215 0012 A367     		str	r3, [r4, #120]
 598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5216              		.loc 1 598 0
 5217 0014 2268     		ldr	r2, [r4]
 5218 0016 1368     		ldr	r3, [r2]
 5219 0018 23F00103 		bic	r3, r3, #1
 5220 001c 1360     		str	r3, [r2]
 601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5221              		.loc 1 601 0
 5222 001e 2046     		mov	r0, r4
 5223 0020 FFF7FEFF 		bl	UART_SetConfig
 5224              	.LVL458:
 5225 0024 0128     		cmp	r0, #1
 5226 0026 1CD0     		beq	.L466
 606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5227              		.loc 1 606 0
 5228 0028 636A     		ldr	r3, [r4, #36]
 5229 002a 03BB     		cbnz	r3, .L476
 5230              	.L468:
 614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5231              		.loc 1 614 0
 5232 002c 2268     		ldr	r2, [r4]
 5233 002e 5368     		ldr	r3, [r2, #4]
 5234 0030 23F49043 		bic	r3, r3, #18432
 5235 0034 5360     		str	r3, [r2, #4]
 615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5236              		.loc 1 615 0
 5237 0036 2268     		ldr	r2, [r4]
 5238 0038 9368     		ldr	r3, [r2, #8]
 5239 003a 23F02A03 		bic	r3, r3, #42
 5240 003e 9360     		str	r3, [r2, #8]
 617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5241              		.loc 1 617 0
 5242 0040 B5F5006F 		cmp	r5, #2048
 5243 0044 17D0     		beq	.L477
 5244              	.L469:
 624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5245              		.loc 1 624 0
 5246 0046 2368     		ldr	r3, [r4]
 5247 0048 1A68     		ldr	r2, [r3]
 5248 004a 22F40062 		bic	r2, r2, #2048
 5249 004e 1543     		orrs	r5, r5, r2
 5250              	.LVL459:
 5251 0050 1D60     		str	r5, [r3]
 626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5252              		.loc 1 626 0
 5253 0052 2268     		ldr	r2, [r4]
 5254 0054 1368     		ldr	r3, [r2]
 5255 0056 43F00103 		orr	r3, r3, #1
 5256 005a 1360     		str	r3, [r2]
 629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 5257              		.loc 1 629 0
 5258 005c 2046     		mov	r0, r4
 5259 005e FFF7FEFF 		bl	UART_CheckIdleState
 5260              	.LVL460:
 5261              	.L466:
 630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5262              		.loc 1 630 0
 5263 0062 70BD     		pop	{r4, r5, r6, pc}
 5264              	.LVL461:
 5265              	.L475:
 578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5266              		.loc 1 578 0
 5267 0064 80F87430 		strb	r3, [r0, #116]
 592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5268              		.loc 1 592 0
 5269 0068 FFF7FEFF 		bl	HAL_UART_MspInit
 5270              	.LVL462:
 5271 006c D0E7     		b	.L467
 5272              	.L476:
 608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5273              		.loc 1 608 0
 5274 006e 2046     		mov	r0, r4
 5275 0070 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5276              	.LVL463:
 5277 0074 DAE7     		b	.L468
 5278              	.L477:
 620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5279              		.loc 1 620 0
 5280 0076 2368     		ldr	r3, [r4]
 5281 0078 5968     		ldr	r1, [r3, #4]
 5282 007a 21F07F41 		bic	r1, r1, #-16777216
 5283 007e 41EA0666 		orr	r6, r1, r6, lsl #24
 5284 0082 5E60     		str	r6, [r3, #4]
 5285 0084 DFE7     		b	.L469
 5286              	.LVL464:
 5287              	.L470:
 5288              		.cfi_def_cfa_offset 0
 5289              		.cfi_restore 4
 5290              		.cfi_restore 5
 5291              		.cfi_restore 6
 5292              		.cfi_restore 14
 569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5293              		.loc 1 569 0
 5294 0086 0120     		movs	r0, #1
 5295              	.LVL465:
 630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5296              		.loc 1 630 0
 5297 0088 7047     		bx	lr
 5298              		.cfi_endproc
 5299              	.LFE320:
 5301              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5302              		.align	1
 5303              		.global	HAL_MultiProcessor_EnableMuteMode
 5304              		.syntax unified
 5305              		.thumb
 5306              		.thumb_func
 5307              		.fpu fpv4-sp-d16
 5309              	HAL_MultiProcessor_EnableMuteMode:
 5310              	.LFB352:
2923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 5311              		.loc 1 2923 0
 5312              		.cfi_startproc
 5313              		@ args = 0, pretend = 0, frame = 0
 5314              		@ frame_needed = 0, uses_anonymous_args = 0
 5315              	.LVL466:
 5316 0000 08B5     		push	{r3, lr}
 5317              		.cfi_def_cfa_offset 8
 5318              		.cfi_offset 3, -8
 5319              		.cfi_offset 14, -4
2924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5320              		.loc 1 2924 0
 5321 0002 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 5322 0006 012B     		cmp	r3, #1
 5323 0008 0ED0     		beq	.L480
2924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5324              		.loc 1 2924 0 is_stmt 0 discriminator 2
 5325 000a 0123     		movs	r3, #1
 5326 000c 80F87430 		strb	r3, [r0, #116]
2926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5327              		.loc 1 2926 0 is_stmt 1 discriminator 2
 5328 0010 2423     		movs	r3, #36
 5329 0012 8367     		str	r3, [r0, #120]
2929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5330              		.loc 1 2929 0 discriminator 2
 5331 0014 0268     		ldr	r2, [r0]
 5332 0016 1368     		ldr	r3, [r2]
 5333 0018 43F40053 		orr	r3, r3, #8192
 5334 001c 1360     		str	r3, [r2]
2931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5335              		.loc 1 2931 0 discriminator 2
 5336 001e 2023     		movs	r3, #32
 5337 0020 8367     		str	r3, [r0, #120]
2933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 5338              		.loc 1 2933 0 discriminator 2
 5339 0022 FFF7FEFF 		bl	UART_CheckIdleState
 5340              	.LVL467:
 5341              	.L479:
2934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5342              		.loc 1 2934 0
 5343 0026 08BD     		pop	{r3, pc}
 5344              	.LVL468:
 5345              	.L480:
2924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5346              		.loc 1 2924 0
 5347 0028 0220     		movs	r0, #2
 5348              	.LVL469:
 5349 002a FCE7     		b	.L479
 5350              		.cfi_endproc
 5351              	.LFE352:
 5353              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5354              		.align	1
 5355              		.global	HAL_MultiProcessor_DisableMuteMode
 5356              		.syntax unified
 5357              		.thumb
 5358              		.thumb_func
 5359              		.fpu fpv4-sp-d16
 5361              	HAL_MultiProcessor_DisableMuteMode:
 5362              	.LFB353:
2943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 5363              		.loc 1 2943 0
 5364              		.cfi_startproc
 5365              		@ args = 0, pretend = 0, frame = 0
 5366              		@ frame_needed = 0, uses_anonymous_args = 0
 5367              	.LVL470:
 5368 0000 08B5     		push	{r3, lr}
 5369              		.cfi_def_cfa_offset 8
 5370              		.cfi_offset 3, -8
 5371              		.cfi_offset 14, -4
2944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5372              		.loc 1 2944 0
 5373 0002 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 5374 0006 012B     		cmp	r3, #1
 5375 0008 0ED0     		beq	.L484
2944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5376              		.loc 1 2944 0 is_stmt 0 discriminator 2
 5377 000a 0123     		movs	r3, #1
 5378 000c 80F87430 		strb	r3, [r0, #116]
2946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5379              		.loc 1 2946 0 is_stmt 1 discriminator 2
 5380 0010 2423     		movs	r3, #36
 5381 0012 8367     		str	r3, [r0, #120]
2949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5382              		.loc 1 2949 0 discriminator 2
 5383 0014 0268     		ldr	r2, [r0]
 5384 0016 1368     		ldr	r3, [r2]
 5385 0018 23F40053 		bic	r3, r3, #8192
 5386 001c 1360     		str	r3, [r2]
2951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5387              		.loc 1 2951 0 discriminator 2
 5388 001e 2023     		movs	r3, #32
 5389 0020 8367     		str	r3, [r0, #120]
2953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** }
 5390              		.loc 1 2953 0 discriminator 2
 5391 0022 FFF7FEFF 		bl	UART_CheckIdleState
 5392              	.LVL471:
 5393              	.L483:
2954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5394              		.loc 1 2954 0
 5395 0026 08BD     		pop	{r3, pc}
 5396              	.LVL472:
 5397              	.L484:
2944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5398              		.loc 1 2944 0
 5399 0028 0220     		movs	r0, #2
 5400              	.LVL473:
 5401 002a FCE7     		b	.L483
 5402              		.cfi_endproc
 5403              	.LFE353:
 5405              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 5406              		.align	1
 5407              		.global	UART_Start_Receive_IT
 5408              		.syntax unified
 5409              		.thumb
 5410              		.thumb_func
 5411              		.fpu fpv4-sp-d16
 5413              	UART_Start_Receive_IT:
 5414              	.LFB364:
3579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->pRxBuffPtr  = pData;
 5415              		.loc 1 3579 0
 5416              		.cfi_startproc
 5417              		@ args = 0, pretend = 0, frame = 0
 5418              		@ frame_needed = 0, uses_anonymous_args = 0
 5419              		@ link register save eliminated.
 5420              	.LVL474:
 5421 0000 0346     		mov	r3, r0
3580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferSize  = Size;
 5422              		.loc 1 3580 0
 5423 0002 4165     		str	r1, [r0, #84]
3581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferCount = Size;
 5424              		.loc 1 3581 0
 5425 0004 A0F85820 		strh	r2, [r0, #88]	@ movhi
3582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxISR       = NULL;
 5426              		.loc 1 3582 0
 5427 0008 A0F85A20 		strh	r2, [r0, #90]	@ movhi
3583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5428              		.loc 1 3583 0
 5429 000c 0022     		movs	r2, #0
 5430              	.LVL475:
 5431 000e 4266     		str	r2, [r0, #100]
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5432              		.loc 1 3586 0
 5433 0010 8268     		ldr	r2, [r0, #8]
 5434 0012 B2F5805F 		cmp	r2, #4096
 5435 0016 06D0     		beq	.L496
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5436              		.loc 1 3586 0 is_stmt 0 discriminator 2
 5437 0018 A2B9     		cbnz	r2, .L490
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5438              		.loc 1 3586 0 discriminator 5
 5439 001a 0269     		ldr	r2, [r0, #16]
 5440 001c 72B9     		cbnz	r2, .L491
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5441              		.loc 1 3586 0 discriminator 7
 5442 001e FF22     		movs	r2, #255
 5443 0020 A0F85C20 		strh	r2, [r0, #92]	@ movhi
 5444 0024 14E0     		b	.L489
 5445              	.L496:
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5446              		.loc 1 3586 0 discriminator 1
 5447 0026 0269     		ldr	r2, [r0, #16]
 5448 0028 22B9     		cbnz	r2, .L488
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5449              		.loc 1 3586 0 discriminator 3
 5450 002a 40F2FF12 		movw	r2, #511
 5451 002e A0F85C20 		strh	r2, [r0, #92]	@ movhi
 5452 0032 0DE0     		b	.L489
 5453              	.L488:
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5454              		.loc 1 3586 0 discriminator 4
 5455 0034 FF22     		movs	r2, #255
 5456 0036 A0F85C20 		strh	r2, [r0, #92]	@ movhi
 5457 003a 09E0     		b	.L489
 5458              	.L491:
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5459              		.loc 1 3586 0 discriminator 8
 5460 003c 7F22     		movs	r2, #127
 5461 003e A0F85C20 		strh	r2, [r0, #92]	@ movhi
 5462 0042 05E0     		b	.L489
 5463              	.L490:
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5464              		.loc 1 3586 0 discriminator 6
 5465 0044 B2F1805F 		cmp	r2, #268435456
 5466 0048 1BD0     		beq	.L497
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5467              		.loc 1 3586 0 discriminator 10
 5468 004a 0022     		movs	r2, #0
 5469 004c A0F85C20 		strh	r2, [r0, #92]	@ movhi
 5470              	.L489:
3588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 5471              		.loc 1 3588 0 is_stmt 1
 5472 0050 0022     		movs	r2, #0
 5473 0052 C3F88020 		str	r2, [r3, #128]
3589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5474              		.loc 1 3589 0
 5475 0056 2222     		movs	r2, #34
 5476 0058 DA67     		str	r2, [r3, #124]
3592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5477              		.loc 1 3592 0
 5478 005a 1968     		ldr	r1, [r3]
 5479              	.LVL476:
 5480 005c 8A68     		ldr	r2, [r1, #8]
 5481 005e 42F00102 		orr	r2, r2, #1
 5482 0062 8A60     		str	r2, [r1, #8]
 5483              	.LVL477:
3633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5484              		.loc 1 3633 0
 5485 0064 9A68     		ldr	r2, [r3, #8]
 5486 0066 B2F5805F 		cmp	r2, #4096
 5487 006a 14D0     		beq	.L498
 5488              	.L494:
3639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5489              		.loc 1 3639 0
 5490 006c 0D4A     		ldr	r2, .L499
 5491 006e 5A66     		str	r2, [r3, #100]
 5492              	.L495:
3642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5493              		.loc 1 3642 0
 5494 0070 0020     		movs	r0, #0
 5495              	.LVL478:
 5496 0072 83F87400 		strb	r0, [r3, #116]
3645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 5497              		.loc 1 3645 0
 5498 0076 1A68     		ldr	r2, [r3]
 5499 0078 1368     		ldr	r3, [r2]
 5500              	.LVL479:
 5501 007a 43F49073 		orr	r3, r3, #288
 5502 007e 1360     		str	r3, [r2]
3648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5503              		.loc 1 3648 0
 5504 0080 7047     		bx	lr
 5505              	.LVL480:
 5506              	.L497:
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5507              		.loc 1 3586 0 discriminator 9
 5508 0082 0269     		ldr	r2, [r0, #16]
 5509 0084 1AB9     		cbnz	r2, .L493
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5510              		.loc 1 3586 0 is_stmt 0 discriminator 11
 5511 0086 7F22     		movs	r2, #127
 5512 0088 A0F85C20 		strh	r2, [r0, #92]	@ movhi
 5513 008c E0E7     		b	.L489
 5514              	.L493:
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5515              		.loc 1 3586 0 discriminator 12
 5516 008e 3F22     		movs	r2, #63
 5517 0090 A0F85C20 		strh	r2, [r0, #92]	@ movhi
 5518 0094 DCE7     		b	.L489
 5519              	.LVL481:
 5520              	.L498:
3633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5521              		.loc 1 3633 0 is_stmt 1 discriminator 1
 5522 0096 1A69     		ldr	r2, [r3, #16]
 5523 0098 002A     		cmp	r2, #0
 5524 009a E7D1     		bne	.L494
3635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5525              		.loc 1 3635 0
 5526 009c 024A     		ldr	r2, .L499+4
 5527 009e 5A66     		str	r2, [r3, #100]
 5528 00a0 E6E7     		b	.L495
 5529              	.L500:
 5530 00a2 00BF     		.align	2
 5531              	.L499:
 5532 00a4 00000000 		.word	UART_RxISR_8BIT
 5533 00a8 00000000 		.word	UART_RxISR_16BIT
 5534              		.cfi_endproc
 5535              	.LFE364:
 5537              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 5538              		.align	1
 5539              		.global	HAL_UART_Receive_IT
 5540              		.syntax unified
 5541              		.thumb
 5542              		.thumb_func
 5543              		.fpu fpv4-sp-d16
 5545              	HAL_UART_Receive_IT:
 5546              	.LFB327:
1409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 5547              		.loc 1 1409 0
 5548              		.cfi_startproc
 5549              		@ args = 0, pretend = 0, frame = 0
 5550              		@ frame_needed = 0, uses_anonymous_args = 0
 5551              	.LVL482:
1411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5552              		.loc 1 1411 0
 5553 0000 C36F     		ldr	r3, [r0, #124]
 5554 0002 202B     		cmp	r3, #32
 5555 0004 1AD1     		bne	.L504
1413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 5556              		.loc 1 1413 0
 5557 0006 D9B1     		cbz	r1, .L505
1413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 5558              		.loc 1 1413 0 is_stmt 0 discriminator 1
 5559 0008 E2B1     		cbz	r2, .L506
1418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5560              		.loc 1 1418 0 is_stmt 1
 5561 000a 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 5562 000e 012B     		cmp	r3, #1
 5563 0010 1AD0     		beq	.L507
1409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 5564              		.loc 1 1409 0 discriminator 2
 5565 0012 10B5     		push	{r4, lr}
 5566              		.cfi_def_cfa_offset 8
 5567              		.cfi_offset 4, -8
 5568              		.cfi_offset 14, -4
1418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5569              		.loc 1 1418 0 discriminator 2
 5570 0014 0123     		movs	r3, #1
 5571 0016 80F87430 		strb	r3, [r0, #116]
1421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5572              		.loc 1 1421 0 discriminator 2
 5573 001a 0023     		movs	r3, #0
 5574 001c 0366     		str	r3, [r0, #96]
1423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 5575              		.loc 1 1423 0 discriminator 2
 5576 001e 0368     		ldr	r3, [r0]
 5577 0020 0A4C     		ldr	r4, .L512
 5578 0022 A342     		cmp	r3, r4
 5579 0024 07D0     		beq	.L503
1426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 5580              		.loc 1 1426 0
 5581 0026 5C68     		ldr	r4, [r3, #4]
 5582 0028 14F4000F 		tst	r4, #8388608
 5583 002c 03D0     		beq	.L503
1429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 5584              		.loc 1 1429 0
 5585 002e 1C68     		ldr	r4, [r3]
 5586 0030 44F08064 		orr	r4, r4, #67108864
 5587 0034 1C60     		str	r4, [r3]
 5588              	.L503:
1433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5589              		.loc 1 1433 0
 5590 0036 FFF7FEFF 		bl	UART_Start_Receive_IT
 5591              	.LVL483:
1439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5592              		.loc 1 1439 0
 5593 003a 10BD     		pop	{r4, pc}
 5594              	.LVL484:
 5595              	.L504:
 5596              		.cfi_def_cfa_offset 0
 5597              		.cfi_restore 4
 5598              		.cfi_restore 14
1437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5599              		.loc 1 1437 0
 5600 003c 0220     		movs	r0, #2
 5601              	.LVL485:
 5602 003e 7047     		bx	lr
 5603              	.LVL486:
 5604              	.L505:
1415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 5605              		.loc 1 1415 0
 5606 0040 0120     		movs	r0, #1
 5607              	.LVL487:
 5608 0042 7047     		bx	lr
 5609              	.LVL488:
 5610              	.L506:
 5611 0044 0120     		movs	r0, #1
 5612              	.LVL489:
 5613 0046 7047     		bx	lr
 5614              	.LVL490:
 5615              	.L507:
1418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5616              		.loc 1 1418 0
 5617 0048 0220     		movs	r0, #2
 5618              	.LVL491:
1439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5619              		.loc 1 1439 0
 5620 004a 7047     		bx	lr
 5621              	.L513:
 5622              		.align	2
 5623              	.L512:
 5624 004c 00800040 		.word	1073774592
 5625              		.cfi_endproc
 5626              	.LFE327:
 5628              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 5629              		.align	1
 5630              		.global	UART_Start_Receive_DMA
 5631              		.syntax unified
 5632              		.thumb
 5633              		.thumb_func
 5634              		.fpu fpv4-sp-d16
 5636              	UART_Start_Receive_DMA:
 5637              	.LFB365:
3662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 5638              		.loc 1 3662 0
 5639              		.cfi_startproc
 5640              		@ args = 0, pretend = 0, frame = 0
 5641              		@ frame_needed = 0, uses_anonymous_args = 0
 5642              	.LVL492:
 5643 0000 10B5     		push	{r4, lr}
 5644              		.cfi_def_cfa_offset 8
 5645              		.cfi_offset 4, -8
 5646              		.cfi_offset 14, -4
 5647 0002 0446     		mov	r4, r0
3663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxXferSize = Size;
 5648              		.loc 1 3663 0
 5649 0004 4165     		str	r1, [r0, #84]
3664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5650              		.loc 1 3664 0
 5651 0006 A0F85820 		strh	r2, [r0, #88]	@ movhi
3666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 5652              		.loc 1 3666 0
 5653 000a 0023     		movs	r3, #0
 5654 000c C0F88030 		str	r3, [r0, #128]
3667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5655              		.loc 1 3667 0
 5656 0010 2223     		movs	r3, #34
 5657 0012 C367     		str	r3, [r0, #124]
3669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5658              		.loc 1 3669 0
 5659 0014 036F     		ldr	r3, [r0, #112]
 5660 0016 93B1     		cbz	r3, .L515
3672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5661              		.loc 1 3672 0
 5662 0018 1749     		ldr	r1, .L519
 5663              	.LVL493:
 5664 001a D962     		str	r1, [r3, #44]
 5665              	.LVL494:
3675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5666              		.loc 1 3675 0
 5667 001c 036F     		ldr	r3, [r0, #112]
 5668 001e 1749     		ldr	r1, .L519+4
 5669 0020 1963     		str	r1, [r3, #48]
3678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5670              		.loc 1 3678 0
 5671 0022 036F     		ldr	r3, [r0, #112]
 5672 0024 1649     		ldr	r1, .L519+8
 5673 0026 5963     		str	r1, [r3, #52]
3681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5674              		.loc 1 3681 0
 5675 0028 036F     		ldr	r3, [r0, #112]
 5676 002a 0021     		movs	r1, #0
 5677 002c 9963     		str	r1, [r3, #56]
3684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 5678              		.loc 1 3684 0
 5679 002e 0168     		ldr	r1, [r0]
 5680 0030 1346     		mov	r3, r2
 5681 0032 426D     		ldr	r2, [r0, #84]
 5682              	.LVL495:
 5683 0034 2431     		adds	r1, r1, #36
 5684 0036 006F     		ldr	r0, [r0, #112]
 5685              	.LVL496:
 5686 0038 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5687              	.LVL497:
 5688 003c 90B9     		cbnz	r0, .L518
 5689              	.L515:
3697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5690              		.loc 1 3697 0
 5691 003e 0020     		movs	r0, #0
 5692 0040 84F87400 		strb	r0, [r4, #116]
3700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5693              		.loc 1 3700 0
 5694 0044 2268     		ldr	r2, [r4]
 5695 0046 1368     		ldr	r3, [r2]
 5696 0048 43F48073 		orr	r3, r3, #256
 5697 004c 1360     		str	r3, [r2]
3703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5698              		.loc 1 3703 0
 5699 004e 2268     		ldr	r2, [r4]
 5700 0050 9368     		ldr	r3, [r2, #8]
 5701 0052 43F00103 		orr	r3, r3, #1
 5702 0056 9360     		str	r3, [r2, #8]
3707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5703              		.loc 1 3707 0
 5704 0058 2268     		ldr	r2, [r4]
 5705 005a 9368     		ldr	r3, [r2, #8]
 5706 005c 43F04003 		orr	r3, r3, #64
 5707 0060 9360     		str	r3, [r2, #8]
 5708              	.L516:
3710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5709              		.loc 1 3710 0
 5710 0062 10BD     		pop	{r4, pc}
 5711              	.LVL498:
 5712              	.L518:
3687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5713              		.loc 1 3687 0
 5714 0064 1023     		movs	r3, #16
 5715 0066 C4F88030 		str	r3, [r4, #128]
3689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5716              		.loc 1 3689 0
 5717 006a 0023     		movs	r3, #0
 5718 006c 84F87430 		strb	r3, [r4, #116]
3692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5719              		.loc 1 3692 0
 5720 0070 2023     		movs	r3, #32
 5721 0072 A367     		str	r3, [r4, #120]
3694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 5722              		.loc 1 3694 0
 5723 0074 0120     		movs	r0, #1
 5724 0076 F4E7     		b	.L516
 5725              	.L520:
 5726              		.align	2
 5727              	.L519:
 5728 0078 00000000 		.word	UART_DMAReceiveCplt
 5729 007c 00000000 		.word	UART_DMARxHalfCplt
 5730 0080 00000000 		.word	UART_DMAError
 5731              		.cfi_endproc
 5732              	.LFE365:
 5734              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 5735              		.align	1
 5736              		.global	HAL_UART_Receive_DMA
 5737              		.syntax unified
 5738              		.thumb
 5739              		.thumb_func
 5740              		.fpu fpv4-sp-d16
 5742              	HAL_UART_Receive_DMA:
 5743              	.LFB329:
1528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 5744              		.loc 1 1528 0
 5745              		.cfi_startproc
 5746              		@ args = 0, pretend = 0, frame = 0
 5747              		@ frame_needed = 0, uses_anonymous_args = 0
 5748              	.LVL499:
1530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   {
 5749              		.loc 1 1530 0
 5750 0000 C36F     		ldr	r3, [r0, #124]
 5751 0002 202B     		cmp	r3, #32
 5752 0004 1AD1     		bne	.L524
1532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 5753              		.loc 1 1532 0
 5754 0006 D9B1     		cbz	r1, .L525
1532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 5755              		.loc 1 1532 0 is_stmt 0 discriminator 1
 5756 0008 E2B1     		cbz	r2, .L526
1537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5757              		.loc 1 1537 0 is_stmt 1
 5758 000a 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 5759 000e 012B     		cmp	r3, #1
 5760 0010 1AD0     		beq	.L527
1528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 5761              		.loc 1 1528 0 discriminator 2
 5762 0012 10B5     		push	{r4, lr}
 5763              		.cfi_def_cfa_offset 8
 5764              		.cfi_offset 4, -8
 5765              		.cfi_offset 14, -4
1537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5766              		.loc 1 1537 0 discriminator 2
 5767 0014 0123     		movs	r3, #1
 5768 0016 80F87430 		strb	r3, [r0, #116]
1540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5769              		.loc 1 1540 0 discriminator 2
 5770 001a 0023     		movs	r3, #0
 5771 001c 0366     		str	r3, [r0, #96]
1542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     {
 5772              		.loc 1 1542 0 discriminator 2
 5773 001e 0368     		ldr	r3, [r0]
 5774 0020 0A4C     		ldr	r4, .L532
 5775 0022 A342     		cmp	r3, r4
 5776 0024 07D0     		beq	.L523
1545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       {
 5777              		.loc 1 1545 0
 5778 0026 5C68     		ldr	r4, [r3, #4]
 5779 0028 14F4000F 		tst	r4, #8388608
 5780 002c 03D0     		beq	.L523
1548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****       }
 5781              		.loc 1 1548 0
 5782 002e 1C68     		ldr	r4, [r3]
 5783 0030 44F08064 		orr	r4, r4, #67108864
 5784 0034 1C60     		str	r4, [r3]
 5785              	.L523:
1552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5786              		.loc 1 1552 0
 5787 0036 FFF7FEFF 		bl	UART_Start_Receive_DMA
 5788              	.LVL500:
1558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5789              		.loc 1 1558 0
 5790 003a 10BD     		pop	{r4, pc}
 5791              	.LVL501:
 5792              	.L524:
 5793              		.cfi_def_cfa_offset 0
 5794              		.cfi_restore 4
 5795              		.cfi_restore 14
1556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****   }
 5796              		.loc 1 1556 0
 5797 003c 0220     		movs	r0, #2
 5798              	.LVL502:
 5799 003e 7047     		bx	lr
 5800              	.LVL503:
 5801              	.L525:
1534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c ****     }
 5802              		.loc 1 1534 0
 5803 0040 0120     		movs	r0, #1
 5804              	.LVL504:
 5805 0042 7047     		bx	lr
 5806              	.LVL505:
 5807              	.L526:
 5808 0044 0120     		movs	r0, #1
 5809              	.LVL506:
 5810 0046 7047     		bx	lr
 5811              	.LVL507:
 5812              	.L527:
1537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5813              		.loc 1 1537 0
 5814 0048 0220     		movs	r0, #2
 5815              	.LVL508:
1558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_uart.c **** 
 5816              		.loc 1 1558 0
 5817 004a 7047     		bx	lr
 5818              	.L533:
 5819              		.align	2
 5820              	.L532:
 5821 004c 00800040 		.word	1073774592
 5822              		.cfi_endproc
 5823              	.LFE329:
 5825              		.text
 5826              	.Letext0:
 5827              		.file 2 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 5828              		.file 3 "../system/include/cmsis/stm32l4xx/core_cm4.h"
 5829              		.file 4 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 5830              		.file 5 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 5831              		.file 6 "../system/include/cmsis/stm32l4xx/device/stm32l4xx.h"
 5832              		.file 7 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_def.h"
 5833              		.file 8 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_dma.h"
 5834              		.file 9 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_flash.h"
 5835              		.file 10 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_uart.h"
 5836              		.file 11 "../system/include/stm32l4-hal-driver/stm32l4xx_hal.h"
 5837              		.file 12 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_rcc.h"
 5838              		.file 13 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_uart_ex.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_uart.c
     /tmp/ccc70Mmn.s:18     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccc70Mmn.s:24     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccc70Mmn.s:47     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccc70Mmn.s:53     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccc70Mmn.s:97     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccc70Mmn.s:103    .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccc70Mmn.s:155    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccc70Mmn.s:161    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccc70Mmn.s:218    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccc70Mmn.s:225    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccc70Mmn.s:239    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccc70Mmn.s:246    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccc70Mmn.s:260    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccc70Mmn.s:267    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccc70Mmn.s:335    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccc70Mmn.s:342    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccc70Mmn.s:439    .text.HAL_UART_Transmit_IT:000000000000006c $d
     /tmp/ccc70Mmn.s:445    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccc70Mmn.s:452    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccc70Mmn.s:580    .text.HAL_UART_Transmit_DMA:000000000000009c $d
     /tmp/ccc70Mmn.s:1229   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccc70Mmn.s:1343   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccc70Mmn.s:1435   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccc70Mmn.s:587    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccc70Mmn.s:594    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccc70Mmn.s:683    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccc70Mmn.s:690    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccc70Mmn.s:761    .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccc70Mmn.s:768    .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccc70Mmn.s:885    .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccc70Mmn.s:892    .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccc70Mmn.s:1027   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccc70Mmn.s:1034   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccc70Mmn.s:1100   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccc70Mmn.s:1107   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccc70Mmn.s:1202   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:1209   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccc70Mmn.s:1223   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccc70Mmn.s:1279   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccc70Mmn.s:1285   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccc70Mmn.s:1316   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:1323   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccc70Mmn.s:1337   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccc70Mmn.s:1366   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:1373   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccc70Mmn.s:1387   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:1394   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccc70Mmn.s:1408   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:1415   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccc70Mmn.s:1429   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccc70Mmn.s:1510   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccc70Mmn.s:1516   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccc70Mmn.s:1544   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:1551   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccc70Mmn.s:1565   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccc70Mmn.s:1572   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccc70Mmn.s:1750   .text.HAL_UART_Abort_IT:00000000000000ec $d
     /tmp/ccc70Mmn.s:1829   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccc70Mmn.s:1762   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccc70Mmn.s:1756   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:1823   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:1885   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:1892   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccc70Mmn.s:1906   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccc70Mmn.s:1913   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccc70Mmn.s:1991   .text.HAL_UART_AbortTransmit_IT:0000000000000060 $d
     /tmp/ccc70Mmn.s:2002   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccc70Mmn.s:1996   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:2031   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:2038   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccc70Mmn.s:2052   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccc70Mmn.s:2059   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccc70Mmn.s:2174   .text.HAL_UART_AbortReceive_IT:0000000000000098 $d
     /tmp/ccc70Mmn.s:2185   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccc70Mmn.s:2179   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:2225   .text.HAL_UARTEx_RxEventCallback:0000000000000000 $t
     /tmp/ccc70Mmn.s:2232   .text.HAL_UARTEx_RxEventCallback:0000000000000000 HAL_UARTEx_RxEventCallback
     /tmp/ccc70Mmn.s:2246   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccc70Mmn.s:2253   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccc70Mmn.s:2670   .text.HAL_UART_IRQHandler:0000000000000274 $d
     /tmp/ccc70Mmn.s:2676   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccc70Mmn.s:2682   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccc70Mmn.s:2789   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccc70Mmn.s:2795   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccc70Mmn.s:2904   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccc70Mmn.s:2910   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccc70Mmn.s:2946   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccc70Mmn.s:2952   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccc70Mmn.s:3029   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 $t
     /tmp/ccc70Mmn.s:3036   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 HAL_UART_ReceiverTimeout_Config
     /tmp/ccc70Mmn.s:3061   .text.HAL_UART_ReceiverTimeout_Config:0000000000000014 $d
     /tmp/ccc70Mmn.s:3066   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 $t
     /tmp/ccc70Mmn.s:3073   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 HAL_UART_EnableReceiverTimeout
     /tmp/ccc70Mmn.s:3136   .text.HAL_UART_EnableReceiverTimeout:0000000000000044 $d
     /tmp/ccc70Mmn.s:3141   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 $t
     /tmp/ccc70Mmn.s:3148   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 HAL_UART_DisableReceiverTimeout
     /tmp/ccc70Mmn.s:3211   .text.HAL_UART_DisableReceiverTimeout:0000000000000044 $d
     /tmp/ccc70Mmn.s:3216   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccc70Mmn.s:3223   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccc70Mmn.s:3242   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccc70Mmn.s:3249   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccc70Mmn.s:3298   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccc70Mmn.s:3305   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccc70Mmn.s:3354   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccc70Mmn.s:3361   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccc70Mmn.s:3405   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccc70Mmn.s:3412   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccc70Mmn.s:3434   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccc70Mmn.s:3441   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccc70Mmn.s:3459   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccc70Mmn.s:3466   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccc70Mmn.s:3570   .text.UART_SetConfig:000000000000008c $d
     /tmp/ccc70Mmn.s:3580   .text.UART_SetConfig:000000000000009e $t
     /tmp/ccc70Mmn.s:3591   .text.UART_SetConfig:00000000000000b2 $d
     /tmp/ccc70Mmn.s:3595   .text.UART_SetConfig:00000000000000b6 $t
     /tmp/ccc70Mmn.s:3626   .text.UART_SetConfig:00000000000000da $d
     /tmp/ccc70Mmn.s:3823   .text.UART_SetConfig:00000000000001d6 $d
     /tmp/ccc70Mmn.s:3897   .text.UART_SetConfig:000000000000023a $d
     /tmp/ccc70Mmn.s:3963   .text.UART_SetConfig:0000000000000288 $d
     /tmp/ccc70Mmn.s:3975   .text.UART_SetConfig:00000000000002ac $t
     /tmp/ccc70Mmn.s:4085   .text.UART_SetConfig:0000000000000320 $d
     /tmp/ccc70Mmn.s:4090   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccc70Mmn.s:4097   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccc70Mmn.s:4220   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccc70Mmn.s:4227   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccc70Mmn.s:4336   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccc70Mmn.s:4343   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccc70Mmn.s:4519   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccc70Mmn.s:4526   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccc70Mmn.s:4751   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccc70Mmn.s:4758   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccc70Mmn.s:4848   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccc70Mmn.s:4855   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccc70Mmn.s:4943   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccc70Mmn.s:4950   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccc70Mmn.s:5044   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccc70Mmn.s:5051   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccc70Mmn.s:5181   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccc70Mmn.s:5188   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccc70Mmn.s:5302   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccc70Mmn.s:5309   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccc70Mmn.s:5354   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccc70Mmn.s:5361   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccc70Mmn.s:5406   .text.UART_Start_Receive_IT:0000000000000000 $t
     /tmp/ccc70Mmn.s:5413   .text.UART_Start_Receive_IT:0000000000000000 UART_Start_Receive_IT
     /tmp/ccc70Mmn.s:5532   .text.UART_Start_Receive_IT:00000000000000a4 $d
     /tmp/ccc70Mmn.s:5538   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccc70Mmn.s:5545   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccc70Mmn.s:5624   .text.HAL_UART_Receive_IT:000000000000004c $d
     /tmp/ccc70Mmn.s:5629   .text.UART_Start_Receive_DMA:0000000000000000 $t
     /tmp/ccc70Mmn.s:5636   .text.UART_Start_Receive_DMA:0000000000000000 UART_Start_Receive_DMA
     /tmp/ccc70Mmn.s:5728   .text.UART_Start_Receive_DMA:0000000000000078 $d
     /tmp/ccc70Mmn.s:5735   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccc70Mmn.s:5742   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccc70Mmn.s:5821   .text.HAL_UART_Receive_DMA:000000000000004c $d
     /tmp/ccc70Mmn.s:3639   .text.UART_SetConfig:00000000000000e7 $d
     /tmp/ccc70Mmn.s:3639   .text.UART_SetConfig:00000000000000e8 $t
     /tmp/ccc70Mmn.s:3832   .text.UART_SetConfig:00000000000001df $d
     /tmp/ccc70Mmn.s:3832   .text.UART_SetConfig:00000000000001e0 $t
     /tmp/ccc70Mmn.s:3906   .text.UART_SetConfig:0000000000000243 $d
     /tmp/ccc70Mmn.s:3906   .text.UART_SetConfig:0000000000000244 $t
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.stm32l4xx_hal_conf.h.24.9ebdf529a64add7ef5197540a829be93
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.b6144e50d34fc998dd4c2cfb6387cf91
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.c14bec61d389910444dd6f90923a87b3
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.stm32l4xx_hal_def.h.58.ba9880fce6c06e05c42ff3652190ba19
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc.h.158.28a9a8aed9528254d5d00c542977dfd6
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc_ex.h.22.da7044b74af98b061fec57b6c981623c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio.h.22.cdd02b3dd2d28ab2a58b80abaa62239c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio_ex.h.22.e3066224621c54896e68c044cff2946f
                           .group:0000000000000000 wm4.stm32l4xx_hal_dma.h.22.13f7e03251508cf372ae373347b36e9b
                           .group:0000000000000000 wm4.stm32l4xx_hal_cortex.h.22.cb70b059ea6d04d060ca379a6d57d1fd
                           .group:0000000000000000 wm4.stm32l4xx_ll_adc.h.22.1a01db9155ec232fb5933b76785afed0
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc.h.321.ee3f28f76fc70066e4cbbd758e576892
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc_ex.h.22.fb5e6d418a426c9b079c9adc15fee3b1
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc.h.22.e28f2dff7c14319a60cfaa8412b63a14
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc_ex.h.22.58aa3be0563eedff5893c4b663184cf2
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac.h.22.74749bf4f9405a5fbfaaf1cc4c06eba3
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac_ex.h.22.4e3cedba5893653c1d8ca689fa739e33
                           .group:0000000000000000 wm4.stm32l4xx_hal_exti.h.22.d0c18acb1f51146e775f234290c1ac27
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.22.80f6973ea14060a68f7ca21c1dd39289
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.847.7bdb45d9d57728034960e0aaf38df4fb
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.22.5cbc76724b1dba5416e985e397b92828
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c_ex.h.22.4c81bf9806badb3d50f1da26b08d305a
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.715.a3aff164d469153c75cf623f9ff49d7a
                           .group:0000000000000000 wm4.stm32l4xx_hal_iwdg.h.22.7e954cf06602114b3daf58f5ffbb9e50
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr.h.22.0049bff0a26f90119451fdfe5f426c51
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr_ex.h.22.3d1049b6827a186d471882b21e35998d
                           .group:0000000000000000 wm4.stm32l4xx_hal_rng.h.22.3da3130b715b6ad6f9d8d49653bdfddb
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.22.21d64301309237f9b9255a8c80902f7c
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc_ex.h.22.6c248c3dbae3d1f0fefc4b9faaa2cd0b
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.977.b3b3c98b50a30362b61b120ec4fce236
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim.h.22.6c7398a1c55179e1de4bfd7d5a7564ac
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim_ex.h.22.1a7b532f5010a085c12eee7e9c7b0c21
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart.h.22.5f632bd044c516c02fe0b49488f063f8
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart_ex.h.22.de11c23890d64b2968c97dd6f5dae21a
                           .group:0000000000000000 wm4.stm32l4xx_hal.h.76.993cab68f7f350dd05a21a919b3be96f

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
