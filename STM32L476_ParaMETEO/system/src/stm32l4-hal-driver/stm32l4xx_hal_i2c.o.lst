   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_i2c.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	I2C_Flush_TXDR:
  25              	.LFB380:
  26              		.file 1 "../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c"
   1:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
   2:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   ******************************************************************************
   3:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @file    stm32l4xx_hal_i2c.c
   4:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @author  MCD Application Team
   5:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   6:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   7:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
   8:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
   9:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *           + IO operation functions
  10:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  11:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *
  12:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   @verbatim
  13:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   ==============================================================================
  14:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                         ##### How to use this driver #####
  15:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   ==============================================================================
  16:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
  17:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  18:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  19:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  20:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  21:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  22:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the @ref HAL_I2C_MspInit() API:
  23:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  24:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (##) I2C pins configuration
  25:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  26:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  27:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  28:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  29:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  30:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  31:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive channel
  32:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
  33:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
  34:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx channel
  35:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  36:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  37:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                   the DMA Tx or Rx channel
  38:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  39:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  40:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  41:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  42:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the @ref HAL_I2C_Init(), configures also the low le
  43:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized @ref HAL_I2C_MspInit(&hi2c) API.
  44:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  45:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function @ref HAL_I2C_IsDevic
  46:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  47:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  48:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  49:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     *** Polling mode IO operation ***
  50:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     =================================
  51:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
  52:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Tran
  53:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using @ref HAL_I2C_Master_Recei
  54:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Transm
  55:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using @ref HAL_I2C_Slave_Receive
  56:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  57:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  58:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     =====================================
  59:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
  60:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using @ref HAL_I2C_
  61:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using @ref HAL_I2C
  62:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  63:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  64:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  65:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     ===================================
  66:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
  67:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_
  68:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
  69:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
  70:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using @ref HAL_I2C_Master_R
  71:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
  72:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
  73:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Tr
  74:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
  75:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
  76:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using @ref HAL_I2C_Slave_Rec
  77:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
  78:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
  79:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
  80:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
  81:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
  82:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
  83:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
  84:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
  85:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  86:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  87:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
  88:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     *** Interrupt mode or DMA mode IO sequential operation ***
  89:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     ==========================================================
  90:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
  91:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
  92:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           when a direction change during transfer
  93:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
  94:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
  95:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Option field values are defined through @ref I2C_XFEROPTIONS and are listed below:
  96:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functional is same as associated interfac
  97:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
  98:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             and data to transfer without a final stop condition
  99:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             several times (like @ref HAL_I2C_Master_Seq_Transmit_IT() then @ref HAL
 102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             or @ref HAL_I2C_Master_Seq_Transmit_DMA() then @ref HAL_I2C_Master_Seq_
 103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) I2C_LAST_FRAME_NO_STOP: Sequential usage (Master only), this option allow to manage a re
 110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             interface several times (link with option I2C_FIRST_AND_NEXT_FRAME).
 111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one using HAL_I2C_Master_Seq_T
 112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_AND_NEXT_FRAME then
 113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_AND_NEXT_FRAME th
 114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_AND_NEXT_FRAME the
 115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             Then usage of this option I2C_LAST_FRAME_NO_STOP at the last Transmit o
 116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                               without stopping the communication and so generate a restart conditio
 117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) I2C_OTHER_FRAME: Sequential usage (Master only), this option allow to manage a restart c
 118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             interface.
 119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             Usage can, transfer several bytes one by one with a restart with slave 
 120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_IT(option I2C_FIRST_FRAME then I2C_OTHE
 121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Transmit_DMA(option I2C_FIRST_FRAME then I2C_OT
 122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                               or HAL_I2C_Master_Seq_Receive_DMA(option I2C_FIRST_FRAME then I2C_OTH
 123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                             Then usage of this option I2C_OTHER_AND_LAST_FRAME at the last frame to
 124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Different sequential I2C interfaces are listed below:
 126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using @ref
 127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Transmit_DMA()
 128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_MasterTxCpltCallback() is e
 129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using @ref 
 131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             or using @ref HAL_I2C_Master_Seq_Receive_DMA()
 132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_MasterRxCpltCallback() is exec
 133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) Abort a master IT or DMA I2C process communication with Interrupt using @ref HAL_I2C_Mas
 135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+++) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using @ref HAL_I2C_EnableListen
 138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+++) When address slave I2C match, @ref HAL_I2C_AddrCallback() is executed and user can
 139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+++) At Listen mode end @ref HAL_I2C_ListenCpltCallback() is executed and user can
 141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ListenCpltCallback()
 142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using @ref 
 143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Transmit_DMA()
 144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, @ref HAL_I2C_SlaveTxCpltCallback() is ex
 145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using @ref H
 147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             or using @ref HAL_I2C_Slave_Seq_Receive_DMA()
 148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, @ref HAL_I2C_SlaveRxCpltCallback() is execu
 149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user ca
 151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     =======================================
 157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_IT()
 160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_IT()
 164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     *** DMA mode IO operation ***
 170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     ==============================
 171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           @ref HAL_I2C_Master_Transmit_DMA()
 174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_MasterTxCpltCallback() is executed and user
 175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterTxCpltCallback(
 176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           @ref HAL_I2C_Master_Receive_DMA()
 178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_MasterRxCpltCallback() is executed and user ca
 179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MasterRxCpltCallback(
 180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Transmit_DMA()
 182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At transmission end of transfer, @ref HAL_I2C_SlaveTxCpltCallback() is executed and user 
 183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveTxCpltCallback()
 184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           @ref HAL_I2C_Slave_Receive_DMA()
 186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At reception end of transfer, @ref HAL_I2C_SlaveRxCpltCallback() is executed and user can
 187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_SlaveRxCpltCallback()
 188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using @ref HAL_I2C_Master_Abort_I
 191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) End of abort process, @ref HAL_I2C_AbortCpltCallback() is executed and user can
 192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_AbortCpltCallback()
 193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using @ref __HAL_I2C_GENERATE_NACK() macro.
 194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     =================================
 198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Write_DMA()
 201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At Memory end of write transfer, @ref HAL_I2C_MemTxCpltCallback() is executed and user ca
 202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemTxCpltCallback()
 203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
 204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           @ref HAL_I2C_Mem_Read_DMA()
 205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) At Memory end of read transfer, @ref HAL_I2C_MemRxCpltCallback() is executed and user can
 206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_MemRxCpltCallback()
 207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) In case of transfer Error, @ref HAL_I2C_ErrorCallback() function is executed and user can
 208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            add his own code by customization of function pointer @ref HAL_I2C_ErrorCallback()
 209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      ==================================
 213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      [..]
 214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE: Enable the I2C peripheral
 217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE: Disable the I2C peripheral
 218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) @ref __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) @ref __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) @ref __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
 222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) @ref __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      *** Callback registration ***
 225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      =============================================
 226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      The compilation flag USE_HAL_I2C_REGISTER_CALLBACKS when set to 1
 228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      allows the user to configure dynamically the driver callbacks.
 229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      Use Functions @ref HAL_I2C_RegisterCallback() or @ref HAL_I2C_RegisterAddrCallback()
 230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      to register an interrupt callback.
 231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      Function @ref HAL_I2C_RegisterCallback() allows to register following callbacks:
 233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      and a pointer to the user callback function.
 246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      For specific callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_RegisterAdd
 248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      Use function @ref HAL_I2C_UnRegisterCallback to reset a callback to the default
 250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      weak function.
 251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      @ref HAL_I2C_UnRegisterCallback takes as parameters the HAL peripheral handle,
 252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      and the Callback ID.
 253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      This function allows to reset following callbacks:
 254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MasterTxCpltCallback : callback for Master transmission end of transfer.
 255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MasterRxCpltCallback : callback for Master reception end of transfer.
 256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) SlaveTxCpltCallback  : callback for Slave transmission end of transfer.
 257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) SlaveRxCpltCallback  : callback for Slave reception end of transfer.
 258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) ListenCpltCallback   : callback for end of listen mode.
 259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MemTxCpltCallback    : callback for Memory transmission end of transfer.
 260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MemRxCpltCallback    : callback for Memory reception end of transfer.
 261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) ErrorCallback        : callback for error detection.
 262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) AbortCpltCallback    : callback for abort completion process.
 263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MspInitCallback      : callback for Msp Init.
 264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (+) MspDeInitCallback    : callback for Msp DeInit.
 265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      For callback AddrCallback use dedicated register callbacks : @ref HAL_I2C_UnRegisterAddrCallba
 267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      By default, after the @ref HAL_I2C_Init() and when the state is @ref HAL_I2C_STATE_RESET
 269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      all callbacks are set to the corresponding weak functions:
 270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      examples @ref HAL_I2C_MasterTxCpltCallback(), @ref HAL_I2C_MasterRxCpltCallback().
 271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      Exception done for MspInit and MspDeInit functions that are
 272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      reset to the legacy weak functions in the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit() only when
 273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      these callbacks are null (not registered beforehand).
 274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      If MspInit or MspDeInit are not null, the @ref HAL_I2C_Init()/ @ref HAL_I2C_DeInit()
 275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      Callbacks can be registered/unregistered in @ref HAL_I2C_STATE_READY state only.
 278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      in @ref HAL_I2C_STATE_READY or @ref HAL_I2C_STATE_RESET state,
 280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      using @ref HAL_I2C_RegisterCallback() before calling @ref HAL_I2C_DeInit()
 283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      or @ref HAL_I2C_Init() function.
 284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      When the compilation flag USE_HAL_I2C_REGISTER_CALLBACKS is set to 0 or
 286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      not defined, the callback registration feature is not available and all callbacks
 287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      are set to the corresponding weak functions.
 288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****      [..]
 290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   @endverbatim
 293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   ******************************************************************************
 294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @attention
 295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *
 296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * All rights reserved.</center></h2>
 298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *
 299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * the "License"; You may not use this file except in compliance with the
 301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * License. You may obtain a copy of the License at:
 302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                        opensource.org/licenses/BSD-3-Clause
 303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *
 304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   ******************************************************************************
 305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #include "stm32l4xx_hal.h"
 309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /** @addtogroup STM32L4xx_HAL_Driver
 311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @{
 312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /** @defgroup I2C I2C
 315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief I2C HAL module driver
 316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @{
 317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @{
 326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
 328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define SlaveAddr_SHIFT     7U
 340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define SlaveAddr_MSK       0x06U
 341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((uint32_t)((uint32_t)HAL_I2C_STATE_BUSY_TX | (uint32_
 344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | (
 350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)(((uint32_t)HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | (
 351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (uint16_t)(0x0001U)   /* Bit field can be combinated with @ref I2C_
 355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (uint16_t)(0x0002U)   /* Bit field can be combinated with @ref I2C_
 356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (uint16_t)(0x8000U)   /* Bit field can be combinated with @ref I2C_
 357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (uint16_t)(0x0010U)   /* Bit definition to manage addition of globa
 359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (uint16_t)(0x0020U)   /* Bit definition to manage only STOP eveneme
 360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (uint16_t)(0x0040U)   /* Bit definition to manage only Reload of NB
 361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @}
 366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @{
 374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
 376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
 377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
 380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c);
 386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c);
 387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                 uint16_t MemAddSize, uint32_t Timeout, uint32_t Tic
 395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                uint16_t MemAddSize, uint32_t Timeout, uint32_t Tick
 397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
 401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
 402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                     uint32_t Timeout, uint32_t Tickstart);
 407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
 411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private function to treat different error callback */
 417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c);
 418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private function to flush TXDR register */
 420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private function to handle  start, restart or stop a transfer */
 423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
 424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                uint32_t Request);
 425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Private function to Convert Specific options */
 427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c);
 428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @}
 430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @{
 436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
 439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *  @brief    Initialization and Configuration functions
 440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *
 441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** @verbatim
 442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****  ===============================================================================
 443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****  ===============================================================================
 445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           the selected configuration:
 453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) Clock Timing
 454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) Own Address 1
 455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) Dual Addressing mode
 457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) Own Address 2
 458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) Own Address 2 Mask
 459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) General call mode
 460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) Nostretch mode
 461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** @endverbatim
 466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @{
 467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
 475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
 478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c == NULL)
 480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
 482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
 485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_RESET)
 495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init the I2C Callback settings */
 501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallback 
 502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallback 
 503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback  = HAL_I2C_SlaveTxCpltCallback;  /* Legacy weak SlaveTxCpltCallback  
 504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback  = HAL_I2C_SlaveRxCpltCallback;  /* Legacy weak SlaveRxCpltCallback  
 505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ListenCpltCallback   = HAL_I2C_ListenCpltCallback;   /* Legacy weak ListenCpltCallback   
 506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->MemTxCpltCallback    = HAL_I2C_MemTxCpltCallback;    /* Legacy weak MemTxCpltCallback    
 507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->MemRxCpltCallback    = HAL_I2C_MemRxCpltCallback;    /* Legacy weak MemRxCpltCallback    
 508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCallback        = HAL_I2C_ErrorCallback;        /* Legacy weak ErrorCallback        
 509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->AbortCpltCallback    = HAL_I2C_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->AddrCallback         = HAL_I2C_AddrCallback;         /* Legacy weak AddrCallback         
 511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->MspInitCallback == NULL)
 513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->MspInitCallback = HAL_I2C_MspInit; /* Legacy weak MspInit  */
 515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->MspInitCallback(hi2c);
 519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
 520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
 544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
 577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
 584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
 587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c == NULL)
 589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
 591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
 594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->MspDeInitCallback == NULL)
 603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->MspDeInitCallback = HAL_I2C_MspDeInit; /* Legacy weak MspDeInit  */
 605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->MspDeInitCallback(hi2c);
 609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
 610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Release Lock */
 620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
 623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
 630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
 633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
 635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
 639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
 646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
 649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
 651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
 655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
 658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Register a User I2C Callback
 660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         To be used instead of the weak predefined callback
 661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be registered
 664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pCallback pointer to the Callback function
 677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
 678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Callb
 680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                            pI2C_CallbackTypeDef pCallback)
 681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
 682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (pCallback == NULL)
 685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Update the error code */
 687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
 690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process locked */
 692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     switch (CallbackID)
 697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = pCallback;
 700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = pCallback;
 704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = pCallback;
 708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = pCallback;
 712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ListenCpltCallback = pCallback;
 716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = pCallback;
 720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = pCallback;
 724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCallback = pCallback;
 728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->AbortCpltCallback = pCallback;
 732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       default :
 743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update the error code */
 744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Return error status */
 747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         status =  HAL_ERROR;
 748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     switch (CallbackID)
 754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MspInitCallback = pCallback;
 757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MspDeInitCallback = pCallback;
 761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       default :
 764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update the error code */
 765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Return error status */
 768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         status =  HAL_ERROR;
 769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
 773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Update the error code */
 775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Return error status */
 778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     status =  HAL_ERROR;
 779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Release Lock */
 782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return status;
 784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Unregister an I2C Callback
 788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         I2C callback is redirected to the weak predefined callback
 789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  CallbackID ID of the callback to be unregistered
 792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         This parameter can be one of the following values:
 794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_TX_COMPLETE_CB_ID Master Tx Transfer completed callback ID
 795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MASTER_RX_COMPLETE_CB_ID Master Rx Transfer completed callback ID
 796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_TX_COMPLETE_CB_ID Slave Tx Transfer completed callback ID
 797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_SLAVE_RX_COMPLETE_CB_ID Slave Rx Transfer completed callback ID
 798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_LISTEN_COMPLETE_CB_ID Listen Complete callback ID
 799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_TX_COMPLETE_CB_ID Memory Tx Transfer callback ID
 800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MEM_RX_COMPLETE_CB_ID Memory Rx Transfer completed callback ID
 801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ERROR_CB_ID Error callback ID
 802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_ABORT_CB_ID Abort callback ID
 803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPINIT_CB_ID MspInit callback ID
 804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *          @arg @ref HAL_I2C_MSPDEINIT_CB_ID MspDeInit callback ID
 805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
 806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterCallback(I2C_HandleTypeDef *hi2c, HAL_I2C_CallbackIDTypeDef Cal
 808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
 809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process locked */
 812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     switch (CallbackID)
 817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MASTER_TX_COMPLETE_CB_ID :
 819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MasterTxCpltCallback = HAL_I2C_MasterTxCpltCallback; /* Legacy weak MasterTxCpltCallb
 820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MASTER_RX_COMPLETE_CB_ID :
 823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MasterRxCpltCallback = HAL_I2C_MasterRxCpltCallback; /* Legacy weak MasterRxCpltCallb
 824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_SLAVE_TX_COMPLETE_CB_ID :
 827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->SlaveTxCpltCallback = HAL_I2C_SlaveTxCpltCallback;   /* Legacy weak SlaveTxCpltCallba
 828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_SLAVE_RX_COMPLETE_CB_ID :
 831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->SlaveRxCpltCallback = HAL_I2C_SlaveRxCpltCallback;   /* Legacy weak SlaveRxCpltCallba
 832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_LISTEN_COMPLETE_CB_ID :
 835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ListenCpltCallback = HAL_I2C_ListenCpltCallback;     /* Legacy weak ListenCpltCallbac
 836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MEM_TX_COMPLETE_CB_ID :
 839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MemTxCpltCallback = HAL_I2C_MemTxCpltCallback;       /* Legacy weak MemTxCpltCallback
 840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MEM_RX_COMPLETE_CB_ID :
 843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MemRxCpltCallback = HAL_I2C_MemRxCpltCallback;       /* Legacy weak MemRxCpltCallback
 844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_ERROR_CB_ID :
 847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCallback = HAL_I2C_ErrorCallback;               /* Legacy weak ErrorCallback    
 848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_ABORT_CB_ID :
 851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->AbortCpltCallback = HAL_I2C_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       default :
 863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update the error code */
 864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Return error status */
 867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         status =  HAL_ERROR;
 868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if (HAL_I2C_STATE_RESET == hi2c->State)
 872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     switch (CallbackID)
 874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MSPINIT_CB_ID :
 876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MspInitCallback = HAL_I2C_MspInit;                   /* Legacy weak MspInit          
 877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       case HAL_I2C_MSPDEINIT_CB_ID :
 880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->MspDeInitCallback = HAL_I2C_MspDeInit;               /* Legacy weak MspDeInit        
 881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       default :
 884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update the error code */
 885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Return error status */
 888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         status =  HAL_ERROR;
 889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         break;
 890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
 893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Update the error code */
 895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Return error status */
 898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     status =  HAL_ERROR;
 899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Release Lock */
 902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return status;
 904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Register the Slave Address Match I2C Callback
 908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         To be used instead of the weak HAL_I2C_AddrCallback() predefined callback
 909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pCallback pointer to the Address Match Callback function
 912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
 913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_RegisterAddrCallback(I2C_HandleTypeDef *hi2c, pI2C_AddrCallbackTypeDef pC
 915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
 916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (pCallback == NULL)
 919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Update the error code */
 921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
 924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process locked */
 926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->AddrCallback = pCallback;
 931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
 933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Update the error code */
 935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Return error status */
 938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     status =  HAL_ERROR;
 939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Release Lock */
 942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return status;
 944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  UnRegister the Slave Address Match I2C Callback
 948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         Info Ready I2C Callback is redirected to the weak HAL_I2C_AddrCallback() predefined cal
 949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
 952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_UnRegisterAddrCallback(I2C_HandleTypeDef *hi2c)
 954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
 955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef status = HAL_OK;
 956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process locked */
 958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (HAL_I2C_STATE_READY == hi2c->State)
 961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->AddrCallback = HAL_I2C_AddrCallback; /* Legacy weak AddrCallback  */
 963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
 965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Update the error code */
 967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_INVALID_CALLBACK;
 968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Return error status */
 970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     status =  HAL_ERROR;
 971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Release Lock */
 974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return status;
 976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @}
 982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
 983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *  @brief   Data transfers functions
 986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *
 987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** @verbatim
 988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****  ===============================================================================
 989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                       ##### IO operation functions #####
 990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****  ===============================================================================
 991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
 992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     transfers.
 994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     (#) There are two modes of transfer:
 996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             The status of all data processing is returned by the same function
 998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             after finishing transfer.
 999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
1000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
1001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             The end of the data processing will be indicated through the
1002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
1003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             using DMA mode.
1004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     (#) Blocking mode functions are :
1006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
1007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
1008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
1009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
1010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
1011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
1012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
1013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
1015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
1016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
1017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
1018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
1019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
1020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
1021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_IT()
1022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_IT()
1023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_IT()
1024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_IT()
1025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_EnableListen_IT()
1026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_DisableListen_IT()
1027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Abort_IT()
1028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
1030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
1031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
1032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
1033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
1034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
1035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
1036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Transmit_DMA()
1037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Master_Seq_Receive_DMA()
1038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Transmit_DMA()
1039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Seq_Receive_DMA()
1040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
1042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
1043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
1044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
1045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
1046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
1047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
1048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_AddrCallback()
1049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_ListenCpltCallback()
1050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
1051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (++) HAL_I2C_AbortCpltCallback()
1052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** @endverbatim
1054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @{
1055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
1056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
1058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
1059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
1067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
1068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
1069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                           uint32_t Timeout)
1070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
1071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
1072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
1076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
1084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
1093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address */
1096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
1103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
1114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Write data to TXDR */
1116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Increment Buffer pointer */
1119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
1122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize--;
1123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
1129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           return HAL_ERROR;
1130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
1131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
1134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
1137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         else
1138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
1139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
1142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
1150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear STOP Flag */
1153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
1162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
1165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
1167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
1169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
1171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
1173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
1174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
1182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
1183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
1184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                          uint32_t Timeout)
1185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
1186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
1187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
1191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
1197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
1199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
1203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
1208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address */
1211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
1216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
1218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
1229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Read data from RXDR */
1232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Increment Buffer pointer */
1235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize--;
1238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
1239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
1241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
1245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           return HAL_ERROR;
1246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
1247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
1249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
1250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
1252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
1253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         else
1254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
1255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
1257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
1258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
1263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
1266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear STOP Flag */
1269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
1278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
1281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
1283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
1285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
1287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
1289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode.
1290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
1296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
1297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
1298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
1299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
1300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
1307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
1309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
1321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
1332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear ADDR flag */
1335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
1338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
1339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
1341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
1346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Clear ADDR flag */
1349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
1353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
1354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
1358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
1368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Write data to TXDR */
1371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
1372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Increment Buffer pointer */
1374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
1377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Normal use case for Transmitter mode */
1388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* A NACK is generated to confirm the end of transfer */
1389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
1392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
1394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear STOP flag */
1398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
1406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
1415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
1418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
1420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
1422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
1424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
1426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
1433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
1434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
1436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
1437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
1441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
1443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
1444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
1446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
1458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
1469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear ADDR flag */
1472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
1473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
1475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
1476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
1480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     while (hi2c->XferCount > 0U)
1483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Store Last receive data if any */
1491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
1492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
1493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Read data from RXDR */
1494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Increment Buffer pointer */
1497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->pBuffPtr++;
1498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->XferCount--;
1500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
1501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
1503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Read data from RXDR */
1506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
1507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Increment Buffer pointer */
1509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
1510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
1512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
1520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear STOP flag */
1523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
1531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
1540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
1543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
1545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
1547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
1549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
1551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
1559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
1560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                              uint16_t Size)
1562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
1563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
1564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_BUSY;
1570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
1573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
1591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address */
1597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_WRIT
1599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
1601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               process unlock */
1606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* possible to enable all of these */
1609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
1613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
1615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
1617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
1619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
1621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
1629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
1630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
1632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
1633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_BUSY;
1639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
1642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
1660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address */
1666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
1668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
1670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               process unlock */
1675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* possible to enable all of these */
1678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
1680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
1682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
1684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
1686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
1688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
1690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
1696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
1697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
1699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
1702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
1719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               process unlock */
1724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* possible to enable all of these */
1727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
1729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
1731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
1733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
1735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
1737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
1739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt
1740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
1745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
1746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
1748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
1751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
1768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               process unlock */
1773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* possible to enable all of these */
1776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
1778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
1780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
1782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
1784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
1786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
1788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
1796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
1797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                               uint16_t Size)
1799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
1800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
1801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_BUSY;
1808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
1811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
1829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
1837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
1840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the DMA error callback */
1842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
1846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
1847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable the DMA channel */
1849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
1850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
1852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C state */
1854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C error code */
1858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
1859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
1861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
1864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
1867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Send Slave Address */
1869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART 
1870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
1871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update XferCount value */
1873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
1874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
1876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
1879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
1880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                   process unlock */
1881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
1882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable DMA Request */
1885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
1888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C state */
1890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
1892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C error code */
1894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
1895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
1897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
1900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
1903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Send Slave Address */
1908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
1909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
1910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
1912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 process unlock */
1917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* possible to enable all of these */
1919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
1924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
1926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
1928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
1929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
1930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
1932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
1933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
1937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
1940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
1941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                              uint16_t Size)
1943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
1944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
1945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
1946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
1948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
1949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_BUSY;
1952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
1955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
1962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
1968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
1973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
1977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
1979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
1980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
1981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
1983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
1984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the DMA error callback */
1986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
1989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
1990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
1991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
1992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable the DMA channel */
1993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
1994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
1995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
1996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
1997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C state */
1998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
1999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C error code */
2002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
2005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
2008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
2009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
2011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
2012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Send Slave Address */
2013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART *
2014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_
2015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update XferCount value */
2017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
2018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
2023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
2024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                   process unlock */
2025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
2026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable DMA Request */
2029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
2031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
2032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
2033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C state */
2034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
2035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
2036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C error code */
2038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
2041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
2044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
2045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
2049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
2050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Send Slave Address */
2052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
2053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 process unlock */
2061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* possible to enable all of these */
2063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
2064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
2068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
2070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
2072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
2074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
2076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
2077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
2082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
2083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
2084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
2085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
2093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
2095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
2112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the DMA error callback */
2114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable the DMA channel */
2121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
2126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
2130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 process unlock */
2149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable DMA Request */
2153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
2158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
2162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
2171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
2173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
2175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
2177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
2179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
2180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
2185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
2186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
2187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
2188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
2196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
2198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
2202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
2210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
2215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the DMA error callback */
2217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable the DMA channel */
2224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
2229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
2233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable Address Acknowledge */
2244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 process unlock */
2252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, ADDR interrupts */
2253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable DMA Request */
2256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
2261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
2262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
2265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
2274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
2276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
2278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
2280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
2281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
2282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
2292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
2293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
2294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                     uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Ti
2295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
2296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
2297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
2299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
2307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
2310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
2327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL
2331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
2338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
2342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
2347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     do
2350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
2352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
2354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
2355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
2356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Write data to TXDR */
2358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
2359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Increment Buffer pointer */
2361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
2364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize--;
2365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
2368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
2371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           return HAL_ERROR;
2372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
2373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
2376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
2378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
2379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         else
2380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
2381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
2384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
2385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     } while (hi2c->XferCount > 0U);
2387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear STOP Flag */
2396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
2405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
2408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
2410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
2412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
2414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
2416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
2417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
2427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
2428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
2429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                    uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Tim
2430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
2431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
2432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
2434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
2442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
2445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK
2451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
2457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
2461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
2462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
2463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
2466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address */
2473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
2478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
2483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     do
2486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
2488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
2489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
2490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
2491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
2492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Read data from RXDR */
2494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
2495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Increment Buffer pointer */
2497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
2498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize--;
2500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
2501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
2503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
2504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Wait until TCR flag is set */
2505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
2506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
2507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           return HAL_ERROR;
2508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
2509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->XferCount > MAX_NBYTE_SIZE)
2511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
2512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
2513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
2514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
2515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         else
2516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
2517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
2518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
2519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
2520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
2521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     } while (hi2c->XferCount > 0U);
2522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */
2525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
2526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear STOP Flag */
2531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
2540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
2543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
2545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
2547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
2549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
2550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
2560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
2561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                        uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
2564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
2565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
2566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
2568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
2576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_BUSY;
2581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
2584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
2622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               process unlock */
2627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* possible to enable all of these */
2630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
2634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
2636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
2638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
2640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
2642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
2652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
2653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                       uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
2656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
2657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
2658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
2660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
2668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_BUSY;
2673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
2676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_READ
2712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
2714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               process unlock */
2719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* possible to enable all of these */
2722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
2726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
2728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
2730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
2732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
2733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
2743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
2744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                         uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
2747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
2748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
2749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
2752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
2760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_BUSY;
2765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
2768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstar
2796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
2804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
2807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the DMA error callback */
2809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
2813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
2814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable the DMA channel */
2816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
2817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
2821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
2825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Send Slave Address */
2836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update XferCount value */
2840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 process unlock */
2848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable DMA Request */
2852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
2857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
2861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
2862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
2870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
2872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
2874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
2875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
2876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
2878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
2879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
2883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be read
2887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
2888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
2889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                        uint16_t MemAddSize, uint8_t *pData, uint16_t Size)
2891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
2892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
2893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
2894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
2895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
2897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
2900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
2901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
2902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
2904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
2905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_BUSY;
2910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
2913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
2923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
2929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
2948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
2950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
2951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the DMA error callback */
2953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
2956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
2957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
2958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable the DMA channel */
2960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
2961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
2965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
2966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
2967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
2969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
2970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
2975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
2978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, I2C_GENERATE_START_RE
2981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update XferCount value */
2983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
2984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
2986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
2987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
2989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
2990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 process unlock */
2991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
2992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
2994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable DMA Request */
2995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
2997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
2998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
2999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
3000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_READY;
3001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
3004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
3007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
3010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
3013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
3015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
3017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
3019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
3021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
3022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @note   This function is used with Memory devices
3023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Trials Number of trials
3028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
3030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
3031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
3032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
3033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
3034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0UL;
3036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   FlagStatus tmp1;
3038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   FlagStatus tmp2;
3039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
3043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_BUSY;
3045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
3048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
3051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     do
3054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Generate Start */
3056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
3057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
3059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
3060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tickstart = HAL_GetTick();
3061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       while ((tmp1 == RESET) && (tmp2 == RESET))
3066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (Timeout != HAL_MAX_DELAY)
3068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
3069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
3070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
3071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             /* Update I2C state */
3072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
3073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             /* Update I2C error code */
3075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             /* Process Unlocked */
3078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
3079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             return HAL_ERROR;
3081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
3082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
3083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
3085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
3086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
3089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
3090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
3094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           return HAL_ERROR;
3095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
3096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Clear STOP Flag */
3098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Device is ready */
3101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
3102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
3104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_OK;
3107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
3109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
3113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           return HAL_ERROR;
3114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
3115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Clear NACK Flag */
3117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
3120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
3124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_Trials == Trials)
3125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Generate Stop */
3127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
3128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
3130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
3131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
3132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           return HAL_ERROR;
3133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
3134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Clear STOP Flag */
3136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Increment Trials */
3140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Trials++;
3141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     } while (I2C_Trials < Trials);
3142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Update I2C state */
3144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Update I2C error code */
3147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
3148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
3150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
3153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
3155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
3157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
3159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
3161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
3162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
3171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
3172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                  uint16_t Size, uint32_t XferOptions)
3174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
3175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
3176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
3179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
3184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
3227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
3230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               process unlock */
3235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
3238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
3240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
3242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
3244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
3246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with DMA.
3247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
3256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
3257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uin
3258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                   uint16_t Size, uint32_t XferOptions)
3259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
3260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
3261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
3262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
3265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
3270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
3273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
3315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
3318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the DMA error callback */
3320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmatx->XferHalfCpltCallback = NULL;
3324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
3325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable the DMA channel */
3327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->
3328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
3330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C state */
3332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C error code */
3336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
3339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
3342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to write */
3347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update XferCount value */
3350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
3353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                   process unlock */
3358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable DMA Request */
3362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
3365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C state */
3367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C error code */
3371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
3374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
3377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Send Slave Address */
3385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
3386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
3389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 process unlock */
3394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* possible to enable all of these */
3396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
3401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
3403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
3405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
3407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
3409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
3410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
3419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
3420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8
3421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                 uint16_t Size, uint32_t XferOptions)
3422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
3423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
3424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
3427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
3432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
3443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
3475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
3478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
3482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               process unlock */
3483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
3484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
3486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
3488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
3490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
3492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
3494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with DMA
3495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
3500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
3504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
3505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint
3506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                  uint16_t Size, uint32_t XferOptions)
3507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
3508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
3509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
3510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
3513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
3516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
3518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
3521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
3522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
3529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
3531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
3532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
3534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
3535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
3539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
3540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If transfer direction not change and there is no request to start another frame, do not gene
3543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
3544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST
3545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
3547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Convert OTHER_xxx XferOptions if any */
3551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_ConvertOtherXferOptions(hi2c);
3552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update xfermode accordingly if no reload is necessary */
3554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->XferCount <= MAX_NBYTE_SIZE)
3555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         xfermode = hi2c->XferOptions;
3557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferSize > 0U)
3561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
3563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the I2C DMA transfer complete callback */
3565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
3566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the DMA error callback */
3568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
3569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set the unused DMA callbacks to NULL */
3571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmarx->XferHalfCpltCallback = NULL;
3572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
3573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable the DMA channel */
3575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)p
3576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
3578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C state */
3580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C error code */
3584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
3587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
3590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (dmaxferstatus == HAL_OK)
3593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Send Slave Address and set NBYTES to read */
3595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode, xferrequest);
3596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update XferCount value */
3598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->XferCount -= hi2c->XferSize;
3599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
3601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Note : The I2C interrupts must be enabled after unlocking current process
3604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                   to avoid the risk of I2C interrupt handle execution before current
3605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                   process unlock */
3606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable ERR and NACK interrupts */
3607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
3608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Enable DMA Request */
3610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
3611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
3613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C state */
3615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State     = HAL_I2C_STATE_READY;
3616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
3617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Update I2C error code */
3619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
3622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
3625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
3630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
3631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Send Slave Address */
3633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
3634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
3635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
3637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
3640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
3641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                 process unlock */
3642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
3643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* possible to enable all of these */
3644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
3645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
3646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
3649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
3651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
3653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
3655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
3657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
3665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
3666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
3667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                 uint32_t XferOptions)
3668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
3669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
3670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
3678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
3684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable associated Interrupts */
3691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Abort DMA Xfer if any */
3694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
3700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Abort DMA RX */
3705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
3707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
3710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
3711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
3727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
3736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     process unlock */
3741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* REnable ADDR interrupt */
3742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
3743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
3745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
3747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
3749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
3751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
3753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
3754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
3761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
3762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t 
3763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                  uint32_t XferOptions)
3764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
3765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
3766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
3768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
3776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
3779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
3783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
3786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable associated Interrupts */
3789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
3792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
3795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
3796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
3797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
3801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Abort DMA RX */
3803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
3804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
3805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
3807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
3808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
3809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
3820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Abort DMA TX */
3825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
3827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
3830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
3831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Nothing to do */
3836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
3839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
3848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
3849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
3850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
3851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
3853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
3855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
3856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the DMA error callback */
3858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
3859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
3861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
3862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
3863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable the DMA channel */
3865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TX
3866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
3870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
3874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
3875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
3877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
3880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
3883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update XferCount value */
3885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
3886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Reset XferSize */
3888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = 0;
3889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
3891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
3893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
3894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
3895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
3897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
3898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
3900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
3903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
3906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
3908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
3909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
3913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
3916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
3917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     process unlock */
3918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
3919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable DMA Request */
3922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
3925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
3927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
3929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
3930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
3931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
3933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
3934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
3935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
3938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
3939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
3940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
3941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
3942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Si
3943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                uint32_t XferOptions)
3944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
3945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
3946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
3947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
3949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
3950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
3951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
3953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
3954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
3957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
3958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
3960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
3961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
3963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
3964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
3966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable associated Interrupts */
3967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
3970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
3971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
3972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
3974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
3975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
3976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
3977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
3978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
3979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Abort DMA TX */
3981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
3982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
3983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
3984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
3985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
3986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
3987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
3988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
3989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
3991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
3992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
3993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
3995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
3996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
3997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
3998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
3999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
4003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
4005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
4012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     process unlock */
4017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* REnable ADDR interrupt */
4018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
4021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
4023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
4025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
4030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
4031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
4034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
4035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
4036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
4037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Seq_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t S
4039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                 uint32_t XferOptions)
4040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
4042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
4044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
4045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
4047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((pData == NULL) || (Size == 0U))
4049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
4051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
4052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
4055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
4056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
4058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
4061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
4062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
4063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable associated Interrupts */
4065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->hdmatx != NULL)
4071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
4072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Abort DMA TX */
4079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
4081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
4084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
4085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
4088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Abort DMA Xfer if any */
4094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->hdmarx != NULL)
4095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
4096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Set the I2C DMA Abort callback :
4097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Abort DMA RX */
4101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
4103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             /* Call Directly XferAbortCallback function in case of error */
4104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
4106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
4107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
4110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Nothing to do */
4112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
4115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
4116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable Address Acknowledge */
4119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
4120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Prepare transfer parameters */
4122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
4123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
4124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
4125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
4126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
4127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
4129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
4131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
4132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the DMA error callback */
4134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
4135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
4137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
4138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
4139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable the DMA channel */
4141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       dmaxferstatus = HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pDa
4142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
4144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
4146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
4150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA_PARAM;
4151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
4153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
4156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (dmaxferstatus == HAL_OK)
4159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update XferCount value */
4161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Reset XferSize */
4164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = 0;
4165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
4167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C state */
4169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State     = HAL_I2C_STATE_LISTEN;
4170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
4171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update I2C error code */
4173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_DMA;
4174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
4176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
4179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
4182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
4184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
4185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
4186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
4189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
4193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     process unlock */
4194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* REnable ADDR interrupt */
4195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
4196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable DMA Request */
4198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
4201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
4203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
4205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
4210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
4213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
4215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
4217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
4219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
4220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
4222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
4225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
4227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
4229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
4234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C
4236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
4237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
4239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
4241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmp;
4242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
4244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_LISTEN)
4245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
4247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
4248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR = NULL;
4251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
4253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
4254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
4256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
4258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_BUSY;
4260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
4265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
4268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
4269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
4270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
4272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
4274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Locked */
4276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
4277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable Interrupts and Store Previous state */
4279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
4280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
4282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
4283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
4287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
4288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
4290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Do nothing */
4292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
4295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
4296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
4298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
4299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
4300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
4302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
4305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
4306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****               process unlock */
4307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_OK;
4310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
4312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wrong usage of abort function */
4314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
4315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
4316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @}
4321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
4324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @{
4325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
4329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
4334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
4336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
4340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->XferISR != NULL)
4341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
4343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
4348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
4353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
4355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
4356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmperror;
4357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
4359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_BERR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
4362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear BERR flag */
4364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
4365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
4368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_OVR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_ER
4369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
4371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear OVR flag */
4373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
4374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
4377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(itflags, I2C_FLAG_ARLO) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_E
4378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
4380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear ARLO flag */
4382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
4383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
4386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
4387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
4389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((tmperror & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_ERROR_
4390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITError(hi2c, tmperror);
4392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
4397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
4402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
4405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
4408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
4409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
4413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
4418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
4421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
4424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
4425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
4428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
4433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
4436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
4439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
4440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
4444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
4449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
4452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
4455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
4456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
4460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  TransferDirection Master request Transfer Direction (Write/Read), value of @ref I2C_XFE
4463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  AddrMatchCode Address Match Code
4464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
4467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
4470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(TransferDirection);
4471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
4472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
4475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
4476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Listen Complete callback.
4480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
4485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
4488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
4491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
4492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
4496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
4501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
4504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
4507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
4508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
4512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
4517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
4520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
4523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
4524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  I2C error callback.
4528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
4533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
4536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
4539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
4540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  I2C abort callback.
4544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
4547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
4549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(hi2c);
4552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
4554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
4555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****    */
4556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @}
4560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
4563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *  @brief   Peripheral State, Mode and Error functions
4564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *
4565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** @verbatim
4566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****  ===============================================================================
4567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
4568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****  ===============================================================================
4569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     [..]
4570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
4571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     and the data flow.
4572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** @endverbatim
4574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @{
4575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
4579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL state
4582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
4584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Return I2C handle state */
4586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return hi2c->State;
4587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
4591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         the configuration information for I2C module
4593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL mode
4594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
4596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return hi2c->Mode;
4598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Return the I2C error code.
4602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
4604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval I2C Error Code
4605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
4607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return hi2c->ErrorCode;
4609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @}
4613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @}
4617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
4620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @{
4621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
4625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
4630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
4632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint16_t devaddress;
4634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process Locked */
4637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear NACK Flag */
4642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set corresponding Error Code */
4645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Flush TX register */
4650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
4655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
4656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Read data from RXDR */
4658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Increment Buffer pointer */
4661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize--;
4664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount--;
4665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Write data to TXDR */
4669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Increment Buffer pointer */
4672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
4673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize--;
4675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount--;
4676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I
4678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
4680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
4687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
4689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
4693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, hi2c->XferOptions, I2C_NO_S
4694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
4695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         else
4696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
4697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
4698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
4699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
4702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
4710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
4718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
4726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Generate Stop */
4727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
4729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         else
4730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
4731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
4732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
4733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
4734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
4737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
4739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
4740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
4744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Nothing to do */
4746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call I2C Master complete process */
4751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, tmpITFlags);
4752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process Unlocked */
4755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
4758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
4762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
4767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
4769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
4771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
4772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process locked */
4774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check if STOPF is set */
4777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call I2C Slave complete process */
4780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, tmpITFlags);
4781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
4784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Check that I2C transfer finished */
4786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
4787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Mean XferCount == 0*/
4788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* So clear Flag NACKF only */
4789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Same action must be done for (tmpoptions == I2C_LAST_FRAME) which removed for Warning[Pa13
4792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME))
4793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Call I2C Listen complete process */
4795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, tmpITFlags);
4796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAME)
4798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Clear NACK Flag */
4800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Flush TX register */
4803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
4804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
4810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Clear NACK Flag */
4812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
4816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
4818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Clear NACK Flag */
4819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
4825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_ITError(hi2c, hi2c->ErrorCode);
4828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Read data from RXDR */
4836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
4837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Increment Buffer pointer */
4839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize--;
4842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
4843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((hi2c->XferCount == 0U) && \
4846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
4847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
4849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_ITSlaveSeqCplt(hi2c);
4850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_ADDR) != RESET) && \
4853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
4854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, tmpITFlags);
4856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_TXIS) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, 
4858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
4860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
4861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Check if all data have already been sent */
4862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
4863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > 0U)
4864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Write data to TXDR */
4866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->TXDR = *hi2c->pBuffPtr;
4867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Increment Buffer pointer */
4869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->pBuffPtr++;
4870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
4872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize--;
4873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
4875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
4877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Last Byte is Transmitted */
4879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
4880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_ITSlaveSeqCplt(hi2c);
4881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
4885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Nothing to do */
4887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process Unlocked */
4890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
4893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
4894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
4896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
4897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
4901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
4902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
4903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
4904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
4905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint16_t devaddress;
4906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
4907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process Locked */
4909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
4910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
4912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear NACK Flag */
4914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set corresponding Error Code */
4917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
4920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
4921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
4922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Flush TX register */
4925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TCR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_
4928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable TC interrupt */
4930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
4931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount != 0U)
4933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Recover Slave address */
4935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       devaddress = (uint16_t)(hi2c->Instance->CR2 & I2C_CR2_SADD);
4936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
4938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->XferCount > MAX_NBYTE_SIZE)
4939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
4941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
4942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
4944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
4946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
4948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           xfermode = hi2c->XferOptions;
4949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
4950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         else
4951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
4952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           xfermode = I2C_AUTOEND_MODE;
4953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
4954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
4957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
4958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Update XferCount value */
4960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
4961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
4962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable DMA Request */
4963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
4964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
4966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
4968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
4970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
4973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
4975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
4978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_ITMasterSeqCplt(hi2c);
4979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
4981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
4983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
4984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
4985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
4986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
4987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
4988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_TC) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_I
4989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
4990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount == 0U)
4991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
4992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
4993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
4994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
4995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->XferOptions == I2C_NO_OPTION_FRAME)
4996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
4997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Generate Stop */
4998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
4999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
5000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         else
5001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
5002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
5003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_ITMasterSeqCplt(hi2c);
5004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
5005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
5006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
5008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
5010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
5012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2
5015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call I2C Master complete process */
5017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
5018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Nothing to do */
5022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process Unlocked */
5025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
5028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
5031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
5032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
5036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
5037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
5038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
5039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
5040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
5041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
5042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
5043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process locked */
5045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
5046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check if STOPF is set */
5048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_
5049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call I2C Slave complete process */
5051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
5052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_AF) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_NAC
5055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Check that I2C transfer finished */
5057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
5058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Mean XferCount == 0 */
5059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* So clear Flag NACKF only */
5060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET) ||
5061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
5062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Split check of hdmarx, for MISRA compliance */
5064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->hdmarx != NULL)
5065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
5066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET)
5067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
5068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U)
5069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
5070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             treatdmanack = 1U;
5071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
5072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
5073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
5074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Split check of hdmatx, for MISRA compliance  */
5076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (hi2c->hdmatx != NULL)
5077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
5078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_TXDMAEN) != RESET)
5079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
5080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           if (__HAL_DMA_GET_COUNTER(hi2c->hdmatx) == 0U)
5081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
5082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             treatdmanack = 1U;
5083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
5084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
5085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
5086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (treatdmanack == 1U)
5088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
5089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Same action must be done for (tmpoptions == I2C_LAST_FRAME) which removed for Warning[Pa
5090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if ((hi2c->State == HAL_I2C_STATE_LISTEN) && (tmpoptions == I2C_FIRST_AND_LAST_FRAME))
5091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
5092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Call I2C Listen complete process */
5093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_ITListenCplt(hi2c, ITFlags);
5094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
5095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         else if ((hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) && (tmpoptions != I2C_NO_OPTION_FRAM
5096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
5097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Clear NACK Flag */
5098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Flush TX register */
5101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_Flush_TXDR(hi2c);
5102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Last Byte is Transmitted */
5104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Call I2C Slave Sequential complete process */
5105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_ITSlaveSeqCplt(hi2c);
5106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
5107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         else
5108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
5109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Clear NACK Flag */
5110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
5112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
5113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
5114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
5115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
5116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Clear NACK Flag */
5117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Set ErrorCode corresponding to a Non-Acknowledge */
5120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Store current hi2c->State, solve MISRA2012-Rule-13.5 */
5123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         tmpstate = hi2c->State;
5124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if ((tmpoptions == I2C_FIRST_FRAME) || (tmpoptions == I2C_NEXT_FRAME))
5126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
5127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
5128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
5129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
5131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN
5132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
5133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
5135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           else
5136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
5137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****             /* Do nothing */
5138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
5139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Call the corresponding callback to inform upper layer of End of Transfer */
5141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_ITError(hi2c, hi2c->ErrorCode);
5142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
5143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
5144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
5146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Only Clear NACK Flag, no DMA treatment is pending */
5148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((I2C_CHECK_FLAG(ITFlags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(ITSources, I2C
5152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
5154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Nothing to do */
5158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process Unlocked */
5161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
5164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
5167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
5168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
5177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
5178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
5179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                 uint16_t MemAddSize, uint32_t Timeout, uint32_t Tic
5180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
5181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
5182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
5187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Memory Address */
5193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
5205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Wait until TCR flag is set */
5212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
5213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
5215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
5218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
5221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
5222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
5223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
5224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
5225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *         in datasheet must be shifted to the left before calling the interface
5226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
5227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
5228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
5229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
5230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
5231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
5232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
5233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                uint16_t MemAddSize, uint32_t Timeout, uint32_t Tick
5234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
5235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
5236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
5238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
5241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
5244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
5245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send Memory Address */
5247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
5250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send MSB of Memory Address */
5253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
5254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
5256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
5257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
5259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Send LSB of Memory Address */
5262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
5263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Wait until TC flag is set */
5266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
5267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
5269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
5272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
5275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
5276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
5279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
5280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
5282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint8_t transferdirection;
5283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint16_t slaveaddrcode;
5284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint16_t ownadd1code;
5285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint16_t ownadd2code;
5286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
5288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   UNUSED(ITFlags);
5289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
5291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
5292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
5294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
5295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
5296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
5297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
5299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
5300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
5302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
5303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
5304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->AddrEventCount++;
5305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
5306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
5307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Reset Address Event counter */
5308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
5309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Clear ADDR flag */
5311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Process Unlocked */
5314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
5315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Call Slave Addr callback */
5317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
5323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
5324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
5325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
5326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
5327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
5329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
5332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
5333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Call Slave Addr callback */
5335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
5341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
5343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
5344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
5346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
5347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
5349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call Slave Addr callback */
5352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->AddrCallback(hi2c, transferdirection, slaveaddrcode);
5354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
5356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Else clear address flag only */
5360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear ADDR flag */
5363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
5364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
5366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
5371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
5372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
5374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
5375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITMasterSeqCplt(I2C_HandleTypeDef *hi2c)
5376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
5377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Reset I2C handle mode */
5378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
5381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
5382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable Interrupts */
5389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
5392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->MasterTxCpltCallback(hi2c);
5397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
5399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
5405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable Interrupts */
5409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
5412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->MasterRxCpltCallback(hi2c);
5417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
5419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
5424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
5425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
5427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
5428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITSlaveSeqCplt(I2C_HandleTypeDef *hi2c)
5429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
5430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Reset I2C handle mode */
5433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable DMA Request */
5439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable DMA Request */
5444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Do nothing */
5449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
5452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
5454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable Interrupts */
5458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
5461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
5472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
5474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable Interrupts */
5478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
5481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Nothing to do */
5493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
5497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  I2C Master complete process.
5498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
5501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
5502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
5504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmperror;
5505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __IO uint32_t tmpreg;
5507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Clear STOP Flag */
5509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
5512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
5515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
5516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
5520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
5521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Do nothing */
5525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Reset handle parameters */
5531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
5532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_AF) != RESET)
5535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear NACK Flag */
5537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set acknowledge error code */
5540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Fetch Last receive data if any */
5544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) && (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET))
5545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Read data from RXDR */
5547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tmpreg = (uint8_t)hi2c->Instance->RXDR;
5548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     UNUSED(tmpreg);
5549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Flush TX register */
5552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Store current volatile hi2c->ErrorCode, misra rule */
5555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   tmperror = hi2c->ErrorCode;
5556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((hi2c->State == HAL_I2C_STATE_ABORT) || (tmperror != HAL_I2C_ERROR_NONE))
5559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
5564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
5565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
5574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->MemTxCpltCallback(hi2c);
5579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
5581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
5584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
5588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->MasterTxCpltCallback(hi2c);
5593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
5595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
5599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
5605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
5609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->MemRxCpltCallback(hi2c);
5614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
5616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
5619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
5621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
5623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
5626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->MasterRxCpltCallback(hi2c);
5628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
5630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5635:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Nothing to do */
5636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
5640:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
5641:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5643:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
5644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
5645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
5647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
5648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
5649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Clear STOP Flag */
5652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
5653:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable Interrupts and Store Previous state */
5655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_BUSY_TX) || (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN))
5656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
5658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
5659:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((tmpstate == HAL_I2C_STATE_BUSY_RX) || (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
5661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
5663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
5664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5665:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Do nothing */
5668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable Address Acknowledge */
5671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
5672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5673:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
5674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
5675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Flush TX register */
5677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
5678:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
5680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_TXDMAEN) != RESET)
5681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable DMA Request */
5683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->hdmatx != NULL)
5686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmatx);
5688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if (I2C_CHECK_IT_SOURCE(tmpcr1value, I2C_CR1_RXDMAEN) != RESET)
5691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5692:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable DMA Request */
5693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->hdmarx != NULL)
5696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount = (uint16_t)__HAL_DMA_GET_COUNTER(hi2c->hdmarx);
5698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5700:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5701:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Do nothing */
5703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Store Last receive data if any */
5706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(tmpITFlags, I2C_FLAG_RXNE) != RESET)
5707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Remove RXNE flag on temporary variable as read done */
5709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tmpITFlags &= ~I2C_FLAG_RXNE;
5710:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Read data from RXDR */
5712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Increment Buffer pointer */
5715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5718:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize--;
5720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
5721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
5725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->XferCount != 0U)
5726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
5728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5733:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
5735:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
5738:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5739:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->State == HAL_I2C_STATE_LISTEN)
5741:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call I2C Listen complete process */
5743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, tmpITFlags);
5744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5745:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
5747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the Sequential Complete callback, to inform upper layer of the end of Transfer */
5749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
5750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
5756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5757:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5760:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ListenCpltCallback(hi2c);
5761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
5763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
5766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
5767:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
5772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5776:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->SlaveRxCpltCallback(hi2c);
5777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
5779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
5787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5788:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->SlaveTxCpltCallback(hi2c);
5792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
5794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
5799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
5800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5801:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
5802:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
5803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
5804:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
5805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
5806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Reset handle parameters */
5807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
5808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
5809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
5810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
5811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferISR = NULL;
5812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Store Last receive data if any */
5814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (I2C_CHECK_FLAG(ITFlags, I2C_FLAG_RXNE) != RESET)
5815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Read data from RXDR */
5817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
5818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Increment Buffer pointer */
5820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr++;
5821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((hi2c->XferSize > 0U))
5823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize--;
5825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
5826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
5828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
5829:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5832:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable all Interrupts*/
5833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5835:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Clear NACK Flag */
5836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
5837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Process Unlocked */
5839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
5840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
5842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->ListenCpltCallback(hi2c);
5844:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
5846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
5850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
5851:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
5853:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
5854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
5855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
5856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
5857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
5858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmppreviousstate;
5859:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5860:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Reset handle parameters */
5861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
5862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
5863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
5864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Set new error code */
5866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
5867:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5868:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable Interrupts */
5869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((tmpstate == HAL_I2C_STATE_LISTEN)         ||
5870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
5871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
5872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
5874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
5877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
5878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
5879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5881:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable all interrupts */
5883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
5884:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* If state is an abort treatment on going, don't change state */
5886:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* This change will be do later */
5887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->State != HAL_I2C_STATE_ABORT)
5888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5889:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
5890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
5891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
5893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5895:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
5896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   tmppreviousstate = hi2c->PreviousState;
5897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || \
5898:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                  (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
5899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
5901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
5903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
5906:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5908:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
5910:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
5912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Abort DMA TX */
5915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
5916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
5917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Call Directly XferAbortCallback function in case of error */
5918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
5919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
5920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5921:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
5922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
5924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
5927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if ((hi2c->hdmarx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_RX) || \
5928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                       (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
5929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
5931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
5933:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5934:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
5936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5937:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Set the I2C DMA Abort callback :
5938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
5939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
5940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
5942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
5943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Abort DMA RX */
5945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
5946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
5947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
5948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
5949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
5950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
5952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
5953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TreatErrorCallback(hi2c);
5954:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
5955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_TreatErrorCallback(hi2c);
5959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5961:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
5963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  I2C Error callback treatment.
5964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
5965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
5966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
5967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_TreatErrorCallback(I2C_HandleTypeDef *hi2c)
5968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
5969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
5970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
5972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5973:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
5975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5976:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5979:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->AbortCpltCallback(hi2c);
5980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
5982:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
5985:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
5986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
5987:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
5989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
5990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
5991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
5992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #if (USE_HAL_I2C_REGISTER_CALLBACKS == 1)
5993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCallback(hi2c);
5994:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #else
5995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
5996:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
5997:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
5998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
5999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
6002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
6004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
6006:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
  27              		.loc 1 6006 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
6007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
6008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
6009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
  33              		.loc 1 6009 0
  34 0000 0368     		ldr	r3, [r0]
  35 0002 9A69     		ldr	r2, [r3, #24]
  36 0004 12F0020F 		tst	r2, #2
  37 0008 01D0     		beq	.L2
6010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->TXDR = 0x00U;
  38              		.loc 1 6011 0
  39 000a 0022     		movs	r2, #0
  40 000c 9A62     		str	r2, [r3, #40]
  41              	.L2:
6012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6013:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Flush TX register if not empty */
6015:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
  42              		.loc 1 6015 0
  43 000e 0368     		ldr	r3, [r0]
  44 0010 9A69     		ldr	r2, [r3, #24]
  45 0012 12F0010F 		tst	r2, #1
  46 0016 03D1     		bne	.L1
6016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
  47              		.loc 1 6017 0
  48 0018 9A69     		ldr	r2, [r3, #24]
  49 001a 42F00102 		orr	r2, r2, #1
  50 001e 9A61     		str	r2, [r3, #24]
  51              	.L1:
6018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6019:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
  52              		.loc 1 6019 0
  53 0020 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE380:
  57              		.section	.text.I2C_TransferConfig,"ax",%progbits
  58              		.align	1
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv4-sp-d16
  64              	I2C_TransferConfig:
  65              	.LFB392:
6020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6021:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6022:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
6023:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hdma DMA handle
6024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
6025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
6027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
6028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6030:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable DMA Request */
6031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6033:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6036:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable STOP interrupt */
6037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
6038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
6040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
6041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Update Buffer pointer */
6043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set the XferSize to transfer */
6046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6047:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
6049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
6051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable the DMA channel */
6056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, h
6057:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6061:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
6062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable TC interrupts */
6064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
6068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
6071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hdma DMA handle
6072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
6073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6074:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
6075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
6076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((tmpoptions == I2C_NEXT_FRAME) || (tmpoptions == I2C_FIRST_FRAME))
6080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable DMA Request */
6082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
6083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Last Byte is Transmitted */
6085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
6089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
6095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6096:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
6098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hdma DMA handle
6099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
6100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
6102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
6103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable DMA Request */
6106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6107:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
6109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->XferCount == 0U)
6110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable STOP interrupt */
6112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
6113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
6115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
6116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Update Buffer pointer */
6118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
6119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Set the XferSize to transfer */
6121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (hi2c->XferCount > MAX_NBYTE_SIZE)
6122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
6124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
6126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
6128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable the DMA channel */
6131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, h
6132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
6134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     else
6137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable TC interrupts */
6139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
6140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
6143:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6145:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
6146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hdma DMA handle
6147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
6148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
6150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
6151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
6153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((__HAL_DMA_GET_COUNTER(hi2c->hdmarx) == 0U) && \
6155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
6156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6157:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable DMA Request */
6158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
6159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6160:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Call I2C Slave Sequential complete process */
6161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_ITSlaveSeqCplt(hi2c);
6162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6163:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
6164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* No specific action, Master fully manage the generation of STOP condition */
6166:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Mean that this generation can arrive at any time, at the end or during DMA process */
6167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* So STOP condition should be manage through Interrupt treatment */
6168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
6170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6171:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6172:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
6173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param hdma DMA handle
6174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
6175:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
6177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
6178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6179:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable Acknowledge */
6181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
6182:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6183:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
6184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
6185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
6186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
6189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
6190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param hdma DMA handle.
6191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
6192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
6194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
6195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
6196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
6198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->hdmatx != NULL)
6199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
6201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->hdmarx != NULL)
6203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
6205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_TreatErrorCallback(hi2c);
6208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
6209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
6212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6213:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
6215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
6216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
6219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
6221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                                     uint32_t Timeout, uint32_t Tickstart)
6222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
6223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
6224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6225:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Check for the Timeout */
6226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
6230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
6235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
6237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
6238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
6241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
6242:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
6245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
6250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
6253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
6254:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Check if a NACK is detected */
6256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6257:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
6259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6260:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Check for the Timeout */
6262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (Timeout != HAL_MAX_DELAY)
6263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
6266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
6271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
6274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
6275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
6278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
6279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
6282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
6287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6288:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
6290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6292:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Check if a NACK is detected */
6293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
6296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6297:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Check for the Timeout */
6299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6300:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
6304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
6306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
6309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
6312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
6313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
6316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6318:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
6321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
6323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
6324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
6325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Check if a NACK is detected */
6327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
6328:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
6330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Check if a STOPF is detected */
6333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
6334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Check if an RXNE is pending */
6336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Store Last receive data if any */
6337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
6338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
6339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Return HAL_OK */
6340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* The Reading of data from RXDR will be done in caller function */
6341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_OK;
6342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
6343:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       else
6344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
6345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Clear STOP Flag */
6346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6348:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Clear Configuration Register 2 */
6349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_RESET_CR2(hi2c);
6350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
6352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
6353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
6354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         /* Process Unlocked */
6356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
6357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
6359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
6360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Check for the Timeout */
6363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
6367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Process Unlocked */
6369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
6370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
6372:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
6375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
6376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
6379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Timeout Timeout duration
6382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Tickstart Tick start value
6383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval HAL status
6384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
6386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
6387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
6388:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Wait until STOP Flag is reset */
6390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
6391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
6392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Check for the Timeout */
6394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       if (Timeout != HAL_MAX_DELAY)
6395:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
6396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
6397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
6398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
6399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
6400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
6401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           /* Process Unlocked */
6403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
6404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           return HAL_ERROR;
6406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
6407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
6408:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6410:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear NACKF Flag */
6411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
6412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear STOP Flag */
6414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
6415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6416:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Flush TX register */
6417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
6418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6419:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
6420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
6421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
6423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
6424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
6425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6426:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Process Unlocked */
6427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
6428:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     return HAL_ERROR;
6430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return HAL_OK;
6432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
6433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
6436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6437:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
6438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
6439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
6440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
6441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
6443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
6444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
6445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
6446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *   This parameter can be one of the following values:
6447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
6448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
6449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
6450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
6451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
6452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t
6454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                uint32_t Request)
6455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
  66              		.loc 1 6455 0
  67              		.cfi_startproc
  68              		@ args = 4, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71              	.LVL1:
  72 0000 70B4     		push	{r4, r5, r6}
  73              		.cfi_def_cfa_offset 12
  74              		.cfi_offset 4, -12
  75              		.cfi_offset 5, -8
  76              		.cfi_offset 6, -4
  77 0002 039E     		ldr	r6, [sp, #12]
6456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
6457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
6458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
6459:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
6460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* update CR2 register */
6462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   MODIFY_REG(hi2c->Instance->CR2,
  78              		.loc 1 6462 0
  79 0004 0568     		ldr	r5, [r0]
  80 0006 6868     		ldr	r0, [r5, #4]
  81              	.LVL2:
  82 0008 740D     		lsrs	r4, r6, #21
  83 000a 04F48064 		and	r4, r4, #1024
  84 000e 44F07F74 		orr	r4, r4, #66846720
  85 0012 44F45834 		orr	r4, r4, #221184
  86 0016 44F47F74 		orr	r4, r4, #1020
  87 001a 44F00304 		orr	r4, r4, #3
  88 001e 20EA0400 		bic	r0, r0, r4
  89 0022 C1F30901 		ubfx	r1, r1, #0, #10
  90              	.LVL3:
  91 0026 41EA0241 		orr	r1, r1, r2, lsl #16
  92 002a 1943     		orrs	r1, r1, r3
  93 002c 3143     		orrs	r1, r1, r6
  94 002e 0143     		orrs	r1, r1, r0
  95 0030 6960     		str	r1, [r5, #4]
6463:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****              ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
6464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | I2C_CR2_START
6465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****              (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) |
6466:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                         (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | (uint32_t)Mode 
6467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
  96              		.loc 1 6467 0
  97 0032 70BC     		pop	{r4, r5, r6}
  98              		.cfi_restore 6
  99              		.cfi_restore 5
 100              		.cfi_restore 4
 101              		.cfi_def_cfa_offset 0
 102              	.LVL4:
 103 0034 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE392:
 107              		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 108              		.align	1
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv4-sp-d16
 114              	I2C_Enable_IRQ:
 115              	.LFB393:
6468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
6471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6473:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
6475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
 116              		.loc 1 6477 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.LVL5:
6478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6480:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((hi2c->XferISR == I2C_Master_ISR_DMA) || \
 122              		.loc 1 6480 0
 123 0000 436B     		ldr	r3, [r0, #52]
 124 0002 1A4A     		ldr	r2, .L21
 125 0004 9342     		cmp	r3, r2
 126 0006 15D0     		beq	.L7
 127              		.loc 1 6480 0 is_stmt 0 discriminator 1
 128 0008 194A     		ldr	r2, .L21+4
 129 000a 9342     		cmp	r3, r2
 130 000c 12D0     		beq	.L7
6481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (hi2c->XferISR == I2C_Slave_ISR_DMA))
6482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
6484:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
6486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_ERROR_IT)
6490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
6492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6493:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
6496:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable STOP interrupts */
6498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmpisr |= (I2C_IT_STOPI | I2C_IT_TCI);
6499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_RELOAD_IT)
6502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable TC interrupts */
6504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
6505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
6508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 131              		.loc 1 6509 0 is_stmt 1
 132 000e 11F4004F 		tst	r1, #32768
 133 0012 29D1     		bne	.L17
6478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 134              		.loc 1 6478 0
 135 0014 0023     		movs	r3, #0
 136              	.L13:
 137              	.LVL6:
6510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, and ADDR interrupts */
6512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 138              		.loc 1 6515 0
 139 0016 11F0010F 		tst	r1, #1
 140 001a 01D0     		beq	.L14
6516:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
6518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 141              		.loc 1 6518 0
 142 001c 43F0F203 		orr	r3, r3, #242
 143              	.LVL7:
 144              	.L14:
6519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 145              		.loc 1 6521 0
 146 0020 11F0020F 		tst	r1, #2
 147 0024 01D0     		beq	.L15
6522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
6524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 148              		.loc 1 6524 0
 149 0026 43F0F403 		orr	r3, r3, #244
 150              	.LVL8:
 151              	.L15:
6525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (InterruptRequest == I2C_XFER_CPLT_IT)
 152              		.loc 1 6527 0
 153 002a 2029     		cmp	r1, #32
 154 002c 0CD1     		bne	.L12
6528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Enable STOP interrupts */
6530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 155              		.loc 1 6530 0
 156 002e 43F02003 		orr	r3, r3, #32
 157              	.LVL9:
 158 0032 09E0     		b	.L12
 159              	.LVL10:
 160              	.L7:
6483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 161              		.loc 1 6483 0
 162 0034 11F4004F 		tst	r1, #32768
 163 0038 0BD1     		bne	.L16
6478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 164              		.loc 1 6478 0
 165 003a 0023     		movs	r3, #0
 166              	.L9:
 167              	.LVL11:
6489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 168              		.loc 1 6489 0
 169 003c 1029     		cmp	r1, #16
 170 003e 0AD0     		beq	.L18
 171              	.L10:
6495:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 172              		.loc 1 6495 0
 173 0040 2029     		cmp	r1, #32
 174 0042 0BD0     		beq	.L19
 175              	.L11:
6501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 176              		.loc 1 6501 0
 177 0044 4029     		cmp	r1, #64
 178 0046 0CD0     		beq	.L20
 179              	.L12:
6531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Enable interrupts only at the end */
6535:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
6536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* all interrupts requested done */
6537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 180              		.loc 1 6537 0
 181 0048 0168     		ldr	r1, [r0]
 182              	.LVL12:
 183 004a 0A68     		ldr	r2, [r1]
 184 004c 1343     		orrs	r3, r3, r2
 185              	.LVL13:
 186 004e 0B60     		str	r3, [r1]
6538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 187              		.loc 1 6538 0
 188 0050 7047     		bx	lr
 189              	.LVL14:
 190              	.L16:
6486:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 191              		.loc 1 6486 0
 192 0052 B823     		movs	r3, #184
 193 0054 F2E7     		b	.L9
 194              	.LVL15:
 195              	.L18:
6492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 196              		.loc 1 6492 0
 197 0056 43F09003 		orr	r3, r3, #144
 198              	.LVL16:
 199 005a F1E7     		b	.L10
 200              	.L19:
6498:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 201              		.loc 1 6498 0
 202 005c 43F06003 		orr	r3, r3, #96
 203              	.LVL17:
 204 0060 F0E7     		b	.L11
 205              	.L20:
6504:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 206              		.loc 1 6504 0
 207 0062 43F04003 		orr	r3, r3, #64
 208              	.LVL18:
 209 0066 EFE7     		b	.L12
 210              	.LVL19:
 211              	.L17:
6512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 212              		.loc 1 6512 0
 213 0068 B823     		movs	r3, #184
 214 006a D4E7     		b	.L13
 215              	.L22:
 216              		.align	2
 217              	.L21:
 218 006c 00000000 		.word	I2C_Master_ISR_DMA
 219 0070 00000000 		.word	I2C_Slave_ISR_DMA
 220              		.cfi_endproc
 221              	.LFE393:
 223              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
 224              		.align	1
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	I2C_Disable_IRQ:
 231              	.LFB394:
6539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
6542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
6543:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
6544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
6545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
6546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
6548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
 232              		.loc 1 6548 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL20:
6549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
6550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 238              		.loc 1 6551 0
 239 0000 11F0010F 		tst	r1, #1
 240 0004 09D0     		beq	.L30
 241              	.LVL21:
6552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6553:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
6554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
6555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 242              		.loc 1 6556 0
 243 0006 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 244 000a 03F02803 		and	r3, r3, #40
 245 000e 282B     		cmp	r3, #40
 246 0010 01D0     		beq	.L45
6557:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 247              		.loc 1 6559 0
 248 0012 F223     		movs	r3, #242
 249 0014 02E0     		b	.L24
 250              	.L45:
6554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 251              		.loc 1 6554 0
 252 0016 4223     		movs	r3, #66
 253 0018 00E0     		b	.L24
 254              	.LVL22:
 255              	.L30:
6549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 256              		.loc 1 6549 0
 257 001a 0023     		movs	r3, #0
 258              	.LVL23:
 259              	.L24:
6560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 260              		.loc 1 6563 0
 261 001c 11F0020F 		tst	r1, #2
 262 0020 29D0     		beq	.L34
6548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 263              		.loc 1 6548 0
 264 0022 10B4     		push	{r4}
 265              		.cfi_def_cfa_offset 4
 266              		.cfi_offset 4, -4
6564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
6566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 267              		.loc 1 6566 0
 268 0024 43F04404 		orr	r4, r3, #68
 269              	.LVL24:
6567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) != (uint32_t)HAL_I2C_STATE_LISTEN)
 270              		.loc 1 6568 0
 271 0028 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 272 002c 02F02802 		and	r2, r2, #40
 273 0030 282A     		cmp	r2, #40
 274 0032 12D0     		beq	.L32
6569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
6570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
6571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 275              		.loc 1 6571 0
 276 0034 43F0F403 		orr	r3, r3, #244
 277              	.LVL25:
 278              	.L25:
6572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
6573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 279              		.loc 1 6575 0
 280 0038 11F4004F 		tst	r1, #32768
 281 003c 0FD1     		bne	.L46
 282              	.L26:
6576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
6578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
6579:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_ERROR_IT)
 283              		.loc 1 6581 0
 284 003e 1029     		cmp	r1, #16
 285 0040 10D0     		beq	.L47
 286              	.L27:
6582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
6584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
6585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_CPLT_IT)
 287              		.loc 1 6587 0
 288 0042 2029     		cmp	r1, #32
 289 0044 11D0     		beq	.L48
 290              	.L28:
6588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable STOP interrupts */
6590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
6591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (InterruptRequest == I2C_XFER_RELOAD_IT)
 291              		.loc 1 6593 0
 292 0046 4029     		cmp	r1, #64
 293 0048 12D0     		beq	.L49
 294              	.L29:
6594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Enable TC interrupts */
6596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
6597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Disable interrupts only at the end */
6600:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
6601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* all disable interrupts request are not done */
6602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 295              		.loc 1 6602 0
 296 004a 0168     		ldr	r1, [r0]
 297              	.LVL26:
 298 004c 0A68     		ldr	r2, [r1]
 299 004e 22EA0303 		bic	r3, r2, r3
 300              	.LVL27:
 301 0052 0B60     		str	r3, [r1]
6603:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 302              		.loc 1 6603 0
 303 0054 5DF8044B 		ldr	r4, [sp], #4
 304              		.cfi_remember_state
 305              		.cfi_restore 4
 306              		.cfi_def_cfa_offset 0
 307 0058 7047     		bx	lr
 308              	.LVL28:
 309              	.L32:
 310              		.cfi_restore_state
6566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 311              		.loc 1 6566 0
 312 005a 2346     		mov	r3, r4
 313 005c ECE7     		b	.L25
 314              	.LVL29:
 315              	.L46:
6578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 316              		.loc 1 6578 0
 317 005e 43F0B803 		orr	r3, r3, #184
 318              	.LVL30:
 319 0062 ECE7     		b	.L26
 320              	.L47:
6584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 321              		.loc 1 6584 0
 322 0064 43F09003 		orr	r3, r3, #144
 323              	.LVL31:
 324 0068 EBE7     		b	.L27
 325              	.L48:
6590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 326              		.loc 1 6590 0
 327 006a 43F02003 		orr	r3, r3, #32
 328              	.LVL32:
 329 006e EAE7     		b	.L28
 330              	.L49:
6596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 331              		.loc 1 6596 0
 332 0070 43F04003 		orr	r3, r3, #64
 333              	.LVL33:
 334 0074 E9E7     		b	.L29
 335              	.L34:
 336              		.cfi_def_cfa_offset 0
 337              		.cfi_restore 4
6575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 338              		.loc 1 6575 0
 339 0076 11F4004F 		tst	r1, #32768
 340 007a 0BD1     		bne	.L50
 341              	.L36:
6581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 342              		.loc 1 6581 0
 343 007c 1029     		cmp	r1, #16
 344 007e 0CD0     		beq	.L51
 345              	.L38:
6587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 346              		.loc 1 6587 0
 347 0080 2029     		cmp	r1, #32
 348 0082 0DD0     		beq	.L52
 349              	.L40:
6593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 350              		.loc 1 6593 0
 351 0084 4029     		cmp	r1, #64
 352 0086 0ED0     		beq	.L53
 353              	.L42:
6602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 354              		.loc 1 6602 0
 355 0088 0168     		ldr	r1, [r0]
 356              	.LVL34:
 357 008a 0A68     		ldr	r2, [r1]
 358 008c 22EA0303 		bic	r3, r2, r3
 359              	.LVL35:
 360 0090 0B60     		str	r3, [r1]
 361 0092 7047     		bx	lr
 362              	.LVL36:
 363              	.L50:
6578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 364              		.loc 1 6578 0
 365 0094 43F0B803 		orr	r3, r3, #184
 366              	.LVL37:
 367 0098 F0E7     		b	.L36
 368              	.L51:
6584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 369              		.loc 1 6584 0
 370 009a 43F09003 		orr	r3, r3, #144
 371              	.LVL38:
 372 009e EFE7     		b	.L38
 373              	.L52:
6590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 374              		.loc 1 6590 0
 375 00a0 43F02003 		orr	r3, r3, #32
 376              	.LVL39:
 377 00a4 EEE7     		b	.L40
 378              	.L53:
6596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 379              		.loc 1 6596 0
 380 00a6 43F04003 		orr	r3, r3, #64
 381              	.LVL40:
 382 00aa EDE7     		b	.L42
 383              		.cfi_endproc
 384              	.LFE394:
 386              		.section	.text.I2C_ConvertOtherXferOptions,"ax",%progbits
 387              		.align	1
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 391              		.fpu fpv4-sp-d16
 393              	I2C_ConvertOtherXferOptions:
 394              	.LFB395:
6604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
6605:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
6606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @brief  Convert I2Cx OTHER_xxx XferOptions to functional XferOptions.
6607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @param  hi2c I2C handle.
6608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   * @retval None
6609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   */
6610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
6611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** {
 395              		.loc 1 6611 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400              	.LVL41:
6612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* if user set XferOptions to I2C_OTHER_FRAME            */
6613:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition */
6614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_FRAME                    */
6615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->XferOptions == I2C_OTHER_FRAME)
 401              		.loc 1 6615 0
 402 0000 C36A     		ldr	r3, [r0, #44]
 403 0002 AA2B     		cmp	r3, #170
 404 0004 04D0     		beq	.L57
6616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_FRAME;
6618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
6620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* it request implicitly to generate a restart condition    */
6621:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* then generate a stop condition at the end of transfer    */
6622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
6623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 405              		.loc 1 6623 0
 406 0006 C36A     		ldr	r3, [r0, #44]
 407 0008 B3F52A4F 		cmp	r3, #43520
 408 000c 03D0     		beq	.L58
 409              	.L54:
6624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
6626:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6627:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   else
6628:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
6629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     /* Nothing to do */
6630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
6631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 410              		.loc 1 6631 0
 411 000e 7047     		bx	lr
 412              	.L57:
6617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 413              		.loc 1 6617 0
 414 0010 0023     		movs	r3, #0
 415 0012 C362     		str	r3, [r0, #44]
 416 0014 7047     		bx	lr
 417              	.L58:
6625:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 418              		.loc 1 6625 0
 419 0016 4FF00073 		mov	r3, #33554432
 420 001a C362     		str	r3, [r0, #44]
 421              		.loc 1 6631 0
 422 001c F7E7     		b	.L54
 423              		.cfi_endproc
 424              	.LFE395:
 426              		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 427              		.align	1
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	I2C_IsAcknowledgeFailed:
 434              	.LFB391:
6386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 435              		.loc 1 6386 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              	.LVL42:
 440 0000 70B5     		push	{r4, r5, r6, lr}
 441              		.cfi_def_cfa_offset 16
 442              		.cfi_offset 4, -16
 443              		.cfi_offset 5, -12
 444              		.cfi_offset 6, -8
 445              		.cfi_offset 14, -4
 446 0002 0446     		mov	r4, r0
 447 0004 0D46     		mov	r5, r1
 448 0006 1646     		mov	r6, r2
6387:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 449              		.loc 1 6387 0
 450 0008 0368     		ldr	r3, [r0]
 451 000a 9B69     		ldr	r3, [r3, #24]
 452 000c 13F0100F 		tst	r3, #16
 453 0010 1CD0     		beq	.L66
 454              	.LVL43:
 455              	.L62:
6391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 456              		.loc 1 6391 0
 457 0012 2368     		ldr	r3, [r4]
 458 0014 9A69     		ldr	r2, [r3, #24]
 459 0016 12F0200F 		tst	r2, #32
 460 001a 19D1     		bne	.L67
6394:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 461              		.loc 1 6394 0
 462 001c B5F1FF3F 		cmp	r5, #-1
 463 0020 F7D0     		beq	.L62
6396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 464              		.loc 1 6396 0
 465 0022 FFF7FEFF 		bl	HAL_GetTick
 466              	.LVL44:
 467 0026 801B     		subs	r0, r0, r6
 468 0028 A842     		cmp	r0, r5
 469 002a 01D8     		bhi	.L63
6396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 470              		.loc 1 6396 0 is_stmt 0 discriminator 1
 471 002c 002D     		cmp	r5, #0
 472 002e F0D1     		bne	.L62
 473              	.L63:
6398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->State = HAL_I2C_STATE_READY;
 474              		.loc 1 6398 0 is_stmt 1
 475 0030 636C     		ldr	r3, [r4, #68]
 476 0032 43F02003 		orr	r3, r3, #32
 477 0036 6364     		str	r3, [r4, #68]
6399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 478              		.loc 1 6399 0
 479 0038 2023     		movs	r3, #32
 480 003a 84F84130 		strb	r3, [r4, #65]
6400:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 481              		.loc 1 6400 0
 482 003e 0023     		movs	r3, #0
 483 0040 84F84230 		strb	r3, [r4, #66]
6403:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 484              		.loc 1 6403 0
 485 0044 84F84030 		strb	r3, [r4, #64]
6405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 486              		.loc 1 6405 0
 487 0048 0120     		movs	r0, #1
 488 004a 20E0     		b	.L61
 489              	.LVL45:
 490              	.L66:
6431:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 491              		.loc 1 6431 0
 492 004c 0020     		movs	r0, #0
 493              	.LVL46:
 494 004e 1EE0     		b	.L61
 495              	.LVL47:
 496              	.L67:
6411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 497              		.loc 1 6411 0
 498 0050 1022     		movs	r2, #16
 499 0052 DA61     		str	r2, [r3, #28]
6414:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 500              		.loc 1 6414 0
 501 0054 2368     		ldr	r3, [r4]
 502 0056 2025     		movs	r5, #32
 503              	.LVL48:
 504 0058 DD61     		str	r5, [r3, #28]
6417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 505              		.loc 1 6417 0
 506 005a 2046     		mov	r0, r4
 507 005c FFF7FEFF 		bl	I2C_Flush_TXDR
 508              	.LVL49:
6420:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 509              		.loc 1 6420 0
 510 0060 2268     		ldr	r2, [r4]
 511 0062 5368     		ldr	r3, [r2, #4]
 512 0064 23F0FF73 		bic	r3, r3, #33423360
 513 0068 23F48B33 		bic	r3, r3, #71168
 514 006c 23F4FF73 		bic	r3, r3, #510
 515 0070 23F00103 		bic	r3, r3, #1
 516 0074 5360     		str	r3, [r2, #4]
6422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 517              		.loc 1 6422 0
 518 0076 636C     		ldr	r3, [r4, #68]
 519 0078 43F00403 		orr	r3, r3, #4
 520 007c 6364     		str	r3, [r4, #68]
6423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 521              		.loc 1 6423 0
 522 007e 84F84150 		strb	r5, [r4, #65]
6424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 523              		.loc 1 6424 0
 524 0082 0023     		movs	r3, #0
 525 0084 84F84230 		strb	r3, [r4, #66]
6427:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 526              		.loc 1 6427 0
 527 0088 84F84030 		strb	r3, [r4, #64]
6429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 528              		.loc 1 6429 0
 529 008c 0120     		movs	r0, #1
 530              	.L61:
6432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 531              		.loc 1 6432 0
 532 008e 70BD     		pop	{r4, r5, r6, pc}
 533              		.cfi_endproc
 534              	.LFE391:
 536              		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 537              		.align	1
 538              		.syntax unified
 539              		.thumb
 540              		.thumb_func
 541              		.fpu fpv4-sp-d16
 543              	I2C_WaitOnTXISFlagUntilTimeout:
 544              	.LFB388:
6252:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 545              		.loc 1 6252 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              	.LVL50:
 550 0000 70B5     		push	{r4, r5, r6, lr}
 551              		.cfi_def_cfa_offset 16
 552              		.cfi_offset 4, -16
 553              		.cfi_offset 5, -12
 554              		.cfi_offset 6, -8
 555              		.cfi_offset 14, -4
 556 0002 0446     		mov	r4, r0
 557 0004 0D46     		mov	r5, r1
 558 0006 1646     		mov	r6, r2
 559              	.LVL51:
 560              	.L71:
6253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 561              		.loc 1 6253 0
 562 0008 2368     		ldr	r3, [r4]
 563 000a 9B69     		ldr	r3, [r3, #24]
 564 000c 13F0020F 		tst	r3, #2
 565 0010 1DD1     		bne	.L76
6256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 566              		.loc 1 6256 0
 567 0012 3246     		mov	r2, r6
 568 0014 2946     		mov	r1, r5
 569 0016 2046     		mov	r0, r4
 570 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 571              	.LVL52:
 572 001c C8B9     		cbnz	r0, .L74
6262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 573              		.loc 1 6262 0
 574 001e B5F1FF3F 		cmp	r5, #-1
 575 0022 F1D0     		beq	.L71
6264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 576              		.loc 1 6264 0
 577 0024 FFF7FEFF 		bl	HAL_GetTick
 578              	.LVL53:
 579 0028 801B     		subs	r0, r0, r6
 580 002a A842     		cmp	r0, r5
 581 002c 01D8     		bhi	.L72
6264:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 582              		.loc 1 6264 0 is_stmt 0 discriminator 1
 583 002e 002D     		cmp	r5, #0
 584 0030 EAD1     		bne	.L71
 585              	.L72:
6266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 586              		.loc 1 6266 0 is_stmt 1
 587 0032 636C     		ldr	r3, [r4, #68]
 588 0034 43F02003 		orr	r3, r3, #32
 589 0038 6364     		str	r3, [r4, #68]
6267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 590              		.loc 1 6267 0
 591 003a 2023     		movs	r3, #32
 592 003c 84F84130 		strb	r3, [r4, #65]
6268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 593              		.loc 1 6268 0
 594 0040 0023     		movs	r3, #0
 595 0042 84F84230 		strb	r3, [r4, #66]
6271:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 596              		.loc 1 6271 0
 597 0046 84F84030 		strb	r3, [r4, #64]
6273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 598              		.loc 1 6273 0
 599 004a 0120     		movs	r0, #1
 600 004c 00E0     		b	.L70
 601              	.L76:
6277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 602              		.loc 1 6277 0
 603 004e 0020     		movs	r0, #0
 604              	.L70:
6278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 605              		.loc 1 6278 0
 606 0050 70BD     		pop	{r4, r5, r6, pc}
 607              	.LVL54:
 608              	.L74:
6258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 609              		.loc 1 6258 0
 610 0052 0120     		movs	r0, #1
 611 0054 FCE7     		b	.L70
 612              		.cfi_endproc
 613              	.LFE388:
 615              		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 616              		.align	1
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu fpv4-sp-d16
 622              	I2C_WaitOnFlagUntilTimeout:
 623              	.LFB387:
6222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 624              		.loc 1 6222 0
 625              		.cfi_startproc
 626              		@ args = 4, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              	.LVL55:
 629 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 630              		.cfi_def_cfa_offset 24
 631              		.cfi_offset 3, -24
 632              		.cfi_offset 4, -20
 633              		.cfi_offset 5, -16
 634              		.cfi_offset 6, -12
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 0546     		mov	r5, r0
 638 0004 0F46     		mov	r7, r1
 639 0006 1646     		mov	r6, r2
 640 0008 1C46     		mov	r4, r3
 641              	.LVL56:
 642              	.L79:
6223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 643              		.loc 1 6223 0
 644 000a 2B68     		ldr	r3, [r5]
 645 000c 9B69     		ldr	r3, [r3, #24]
 646 000e 37EA0303 		bics	r3, r7, r3
 647 0012 0CBF     		ite	eq
 648 0014 0123     		moveq	r3, #1
 649 0016 0023     		movne	r3, #0
 650 0018 B342     		cmp	r3, r6
 651 001a 18D1     		bne	.L84
6226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 652              		.loc 1 6226 0
 653 001c B4F1FF3F 		cmp	r4, #-1
 654 0020 F3D0     		beq	.L79
6228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 655              		.loc 1 6228 0
 656 0022 FFF7FEFF 		bl	HAL_GetTick
 657              	.LVL57:
 658 0026 069B     		ldr	r3, [sp, #24]
 659 0028 C01A     		subs	r0, r0, r3
 660 002a A042     		cmp	r0, r4
 661 002c 01D8     		bhi	.L80
6228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 662              		.loc 1 6228 0 is_stmt 0 discriminator 1
 663 002e 002C     		cmp	r4, #0
 664 0030 EBD1     		bne	.L79
 665              	.L80:
6230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 666              		.loc 1 6230 0 is_stmt 1
 667 0032 6B6C     		ldr	r3, [r5, #68]
 668 0034 43F02003 		orr	r3, r3, #32
 669 0038 6B64     		str	r3, [r5, #68]
6231:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 670              		.loc 1 6231 0
 671 003a 2023     		movs	r3, #32
 672 003c 85F84130 		strb	r3, [r5, #65]
6232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 673              		.loc 1 6232 0
 674 0040 0023     		movs	r3, #0
 675 0042 85F84230 		strb	r3, [r5, #66]
6235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
 676              		.loc 1 6235 0
 677 0046 85F84030 		strb	r3, [r5, #64]
6236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 678              		.loc 1 6236 0
 679 004a 0120     		movs	r0, #1
 680 004c 00E0     		b	.L81
 681              	.L84:
6240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 682              		.loc 1 6240 0
 683 004e 0020     		movs	r0, #0
 684              	.L81:
6241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 685              		.loc 1 6241 0
 686 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 687              		.cfi_endproc
 688              	.LFE387:
 690              		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 691              		.align	1
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu fpv4-sp-d16
 697              	I2C_RequestMemoryWrite:
 698              	.LFB370:
5180:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRI
 699              		.loc 1 5180 0
 700              		.cfi_startproc
 701              		@ args = 8, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              	.LVL58:
 704 0000 70B5     		push	{r4, r5, r6, lr}
 705              		.cfi_def_cfa_offset 16
 706              		.cfi_offset 4, -16
 707              		.cfi_offset 5, -12
 708              		.cfi_offset 6, -8
 709              		.cfi_offset 14, -4
 710 0002 82B0     		sub	sp, sp, #8
 711              		.cfi_def_cfa_offset 24
 712 0004 0446     		mov	r4, r0
 713 0006 1646     		mov	r6, r2
 714 0008 1D46     		mov	r5, r3
5181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 715              		.loc 1 5181 0
 716 000a 184B     		ldr	r3, .L92
 717              	.LVL59:
 718 000c 0093     		str	r3, [sp]
 719 000e 4FF08073 		mov	r3, #16777216
 720 0012 EAB2     		uxtb	r2, r5
 721              	.LVL60:
 722 0014 FFF7FEFF 		bl	I2C_TransferConfig
 723              	.LVL61:
5184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 724              		.loc 1 5184 0
 725 0018 079A     		ldr	r2, [sp, #28]
 726 001a 0699     		ldr	r1, [sp, #24]
 727 001c 2046     		mov	r0, r4
 728 001e FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 729              	.LVL62:
 730 0022 E8B9     		cbnz	r0, .L89
5190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 731              		.loc 1 5190 0
 732 0024 012D     		cmp	r5, #1
 733 0026 0ED1     		bne	.L87
5193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 734              		.loc 1 5193 0
 735 0028 2368     		ldr	r3, [r4]
 736 002a F6B2     		uxtb	r6, r6
 737 002c 9E62     		str	r6, [r3, #40]
 738              	.L88:
5212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 739              		.loc 1 5212 0
 740 002e 079B     		ldr	r3, [sp, #28]
 741 0030 0093     		str	r3, [sp]
 742 0032 069B     		ldr	r3, [sp, #24]
 743 0034 0022     		movs	r2, #0
 744 0036 8021     		movs	r1, #128
 745 0038 2046     		mov	r0, r4
 746 003a FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 747              	.LVL63:
 748 003e 0346     		mov	r3, r0
 749 0040 78B1     		cbz	r0, .L86
5214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 750              		.loc 1 5214 0
 751 0042 0123     		movs	r3, #1
 752 0044 0DE0     		b	.L86
 753              	.L87:
5199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 754              		.loc 1 5199 0
 755 0046 2368     		ldr	r3, [r4]
 756 0048 320A     		lsrs	r2, r6, #8
 757 004a 9A62     		str	r2, [r3, #40]
5202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 758              		.loc 1 5202 0
 759 004c 079A     		ldr	r2, [sp, #28]
 760 004e 0699     		ldr	r1, [sp, #24]
 761 0050 2046     		mov	r0, r4
 762 0052 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 763              	.LVL64:
 764 0056 38B9     		cbnz	r0, .L90
5208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 765              		.loc 1 5208 0
 766 0058 2368     		ldr	r3, [r4]
 767 005a F6B2     		uxtb	r6, r6
 768 005c 9E62     		str	r6, [r3, #40]
 769 005e E6E7     		b	.L88
 770              	.L89:
5186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 771              		.loc 1 5186 0
 772 0060 0123     		movs	r3, #1
 773              	.L86:
5218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 774              		.loc 1 5218 0
 775 0062 1846     		mov	r0, r3
 776 0064 02B0     		add	sp, sp, #8
 777              		.cfi_remember_state
 778              		.cfi_def_cfa_offset 16
 779              		@ sp needed
 780 0066 70BD     		pop	{r4, r5, r6, pc}
 781              	.LVL65:
 782              	.L90:
 783              		.cfi_restore_state
5204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 784              		.loc 1 5204 0
 785 0068 0123     		movs	r3, #1
 786 006a FAE7     		b	.L86
 787              	.L93:
 788              		.align	2
 789              	.L92:
 790 006c 00200080 		.word	-2147475456
 791              		.cfi_endproc
 792              	.LFE370:
 794              		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 795              		.align	1
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 799              		.fpu fpv4-sp-d16
 801              	I2C_RequestMemoryRead:
 802              	.LFB371:
5234:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WR
 803              		.loc 1 5234 0
 804              		.cfi_startproc
 805              		@ args = 8, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807              	.LVL66:
 808 0000 70B5     		push	{r4, r5, r6, lr}
 809              		.cfi_def_cfa_offset 16
 810              		.cfi_offset 4, -16
 811              		.cfi_offset 5, -12
 812              		.cfi_offset 6, -8
 813              		.cfi_offset 14, -4
 814 0002 82B0     		sub	sp, sp, #8
 815              		.cfi_def_cfa_offset 24
 816 0004 0446     		mov	r4, r0
 817 0006 1646     		mov	r6, r2
 818 0008 1D46     		mov	r5, r3
5235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 819              		.loc 1 5235 0
 820 000a 184B     		ldr	r3, .L101
 821              	.LVL67:
 822 000c 0093     		str	r3, [sp]
 823 000e 0023     		movs	r3, #0
 824 0010 EAB2     		uxtb	r2, r5
 825              	.LVL68:
 826 0012 FFF7FEFF 		bl	I2C_TransferConfig
 827              	.LVL69:
5238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 828              		.loc 1 5238 0
 829 0016 079A     		ldr	r2, [sp, #28]
 830 0018 0699     		ldr	r1, [sp, #24]
 831 001a 2046     		mov	r0, r4
 832 001c FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 833              	.LVL70:
 834 0020 E8B9     		cbnz	r0, .L98
5244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 835              		.loc 1 5244 0
 836 0022 012D     		cmp	r5, #1
 837 0024 0ED1     		bne	.L96
5247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 838              		.loc 1 5247 0
 839 0026 2368     		ldr	r3, [r4]
 840 0028 F6B2     		uxtb	r6, r6
 841 002a 9E62     		str	r6, [r3, #40]
 842              	.L97:
5266:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 843              		.loc 1 5266 0
 844 002c 079B     		ldr	r3, [sp, #28]
 845 002e 0093     		str	r3, [sp]
 846 0030 069B     		ldr	r3, [sp, #24]
 847 0032 0022     		movs	r2, #0
 848 0034 4021     		movs	r1, #64
 849 0036 2046     		mov	r0, r4
 850 0038 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 851              	.LVL71:
 852 003c 0346     		mov	r3, r0
 853 003e 78B1     		cbz	r0, .L95
5268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 854              		.loc 1 5268 0
 855 0040 0123     		movs	r3, #1
 856 0042 0DE0     		b	.L95
 857              	.L96:
5253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 858              		.loc 1 5253 0
 859 0044 2368     		ldr	r3, [r4]
 860 0046 320A     		lsrs	r2, r6, #8
 861 0048 9A62     		str	r2, [r3, #40]
5256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 862              		.loc 1 5256 0
 863 004a 079A     		ldr	r2, [sp, #28]
 864 004c 0699     		ldr	r1, [sp, #24]
 865 004e 2046     		mov	r0, r4
 866 0050 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 867              	.LVL72:
 868 0054 38B9     		cbnz	r0, .L99
5262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 869              		.loc 1 5262 0
 870 0056 2368     		ldr	r3, [r4]
 871 0058 F6B2     		uxtb	r6, r6
 872 005a 9E62     		str	r6, [r3, #40]
 873 005c E6E7     		b	.L97
 874              	.L98:
5240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 875              		.loc 1 5240 0
 876 005e 0123     		movs	r3, #1
 877              	.L95:
5272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 878              		.loc 1 5272 0
 879 0060 1846     		mov	r0, r3
 880 0062 02B0     		add	sp, sp, #8
 881              		.cfi_remember_state
 882              		.cfi_def_cfa_offset 16
 883              		@ sp needed
 884 0064 70BD     		pop	{r4, r5, r6, pc}
 885              	.LVL73:
 886              	.L99:
 887              		.cfi_restore_state
5258:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 888              		.loc 1 5258 0
 889 0066 0123     		movs	r3, #1
 890 0068 FAE7     		b	.L95
 891              	.L102:
 892 006a 00BF     		.align	2
 893              	.L101:
 894 006c 00200080 		.word	-2147475456
 895              		.cfi_endproc
 896              	.LFE371:
 898              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 899              		.align	1
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv4-sp-d16
 905              	I2C_WaitOnSTOPFlagUntilTimeout:
 906              	.LFB389:
6289:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 907              		.loc 1 6289 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              	.LVL74:
 912 0000 70B5     		push	{r4, r5, r6, lr}
 913              		.cfi_def_cfa_offset 16
 914              		.cfi_offset 4, -16
 915              		.cfi_offset 5, -12
 916              		.cfi_offset 6, -8
 917              		.cfi_offset 14, -4
 918 0002 0546     		mov	r5, r0
 919 0004 0C46     		mov	r4, r1
 920 0006 1646     		mov	r6, r2
 921              	.LVL75:
 922              	.L104:
6290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 923              		.loc 1 6290 0
 924 0008 2B68     		ldr	r3, [r5]
 925 000a 9B69     		ldr	r3, [r3, #24]
 926 000c 13F0200F 		tst	r3, #32
 927 0010 1AD1     		bne	.L110
6293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 928              		.loc 1 6293 0
 929 0012 3246     		mov	r2, r6
 930 0014 2146     		mov	r1, r4
 931 0016 2846     		mov	r0, r5
 932 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 933              	.LVL76:
 934 001c B0B9     		cbnz	r0, .L108
6299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 935              		.loc 1 6299 0
 936 001e FFF7FEFF 		bl	HAL_GetTick
 937              	.LVL77:
 938 0022 801B     		subs	r0, r0, r6
 939 0024 A042     		cmp	r0, r4
 940 0026 01D8     		bhi	.L106
6299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 941              		.loc 1 6299 0 is_stmt 0 discriminator 1
 942 0028 002C     		cmp	r4, #0
 943 002a EDD1     		bne	.L104
 944              	.L106:
6301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 945              		.loc 1 6301 0 is_stmt 1
 946 002c 6B6C     		ldr	r3, [r5, #68]
 947 002e 43F02003 		orr	r3, r3, #32
 948 0032 6B64     		str	r3, [r5, #68]
6302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 949              		.loc 1 6302 0
 950 0034 2023     		movs	r3, #32
 951 0036 85F84130 		strb	r3, [r5, #65]
6303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 952              		.loc 1 6303 0
 953 003a 0023     		movs	r3, #0
 954 003c 85F84230 		strb	r3, [r5, #66]
6306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 955              		.loc 1 6306 0
 956 0040 85F84030 		strb	r3, [r5, #64]
6308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 957              		.loc 1 6308 0
 958 0044 0120     		movs	r0, #1
 959              	.L105:
6312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 960              		.loc 1 6312 0
 961 0046 70BD     		pop	{r4, r5, r6, pc}
 962              	.LVL78:
 963              	.L110:
6311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 964              		.loc 1 6311 0
 965 0048 0020     		movs	r0, #0
 966 004a FCE7     		b	.L105
 967              	.L108:
6295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 968              		.loc 1 6295 0
 969 004c 0120     		movs	r0, #1
 970 004e FAE7     		b	.L105
 971              		.cfi_endproc
 972              	.LFE389:
 974              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 975              		.align	1
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 979              		.fpu fpv4-sp-d16
 981              	I2C_WaitOnRXNEFlagUntilTimeout:
 982              	.LFB390:
6323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 983              		.loc 1 6323 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              	.LVL79:
 988 0000 70B5     		push	{r4, r5, r6, lr}
 989              		.cfi_def_cfa_offset 16
 990              		.cfi_offset 4, -16
 991              		.cfi_offset 5, -12
 992              		.cfi_offset 6, -8
 993              		.cfi_offset 14, -4
 994 0002 0446     		mov	r4, r0
 995 0004 0D46     		mov	r5, r1
 996 0006 1646     		mov	r6, r2
 997              	.LVL80:
 998              	.L112:
6324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 999              		.loc 1 6324 0
 1000 0008 2368     		ldr	r3, [r4]
 1001 000a 9B69     		ldr	r3, [r3, #24]
 1002 000c 13F0040F 		tst	r3, #4
 1003 0010 3ED1     		bne	.L120
6327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1004              		.loc 1 6327 0
 1005 0012 3246     		mov	r2, r6
 1006 0014 2946     		mov	r1, r5
 1007 0016 2046     		mov	r0, r4
 1008 0018 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 1009              	.LVL81:
 1010 001c 0146     		mov	r1, r0
 1011 001e 0028     		cmp	r0, #0
 1012 0020 38D1     		bne	.L118
6333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1013              		.loc 1 6333 0
 1014 0022 2368     		ldr	r3, [r4]
 1015 0024 9A69     		ldr	r2, [r3, #24]
 1016 0026 12F0200F 		tst	r2, #32
 1017 002a 13D1     		bne	.L121
6363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1018              		.loc 1 6363 0
 1019 002c FFF7FEFF 		bl	HAL_GetTick
 1020              	.LVL82:
 1021 0030 801B     		subs	r0, r0, r6
 1022 0032 A842     		cmp	r0, r5
 1023 0034 01D8     		bhi	.L116
6363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1024              		.loc 1 6363 0 is_stmt 0 discriminator 1
 1025 0036 002D     		cmp	r5, #0
 1026 0038 E6D1     		bne	.L112
 1027              	.L116:
6365:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->State = HAL_I2C_STATE_READY;
 1028              		.loc 1 6365 0 is_stmt 1
 1029 003a 636C     		ldr	r3, [r4, #68]
 1030 003c 43F02003 		orr	r3, r3, #32
 1031 0040 6364     		str	r3, [r4, #68]
6366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1032              		.loc 1 6366 0
 1033 0042 2023     		movs	r3, #32
 1034 0044 84F84130 		strb	r3, [r4, #65]
6369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1035              		.loc 1 6369 0
 1036 0048 0023     		movs	r3, #0
 1037 004a 84F84030 		strb	r3, [r4, #64]
6371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1038              		.loc 1 6371 0
 1039 004e 0121     		movs	r1, #1
 1040              	.L113:
6375:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1041              		.loc 1 6375 0
 1042 0050 0846     		mov	r0, r1
 1043 0052 70BD     		pop	{r4, r5, r6, pc}
 1044              	.LVL83:
 1045              	.L121:
6337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 1046              		.loc 1 6337 0
 1047 0054 9A69     		ldr	r2, [r3, #24]
 1048 0056 12F0040F 		tst	r2, #4
 1049 005a 02D0     		beq	.L115
6337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 1050              		.loc 1 6337 0 is_stmt 0 discriminator 1
 1051 005c 228D     		ldrh	r2, [r4, #40]
 1052 005e 002A     		cmp	r2, #0
 1053 0060 F6D1     		bne	.L113
 1054              	.L115:
6346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1055              		.loc 1 6346 0 is_stmt 1
 1056 0062 2022     		movs	r2, #32
 1057 0064 DA61     		str	r2, [r3, #28]
6349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1058              		.loc 1 6349 0
 1059 0066 2168     		ldr	r1, [r4]
 1060 0068 4B68     		ldr	r3, [r1, #4]
 1061 006a 23F0FF73 		bic	r3, r3, #33423360
 1062 006e 23F48B33 		bic	r3, r3, #71168
 1063 0072 23F4FF73 		bic	r3, r3, #510
 1064 0076 23F00103 		bic	r3, r3, #1
 1065 007a 4B60     		str	r3, [r1, #4]
6351:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 1066              		.loc 1 6351 0
 1067 007c 0023     		movs	r3, #0
 1068 007e 6364     		str	r3, [r4, #68]
6352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 1069              		.loc 1 6352 0
 1070 0080 84F84120 		strb	r2, [r4, #65]
6353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1071              		.loc 1 6353 0
 1072 0084 84F84230 		strb	r3, [r4, #66]
6356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1073              		.loc 1 6356 0
 1074 0088 84F84030 		strb	r3, [r4, #64]
6358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 1075              		.loc 1 6358 0
 1076 008c 0121     		movs	r1, #1
 1077 008e DFE7     		b	.L113
 1078              	.L120:
6374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 1079              		.loc 1 6374 0
 1080 0090 0021     		movs	r1, #0
 1081 0092 DDE7     		b	.L113
 1082              	.L118:
6329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1083              		.loc 1 6329 0
 1084 0094 0121     		movs	r1, #1
 1085 0096 DBE7     		b	.L113
 1086              		.cfi_endproc
 1087              	.LFE390:
 1089              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 1090              		.align	1
 1091              		.weak	HAL_I2C_MspInit
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1095              		.fpu fpv4-sp-d16
 1097              	HAL_I2C_MspInit:
 1098              	.LFB319:
 632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1099              		.loc 1 632 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              		@ link register save eliminated.
 1104              	.LVL84:
 639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1105              		.loc 1 639 0
 1106 0000 7047     		bx	lr
 1107              		.cfi_endproc
 1108              	.LFE319:
 1110              		.section	.text.HAL_I2C_Init,"ax",%progbits
 1111              		.align	1
 1112              		.global	HAL_I2C_Init
 1113              		.syntax unified
 1114              		.thumb
 1115              		.thumb_func
 1116              		.fpu fpv4-sp-d16
 1118              	HAL_I2C_Init:
 1119              	.LFB317:
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1120              		.loc 1 477 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 1124              	.LVL85:
 479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 1125              		.loc 1 479 0
 1126 0000 0028     		cmp	r0, #0
 1127 0002 59D0     		beq	.L129
 477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1128              		.loc 1 477 0
 1129 0004 10B5     		push	{r4, lr}
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 4, -8
 1132              		.cfi_offset 14, -4
 1133 0006 0446     		mov	r4, r0
 494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 1134              		.loc 1 494 0
 1135 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1136 000c 002B     		cmp	r3, #0
 1137 000e 43D0     		beq	.L134
 1138              	.LVL86:
 1139              	.L125:
 525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1140              		.loc 1 525 0
 1141 0010 2423     		movs	r3, #36
 1142 0012 84F84130 		strb	r3, [r4, #65]
 528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1143              		.loc 1 528 0
 1144 0016 2268     		ldr	r2, [r4]
 1145 0018 1368     		ldr	r3, [r2]
 1146 001a 23F00103 		bic	r3, r3, #1
 1147 001e 1360     		str	r3, [r2]
 532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1148              		.loc 1 532 0
 1149 0020 6368     		ldr	r3, [r4, #4]
 1150 0022 2268     		ldr	r2, [r4]
 1151 0024 23F07063 		bic	r3, r3, #251658240
 1152 0028 1361     		str	r3, [r2, #16]
 536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1153              		.loc 1 536 0
 1154 002a 2268     		ldr	r2, [r4]
 1155 002c 9368     		ldr	r3, [r2, #8]
 1156 002e 23F40043 		bic	r3, r3, #32768
 1157 0032 9360     		str	r3, [r2, #8]
 539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 1158              		.loc 1 539 0
 1159 0034 E368     		ldr	r3, [r4, #12]
 1160 0036 012B     		cmp	r3, #1
 1161 0038 33D0     		beq	.L135
 545:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 1162              		.loc 1 545 0
 1163 003a A368     		ldr	r3, [r4, #8]
 1164 003c 2268     		ldr	r2, [r4]
 1165 003e 43F40443 		orr	r3, r3, #33792
 1166 0042 9360     		str	r3, [r2, #8]
 1167              	.L127:
 550:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 1168              		.loc 1 550 0
 1169 0044 E368     		ldr	r3, [r4, #12]
 1170 0046 022B     		cmp	r3, #2
 1171 0048 31D0     		beq	.L136
 1172              	.L128:
 555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1173              		.loc 1 555 0
 1174 004a 2268     		ldr	r2, [r4]
 1175 004c 5368     		ldr	r3, [r2, #4]
 1176 004e 43F00073 		orr	r3, r3, #33554432
 1177 0052 43F40043 		orr	r3, r3, #32768
 1178 0056 5360     		str	r3, [r2, #4]
 559:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1179              		.loc 1 559 0
 1180 0058 2268     		ldr	r2, [r4]
 1181 005a D368     		ldr	r3, [r2, #12]
 1182 005c 23F40043 		bic	r3, r3, #32768
 1183 0060 D360     		str	r3, [r2, #12]
 562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1184              		.loc 1 562 0
 1185 0062 2369     		ldr	r3, [r4, #16]
 1186 0064 6269     		ldr	r2, [r4, #20]
 1187 0066 1343     		orrs	r3, r3, r2
 1188 0068 A169     		ldr	r1, [r4, #24]
 1189 006a 2268     		ldr	r2, [r4]
 1190 006c 43EA0123 		orr	r3, r3, r1, lsl #8
 1191 0070 D360     		str	r3, [r2, #12]
 566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1192              		.loc 1 566 0
 1193 0072 E369     		ldr	r3, [r4, #28]
 1194 0074 216A     		ldr	r1, [r4, #32]
 1195 0076 2268     		ldr	r2, [r4]
 1196 0078 0B43     		orrs	r3, r3, r1
 1197 007a 1360     		str	r3, [r2]
 569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1198              		.loc 1 569 0
 1199 007c 2268     		ldr	r2, [r4]
 1200 007e 1368     		ldr	r3, [r2]
 1201 0080 43F00103 		orr	r3, r3, #1
 1202 0084 1360     		str	r3, [r2]
 571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1203              		.loc 1 571 0
 1204 0086 0020     		movs	r0, #0
 1205 0088 6064     		str	r0, [r4, #68]
 572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1206              		.loc 1 572 0
 1207 008a 2023     		movs	r3, #32
 1208 008c 84F84130 		strb	r3, [r4, #65]
 573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1209              		.loc 1 573 0
 1210 0090 2063     		str	r0, [r4, #48]
 574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1211              		.loc 1 574 0
 1212 0092 84F84200 		strb	r0, [r4, #66]
 577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1213              		.loc 1 577 0
 1214 0096 10BD     		pop	{r4, pc}
 1215              	.LVL87:
 1216              	.L134:
 497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1217              		.loc 1 497 0
 1218 0098 80F84030 		strb	r3, [r0, #64]
 521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1219              		.loc 1 521 0
 1220 009c FFF7FEFF 		bl	HAL_I2C_MspInit
 1221              	.LVL88:
 1222 00a0 B6E7     		b	.L125
 1223              	.L135:
 541:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 1224              		.loc 1 541 0
 1225 00a2 A368     		ldr	r3, [r4, #8]
 1226 00a4 2268     		ldr	r2, [r4]
 1227 00a6 43F40043 		orr	r3, r3, #32768
 1228 00aa 9360     		str	r3, [r2, #8]
 1229 00ac CAE7     		b	.L127
 1230              	.L136:
 552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 1231              		.loc 1 552 0
 1232 00ae 2368     		ldr	r3, [r4]
 1233 00b0 4FF40062 		mov	r2, #2048
 1234 00b4 5A60     		str	r2, [r3, #4]
 1235 00b6 C8E7     		b	.L128
 1236              	.LVL89:
 1237              	.L129:
 1238              		.cfi_def_cfa_offset 0
 1239              		.cfi_restore 4
 1240              		.cfi_restore 14
 481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 1241              		.loc 1 481 0
 1242 00b8 0120     		movs	r0, #1
 1243              	.LVL90:
 577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1244              		.loc 1 577 0
 1245 00ba 7047     		bx	lr
 1246              		.cfi_endproc
 1247              	.LFE317:
 1249              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 1250              		.align	1
 1251              		.weak	HAL_I2C_MspDeInit
 1252              		.syntax unified
 1253              		.thumb
 1254              		.thumb_func
 1255              		.fpu fpv4-sp-d16
 1257              	HAL_I2C_MspDeInit:
 1258              	.LFB320:
 648:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 1259              		.loc 1 648 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 0
 1262              		@ frame_needed = 0, uses_anonymous_args = 0
 1263              		@ link register save eliminated.
 1264              	.LVL91:
 655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1265              		.loc 1 655 0
 1266 0000 7047     		bx	lr
 1267              		.cfi_endproc
 1268              	.LFE320:
 1270              		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 1271              		.align	1
 1272              		.global	HAL_I2C_DeInit
 1273              		.syntax unified
 1274              		.thumb
 1275              		.thumb_func
 1276              		.fpu fpv4-sp-d16
 1278              	HAL_I2C_DeInit:
 1279              	.LFB318:
 586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1280              		.loc 1 586 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 0
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284              	.LVL92:
 588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 1285              		.loc 1 588 0
 1286 0000 A8B1     		cbz	r0, .L140
 586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 1287              		.loc 1 586 0
 1288 0002 10B5     		push	{r4, lr}
 1289              		.cfi_def_cfa_offset 8
 1290              		.cfi_offset 4, -8
 1291              		.cfi_offset 14, -4
 1292 0004 0446     		mov	r4, r0
 596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1293              		.loc 1 596 0
 1294 0006 2423     		movs	r3, #36
 1295 0008 80F84130 		strb	r3, [r0, #65]
 599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1296              		.loc 1 599 0
 1297 000c 0268     		ldr	r2, [r0]
 1298 000e 1368     		ldr	r3, [r2]
 1299 0010 23F00103 		bic	r3, r3, #1
 1300 0014 1360     		str	r3, [r2]
 611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 1301              		.loc 1 611 0
 1302 0016 FFF7FEFF 		bl	HAL_I2C_MspDeInit
 1303              	.LVL93:
 614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1304              		.loc 1 614 0
 1305 001a 0020     		movs	r0, #0
 1306 001c 6064     		str	r0, [r4, #68]
 615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1307              		.loc 1 615 0
 1308 001e 84F84100 		strb	r0, [r4, #65]
 616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1309              		.loc 1 616 0
 1310 0022 2063     		str	r0, [r4, #48]
 617:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1311              		.loc 1 617 0
 1312 0024 84F84200 		strb	r0, [r4, #66]
 620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1313              		.loc 1 620 0
 1314 0028 84F84000 		strb	r0, [r4, #64]
 623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1315              		.loc 1 623 0
 1316 002c 10BD     		pop	{r4, pc}
 1317              	.LVL94:
 1318              	.L140:
 1319              		.cfi_def_cfa_offset 0
 1320              		.cfi_restore 4
 1321              		.cfi_restore 14
 590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 1322              		.loc 1 590 0
 1323 002e 0120     		movs	r0, #1
 1324              	.LVL95:
 623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1325              		.loc 1 623 0
 1326 0030 7047     		bx	lr
 1327              		.cfi_endproc
 1328              	.LFE318:
 1330              		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 1331              		.align	1
 1332              		.global	HAL_I2C_Master_Transmit
 1333              		.syntax unified
 1334              		.thumb
 1335              		.thumb_func
 1336              		.fpu fpv4-sp-d16
 1338              	HAL_I2C_Master_Transmit:
 1339              	.LFB321:
1070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
 1340              		.loc 1 1070 0
 1341              		.cfi_startproc
 1342              		@ args = 4, pretend = 0, frame = 0
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344              	.LVL96:
 1345 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1346              		.cfi_def_cfa_offset 28
 1347              		.cfi_offset 4, -28
 1348              		.cfi_offset 5, -24
 1349              		.cfi_offset 6, -20
 1350              		.cfi_offset 7, -16
 1351              		.cfi_offset 8, -12
 1352              		.cfi_offset 9, -8
 1353              		.cfi_offset 14, -4
 1354 0004 83B0     		sub	sp, sp, #12
 1355              		.cfi_def_cfa_offset 40
1073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 1356              		.loc 1 1073 0
 1357 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1358 000a EDB2     		uxtb	r5, r5
 1359 000c 202D     		cmp	r5, #32
 1360 000e 40F0A480 		bne	.L153
1076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1361              		.loc 1 1076 0
 1362 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1363 0016 012C     		cmp	r4, #1
 1364 0018 00F0A480 		beq	.L154
 1365 001c 9846     		mov	r8, r3
 1366 001e 1746     		mov	r7, r2
 1367 0020 0E46     		mov	r6, r1
 1368 0022 0446     		mov	r4, r0
1076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1369              		.loc 1 1076 0 is_stmt 0 discriminator 2
 1370 0024 4FF00109 		mov	r9, #1
 1371 0028 80F84090 		strb	r9, [r0, #64]
1079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1372              		.loc 1 1079 0 is_stmt 1 discriminator 2
 1373 002c FFF7FEFF 		bl	HAL_GetTick
 1374              	.LVL97:
 1375 0030 0546     		mov	r5, r0
 1376              	.LVL98:
1081:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1377              		.loc 1 1081 0 discriminator 2
 1378 0032 0090     		str	r0, [sp]
 1379 0034 1923     		movs	r3, #25
 1380 0036 4A46     		mov	r2, r9
 1381 0038 4FF40041 		mov	r1, #32768
 1382 003c 2046     		mov	r0, r4
 1383              	.LVL99:
 1384 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1385              	.LVL100:
 1386 0042 0028     		cmp	r0, #0
 1387 0044 40F09080 		bne	.L155
1086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1388              		.loc 1 1086 0
 1389 0048 2123     		movs	r3, #33
 1390 004a 84F84130 		strb	r3, [r4, #65]
1087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1391              		.loc 1 1087 0
 1392 004e 1023     		movs	r3, #16
 1393 0050 84F84230 		strb	r3, [r4, #66]
1088:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1394              		.loc 1 1088 0
 1395 0054 0023     		movs	r3, #0
 1396 0056 6364     		str	r3, [r4, #68]
1091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1397              		.loc 1 1091 0
 1398 0058 6762     		str	r7, [r4, #36]
1092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1399              		.loc 1 1092 0
 1400 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
1093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1401              		.loc 1 1093 0
 1402 005e 6363     		str	r3, [r4, #52]
1097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1403              		.loc 1 1097 0
 1404 0060 638D     		ldrh	r3, [r4, #42]
 1405 0062 9BB2     		uxth	r3, r3
 1406 0064 FF2B     		cmp	r3, #255
 1407 0066 0AD9     		bls	.L147
1099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1408              		.loc 1 1099 0
 1409 0068 FF22     		movs	r2, #255
 1410 006a 2285     		strh	r2, [r4, #40]	@ movhi
1100:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1411              		.loc 1 1100 0
 1412 006c 424B     		ldr	r3, .L161
 1413 006e 0093     		str	r3, [sp]
 1414 0070 4FF08073 		mov	r3, #16777216
 1415 0074 3146     		mov	r1, r6
 1416 0076 2046     		mov	r0, r4
 1417 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1418              	.LVL101:
 1419 007c 18E0     		b	.L149
 1420              	.L147:
1104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1421              		.loc 1 1104 0
 1422 007e 628D     		ldrh	r2, [r4, #42]
 1423 0080 92B2     		uxth	r2, r2
 1424 0082 2285     		strh	r2, [r4, #40]	@ movhi
1105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1425              		.loc 1 1105 0
 1426 0084 3C4B     		ldr	r3, .L161
 1427 0086 0093     		str	r3, [sp]
 1428 0088 4FF00073 		mov	r3, #33554432
 1429 008c D2B2     		uxtb	r2, r2
 1430 008e 3146     		mov	r1, r6
 1431 0090 2046     		mov	r0, r4
 1432 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1433              	.LVL102:
 1434 0096 0BE0     		b	.L149
 1435              	.L151:
1139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1436              		.loc 1 1139 0
 1437 0098 628D     		ldrh	r2, [r4, #42]
 1438 009a 92B2     		uxth	r2, r2
 1439 009c 2285     		strh	r2, [r4, #40]	@ movhi
1140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 1440              		.loc 1 1140 0
 1441 009e 0023     		movs	r3, #0
 1442 00a0 0093     		str	r3, [sp]
 1443 00a2 4FF00073 		mov	r3, #33554432
 1444 00a6 D2B2     		uxtb	r2, r2
 1445 00a8 3146     		mov	r1, r6
 1446 00aa 2046     		mov	r0, r4
 1447 00ac FFF7FEFF 		bl	I2C_TransferConfig
 1448              	.LVL103:
 1449              	.L149:
1108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1450              		.loc 1 1108 0
 1451 00b0 638D     		ldrh	r3, [r4, #42]
 1452 00b2 9BB2     		uxth	r3, r3
 1453 00b4 002B     		cmp	r3, #0
 1454 00b6 33D0     		beq	.L160
1111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 1455              		.loc 1 1111 0
 1456 00b8 2A46     		mov	r2, r5
 1457 00ba 0A99     		ldr	r1, [sp, #40]
 1458 00bc 2046     		mov	r0, r4
 1459 00be FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1460              	.LVL104:
 1461 00c2 0028     		cmp	r0, #0
 1462 00c4 52D1     		bne	.L156
1116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1463              		.loc 1 1116 0
 1464 00c6 626A     		ldr	r2, [r4, #36]
 1465 00c8 2368     		ldr	r3, [r4]
 1466 00ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1467 00cc 9A62     		str	r2, [r3, #40]
1119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1468              		.loc 1 1119 0
 1469 00ce 636A     		ldr	r3, [r4, #36]
 1470 00d0 0133     		adds	r3, r3, #1
 1471 00d2 6362     		str	r3, [r4, #36]
1121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize--;
 1472              		.loc 1 1121 0
 1473 00d4 638D     		ldrh	r3, [r4, #42]
 1474 00d6 013B     		subs	r3, r3, #1
 1475 00d8 9BB2     		uxth	r3, r3
 1476 00da 6385     		strh	r3, [r4, #42]	@ movhi
1122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1477              		.loc 1 1122 0
 1478 00dc 238D     		ldrh	r3, [r4, #40]
 1479 00de 013B     		subs	r3, r3, #1
 1480 00e0 9BB2     		uxth	r3, r3
 1481 00e2 2385     		strh	r3, [r4, #40]	@ movhi
1124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 1482              		.loc 1 1124 0
 1483 00e4 628D     		ldrh	r2, [r4, #42]
 1484 00e6 92B2     		uxth	r2, r2
 1485 00e8 002A     		cmp	r2, #0
 1486 00ea E1D0     		beq	.L149
1124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 1487              		.loc 1 1124 0 is_stmt 0 discriminator 1
 1488 00ec 002B     		cmp	r3, #0
 1489 00ee DFD1     		bne	.L149
1127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 1490              		.loc 1 1127 0 is_stmt 1
 1491 00f0 0095     		str	r5, [sp]
 1492 00f2 0A9B     		ldr	r3, [sp, #40]
 1493 00f4 0022     		movs	r2, #0
 1494 00f6 8021     		movs	r1, #128
 1495 00f8 2046     		mov	r0, r4
 1496 00fa FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1497              	.LVL105:
 1498 00fe 0028     		cmp	r0, #0
 1499 0100 36D1     		bne	.L157
1132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 1500              		.loc 1 1132 0
 1501 0102 638D     		ldrh	r3, [r4, #42]
 1502 0104 9BB2     		uxth	r3, r3
 1503 0106 FF2B     		cmp	r3, #255
 1504 0108 C6D9     		bls	.L151
1134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1505              		.loc 1 1134 0
 1506 010a FF22     		movs	r2, #255
 1507 010c 2285     		strh	r2, [r4, #40]	@ movhi
1135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 1508              		.loc 1 1135 0
 1509 010e 0023     		movs	r3, #0
 1510 0110 0093     		str	r3, [sp]
 1511 0112 4FF08073 		mov	r3, #16777216
 1512 0116 3146     		mov	r1, r6
 1513 0118 2046     		mov	r0, r4
 1514 011a FFF7FEFF 		bl	I2C_TransferConfig
 1515              	.LVL106:
 1516 011e C7E7     		b	.L149
 1517              	.L160:
1147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1518              		.loc 1 1147 0
 1519 0120 2A46     		mov	r2, r5
 1520 0122 0A99     		ldr	r1, [sp, #40]
 1521 0124 2046     		mov	r0, r4
 1522 0126 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1523              	.LVL107:
 1524 012a 0346     		mov	r3, r0
 1525 012c 10BB     		cbnz	r0, .L158
1153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1526              		.loc 1 1153 0
 1527 012e 2268     		ldr	r2, [r4]
 1528 0130 2021     		movs	r1, #32
 1529 0132 D161     		str	r1, [r2, #28]
1156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1530              		.loc 1 1156 0
 1531 0134 2068     		ldr	r0, [r4]
 1532 0136 4268     		ldr	r2, [r0, #4]
 1533 0138 22F0FF72 		bic	r2, r2, #33423360
 1534 013c 22F48B32 		bic	r2, r2, #71168
 1535 0140 22F4FF72 		bic	r2, r2, #510
 1536 0144 22F00102 		bic	r2, r2, #1
 1537 0148 4260     		str	r2, [r0, #4]
1158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1538              		.loc 1 1158 0
 1539 014a 84F84110 		strb	r1, [r4, #65]
1159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1540              		.loc 1 1159 0
 1541 014e 0022     		movs	r2, #0
 1542 0150 84F84220 		strb	r2, [r4, #66]
1162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1543              		.loc 1 1162 0
 1544 0154 84F84020 		strb	r2, [r4, #64]
1164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 1545              		.loc 1 1164 0
 1546 0158 00E0     		b	.L146
 1547              	.LVL108:
 1548              	.L153:
1168:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 1549              		.loc 1 1168 0
 1550 015a 0223     		movs	r3, #2
 1551              	.LVL109:
 1552              	.L146:
1170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1553              		.loc 1 1170 0
 1554 015c 1846     		mov	r0, r3
 1555 015e 03B0     		add	sp, sp, #12
 1556              		.cfi_remember_state
 1557              		.cfi_def_cfa_offset 28
 1558              		@ sp needed
 1559 0160 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1560              	.LVL110:
 1561              	.L154:
 1562              		.cfi_restore_state
1076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1563              		.loc 1 1076 0
 1564 0164 0223     		movs	r3, #2
 1565              	.LVL111:
 1566 0166 F9E7     		b	.L146
 1567              	.LVL112:
 1568              	.L155:
1083:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1569              		.loc 1 1083 0
 1570 0168 0123     		movs	r3, #1
 1571 016a F7E7     		b	.L146
 1572              	.L156:
1113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 1573              		.loc 1 1113 0
 1574 016c 0123     		movs	r3, #1
 1575 016e F5E7     		b	.L146
 1576              	.L157:
1129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 1577              		.loc 1 1129 0
 1578 0170 0123     		movs	r3, #1
 1579 0172 F3E7     		b	.L146
 1580              	.L158:
1149:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1581              		.loc 1 1149 0
 1582 0174 0123     		movs	r3, #1
 1583 0176 F1E7     		b	.L146
 1584              	.L162:
 1585              		.align	2
 1586              	.L161:
 1587 0178 00200080 		.word	-2147475456
 1588              		.cfi_endproc
 1589              	.LFE321:
 1591              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 1592              		.align	1
 1593              		.global	HAL_I2C_Master_Receive
 1594              		.syntax unified
 1595              		.thumb
 1596              		.thumb_func
 1597              		.fpu fpv4-sp-d16
 1599              	HAL_I2C_Master_Receive:
 1600              	.LFB322:
1185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
 1601              		.loc 1 1185 0
 1602              		.cfi_startproc
 1603              		@ args = 4, pretend = 0, frame = 0
 1604              		@ frame_needed = 0, uses_anonymous_args = 0
 1605              	.LVL113:
 1606 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1607              		.cfi_def_cfa_offset 28
 1608              		.cfi_offset 4, -28
 1609              		.cfi_offset 5, -24
 1610              		.cfi_offset 6, -20
 1611              		.cfi_offset 7, -16
 1612              		.cfi_offset 8, -12
 1613              		.cfi_offset 9, -8
 1614              		.cfi_offset 14, -4
 1615 0004 83B0     		sub	sp, sp, #12
 1616              		.cfi_def_cfa_offset 40
1188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 1617              		.loc 1 1188 0
 1618 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1619 000a EDB2     		uxtb	r5, r5
 1620 000c 202D     		cmp	r5, #32
 1621 000e 40F0A480 		bne	.L171
1191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1622              		.loc 1 1191 0
 1623 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1624 0016 012C     		cmp	r4, #1
 1625 0018 00F0A480 		beq	.L172
 1626 001c 9846     		mov	r8, r3
 1627 001e 1746     		mov	r7, r2
 1628 0020 0E46     		mov	r6, r1
 1629 0022 0446     		mov	r4, r0
1191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1630              		.loc 1 1191 0 is_stmt 0 discriminator 2
 1631 0024 4FF00109 		mov	r9, #1
 1632 0028 80F84090 		strb	r9, [r0, #64]
1194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1633              		.loc 1 1194 0 is_stmt 1 discriminator 2
 1634 002c FFF7FEFF 		bl	HAL_GetTick
 1635              	.LVL114:
 1636 0030 0546     		mov	r5, r0
 1637              	.LVL115:
1196:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1638              		.loc 1 1196 0 discriminator 2
 1639 0032 0090     		str	r0, [sp]
 1640 0034 1923     		movs	r3, #25
 1641 0036 4A46     		mov	r2, r9
 1642 0038 4FF40041 		mov	r1, #32768
 1643 003c 2046     		mov	r0, r4
 1644              	.LVL116:
 1645 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1646              	.LVL117:
 1647 0042 0028     		cmp	r0, #0
 1648 0044 40F09080 		bne	.L173
1201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1649              		.loc 1 1201 0
 1650 0048 2223     		movs	r3, #34
 1651 004a 84F84130 		strb	r3, [r4, #65]
1202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1652              		.loc 1 1202 0
 1653 004e 1023     		movs	r3, #16
 1654 0050 84F84230 		strb	r3, [r4, #66]
1203:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1655              		.loc 1 1203 0
 1656 0054 0023     		movs	r3, #0
 1657 0056 6364     		str	r3, [r4, #68]
1206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1658              		.loc 1 1206 0
 1659 0058 6762     		str	r7, [r4, #36]
1207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1660              		.loc 1 1207 0
 1661 005a A4F82A80 		strh	r8, [r4, #42]	@ movhi
1208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1662              		.loc 1 1208 0
 1663 005e 6363     		str	r3, [r4, #52]
1212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1664              		.loc 1 1212 0
 1665 0060 638D     		ldrh	r3, [r4, #42]
 1666 0062 9BB2     		uxth	r3, r3
 1667 0064 FF2B     		cmp	r3, #255
 1668 0066 0AD9     		bls	.L165
1214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 1669              		.loc 1 1214 0
 1670 0068 FF22     		movs	r2, #255
 1671 006a 2285     		strh	r2, [r4, #40]	@ movhi
1215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1672              		.loc 1 1215 0
 1673 006c 424B     		ldr	r3, .L179
 1674 006e 0093     		str	r3, [sp]
 1675 0070 4FF08073 		mov	r3, #16777216
 1676 0074 3146     		mov	r1, r6
 1677 0076 2046     		mov	r0, r4
 1678 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1679              	.LVL118:
 1680 007c 18E0     		b	.L167
 1681              	.L165:
1219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 1682              		.loc 1 1219 0
 1683 007e 628D     		ldrh	r2, [r4, #42]
 1684 0080 92B2     		uxth	r2, r2
 1685 0082 2285     		strh	r2, [r4, #40]	@ movhi
1220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1686              		.loc 1 1220 0
 1687 0084 3C4B     		ldr	r3, .L179
 1688 0086 0093     		str	r3, [sp]
 1689 0088 4FF00073 		mov	r3, #33554432
 1690 008c D2B2     		uxtb	r2, r2
 1691 008e 3146     		mov	r1, r6
 1692 0090 2046     		mov	r0, r4
 1693 0092 FFF7FEFF 		bl	I2C_TransferConfig
 1694              	.LVL119:
 1695 0096 0BE0     		b	.L167
 1696              	.L169:
1255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 1697              		.loc 1 1255 0
 1698 0098 628D     		ldrh	r2, [r4, #42]
 1699 009a 92B2     		uxth	r2, r2
 1700 009c 2285     		strh	r2, [r4, #40]	@ movhi
1256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 1701              		.loc 1 1256 0
 1702 009e 0023     		movs	r3, #0
 1703 00a0 0093     		str	r3, [sp]
 1704 00a2 4FF00073 		mov	r3, #33554432
 1705 00a6 D2B2     		uxtb	r2, r2
 1706 00a8 3146     		mov	r1, r6
 1707 00aa 2046     		mov	r0, r4
 1708 00ac FFF7FEFF 		bl	I2C_TransferConfig
 1709              	.LVL120:
 1710              	.L167:
1223:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1711              		.loc 1 1223 0
 1712 00b0 638D     		ldrh	r3, [r4, #42]
 1713 00b2 9BB2     		uxth	r3, r3
 1714 00b4 002B     		cmp	r3, #0
 1715 00b6 33D0     		beq	.L178
1226:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 1716              		.loc 1 1226 0
 1717 00b8 2A46     		mov	r2, r5
 1718 00ba 0A99     		ldr	r1, [sp, #40]
 1719 00bc 2046     		mov	r0, r4
 1720 00be FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 1721              	.LVL121:
 1722 00c2 0028     		cmp	r0, #0
 1723 00c4 52D1     		bne	.L174
1232:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1724              		.loc 1 1232 0
 1725 00c6 2368     		ldr	r3, [r4]
 1726 00c8 5A6A     		ldr	r2, [r3, #36]
 1727 00ca 636A     		ldr	r3, [r4, #36]
 1728 00cc 1A70     		strb	r2, [r3]
1235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1729              		.loc 1 1235 0
 1730 00ce 636A     		ldr	r3, [r4, #36]
 1731 00d0 0133     		adds	r3, r3, #1
 1732 00d2 6362     		str	r3, [r4, #36]
1237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
 1733              		.loc 1 1237 0
 1734 00d4 238D     		ldrh	r3, [r4, #40]
 1735 00d6 013B     		subs	r3, r3, #1
 1736 00d8 9BB2     		uxth	r3, r3
 1737 00da 2385     		strh	r3, [r4, #40]	@ movhi
1238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1738              		.loc 1 1238 0
 1739 00dc 628D     		ldrh	r2, [r4, #42]
 1740 00de 013A     		subs	r2, r2, #1
 1741 00e0 92B2     		uxth	r2, r2
 1742 00e2 6285     		strh	r2, [r4, #42]	@ movhi
1240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 1743              		.loc 1 1240 0
 1744 00e4 628D     		ldrh	r2, [r4, #42]
 1745 00e6 92B2     		uxth	r2, r2
 1746 00e8 002A     		cmp	r2, #0
 1747 00ea E1D0     		beq	.L167
1240:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 1748              		.loc 1 1240 0 is_stmt 0 discriminator 1
 1749 00ec 002B     		cmp	r3, #0
 1750 00ee DFD1     		bne	.L167
1243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 1751              		.loc 1 1243 0 is_stmt 1
 1752 00f0 0095     		str	r5, [sp]
 1753 00f2 0A9B     		ldr	r3, [sp, #40]
 1754 00f4 0022     		movs	r2, #0
 1755 00f6 8021     		movs	r1, #128
 1756 00f8 2046     		mov	r0, r4
 1757 00fa FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1758              	.LVL122:
 1759 00fe 0028     		cmp	r0, #0
 1760 0100 36D1     		bne	.L175
1248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 1761              		.loc 1 1248 0
 1762 0102 638D     		ldrh	r3, [r4, #42]
 1763 0104 9BB2     		uxth	r3, r3
 1764 0106 FF2B     		cmp	r3, #255
 1765 0108 C6D9     		bls	.L169
1250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 1766              		.loc 1 1250 0
 1767 010a FF22     		movs	r2, #255
 1768 010c 2285     		strh	r2, [r4, #40]	@ movhi
1251:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 1769              		.loc 1 1251 0
 1770 010e 0023     		movs	r3, #0
 1771 0110 0093     		str	r3, [sp]
 1772 0112 4FF08073 		mov	r3, #16777216
 1773 0116 3146     		mov	r1, r6
 1774 0118 2046     		mov	r0, r4
 1775 011a FFF7FEFF 		bl	I2C_TransferConfig
 1776              	.LVL123:
 1777 011e C7E7     		b	.L167
 1778              	.L178:
1263:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1779              		.loc 1 1263 0
 1780 0120 2A46     		mov	r2, r5
 1781 0122 0A99     		ldr	r1, [sp, #40]
 1782 0124 2046     		mov	r0, r4
 1783 0126 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1784              	.LVL124:
 1785 012a 0346     		mov	r3, r0
 1786 012c 10BB     		cbnz	r0, .L176
1269:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1787              		.loc 1 1269 0
 1788 012e 2268     		ldr	r2, [r4]
 1789 0130 2021     		movs	r1, #32
 1790 0132 D161     		str	r1, [r2, #28]
1272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1791              		.loc 1 1272 0
 1792 0134 2068     		ldr	r0, [r4]
 1793 0136 4268     		ldr	r2, [r0, #4]
 1794 0138 22F0FF72 		bic	r2, r2, #33423360
 1795 013c 22F48B32 		bic	r2, r2, #71168
 1796 0140 22F4FF72 		bic	r2, r2, #510
 1797 0144 22F00102 		bic	r2, r2, #1
 1798 0148 4260     		str	r2, [r0, #4]
1274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1799              		.loc 1 1274 0
 1800 014a 84F84110 		strb	r1, [r4, #65]
1275:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1801              		.loc 1 1275 0
 1802 014e 0022     		movs	r2, #0
 1803 0150 84F84220 		strb	r2, [r4, #66]
1278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1804              		.loc 1 1278 0
 1805 0154 84F84020 		strb	r2, [r4, #64]
1280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 1806              		.loc 1 1280 0
 1807 0158 00E0     		b	.L164
 1808              	.LVL125:
 1809              	.L171:
1284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 1810              		.loc 1 1284 0
 1811 015a 0223     		movs	r3, #2
 1812              	.LVL126:
 1813              	.L164:
1286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1814              		.loc 1 1286 0
 1815 015c 1846     		mov	r0, r3
 1816 015e 03B0     		add	sp, sp, #12
 1817              		.cfi_remember_state
 1818              		.cfi_def_cfa_offset 28
 1819              		@ sp needed
 1820 0160 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1821              	.LVL127:
 1822              	.L172:
 1823              		.cfi_restore_state
1191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1824              		.loc 1 1191 0
 1825 0164 0223     		movs	r3, #2
 1826              	.LVL128:
 1827 0166 F9E7     		b	.L164
 1828              	.LVL129:
 1829              	.L173:
1198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1830              		.loc 1 1198 0
 1831 0168 0123     		movs	r3, #1
 1832 016a F7E7     		b	.L164
 1833              	.L174:
1228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 1834              		.loc 1 1228 0
 1835 016c 0123     		movs	r3, #1
 1836 016e F5E7     		b	.L164
 1837              	.L175:
1245:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 1838              		.loc 1 1245 0
 1839 0170 0123     		movs	r3, #1
 1840 0172 F3E7     		b	.L164
 1841              	.L176:
1265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1842              		.loc 1 1265 0
 1843 0174 0123     		movs	r3, #1
 1844 0176 F1E7     		b	.L164
 1845              	.L180:
 1846              		.align	2
 1847              	.L179:
 1848 0178 00240080 		.word	-2147474432
 1849              		.cfi_endproc
 1850              	.LFE322:
 1852              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 1853              		.align	1
 1854              		.global	HAL_I2C_Slave_Transmit
 1855              		.syntax unified
 1856              		.thumb
 1857              		.thumb_func
 1858              		.fpu fpv4-sp-d16
 1860              	HAL_I2C_Slave_Transmit:
 1861              	.LFB323:
1298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
 1862              		.loc 1 1298 0
 1863              		.cfi_startproc
 1864              		@ args = 0, pretend = 0, frame = 0
 1865              		@ frame_needed = 0, uses_anonymous_args = 0
 1866              	.LVL130:
 1867 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1868              		.cfi_def_cfa_offset 24
 1869              		.cfi_offset 4, -24
 1870              		.cfi_offset 5, -20
 1871              		.cfi_offset 6, -16
 1872              		.cfi_offset 7, -12
 1873              		.cfi_offset 8, -8
 1874              		.cfi_offset 14, -4
 1875 0004 82B0     		sub	sp, sp, #8
 1876              		.cfi_def_cfa_offset 32
1301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 1877              		.loc 1 1301 0
 1878 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 1879 000a EDB2     		uxtb	r5, r5
 1880 000c 202D     		cmp	r5, #32
 1881 000e 40F0B680 		bne	.L193
1303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1882              		.loc 1 1303 0
 1883 0012 0029     		cmp	r1, #0
 1884 0014 50D0     		beq	.L183
1303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1885              		.loc 1 1303 0 is_stmt 0 discriminator 1
 1886 0016 002A     		cmp	r2, #0
 1887 0018 4ED0     		beq	.L183
1309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1888              		.loc 1 1309 0 is_stmt 1
 1889 001a 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 1890 001e 012C     		cmp	r4, #1
 1891 0020 00F0B280 		beq	.L194
 1892 0024 1F46     		mov	r7, r3
 1893 0026 1646     		mov	r6, r2
 1894 0028 0D46     		mov	r5, r1
 1895 002a 0446     		mov	r4, r0
1309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1896              		.loc 1 1309 0 is_stmt 0 discriminator 2
 1897 002c 0123     		movs	r3, #1
 1898              	.LVL131:
 1899 002e 80F84030 		strb	r3, [r0, #64]
1312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1900              		.loc 1 1312 0 is_stmt 1 discriminator 2
 1901 0032 FFF7FEFF 		bl	HAL_GetTick
 1902              	.LVL132:
 1903 0036 8046     		mov	r8, r0
 1904              	.LVL133:
1314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 1905              		.loc 1 1314 0 discriminator 2
 1906 0038 2123     		movs	r3, #33
 1907 003a 84F84130 		strb	r3, [r4, #65]
1315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1908              		.loc 1 1315 0 discriminator 2
 1909 003e 2023     		movs	r3, #32
 1910 0040 84F84230 		strb	r3, [r4, #66]
1316:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1911              		.loc 1 1316 0 discriminator 2
 1912 0044 0022     		movs	r2, #0
 1913 0046 6264     		str	r2, [r4, #68]
1319:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1914              		.loc 1 1319 0 discriminator 2
 1915 0048 6562     		str	r5, [r4, #36]
1320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1916              		.loc 1 1320 0 discriminator 2
 1917 004a 6685     		strh	r6, [r4, #42]	@ movhi
1321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1918              		.loc 1 1321 0 discriminator 2
 1919 004c 6263     		str	r2, [r4, #52]
1324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1920              		.loc 1 1324 0 discriminator 2
 1921 004e 2168     		ldr	r1, [r4]
 1922 0050 4B68     		ldr	r3, [r1, #4]
 1923 0052 23F40043 		bic	r3, r3, #32768
 1924 0056 4B60     		str	r3, [r1, #4]
1327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1925              		.loc 1 1327 0 discriminator 2
 1926 0058 0090     		str	r0, [sp]
 1927 005a 3B46     		mov	r3, r7
 1928 005c 0821     		movs	r1, #8
 1929 005e 2046     		mov	r0, r4
 1930              	.LVL134:
 1931 0060 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1932              	.LVL135:
 1933 0064 0028     		cmp	r0, #0
 1934 0066 2CD1     		bne	.L197
1335:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1935              		.loc 1 1335 0
 1936 0068 2368     		ldr	r3, [r4]
 1937 006a 0822     		movs	r2, #8
 1938 006c DA61     		str	r2, [r3, #28]
1338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1939              		.loc 1 1338 0
 1940 006e E368     		ldr	r3, [r4, #12]
 1941 0070 022B     		cmp	r3, #2
 1942 0072 2DD0     		beq	.L198
 1943              	.L186:
1353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1944              		.loc 1 1353 0
 1945 0074 CDF80080 		str	r8, [sp]
 1946 0078 3B46     		mov	r3, r7
 1947 007a 0022     		movs	r2, #0
 1948 007c 4FF48031 		mov	r1, #65536
 1949 0080 2046     		mov	r0, r4
 1950 0082 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1951              	.LVL136:
 1952 0086 0028     		cmp	r0, #0
 1953 0088 36D1     		bne	.L199
 1954              	.L188:
1360:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 1955              		.loc 1 1360 0
 1956 008a 638D     		ldrh	r3, [r4, #42]
 1957 008c 9BB2     		uxth	r3, r3
 1958 008e 002B     		cmp	r3, #0
 1959 0090 40D0     		beq	.L200
1363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 1960              		.loc 1 1363 0
 1961 0092 4246     		mov	r2, r8
 1962 0094 3946     		mov	r1, r7
 1963 0096 2046     		mov	r0, r4
 1964 0098 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1965              	.LVL137:
 1966 009c 0028     		cmp	r0, #0
 1967 009e 32D1     		bne	.L201
1371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1968              		.loc 1 1371 0
 1969 00a0 626A     		ldr	r2, [r4, #36]
 1970 00a2 2368     		ldr	r3, [r4]
 1971 00a4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1972 00a6 9A62     		str	r2, [r3, #40]
1374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 1973              		.loc 1 1374 0
 1974 00a8 636A     		ldr	r3, [r4, #36]
 1975 00aa 0133     		adds	r3, r3, #1
 1976 00ac 6362     		str	r3, [r4, #36]
1376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1977              		.loc 1 1376 0
 1978 00ae 638D     		ldrh	r3, [r4, #42]
 1979 00b0 013B     		subs	r3, r3, #1
 1980 00b2 9BB2     		uxth	r3, r3
 1981 00b4 6385     		strh	r3, [r4, #42]	@ movhi
 1982 00b6 E8E7     		b	.L188
 1983              	.LVL138:
 1984              	.L183:
1305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 1985              		.loc 1 1305 0
 1986 00b8 4FF40073 		mov	r3, #512
 1987              	.LVL139:
 1988 00bc 4364     		str	r3, [r0, #68]
1306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1989              		.loc 1 1306 0
 1990 00be 0123     		movs	r3, #1
 1991 00c0 5EE0     		b	.L182
 1992              	.LVL140:
 1993              	.L197:
1330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 1994              		.loc 1 1330 0
 1995 00c2 2268     		ldr	r2, [r4]
 1996 00c4 5368     		ldr	r3, [r2, #4]
 1997 00c6 43F40043 		orr	r3, r3, #32768
 1998 00ca 5360     		str	r3, [r2, #4]
1331:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 1999              		.loc 1 1331 0
 2000 00cc 0123     		movs	r3, #1
 2001 00ce 57E0     		b	.L182
 2002              	.L198:
1341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 2003              		.loc 1 1341 0
 2004 00d0 CDF80080 		str	r8, [sp]
 2005 00d4 3B46     		mov	r3, r7
 2006 00d6 0022     		movs	r2, #0
 2007 00d8 0821     		movs	r1, #8
 2008 00da 2046     		mov	r0, r4
 2009 00dc FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2010              	.LVL141:
 2011 00e0 18B9     		cbnz	r0, .L202
1349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2012              		.loc 1 1349 0
 2013 00e2 2368     		ldr	r3, [r4]
 2014 00e4 0822     		movs	r2, #8
 2015 00e6 DA61     		str	r2, [r3, #28]
 2016 00e8 C4E7     		b	.L186
 2017              	.L202:
1344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
 2018              		.loc 1 1344 0
 2019 00ea 2268     		ldr	r2, [r4]
 2020 00ec 5368     		ldr	r3, [r2, #4]
 2021 00ee 43F40043 		orr	r3, r3, #32768
 2022 00f2 5360     		str	r3, [r2, #4]
1345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 2023              		.loc 1 1345 0
 2024 00f4 0123     		movs	r3, #1
 2025 00f6 43E0     		b	.L182
 2026              	.L199:
1356:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 2027              		.loc 1 1356 0
 2028 00f8 2268     		ldr	r2, [r4]
 2029 00fa 5368     		ldr	r3, [r2, #4]
 2030 00fc 43F40043 		orr	r3, r3, #32768
 2031 0100 5360     		str	r3, [r2, #4]
1357:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2032              		.loc 1 1357 0
 2033 0102 0123     		movs	r3, #1
 2034 0104 3CE0     		b	.L182
 2035              	.L201:
1366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         return HAL_ERROR;
 2036              		.loc 1 1366 0
 2037 0106 2268     		ldr	r2, [r4]
 2038 0108 5368     		ldr	r3, [r2, #4]
 2039 010a 43F40043 		orr	r3, r3, #32768
 2040 010e 5360     		str	r3, [r2, #4]
1367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 2041              		.loc 1 1367 0
 2042 0110 0123     		movs	r3, #1
 2043 0112 35E0     		b	.L182
 2044              	.L200:
1380:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2045              		.loc 1 1380 0
 2046 0114 4246     		mov	r2, r8
 2047 0116 3946     		mov	r1, r7
 2048 0118 2046     		mov	r0, r4
 2049 011a FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2050              	.LVL142:
 2051 011e 58B1     		cbz	r0, .L191
1383:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2052              		.loc 1 1383 0
 2053 0120 2268     		ldr	r2, [r4]
 2054 0122 5368     		ldr	r3, [r2, #4]
 2055 0124 43F40043 		orr	r3, r3, #32768
 2056 0128 5360     		str	r3, [r2, #4]
1385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 2057              		.loc 1 1385 0
 2058 012a 636C     		ldr	r3, [r4, #68]
 2059 012c 042B     		cmp	r3, #4
 2060 012e 01D0     		beq	.L203
1393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 2061              		.loc 1 1393 0
 2062 0130 0123     		movs	r3, #1
 2063 0132 25E0     		b	.L182
 2064              	.L203:
1389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 2065              		.loc 1 1389 0
 2066 0134 0023     		movs	r3, #0
 2067 0136 6364     		str	r3, [r4, #68]
 2068              	.L191:
1398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2069              		.loc 1 1398 0
 2070 0138 2368     		ldr	r3, [r4]
 2071 013a 2022     		movs	r2, #32
 2072 013c DA61     		str	r2, [r3, #28]
1401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2073              		.loc 1 1401 0
 2074 013e CDF80080 		str	r8, [sp]
 2075 0142 3B46     		mov	r3, r7
 2076 0144 0122     		movs	r2, #1
 2077 0146 4FF40041 		mov	r1, #32768
 2078 014a 2046     		mov	r0, r4
 2079 014c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2080              	.LVL143:
 2081 0150 0346     		mov	r3, r0
 2082 0152 68B9     		cbnz	r0, .L204
1409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2083              		.loc 1 1409 0
 2084 0154 2168     		ldr	r1, [r4]
 2085 0156 4A68     		ldr	r2, [r1, #4]
 2086 0158 42F40042 		orr	r2, r2, #32768
 2087 015c 4A60     		str	r2, [r1, #4]
1411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2088              		.loc 1 1411 0
 2089 015e 2022     		movs	r2, #32
 2090 0160 84F84120 		strb	r2, [r4, #65]
1412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2091              		.loc 1 1412 0
 2092 0164 0022     		movs	r2, #0
 2093 0166 84F84220 		strb	r2, [r4, #66]
1415:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2094              		.loc 1 1415 0
 2095 016a 84F84020 		strb	r2, [r4, #64]
1417:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2096              		.loc 1 1417 0
 2097 016e 07E0     		b	.L182
 2098              	.L204:
1404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 2099              		.loc 1 1404 0
 2100 0170 2268     		ldr	r2, [r4]
 2101 0172 5368     		ldr	r3, [r2, #4]
 2102 0174 43F40043 		orr	r3, r3, #32768
 2103 0178 5360     		str	r3, [r2, #4]
1405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2104              		.loc 1 1405 0
 2105 017a 0123     		movs	r3, #1
 2106 017c 00E0     		b	.L182
 2107              	.LVL144:
 2108              	.L193:
1421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2109              		.loc 1 1421 0
 2110 017e 0223     		movs	r3, #2
 2111              	.LVL145:
 2112              	.L182:
1423:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2113              		.loc 1 1423 0
 2114 0180 1846     		mov	r0, r3
 2115 0182 02B0     		add	sp, sp, #8
 2116              		.cfi_remember_state
 2117              		.cfi_def_cfa_offset 24
 2118              		@ sp needed
 2119 0184 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2120              	.LVL146:
 2121              	.L194:
 2122              		.cfi_restore_state
1309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2123              		.loc 1 1309 0
 2124 0188 0223     		movs	r3, #2
 2125              	.LVL147:
 2126 018a F9E7     		b	.L182
 2127              		.cfi_endproc
 2128              	.LFE323:
 2130              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
 2131              		.align	1
 2132              		.global	HAL_I2C_Slave_Receive
 2133              		.syntax unified
 2134              		.thumb
 2135              		.thumb_func
 2136              		.fpu fpv4-sp-d16
 2138              	HAL_I2C_Slave_Receive:
 2139              	.LFB324:
1435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
 2140              		.loc 1 1435 0
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 0
 2143              		@ frame_needed = 0, uses_anonymous_args = 0
 2144              	.LVL148:
 2145 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2146              		.cfi_def_cfa_offset 24
 2147              		.cfi_offset 4, -24
 2148              		.cfi_offset 5, -20
 2149              		.cfi_offset 6, -16
 2150              		.cfi_offset 7, -12
 2151              		.cfi_offset 8, -8
 2152              		.cfi_offset 14, -4
 2153 0004 82B0     		sub	sp, sp, #8
 2154              		.cfi_def_cfa_offset 32
1438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 2155              		.loc 1 1438 0
 2156 0006 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 2157 000a EDB2     		uxtb	r5, r5
 2158 000c 202D     		cmp	r5, #32
 2159 000e 40F0A380 		bne	.L215
1440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2160              		.loc 1 1440 0
 2161 0012 69B3     		cbz	r1, .L207
1440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2162              		.loc 1 1440 0 is_stmt 0 discriminator 1
 2163 0014 62B3     		cbz	r2, .L207
1446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2164              		.loc 1 1446 0 is_stmt 1
 2165 0016 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2166 001a 012C     		cmp	r4, #1
 2167 001c 00F0A180 		beq	.L216
 2168 0020 1F46     		mov	r7, r3
 2169 0022 1646     		mov	r6, r2
 2170 0024 0D46     		mov	r5, r1
 2171 0026 0446     		mov	r4, r0
1446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2172              		.loc 1 1446 0 is_stmt 0 discriminator 2
 2173 0028 0123     		movs	r3, #1
 2174              	.LVL149:
 2175 002a 80F84030 		strb	r3, [r0, #64]
1449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2176              		.loc 1 1449 0 is_stmt 1 discriminator 2
 2177 002e FFF7FEFF 		bl	HAL_GetTick
 2178              	.LVL150:
 2179 0032 8046     		mov	r8, r0
 2180              	.LVL151:
1451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2181              		.loc 1 1451 0 discriminator 2
 2182 0034 2223     		movs	r3, #34
 2183 0036 84F84130 		strb	r3, [r4, #65]
1452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2184              		.loc 1 1452 0 discriminator 2
 2185 003a 2023     		movs	r3, #32
 2186 003c 84F84230 		strb	r3, [r4, #66]
1453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2187              		.loc 1 1453 0 discriminator 2
 2188 0040 0022     		movs	r2, #0
 2189 0042 6264     		str	r2, [r4, #68]
1456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2190              		.loc 1 1456 0 discriminator 2
 2191 0044 6562     		str	r5, [r4, #36]
1457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2192              		.loc 1 1457 0 discriminator 2
 2193 0046 6685     		strh	r6, [r4, #42]	@ movhi
1458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2194              		.loc 1 1458 0 discriminator 2
 2195 0048 6263     		str	r2, [r4, #52]
1461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2196              		.loc 1 1461 0 discriminator 2
 2197 004a 2168     		ldr	r1, [r4]
 2198 004c 4B68     		ldr	r3, [r1, #4]
 2199 004e 23F40043 		bic	r3, r3, #32768
 2200 0052 4B60     		str	r3, [r1, #4]
1464:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2201              		.loc 1 1464 0 discriminator 2
 2202 0054 0090     		str	r0, [sp]
 2203 0056 3B46     		mov	r3, r7
 2204 0058 0821     		movs	r1, #8
 2205 005a 2046     		mov	r0, r4
 2206              	.LVL152:
 2207 005c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2208              	.LVL153:
 2209 0060 58B1     		cbz	r0, .L209
1467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 2210              		.loc 1 1467 0
 2211 0062 2268     		ldr	r2, [r4]
 2212 0064 5368     		ldr	r3, [r2, #4]
 2213 0066 43F40043 		orr	r3, r3, #32768
 2214 006a 5360     		str	r3, [r2, #4]
1468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2215              		.loc 1 1468 0
 2216 006c 0123     		movs	r3, #1
 2217 006e 74E0     		b	.L206
 2218              	.LVL154:
 2219              	.L207:
1442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 2220              		.loc 1 1442 0
 2221 0070 4FF40073 		mov	r3, #512
 2222              	.LVL155:
 2223 0074 4364     		str	r3, [r0, #68]
1443:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2224              		.loc 1 1443 0
 2225 0076 0123     		movs	r3, #1
 2226 0078 6FE0     		b	.L206
 2227              	.LVL156:
 2228              	.L209:
1472:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2229              		.loc 1 1472 0
 2230 007a 2368     		ldr	r3, [r4]
 2231 007c 0822     		movs	r2, #8
 2232 007e DA61     		str	r2, [r3, #28]
1475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2233              		.loc 1 1475 0
 2234 0080 CDF80080 		str	r8, [sp]
 2235 0084 3B46     		mov	r3, r7
 2236 0086 0122     		movs	r2, #1
 2237 0088 4FF48031 		mov	r1, #65536
 2238 008c 2046     		mov	r0, r4
 2239 008e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2240              	.LVL157:
 2241 0092 88B1     		cbz	r0, .L210
1478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 2242              		.loc 1 1478 0
 2243 0094 2268     		ldr	r2, [r4]
 2244 0096 5368     		ldr	r3, [r2, #4]
 2245 0098 43F40043 		orr	r3, r3, #32768
 2246 009c 5360     		str	r3, [r2, #4]
1479:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2247              		.loc 1 1479 0
 2248 009e 0123     		movs	r3, #1
 2249 00a0 5BE0     		b	.L206
 2250              	.L211:
1506:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2251              		.loc 1 1506 0
 2252 00a2 2368     		ldr	r3, [r4]
 2253 00a4 5A6A     		ldr	r2, [r3, #36]
 2254 00a6 636A     		ldr	r3, [r4, #36]
 2255 00a8 1A70     		strb	r2, [r3]
1509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2256              		.loc 1 1509 0
 2257 00aa 636A     		ldr	r3, [r4, #36]
 2258 00ac 0133     		adds	r3, r3, #1
 2259 00ae 6362     		str	r3, [r4, #36]
1511:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2260              		.loc 1 1511 0
 2261 00b0 638D     		ldrh	r3, [r4, #42]
 2262 00b2 013B     		subs	r3, r3, #1
 2263 00b4 9BB2     		uxth	r3, r3
 2264 00b6 6385     		strh	r3, [r4, #42]	@ movhi
 2265              	.L210:
1482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2266              		.loc 1 1482 0
 2267 00b8 638D     		ldrh	r3, [r4, #42]
 2268 00ba 9BB2     		uxth	r3, r3
 2269 00bc E3B1     		cbz	r3, .L219
1485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 2270              		.loc 1 1485 0
 2271 00be 4246     		mov	r2, r8
 2272 00c0 3946     		mov	r1, r7
 2273 00c2 2046     		mov	r0, r4
 2274 00c4 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 2275              	.LVL158:
 2276 00c8 0028     		cmp	r0, #0
 2277 00ca EAD0     		beq	.L211
1488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2278              		.loc 1 1488 0
 2279 00cc 2268     		ldr	r2, [r4]
 2280 00ce 5368     		ldr	r3, [r2, #4]
 2281 00d0 43F40043 		orr	r3, r3, #32768
 2282 00d4 5360     		str	r3, [r2, #4]
1491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 2283              		.loc 1 1491 0
 2284 00d6 2368     		ldr	r3, [r4]
 2285 00d8 9A69     		ldr	r2, [r3, #24]
 2286 00da 12F0040F 		tst	r2, #4
 2287 00de 42D0     		beq	.L217
1494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2288              		.loc 1 1494 0
 2289 00e0 5A6A     		ldr	r2, [r3, #36]
 2290 00e2 636A     		ldr	r3, [r4, #36]
 2291 00e4 1A70     		strb	r2, [r3]
1497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2292              		.loc 1 1497 0
 2293 00e6 636A     		ldr	r3, [r4, #36]
 2294 00e8 0133     		adds	r3, r3, #1
 2295 00ea 6362     		str	r3, [r4, #36]
1499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 2296              		.loc 1 1499 0
 2297 00ec 638D     		ldrh	r3, [r4, #42]
 2298 00ee 013B     		subs	r3, r3, #1
 2299 00f0 9BB2     		uxth	r3, r3
 2300 00f2 6385     		strh	r3, [r4, #42]	@ movhi
1502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 2301              		.loc 1 1502 0
 2302 00f4 0123     		movs	r3, #1
 2303 00f6 30E0     		b	.L206
 2304              	.L219:
1515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2305              		.loc 1 1515 0
 2306 00f8 4246     		mov	r2, r8
 2307 00fa 3946     		mov	r1, r7
 2308 00fc 2046     		mov	r0, r4
 2309 00fe FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2310              	.LVL159:
 2311 0102 30B1     		cbz	r0, .L213
1518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 2312              		.loc 1 1518 0
 2313 0104 2268     		ldr	r2, [r4]
 2314 0106 5368     		ldr	r3, [r2, #4]
 2315 0108 43F40043 		orr	r3, r3, #32768
 2316 010c 5360     		str	r3, [r2, #4]
1519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2317              		.loc 1 1519 0
 2318 010e 0123     		movs	r3, #1
 2319 0110 23E0     		b	.L206
 2320              	.L213:
1523:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2321              		.loc 1 1523 0
 2322 0112 2368     		ldr	r3, [r4]
 2323 0114 2022     		movs	r2, #32
 2324 0116 DA61     		str	r2, [r3, #28]
1526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2325              		.loc 1 1526 0
 2326 0118 CDF80080 		str	r8, [sp]
 2327 011c 3B46     		mov	r3, r7
 2328 011e 0122     		movs	r2, #1
 2329 0120 4FF40041 		mov	r1, #32768
 2330 0124 2046     		mov	r0, r4
 2331 0126 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2332              	.LVL160:
 2333 012a 0346     		mov	r3, r0
 2334 012c 68B9     		cbnz	r0, .L220
1534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2335              		.loc 1 1534 0
 2336 012e 2168     		ldr	r1, [r4]
 2337 0130 4A68     		ldr	r2, [r1, #4]
 2338 0132 42F40042 		orr	r2, r2, #32768
 2339 0136 4A60     		str	r2, [r1, #4]
1536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2340              		.loc 1 1536 0
 2341 0138 2022     		movs	r2, #32
 2342 013a 84F84120 		strb	r2, [r4, #65]
1537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2343              		.loc 1 1537 0
 2344 013e 0022     		movs	r2, #0
 2345 0140 84F84220 		strb	r2, [r4, #66]
1540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2346              		.loc 1 1540 0
 2347 0144 84F84020 		strb	r2, [r4, #64]
1542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2348              		.loc 1 1542 0
 2349 0148 07E0     		b	.L206
 2350              	.L220:
1529:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 2351              		.loc 1 1529 0
 2352 014a 2268     		ldr	r2, [r4]
 2353 014c 5368     		ldr	r3, [r2, #4]
 2354 014e 43F40043 		orr	r3, r3, #32768
 2355 0152 5360     		str	r3, [r2, #4]
1530:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2356              		.loc 1 1530 0
 2357 0154 0123     		movs	r3, #1
 2358 0156 00E0     		b	.L206
 2359              	.LVL161:
 2360              	.L215:
1546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2361              		.loc 1 1546 0
 2362 0158 0223     		movs	r3, #2
 2363              	.LVL162:
 2364              	.L206:
1548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2365              		.loc 1 1548 0
 2366 015a 1846     		mov	r0, r3
 2367 015c 02B0     		add	sp, sp, #8
 2368              		.cfi_remember_state
 2369              		.cfi_def_cfa_offset 24
 2370              		@ sp needed
 2371 015e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2372              	.LVL163:
 2373              	.L216:
 2374              		.cfi_restore_state
1446:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2375              		.loc 1 1446 0
 2376 0162 0223     		movs	r3, #2
 2377              	.LVL164:
 2378 0164 F9E7     		b	.L206
 2379              	.LVL165:
 2380              	.L217:
1502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 2381              		.loc 1 1502 0
 2382 0166 0123     		movs	r3, #1
 2383 0168 F7E7     		b	.L206
 2384              		.cfi_endproc
 2385              	.LFE324:
 2387              		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 2388              		.align	1
 2389              		.global	HAL_I2C_Master_Transmit_IT
 2390              		.syntax unified
 2391              		.thumb
 2392              		.thumb_func
 2393              		.fpu fpv4-sp-d16
 2395              	HAL_I2C_Master_Transmit_IT:
 2396              	.LFB325:
1562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
 2397              		.loc 1 1562 0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 0
 2400              		@ frame_needed = 0, uses_anonymous_args = 0
 2401              	.LVL166:
 2402 0000 30B5     		push	{r4, r5, lr}
 2403              		.cfi_def_cfa_offset 12
 2404              		.cfi_offset 4, -12
 2405              		.cfi_offset 5, -8
 2406              		.cfi_offset 14, -4
 2407 0002 83B0     		sub	sp, sp, #12
 2408              		.cfi_def_cfa_offset 24
1565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 2409              		.loc 1 1565 0
 2410 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2411 0008 E4B2     		uxtb	r4, r4
 2412 000a 202C     		cmp	r4, #32
 2413 000c 37D1     		bne	.L225
1567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2414              		.loc 1 1567 0
 2415 000e 0468     		ldr	r4, [r0]
 2416 0010 A469     		ldr	r4, [r4, #24]
 2417 0012 14F4004F 		tst	r4, #32768
 2418 0016 35D1     		bne	.L226
1573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2419              		.loc 1 1573 0
 2420 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2421 001c 012C     		cmp	r4, #1
 2422 001e 33D0     		beq	.L227
1573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2423              		.loc 1 1573 0 is_stmt 0 discriminator 2
 2424 0020 0124     		movs	r4, #1
 2425 0022 80F84040 		strb	r4, [r0, #64]
1575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2426              		.loc 1 1575 0 is_stmt 1 discriminator 2
 2427 0026 2124     		movs	r4, #33
 2428 0028 80F84140 		strb	r4, [r0, #65]
1576:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2429              		.loc 1 1576 0 discriminator 2
 2430 002c 1024     		movs	r4, #16
 2431 002e 80F84240 		strb	r4, [r0, #66]
1577:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2432              		.loc 1 1577 0 discriminator 2
 2433 0032 0024     		movs	r4, #0
 2434 0034 4464     		str	r4, [r0, #68]
1580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2435              		.loc 1 1580 0 discriminator 2
 2436 0036 4262     		str	r2, [r0, #36]
1581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2437              		.loc 1 1581 0 discriminator 2
 2438 0038 4385     		strh	r3, [r0, #42]	@ movhi
1582:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2439              		.loc 1 1582 0 discriminator 2
 2440 003a 144B     		ldr	r3, .L229
 2441              	.LVL167:
 2442 003c C362     		str	r3, [r0, #44]
 2443              	.LVL168:
1583:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2444              		.loc 1 1583 0 discriminator 2
 2445 003e 144B     		ldr	r3, .L229+4
 2446 0040 4363     		str	r3, [r0, #52]
1585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2447              		.loc 1 1585 0 discriminator 2
 2448 0042 438D     		ldrh	r3, [r0, #42]
 2449 0044 9BB2     		uxth	r3, r3
 2450 0046 FF2B     		cmp	r3, #255
 2451 0048 14D9     		bls	.L223
1587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2452              		.loc 1 1587 0
 2453 004a FF23     		movs	r3, #255
 2454 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2455              	.LVL169:
1588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2456              		.loc 1 1588 0
 2457 004e 4FF08073 		mov	r3, #16777216
 2458              	.LVL170:
 2459              	.L224:
 2460 0052 0446     		mov	r4, r0
 2461              	.LVL171:
1598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2462              		.loc 1 1598 0
 2463 0054 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2464              	.LVL172:
 2465 0058 0E48     		ldr	r0, .L229+8
 2466              	.LVL173:
 2467 005a 0090     		str	r0, [sp]
 2468              	.LVL174:
 2469 005c 2046     		mov	r0, r4
 2470 005e FFF7FEFF 		bl	I2C_TransferConfig
 2471              	.LVL175:
1601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2472              		.loc 1 1601 0
 2473 0062 0025     		movs	r5, #0
 2474 0064 84F84050 		strb	r5, [r4, #64]
1610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2475              		.loc 1 1610 0
 2476 0068 0121     		movs	r1, #1
 2477 006a 2046     		mov	r0, r4
 2478 006c FFF7FEFF 		bl	I2C_Enable_IRQ
 2479              	.LVL176:
1612:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2480              		.loc 1 1612 0
 2481 0070 2846     		mov	r0, r5
 2482 0072 05E0     		b	.L222
 2483              	.LVL177:
 2484              	.L223:
1592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2485              		.loc 1 1592 0
 2486 0074 438D     		ldrh	r3, [r0, #42]
 2487 0076 0385     		strh	r3, [r0, #40]	@ movhi
 2488              	.LVL178:
1593:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2489              		.loc 1 1593 0
 2490 0078 4FF00073 		mov	r3, #33554432
 2491 007c E9E7     		b	.L224
 2492              	.LVL179:
 2493              	.L225:
1616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2494              		.loc 1 1616 0
 2495 007e 0220     		movs	r0, #2
 2496              	.LVL180:
 2497              	.L222:
1618:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2498              		.loc 1 1618 0
 2499 0080 03B0     		add	sp, sp, #12
 2500              		.cfi_remember_state
 2501              		.cfi_def_cfa_offset 12
 2502              		@ sp needed
 2503 0082 30BD     		pop	{r4, r5, pc}
 2504              	.LVL181:
 2505              	.L226:
 2506              		.cfi_restore_state
1569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2507              		.loc 1 1569 0
 2508 0084 0220     		movs	r0, #2
 2509              	.LVL182:
 2510 0086 FBE7     		b	.L222
 2511              	.LVL183:
 2512              	.L227:
1573:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2513              		.loc 1 1573 0
 2514 0088 0220     		movs	r0, #2
 2515              	.LVL184:
 2516 008a F9E7     		b	.L222
 2517              	.L230:
 2518              		.align	2
 2519              	.L229:
 2520 008c 0000FFFF 		.word	-65536
 2521 0090 00000000 		.word	I2C_Master_ISR_IT
 2522 0094 00200080 		.word	-2147475456
 2523              		.cfi_endproc
 2524              	.LFE325:
 2526              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 2527              		.align	1
 2528              		.global	HAL_I2C_Master_Receive_IT
 2529              		.syntax unified
 2530              		.thumb
 2531              		.thumb_func
 2532              		.fpu fpv4-sp-d16
 2534              	HAL_I2C_Master_Receive_IT:
 2535              	.LFB326:
1631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
 2536              		.loc 1 1631 0
 2537              		.cfi_startproc
 2538              		@ args = 0, pretend = 0, frame = 0
 2539              		@ frame_needed = 0, uses_anonymous_args = 0
 2540              	.LVL185:
 2541 0000 30B5     		push	{r4, r5, lr}
 2542              		.cfi_def_cfa_offset 12
 2543              		.cfi_offset 4, -12
 2544              		.cfi_offset 5, -8
 2545              		.cfi_offset 14, -4
 2546 0002 83B0     		sub	sp, sp, #12
 2547              		.cfi_def_cfa_offset 24
1634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 2548              		.loc 1 1634 0
 2549 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2550 0008 E4B2     		uxtb	r4, r4
 2551 000a 202C     		cmp	r4, #32
 2552 000c 37D1     		bne	.L235
1636:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2553              		.loc 1 1636 0
 2554 000e 0468     		ldr	r4, [r0]
 2555 0010 A469     		ldr	r4, [r4, #24]
 2556 0012 14F4004F 		tst	r4, #32768
 2557 0016 35D1     		bne	.L236
1642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2558              		.loc 1 1642 0
 2559 0018 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2560 001c 012C     		cmp	r4, #1
 2561 001e 33D0     		beq	.L237
1642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2562              		.loc 1 1642 0 is_stmt 0 discriminator 2
 2563 0020 0124     		movs	r4, #1
 2564 0022 80F84040 		strb	r4, [r0, #64]
1644:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2565              		.loc 1 1644 0 is_stmt 1 discriminator 2
 2566 0026 2224     		movs	r4, #34
 2567 0028 80F84140 		strb	r4, [r0, #65]
1645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2568              		.loc 1 1645 0 discriminator 2
 2569 002c 1024     		movs	r4, #16
 2570 002e 80F84240 		strb	r4, [r0, #66]
1646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2571              		.loc 1 1646 0 discriminator 2
 2572 0032 0024     		movs	r4, #0
 2573 0034 4464     		str	r4, [r0, #68]
1649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2574              		.loc 1 1649 0 discriminator 2
 2575 0036 4262     		str	r2, [r0, #36]
1650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2576              		.loc 1 1650 0 discriminator 2
 2577 0038 4385     		strh	r3, [r0, #42]	@ movhi
1651:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2578              		.loc 1 1651 0 discriminator 2
 2579 003a 144B     		ldr	r3, .L239
 2580              	.LVL186:
 2581 003c C362     		str	r3, [r0, #44]
 2582              	.LVL187:
1652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2583              		.loc 1 1652 0 discriminator 2
 2584 003e 144B     		ldr	r3, .L239+4
 2585 0040 4363     		str	r3, [r0, #52]
1654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2586              		.loc 1 1654 0 discriminator 2
 2587 0042 438D     		ldrh	r3, [r0, #42]
 2588 0044 9BB2     		uxth	r3, r3
 2589 0046 FF2B     		cmp	r3, #255
 2590 0048 14D9     		bls	.L233
1656:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2591              		.loc 1 1656 0
 2592 004a FF23     		movs	r3, #255
 2593 004c 0385     		strh	r3, [r0, #40]	@ movhi
 2594              	.LVL188:
1657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2595              		.loc 1 1657 0
 2596 004e 4FF08073 		mov	r3, #16777216
 2597              	.LVL189:
 2598              	.L234:
 2599 0052 0446     		mov	r4, r0
 2600              	.LVL190:
1667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2601              		.loc 1 1667 0
 2602 0054 90F82820 		ldrb	r2, [r0, #40]	@ zero_extendqisi2
 2603              	.LVL191:
 2604 0058 0E48     		ldr	r0, .L239+8
 2605              	.LVL192:
 2606 005a 0090     		str	r0, [sp]
 2607              	.LVL193:
 2608 005c 2046     		mov	r0, r4
 2609 005e FFF7FEFF 		bl	I2C_TransferConfig
 2610              	.LVL194:
1670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2611              		.loc 1 1670 0
 2612 0062 0025     		movs	r5, #0
 2613 0064 84F84050 		strb	r5, [r4, #64]
1679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2614              		.loc 1 1679 0
 2615 0068 0221     		movs	r1, #2
 2616 006a 2046     		mov	r0, r4
 2617 006c FFF7FEFF 		bl	I2C_Enable_IRQ
 2618              	.LVL195:
1681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2619              		.loc 1 1681 0
 2620 0070 2846     		mov	r0, r5
 2621 0072 05E0     		b	.L232
 2622              	.LVL196:
 2623              	.L233:
1661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2624              		.loc 1 1661 0
 2625 0074 438D     		ldrh	r3, [r0, #42]
 2626 0076 0385     		strh	r3, [r0, #40]	@ movhi
 2627              	.LVL197:
1662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2628              		.loc 1 1662 0
 2629 0078 4FF00073 		mov	r3, #33554432
 2630 007c E9E7     		b	.L234
 2631              	.LVL198:
 2632              	.L235:
1685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2633              		.loc 1 1685 0
 2634 007e 0220     		movs	r0, #2
 2635              	.LVL199:
 2636              	.L232:
1687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2637              		.loc 1 1687 0
 2638 0080 03B0     		add	sp, sp, #12
 2639              		.cfi_remember_state
 2640              		.cfi_def_cfa_offset 12
 2641              		@ sp needed
 2642 0082 30BD     		pop	{r4, r5, pc}
 2643              	.LVL200:
 2644              	.L236:
 2645              		.cfi_restore_state
1638:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2646              		.loc 1 1638 0
 2647 0084 0220     		movs	r0, #2
 2648              	.LVL201:
 2649 0086 FBE7     		b	.L232
 2650              	.LVL202:
 2651              	.L237:
1642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2652              		.loc 1 1642 0
 2653 0088 0220     		movs	r0, #2
 2654              	.LVL203:
 2655 008a F9E7     		b	.L232
 2656              	.L240:
 2657              		.align	2
 2658              	.L239:
 2659 008c 0000FFFF 		.word	-65536
 2660 0090 00000000 		.word	I2C_Master_ISR_IT
 2661 0094 00240080 		.word	-2147474432
 2662              		.cfi_endproc
 2663              	.LFE326:
 2665              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 2666              		.align	1
 2667              		.global	HAL_I2C_Slave_Transmit_IT
 2668              		.syntax unified
 2669              		.thumb
 2670              		.thumb_func
 2671              		.fpu fpv4-sp-d16
 2673              	HAL_I2C_Slave_Transmit_IT:
 2674              	.LFB327:
1698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2675              		.loc 1 1698 0
 2676              		.cfi_startproc
 2677              		@ args = 0, pretend = 0, frame = 0
 2678              		@ frame_needed = 0, uses_anonymous_args = 0
 2679              	.LVL204:
 2680 0000 38B5     		push	{r3, r4, r5, lr}
 2681              		.cfi_def_cfa_offset 16
 2682              		.cfi_offset 3, -16
 2683              		.cfi_offset 4, -12
 2684              		.cfi_offset 5, -8
 2685              		.cfi_offset 14, -4
1699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 2686              		.loc 1 1699 0
 2687 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2688 0006 DBB2     		uxtb	r3, r3
 2689 0008 202B     		cmp	r3, #32
 2690 000a 23D1     		bne	.L243
1702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2691              		.loc 1 1702 0
 2692 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2693 0010 012B     		cmp	r3, #1
 2694 0012 21D0     		beq	.L244
1702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2695              		.loc 1 1702 0 is_stmt 0 discriminator 2
 2696 0014 0123     		movs	r3, #1
 2697 0016 80F84030 		strb	r3, [r0, #64]
1704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2698              		.loc 1 1704 0 is_stmt 1 discriminator 2
 2699 001a 2123     		movs	r3, #33
 2700 001c 80F84130 		strb	r3, [r0, #65]
1705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2701              		.loc 1 1705 0 discriminator 2
 2702 0020 2023     		movs	r3, #32
 2703 0022 80F84230 		strb	r3, [r0, #66]
1706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2704              		.loc 1 1706 0 discriminator 2
 2705 0026 0024     		movs	r4, #0
 2706 0028 4464     		str	r4, [r0, #68]
1709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2707              		.loc 1 1709 0 discriminator 2
 2708 002a 0568     		ldr	r5, [r0]
 2709 002c 6B68     		ldr	r3, [r5, #4]
 2710 002e 23F40043 		bic	r3, r3, #32768
 2711 0032 6B60     		str	r3, [r5, #4]
1712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2712              		.loc 1 1712 0 discriminator 2
 2713 0034 4162     		str	r1, [r0, #36]
1713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2714              		.loc 1 1713 0 discriminator 2
 2715 0036 4285     		strh	r2, [r0, #42]	@ movhi
1714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2716              		.loc 1 1714 0 discriminator 2
 2717 0038 438D     		ldrh	r3, [r0, #42]
 2718 003a 0385     		strh	r3, [r0, #40]	@ movhi
1715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2719              		.loc 1 1715 0 discriminator 2
 2720 003c 074B     		ldr	r3, .L246
 2721 003e C362     		str	r3, [r0, #44]
1716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2722              		.loc 1 1716 0 discriminator 2
 2723 0040 074B     		ldr	r3, .L246+4
 2724 0042 4363     		str	r3, [r0, #52]
1719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2725              		.loc 1 1719 0 discriminator 2
 2726 0044 80F84040 		strb	r4, [r0, #64]
1728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2727              		.loc 1 1728 0 discriminator 2
 2728 0048 48F20101 		movw	r1, #32769
 2729              	.LVL205:
 2730 004c FFF7FEFF 		bl	I2C_Enable_IRQ
 2731              	.LVL206:
1730:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2732              		.loc 1 1730 0 discriminator 2
 2733 0050 2046     		mov	r0, r4
 2734 0052 00E0     		b	.L242
 2735              	.LVL207:
 2736              	.L243:
1734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2737              		.loc 1 1734 0
 2738 0054 0220     		movs	r0, #2
 2739              	.LVL208:
 2740              	.L242:
1736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2741              		.loc 1 1736 0
 2742 0056 38BD     		pop	{r3, r4, r5, pc}
 2743              	.LVL209:
 2744              	.L244:
1702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2745              		.loc 1 1702 0
 2746 0058 0220     		movs	r0, #2
 2747              	.LVL210:
 2748 005a FCE7     		b	.L242
 2749              	.L247:
 2750              		.align	2
 2751              	.L246:
 2752 005c 0000FFFF 		.word	-65536
 2753 0060 00000000 		.word	I2C_Slave_ISR_IT
 2754              		.cfi_endproc
 2755              	.LFE327:
 2757              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
 2758              		.align	1
 2759              		.global	HAL_I2C_Slave_Receive_IT
 2760              		.syntax unified
 2761              		.thumb
 2762              		.thumb_func
 2763              		.fpu fpv4-sp-d16
 2765              	HAL_I2C_Slave_Receive_IT:
 2766              	.LFB328:
1747:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 2767              		.loc 1 1747 0
 2768              		.cfi_startproc
 2769              		@ args = 0, pretend = 0, frame = 0
 2770              		@ frame_needed = 0, uses_anonymous_args = 0
 2771              	.LVL211:
 2772 0000 38B5     		push	{r3, r4, r5, lr}
 2773              		.cfi_def_cfa_offset 16
 2774              		.cfi_offset 3, -16
 2775              		.cfi_offset 4, -12
 2776              		.cfi_offset 5, -8
 2777              		.cfi_offset 14, -4
1748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 2778              		.loc 1 1748 0
 2779 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2780 0006 DBB2     		uxtb	r3, r3
 2781 0008 202B     		cmp	r3, #32
 2782 000a 23D1     		bne	.L250
1751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2783              		.loc 1 1751 0
 2784 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2785 0010 012B     		cmp	r3, #1
 2786 0012 21D0     		beq	.L251
1751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2787              		.loc 1 1751 0 is_stmt 0 discriminator 2
 2788 0014 0123     		movs	r3, #1
 2789 0016 80F84030 		strb	r3, [r0, #64]
1753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2790              		.loc 1 1753 0 is_stmt 1 discriminator 2
 2791 001a 2223     		movs	r3, #34
 2792 001c 80F84130 		strb	r3, [r0, #65]
1754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2793              		.loc 1 1754 0 discriminator 2
 2794 0020 2023     		movs	r3, #32
 2795 0022 80F84230 		strb	r3, [r0, #66]
1755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2796              		.loc 1 1755 0 discriminator 2
 2797 0026 0024     		movs	r4, #0
 2798 0028 4464     		str	r4, [r0, #68]
1758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2799              		.loc 1 1758 0 discriminator 2
 2800 002a 0568     		ldr	r5, [r0]
 2801 002c 6B68     		ldr	r3, [r5, #4]
 2802 002e 23F40043 		bic	r3, r3, #32768
 2803 0032 6B60     		str	r3, [r5, #4]
1761:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2804              		.loc 1 1761 0 discriminator 2
 2805 0034 4162     		str	r1, [r0, #36]
1762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2806              		.loc 1 1762 0 discriminator 2
 2807 0036 4285     		strh	r2, [r0, #42]	@ movhi
1763:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2808              		.loc 1 1763 0 discriminator 2
 2809 0038 438D     		ldrh	r3, [r0, #42]
 2810 003a 0385     		strh	r3, [r0, #40]	@ movhi
1764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2811              		.loc 1 1764 0 discriminator 2
 2812 003c 074B     		ldr	r3, .L253
 2813 003e C362     		str	r3, [r0, #44]
1765:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2814              		.loc 1 1765 0 discriminator 2
 2815 0040 074B     		ldr	r3, .L253+4
 2816 0042 4363     		str	r3, [r0, #52]
1768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2817              		.loc 1 1768 0 discriminator 2
 2818 0044 80F84040 		strb	r4, [r0, #64]
1777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2819              		.loc 1 1777 0 discriminator 2
 2820 0048 48F20201 		movw	r1, #32770
 2821              	.LVL212:
 2822 004c FFF7FEFF 		bl	I2C_Enable_IRQ
 2823              	.LVL213:
1779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2824              		.loc 1 1779 0 discriminator 2
 2825 0050 2046     		mov	r0, r4
 2826 0052 00E0     		b	.L249
 2827              	.LVL214:
 2828              	.L250:
1783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 2829              		.loc 1 1783 0
 2830 0054 0220     		movs	r0, #2
 2831              	.LVL215:
 2832              	.L249:
1785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2833              		.loc 1 1785 0
 2834 0056 38BD     		pop	{r3, r4, r5, pc}
 2835              	.LVL216:
 2836              	.L251:
1751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2837              		.loc 1 1751 0
 2838 0058 0220     		movs	r0, #2
 2839              	.LVL217:
 2840 005a FCE7     		b	.L249
 2841              	.L254:
 2842              		.align	2
 2843              	.L253:
 2844 005c 0000FFFF 		.word	-65536
 2845 0060 00000000 		.word	I2C_Slave_ISR_IT
 2846              		.cfi_endproc
 2847              	.LFE328:
 2849              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
 2850              		.align	1
 2851              		.global	HAL_I2C_Master_Transmit_DMA
 2852              		.syntax unified
 2853              		.thumb
 2854              		.thumb_func
 2855              		.fpu fpv4-sp-d16
 2857              	HAL_I2C_Master_Transmit_DMA:
 2858              	.LFB329:
1799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
 2859              		.loc 1 1799 0
 2860              		.cfi_startproc
 2861              		@ args = 0, pretend = 0, frame = 0
 2862              		@ frame_needed = 0, uses_anonymous_args = 0
 2863              	.LVL218:
 2864 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2865              		.cfi_def_cfa_offset 20
 2866              		.cfi_offset 4, -20
 2867              		.cfi_offset 5, -16
 2868              		.cfi_offset 6, -12
 2869              		.cfi_offset 7, -8
 2870              		.cfi_offset 14, -4
 2871 0002 83B0     		sub	sp, sp, #12
 2872              		.cfi_def_cfa_offset 32
1803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 2873              		.loc 1 1803 0
 2874 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 2875 0008 E4B2     		uxtb	r4, r4
 2876 000a 202C     		cmp	r4, #32
 2877 000c 40F08C80 		bne	.L263
1805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2878              		.loc 1 1805 0
 2879 0010 0468     		ldr	r4, [r0]
 2880 0012 A469     		ldr	r4, [r4, #24]
 2881 0014 14F4004F 		tst	r4, #32768
 2882 0018 40F08A80 		bne	.L264
1811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2883              		.loc 1 1811 0
 2884 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 2885 0020 012C     		cmp	r4, #1
 2886 0022 00F08780 		beq	.L265
1811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2887              		.loc 1 1811 0 is_stmt 0 discriminator 2
 2888 0026 0124     		movs	r4, #1
 2889 0028 80F84040 		strb	r4, [r0, #64]
1813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2890              		.loc 1 1813 0 is_stmt 1 discriminator 2
 2891 002c 2124     		movs	r4, #33
 2892 002e 80F84140 		strb	r4, [r0, #65]
1814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2893              		.loc 1 1814 0 discriminator 2
 2894 0032 1024     		movs	r4, #16
 2895 0034 80F84240 		strb	r4, [r0, #66]
1815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2896              		.loc 1 1815 0 discriminator 2
 2897 0038 0024     		movs	r4, #0
 2898 003a 4464     		str	r4, [r0, #68]
1818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2899              		.loc 1 1818 0 discriminator 2
 2900 003c 4262     		str	r2, [r0, #36]
1819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2901              		.loc 1 1819 0 discriminator 2
 2902 003e 4385     		strh	r3, [r0, #42]	@ movhi
1820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 2903              		.loc 1 1820 0 discriminator 2
 2904 0040 3D4B     		ldr	r3, .L269
 2905              	.LVL219:
 2906 0042 C362     		str	r3, [r0, #44]
 2907              	.LVL220:
1821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2908              		.loc 1 1821 0 discriminator 2
 2909 0044 3D4B     		ldr	r3, .L269+4
 2910 0046 4363     		str	r3, [r0, #52]
1823:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2911              		.loc 1 1823 0 discriminator 2
 2912 0048 438D     		ldrh	r3, [r0, #42]
 2913 004a 9BB2     		uxth	r3, r3
 2914 004c FF2B     		cmp	r3, #255
 2915 004e 2CD9     		bls	.L257
1825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2916              		.loc 1 1825 0
 2917 0050 FF23     		movs	r3, #255
 2918 0052 0385     		strh	r3, [r0, #40]	@ movhi
 2919              	.LVL221:
1826:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2920              		.loc 1 1826 0
 2921 0054 4FF08076 		mov	r6, #16777216
 2922              	.LVL222:
 2923              	.L258:
 2924 0058 1546     		mov	r5, r2
 2925 005a 0F46     		mov	r7, r1
 2926 005c 0446     		mov	r4, r0
 2927              	.LVL223:
1834:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 2928              		.loc 1 1834 0
 2929 005e 028D     		ldrh	r2, [r0, #40]
 2930              	.LVL224:
 2931 0060 002A     		cmp	r2, #0
 2932 0062 50D0     		beq	.L259
 2933              	.LVL225:
1836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 2934              		.loc 1 1836 0
 2935 0064 836B     		ldr	r3, [r0, #56]
 2936 0066 2BB3     		cbz	r3, .L260
1839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2937              		.loc 1 1839 0
 2938 0068 354A     		ldr	r2, .L269+8
 2939 006a DA62     		str	r2, [r3, #44]
1842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2940              		.loc 1 1842 0
 2941 006c 836B     		ldr	r3, [r0, #56]
 2942 006e 354A     		ldr	r2, .L269+12
 2943 0070 5A63     		str	r2, [r3, #52]
1845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 2944              		.loc 1 1845 0
 2945 0072 826B     		ldr	r2, [r0, #56]
 2946 0074 0023     		movs	r3, #0
 2947 0076 1363     		str	r3, [r2, #48]
1846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2948              		.loc 1 1846 0
 2949 0078 826B     		ldr	r2, [r0, #56]
 2950 007a 9363     		str	r3, [r2, #56]
1849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 2951              		.loc 1 1849 0
 2952 007c 0268     		ldr	r2, [r0]
 2953 007e 038D     		ldrh	r3, [r0, #40]
 2954 0080 2832     		adds	r2, r2, #40
 2955 0082 2946     		mov	r1, r5
 2956              	.LVL226:
 2957 0084 806B     		ldr	r0, [r0, #56]
 2958              	.LVL227:
 2959 0086 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2960              	.LVL228:
1866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 2961              		.loc 1 1866 0
 2962 008a 0546     		mov	r5, r0
 2963              	.LVL229:
 2964 008c 00B3     		cbz	r0, .L268
1890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 2965              		.loc 1 1890 0
 2966 008e 2023     		movs	r3, #32
 2967 0090 84F84130 		strb	r3, [r4, #65]
1891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2968              		.loc 1 1891 0
 2969 0094 0022     		movs	r2, #0
 2970 0096 84F84220 		strb	r2, [r4, #66]
1894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2971              		.loc 1 1894 0
 2972 009a 636C     		ldr	r3, [r4, #68]
 2973 009c 43F01003 		orr	r3, r3, #16
 2974 00a0 6364     		str	r3, [r4, #68]
1897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2975              		.loc 1 1897 0
 2976 00a2 84F84020 		strb	r2, [r4, #64]
1899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 2977              		.loc 1 1899 0
 2978 00a6 0125     		movs	r5, #1
 2979 00a8 3FE0     		b	.L256
 2980              	.LVL230:
 2981              	.L257:
1830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2982              		.loc 1 1830 0
 2983 00aa 438D     		ldrh	r3, [r0, #42]
 2984 00ac 0385     		strh	r3, [r0, #40]	@ movhi
 2985              	.LVL231:
1831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 2986              		.loc 1 1831 0
 2987 00ae 4FF00076 		mov	r6, #33554432
 2988 00b2 D1E7     		b	.L258
 2989              	.LVL232:
 2990              	.L260:
1854:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 2991              		.loc 1 1854 0
 2992 00b4 2023     		movs	r3, #32
 2993 00b6 80F84130 		strb	r3, [r0, #65]
1855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2994              		.loc 1 1855 0
 2995 00ba 0022     		movs	r2, #0
 2996 00bc 80F84220 		strb	r2, [r0, #66]
1858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 2997              		.loc 1 1858 0
 2998 00c0 436C     		ldr	r3, [r0, #68]
 2999 00c2 43F08003 		orr	r3, r3, #128
 3000 00c6 4364     		str	r3, [r0, #68]
1861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3001              		.loc 1 1861 0
 3002 00c8 80F84020 		strb	r2, [r0, #64]
1863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 3003              		.loc 1 1863 0
 3004 00cc 0125     		movs	r5, #1
 3005              	.LVL233:
 3006 00ce 2CE0     		b	.L256
 3007              	.LVL234:
 3008              	.L268:
1870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3009              		.loc 1 1870 0
 3010 00d0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 3011 00d4 1C4B     		ldr	r3, .L269+16
 3012 00d6 0093     		str	r3, [sp]
 3013 00d8 3346     		mov	r3, r6
 3014 00da 3946     		mov	r1, r7
 3015 00dc 2046     		mov	r0, r4
 3016              	.LVL235:
 3017 00de FFF7FEFF 		bl	I2C_TransferConfig
 3018              	.LVL236:
1873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3019              		.loc 1 1873 0
 3020 00e2 638D     		ldrh	r3, [r4, #42]
 3021 00e4 228D     		ldrh	r2, [r4, #40]
 3022 00e6 9B1A     		subs	r3, r3, r2
 3023 00e8 9BB2     		uxth	r3, r3
 3024 00ea 6385     		strh	r3, [r4, #42]	@ movhi
1876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3025              		.loc 1 1876 0
 3026 00ec 0023     		movs	r3, #0
 3027 00ee 84F84030 		strb	r3, [r4, #64]
1882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3028              		.loc 1 1882 0
 3029 00f2 1021     		movs	r1, #16
 3030 00f4 2046     		mov	r0, r4
 3031 00f6 FFF7FEFF 		bl	I2C_Enable_IRQ
 3032              	.LVL237:
1885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 3033              		.loc 1 1885 0
 3034 00fa 2268     		ldr	r2, [r4]
 3035 00fc 1368     		ldr	r3, [r2]
 3036 00fe 43F48043 		orr	r3, r3, #16384
 3037 0102 1360     		str	r3, [r2]
 3038 0104 11E0     		b	.L256
 3039              	.LVL238:
 3040              	.L259:
1905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3041              		.loc 1 1905 0
 3042 0106 114B     		ldr	r3, .L269+20
 3043 0108 4363     		str	r3, [r0, #52]
1909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3044              		.loc 1 1909 0
 3045 010a 0F4B     		ldr	r3, .L269+16
 3046 010c 0093     		str	r3, [sp]
 3047 010e 4FF00073 		mov	r3, #33554432
 3048 0112 D2B2     		uxtb	r2, r2
 3049 0114 FFF7FEFF 		bl	I2C_TransferConfig
 3050              	.LVL239:
1912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3051              		.loc 1 1912 0
 3052 0118 0025     		movs	r5, #0
 3053              	.LVL240:
 3054 011a 84F84050 		strb	r5, [r4, #64]
1920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3055              		.loc 1 1920 0
 3056 011e 0121     		movs	r1, #1
 3057 0120 2046     		mov	r0, r4
 3058 0122 FFF7FEFF 		bl	I2C_Enable_IRQ
 3059              	.LVL241:
 3060 0126 00E0     		b	.L256
 3061              	.LVL242:
 3062              	.L263:
1927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 3063              		.loc 1 1927 0
 3064 0128 0225     		movs	r5, #2
 3065              	.LVL243:
 3066              	.L256:
1929:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3067              		.loc 1 1929 0
 3068 012a 2846     		mov	r0, r5
 3069 012c 03B0     		add	sp, sp, #12
 3070              		.cfi_remember_state
 3071              		.cfi_def_cfa_offset 20
 3072              		@ sp needed
 3073 012e F0BD     		pop	{r4, r5, r6, r7, pc}
 3074              	.LVL244:
 3075              	.L264:
 3076              		.cfi_restore_state
1807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3077              		.loc 1 1807 0
 3078 0130 0225     		movs	r5, #2
 3079 0132 FAE7     		b	.L256
 3080              	.L265:
1811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3081              		.loc 1 1811 0
 3082 0134 0225     		movs	r5, #2
 3083 0136 F8E7     		b	.L256
 3084              	.L270:
 3085              		.align	2
 3086              	.L269:
 3087 0138 0000FFFF 		.word	-65536
 3088 013c 00000000 		.word	I2C_Master_ISR_DMA
 3089 0140 00000000 		.word	I2C_DMAMasterTransmitCplt
 3090 0144 00000000 		.word	I2C_DMAError
 3091 0148 00200080 		.word	-2147475456
 3092 014c 00000000 		.word	I2C_Master_ISR_IT
 3093              		.cfi_endproc
 3094              	.LFE329:
 3096              		.section	.text.HAL_I2C_Master_Receive_DMA,"ax",%progbits
 3097              		.align	1
 3098              		.global	HAL_I2C_Master_Receive_DMA
 3099              		.syntax unified
 3100              		.thumb
 3101              		.thumb_func
 3102              		.fpu fpv4-sp-d16
 3104              	HAL_I2C_Master_Receive_DMA:
 3105              	.LFB330:
1943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
 3106              		.loc 1 1943 0
 3107              		.cfi_startproc
 3108              		@ args = 0, pretend = 0, frame = 0
 3109              		@ frame_needed = 0, uses_anonymous_args = 0
 3110              	.LVL245:
 3111 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3112              		.cfi_def_cfa_offset 20
 3113              		.cfi_offset 4, -20
 3114              		.cfi_offset 5, -16
 3115              		.cfi_offset 6, -12
 3116              		.cfi_offset 7, -8
 3117              		.cfi_offset 14, -4
 3118 0002 83B0     		sub	sp, sp, #12
 3119              		.cfi_def_cfa_offset 32
1947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 3120              		.loc 1 1947 0
 3121 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 3122 0008 E4B2     		uxtb	r4, r4
 3123 000a 202C     		cmp	r4, #32
 3124 000c 40F08B80 		bne	.L279
1949:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3125              		.loc 1 1949 0
 3126 0010 0468     		ldr	r4, [r0]
 3127 0012 A469     		ldr	r4, [r4, #24]
 3128 0014 14F4004F 		tst	r4, #32768
 3129 0018 40F08980 		bne	.L280
1955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3130              		.loc 1 1955 0
 3131 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3132 0020 012C     		cmp	r4, #1
 3133 0022 00F08680 		beq	.L281
1955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3134              		.loc 1 1955 0 is_stmt 0 discriminator 2
 3135 0026 0124     		movs	r4, #1
 3136 0028 80F84040 		strb	r4, [r0, #64]
1957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3137              		.loc 1 1957 0 is_stmt 1 discriminator 2
 3138 002c 2224     		movs	r4, #34
 3139 002e 80F84140 		strb	r4, [r0, #65]
1958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3140              		.loc 1 1958 0 discriminator 2
 3141 0032 1024     		movs	r4, #16
 3142 0034 80F84240 		strb	r4, [r0, #66]
1959:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3143              		.loc 1 1959 0 discriminator 2
 3144 0038 0024     		movs	r4, #0
 3145 003a 4464     		str	r4, [r0, #68]
1962:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3146              		.loc 1 1962 0 discriminator 2
 3147 003c 4262     		str	r2, [r0, #36]
1963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3148              		.loc 1 1963 0 discriminator 2
 3149 003e 4385     		strh	r3, [r0, #42]	@ movhi
1964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3150              		.loc 1 1964 0 discriminator 2
 3151 0040 3D4B     		ldr	r3, .L285
 3152              	.LVL246:
 3153 0042 C362     		str	r3, [r0, #44]
 3154              	.LVL247:
1965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3155              		.loc 1 1965 0 discriminator 2
 3156 0044 3D4B     		ldr	r3, .L285+4
 3157 0046 4363     		str	r3, [r0, #52]
1967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3158              		.loc 1 1967 0 discriminator 2
 3159 0048 438D     		ldrh	r3, [r0, #42]
 3160 004a 9BB2     		uxth	r3, r3
 3161 004c FF2B     		cmp	r3, #255
 3162 004e 2AD9     		bls	.L273
1969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3163              		.loc 1 1969 0
 3164 0050 FF23     		movs	r3, #255
 3165 0052 0385     		strh	r3, [r0, #40]	@ movhi
 3166              	.LVL248:
1970:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3167              		.loc 1 1970 0
 3168 0054 4FF08076 		mov	r6, #16777216
 3169              	.LVL249:
 3170              	.L274:
 3171 0058 0F46     		mov	r7, r1
 3172 005a 0446     		mov	r4, r0
 3173              	.LVL250:
1978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3174              		.loc 1 1978 0
 3175 005c 018D     		ldrh	r1, [r0, #40]
 3176              	.LVL251:
 3177 005e 0029     		cmp	r1, #0
 3178 0060 4FD0     		beq	.L275
1980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 3179              		.loc 1 1980 0
 3180 0062 C36B     		ldr	r3, [r0, #60]
 3181 0064 23B3     		cbz	r3, .L276
1983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3182              		.loc 1 1983 0
 3183 0066 3649     		ldr	r1, .L285+8
 3184 0068 D962     		str	r1, [r3, #44]
1986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3185              		.loc 1 1986 0
 3186 006a C36B     		ldr	r3, [r0, #60]
 3187 006c 3549     		ldr	r1, .L285+12
 3188 006e 5963     		str	r1, [r3, #52]
1989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 3189              		.loc 1 1989 0
 3190 0070 C16B     		ldr	r1, [r0, #60]
 3191 0072 0023     		movs	r3, #0
 3192 0074 0B63     		str	r3, [r1, #48]
1990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3193              		.loc 1 1990 0
 3194 0076 C16B     		ldr	r1, [r0, #60]
 3195 0078 8B63     		str	r3, [r1, #56]
1993:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 3196              		.loc 1 1993 0
 3197 007a 0168     		ldr	r1, [r0]
 3198 007c 038D     		ldrh	r3, [r0, #40]
 3199 007e 2431     		adds	r1, r1, #36
 3200 0080 C06B     		ldr	r0, [r0, #60]
 3201              	.LVL252:
 3202 0082 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3203              	.LVL253:
2010:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 3204              		.loc 1 2010 0
 3205 0086 0546     		mov	r5, r0
 3206 0088 00B3     		cbz	r0, .L284
2034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3207              		.loc 1 2034 0
 3208 008a 2023     		movs	r3, #32
 3209 008c 84F84130 		strb	r3, [r4, #65]
2035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3210              		.loc 1 2035 0
 3211 0090 0022     		movs	r2, #0
 3212 0092 84F84220 		strb	r2, [r4, #66]
2038:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3213              		.loc 1 2038 0
 3214 0096 636C     		ldr	r3, [r4, #68]
 3215 0098 43F01003 		orr	r3, r3, #16
 3216 009c 6364     		str	r3, [r4, #68]
2041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3217              		.loc 1 2041 0
 3218 009e 84F84020 		strb	r2, [r4, #64]
2043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 3219              		.loc 1 2043 0
 3220 00a2 0125     		movs	r5, #1
 3221 00a4 40E0     		b	.L272
 3222              	.LVL254:
 3223              	.L273:
1974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3224              		.loc 1 1974 0
 3225 00a6 438D     		ldrh	r3, [r0, #42]
 3226 00a8 0385     		strh	r3, [r0, #40]	@ movhi
 3227              	.LVL255:
1975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3228              		.loc 1 1975 0
 3229 00aa 4FF00076 		mov	r6, #33554432
 3230 00ae D3E7     		b	.L274
 3231              	.LVL256:
 3232              	.L276:
1998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 3233              		.loc 1 1998 0
 3234 00b0 2023     		movs	r3, #32
 3235 00b2 80F84130 		strb	r3, [r0, #65]
1999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3236              		.loc 1 1999 0
 3237 00b6 0022     		movs	r2, #0
 3238              	.LVL257:
 3239 00b8 80F84220 		strb	r2, [r0, #66]
2002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3240              		.loc 1 2002 0
 3241 00bc 436C     		ldr	r3, [r0, #68]
 3242 00be 43F08003 		orr	r3, r3, #128
 3243 00c2 4364     		str	r3, [r0, #68]
2005:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3244              		.loc 1 2005 0
 3245 00c4 80F84020 		strb	r2, [r0, #64]
2007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 3246              		.loc 1 2007 0
 3247 00c8 0125     		movs	r5, #1
 3248 00ca 2DE0     		b	.L272
 3249              	.LVL258:
 3250              	.L284:
2014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3251              		.loc 1 2014 0
 3252 00cc 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 3253 00d0 1D4B     		ldr	r3, .L285+16
 3254 00d2 0093     		str	r3, [sp]
 3255 00d4 3346     		mov	r3, r6
 3256 00d6 3946     		mov	r1, r7
 3257 00d8 2046     		mov	r0, r4
 3258              	.LVL259:
 3259 00da FFF7FEFF 		bl	I2C_TransferConfig
 3260              	.LVL260:
2017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3261              		.loc 1 2017 0
 3262 00de 638D     		ldrh	r3, [r4, #42]
 3263 00e0 228D     		ldrh	r2, [r4, #40]
 3264 00e2 9B1A     		subs	r3, r3, r2
 3265 00e4 9BB2     		uxth	r3, r3
 3266 00e6 6385     		strh	r3, [r4, #42]	@ movhi
2020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3267              		.loc 1 2020 0
 3268 00e8 0023     		movs	r3, #0
 3269 00ea 84F84030 		strb	r3, [r4, #64]
2026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3270              		.loc 1 2026 0
 3271 00ee 1021     		movs	r1, #16
 3272 00f0 2046     		mov	r0, r4
 3273 00f2 FFF7FEFF 		bl	I2C_Enable_IRQ
 3274              	.LVL261:
2029:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 3275              		.loc 1 2029 0
 3276 00f6 2268     		ldr	r2, [r4]
 3277 00f8 1368     		ldr	r3, [r2]
 3278 00fa 43F40043 		orr	r3, r3, #32768
 3279 00fe 1360     		str	r3, [r2]
 3280 0100 12E0     		b	.L272
 3281              	.LVL262:
 3282              	.L275:
2049:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3283              		.loc 1 2049 0
 3284 0102 124B     		ldr	r3, .L285+20
 3285 0104 4363     		str	r3, [r0, #52]
2053:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3286              		.loc 1 2053 0
 3287 0106 104B     		ldr	r3, .L285+16
 3288 0108 0093     		str	r3, [sp]
 3289 010a 4FF00073 		mov	r3, #33554432
 3290 010e CAB2     		uxtb	r2, r1
 3291              	.LVL263:
 3292 0110 3946     		mov	r1, r7
 3293 0112 FFF7FEFF 		bl	I2C_TransferConfig
 3294              	.LVL264:
2056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3295              		.loc 1 2056 0
 3296 0116 0025     		movs	r5, #0
 3297 0118 84F84050 		strb	r5, [r4, #64]
2064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3298              		.loc 1 2064 0
 3299 011c 0121     		movs	r1, #1
 3300 011e 2046     		mov	r0, r4
 3301 0120 FFF7FEFF 		bl	I2C_Enable_IRQ
 3302              	.LVL265:
 3303 0124 00E0     		b	.L272
 3304              	.LVL266:
 3305              	.L279:
2071:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 3306              		.loc 1 2071 0
 3307 0126 0225     		movs	r5, #2
 3308              	.LVL267:
 3309              	.L272:
2073:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3310              		.loc 1 2073 0
 3311 0128 2846     		mov	r0, r5
 3312 012a 03B0     		add	sp, sp, #12
 3313              		.cfi_remember_state
 3314              		.cfi_def_cfa_offset 20
 3315              		@ sp needed
 3316 012c F0BD     		pop	{r4, r5, r6, r7, pc}
 3317              	.LVL268:
 3318              	.L280:
 3319              		.cfi_restore_state
1951:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3320              		.loc 1 1951 0
 3321 012e 0225     		movs	r5, #2
 3322 0130 FAE7     		b	.L272
 3323              	.L281:
1955:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3324              		.loc 1 1955 0
 3325 0132 0225     		movs	r5, #2
 3326 0134 F8E7     		b	.L272
 3327              	.L286:
 3328 0136 00BF     		.align	2
 3329              	.L285:
 3330 0138 0000FFFF 		.word	-65536
 3331 013c 00000000 		.word	I2C_Master_ISR_DMA
 3332 0140 00000000 		.word	I2C_DMAMasterReceiveCplt
 3333 0144 00000000 		.word	I2C_DMAError
 3334 0148 00240080 		.word	-2147474432
 3335 014c 00000000 		.word	I2C_Master_ISR_IT
 3336              		.cfi_endproc
 3337              	.LFE330:
 3339              		.section	.text.HAL_I2C_Slave_Transmit_DMA,"ax",%progbits
 3340              		.align	1
 3341              		.global	HAL_I2C_Slave_Transmit_DMA
 3342              		.syntax unified
 3343              		.thumb
 3344              		.thumb_func
 3345              		.fpu fpv4-sp-d16
 3347              	HAL_I2C_Slave_Transmit_DMA:
 3348              	.LFB331:
2084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3349              		.loc 1 2084 0
 3350              		.cfi_startproc
 3351              		@ args = 0, pretend = 0, frame = 0
 3352              		@ frame_needed = 0, uses_anonymous_args = 0
 3353              	.LVL269:
 3354 0000 38B5     		push	{r3, r4, r5, lr}
 3355              		.cfi_def_cfa_offset 16
 3356              		.cfi_offset 3, -16
 3357              		.cfi_offset 4, -12
 3358              		.cfi_offset 5, -8
 3359              		.cfi_offset 14, -4
2087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 3360              		.loc 1 2087 0
 3361 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3362 0006 DBB2     		uxtb	r3, r3
 3363 0008 202B     		cmp	r3, #32
 3364 000a 63D1     		bne	.L294
2089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3365              		.loc 1 2089 0
 3366 000c 0029     		cmp	r1, #0
 3367 000e 3BD0     		beq	.L289
2089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3368              		.loc 1 2089 0 is_stmt 0 discriminator 1
 3369 0010 002A     		cmp	r2, #0
 3370 0012 39D0     		beq	.L289
2095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3371              		.loc 1 2095 0 is_stmt 1
 3372 0014 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3373 0018 012B     		cmp	r3, #1
 3374 001a 5ED0     		beq	.L295
2095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3375              		.loc 1 2095 0 is_stmt 0 discriminator 2
 3376 001c 0123     		movs	r3, #1
 3377 001e 80F84030 		strb	r3, [r0, #64]
2097:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3378              		.loc 1 2097 0 is_stmt 1 discriminator 2
 3379 0022 2123     		movs	r3, #33
 3380 0024 80F84130 		strb	r3, [r0, #65]
2098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3381              		.loc 1 2098 0 discriminator 2
 3382 0028 2023     		movs	r3, #32
 3383 002a 80F84230 		strb	r3, [r0, #66]
2099:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3384              		.loc 1 2099 0 discriminator 2
 3385 002e 0023     		movs	r3, #0
 3386 0030 4364     		str	r3, [r0, #68]
2102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3387              		.loc 1 2102 0 discriminator 2
 3388 0032 4162     		str	r1, [r0, #36]
2103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3389              		.loc 1 2103 0 discriminator 2
 3390 0034 4285     		strh	r2, [r0, #42]	@ movhi
2104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3391              		.loc 1 2104 0 discriminator 2
 3392 0036 438D     		ldrh	r3, [r0, #42]
 3393 0038 0385     		strh	r3, [r0, #40]	@ movhi
2105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3394              		.loc 1 2105 0 discriminator 2
 3395 003a 294B     		ldr	r3, .L299
 3396 003c C362     		str	r3, [r0, #44]
2106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3397              		.loc 1 2106 0 discriminator 2
 3398 003e 294B     		ldr	r3, .L299+4
 3399 0040 4363     		str	r3, [r0, #52]
2108:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3400              		.loc 1 2108 0 discriminator 2
 3401 0042 836B     		ldr	r3, [r0, #56]
 3402 0044 2BB3     		cbz	r3, .L291
 3403 0046 0546     		mov	r5, r0
2111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3404              		.loc 1 2111 0
 3405 0048 274A     		ldr	r2, .L299+8
 3406              	.LVL270:
 3407 004a DA62     		str	r2, [r3, #44]
2114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3408              		.loc 1 2114 0
 3409 004c 836B     		ldr	r3, [r0, #56]
 3410 004e 274A     		ldr	r2, .L299+12
 3411 0050 5A63     		str	r2, [r3, #52]
2117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 3412              		.loc 1 2117 0
 3413 0052 826B     		ldr	r2, [r0, #56]
 3414 0054 0023     		movs	r3, #0
 3415 0056 1363     		str	r3, [r2, #48]
2118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3416              		.loc 1 2118 0
 3417 0058 826B     		ldr	r2, [r0, #56]
 3418 005a 9363     		str	r3, [r2, #56]
2121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3419              		.loc 1 2121 0
 3420 005c 0268     		ldr	r2, [r0]
 3421 005e 038D     		ldrh	r3, [r0, #40]
 3422 0060 2832     		adds	r2, r2, #40
 3423 0062 806B     		ldr	r0, [r0, #56]
 3424              	.LVL271:
 3425 0064 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3426              	.LVL272:
2138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3427              		.loc 1 2138 0
 3428 0068 0446     		mov	r4, r0
 3429 006a 00B3     		cbz	r0, .L298
2158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3430              		.loc 1 2158 0
 3431 006c 2823     		movs	r3, #40
 3432 006e 85F84130 		strb	r3, [r5, #65]
2159:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3433              		.loc 1 2159 0
 3434 0072 0022     		movs	r2, #0
 3435 0074 85F84220 		strb	r2, [r5, #66]
2162:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3436              		.loc 1 2162 0
 3437 0078 6B6C     		ldr	r3, [r5, #68]
 3438 007a 43F01003 		orr	r3, r3, #16
 3439 007e 6B64     		str	r3, [r5, #68]
2165:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3440              		.loc 1 2165 0
 3441 0080 85F84020 		strb	r2, [r5, #64]
2167:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3442              		.loc 1 2167 0
 3443 0084 0124     		movs	r4, #1
 3444 0086 26E0     		b	.L288
 3445              	.LVL273:
 3446              	.L289:
2091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 3447              		.loc 1 2091 0
 3448 0088 4FF40073 		mov	r3, #512
 3449 008c 4364     		str	r3, [r0, #68]
2092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3450              		.loc 1 2092 0
 3451 008e 0124     		movs	r4, #1
 3452 0090 21E0     		b	.L288
 3453              	.L291:
2126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3454              		.loc 1 2126 0
 3455 0092 2823     		movs	r3, #40
 3456 0094 80F84130 		strb	r3, [r0, #65]
2127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3457              		.loc 1 2127 0
 3458 0098 0022     		movs	r2, #0
 3459              	.LVL274:
 3460 009a 80F84220 		strb	r2, [r0, #66]
2130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3461              		.loc 1 2130 0
 3462 009e 436C     		ldr	r3, [r0, #68]
 3463 00a0 43F08003 		orr	r3, r3, #128
 3464 00a4 4364     		str	r3, [r0, #68]
2133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3465              		.loc 1 2133 0
 3466 00a6 80F84020 		strb	r2, [r0, #64]
2135:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3467              		.loc 1 2135 0
 3468 00aa 0124     		movs	r4, #1
 3469 00ac 13E0     		b	.L288
 3470              	.LVL275:
 3471              	.L298:
2141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3472              		.loc 1 2141 0
 3473 00ae 2A68     		ldr	r2, [r5]
 3474 00b0 5368     		ldr	r3, [r2, #4]
 3475 00b2 23F40043 		bic	r3, r3, #32768
 3476 00b6 5360     		str	r3, [r2, #4]
2144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3477              		.loc 1 2144 0
 3478 00b8 0023     		movs	r3, #0
 3479 00ba 85F84030 		strb	r3, [r5, #64]
2150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3480              		.loc 1 2150 0
 3481 00be 4FF40041 		mov	r1, #32768
 3482 00c2 2846     		mov	r0, r5
 3483              	.LVL276:
 3484 00c4 FFF7FEFF 		bl	I2C_Enable_IRQ
 3485              	.LVL277:
2153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3486              		.loc 1 2153 0
 3487 00c8 2A68     		ldr	r2, [r5]
 3488 00ca 1368     		ldr	r3, [r2]
 3489 00cc 43F48043 		orr	r3, r3, #16384
 3490 00d0 1360     		str	r3, [r2]
2170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 3491              		.loc 1 2170 0
 3492 00d2 00E0     		b	.L288
 3493              	.LVL278:
 3494              	.L294:
2174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 3495              		.loc 1 2174 0
 3496 00d4 0224     		movs	r4, #2
 3497              	.LVL279:
 3498              	.L288:
2176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3499              		.loc 1 2176 0
 3500 00d6 2046     		mov	r0, r4
 3501 00d8 38BD     		pop	{r3, r4, r5, pc}
 3502              	.LVL280:
 3503              	.L295:
2095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3504              		.loc 1 2095 0
 3505 00da 0224     		movs	r4, #2
 3506 00dc FBE7     		b	.L288
 3507              	.L300:
 3508 00de 00BF     		.align	2
 3509              	.L299:
 3510 00e0 0000FFFF 		.word	-65536
 3511 00e4 00000000 		.word	I2C_Slave_ISR_DMA
 3512 00e8 00000000 		.word	I2C_DMASlaveTransmitCplt
 3513 00ec 00000000 		.word	I2C_DMAError
 3514              		.cfi_endproc
 3515              	.LFE331:
 3517              		.section	.text.HAL_I2C_Slave_Receive_DMA,"ax",%progbits
 3518              		.align	1
 3519              		.global	HAL_I2C_Slave_Receive_DMA
 3520              		.syntax unified
 3521              		.thumb
 3522              		.thumb_func
 3523              		.fpu fpv4-sp-d16
 3525              	HAL_I2C_Slave_Receive_DMA:
 3526              	.LFB332:
2187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 3527              		.loc 1 2187 0
 3528              		.cfi_startproc
 3529              		@ args = 0, pretend = 0, frame = 0
 3530              		@ frame_needed = 0, uses_anonymous_args = 0
 3531              	.LVL281:
 3532 0000 38B5     		push	{r3, r4, r5, lr}
 3533              		.cfi_def_cfa_offset 16
 3534              		.cfi_offset 3, -16
 3535              		.cfi_offset 4, -12
 3536              		.cfi_offset 5, -8
 3537              		.cfi_offset 14, -4
2190:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 3538              		.loc 1 2190 0
 3539 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3540 0006 DBB2     		uxtb	r3, r3
 3541 0008 202B     		cmp	r3, #32
 3542 000a 64D1     		bne	.L308
2192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3543              		.loc 1 2192 0
 3544 000c 0029     		cmp	r1, #0
 3545 000e 3CD0     		beq	.L303
2192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3546              		.loc 1 2192 0 is_stmt 0 discriminator 1
 3547 0010 002A     		cmp	r2, #0
 3548 0012 3AD0     		beq	.L303
2198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3549              		.loc 1 2198 0 is_stmt 1
 3550 0014 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3551 0018 012B     		cmp	r3, #1
 3552 001a 5FD0     		beq	.L309
2198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3553              		.loc 1 2198 0 is_stmt 0 discriminator 2
 3554 001c 0123     		movs	r3, #1
 3555 001e 80F84030 		strb	r3, [r0, #64]
2200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3556              		.loc 1 2200 0 is_stmt 1 discriminator 2
 3557 0022 2223     		movs	r3, #34
 3558 0024 80F84130 		strb	r3, [r0, #65]
2201:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3559              		.loc 1 2201 0 discriminator 2
 3560 0028 2023     		movs	r3, #32
 3561 002a 80F84230 		strb	r3, [r0, #66]
2202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3562              		.loc 1 2202 0 discriminator 2
 3563 002e 0023     		movs	r3, #0
 3564 0030 4364     		str	r3, [r0, #68]
2205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3565              		.loc 1 2205 0 discriminator 2
 3566 0032 4162     		str	r1, [r0, #36]
2206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3567              		.loc 1 2206 0 discriminator 2
 3568 0034 4285     		strh	r2, [r0, #42]	@ movhi
2207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3569              		.loc 1 2207 0 discriminator 2
 3570 0036 438D     		ldrh	r3, [r0, #42]
 3571 0038 0385     		strh	r3, [r0, #40]	@ movhi
2208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3572              		.loc 1 2208 0 discriminator 2
 3573 003a 294B     		ldr	r3, .L313
 3574 003c C362     		str	r3, [r0, #44]
2209:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3575              		.loc 1 2209 0 discriminator 2
 3576 003e 294B     		ldr	r3, .L313+4
 3577 0040 4363     		str	r3, [r0, #52]
2211:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3578              		.loc 1 2211 0 discriminator 2
 3579 0042 C36B     		ldr	r3, [r0, #60]
 3580 0044 33B3     		cbz	r3, .L305
 3581 0046 0A46     		mov	r2, r1
 3582              	.LVL282:
 3583 0048 0546     		mov	r5, r0
2214:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3584              		.loc 1 2214 0
 3585 004a 2749     		ldr	r1, .L313+8
 3586              	.LVL283:
 3587 004c D962     		str	r1, [r3, #44]
2217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3588              		.loc 1 2217 0
 3589 004e C36B     		ldr	r3, [r0, #60]
 3590 0050 2649     		ldr	r1, .L313+12
 3591 0052 5963     		str	r1, [r3, #52]
2220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 3592              		.loc 1 2220 0
 3593 0054 C16B     		ldr	r1, [r0, #60]
 3594 0056 0023     		movs	r3, #0
 3595 0058 0B63     		str	r3, [r1, #48]
2221:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3596              		.loc 1 2221 0
 3597 005a C16B     		ldr	r1, [r0, #60]
 3598 005c 8B63     		str	r3, [r1, #56]
2224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3599              		.loc 1 2224 0
 3600 005e 0168     		ldr	r1, [r0]
 3601 0060 038D     		ldrh	r3, [r0, #40]
 3602 0062 2431     		adds	r1, r1, #36
 3603 0064 C06B     		ldr	r0, [r0, #60]
 3604              	.LVL284:
 3605 0066 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3606              	.LVL285:
2241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3607              		.loc 1 2241 0
 3608 006a 0446     		mov	r4, r0
 3609 006c 00B3     		cbz	r0, .L312
2261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3610              		.loc 1 2261 0
 3611 006e 2823     		movs	r3, #40
 3612 0070 85F84130 		strb	r3, [r5, #65]
2262:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3613              		.loc 1 2262 0
 3614 0074 0022     		movs	r2, #0
 3615 0076 85F84220 		strb	r2, [r5, #66]
2265:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3616              		.loc 1 2265 0
 3617 007a 6B6C     		ldr	r3, [r5, #68]
 3618 007c 43F01003 		orr	r3, r3, #16
 3619 0080 6B64     		str	r3, [r5, #68]
2268:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3620              		.loc 1 2268 0
 3621 0082 85F84020 		strb	r2, [r5, #64]
2270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3622              		.loc 1 2270 0
 3623 0086 0124     		movs	r4, #1
 3624 0088 26E0     		b	.L302
 3625              	.LVL286:
 3626              	.L303:
2194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 3627              		.loc 1 2194 0
 3628 008a 4FF40073 		mov	r3, #512
 3629 008e 4364     		str	r3, [r0, #68]
2195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3630              		.loc 1 2195 0
 3631 0090 0124     		movs	r4, #1
 3632 0092 21E0     		b	.L302
 3633              	.L305:
2229:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 3634              		.loc 1 2229 0
 3635 0094 2823     		movs	r3, #40
 3636 0096 80F84130 		strb	r3, [r0, #65]
2230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3637              		.loc 1 2230 0
 3638 009a 0022     		movs	r2, #0
 3639              	.LVL287:
 3640 009c 80F84220 		strb	r2, [r0, #66]
2233:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3641              		.loc 1 2233 0
 3642 00a0 436C     		ldr	r3, [r0, #68]
 3643 00a2 43F08003 		orr	r3, r3, #128
 3644 00a6 4364     		str	r3, [r0, #68]
2236:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3645              		.loc 1 2236 0
 3646 00a8 80F84020 		strb	r2, [r0, #64]
2238:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3647              		.loc 1 2238 0
 3648 00ac 0124     		movs	r4, #1
 3649 00ae 13E0     		b	.L302
 3650              	.LVL288:
 3651              	.L312:
2244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3652              		.loc 1 2244 0
 3653 00b0 2A68     		ldr	r2, [r5]
 3654 00b2 5368     		ldr	r3, [r2, #4]
 3655 00b4 23F40043 		bic	r3, r3, #32768
 3656 00b8 5360     		str	r3, [r2, #4]
2247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3657              		.loc 1 2247 0
 3658 00ba 0023     		movs	r3, #0
 3659 00bc 85F84030 		strb	r3, [r5, #64]
2253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3660              		.loc 1 2253 0
 3661 00c0 4FF40041 		mov	r1, #32768
 3662 00c4 2846     		mov	r0, r5
 3663              	.LVL289:
 3664 00c6 FFF7FEFF 		bl	I2C_Enable_IRQ
 3665              	.LVL290:
2256:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3666              		.loc 1 2256 0
 3667 00ca 2A68     		ldr	r2, [r5]
 3668 00cc 1368     		ldr	r3, [r2]
 3669 00ce 43F40043 		orr	r3, r3, #32768
 3670 00d2 1360     		str	r3, [r2]
2273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 3671              		.loc 1 2273 0
 3672 00d4 00E0     		b	.L302
 3673              	.LVL291:
 3674              	.L308:
2277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 3675              		.loc 1 2277 0
 3676 00d6 0224     		movs	r4, #2
 3677              	.LVL292:
 3678              	.L302:
2279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 3679              		.loc 1 2279 0
 3680 00d8 2046     		mov	r0, r4
 3681 00da 38BD     		pop	{r3, r4, r5, pc}
 3682              	.LVL293:
 3683              	.L309:
2198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3684              		.loc 1 2198 0
 3685 00dc 0224     		movs	r4, #2
 3686 00de FBE7     		b	.L302
 3687              	.L314:
 3688              		.align	2
 3689              	.L313:
 3690 00e0 0000FFFF 		.word	-65536
 3691 00e4 00000000 		.word	I2C_Slave_ISR_DMA
 3692 00e8 00000000 		.word	I2C_DMASlaveReceiveCplt
 3693 00ec 00000000 		.word	I2C_DMAError
 3694              		.cfi_endproc
 3695              	.LFE332:
 3697              		.section	.text.HAL_I2C_Mem_Write,"ax",%progbits
 3698              		.align	1
 3699              		.global	HAL_I2C_Mem_Write
 3700              		.syntax unified
 3701              		.thumb
 3702              		.thumb_func
 3703              		.fpu fpv4-sp-d16
 3705              	HAL_I2C_Mem_Write:
 3706              	.LFB333:
2295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
 3707              		.loc 1 2295 0
 3708              		.cfi_startproc
 3709              		@ args = 12, pretend = 0, frame = 0
 3710              		@ frame_needed = 0, uses_anonymous_args = 0
 3711              	.LVL294:
 3712 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3713              		.cfi_def_cfa_offset 32
 3714              		.cfi_offset 4, -32
 3715              		.cfi_offset 5, -28
 3716              		.cfi_offset 6, -24
 3717              		.cfi_offset 7, -20
 3718              		.cfi_offset 8, -16
 3719              		.cfi_offset 9, -12
 3720              		.cfi_offset 10, -8
 3721              		.cfi_offset 14, -4
 3722 0004 82B0     		sub	sp, sp, #8
 3723              		.cfi_def_cfa_offset 40
 3724 0006 BDF82C70 		ldrh	r7, [sp, #44]
2301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 3725              		.loc 1 2301 0
 3726 000a 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 3727 000e EDB2     		uxtb	r5, r5
 3728 0010 202D     		cmp	r5, #32
 3729 0012 40F0BA80 		bne	.L325
2303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3730              		.loc 1 2303 0
 3731 0016 0A9C     		ldr	r4, [sp, #40]
 3732 0018 DCB1     		cbz	r4, .L317
2303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3733              		.loc 1 2303 0 is_stmt 0 discriminator 1
 3734 001a D7B1     		cbz	r7, .L317
2310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3735              		.loc 1 2310 0 is_stmt 1
 3736 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3737 0020 012C     		cmp	r4, #1
 3738 0022 00F0B780 		beq	.L326
 3739 0026 9846     		mov	r8, r3
 3740 0028 9146     		mov	r9, r2
 3741 002a 0D46     		mov	r5, r1
 3742 002c 0446     		mov	r4, r0
2310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3743              		.loc 1 2310 0 is_stmt 0 discriminator 2
 3744 002e 4FF0010A 		mov	r10, #1
 3745 0032 80F840A0 		strb	r10, [r0, #64]
2313:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3746              		.loc 1 2313 0 is_stmt 1 discriminator 2
 3747 0036 FFF7FEFF 		bl	HAL_GetTick
 3748              	.LVL295:
 3749 003a 0646     		mov	r6, r0
 3750              	.LVL296:
2315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3751              		.loc 1 2315 0 discriminator 2
 3752 003c 0090     		str	r0, [sp]
 3753 003e 1923     		movs	r3, #25
 3754 0040 5246     		mov	r2, r10
 3755 0042 4FF40041 		mov	r1, #32768
 3756 0046 2046     		mov	r0, r4
 3757              	.LVL297:
 3758 0048 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3759              	.LVL298:
 3760 004c 30B1     		cbz	r0, .L332
2317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3761              		.loc 1 2317 0
 3762 004e 0123     		movs	r3, #1
 3763 0050 9CE0     		b	.L316
 3764              	.LVL299:
 3765              	.L317:
2305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 3766              		.loc 1 2305 0
 3767 0052 4FF40073 		mov	r3, #512
 3768              	.LVL300:
 3769 0056 4364     		str	r3, [r0, #68]
2306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3770              		.loc 1 2306 0
 3771 0058 0123     		movs	r3, #1
 3772 005a 97E0     		b	.L316
 3773              	.LVL301:
 3774              	.L332:
2320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3775              		.loc 1 2320 0
 3776 005c 2123     		movs	r3, #33
 3777 005e 84F84130 		strb	r3, [r4, #65]
2321:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3778              		.loc 1 2321 0
 3779 0062 4023     		movs	r3, #64
 3780 0064 84F84230 		strb	r3, [r4, #66]
2322:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3781              		.loc 1 2322 0
 3782 0068 0023     		movs	r3, #0
 3783 006a 6364     		str	r3, [r4, #68]
2325:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3784              		.loc 1 2325 0
 3785 006c 0A9A     		ldr	r2, [sp, #40]
 3786 006e 6262     		str	r2, [r4, #36]
2326:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3787              		.loc 1 2326 0
 3788 0070 6785     		strh	r7, [r4, #42]	@ movhi
2327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3789              		.loc 1 2327 0
 3790 0072 6363     		str	r3, [r4, #52]
2330:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3791              		.loc 1 2330 0
 3792 0074 0196     		str	r6, [sp, #4]
 3793 0076 0C9B     		ldr	r3, [sp, #48]
 3794 0078 0093     		str	r3, [sp]
 3795 007a 4346     		mov	r3, r8
 3796 007c 4A46     		mov	r2, r9
 3797 007e 2946     		mov	r1, r5
 3798 0080 2046     		mov	r0, r4
 3799 0082 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 3800              	.LVL302:
 3801 0086 70B9     		cbnz	r0, .L333
2338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3802              		.loc 1 2338 0
 3803 0088 638D     		ldrh	r3, [r4, #42]
 3804 008a 9BB2     		uxth	r3, r3
 3805 008c FF2B     		cmp	r3, #255
 3806 008e 0FD9     		bls	.L320
2340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTST
 3807              		.loc 1 2340 0
 3808 0090 FF22     		movs	r2, #255
 3809 0092 2285     		strh	r2, [r4, #40]	@ movhi
2341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3810              		.loc 1 2341 0
 3811 0094 0023     		movs	r3, #0
 3812 0096 0093     		str	r3, [sp]
 3813 0098 4FF08073 		mov	r3, #16777216
 3814 009c 2946     		mov	r1, r5
 3815 009e 2046     		mov	r0, r4
 3816 00a0 FFF7FEFF 		bl	I2C_TransferConfig
 3817              	.LVL303:
 3818 00a4 21E0     		b	.L324
 3819              	.L333:
2333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 3820              		.loc 1 2333 0
 3821 00a6 0023     		movs	r3, #0
 3822 00a8 84F84030 		strb	r3, [r4, #64]
2334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3823              		.loc 1 2334 0
 3824 00ac 5346     		mov	r3, r10
 3825 00ae 6DE0     		b	.L316
 3826              	.L320:
2345:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTS
 3827              		.loc 1 2345 0
 3828 00b0 628D     		ldrh	r2, [r4, #42]
 3829 00b2 92B2     		uxth	r2, r2
 3830 00b4 2285     		strh	r2, [r4, #40]	@ movhi
2346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3831              		.loc 1 2346 0
 3832 00b6 0023     		movs	r3, #0
 3833 00b8 0093     		str	r3, [sp]
 3834 00ba 4FF00073 		mov	r3, #33554432
 3835 00be D2B2     		uxtb	r2, r2
 3836 00c0 2946     		mov	r1, r5
 3837 00c2 2046     		mov	r0, r4
 3838 00c4 FFF7FEFF 		bl	I2C_TransferConfig
 3839              	.LVL304:
 3840 00c8 0FE0     		b	.L324
 3841              	.L323:
2381:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 3842              		.loc 1 2381 0
 3843 00ca 628D     		ldrh	r2, [r4, #42]
 3844 00cc 92B2     		uxth	r2, r2
 3845 00ce 2285     		strh	r2, [r4, #40]	@ movhi
2382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 3846              		.loc 1 2382 0
 3847 00d0 0023     		movs	r3, #0
 3848 00d2 0093     		str	r3, [sp]
 3849 00d4 4FF00073 		mov	r3, #33554432
 3850 00d8 D2B2     		uxtb	r2, r2
 3851 00da 2946     		mov	r1, r5
 3852 00dc 2046     		mov	r0, r4
 3853 00de FFF7FEFF 		bl	I2C_TransferConfig
 3854              	.LVL305:
 3855              	.L322:
2386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3856              		.loc 1 2386 0
 3857 00e2 638D     		ldrh	r3, [r4, #42]
 3858 00e4 9BB2     		uxth	r3, r3
 3859 00e6 002B     		cmp	r3, #0
 3860 00e8 32D0     		beq	.L334
 3861              	.L324:
2352:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 3862              		.loc 1 2352 0
 3863 00ea 3246     		mov	r2, r6
 3864 00ec 0C99     		ldr	r1, [sp, #48]
 3865 00ee 2046     		mov	r0, r4
 3866 00f0 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 3867              	.LVL306:
 3868 00f4 0028     		cmp	r0, #0
 3869 00f6 4FD1     		bne	.L328
2358:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3870              		.loc 1 2358 0
 3871 00f8 626A     		ldr	r2, [r4, #36]
 3872 00fa 2368     		ldr	r3, [r4]
 3873 00fc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3874 00fe 9A62     		str	r2, [r3, #40]
2361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3875              		.loc 1 2361 0
 3876 0100 636A     		ldr	r3, [r4, #36]
 3877 0102 0133     		adds	r3, r3, #1
 3878 0104 6362     		str	r3, [r4, #36]
2363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize--;
 3879              		.loc 1 2363 0
 3880 0106 638D     		ldrh	r3, [r4, #42]
 3881 0108 013B     		subs	r3, r3, #1
 3882 010a 9BB2     		uxth	r3, r3
 3883 010c 6385     		strh	r3, [r4, #42]	@ movhi
2364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3884              		.loc 1 2364 0
 3885 010e 238D     		ldrh	r3, [r4, #40]
 3886 0110 013B     		subs	r3, r3, #1
 3887 0112 9BB2     		uxth	r3, r3
 3888 0114 2385     		strh	r3, [r4, #40]	@ movhi
2366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 3889              		.loc 1 2366 0
 3890 0116 628D     		ldrh	r2, [r4, #42]
 3891 0118 92B2     		uxth	r2, r2
 3892 011a 002A     		cmp	r2, #0
 3893 011c E1D0     		beq	.L322
2366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 3894              		.loc 1 2366 0 is_stmt 0 discriminator 1
 3895 011e 002B     		cmp	r3, #0
 3896 0120 DFD1     		bne	.L322
2369:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 3897              		.loc 1 2369 0 is_stmt 1
 3898 0122 0096     		str	r6, [sp]
 3899 0124 0C9B     		ldr	r3, [sp, #48]
 3900 0126 0022     		movs	r2, #0
 3901 0128 8021     		movs	r1, #128
 3902 012a 2046     		mov	r0, r4
 3903 012c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3904              	.LVL307:
 3905 0130 A0BB     		cbnz	r0, .L329
2374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 3906              		.loc 1 2374 0
 3907 0132 638D     		ldrh	r3, [r4, #42]
 3908 0134 9BB2     		uxth	r3, r3
 3909 0136 FF2B     		cmp	r3, #255
 3910 0138 C7D9     		bls	.L323
2376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STA
 3911              		.loc 1 2376 0
 3912 013a FF22     		movs	r2, #255
 3913 013c 2285     		strh	r2, [r4, #40]	@ movhi
2377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 3914              		.loc 1 2377 0
 3915 013e 0023     		movs	r3, #0
 3916 0140 0093     		str	r3, [sp]
 3917 0142 4FF08073 		mov	r3, #16777216
 3918 0146 2946     		mov	r1, r5
 3919 0148 2046     		mov	r0, r4
 3920 014a FFF7FEFF 		bl	I2C_TransferConfig
 3921              	.LVL308:
 3922 014e C8E7     		b	.L322
 3923              	.L334:
2390:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 3924              		.loc 1 2390 0
 3925 0150 3246     		mov	r2, r6
 3926 0152 0C99     		ldr	r1, [sp, #48]
 3927 0154 2046     		mov	r0, r4
 3928 0156 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 3929              	.LVL309:
 3930 015a 0346     		mov	r3, r0
 3931 015c 00BB     		cbnz	r0, .L330
2396:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3932              		.loc 1 2396 0
 3933 015e 2268     		ldr	r2, [r4]
 3934 0160 2021     		movs	r1, #32
 3935 0162 D161     		str	r1, [r2, #28]
2399:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3936              		.loc 1 2399 0
 3937 0164 2068     		ldr	r0, [r4]
 3938 0166 4268     		ldr	r2, [r0, #4]
 3939 0168 22F0FF72 		bic	r2, r2, #33423360
 3940 016c 22F48B32 		bic	r2, r2, #71168
 3941 0170 22F4FF72 		bic	r2, r2, #510
 3942 0174 22F00102 		bic	r2, r2, #1
 3943 0178 4260     		str	r2, [r0, #4]
2401:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 3944              		.loc 1 2401 0
 3945 017a 84F84110 		strb	r1, [r4, #65]
2402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3946              		.loc 1 2402 0
 3947 017e 0022     		movs	r2, #0
 3948 0180 84F84220 		strb	r2, [r4, #66]
2405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3949              		.loc 1 2405 0
 3950 0184 84F84020 		strb	r2, [r4, #64]
2407:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 3951              		.loc 1 2407 0
 3952 0188 00E0     		b	.L316
 3953              	.LVL310:
 3954              	.L325:
2411:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 3955              		.loc 1 2411 0
 3956 018a 0223     		movs	r3, #2
 3957              	.LVL311:
 3958              	.L316:
2413:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3959              		.loc 1 2413 0
 3960 018c 1846     		mov	r0, r3
 3961 018e 02B0     		add	sp, sp, #8
 3962              		.cfi_remember_state
 3963              		.cfi_def_cfa_offset 32
 3964              		@ sp needed
 3965 0190 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3966              	.LVL312:
 3967              	.L326:
 3968              		.cfi_restore_state
2310:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 3969              		.loc 1 2310 0
 3970 0194 0223     		movs	r3, #2
 3971              	.LVL313:
 3972 0196 F9E7     		b	.L316
 3973              	.LVL314:
 3974              	.L328:
2354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 3975              		.loc 1 2354 0
 3976 0198 0123     		movs	r3, #1
 3977 019a F7E7     		b	.L316
 3978              	.L329:
2371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 3979              		.loc 1 2371 0
 3980 019c 0123     		movs	r3, #1
 3981 019e F5E7     		b	.L316
 3982              	.L330:
2392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 3983              		.loc 1 2392 0
 3984 01a0 0123     		movs	r3, #1
 3985 01a2 F3E7     		b	.L316
 3986              		.cfi_endproc
 3987              	.LFE333:
 3989              		.section	.text.HAL_I2C_Mem_Read,"ax",%progbits
 3990              		.align	1
 3991              		.global	HAL_I2C_Mem_Read
 3992              		.syntax unified
 3993              		.thumb
 3994              		.thumb_func
 3995              		.fpu fpv4-sp-d16
 3997              	HAL_I2C_Mem_Read:
 3998              	.LFB334:
2430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
 3999              		.loc 1 2430 0
 4000              		.cfi_startproc
 4001              		@ args = 12, pretend = 0, frame = 0
 4002              		@ frame_needed = 0, uses_anonymous_args = 0
 4003              	.LVL315:
 4004 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4005              		.cfi_def_cfa_offset 32
 4006              		.cfi_offset 4, -32
 4007              		.cfi_offset 5, -28
 4008              		.cfi_offset 6, -24
 4009              		.cfi_offset 7, -20
 4010              		.cfi_offset 8, -16
 4011              		.cfi_offset 9, -12
 4012              		.cfi_offset 10, -8
 4013              		.cfi_offset 14, -4
 4014 0004 82B0     		sub	sp, sp, #8
 4015              		.cfi_def_cfa_offset 40
 4016 0006 BDF82C70 		ldrh	r7, [sp, #44]
2436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 4017              		.loc 1 2436 0
 4018 000a 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 4019 000e EDB2     		uxtb	r5, r5
 4020 0010 202D     		cmp	r5, #32
 4021 0012 40F0BC80 		bne	.L345
2438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4022              		.loc 1 2438 0
 4023 0016 0A9C     		ldr	r4, [sp, #40]
 4024 0018 DCB1     		cbz	r4, .L337
2438:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4025              		.loc 1 2438 0 is_stmt 0 discriminator 1
 4026 001a D7B1     		cbz	r7, .L337
2445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4027              		.loc 1 2445 0 is_stmt 1
 4028 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4029 0020 012C     		cmp	r4, #1
 4030 0022 00F0B980 		beq	.L346
 4031 0026 9846     		mov	r8, r3
 4032 0028 9146     		mov	r9, r2
 4033 002a 0D46     		mov	r5, r1
 4034 002c 0446     		mov	r4, r0
2445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4035              		.loc 1 2445 0 is_stmt 0 discriminator 2
 4036 002e 4FF0010A 		mov	r10, #1
 4037 0032 80F840A0 		strb	r10, [r0, #64]
2448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4038              		.loc 1 2448 0 is_stmt 1 discriminator 2
 4039 0036 FFF7FEFF 		bl	HAL_GetTick
 4040              	.LVL316:
 4041 003a 0646     		mov	r6, r0
 4042              	.LVL317:
2450:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4043              		.loc 1 2450 0 discriminator 2
 4044 003c 0090     		str	r0, [sp]
 4045 003e 1923     		movs	r3, #25
 4046 0040 5246     		mov	r2, r10
 4047 0042 4FF40041 		mov	r1, #32768
 4048 0046 2046     		mov	r0, r4
 4049              	.LVL318:
 4050 0048 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4051              	.LVL319:
 4052 004c 30B1     		cbz	r0, .L352
2452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4053              		.loc 1 2452 0
 4054 004e 0123     		movs	r3, #1
 4055 0050 9EE0     		b	.L336
 4056              	.LVL320:
 4057              	.L337:
2440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 4058              		.loc 1 2440 0
 4059 0052 4FF40073 		mov	r3, #512
 4060              	.LVL321:
 4061 0056 4364     		str	r3, [r0, #68]
2441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4062              		.loc 1 2441 0
 4063 0058 0123     		movs	r3, #1
 4064 005a 99E0     		b	.L336
 4065              	.LVL322:
 4066              	.L352:
2455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 4067              		.loc 1 2455 0
 4068 005c 2223     		movs	r3, #34
 4069 005e 84F84130 		strb	r3, [r4, #65]
2456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 4070              		.loc 1 2456 0
 4071 0062 4023     		movs	r3, #64
 4072 0064 84F84230 		strb	r3, [r4, #66]
2457:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4073              		.loc 1 2457 0
 4074 0068 0023     		movs	r3, #0
 4075 006a 6364     		str	r3, [r4, #68]
2460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount = Size;
 4076              		.loc 1 2460 0
 4077 006c 0A9A     		ldr	r2, [sp, #40]
 4078 006e 6262     		str	r2, [r4, #36]
2461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 4079              		.loc 1 2461 0
 4080 0070 6785     		strh	r7, [r4, #42]	@ movhi
2462:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4081              		.loc 1 2462 0
 4082 0072 6363     		str	r3, [r4, #52]
2465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4083              		.loc 1 2465 0
 4084 0074 0196     		str	r6, [sp, #4]
 4085 0076 0C9B     		ldr	r3, [sp, #48]
 4086 0078 0093     		str	r3, [sp]
 4087 007a 4346     		mov	r3, r8
 4088 007c 4A46     		mov	r2, r9
 4089 007e 2946     		mov	r1, r5
 4090 0080 2046     		mov	r0, r4
 4091 0082 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4092              	.LVL323:
 4093 0086 70B9     		cbnz	r0, .L353
2474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4094              		.loc 1 2474 0
 4095 0088 638D     		ldrh	r3, [r4, #42]
 4096 008a 9BB2     		uxth	r3, r3
 4097 008c FF2B     		cmp	r3, #255
 4098 008e 0FD9     		bls	.L340
2476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_S
 4099              		.loc 1 2476 0
 4100 0090 FF22     		movs	r2, #255
 4101 0092 2285     		strh	r2, [r4, #40]	@ movhi
2477:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4102              		.loc 1 2477 0
 4103 0094 444B     		ldr	r3, .L355
 4104 0096 0093     		str	r3, [sp]
 4105 0098 4FF08073 		mov	r3, #16777216
 4106 009c 2946     		mov	r1, r5
 4107 009e 2046     		mov	r0, r4
 4108 00a0 FFF7FEFF 		bl	I2C_TransferConfig
 4109              	.LVL324:
 4110 00a4 21E0     		b	.L344
 4111              	.L353:
2468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 4112              		.loc 1 2468 0
 4113 00a6 0023     		movs	r3, #0
 4114 00a8 84F84030 		strb	r3, [r4, #64]
2469:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4115              		.loc 1 2469 0
 4116 00ac 5346     		mov	r3, r10
 4117 00ae 6FE0     		b	.L336
 4118              	.L340:
2481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_
 4119              		.loc 1 2481 0
 4120 00b0 628D     		ldrh	r2, [r4, #42]
 4121 00b2 92B2     		uxth	r2, r2
 4122 00b4 2285     		strh	r2, [r4, #40]	@ movhi
2482:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4123              		.loc 1 2482 0
 4124 00b6 3C4B     		ldr	r3, .L355
 4125 00b8 0093     		str	r3, [sp]
 4126 00ba 4FF00073 		mov	r3, #33554432
 4127 00be D2B2     		uxtb	r2, r2
 4128 00c0 2946     		mov	r1, r5
 4129 00c2 2046     		mov	r0, r4
 4130 00c4 FFF7FEFF 		bl	I2C_TransferConfig
 4131              	.LVL325:
 4132 00c8 0FE0     		b	.L344
 4133              	.L343:
2517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_ST
 4134              		.loc 1 2517 0
 4135 00ca 628D     		ldrh	r2, [r4, #42]
 4136 00cc 92B2     		uxth	r2, r2
 4137 00ce 2285     		strh	r2, [r4, #40]	@ movhi
2518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 4138              		.loc 1 2518 0
 4139 00d0 0023     		movs	r3, #0
 4140 00d2 0093     		str	r3, [sp]
 4141 00d4 4FF00073 		mov	r3, #33554432
 4142 00d8 D2B2     		uxtb	r2, r2
 4143 00da 2946     		mov	r1, r5
 4144 00dc 2046     		mov	r0, r4
 4145 00de FFF7FEFF 		bl	I2C_TransferConfig
 4146              	.LVL326:
 4147              	.L342:
2521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4148              		.loc 1 2521 0
 4149 00e2 638D     		ldrh	r3, [r4, #42]
 4150 00e4 9BB2     		uxth	r3, r3
 4151 00e6 002B     		cmp	r3, #0
 4152 00e8 34D0     		beq	.L354
 4153              	.L344:
2488:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 4154              		.loc 1 2488 0
 4155 00ea 0096     		str	r6, [sp]
 4156 00ec 0C9B     		ldr	r3, [sp, #48]
 4157 00ee 0022     		movs	r2, #0
 4158 00f0 0421     		movs	r1, #4
 4159 00f2 2046     		mov	r0, r4
 4160 00f4 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4161              	.LVL327:
 4162 00f8 0028     		cmp	r0, #0
 4163 00fa 4FD1     		bne	.L348
2494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4164              		.loc 1 2494 0
 4165 00fc 2368     		ldr	r3, [r4]
 4166 00fe 5A6A     		ldr	r2, [r3, #36]
 4167 0100 636A     		ldr	r3, [r4, #36]
 4168 0102 1A70     		strb	r2, [r3]
2497:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4169              		.loc 1 2497 0
 4170 0104 636A     		ldr	r3, [r4, #36]
 4171 0106 0133     		adds	r3, r3, #1
 4172 0108 6362     		str	r3, [r4, #36]
2499:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
 4173              		.loc 1 2499 0
 4174 010a 238D     		ldrh	r3, [r4, #40]
 4175 010c 013B     		subs	r3, r3, #1
 4176 010e 9BB2     		uxth	r3, r3
 4177 0110 2385     		strh	r3, [r4, #40]	@ movhi
2500:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4178              		.loc 1 2500 0
 4179 0112 628D     		ldrh	r2, [r4, #42]
 4180 0114 013A     		subs	r2, r2, #1
 4181 0116 92B2     		uxth	r2, r2
 4182 0118 6285     		strh	r2, [r4, #42]	@ movhi
2502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 4183              		.loc 1 2502 0
 4184 011a 628D     		ldrh	r2, [r4, #42]
 4185 011c 92B2     		uxth	r2, r2
 4186 011e 002A     		cmp	r2, #0
 4187 0120 DFD0     		beq	.L342
2502:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 4188              		.loc 1 2502 0 is_stmt 0 discriminator 1
 4189 0122 002B     		cmp	r3, #0
 4190 0124 DDD1     		bne	.L342
2505:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 4191              		.loc 1 2505 0 is_stmt 1
 4192 0126 0096     		str	r6, [sp]
 4193 0128 0C9B     		ldr	r3, [sp, #48]
 4194 012a 0022     		movs	r2, #0
 4195 012c 8021     		movs	r1, #128
 4196 012e 2046     		mov	r0, r4
 4197 0130 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4198              	.LVL328:
 4199 0134 A0BB     		cbnz	r0, .L349
2510:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 4200              		.loc 1 2510 0
 4201 0136 638D     		ldrh	r3, [r4, #42]
 4202 0138 9BB2     		uxth	r3, r3
 4203 013a FF2B     		cmp	r3, #255
 4204 013c C5D9     		bls	.L343
2512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_ST
 4205              		.loc 1 2512 0
 4206 013e FF22     		movs	r2, #255
 4207 0140 2285     		strh	r2, [r4, #40]	@ movhi
2513:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 4208              		.loc 1 2513 0
 4209 0142 0023     		movs	r3, #0
 4210 0144 0093     		str	r3, [sp]
 4211 0146 4FF08073 		mov	r3, #16777216
 4212 014a 2946     		mov	r1, r5
 4213 014c 2046     		mov	r0, r4
 4214 014e FFF7FEFF 		bl	I2C_TransferConfig
 4215              	.LVL329:
 4216 0152 C6E7     		b	.L342
 4217              	.L354:
2525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4218              		.loc 1 2525 0
 4219 0154 3246     		mov	r2, r6
 4220 0156 0C99     		ldr	r1, [sp, #48]
 4221 0158 2046     		mov	r0, r4
 4222 015a FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4223              	.LVL330:
 4224 015e 0346     		mov	r3, r0
 4225 0160 00BB     		cbnz	r0, .L350
2531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4226              		.loc 1 2531 0
 4227 0162 2268     		ldr	r2, [r4]
 4228 0164 2021     		movs	r1, #32
 4229 0166 D161     		str	r1, [r2, #28]
2534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4230              		.loc 1 2534 0
 4231 0168 2068     		ldr	r0, [r4]
 4232 016a 4268     		ldr	r2, [r0, #4]
 4233 016c 22F0FF72 		bic	r2, r2, #33423360
 4234 0170 22F48B32 		bic	r2, r2, #71168
 4235 0174 22F4FF72 		bic	r2, r2, #510
 4236 0178 22F00102 		bic	r2, r2, #1
 4237 017c 4260     		str	r2, [r0, #4]
2536:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4238              		.loc 1 2536 0
 4239 017e 84F84110 		strb	r1, [r4, #65]
2537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4240              		.loc 1 2537 0
 4241 0182 0022     		movs	r2, #0
 4242 0184 84F84220 		strb	r2, [r4, #66]
2540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4243              		.loc 1 2540 0
 4244 0188 84F84020 		strb	r2, [r4, #64]
2542:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 4245              		.loc 1 2542 0
 4246 018c 00E0     		b	.L336
 4247              	.LVL331:
 4248              	.L345:
2546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 4249              		.loc 1 2546 0
 4250 018e 0223     		movs	r3, #2
 4251              	.LVL332:
 4252              	.L336:
2548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 4253              		.loc 1 2548 0
 4254 0190 1846     		mov	r0, r3
 4255 0192 02B0     		add	sp, sp, #8
 4256              		.cfi_remember_state
 4257              		.cfi_def_cfa_offset 32
 4258              		@ sp needed
 4259 0194 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4260              	.LVL333:
 4261              	.L346:
 4262              		.cfi_restore_state
2445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4263              		.loc 1 2445 0
 4264 0198 0223     		movs	r3, #2
 4265              	.LVL334:
 4266 019a F9E7     		b	.L336
 4267              	.LVL335:
 4268              	.L348:
2490:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 4269              		.loc 1 2490 0
 4270 019c 0123     		movs	r3, #1
 4271 019e F7E7     		b	.L336
 4272              	.L349:
2507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 4273              		.loc 1 2507 0
 4274 01a0 0123     		movs	r3, #1
 4275 01a2 F5E7     		b	.L336
 4276              	.L350:
2527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4277              		.loc 1 2527 0
 4278 01a4 0123     		movs	r3, #1
 4279 01a6 F3E7     		b	.L336
 4280              	.L356:
 4281              		.align	2
 4282              	.L355:
 4283 01a8 00240080 		.word	-2147474432
 4284              		.cfi_endproc
 4285              	.LFE334:
 4287              		.section	.text.HAL_I2C_Mem_Write_IT,"ax",%progbits
 4288              		.align	1
 4289              		.global	HAL_I2C_Mem_Write_IT
 4290              		.syntax unified
 4291              		.thumb
 4292              		.thumb_func
 4293              		.fpu fpv4-sp-d16
 4295              	HAL_I2C_Mem_Write_IT:
 4296              	.LFB335:
2563:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
 4297              		.loc 1 2563 0
 4298              		.cfi_startproc
 4299              		@ args = 8, pretend = 0, frame = 0
 4300              		@ frame_needed = 0, uses_anonymous_args = 0
 4301              	.LVL336:
 4302 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4303              		.cfi_def_cfa_offset 24
 4304              		.cfi_offset 4, -24
 4305              		.cfi_offset 5, -20
 4306              		.cfi_offset 6, -16
 4307              		.cfi_offset 7, -12
 4308              		.cfi_offset 8, -8
 4309              		.cfi_offset 14, -4
 4310 0004 82B0     		sub	sp, sp, #8
 4311              		.cfi_def_cfa_offset 32
 4312 0006 BDF82460 		ldrh	r6, [sp, #36]
2570:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 4313              		.loc 1 2570 0
 4314 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4315 000e E4B2     		uxtb	r4, r4
 4316 0010 202C     		cmp	r4, #32
 4317 0012 59D1     		bne	.L364
2572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4318              		.loc 1 2572 0
 4319 0014 089C     		ldr	r4, [sp, #32]
 4320 0016 002C     		cmp	r4, #0
 4321 0018 3AD0     		beq	.L359
2572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4322              		.loc 1 2572 0 is_stmt 0 discriminator 1
 4323 001a 002E     		cmp	r6, #0
 4324 001c 38D0     		beq	.L359
2578:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4325              		.loc 1 2578 0 is_stmt 1
 4326 001e 0468     		ldr	r4, [r0]
 4327 0020 A469     		ldr	r4, [r4, #24]
 4328 0022 14F4004F 		tst	r4, #32768
 4329 0026 54D1     		bne	.L365
2584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4330              		.loc 1 2584 0
 4331 0028 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4332 002c 012C     		cmp	r4, #1
 4333 002e 52D0     		beq	.L366
 4334 0030 9846     		mov	r8, r3
 4335 0032 1446     		mov	r4, r2
 4336 0034 0F46     		mov	r7, r1
 4337 0036 0546     		mov	r5, r0
2584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4338              		.loc 1 2584 0 is_stmt 0 discriminator 2
 4339 0038 0123     		movs	r3, #1
 4340              	.LVL337:
 4341 003a 80F84030 		strb	r3, [r0, #64]
2587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4342              		.loc 1 2587 0 is_stmt 1 discriminator 2
 4343 003e FFF7FEFF 		bl	HAL_GetTick
 4344              	.LVL338:
2589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4345              		.loc 1 2589 0 discriminator 2
 4346 0042 2123     		movs	r3, #33
 4347 0044 85F84130 		strb	r3, [r5, #65]
2590:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4348              		.loc 1 2590 0 discriminator 2
 4349 0048 4023     		movs	r3, #64
 4350 004a 85F84230 		strb	r3, [r5, #66]
2591:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4351              		.loc 1 2591 0 discriminator 2
 4352 004e 0023     		movs	r3, #0
 4353 0050 6B64     		str	r3, [r5, #68]
2594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4354              		.loc 1 2594 0 discriminator 2
 4355 0052 089B     		ldr	r3, [sp, #32]
 4356 0054 6B62     		str	r3, [r5, #36]
2595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4357              		.loc 1 2595 0 discriminator 2
 4358 0056 6E85     		strh	r6, [r5, #42]	@ movhi
2596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4359              		.loc 1 2596 0 discriminator 2
 4360 0058 204B     		ldr	r3, .L368
 4361 005a EB62     		str	r3, [r5, #44]
2597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4362              		.loc 1 2597 0 discriminator 2
 4363 005c 204B     		ldr	r3, .L368+4
 4364 005e 6B63     		str	r3, [r5, #52]
2599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4365              		.loc 1 2599 0 discriminator 2
 4366 0060 6B8D     		ldrh	r3, [r5, #42]
 4367 0062 9BB2     		uxth	r3, r3
 4368 0064 FF2B     		cmp	r3, #255
 4369 0066 18D9     		bls	.L361
2601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4370              		.loc 1 2601 0
 4371 0068 FF23     		movs	r3, #255
 4372 006a 2B85     		strh	r3, [r5, #40]	@ movhi
 4373              	.LVL339:
2602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4374              		.loc 1 2602 0
 4375 006c 4FF08076 		mov	r6, #16777216
 4376              	.LVL340:
 4377              	.L362:
2611:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4378              		.loc 1 2611 0
 4379 0070 0190     		str	r0, [sp, #4]
 4380 0072 1923     		movs	r3, #25
 4381 0074 0093     		str	r3, [sp]
 4382 0076 4346     		mov	r3, r8
 4383 0078 2246     		mov	r2, r4
 4384 007a 3946     		mov	r1, r7
 4385 007c 2846     		mov	r0, r5
 4386              	.LVL341:
 4387 007e FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4388              	.LVL342:
 4389 0082 0446     		mov	r4, r0
 4390 0084 70B1     		cbz	r0, .L363
2614:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 4391              		.loc 1 2614 0
 4392 0086 0023     		movs	r3, #0
 4393 0088 85F84030 		strb	r3, [r5, #64]
2615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4394              		.loc 1 2615 0
 4395 008c 0124     		movs	r4, #1
 4396 008e 1CE0     		b	.L358
 4397              	.LVL343:
 4398              	.L359:
2574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 4399              		.loc 1 2574 0
 4400 0090 4FF40073 		mov	r3, #512
 4401              	.LVL344:
 4402 0094 4364     		str	r3, [r0, #68]
2575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4403              		.loc 1 2575 0
 4404 0096 0124     		movs	r4, #1
 4405 0098 17E0     		b	.L358
 4406              	.LVL345:
 4407              	.L361:
2606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4408              		.loc 1 2606 0
 4409 009a 6B8D     		ldrh	r3, [r5, #42]
 4410 009c 2B85     		strh	r3, [r5, #40]	@ movhi
 4411              	.LVL346:
2607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4412              		.loc 1 2607 0
 4413 009e 4FF00076 		mov	r6, #33554432
 4414 00a2 E5E7     		b	.L362
 4415              	.LVL347:
 4416              	.L363:
2619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4417              		.loc 1 2619 0
 4418 00a4 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 4419 00a8 4FF00008 		mov	r8, #0
 4420 00ac CDF80080 		str	r8, [sp]
 4421 00b0 3346     		mov	r3, r6
 4422 00b2 3946     		mov	r1, r7
 4423 00b4 2846     		mov	r0, r5
 4424 00b6 FFF7FEFF 		bl	I2C_TransferConfig
 4425              	.LVL348:
2622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4426              		.loc 1 2622 0
 4427 00ba 85F84080 		strb	r8, [r5, #64]
2631:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4428              		.loc 1 2631 0
 4429 00be 0121     		movs	r1, #1
 4430 00c0 2846     		mov	r0, r5
 4431 00c2 FFF7FEFF 		bl	I2C_Enable_IRQ
 4432              	.LVL349:
2633:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 4433              		.loc 1 2633 0
 4434 00c6 00E0     		b	.L358
 4435              	.LVL350:
 4436              	.L364:
2637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 4437              		.loc 1 2637 0
 4438 00c8 0224     		movs	r4, #2
 4439              	.LVL351:
 4440              	.L358:
2639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4441              		.loc 1 2639 0
 4442 00ca 2046     		mov	r0, r4
 4443 00cc 02B0     		add	sp, sp, #8
 4444              		.cfi_remember_state
 4445              		.cfi_def_cfa_offset 24
 4446              		@ sp needed
 4447 00ce BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4448              	.LVL352:
 4449              	.L365:
 4450              		.cfi_restore_state
2580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4451              		.loc 1 2580 0
 4452 00d2 0224     		movs	r4, #2
 4453 00d4 F9E7     		b	.L358
 4454              	.L366:
2584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4455              		.loc 1 2584 0
 4456 00d6 0224     		movs	r4, #2
 4457 00d8 F7E7     		b	.L358
 4458              	.L369:
 4459 00da 00BF     		.align	2
 4460              	.L368:
 4461 00dc 0000FFFF 		.word	-65536
 4462 00e0 00000000 		.word	I2C_Master_ISR_IT
 4463              		.cfi_endproc
 4464              	.LFE335:
 4466              		.section	.text.HAL_I2C_Mem_Read_IT,"ax",%progbits
 4467              		.align	1
 4468              		.global	HAL_I2C_Mem_Read_IT
 4469              		.syntax unified
 4470              		.thumb
 4471              		.thumb_func
 4472              		.fpu fpv4-sp-d16
 4474              	HAL_I2C_Mem_Read_IT:
 4475              	.LFB336:
2655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
 4476              		.loc 1 2655 0
 4477              		.cfi_startproc
 4478              		@ args = 8, pretend = 0, frame = 0
 4479              		@ frame_needed = 0, uses_anonymous_args = 0
 4480              	.LVL353:
 4481 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4482              		.cfi_def_cfa_offset 24
 4483              		.cfi_offset 4, -24
 4484              		.cfi_offset 5, -20
 4485              		.cfi_offset 6, -16
 4486              		.cfi_offset 7, -12
 4487              		.cfi_offset 8, -8
 4488              		.cfi_offset 14, -4
 4489 0004 82B0     		sub	sp, sp, #8
 4490              		.cfi_def_cfa_offset 32
 4491 0006 BDF82460 		ldrh	r6, [sp, #36]
2662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 4492              		.loc 1 2662 0
 4493 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4494 000e E4B2     		uxtb	r4, r4
 4495 0010 202C     		cmp	r4, #32
 4496 0012 58D1     		bne	.L377
2664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4497              		.loc 1 2664 0
 4498 0014 089C     		ldr	r4, [sp, #32]
 4499 0016 002C     		cmp	r4, #0
 4500 0018 3AD0     		beq	.L372
2664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4501              		.loc 1 2664 0 is_stmt 0 discriminator 1
 4502 001a 002E     		cmp	r6, #0
 4503 001c 38D0     		beq	.L372
2670:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4504              		.loc 1 2670 0 is_stmt 1
 4505 001e 0468     		ldr	r4, [r0]
 4506 0020 A469     		ldr	r4, [r4, #24]
 4507 0022 14F4004F 		tst	r4, #32768
 4508 0026 53D1     		bne	.L378
2676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4509              		.loc 1 2676 0
 4510 0028 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4511 002c 012C     		cmp	r4, #1
 4512 002e 51D0     		beq	.L379
 4513 0030 9846     		mov	r8, r3
 4514 0032 1446     		mov	r4, r2
 4515 0034 0F46     		mov	r7, r1
 4516 0036 0546     		mov	r5, r0
2676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4517              		.loc 1 2676 0 is_stmt 0 discriminator 2
 4518 0038 0123     		movs	r3, #1
 4519              	.LVL354:
 4520 003a 80F84030 		strb	r3, [r0, #64]
2679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4521              		.loc 1 2679 0 is_stmt 1 discriminator 2
 4522 003e FFF7FEFF 		bl	HAL_GetTick
 4523              	.LVL355:
2681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4524              		.loc 1 2681 0 discriminator 2
 4525 0042 2223     		movs	r3, #34
 4526 0044 85F84130 		strb	r3, [r5, #65]
2682:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4527              		.loc 1 2682 0 discriminator 2
 4528 0048 4023     		movs	r3, #64
 4529 004a 85F84230 		strb	r3, [r5, #66]
2683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4530              		.loc 1 2683 0 discriminator 2
 4531 004e 0023     		movs	r3, #0
 4532 0050 6B64     		str	r3, [r5, #68]
2686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4533              		.loc 1 2686 0 discriminator 2
 4534 0052 089B     		ldr	r3, [sp, #32]
 4535 0054 6B62     		str	r3, [r5, #36]
2687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4536              		.loc 1 2687 0 discriminator 2
 4537 0056 6E85     		strh	r6, [r5, #42]	@ movhi
2688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4538              		.loc 1 2688 0 discriminator 2
 4539 0058 1F4B     		ldr	r3, .L381
 4540 005a EB62     		str	r3, [r5, #44]
2689:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4541              		.loc 1 2689 0 discriminator 2
 4542 005c 1F4B     		ldr	r3, .L381+4
 4543 005e 6B63     		str	r3, [r5, #52]
2691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4544              		.loc 1 2691 0 discriminator 2
 4545 0060 6B8D     		ldrh	r3, [r5, #42]
 4546 0062 9BB2     		uxth	r3, r3
 4547 0064 FF2B     		cmp	r3, #255
 4548 0066 18D9     		bls	.L374
2693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4549              		.loc 1 2693 0
 4550 0068 FF23     		movs	r3, #255
 4551 006a 2B85     		strh	r3, [r5, #40]	@ movhi
 4552              	.LVL356:
2694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4553              		.loc 1 2694 0
 4554 006c 4FF08076 		mov	r6, #16777216
 4555              	.LVL357:
 4556              	.L375:
2703:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4557              		.loc 1 2703 0
 4558 0070 0190     		str	r0, [sp, #4]
 4559 0072 1923     		movs	r3, #25
 4560 0074 0093     		str	r3, [sp]
 4561 0076 4346     		mov	r3, r8
 4562 0078 2246     		mov	r2, r4
 4563 007a 3946     		mov	r1, r7
 4564 007c 2846     		mov	r0, r5
 4565              	.LVL358:
 4566 007e FFF7FEFF 		bl	I2C_RequestMemoryRead
 4567              	.LVL359:
 4568 0082 0446     		mov	r4, r0
 4569 0084 70B1     		cbz	r0, .L376
2706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 4570              		.loc 1 2706 0
 4571 0086 0023     		movs	r3, #0
 4572 0088 85F84030 		strb	r3, [r5, #64]
2707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4573              		.loc 1 2707 0
 4574 008c 0124     		movs	r4, #1
 4575 008e 1BE0     		b	.L371
 4576              	.LVL360:
 4577              	.L372:
2666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 4578              		.loc 1 2666 0
 4579 0090 4FF40073 		mov	r3, #512
 4580              	.LVL361:
 4581 0094 4364     		str	r3, [r0, #68]
2667:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4582              		.loc 1 2667 0
 4583 0096 0124     		movs	r4, #1
 4584 0098 16E0     		b	.L371
 4585              	.LVL362:
 4586              	.L374:
2698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4587              		.loc 1 2698 0
 4588 009a 6B8D     		ldrh	r3, [r5, #42]
 4589 009c 2B85     		strh	r3, [r5, #40]	@ movhi
 4590              	.LVL363:
2699:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4591              		.loc 1 2699 0
 4592 009e 4FF00076 		mov	r6, #33554432
 4593 00a2 E5E7     		b	.L375
 4594              	.LVL364:
 4595              	.L376:
2711:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4596              		.loc 1 2711 0
 4597 00a4 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 4598 00a8 0D4B     		ldr	r3, .L381+8
 4599 00aa 0093     		str	r3, [sp]
 4600 00ac 3346     		mov	r3, r6
 4601 00ae 3946     		mov	r1, r7
 4602 00b0 2846     		mov	r0, r5
 4603 00b2 FFF7FEFF 		bl	I2C_TransferConfig
 4604              	.LVL365:
2714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4605              		.loc 1 2714 0
 4606 00b6 0023     		movs	r3, #0
 4607 00b8 85F84030 		strb	r3, [r5, #64]
2723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4608              		.loc 1 2723 0
 4609 00bc 0221     		movs	r1, #2
 4610 00be 2846     		mov	r0, r5
 4611 00c0 FFF7FEFF 		bl	I2C_Enable_IRQ
 4612              	.LVL366:
2725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 4613              		.loc 1 2725 0
 4614 00c4 00E0     		b	.L371
 4615              	.LVL367:
 4616              	.L377:
2729:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 4617              		.loc 1 2729 0
 4618 00c6 0224     		movs	r4, #2
 4619              	.LVL368:
 4620              	.L371:
2731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** /**
 4621              		.loc 1 2731 0
 4622 00c8 2046     		mov	r0, r4
 4623 00ca 02B0     		add	sp, sp, #8
 4624              		.cfi_remember_state
 4625              		.cfi_def_cfa_offset 24
 4626              		@ sp needed
 4627 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4628              	.LVL369:
 4629              	.L378:
 4630              		.cfi_restore_state
2672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4631              		.loc 1 2672 0
 4632 00d0 0224     		movs	r4, #2
 4633 00d2 F9E7     		b	.L371
 4634              	.L379:
2676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4635              		.loc 1 2676 0
 4636 00d4 0224     		movs	r4, #2
 4637 00d6 F7E7     		b	.L371
 4638              	.L382:
 4639              		.align	2
 4640              	.L381:
 4641 00d8 0000FFFF 		.word	-65536
 4642 00dc 00000000 		.word	I2C_Master_ISR_IT
 4643 00e0 00240080 		.word	-2147474432
 4644              		.cfi_endproc
 4645              	.LFE336:
 4647              		.section	.text.HAL_I2C_Mem_Write_DMA,"ax",%progbits
 4648              		.align	1
 4649              		.global	HAL_I2C_Mem_Write_DMA
 4650              		.syntax unified
 4651              		.thumb
 4652              		.thumb_func
 4653              		.fpu fpv4-sp-d16
 4655              	HAL_I2C_Mem_Write_DMA:
 4656              	.LFB337:
2746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
 4657              		.loc 1 2746 0
 4658              		.cfi_startproc
 4659              		@ args = 8, pretend = 0, frame = 0
 4660              		@ frame_needed = 0, uses_anonymous_args = 0
 4661              	.LVL370:
 4662 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4663              		.cfi_def_cfa_offset 24
 4664              		.cfi_offset 4, -24
 4665              		.cfi_offset 5, -20
 4666              		.cfi_offset 6, -16
 4667              		.cfi_offset 7, -12
 4668              		.cfi_offset 8, -8
 4669              		.cfi_offset 14, -4
 4670 0004 82B0     		sub	sp, sp, #8
 4671              		.cfi_def_cfa_offset 32
 4672 0006 BDF82460 		ldrh	r6, [sp, #36]
2754:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 4673              		.loc 1 2754 0
 4674 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4675 000e E4B2     		uxtb	r4, r4
 4676 0010 202C     		cmp	r4, #32
 4677 0012 40F09880 		bne	.L393
2756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4678              		.loc 1 2756 0
 4679 0016 089C     		ldr	r4, [sp, #32]
 4680 0018 002C     		cmp	r4, #0
 4681 001a 5BD0     		beq	.L385
2756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4682              		.loc 1 2756 0 is_stmt 0 discriminator 1
 4683 001c 002E     		cmp	r6, #0
 4684 001e 59D0     		beq	.L385
2762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4685              		.loc 1 2762 0 is_stmt 1
 4686 0020 0468     		ldr	r4, [r0]
 4687 0022 A469     		ldr	r4, [r4, #24]
 4688 0024 14F4004F 		tst	r4, #32768
 4689 0028 40F09280 		bne	.L394
2768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4690              		.loc 1 2768 0
 4691 002c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4692 0030 012C     		cmp	r4, #1
 4693 0032 00F08F80 		beq	.L395
 4694 0036 9846     		mov	r8, r3
 4695 0038 1446     		mov	r4, r2
 4696 003a 0F46     		mov	r7, r1
 4697 003c 0546     		mov	r5, r0
2768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4698              		.loc 1 2768 0 is_stmt 0 discriminator 2
 4699 003e 0123     		movs	r3, #1
 4700              	.LVL371:
 4701 0040 80F84030 		strb	r3, [r0, #64]
2771:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4702              		.loc 1 2771 0 is_stmt 1 discriminator 2
 4703 0044 FFF7FEFF 		bl	HAL_GetTick
 4704              	.LVL372:
2773:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4705              		.loc 1 2773 0 discriminator 2
 4706 0048 2123     		movs	r3, #33
 4707 004a 85F84130 		strb	r3, [r5, #65]
2774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4708              		.loc 1 2774 0 discriminator 2
 4709 004e 4023     		movs	r3, #64
 4710 0050 85F84230 		strb	r3, [r5, #66]
2775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4711              		.loc 1 2775 0 discriminator 2
 4712 0054 0023     		movs	r3, #0
 4713 0056 6B64     		str	r3, [r5, #68]
2778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4714              		.loc 1 2778 0 discriminator 2
 4715 0058 089B     		ldr	r3, [sp, #32]
 4716 005a 6B62     		str	r3, [r5, #36]
2779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4717              		.loc 1 2779 0 discriminator 2
 4718 005c 6E85     		strh	r6, [r5, #42]	@ movhi
2780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4719              		.loc 1 2780 0 discriminator 2
 4720 005e 3E4B     		ldr	r3, .L400
 4721 0060 EB62     		str	r3, [r5, #44]
2781:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4722              		.loc 1 2781 0 discriminator 2
 4723 0062 3E4B     		ldr	r3, .L400+4
 4724 0064 6B63     		str	r3, [r5, #52]
2783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4725              		.loc 1 2783 0 discriminator 2
 4726 0066 6B8D     		ldrh	r3, [r5, #42]
 4727 0068 9BB2     		uxth	r3, r3
 4728 006a FF2B     		cmp	r3, #255
 4729 006c 37D9     		bls	.L387
2785:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4730              		.loc 1 2785 0
 4731 006e FF23     		movs	r3, #255
 4732 0070 2B85     		strh	r3, [r5, #40]	@ movhi
 4733              	.LVL373:
2786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4734              		.loc 1 2786 0
 4735 0072 4FF08076 		mov	r6, #16777216
 4736              	.LVL374:
 4737              	.L388:
2795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4738              		.loc 1 2795 0
 4739 0076 0190     		str	r0, [sp, #4]
 4740 0078 1923     		movs	r3, #25
 4741 007a 0093     		str	r3, [sp]
 4742 007c 4346     		mov	r3, r8
 4743 007e 2246     		mov	r2, r4
 4744 0080 3946     		mov	r1, r7
 4745 0082 2846     		mov	r0, r5
 4746              	.LVL375:
 4747 0084 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4748              	.LVL376:
 4749 0088 0028     		cmp	r0, #0
 4750 008a 2DD1     		bne	.L398
2803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4751              		.loc 1 2803 0
 4752 008c AB6B     		ldr	r3, [r5, #56]
 4753 008e 002B     		cmp	r3, #0
 4754 0090 2FD0     		beq	.L390
2806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4755              		.loc 1 2806 0
 4756 0092 334A     		ldr	r2, .L400+8
 4757 0094 DA62     		str	r2, [r3, #44]
2809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4758              		.loc 1 2809 0
 4759 0096 AB6B     		ldr	r3, [r5, #56]
 4760 0098 324A     		ldr	r2, .L400+12
 4761 009a 5A63     		str	r2, [r3, #52]
2812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 4762              		.loc 1 2812 0
 4763 009c AA6B     		ldr	r2, [r5, #56]
 4764 009e 0023     		movs	r3, #0
 4765 00a0 1363     		str	r3, [r2, #48]
2813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4766              		.loc 1 2813 0
 4767 00a2 AA6B     		ldr	r2, [r5, #56]
 4768 00a4 9363     		str	r3, [r2, #56]
2816:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4769              		.loc 1 2816 0
 4770 00a6 2A68     		ldr	r2, [r5]
 4771 00a8 2B8D     		ldrh	r3, [r5, #40]
 4772 00aa 2832     		adds	r2, r2, #40
 4773 00ac 0899     		ldr	r1, [sp, #32]
 4774 00ae A86B     		ldr	r0, [r5, #56]
 4775 00b0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4776              	.LVL377:
2833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4777              		.loc 1 2833 0
 4778 00b4 0446     		mov	r4, r0
 4779 00b6 50B3     		cbz	r0, .L399
2857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4780              		.loc 1 2857 0
 4781 00b8 2023     		movs	r3, #32
 4782 00ba 85F84130 		strb	r3, [r5, #65]
2858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4783              		.loc 1 2858 0
 4784 00be 0022     		movs	r2, #0
 4785 00c0 85F84220 		strb	r2, [r5, #66]
2861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4786              		.loc 1 2861 0
 4787 00c4 6B6C     		ldr	r3, [r5, #68]
 4788 00c6 43F01003 		orr	r3, r3, #16
 4789 00ca 6B64     		str	r3, [r5, #68]
2864:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4790              		.loc 1 2864 0
 4791 00cc 85F84020 		strb	r2, [r5, #64]
2866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4792              		.loc 1 2866 0
 4793 00d0 0124     		movs	r4, #1
 4794 00d2 39E0     		b	.L384
 4795              	.LVL378:
 4796              	.L385:
2758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 4797              		.loc 1 2758 0
 4798 00d4 4FF40073 		mov	r3, #512
 4799              	.LVL379:
 4800 00d8 4364     		str	r3, [r0, #68]
2759:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4801              		.loc 1 2759 0
 4802 00da 0124     		movs	r4, #1
 4803 00dc 34E0     		b	.L384
 4804              	.LVL380:
 4805              	.L387:
2790:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4806              		.loc 1 2790 0
 4807 00de 6B8D     		ldrh	r3, [r5, #42]
 4808 00e0 2B85     		strh	r3, [r5, #40]	@ movhi
 4809              	.LVL381:
2791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4810              		.loc 1 2791 0
 4811 00e2 4FF00076 		mov	r6, #33554432
 4812 00e6 C6E7     		b	.L388
 4813              	.LVL382:
 4814              	.L398:
2798:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 4815              		.loc 1 2798 0
 4816 00e8 0023     		movs	r3, #0
 4817 00ea 85F84030 		strb	r3, [r5, #64]
2799:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4818              		.loc 1 2799 0
 4819 00ee 0124     		movs	r4, #1
 4820 00f0 2AE0     		b	.L384
 4821              	.L390:
2821:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 4822              		.loc 1 2821 0
 4823 00f2 2023     		movs	r3, #32
 4824 00f4 85F84130 		strb	r3, [r5, #65]
2822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4825              		.loc 1 2822 0
 4826 00f8 0022     		movs	r2, #0
 4827 00fa 85F84220 		strb	r2, [r5, #66]
2825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4828              		.loc 1 2825 0
 4829 00fe 6B6C     		ldr	r3, [r5, #68]
 4830 0100 43F08003 		orr	r3, r3, #128
 4831 0104 6B64     		str	r3, [r5, #68]
2828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4832              		.loc 1 2828 0
 4833 0106 85F84020 		strb	r2, [r5, #64]
2830:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4834              		.loc 1 2830 0
 4835 010a 0124     		movs	r4, #1
 4836 010c 1CE0     		b	.L384
 4837              	.LVL383:
 4838              	.L399:
2837:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4839              		.loc 1 2837 0
 4840 010e 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 4841 0112 4FF00008 		mov	r8, #0
 4842 0116 CDF80080 		str	r8, [sp]
 4843 011a 3346     		mov	r3, r6
 4844 011c 3946     		mov	r1, r7
 4845 011e 2846     		mov	r0, r5
 4846              	.LVL384:
 4847 0120 FFF7FEFF 		bl	I2C_TransferConfig
 4848              	.LVL385:
2840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4849              		.loc 1 2840 0
 4850 0124 6B8D     		ldrh	r3, [r5, #42]
 4851 0126 2A8D     		ldrh	r2, [r5, #40]
 4852 0128 9B1A     		subs	r3, r3, r2
 4853 012a 9BB2     		uxth	r3, r3
 4854 012c 6B85     		strh	r3, [r5, #42]	@ movhi
2843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4855              		.loc 1 2843 0
 4856 012e 85F84080 		strb	r8, [r5, #64]
2849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4857              		.loc 1 2849 0
 4858 0132 1021     		movs	r1, #16
 4859 0134 2846     		mov	r0, r5
 4860 0136 FFF7FEFF 		bl	I2C_Enable_IRQ
 4861              	.LVL386:
2852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4862              		.loc 1 2852 0
 4863 013a 2A68     		ldr	r2, [r5]
 4864 013c 1368     		ldr	r3, [r2]
 4865 013e 43F48043 		orr	r3, r3, #16384
 4866 0142 1360     		str	r3, [r2]
2869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 4867              		.loc 1 2869 0
 4868 0144 00E0     		b	.L384
 4869              	.LVL387:
 4870              	.L393:
2873:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 4871              		.loc 1 2873 0
 4872 0146 0224     		movs	r4, #2
 4873              	.LVL388:
 4874              	.L384:
2875:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4875              		.loc 1 2875 0
 4876 0148 2046     		mov	r0, r4
 4877 014a 02B0     		add	sp, sp, #8
 4878              		.cfi_remember_state
 4879              		.cfi_def_cfa_offset 24
 4880              		@ sp needed
 4881 014c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4882              	.LVL389:
 4883              	.L394:
 4884              		.cfi_restore_state
2764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4885              		.loc 1 2764 0
 4886 0150 0224     		movs	r4, #2
 4887 0152 F9E7     		b	.L384
 4888              	.L395:
2768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4889              		.loc 1 2768 0
 4890 0154 0224     		movs	r4, #2
 4891 0156 F7E7     		b	.L384
 4892              	.L401:
 4893              		.align	2
 4894              	.L400:
 4895 0158 0000FFFF 		.word	-65536
 4896 015c 00000000 		.word	I2C_Master_ISR_DMA
 4897 0160 00000000 		.word	I2C_DMAMasterTransmitCplt
 4898 0164 00000000 		.word	I2C_DMAError
 4899              		.cfi_endproc
 4900              	.LFE337:
 4902              		.section	.text.HAL_I2C_Mem_Read_DMA,"ax",%progbits
 4903              		.align	1
 4904              		.global	HAL_I2C_Mem_Read_DMA
 4905              		.syntax unified
 4906              		.thumb
 4907              		.thumb_func
 4908              		.fpu fpv4-sp-d16
 4910              	HAL_I2C_Mem_Read_DMA:
 4911              	.LFB338:
2891:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
 4912              		.loc 1 2891 0
 4913              		.cfi_startproc
 4914              		@ args = 8, pretend = 0, frame = 0
 4915              		@ frame_needed = 0, uses_anonymous_args = 0
 4916              	.LVL390:
 4917 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4918              		.cfi_def_cfa_offset 24
 4919              		.cfi_offset 4, -24
 4920              		.cfi_offset 5, -20
 4921              		.cfi_offset 6, -16
 4922              		.cfi_offset 7, -12
 4923              		.cfi_offset 8, -8
 4924              		.cfi_offset 14, -4
 4925 0004 82B0     		sub	sp, sp, #8
 4926              		.cfi_def_cfa_offset 32
 4927 0006 BDF82460 		ldrh	r6, [sp, #36]
2899:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 4928              		.loc 1 2899 0
 4929 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 4930 000e E4B2     		uxtb	r4, r4
 4931 0010 202C     		cmp	r4, #32
 4932 0012 40F09780 		bne	.L412
2901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4933              		.loc 1 2901 0
 4934 0016 089C     		ldr	r4, [sp, #32]
 4935 0018 002C     		cmp	r4, #0
 4936 001a 5BD0     		beq	.L404
2901:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4937              		.loc 1 2901 0 is_stmt 0 discriminator 1
 4938 001c 002E     		cmp	r6, #0
 4939 001e 59D0     		beq	.L404
2907:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4940              		.loc 1 2907 0 is_stmt 1
 4941 0020 0468     		ldr	r4, [r0]
 4942 0022 A469     		ldr	r4, [r4, #24]
 4943 0024 14F4004F 		tst	r4, #32768
 4944 0028 40F09180 		bne	.L413
2913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4945              		.loc 1 2913 0
 4946 002c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 4947 0030 012C     		cmp	r4, #1
 4948 0032 00F08E80 		beq	.L414
 4949 0036 9846     		mov	r8, r3
 4950 0038 1446     		mov	r4, r2
 4951 003a 0F46     		mov	r7, r1
 4952 003c 0546     		mov	r5, r0
2913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4953              		.loc 1 2913 0 is_stmt 0 discriminator 2
 4954 003e 0123     		movs	r3, #1
 4955              	.LVL391:
 4956 0040 80F84030 		strb	r3, [r0, #64]
2916:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4957              		.loc 1 2916 0 is_stmt 1 discriminator 2
 4958 0044 FFF7FEFF 		bl	HAL_GetTick
 4959              	.LVL392:
2918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4960              		.loc 1 2918 0 discriminator 2
 4961 0048 2223     		movs	r3, #34
 4962 004a 85F84130 		strb	r3, [r5, #65]
2919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4963              		.loc 1 2919 0 discriminator 2
 4964 004e 4023     		movs	r3, #64
 4965 0050 85F84230 		strb	r3, [r5, #66]
2920:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4966              		.loc 1 2920 0 discriminator 2
 4967 0054 0023     		movs	r3, #0
 4968 0056 6B64     		str	r3, [r5, #68]
2923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4969              		.loc 1 2923 0 discriminator 2
 4970 0058 089B     		ldr	r3, [sp, #32]
 4971 005a 6B62     		str	r3, [r5, #36]
2924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4972              		.loc 1 2924 0 discriminator 2
 4973 005c 6E85     		strh	r6, [r5, #42]	@ movhi
2925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4974              		.loc 1 2925 0 discriminator 2
 4975 005e 3E4B     		ldr	r3, .L419
 4976 0060 EB62     		str	r3, [r5, #44]
2926:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 4977              		.loc 1 2926 0 discriminator 2
 4978 0062 3E4B     		ldr	r3, .L419+4
 4979 0064 6B63     		str	r3, [r5, #52]
2928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4980              		.loc 1 2928 0 discriminator 2
 4981 0066 6B8D     		ldrh	r3, [r5, #42]
 4982 0068 9BB2     		uxth	r3, r3
 4983 006a FF2B     		cmp	r3, #255
 4984 006c 37D9     		bls	.L406
2930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4985              		.loc 1 2930 0
 4986 006e FF23     		movs	r3, #255
 4987 0070 2B85     		strh	r3, [r5, #40]	@ movhi
 4988              	.LVL393:
2931:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 4989              		.loc 1 2931 0
 4990 0072 4FF08076 		mov	r6, #16777216
 4991              	.LVL394:
 4992              	.L407:
2940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 4993              		.loc 1 2940 0
 4994 0076 0190     		str	r0, [sp, #4]
 4995 0078 1923     		movs	r3, #25
 4996 007a 0093     		str	r3, [sp]
 4997 007c 4346     		mov	r3, r8
 4998 007e 2246     		mov	r2, r4
 4999 0080 3946     		mov	r1, r7
 5000 0082 2846     		mov	r0, r5
 5001              	.LVL395:
 5002 0084 FFF7FEFF 		bl	I2C_RequestMemoryRead
 5003              	.LVL396:
 5004 0088 0028     		cmp	r0, #0
 5005 008a 2DD1     		bne	.L417
2947:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5006              		.loc 1 2947 0
 5007 008c EB6B     		ldr	r3, [r5, #60]
 5008 008e 002B     		cmp	r3, #0
 5009 0090 2FD0     		beq	.L409
2950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5010              		.loc 1 2950 0
 5011 0092 334A     		ldr	r2, .L419+8
 5012 0094 DA62     		str	r2, [r3, #44]
2953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5013              		.loc 1 2953 0
 5014 0096 EB6B     		ldr	r3, [r5, #60]
 5015 0098 324A     		ldr	r2, .L419+12
 5016 009a 5A63     		str	r2, [r3, #52]
2956:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 5017              		.loc 1 2956 0
 5018 009c EA6B     		ldr	r2, [r5, #60]
 5019 009e 0023     		movs	r3, #0
 5020 00a0 1363     		str	r3, [r2, #48]
2957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5021              		.loc 1 2957 0
 5022 00a2 EA6B     		ldr	r2, [r5, #60]
 5023 00a4 9363     		str	r3, [r2, #56]
2960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5024              		.loc 1 2960 0
 5025 00a6 2968     		ldr	r1, [r5]
 5026 00a8 2B8D     		ldrh	r3, [r5, #40]
 5027 00aa 089A     		ldr	r2, [sp, #32]
 5028 00ac 2431     		adds	r1, r1, #36
 5029 00ae E86B     		ldr	r0, [r5, #60]
 5030 00b0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5031              	.LVL397:
2977:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5032              		.loc 1 2977 0
 5033 00b4 0446     		mov	r4, r0
 5034 00b6 50B3     		cbz	r0, .L418
3000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5035              		.loc 1 3000 0
 5036 00b8 2023     		movs	r3, #32
 5037 00ba 85F84130 		strb	r3, [r5, #65]
3001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5038              		.loc 1 3001 0
 5039 00be 0022     		movs	r2, #0
 5040 00c0 85F84220 		strb	r2, [r5, #66]
3004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5041              		.loc 1 3004 0
 5042 00c4 6B6C     		ldr	r3, [r5, #68]
 5043 00c6 43F01003 		orr	r3, r3, #16
 5044 00ca 6B64     		str	r3, [r5, #68]
3007:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5045              		.loc 1 3007 0
 5046 00cc 85F84020 		strb	r2, [r5, #64]
3009:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5047              		.loc 1 3009 0
 5048 00d0 0124     		movs	r4, #1
 5049 00d2 38E0     		b	.L403
 5050              	.LVL398:
 5051              	.L404:
2903:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 5052              		.loc 1 2903 0
 5053 00d4 4FF40073 		mov	r3, #512
 5054              	.LVL399:
 5055 00d8 4364     		str	r3, [r0, #68]
2904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5056              		.loc 1 2904 0
 5057 00da 0124     		movs	r4, #1
 5058 00dc 33E0     		b	.L403
 5059              	.LVL400:
 5060              	.L406:
2935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 5061              		.loc 1 2935 0
 5062 00de 6B8D     		ldrh	r3, [r5, #42]
 5063 00e0 2B85     		strh	r3, [r5, #40]	@ movhi
 5064              	.LVL401:
2936:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5065              		.loc 1 2936 0
 5066 00e2 4FF00076 		mov	r6, #33554432
 5067 00e6 C6E7     		b	.L407
 5068              	.LVL402:
 5069              	.L417:
2943:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return HAL_ERROR;
 5070              		.loc 1 2943 0
 5071 00e8 0023     		movs	r3, #0
 5072 00ea 85F84030 		strb	r3, [r5, #64]
2944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5073              		.loc 1 2944 0
 5074 00ee 0124     		movs	r4, #1
 5075 00f0 29E0     		b	.L403
 5076              	.L409:
2965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 5077              		.loc 1 2965 0
 5078 00f2 2023     		movs	r3, #32
 5079 00f4 85F84130 		strb	r3, [r5, #65]
2966:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5080              		.loc 1 2966 0
 5081 00f8 0022     		movs	r2, #0
 5082 00fa 85F84220 		strb	r2, [r5, #66]
2969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5083              		.loc 1 2969 0
 5084 00fe 6B6C     		ldr	r3, [r5, #68]
 5085 0100 43F08003 		orr	r3, r3, #128
 5086 0104 6B64     		str	r3, [r5, #68]
2972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5087              		.loc 1 2972 0
 5088 0106 85F84020 		strb	r2, [r5, #64]
2974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5089              		.loc 1 2974 0
 5090 010a 0124     		movs	r4, #1
 5091 010c 1BE0     		b	.L403
 5092              	.LVL403:
 5093              	.L418:
2980:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5094              		.loc 1 2980 0
 5095 010e 95F82820 		ldrb	r2, [r5, #40]	@ zero_extendqisi2
 5096 0112 154B     		ldr	r3, .L419+16
 5097 0114 0093     		str	r3, [sp]
 5098 0116 3346     		mov	r3, r6
 5099 0118 3946     		mov	r1, r7
 5100 011a 2846     		mov	r0, r5
 5101              	.LVL404:
 5102 011c FFF7FEFF 		bl	I2C_TransferConfig
 5103              	.LVL405:
2983:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5104              		.loc 1 2983 0
 5105 0120 6B8D     		ldrh	r3, [r5, #42]
 5106 0122 2A8D     		ldrh	r2, [r5, #40]
 5107 0124 9B1A     		subs	r3, r3, r2
 5108 0126 9BB2     		uxth	r3, r3
 5109 0128 6B85     		strh	r3, [r5, #42]	@ movhi
2986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5110              		.loc 1 2986 0
 5111 012a 0023     		movs	r3, #0
 5112 012c 85F84030 		strb	r3, [r5, #64]
2992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5113              		.loc 1 2992 0
 5114 0130 1021     		movs	r1, #16
 5115 0132 2846     		mov	r0, r5
 5116 0134 FFF7FEFF 		bl	I2C_Enable_IRQ
 5117              	.LVL406:
2995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5118              		.loc 1 2995 0
 5119 0138 2A68     		ldr	r2, [r5]
 5120 013a 1368     		ldr	r3, [r2]
 5121 013c 43F40043 		orr	r3, r3, #32768
 5122 0140 1360     		str	r3, [r2]
3012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 5123              		.loc 1 3012 0
 5124 0142 00E0     		b	.L403
 5125              	.LVL407:
 5126              	.L412:
3016:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 5127              		.loc 1 3016 0
 5128 0144 0224     		movs	r4, #2
 5129              	.LVL408:
 5130              	.L403:
3018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5131              		.loc 1 3018 0
 5132 0146 2046     		mov	r0, r4
 5133 0148 02B0     		add	sp, sp, #8
 5134              		.cfi_remember_state
 5135              		.cfi_def_cfa_offset 24
 5136              		@ sp needed
 5137 014a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5138              	.LVL409:
 5139              	.L413:
 5140              		.cfi_restore_state
2909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5141              		.loc 1 2909 0
 5142 014e 0224     		movs	r4, #2
 5143 0150 F9E7     		b	.L403
 5144              	.L414:
2913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5145              		.loc 1 2913 0
 5146 0152 0224     		movs	r4, #2
 5147 0154 F7E7     		b	.L403
 5148              	.L420:
 5149 0156 00BF     		.align	2
 5150              	.L419:
 5151 0158 0000FFFF 		.word	-65536
 5152 015c 00000000 		.word	I2C_Master_ISR_DMA
 5153 0160 00000000 		.word	I2C_DMAMasterReceiveCplt
 5154 0164 00000000 		.word	I2C_DMAError
 5155 0168 00240080 		.word	-2147474432
 5156              		.cfi_endproc
 5157              	.LFE338:
 5159              		.section	.text.HAL_I2C_IsDeviceReady,"ax",%progbits
 5160              		.align	1
 5161              		.global	HAL_I2C_IsDeviceReady
 5162              		.syntax unified
 5163              		.thumb
 5164              		.thumb_func
 5165              		.fpu fpv4-sp-d16
 5167              	HAL_I2C_IsDeviceReady:
 5168              	.LFB339:
3032:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tickstart;
 5169              		.loc 1 3032 0
 5170              		.cfi_startproc
 5171              		@ args = 0, pretend = 0, frame = 8
 5172              		@ frame_needed = 0, uses_anonymous_args = 0
 5173              	.LVL410:
 5174 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5175              		.cfi_def_cfa_offset 28
 5176              		.cfi_offset 4, -28
 5177              		.cfi_offset 5, -24
 5178              		.cfi_offset 6, -20
 5179              		.cfi_offset 7, -16
 5180              		.cfi_offset 8, -12
 5181              		.cfi_offset 9, -8
 5182              		.cfi_offset 14, -4
 5183 0004 85B0     		sub	sp, sp, #20
 5184              		.cfi_def_cfa_offset 48
3035:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5185              		.loc 1 3035 0
 5186 0006 0024     		movs	r4, #0
 5187 0008 0394     		str	r4, [sp, #12]
3040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 5188              		.loc 1 3040 0
 5189 000a 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5190 000e E4B2     		uxtb	r4, r4
 5191 0010 202C     		cmp	r4, #32
 5192 0012 40F09E80 		bne	.L433
3042:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5193              		.loc 1 3042 0
 5194 0016 0468     		ldr	r4, [r0]
 5195 0018 A469     		ldr	r4, [r4, #24]
 5196 001a 14F4004F 		tst	r4, #32768
 5197 001e 40F09D80 		bne	.L434
3048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5198              		.loc 1 3048 0
 5199 0022 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5200 0026 012C     		cmp	r4, #1
 5201 0028 00F09A80 		beq	.L435
 5202 002c 1E46     		mov	r6, r3
 5203 002e 9046     		mov	r8, r2
 5204 0030 8946     		mov	r9, r1
 5205 0032 0546     		mov	r5, r0
3048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5206              		.loc 1 3048 0 is_stmt 0 discriminator 2
 5207 0034 0123     		movs	r3, #1
 5208              	.LVL411:
 5209 0036 80F84030 		strb	r3, [r0, #64]
3050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5210              		.loc 1 3050 0 is_stmt 1 discriminator 2
 5211 003a 2423     		movs	r3, #36
 5212 003c 80F84130 		strb	r3, [r0, #65]
3051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5213              		.loc 1 3051 0 discriminator 2
 5214 0040 0023     		movs	r3, #0
 5215 0042 4364     		str	r3, [r0, #68]
 5216 0044 42E0     		b	.L432
 5217              	.LVL412:
 5218              	.L443:
3056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5219              		.loc 1 3056 0 discriminator 1
 5220 0046 C9F30903 		ubfx	r3, r9, #0, #10
 5221 004a 43F00073 		orr	r3, r3, #33554432
 5222 004e 43F40053 		orr	r3, r3, #8192
 5223 0052 42E0     		b	.L424
 5224              	.LVL413:
 5225              	.L426:
3084:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5226              		.loc 1 3084 0
 5227 0054 2B68     		ldr	r3, [r5]
 5228 0056 9C69     		ldr	r4, [r3, #24]
 5229              	.LVL414:
 5230 0058 C4F34014 		ubfx	r4, r4, #5, #1
 5231              	.LVL415:
3085:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 5232              		.loc 1 3085 0
 5233 005c 9B69     		ldr	r3, [r3, #24]
 5234 005e C3F30013 		ubfx	r3, r3, #4, #1
 5235              	.LVL416:
 5236              	.L425:
3065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 5237              		.loc 1 3065 0
 5238 0062 B4B9     		cbnz	r4, .L428
3065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 5239              		.loc 1 3065 0 is_stmt 0 discriminator 1
 5240 0064 ABB9     		cbnz	r3, .L428
3067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 5241              		.loc 1 3067 0 is_stmt 1
 5242 0066 B6F1FF3F 		cmp	r6, #-1
 5243 006a F3D0     		beq	.L426
3069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 5244              		.loc 1 3069 0
 5245 006c FFF7FEFF 		bl	HAL_GetTick
 5246              	.LVL417:
 5247 0070 C01B     		subs	r0, r0, r7
 5248 0072 B042     		cmp	r0, r6
 5249 0074 01D8     		bhi	.L427
3069:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 5250              		.loc 1 3069 0 is_stmt 0 discriminator 1
 5251 0076 002E     		cmp	r6, #0
 5252 0078 ECD1     		bne	.L426
 5253              	.L427:
3072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5254              		.loc 1 3072 0 is_stmt 1
 5255 007a 2023     		movs	r3, #32
 5256 007c 85F84130 		strb	r3, [r5, #65]
3075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5257              		.loc 1 3075 0
 5258 0080 6B6C     		ldr	r3, [r5, #68]
 5259 0082 43F02003 		orr	r3, r3, #32
 5260 0086 6B64     		str	r3, [r5, #68]
3078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5261              		.loc 1 3078 0
 5262 0088 0023     		movs	r3, #0
 5263 008a 85F84030 		strb	r3, [r5, #64]
3080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
 5264              		.loc 1 3080 0
 5265 008e 0123     		movs	r3, #1
 5266 0090 60E0     		b	.L422
 5267              	.LVL418:
 5268              	.L428:
3089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 5269              		.loc 1 3089 0
 5270 0092 2B68     		ldr	r3, [r5]
 5271              	.LVL419:
 5272 0094 9B69     		ldr	r3, [r3, #24]
 5273 0096 13F0100F 		tst	r3, #16
 5274 009a 2BD0     		beq	.L440
3111:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 5275              		.loc 1 3111 0
 5276 009c 0097     		str	r7, [sp]
 5277 009e 3346     		mov	r3, r6
 5278 00a0 0022     		movs	r2, #0
 5279 00a2 2021     		movs	r1, #32
 5280 00a4 2846     		mov	r0, r5
 5281 00a6 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5282              	.LVL420:
 5283 00aa 0028     		cmp	r0, #0
 5284 00ac 5CD1     		bne	.L437
3117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5285              		.loc 1 3117 0
 5286 00ae 2B68     		ldr	r3, [r5]
 5287 00b0 1022     		movs	r2, #16
 5288 00b2 DA61     		str	r2, [r3, #28]
3120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 5289              		.loc 1 3120 0
 5290 00b4 2B68     		ldr	r3, [r5]
 5291 00b6 2022     		movs	r2, #32
 5292 00b8 DA61     		str	r2, [r3, #28]
3124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 5293              		.loc 1 3124 0
 5294 00ba 039B     		ldr	r3, [sp, #12]
 5295 00bc 4345     		cmp	r3, r8
 5296 00be 2BD0     		beq	.L441
 5297              	.L431:
3140:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     } while (I2C_Trials < Trials);
 5298              		.loc 1 3140 0
 5299 00c0 039B     		ldr	r3, [sp, #12]
 5300 00c2 0133     		adds	r3, r3, #1
 5301 00c4 0393     		str	r3, [sp, #12]
3141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5302              		.loc 1 3141 0
 5303 00c6 039B     		ldr	r3, [sp, #12]
 5304 00c8 4345     		cmp	r3, r8
 5305 00ca 36D2     		bcs	.L442
 5306              	.LVL421:
 5307              	.L432:
3056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5308              		.loc 1 3056 0
 5309 00cc EB68     		ldr	r3, [r5, #12]
 5310 00ce 012B     		cmp	r3, #1
 5311 00d0 B9D0     		beq	.L443
3056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5312              		.loc 1 3056 0 is_stmt 0 discriminator 2
 5313 00d2 C9F30903 		ubfx	r3, r9, #0, #10
 5314 00d6 43F42053 		orr	r3, r3, #10240
 5315              	.L424:
3056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5316              		.loc 1 3056 0 discriminator 4
 5317 00da 2A68     		ldr	r2, [r5]
 5318 00dc 5360     		str	r3, [r2, #4]
3060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5319              		.loc 1 3060 0 is_stmt 1 discriminator 4
 5320 00de FFF7FEFF 		bl	HAL_GetTick
 5321              	.LVL422:
 5322 00e2 0746     		mov	r7, r0
 5323              	.LVL423:
3062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 5324              		.loc 1 3062 0 discriminator 4
 5325 00e4 2B68     		ldr	r3, [r5]
 5326 00e6 9C69     		ldr	r4, [r3, #24]
 5327 00e8 C4F34014 		ubfx	r4, r4, #5, #1
 5328              	.LVL424:
3063:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5329              		.loc 1 3063 0 discriminator 4
 5330 00ec 9B69     		ldr	r3, [r3, #24]
 5331 00ee C3F30013 		ubfx	r3, r3, #4, #1
 5332              	.LVL425:
3065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 5333              		.loc 1 3065 0 discriminator 4
 5334 00f2 B6E7     		b	.L425
 5335              	.LVL426:
 5336              	.L440:
3092:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 5337              		.loc 1 3092 0
 5338 00f4 0097     		str	r7, [sp]
 5339 00f6 3346     		mov	r3, r6
 5340 00f8 0022     		movs	r2, #0
 5341 00fa 2021     		movs	r1, #32
 5342 00fc 2846     		mov	r0, r5
 5343 00fe FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5344              	.LVL427:
 5345 0102 0346     		mov	r3, r0
 5346 0104 70BB     		cbnz	r0, .L436
3098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5347              		.loc 1 3098 0
 5348 0106 2968     		ldr	r1, [r5]
 5349 0108 2022     		movs	r2, #32
 5350 010a CA61     		str	r2, [r1, #28]
3101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5351              		.loc 1 3101 0
 5352 010c 85F84120 		strb	r2, [r5, #65]
3104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5353              		.loc 1 3104 0
 5354 0110 0022     		movs	r2, #0
 5355 0112 85F84020 		strb	r2, [r5, #64]
3106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 5356              		.loc 1 3106 0
 5357 0116 1DE0     		b	.L422
 5358              	.L441:
3127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5359              		.loc 1 3127 0
 5360 0118 2A68     		ldr	r2, [r5]
 5361 011a 5368     		ldr	r3, [r2, #4]
 5362 011c 43F48043 		orr	r3, r3, #16384
 5363 0120 5360     		str	r3, [r2, #4]
3130:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 5364              		.loc 1 3130 0
 5365 0122 0097     		str	r7, [sp]
 5366 0124 3346     		mov	r3, r6
 5367 0126 0022     		movs	r2, #0
 5368 0128 2021     		movs	r1, #32
 5369 012a 2846     		mov	r0, r5
 5370 012c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5371              	.LVL428:
 5372 0130 E0B9     		cbnz	r0, .L438
3136:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 5373              		.loc 1 3136 0
 5374 0132 2B68     		ldr	r3, [r5]
 5375 0134 2022     		movs	r2, #32
 5376 0136 DA61     		str	r2, [r3, #28]
 5377 0138 C2E7     		b	.L431
 5378              	.L442:
3144:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5379              		.loc 1 3144 0
 5380 013a 2023     		movs	r3, #32
 5381 013c 85F84130 		strb	r3, [r5, #65]
3147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5382              		.loc 1 3147 0
 5383 0140 6B6C     		ldr	r3, [r5, #68]
 5384 0142 43F02003 		orr	r3, r3, #32
 5385 0146 6B64     		str	r3, [r5, #68]
3150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5386              		.loc 1 3150 0
 5387 0148 0023     		movs	r3, #0
 5388 014a 85F84030 		strb	r3, [r5, #64]
3152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 5389              		.loc 1 3152 0
 5390 014e 0123     		movs	r3, #1
 5391 0150 00E0     		b	.L422
 5392              	.LVL429:
 5393              	.L433:
3156:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 5394              		.loc 1 3156 0
 5395 0152 0223     		movs	r3, #2
 5396              	.LVL430:
 5397              	.L422:
3158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5398              		.loc 1 3158 0
 5399 0154 1846     		mov	r0, r3
 5400 0156 05B0     		add	sp, sp, #20
 5401              		.cfi_remember_state
 5402              		.cfi_def_cfa_offset 28
 5403              		@ sp needed
 5404 0158 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5405              	.LVL431:
 5406              	.L434:
 5407              		.cfi_restore_state
3044:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5408              		.loc 1 3044 0
 5409 015c 0223     		movs	r3, #2
 5410              	.LVL432:
 5411 015e F9E7     		b	.L422
 5412              	.LVL433:
 5413              	.L435:
3048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5414              		.loc 1 3048 0
 5415 0160 0223     		movs	r3, #2
 5416              	.LVL434:
 5417 0162 F7E7     		b	.L422
 5418              	.LVL435:
 5419              	.L436:
3094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 5420              		.loc 1 3094 0
 5421 0164 0123     		movs	r3, #1
 5422 0166 F5E7     		b	.L422
 5423              	.L437:
3113:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 5424              		.loc 1 3113 0
 5425 0168 0123     		movs	r3, #1
 5426 016a F3E7     		b	.L422
 5427              	.L438:
3132:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 5428              		.loc 1 3132 0
 5429 016c 0123     		movs	r3, #1
 5430 016e F1E7     		b	.L422
 5431              		.cfi_endproc
 5432              	.LFE339:
 5434              		.section	.text.HAL_I2C_Master_Seq_Transmit_IT,"ax",%progbits
 5435              		.align	1
 5436              		.global	HAL_I2C_Master_Seq_Transmit_IT
 5437              		.syntax unified
 5438              		.thumb
 5439              		.thumb_func
 5440              		.fpu fpv4-sp-d16
 5442              	HAL_I2C_Master_Seq_Transmit_IT:
 5443              	.LFB340:
3174:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
 5444              		.loc 1 3174 0
 5445              		.cfi_startproc
 5446              		@ args = 4, pretend = 0, frame = 0
 5447              		@ frame_needed = 0, uses_anonymous_args = 0
 5448              	.LVL436:
 5449 0000 70B5     		push	{r4, r5, r6, lr}
 5450              		.cfi_def_cfa_offset 16
 5451              		.cfi_offset 4, -16
 5452              		.cfi_offset 5, -12
 5453              		.cfi_offset 6, -8
 5454              		.cfi_offset 14, -4
 5455 0002 82B0     		sub	sp, sp, #8
 5456              		.cfi_def_cfa_offset 24
 5457              	.LVL437:
3181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 5458              		.loc 1 3181 0
 5459 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5460 0008 E4B2     		uxtb	r4, r4
 5461 000a 202C     		cmp	r4, #32
 5462 000c 49D1     		bne	.L450
3184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5463              		.loc 1 3184 0
 5464 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5465 0012 012C     		cmp	r4, #1
 5466 0014 48D0     		beq	.L451
3184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5467              		.loc 1 3184 0 is_stmt 0 discriminator 2
 5468 0016 0124     		movs	r4, #1
 5469 0018 80F84040 		strb	r4, [r0, #64]
3186:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5470              		.loc 1 3186 0 is_stmt 1 discriminator 2
 5471 001c 2124     		movs	r4, #33
 5472 001e 80F84140 		strb	r4, [r0, #65]
3187:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5473              		.loc 1 3187 0 discriminator 2
 5474 0022 1024     		movs	r4, #16
 5475 0024 80F84240 		strb	r4, [r0, #66]
3188:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5476              		.loc 1 3188 0 discriminator 2
 5477 0028 0024     		movs	r4, #0
 5478 002a 4464     		str	r4, [r0, #68]
3191:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5479              		.loc 1 3191 0 discriminator 2
 5480 002c 4262     		str	r2, [r0, #36]
3192:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5481              		.loc 1 3192 0 discriminator 2
 5482 002e 4385     		strh	r3, [r0, #42]	@ movhi
3193:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5483              		.loc 1 3193 0 discriminator 2
 5484 0030 069B     		ldr	r3, [sp, #24]
 5485              	.LVL438:
 5486 0032 C362     		str	r3, [r0, #44]
 5487              	.LVL439:
3194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5488              		.loc 1 3194 0 discriminator 2
 5489 0034 1D4B     		ldr	r3, .L455
 5490 0036 4363     		str	r3, [r0, #52]
3197:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5491              		.loc 1 3197 0 discriminator 2
 5492 0038 438D     		ldrh	r3, [r0, #42]
 5493 003a 9BB2     		uxth	r3, r3
 5494 003c FF2B     		cmp	r3, #255
 5495 003e 10D9     		bls	.L446
3199:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5496              		.loc 1 3199 0
 5497 0040 FF23     		movs	r3, #255
 5498 0042 0385     		strh	r3, [r0, #40]	@ movhi
 5499              	.LVL440:
3200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5500              		.loc 1 3200 0
 5501 0044 4FF08076 		mov	r6, #16777216
 5502              	.LVL441:
 5503              	.L447:
 5504 0048 0D46     		mov	r5, r1
 5505 004a 0446     		mov	r4, r0
 5506              	.LVL442:
3210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5507              		.loc 1 3210 0
 5508 004c 036B     		ldr	r3, [r0, #48]
 5509 004e 112B     		cmp	r3, #17
 5510 0050 0BD1     		bne	.L448
3210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5511              		.loc 1 3210 0 is_stmt 0 discriminator 1
 5512 0052 069B     		ldr	r3, [sp, #24]
 5513 0054 AA2B     		cmp	r3, #170
 5514 0056 08D0     		beq	.L448
3210:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5515              		.loc 1 3210 0 discriminator 3
 5516 0058 B3F52A4F 		cmp	r3, #43520
 5517 005c 05D0     		beq	.L448
3212:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5518              		.loc 1 3212 0 is_stmt 1
 5519 005e 0023     		movs	r3, #0
 5520 0060 0CE0     		b	.L449
 5521              	.LVL443:
 5522              	.L446:
3204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5523              		.loc 1 3204 0
 5524 0062 438D     		ldrh	r3, [r0, #42]
 5525 0064 0385     		strh	r3, [r0, #40]	@ movhi
3205:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5526              		.loc 1 3205 0
 5527 0066 C66A     		ldr	r6, [r0, #44]
 5528              	.LVL444:
 5529 0068 EEE7     		b	.L447
 5530              	.L448:
3217:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5531              		.loc 1 3217 0
 5532 006a 2046     		mov	r0, r4
 5533              	.LVL445:
 5534 006c FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5535              	.LVL446:
3220:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 5536              		.loc 1 3220 0
 5537 0070 638D     		ldrh	r3, [r4, #42]
 5538 0072 9BB2     		uxth	r3, r3
 5539 0074 FF2B     		cmp	r3, #255
 5540 0076 12D8     		bhi	.L453
3222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 5541              		.loc 1 3222 0
 5542 0078 E66A     		ldr	r6, [r4, #44]
 5543              	.LVL447:
3176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5544              		.loc 1 3176 0
 5545 007a 0D4B     		ldr	r3, .L455+4
 5546              	.L449:
 5547              	.LVL448:
3227:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5548              		.loc 1 3227 0
 5549 007c 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5550 0080 0093     		str	r3, [sp]
 5551 0082 3346     		mov	r3, r6
 5552              	.LVL449:
 5553 0084 2946     		mov	r1, r5
 5554 0086 2046     		mov	r0, r4
 5555 0088 FFF7FEFF 		bl	I2C_TransferConfig
 5556              	.LVL450:
3230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5557              		.loc 1 3230 0
 5558 008c 0025     		movs	r5, #0
 5559 008e 84F84050 		strb	r5, [r4, #64]
3235:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5560              		.loc 1 3235 0
 5561 0092 0121     		movs	r1, #1
 5562 0094 2046     		mov	r0, r4
 5563 0096 FFF7FEFF 		bl	I2C_Enable_IRQ
 5564              	.LVL451:
3237:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 5565              		.loc 1 3237 0
 5566 009a 2846     		mov	r0, r5
 5567 009c 02E0     		b	.L445
 5568              	.LVL452:
 5569              	.L453:
3176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5570              		.loc 1 3176 0
 5571 009e 044B     		ldr	r3, .L455+4
 5572 00a0 ECE7     		b	.L449
 5573              	.LVL453:
 5574              	.L450:
3241:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 5575              		.loc 1 3241 0
 5576 00a2 0220     		movs	r0, #2
 5577              	.LVL454:
 5578              	.L445:
3243:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5579              		.loc 1 3243 0
 5580 00a4 02B0     		add	sp, sp, #8
 5581              		.cfi_remember_state
 5582              		.cfi_def_cfa_offset 16
 5583              		@ sp needed
 5584 00a6 70BD     		pop	{r4, r5, r6, pc}
 5585              	.LVL455:
 5586              	.L451:
 5587              		.cfi_restore_state
3184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5588              		.loc 1 3184 0
 5589 00a8 0220     		movs	r0, #2
 5590              	.LVL456:
 5591 00aa FBE7     		b	.L445
 5592              	.L456:
 5593              		.align	2
 5594              	.L455:
 5595 00ac 00000000 		.word	I2C_Master_ISR_IT
 5596 00b0 00200080 		.word	-2147475456
 5597              		.cfi_endproc
 5598              	.LFE340:
 5600              		.section	.text.HAL_I2C_Master_Seq_Transmit_DMA,"ax",%progbits
 5601              		.align	1
 5602              		.global	HAL_I2C_Master_Seq_Transmit_DMA
 5603              		.syntax unified
 5604              		.thumb
 5605              		.thumb_func
 5606              		.fpu fpv4-sp-d16
 5608              	HAL_I2C_Master_Seq_Transmit_DMA:
 5609              	.LFB341:
3259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
 5610              		.loc 1 3259 0
 5611              		.cfi_startproc
 5612              		@ args = 4, pretend = 0, frame = 0
 5613              		@ frame_needed = 0, uses_anonymous_args = 0
 5614              	.LVL457:
 5615 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5616              		.cfi_def_cfa_offset 24
 5617              		.cfi_offset 4, -24
 5618              		.cfi_offset 5, -20
 5619              		.cfi_offset 6, -16
 5620              		.cfi_offset 7, -12
 5621              		.cfi_offset 8, -8
 5622              		.cfi_offset 14, -4
 5623 0004 82B0     		sub	sp, sp, #8
 5624              		.cfi_def_cfa_offset 32
 5625              	.LVL458:
3267:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 5626              		.loc 1 3267 0
 5627 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5628 000a E4B2     		uxtb	r4, r4
 5629 000c 202C     		cmp	r4, #32
 5630 000e 40F09C80 		bne	.L467
3270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5631              		.loc 1 3270 0
 5632 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5633 0016 012C     		cmp	r4, #1
 5634 0018 00F09C80 		beq	.L468
3270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5635              		.loc 1 3270 0 is_stmt 0 discriminator 2
 5636 001c 0124     		movs	r4, #1
 5637 001e 80F84040 		strb	r4, [r0, #64]
3272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5638              		.loc 1 3272 0 is_stmt 1 discriminator 2
 5639 0022 2124     		movs	r4, #33
 5640 0024 80F84140 		strb	r4, [r0, #65]
3273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5641              		.loc 1 3273 0 discriminator 2
 5642 0028 1024     		movs	r4, #16
 5643 002a 80F84240 		strb	r4, [r0, #66]
3274:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5644              		.loc 1 3274 0 discriminator 2
 5645 002e 0024     		movs	r4, #0
 5646 0030 4464     		str	r4, [r0, #68]
3277:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5647              		.loc 1 3277 0 discriminator 2
 5648 0032 4262     		str	r2, [r0, #36]
3278:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5649              		.loc 1 3278 0 discriminator 2
 5650 0034 4385     		strh	r3, [r0, #42]	@ movhi
3279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5651              		.loc 1 3279 0 discriminator 2
 5652 0036 089B     		ldr	r3, [sp, #32]
 5653              	.LVL459:
 5654 0038 C362     		str	r3, [r0, #44]
 5655              	.LVL460:
3280:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5656              		.loc 1 3280 0 discriminator 2
 5657 003a 474B     		ldr	r3, .L474
 5658 003c 4363     		str	r3, [r0, #52]
3283:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5659              		.loc 1 3283 0 discriminator 2
 5660 003e 438D     		ldrh	r3, [r0, #42]
 5661 0040 9BB2     		uxth	r3, r3
 5662 0042 FF2B     		cmp	r3, #255
 5663 0044 11D9     		bls	.L459
3285:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5664              		.loc 1 3285 0
 5665 0046 FF23     		movs	r3, #255
 5666 0048 0385     		strh	r3, [r0, #40]	@ movhi
 5667              	.LVL461:
3286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5668              		.loc 1 3286 0
 5669 004a 4FF08077 		mov	r7, #16777216
 5670              	.LVL462:
 5671              	.L460:
 5672 004e 1546     		mov	r5, r2
 5673 0050 8846     		mov	r8, r1
 5674 0052 0446     		mov	r4, r0
 5675              	.LVL463:
3296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5676              		.loc 1 3296 0
 5677 0054 036B     		ldr	r3, [r0, #48]
 5678 0056 112B     		cmp	r3, #17
 5679 0058 0BD1     		bne	.L461
3296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5680              		.loc 1 3296 0 is_stmt 0 discriminator 1
 5681 005a 089B     		ldr	r3, [sp, #32]
 5682 005c AA2B     		cmp	r3, #170
 5683 005e 08D0     		beq	.L461
3296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5684              		.loc 1 3296 0 discriminator 3
 5685 0060 B3F52A4F 		cmp	r3, #43520
 5686 0064 05D0     		beq	.L461
3298:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5687              		.loc 1 3298 0 is_stmt 1
 5688 0066 0026     		movs	r6, #0
 5689 0068 0CE0     		b	.L462
 5690              	.LVL464:
 5691              	.L459:
3290:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5692              		.loc 1 3290 0
 5693 006a 438D     		ldrh	r3, [r0, #42]
 5694 006c 0385     		strh	r3, [r0, #40]	@ movhi
3291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5695              		.loc 1 3291 0
 5696 006e C76A     		ldr	r7, [r0, #44]
 5697              	.LVL465:
 5698 0070 EDE7     		b	.L460
 5699              	.L461:
3303:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5700              		.loc 1 3303 0
 5701 0072 2046     		mov	r0, r4
 5702              	.LVL466:
 5703 0074 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5704              	.LVL467:
3306:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 5705              		.loc 1 3306 0
 5706 0078 638D     		ldrh	r3, [r4, #42]
 5707 007a 9BB2     		uxth	r3, r3
 5708 007c FF2B     		cmp	r3, #255
 5709 007e 27D8     		bhi	.L470
3308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 5710              		.loc 1 3308 0
 5711 0080 E76A     		ldr	r7, [r4, #44]
 5712              	.LVL468:
3261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5713              		.loc 1 3261 0
 5714 0082 364E     		ldr	r6, .L474+4
 5715              	.L462:
 5716              	.LVL469:
3312:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5717              		.loc 1 3312 0
 5718 0084 228D     		ldrh	r2, [r4, #40]
 5719 0086 002A     		cmp	r2, #0
 5720 0088 4CD0     		beq	.L463
3314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 5721              		.loc 1 3314 0
 5722 008a A36B     		ldr	r3, [r4, #56]
 5723 008c 13B3     		cbz	r3, .L464
3317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5724              		.loc 1 3317 0
 5725 008e 344A     		ldr	r2, .L474+8
 5726 0090 DA62     		str	r2, [r3, #44]
3320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5727              		.loc 1 3320 0
 5728 0092 A36B     		ldr	r3, [r4, #56]
 5729 0094 334A     		ldr	r2, .L474+12
 5730 0096 5A63     		str	r2, [r3, #52]
3323:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmatx->XferAbortCallback = NULL;
 5731              		.loc 1 3323 0
 5732 0098 A26B     		ldr	r2, [r4, #56]
 5733 009a 0023     		movs	r3, #0
 5734 009c 1363     		str	r3, [r2, #48]
3324:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5735              		.loc 1 3324 0
 5736 009e A26B     		ldr	r2, [r4, #56]
 5737 00a0 9363     		str	r3, [r2, #56]
3327:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 5738              		.loc 1 3327 0
 5739 00a2 2268     		ldr	r2, [r4]
 5740 00a4 238D     		ldrh	r3, [r4, #40]
 5741 00a6 2832     		adds	r2, r2, #40
 5742 00a8 2946     		mov	r1, r5
 5743 00aa A06B     		ldr	r0, [r4, #56]
 5744 00ac FFF7FEFF 		bl	HAL_DMA_Start_IT
 5745              	.LVL470:
3344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 5746              		.loc 1 3344 0
 5747 00b0 0546     		mov	r5, r0
 5748              	.LVL471:
 5749 00b2 E8B1     		cbz	r0, .L473
3367:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5750              		.loc 1 3367 0
 5751 00b4 2023     		movs	r3, #32
 5752 00b6 84F84130 		strb	r3, [r4, #65]
3368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5753              		.loc 1 3368 0
 5754 00ba 0022     		movs	r2, #0
 5755 00bc 84F84220 		strb	r2, [r4, #66]
3371:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5756              		.loc 1 3371 0
 5757 00c0 636C     		ldr	r3, [r4, #68]
 5758 00c2 43F01003 		orr	r3, r3, #16
 5759 00c6 6364     		str	r3, [r4, #68]
3374:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5760              		.loc 1 3374 0
 5761 00c8 84F84020 		strb	r2, [r4, #64]
3376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 5762              		.loc 1 3376 0
 5763 00cc 0125     		movs	r5, #1
 5764 00ce 3DE0     		b	.L458
 5765              	.LVL472:
 5766              	.L470:
3261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 5767              		.loc 1 3261 0
 5768 00d0 224E     		ldr	r6, .L474+4
 5769 00d2 D7E7     		b	.L462
 5770              	.LVL473:
 5771              	.L464:
3332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 5772              		.loc 1 3332 0
 5773 00d4 2023     		movs	r3, #32
 5774 00d6 84F84130 		strb	r3, [r4, #65]
3333:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5775              		.loc 1 3333 0
 5776 00da 0022     		movs	r2, #0
 5777 00dc 84F84220 		strb	r2, [r4, #66]
3336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5778              		.loc 1 3336 0
 5779 00e0 636C     		ldr	r3, [r4, #68]
 5780 00e2 43F08003 		orr	r3, r3, #128
 5781 00e6 6364     		str	r3, [r4, #68]
3339:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5782              		.loc 1 3339 0
 5783 00e8 84F84020 		strb	r2, [r4, #64]
3341:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 5784              		.loc 1 3341 0
 5785 00ec 0125     		movs	r5, #1
 5786              	.LVL474:
 5787 00ee 2DE0     		b	.L458
 5788              	.LVL475:
 5789              	.L473:
3347:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5790              		.loc 1 3347 0
 5791 00f0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5792 00f4 0096     		str	r6, [sp]
 5793 00f6 3B46     		mov	r3, r7
 5794 00f8 4146     		mov	r1, r8
 5795 00fa 2046     		mov	r0, r4
 5796              	.LVL476:
 5797 00fc FFF7FEFF 		bl	I2C_TransferConfig
 5798              	.LVL477:
3350:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5799              		.loc 1 3350 0
 5800 0100 638D     		ldrh	r3, [r4, #42]
 5801 0102 228D     		ldrh	r2, [r4, #40]
 5802 0104 9B1A     		subs	r3, r3, r2
 5803 0106 9BB2     		uxth	r3, r3
 5804 0108 6385     		strh	r3, [r4, #42]	@ movhi
3353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5805              		.loc 1 3353 0
 5806 010a 0023     		movs	r3, #0
 5807 010c 84F84030 		strb	r3, [r4, #64]
3359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5808              		.loc 1 3359 0
 5809 0110 1021     		movs	r1, #16
 5810 0112 2046     		mov	r0, r4
 5811 0114 FFF7FEFF 		bl	I2C_Enable_IRQ
 5812              	.LVL478:
3362:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 5813              		.loc 1 3362 0
 5814 0118 2268     		ldr	r2, [r4]
 5815 011a 1368     		ldr	r3, [r2]
 5816 011c 43F48043 		orr	r3, r3, #16384
 5817 0120 1360     		str	r3, [r2]
 5818 0122 13E0     		b	.L458
 5819              	.LVL479:
 5820              	.L463:
3382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5821              		.loc 1 3382 0
 5822 0124 104B     		ldr	r3, .L474+16
 5823 0126 6363     		str	r3, [r4, #52]
3386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5824              		.loc 1 3386 0
 5825 0128 0C4B     		ldr	r3, .L474+4
 5826 012a 0093     		str	r3, [sp]
 5827 012c 4FF00073 		mov	r3, #33554432
 5828 0130 D2B2     		uxtb	r2, r2
 5829 0132 4146     		mov	r1, r8
 5830 0134 2046     		mov	r0, r4
 5831 0136 FFF7FEFF 		bl	I2C_TransferConfig
 5832              	.LVL480:
3389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5833              		.loc 1 3389 0
 5834 013a 0025     		movs	r5, #0
 5835              	.LVL481:
 5836 013c 84F84050 		strb	r5, [r4, #64]
3397:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5837              		.loc 1 3397 0
 5838 0140 0121     		movs	r1, #1
 5839 0142 2046     		mov	r0, r4
 5840 0144 FFF7FEFF 		bl	I2C_Enable_IRQ
 5841              	.LVL482:
 5842 0148 00E0     		b	.L458
 5843              	.LVL483:
 5844              	.L467:
3404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 5845              		.loc 1 3404 0
 5846 014a 0225     		movs	r5, #2
 5847              	.LVL484:
 5848              	.L458:
3406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5849              		.loc 1 3406 0
 5850 014c 2846     		mov	r0, r5
 5851 014e 02B0     		add	sp, sp, #8
 5852              		.cfi_remember_state
 5853              		.cfi_def_cfa_offset 24
 5854              		@ sp needed
 5855 0150 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5856              	.LVL485:
 5857              	.L468:
 5858              		.cfi_restore_state
3270:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5859              		.loc 1 3270 0
 5860 0154 0225     		movs	r5, #2
 5861 0156 F9E7     		b	.L458
 5862              	.L475:
 5863              		.align	2
 5864              	.L474:
 5865 0158 00000000 		.word	I2C_Master_ISR_DMA
 5866 015c 00200080 		.word	-2147475456
 5867 0160 00000000 		.word	I2C_DMAMasterTransmitCplt
 5868 0164 00000000 		.word	I2C_DMAError
 5869 0168 00000000 		.word	I2C_Master_ISR_IT
 5870              		.cfi_endproc
 5871              	.LFE341:
 5873              		.section	.text.HAL_I2C_Master_Seq_Receive_IT,"ax",%progbits
 5874              		.align	1
 5875              		.global	HAL_I2C_Master_Seq_Receive_IT
 5876              		.syntax unified
 5877              		.thumb
 5878              		.thumb_func
 5879              		.fpu fpv4-sp-d16
 5881              	HAL_I2C_Master_Seq_Receive_IT:
 5882              	.LFB342:
3422:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
 5883              		.loc 1 3422 0
 5884              		.cfi_startproc
 5885              		@ args = 4, pretend = 0, frame = 0
 5886              		@ frame_needed = 0, uses_anonymous_args = 0
 5887              	.LVL486:
 5888 0000 70B5     		push	{r4, r5, r6, lr}
 5889              		.cfi_def_cfa_offset 16
 5890              		.cfi_offset 4, -16
 5891              		.cfi_offset 5, -12
 5892              		.cfi_offset 6, -8
 5893              		.cfi_offset 14, -4
 5894 0002 82B0     		sub	sp, sp, #8
 5895              		.cfi_def_cfa_offset 24
 5896              	.LVL487:
3429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 5897              		.loc 1 3429 0
 5898 0004 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 5899 0008 E4B2     		uxtb	r4, r4
 5900 000a 202C     		cmp	r4, #32
 5901 000c 49D1     		bne	.L482
3432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5902              		.loc 1 3432 0
 5903 000e 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 5904 0012 012C     		cmp	r4, #1
 5905 0014 48D0     		beq	.L483
3432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5906              		.loc 1 3432 0 is_stmt 0 discriminator 2
 5907 0016 0124     		movs	r4, #1
 5908 0018 80F84040 		strb	r4, [r0, #64]
3434:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5909              		.loc 1 3434 0 is_stmt 1 discriminator 2
 5910 001c 2224     		movs	r4, #34
 5911 001e 80F84140 		strb	r4, [r0, #65]
3435:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5912              		.loc 1 3435 0 discriminator 2
 5913 0022 1024     		movs	r4, #16
 5914 0024 80F84240 		strb	r4, [r0, #66]
3436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5915              		.loc 1 3436 0 discriminator 2
 5916 0028 0024     		movs	r4, #0
 5917 002a 4464     		str	r4, [r0, #68]
3439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5918              		.loc 1 3439 0 discriminator 2
 5919 002c 4262     		str	r2, [r0, #36]
3440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5920              		.loc 1 3440 0 discriminator 2
 5921 002e 4385     		strh	r3, [r0, #42]	@ movhi
3441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5922              		.loc 1 3441 0 discriminator 2
 5923 0030 069B     		ldr	r3, [sp, #24]
 5924              	.LVL488:
 5925 0032 C362     		str	r3, [r0, #44]
 5926              	.LVL489:
3442:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5927              		.loc 1 3442 0 discriminator 2
 5928 0034 1D4B     		ldr	r3, .L487
 5929 0036 4363     		str	r3, [r0, #52]
3445:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5930              		.loc 1 3445 0 discriminator 2
 5931 0038 438D     		ldrh	r3, [r0, #42]
 5932 003a 9BB2     		uxth	r3, r3
 5933 003c FF2B     		cmp	r3, #255
 5934 003e 10D9     		bls	.L478
3447:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5935              		.loc 1 3447 0
 5936 0040 FF23     		movs	r3, #255
 5937 0042 0385     		strh	r3, [r0, #40]	@ movhi
 5938              	.LVL490:
3448:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5939              		.loc 1 3448 0
 5940 0044 4FF08076 		mov	r6, #16777216
 5941              	.LVL491:
 5942              	.L479:
 5943 0048 0D46     		mov	r5, r1
 5944 004a 0446     		mov	r4, r0
 5945              	.LVL492:
3458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5946              		.loc 1 3458 0
 5947 004c 036B     		ldr	r3, [r0, #48]
 5948 004e 122B     		cmp	r3, #18
 5949 0050 0BD1     		bne	.L480
3458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5950              		.loc 1 3458 0 is_stmt 0 discriminator 1
 5951 0052 069B     		ldr	r3, [sp, #24]
 5952 0054 AA2B     		cmp	r3, #170
 5953 0056 08D0     		beq	.L480
3458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 5954              		.loc 1 3458 0 discriminator 3
 5955 0058 B3F52A4F 		cmp	r3, #43520
 5956 005c 05D0     		beq	.L480
3460:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5957              		.loc 1 3460 0 is_stmt 1
 5958 005e 0023     		movs	r3, #0
 5959 0060 0CE0     		b	.L481
 5960              	.LVL493:
 5961              	.L478:
3452:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5962              		.loc 1 3452 0
 5963 0062 438D     		ldrh	r3, [r0, #42]
 5964 0064 0385     		strh	r3, [r0, #40]	@ movhi
3453:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 5965              		.loc 1 3453 0
 5966 0066 C66A     		ldr	r6, [r0, #44]
 5967              	.LVL494:
 5968 0068 EEE7     		b	.L479
 5969              	.L480:
3465:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5970              		.loc 1 3465 0
 5971 006a 2046     		mov	r0, r4
 5972              	.LVL495:
 5973 006c FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 5974              	.LVL496:
3468:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 5975              		.loc 1 3468 0
 5976 0070 638D     		ldrh	r3, [r4, #42]
 5977 0072 9BB2     		uxth	r3, r3
 5978 0074 FF2B     		cmp	r3, #255
 5979 0076 12D8     		bhi	.L485
3470:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 5980              		.loc 1 3470 0
 5981 0078 E66A     		ldr	r6, [r4, #44]
 5982              	.LVL497:
3424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5983              		.loc 1 3424 0
 5984 007a 0D4B     		ldr	r3, .L487+4
 5985              	.L481:
 5986              	.LVL498:
3475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5987              		.loc 1 3475 0
 5988 007c 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5989 0080 0093     		str	r3, [sp]
 5990 0082 3346     		mov	r3, r6
 5991              	.LVL499:
 5992 0084 2946     		mov	r1, r5
 5993 0086 2046     		mov	r0, r4
 5994 0088 FFF7FEFF 		bl	I2C_TransferConfig
 5995              	.LVL500:
3478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5996              		.loc 1 3478 0
 5997 008c 0025     		movs	r5, #0
 5998 008e 84F84050 		strb	r5, [r4, #64]
3483:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 5999              		.loc 1 3483 0
 6000 0092 0221     		movs	r1, #2
 6001 0094 2046     		mov	r0, r4
 6002 0096 FFF7FEFF 		bl	I2C_Enable_IRQ
 6003              	.LVL501:
3485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 6004              		.loc 1 3485 0
 6005 009a 2846     		mov	r0, r5
 6006 009c 02E0     		b	.L477
 6007              	.LVL502:
 6008              	.L485:
3424:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6009              		.loc 1 3424 0
 6010 009e 044B     		ldr	r3, .L487+4
 6011 00a0 ECE7     		b	.L481
 6012              	.LVL503:
 6013              	.L482:
3489:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 6014              		.loc 1 3489 0
 6015 00a2 0220     		movs	r0, #2
 6016              	.LVL504:
 6017              	.L477:
3491:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6018              		.loc 1 3491 0
 6019 00a4 02B0     		add	sp, sp, #8
 6020              		.cfi_remember_state
 6021              		.cfi_def_cfa_offset 16
 6022              		@ sp needed
 6023 00a6 70BD     		pop	{r4, r5, r6, pc}
 6024              	.LVL505:
 6025              	.L483:
 6026              		.cfi_restore_state
3432:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6027              		.loc 1 3432 0
 6028 00a8 0220     		movs	r0, #2
 6029              	.LVL506:
 6030 00aa FBE7     		b	.L477
 6031              	.L488:
 6032              		.align	2
 6033              	.L487:
 6034 00ac 00000000 		.word	I2C_Master_ISR_IT
 6035 00b0 00240080 		.word	-2147474432
 6036              		.cfi_endproc
 6037              	.LFE342:
 6039              		.section	.text.HAL_I2C_Master_Seq_Receive_DMA,"ax",%progbits
 6040              		.align	1
 6041              		.global	HAL_I2C_Master_Seq_Receive_DMA
 6042              		.syntax unified
 6043              		.thumb
 6044              		.thumb_func
 6045              		.fpu fpv4-sp-d16
 6047              	HAL_I2C_Master_Seq_Receive_DMA:
 6048              	.LFB343:
3507:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t xfermode;
 6049              		.loc 1 3507 0
 6050              		.cfi_startproc
 6051              		@ args = 4, pretend = 0, frame = 0
 6052              		@ frame_needed = 0, uses_anonymous_args = 0
 6053              	.LVL507:
 6054 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6055              		.cfi_def_cfa_offset 24
 6056              		.cfi_offset 4, -24
 6057              		.cfi_offset 5, -20
 6058              		.cfi_offset 6, -16
 6059              		.cfi_offset 7, -12
 6060              		.cfi_offset 8, -8
 6061              		.cfi_offset 14, -4
 6062 0004 82B0     		sub	sp, sp, #8
 6063              		.cfi_def_cfa_offset 32
 6064              	.LVL508:
3515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 6065              		.loc 1 3515 0
 6066 0006 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6067 000a E4B2     		uxtb	r4, r4
 6068 000c 202C     		cmp	r4, #32
 6069 000e 40F09C80 		bne	.L499
3518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6070              		.loc 1 3518 0
 6071 0012 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6072 0016 012C     		cmp	r4, #1
 6073 0018 00F09C80 		beq	.L500
3518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6074              		.loc 1 3518 0 is_stmt 0 discriminator 2
 6075 001c 0124     		movs	r4, #1
 6076 001e 80F84040 		strb	r4, [r0, #64]
3520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 6077              		.loc 1 3520 0 is_stmt 1 discriminator 2
 6078 0022 2224     		movs	r4, #34
 6079 0024 80F84140 		strb	r4, [r0, #65]
3521:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6080              		.loc 1 3521 0 discriminator 2
 6081 0028 1024     		movs	r4, #16
 6082 002a 80F84240 		strb	r4, [r0, #66]
3522:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6083              		.loc 1 3522 0 discriminator 2
 6084 002e 0024     		movs	r4, #0
 6085 0030 4464     		str	r4, [r0, #68]
3525:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6086              		.loc 1 3525 0 discriminator 2
 6087 0032 4262     		str	r2, [r0, #36]
3526:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6088              		.loc 1 3526 0 discriminator 2
 6089 0034 4385     		strh	r3, [r0, #42]	@ movhi
3527:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 6090              		.loc 1 3527 0 discriminator 2
 6091 0036 089B     		ldr	r3, [sp, #32]
 6092              	.LVL509:
 6093 0038 C362     		str	r3, [r0, #44]
 6094              	.LVL510:
3528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6095              		.loc 1 3528 0 discriminator 2
 6096 003a 474B     		ldr	r3, .L506
 6097 003c 4363     		str	r3, [r0, #52]
3531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6098              		.loc 1 3531 0 discriminator 2
 6099 003e 438D     		ldrh	r3, [r0, #42]
 6100 0040 9BB2     		uxth	r3, r3
 6101 0042 FF2B     		cmp	r3, #255
 6102 0044 11D9     		bls	.L491
3533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6103              		.loc 1 3533 0
 6104 0046 FF23     		movs	r3, #255
 6105 0048 0385     		strh	r3, [r0, #40]	@ movhi
 6106              	.LVL511:
3534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6107              		.loc 1 3534 0
 6108 004a 4FF08077 		mov	r7, #16777216
 6109              	.LVL512:
 6110              	.L492:
 6111 004e 1546     		mov	r5, r2
 6112 0050 8846     		mov	r8, r1
 6113 0052 0446     		mov	r4, r0
 6114              	.LVL513:
3544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6115              		.loc 1 3544 0
 6116 0054 036B     		ldr	r3, [r0, #48]
 6117 0056 122B     		cmp	r3, #18
 6118 0058 0BD1     		bne	.L493
3544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6119              		.loc 1 3544 0 is_stmt 0 discriminator 1
 6120 005a 089B     		ldr	r3, [sp, #32]
 6121 005c AA2B     		cmp	r3, #170
 6122 005e 08D0     		beq	.L493
3544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6123              		.loc 1 3544 0 discriminator 3
 6124 0060 B3F52A4F 		cmp	r3, #43520
 6125 0064 05D0     		beq	.L493
3546:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6126              		.loc 1 3546 0 is_stmt 1
 6127 0066 0026     		movs	r6, #0
 6128 0068 0CE0     		b	.L494
 6129              	.LVL514:
 6130              	.L491:
3538:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6131              		.loc 1 3538 0
 6132 006a 438D     		ldrh	r3, [r0, #42]
 6133 006c 0385     		strh	r3, [r0, #40]	@ movhi
3539:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6134              		.loc 1 3539 0
 6135 006e C76A     		ldr	r7, [r0, #44]
 6136              	.LVL515:
 6137 0070 EDE7     		b	.L492
 6138              	.L493:
3551:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6139              		.loc 1 3551 0
 6140 0072 2046     		mov	r0, r4
 6141              	.LVL516:
 6142 0074 FFF7FEFF 		bl	I2C_ConvertOtherXferOptions
 6143              	.LVL517:
3554:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 6144              		.loc 1 3554 0
 6145 0078 638D     		ldrh	r3, [r4, #42]
 6146 007a 9BB2     		uxth	r3, r3
 6147 007c FF2B     		cmp	r3, #255
 6148 007e 27D8     		bhi	.L502
3556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 6149              		.loc 1 3556 0
 6150 0080 E76A     		ldr	r7, [r4, #44]
 6151              	.LVL518:
3509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6152              		.loc 1 3509 0
 6153 0082 364E     		ldr	r6, .L506+4
 6154              	.L494:
 6155              	.LVL519:
3560:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6156              		.loc 1 3560 0
 6157 0084 228D     		ldrh	r2, [r4, #40]
 6158 0086 002A     		cmp	r2, #0
 6159 0088 4CD0     		beq	.L495
3562:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 6160              		.loc 1 3562 0
 6161 008a E36B     		ldr	r3, [r4, #60]
 6162 008c 13B3     		cbz	r3, .L496
3565:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6163              		.loc 1 3565 0
 6164 008e 344A     		ldr	r2, .L506+8
 6165 0090 DA62     		str	r2, [r3, #44]
3568:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6166              		.loc 1 3568 0
 6167 0092 E36B     		ldr	r3, [r4, #60]
 6168 0094 334A     		ldr	r2, .L506+12
 6169 0096 5A63     		str	r2, [r3, #52]
3571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->hdmarx->XferAbortCallback = NULL;
 6170              		.loc 1 3571 0
 6171 0098 E26B     		ldr	r2, [r4, #60]
 6172 009a 0023     		movs	r3, #0
 6173 009c 1363     		str	r3, [r2, #48]
3572:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6174              		.loc 1 3572 0
 6175 009e E26B     		ldr	r2, [r4, #60]
 6176 00a0 9363     		str	r3, [r2, #56]
3575:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 6177              		.loc 1 3575 0
 6178 00a2 2168     		ldr	r1, [r4]
 6179 00a4 238D     		ldrh	r3, [r4, #40]
 6180 00a6 2A46     		mov	r2, r5
 6181 00a8 2431     		adds	r1, r1, #36
 6182 00aa E06B     		ldr	r0, [r4, #60]
 6183 00ac FFF7FEFF 		bl	HAL_DMA_Start_IT
 6184              	.LVL520:
3592:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 6185              		.loc 1 3592 0
 6186 00b0 0546     		mov	r5, r0
 6187              	.LVL521:
 6188 00b2 E8B1     		cbz	r0, .L505
3615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6189              		.loc 1 3615 0
 6190 00b4 2023     		movs	r3, #32
 6191 00b6 84F84130 		strb	r3, [r4, #65]
3616:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6192              		.loc 1 3616 0
 6193 00ba 0022     		movs	r2, #0
 6194 00bc 84F84220 		strb	r2, [r4, #66]
3619:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6195              		.loc 1 3619 0
 6196 00c0 636C     		ldr	r3, [r4, #68]
 6197 00c2 43F01003 		orr	r3, r3, #16
 6198 00c6 6364     		str	r3, [r4, #68]
3622:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6199              		.loc 1 3622 0
 6200 00c8 84F84020 		strb	r2, [r4, #64]
3624:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 6201              		.loc 1 3624 0
 6202 00cc 0125     		movs	r5, #1
 6203 00ce 3DE0     		b	.L490
 6204              	.LVL522:
 6205              	.L502:
3509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6206              		.loc 1 3509 0
 6207 00d0 224E     		ldr	r6, .L506+4
 6208 00d2 D7E7     		b	.L494
 6209              	.LVL523:
 6210              	.L496:
3580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         hi2c->Mode      = HAL_I2C_MODE_NONE;
 6211              		.loc 1 3580 0
 6212 00d4 2023     		movs	r3, #32
 6213 00d6 84F84130 		strb	r3, [r4, #65]
3581:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6214              		.loc 1 3581 0
 6215 00da 0022     		movs	r2, #0
 6216 00dc 84F84220 		strb	r2, [r4, #66]
3584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6217              		.loc 1 3584 0
 6218 00e0 636C     		ldr	r3, [r4, #68]
 6219 00e2 43F08003 		orr	r3, r3, #128
 6220 00e6 6364     		str	r3, [r4, #68]
3587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6221              		.loc 1 3587 0
 6222 00e8 84F84020 		strb	r2, [r4, #64]
3589:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 6223              		.loc 1 3589 0
 6224 00ec 0125     		movs	r5, #1
 6225              	.LVL524:
 6226 00ee 2DE0     		b	.L490
 6227              	.LVL525:
 6228              	.L505:
3595:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6229              		.loc 1 3595 0
 6230 00f0 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 6231 00f4 0096     		str	r6, [sp]
 6232 00f6 3B46     		mov	r3, r7
 6233 00f8 4146     		mov	r1, r8
 6234 00fa 2046     		mov	r0, r4
 6235              	.LVL526:
 6236 00fc FFF7FEFF 		bl	I2C_TransferConfig
 6237              	.LVL527:
3598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6238              		.loc 1 3598 0
 6239 0100 638D     		ldrh	r3, [r4, #42]
 6240 0102 228D     		ldrh	r2, [r4, #40]
 6241 0104 9B1A     		subs	r3, r3, r2
 6242 0106 9BB2     		uxth	r3, r3
 6243 0108 6385     		strh	r3, [r4, #42]	@ movhi
3601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6244              		.loc 1 3601 0
 6245 010a 0023     		movs	r3, #0
 6246 010c 84F84030 		strb	r3, [r4, #64]
3607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6247              		.loc 1 3607 0
 6248 0110 1021     		movs	r1, #16
 6249 0112 2046     		mov	r0, r4
 6250 0114 FFF7FEFF 		bl	I2C_Enable_IRQ
 6251              	.LVL528:
3610:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 6252              		.loc 1 3610 0
 6253 0118 2268     		ldr	r2, [r4]
 6254 011a 1368     		ldr	r3, [r2]
 6255 011c 43F40043 		orr	r3, r3, #32768
 6256 0120 1360     		str	r3, [r2]
 6257 0122 13E0     		b	.L490
 6258              	.LVL529:
 6259              	.L495:
3630:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6260              		.loc 1 3630 0
 6261 0124 104B     		ldr	r3, .L506+16
 6262 0126 6363     		str	r3, [r4, #52]
3634:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6263              		.loc 1 3634 0
 6264 0128 0C4B     		ldr	r3, .L506+4
 6265 012a 0093     		str	r3, [sp]
 6266 012c 4FF00073 		mov	r3, #33554432
 6267 0130 D2B2     		uxtb	r2, r2
 6268 0132 4146     		mov	r1, r8
 6269 0134 2046     		mov	r0, r4
 6270 0136 FFF7FEFF 		bl	I2C_TransferConfig
 6271              	.LVL530:
3637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6272              		.loc 1 3637 0
 6273 013a 0025     		movs	r5, #0
 6274              	.LVL531:
 6275 013c 84F84050 		strb	r5, [r4, #64]
3645:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6276              		.loc 1 3645 0
 6277 0140 0121     		movs	r1, #1
 6278 0142 2046     		mov	r0, r4
 6279 0144 FFF7FEFF 		bl	I2C_Enable_IRQ
 6280              	.LVL532:
 6281 0148 00E0     		b	.L490
 6282              	.LVL533:
 6283              	.L499:
3652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 6284              		.loc 1 3652 0
 6285 014a 0225     		movs	r5, #2
 6286              	.LVL534:
 6287              	.L490:
3654:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6288              		.loc 1 3654 0
 6289 014c 2846     		mov	r0, r5
 6290 014e 02B0     		add	sp, sp, #8
 6291              		.cfi_remember_state
 6292              		.cfi_def_cfa_offset 24
 6293              		@ sp needed
 6294 0150 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6295              	.LVL535:
 6296              	.L500:
 6297              		.cfi_restore_state
3518:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6298              		.loc 1 3518 0
 6299 0154 0225     		movs	r5, #2
 6300 0156 F9E7     		b	.L490
 6301              	.L507:
 6302              		.align	2
 6303              	.L506:
 6304 0158 00000000 		.word	I2C_Master_ISR_DMA
 6305 015c 00240080 		.word	-2147474432
 6306 0160 00000000 		.word	I2C_DMAMasterReceiveCplt
 6307 0164 00000000 		.word	I2C_DMAError
 6308 0168 00000000 		.word	I2C_Master_ISR_IT
 6309              		.cfi_endproc
 6310              	.LFE343:
 6312              		.section	.text.HAL_I2C_Slave_Seq_Transmit_IT,"ax",%progbits
 6313              		.align	1
 6314              		.global	HAL_I2C_Slave_Seq_Transmit_IT
 6315              		.syntax unified
 6316              		.thumb
 6317              		.thumb_func
 6318              		.fpu fpv4-sp-d16
 6320              	HAL_I2C_Slave_Seq_Transmit_IT:
 6321              	.LFB344:
3668:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
 6322              		.loc 1 3668 0
 6323              		.cfi_startproc
 6324              		@ args = 0, pretend = 0, frame = 0
 6325              		@ frame_needed = 0, uses_anonymous_args = 0
 6326              	.LVL536:
 6327 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6328              		.cfi_def_cfa_offset 24
 6329              		.cfi_offset 3, -24
 6330              		.cfi_offset 4, -20
 6331              		.cfi_offset 5, -16
 6332              		.cfi_offset 6, -12
 6333              		.cfi_offset 7, -8
 6334              		.cfi_offset 14, -4
3672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 6335              		.loc 1 3672 0
 6336 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6337 0006 04F02804 		and	r4, r4, #40
 6338 000a 282C     		cmp	r4, #40
 6339 000c 01D0     		beq	.L517
3748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 6340              		.loc 1 3748 0
 6341 000e 0120     		movs	r0, #1
 6342              	.LVL537:
 6343              	.L509:
3750:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6344              		.loc 1 3750 0
 6345 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6346              	.LVL538:
 6347              	.L517:
3674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6348              		.loc 1 3674 0
 6349 0012 01B1     		cbz	r1, .L510
3674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6350              		.loc 1 3674 0 is_stmt 0 discriminator 1
 6351 0014 22B9     		cbnz	r2, .L511
 6352              	.L510:
3676:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 6353              		.loc 1 3676 0 is_stmt 1
 6354 0016 4FF40073 		mov	r3, #512
 6355              	.LVL539:
 6356 001a 4364     		str	r3, [r0, #68]
3677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6357              		.loc 1 3677 0
 6358 001c 0120     		movs	r0, #1
 6359              	.LVL540:
 6360 001e F7E7     		b	.L509
 6361              	.LVL541:
 6362              	.L511:
 6363 0020 1F46     		mov	r7, r3
 6364 0022 1646     		mov	r6, r2
 6365 0024 0D46     		mov	r5, r1
 6366 0026 0446     		mov	r4, r0
3681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6367              		.loc 1 3681 0
 6368 0028 48F20101 		movw	r1, #32769
 6369              	.LVL542:
 6370 002c FFF7FEFF 		bl	I2C_Disable_IRQ
 6371              	.LVL543:
3684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6372              		.loc 1 3684 0
 6373 0030 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 6374 0034 012B     		cmp	r3, #1
 6375 0036 47D0     		beq	.L515
3684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6376              		.loc 1 3684 0 is_stmt 0 discriminator 2
 6377 0038 0123     		movs	r3, #1
 6378 003a 84F84030 		strb	r3, [r4, #64]
3688:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6379              		.loc 1 3688 0 is_stmt 1 discriminator 2
 6380 003e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6381 0042 DBB2     		uxtb	r3, r3
 6382 0044 2A2B     		cmp	r3, #42
 6383 0046 24D0     		beq	.L518
 6384              	.L512:
3714:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6385              		.loc 1 3714 0
 6386 0048 2923     		movs	r3, #41
 6387 004a 84F84130 		strb	r3, [r4, #65]
3715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6388              		.loc 1 3715 0
 6389 004e 2023     		movs	r3, #32
 6390 0050 84F84230 		strb	r3, [r4, #66]
3716:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6391              		.loc 1 3716 0
 6392 0054 0023     		movs	r3, #0
 6393 0056 6364     		str	r3, [r4, #68]
3719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6394              		.loc 1 3719 0
 6395 0058 2268     		ldr	r2, [r4]
 6396 005a 5368     		ldr	r3, [r2, #4]
 6397 005c 23F40043 		bic	r3, r3, #32768
 6398 0060 5360     		str	r3, [r2, #4]
3722:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6399              		.loc 1 3722 0
 6400 0062 6562     		str	r5, [r4, #36]
3723:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6401              		.loc 1 3723 0
 6402 0064 6685     		strh	r6, [r4, #42]	@ movhi
3724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6403              		.loc 1 3724 0
 6404 0066 638D     		ldrh	r3, [r4, #42]
 6405 0068 2385     		strh	r3, [r4, #40]	@ movhi
3725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6406              		.loc 1 3725 0
 6407 006a E762     		str	r7, [r4, #44]
3726:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6408              		.loc 1 3726 0
 6409 006c 174B     		ldr	r3, .L519
 6410 006e 6363     		str	r3, [r4, #52]
3728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6411              		.loc 1 3728 0
 6412 0070 2368     		ldr	r3, [r4]
 6413 0072 9A69     		ldr	r2, [r3, #24]
 6414 0074 12F4803F 		tst	r2, #65536
 6415 0078 01D0     		beq	.L513
3732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6416              		.loc 1 3732 0
 6417 007a 0822     		movs	r2, #8
 6418 007c DA61     		str	r2, [r3, #28]
 6419              	.L513:
3736:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6420              		.loc 1 3736 0
 6421 007e 0025     		movs	r5, #0
 6422              	.LVL544:
 6423 0080 84F84050 		strb	r5, [r4, #64]
3742:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6424              		.loc 1 3742 0
 6425 0084 48F20101 		movw	r1, #32769
 6426 0088 2046     		mov	r0, r4
 6427 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 6428              	.LVL545:
3744:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 6429              		.loc 1 3744 0
 6430 008e 2846     		mov	r0, r5
 6431 0090 BEE7     		b	.L509
 6432              	.LVL546:
 6433              	.L518:
3691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6434              		.loc 1 3691 0
 6435 0092 0221     		movs	r1, #2
 6436 0094 2046     		mov	r0, r4
 6437 0096 FFF7FEFF 		bl	I2C_Disable_IRQ
 6438              	.LVL547:
3694:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 6439              		.loc 1 3694 0
 6440 009a 2368     		ldr	r3, [r4]
 6441 009c 1A68     		ldr	r2, [r3]
 6442 009e 12F4004F 		tst	r2, #32768
 6443 00a2 D1D0     		beq	.L512
3696:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6444              		.loc 1 3696 0
 6445 00a4 1A68     		ldr	r2, [r3]
 6446 00a6 22F40042 		bic	r2, r2, #32768
 6447 00aa 1A60     		str	r2, [r3]
3698:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 6448              		.loc 1 3698 0
 6449 00ac E36B     		ldr	r3, [r4, #60]
 6450 00ae 002B     		cmp	r3, #0
 6451 00b0 CAD0     		beq	.L512
3702:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6452              		.loc 1 3702 0
 6453 00b2 074A     		ldr	r2, .L519+4
 6454 00b4 9A63     		str	r2, [r3, #56]
3705:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 6455              		.loc 1 3705 0
 6456 00b6 E06B     		ldr	r0, [r4, #60]
 6457 00b8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6458              	.LVL548:
 6459 00bc 0028     		cmp	r0, #0
 6460 00be C3D0     		beq	.L512
3708:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
 6461              		.loc 1 3708 0
 6462 00c0 E06B     		ldr	r0, [r4, #60]
 6463 00c2 836B     		ldr	r3, [r0, #56]
 6464 00c4 9847     		blx	r3
 6465              	.LVL549:
 6466 00c6 BFE7     		b	.L512
 6467              	.L515:
3684:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6468              		.loc 1 3684 0
 6469 00c8 0220     		movs	r0, #2
 6470 00ca A1E7     		b	.L509
 6471              	.L520:
 6472              		.align	2
 6473              	.L519:
 6474 00cc 00000000 		.word	I2C_Slave_ISR_IT
 6475 00d0 00000000 		.word	I2C_DMAAbort
 6476              		.cfi_endproc
 6477              	.LFE344:
 6479              		.section	.text.HAL_I2C_Slave_Seq_Transmit_DMA,"ax",%progbits
 6480              		.align	1
 6481              		.global	HAL_I2C_Slave_Seq_Transmit_DMA
 6482              		.syntax unified
 6483              		.thumb
 6484              		.thumb_func
 6485              		.fpu fpv4-sp-d16
 6487              	HAL_I2C_Slave_Seq_Transmit_DMA:
 6488              	.LFB345:
3764:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6489              		.loc 1 3764 0
 6490              		.cfi_startproc
 6491              		@ args = 0, pretend = 0, frame = 0
 6492              		@ frame_needed = 0, uses_anonymous_args = 0
 6493              	.LVL550:
 6494 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6495              		.cfi_def_cfa_offset 24
 6496              		.cfi_offset 3, -24
 6497              		.cfi_offset 4, -20
 6498              		.cfi_offset 5, -16
 6499              		.cfi_offset 6, -12
 6500              		.cfi_offset 7, -8
 6501              		.cfi_offset 14, -4
3770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 6502              		.loc 1 3770 0
 6503 0002 90F84150 		ldrb	r5, [r0, #65]	@ zero_extendqisi2
 6504 0006 05F02805 		and	r5, r5, #40
 6505 000a 282D     		cmp	r5, #40
 6506 000c 02D0     		beq	.L536
3928:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 6507              		.loc 1 3928 0
 6508 000e 0125     		movs	r5, #1
 6509              	.LVL551:
 6510              	.L522:
3930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6511              		.loc 1 3930 0
 6512 0010 2846     		mov	r0, r5
 6513 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6514              	.LVL552:
 6515              	.L536:
3772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6516              		.loc 1 3772 0
 6517 0014 0029     		cmp	r1, #0
 6518 0016 60D0     		beq	.L523
3772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6519              		.loc 1 3772 0 is_stmt 0 discriminator 1
 6520 0018 002A     		cmp	r2, #0
 6521 001a 5ED0     		beq	.L523
3779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6522              		.loc 1 3779 0 is_stmt 1
 6523 001c 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 6524 0020 012C     		cmp	r4, #1
 6525 0022 00F0B180 		beq	.L533
 6526 0026 1F46     		mov	r7, r3
 6527 0028 1646     		mov	r6, r2
 6528 002a 0D46     		mov	r5, r1
 6529 002c 0446     		mov	r4, r0
3779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6530              		.loc 1 3779 0 is_stmt 0 discriminator 2
 6531 002e 0123     		movs	r3, #1
 6532              	.LVL553:
 6533 0030 80F84030 		strb	r3, [r0, #64]
3782:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6534              		.loc 1 3782 0 is_stmt 1 discriminator 2
 6535 0034 48F20101 		movw	r1, #32769
 6536              	.LVL554:
 6537 0038 FFF7FEFF 		bl	I2C_Disable_IRQ
 6538              	.LVL555:
3786:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6539              		.loc 1 3786 0 discriminator 2
 6540 003c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6541 0040 DBB2     		uxtb	r3, r3
 6542 0042 2A2B     		cmp	r3, #42
 6543 0044 4ED0     		beq	.L537
3811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6544              		.loc 1 3811 0
 6545 0046 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6546 004a DBB2     		uxtb	r3, r3
 6547 004c 292B     		cmp	r3, #41
 6548 004e 65D0     		beq	.L538
 6549              	.L526:
3838:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6550              		.loc 1 3838 0
 6551 0050 2923     		movs	r3, #41
 6552 0052 84F84130 		strb	r3, [r4, #65]
3839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6553              		.loc 1 3839 0
 6554 0056 2023     		movs	r3, #32
 6555 0058 84F84230 		strb	r3, [r4, #66]
3840:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6556              		.loc 1 3840 0
 6557 005c 0023     		movs	r3, #0
 6558 005e 6364     		str	r3, [r4, #68]
3843:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6559              		.loc 1 3843 0
 6560 0060 2268     		ldr	r2, [r4]
 6561 0062 5368     		ldr	r3, [r2, #4]
 6562 0064 23F40043 		bic	r3, r3, #32768
 6563 0068 5360     		str	r3, [r2, #4]
3846:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6564              		.loc 1 3846 0
 6565 006a 6562     		str	r5, [r4, #36]
3847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6566              		.loc 1 3847 0
 6567 006c 6685     		strh	r6, [r4, #42]	@ movhi
3848:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6568              		.loc 1 3848 0
 6569 006e 638D     		ldrh	r3, [r4, #42]
 6570 0070 2385     		strh	r3, [r4, #40]	@ movhi
3849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 6571              		.loc 1 3849 0
 6572 0072 E762     		str	r7, [r4, #44]
3850:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6573              		.loc 1 3850 0
 6574 0074 454B     		ldr	r3, .L540
 6575 0076 6363     		str	r3, [r4, #52]
3852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6576              		.loc 1 3852 0
 6577 0078 A36B     		ldr	r3, [r4, #56]
 6578 007a 002B     		cmp	r3, #0
 6579 007c 65D0     		beq	.L527
3855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6580              		.loc 1 3855 0
 6581 007e 444A     		ldr	r2, .L540+4
 6582 0080 DA62     		str	r2, [r3, #44]
3858:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6583              		.loc 1 3858 0
 6584 0082 A36B     		ldr	r3, [r4, #56]
 6585 0084 434A     		ldr	r2, .L540+8
 6586 0086 5A63     		str	r2, [r3, #52]
3861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 6587              		.loc 1 3861 0
 6588 0088 A26B     		ldr	r2, [r4, #56]
 6589 008a 0023     		movs	r3, #0
 6590 008c 1363     		str	r3, [r2, #48]
3862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6591              		.loc 1 3862 0
 6592 008e A26B     		ldr	r2, [r4, #56]
 6593 0090 9363     		str	r3, [r2, #56]
3865:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6594              		.loc 1 3865 0
 6595 0092 2268     		ldr	r2, [r4]
 6596 0094 238D     		ldrh	r3, [r4, #40]
 6597 0096 2832     		adds	r2, r2, #40
 6598 0098 2946     		mov	r1, r5
 6599 009a A06B     		ldr	r0, [r4, #56]
 6600 009c FFF7FEFF 		bl	HAL_DMA_Start_IT
 6601              	.LVL556:
3882:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6602              		.loc 1 3882 0
 6603 00a0 0546     		mov	r5, r0
 6604              	.LVL557:
 6605 00a2 0028     		cmp	r0, #0
 6606 00a4 5FD1     		bne	.L539
3885:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6607              		.loc 1 3885 0
 6608 00a6 638D     		ldrh	r3, [r4, #42]
 6609 00a8 228D     		ldrh	r2, [r4, #40]
 6610 00aa 9B1A     		subs	r3, r3, r2
 6611 00ac 9BB2     		uxth	r3, r3
 6612 00ae 6385     		strh	r3, [r4, #42]	@ movhi
3888:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6613              		.loc 1 3888 0
 6614 00b0 0023     		movs	r3, #0
 6615 00b2 2385     		strh	r3, [r4, #40]	@ movhi
3905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6616              		.loc 1 3905 0
 6617 00b4 2368     		ldr	r3, [r4]
 6618 00b6 9A69     		ldr	r2, [r3, #24]
 6619 00b8 12F4803F 		tst	r2, #65536
 6620 00bc 61D1     		bne	.L530
 6621              	.L531:
3913:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6622              		.loc 1 3913 0
 6623 00be 0023     		movs	r3, #0
 6624 00c0 84F84030 		strb	r3, [r4, #64]
3919:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6625              		.loc 1 3919 0
 6626 00c4 4FF40041 		mov	r1, #32768
 6627 00c8 2046     		mov	r0, r4
 6628              	.LVL558:
 6629 00ca FFF7FEFF 		bl	I2C_Enable_IRQ
 6630              	.LVL559:
3922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6631              		.loc 1 3922 0
 6632 00ce 2268     		ldr	r2, [r4]
 6633 00d0 1368     		ldr	r3, [r2]
 6634 00d2 43F48043 		orr	r3, r3, #16384
 6635 00d6 1360     		str	r3, [r2]
3924:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 6636              		.loc 1 3924 0
 6637 00d8 9AE7     		b	.L522
 6638              	.LVL560:
 6639              	.L523:
3774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 6640              		.loc 1 3774 0
 6641 00da 4FF40073 		mov	r3, #512
 6642              	.LVL561:
 6643 00de 4364     		str	r3, [r0, #68]
3775:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6644              		.loc 1 3775 0
 6645 00e0 0125     		movs	r5, #1
 6646 00e2 95E7     		b	.L522
 6647              	.LVL562:
 6648              	.L537:
3789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6649              		.loc 1 3789 0
 6650 00e4 0221     		movs	r1, #2
 6651 00e6 2046     		mov	r0, r4
 6652 00e8 FFF7FEFF 		bl	I2C_Disable_IRQ
 6653              	.LVL563:
3791:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 6654              		.loc 1 3791 0
 6655 00ec 2368     		ldr	r3, [r4]
 6656 00ee 1A68     		ldr	r2, [r3]
 6657 00f0 12F4004F 		tst	r2, #32768
 6658 00f4 ACD0     		beq	.L526
3794:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 6659              		.loc 1 3794 0
 6660 00f6 E26B     		ldr	r2, [r4, #60]
 6661 00f8 002A     		cmp	r2, #0
 6662 00fa A9D0     		beq	.L526
3796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6663              		.loc 1 3796 0
 6664 00fc 1A68     		ldr	r2, [r3]
 6665 00fe 22F40042 		bic	r2, r2, #32768
 6666 0102 1A60     		str	r2, [r3]
3800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6667              		.loc 1 3800 0
 6668 0104 E36B     		ldr	r3, [r4, #60]
 6669 0106 244A     		ldr	r2, .L540+12
 6670 0108 9A63     		str	r2, [r3, #56]
3803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 6671              		.loc 1 3803 0
 6672 010a E06B     		ldr	r0, [r4, #60]
 6673 010c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6674              	.LVL564:
 6675 0110 0028     		cmp	r0, #0
 6676 0112 9DD0     		beq	.L526
3806:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
 6677              		.loc 1 3806 0
 6678 0114 E06B     		ldr	r0, [r4, #60]
 6679 0116 836B     		ldr	r3, [r0, #56]
 6680 0118 9847     		blx	r3
 6681              	.LVL565:
 6682 011a 99E7     		b	.L526
 6683              	.L538:
3813:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 6684              		.loc 1 3813 0
 6685 011c 2368     		ldr	r3, [r4]
 6686 011e 1A68     		ldr	r2, [r3]
 6687 0120 12F4804F 		tst	r2, #16384
 6688 0124 94D0     		beq	.L526
3815:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6689              		.loc 1 3815 0
 6690 0126 1A68     		ldr	r2, [r3]
 6691 0128 22F48042 		bic	r2, r2, #16384
 6692 012c 1A60     		str	r2, [r3]
3818:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 6693              		.loc 1 3818 0
 6694 012e A36B     		ldr	r3, [r4, #56]
 6695 0130 002B     		cmp	r3, #0
 6696 0132 8DD0     		beq	.L526
3822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6697              		.loc 1 3822 0
 6698 0134 184A     		ldr	r2, .L540+12
 6699 0136 9A63     		str	r2, [r3, #56]
3825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 6700              		.loc 1 3825 0
 6701 0138 A06B     		ldr	r0, [r4, #56]
 6702 013a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6703              	.LVL566:
 6704 013e 0028     		cmp	r0, #0
 6705 0140 86D0     		beq	.L526
3828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
 6706              		.loc 1 3828 0
 6707 0142 A06B     		ldr	r0, [r4, #56]
 6708 0144 836B     		ldr	r3, [r0, #56]
 6709 0146 9847     		blx	r3
 6710              	.LVL567:
 6711 0148 82E7     		b	.L526
 6712              	.L527:
3870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6713              		.loc 1 3870 0
 6714 014a 2823     		movs	r3, #40
 6715 014c 84F84130 		strb	r3, [r4, #65]
3871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6716              		.loc 1 3871 0
 6717 0150 0022     		movs	r2, #0
 6718 0152 84F84220 		strb	r2, [r4, #66]
3874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6719              		.loc 1 3874 0
 6720 0156 636C     		ldr	r3, [r4, #68]
 6721 0158 43F08003 		orr	r3, r3, #128
 6722 015c 6364     		str	r3, [r4, #68]
3877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6723              		.loc 1 3877 0
 6724 015e 84F84020 		strb	r2, [r4, #64]
3879:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6725              		.loc 1 3879 0
 6726 0162 0125     		movs	r5, #1
 6727              	.LVL568:
 6728 0164 54E7     		b	.L522
 6729              	.LVL569:
 6730              	.L539:
3893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 6731              		.loc 1 3893 0
 6732 0166 2823     		movs	r3, #40
 6733 0168 84F84130 		strb	r3, [r4, #65]
3894:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6734              		.loc 1 3894 0
 6735 016c 0022     		movs	r2, #0
 6736 016e 84F84220 		strb	r2, [r4, #66]
3897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6737              		.loc 1 3897 0
 6738 0172 636C     		ldr	r3, [r4, #68]
 6739 0174 43F01003 		orr	r3, r3, #16
 6740 0178 6364     		str	r3, [r4, #68]
3900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6741              		.loc 1 3900 0
 6742 017a 84F84020 		strb	r2, [r4, #64]
3902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6743              		.loc 1 3902 0
 6744 017e 0125     		movs	r5, #1
 6745 0180 46E7     		b	.L522
 6746              	.L530:
3909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6747              		.loc 1 3909 0
 6748 0182 0822     		movs	r2, #8
 6749 0184 DA61     		str	r2, [r3, #28]
 6750 0186 9AE7     		b	.L531
 6751              	.LVL570:
 6752              	.L533:
3779:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6753              		.loc 1 3779 0
 6754 0188 0225     		movs	r5, #2
 6755 018a 41E7     		b	.L522
 6756              	.L541:
 6757              		.align	2
 6758              	.L540:
 6759 018c 00000000 		.word	I2C_Slave_ISR_DMA
 6760 0190 00000000 		.word	I2C_DMASlaveTransmitCplt
 6761 0194 00000000 		.word	I2C_DMAError
 6762 0198 00000000 		.word	I2C_DMAAbort
 6763              		.cfi_endproc
 6764              	.LFE345:
 6766              		.section	.text.HAL_I2C_Slave_Seq_Receive_IT,"ax",%progbits
 6767              		.align	1
 6768              		.global	HAL_I2C_Slave_Seq_Receive_IT
 6769              		.syntax unified
 6770              		.thumb
 6771              		.thumb_func
 6772              		.fpu fpv4-sp-d16
 6774              	HAL_I2C_Slave_Seq_Receive_IT:
 6775              	.LFB346:
3944:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Check the parameters */
 6776              		.loc 1 3944 0
 6777              		.cfi_startproc
 6778              		@ args = 0, pretend = 0, frame = 0
 6779              		@ frame_needed = 0, uses_anonymous_args = 0
 6780              	.LVL571:
 6781 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6782              		.cfi_def_cfa_offset 24
 6783              		.cfi_offset 3, -24
 6784              		.cfi_offset 4, -20
 6785              		.cfi_offset 5, -16
 6786              		.cfi_offset 6, -12
 6787              		.cfi_offset 7, -8
 6788              		.cfi_offset 14, -4
3948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 6789              		.loc 1 3948 0
 6790 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6791 0006 04F02804 		and	r4, r4, #40
 6792 000a 282C     		cmp	r4, #40
 6793 000c 01D0     		beq	.L551
4024:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 6794              		.loc 1 4024 0
 6795 000e 0120     		movs	r0, #1
 6796              	.LVL572:
 6797              	.L543:
4026:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6798              		.loc 1 4026 0
 6799 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6800              	.LVL573:
 6801              	.L551:
3950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6802              		.loc 1 3950 0
 6803 0012 01B1     		cbz	r1, .L544
3950:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6804              		.loc 1 3950 0 is_stmt 0 discriminator 1
 6805 0014 22B9     		cbnz	r2, .L545
 6806              	.L544:
3952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 6807              		.loc 1 3952 0 is_stmt 1
 6808 0016 4FF40073 		mov	r3, #512
 6809              	.LVL574:
 6810 001a 4364     		str	r3, [r0, #68]
3953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6811              		.loc 1 3953 0
 6812 001c 0120     		movs	r0, #1
 6813              	.LVL575:
 6814 001e F7E7     		b	.L543
 6815              	.LVL576:
 6816              	.L545:
 6817 0020 1F46     		mov	r7, r3
 6818 0022 1646     		mov	r6, r2
 6819 0024 0D46     		mov	r5, r1
 6820 0026 0446     		mov	r4, r0
3957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6821              		.loc 1 3957 0
 6822 0028 48F20201 		movw	r1, #32770
 6823              	.LVL577:
 6824 002c FFF7FEFF 		bl	I2C_Disable_IRQ
 6825              	.LVL578:
3960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6826              		.loc 1 3960 0
 6827 0030 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 6828 0034 012B     		cmp	r3, #1
 6829 0036 47D0     		beq	.L549
3960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6830              		.loc 1 3960 0 is_stmt 0 discriminator 2
 6831 0038 0123     		movs	r3, #1
 6832 003a 84F84030 		strb	r3, [r4, #64]
3964:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6833              		.loc 1 3964 0 is_stmt 1 discriminator 2
 6834 003e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6835 0042 DBB2     		uxtb	r3, r3
 6836 0044 292B     		cmp	r3, #41
 6837 0046 24D0     		beq	.L552
 6838              	.L546:
3990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6839              		.loc 1 3990 0
 6840 0048 2A23     		movs	r3, #42
 6841 004a 84F84130 		strb	r3, [r4, #65]
3991:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6842              		.loc 1 3991 0
 6843 004e 2023     		movs	r3, #32
 6844 0050 84F84230 		strb	r3, [r4, #66]
3992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6845              		.loc 1 3992 0
 6846 0054 0023     		movs	r3, #0
 6847 0056 6364     		str	r3, [r4, #68]
3995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6848              		.loc 1 3995 0
 6849 0058 2268     		ldr	r2, [r4]
 6850 005a 5368     		ldr	r3, [r2, #4]
 6851 005c 23F40043 		bic	r3, r3, #32768
 6852 0060 5360     		str	r3, [r2, #4]
3998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6853              		.loc 1 3998 0
 6854 0062 6562     		str	r5, [r4, #36]
3999:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6855              		.loc 1 3999 0
 6856 0064 6685     		strh	r6, [r4, #42]	@ movhi
4000:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6857              		.loc 1 4000 0
 6858 0066 638D     		ldrh	r3, [r4, #42]
 6859 0068 2385     		strh	r3, [r4, #40]	@ movhi
4001:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6860              		.loc 1 4001 0
 6861 006a E762     		str	r7, [r4, #44]
4002:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6862              		.loc 1 4002 0
 6863 006c 174B     		ldr	r3, .L553
 6864 006e 6363     		str	r3, [r4, #52]
4004:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6865              		.loc 1 4004 0
 6866 0070 2368     		ldr	r3, [r4]
 6867 0072 9A69     		ldr	r2, [r3, #24]
 6868 0074 12F4803F 		tst	r2, #65536
 6869 0078 01D1     		bne	.L547
4008:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6870              		.loc 1 4008 0
 6871 007a 0822     		movs	r2, #8
 6872 007c DA61     		str	r2, [r3, #28]
 6873              	.L547:
4012:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6874              		.loc 1 4012 0
 6875 007e 0025     		movs	r5, #0
 6876              	.LVL579:
 6877 0080 84F84050 		strb	r5, [r4, #64]
4018:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6878              		.loc 1 4018 0
 6879 0084 48F20201 		movw	r1, #32770
 6880 0088 2046     		mov	r0, r4
 6881 008a FFF7FEFF 		bl	I2C_Enable_IRQ
 6882              	.LVL580:
4020:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 6883              		.loc 1 4020 0
 6884 008e 2846     		mov	r0, r5
 6885 0090 BEE7     		b	.L543
 6886              	.LVL581:
 6887              	.L552:
3967:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6888              		.loc 1 3967 0
 6889 0092 0121     		movs	r1, #1
 6890 0094 2046     		mov	r0, r4
 6891 0096 FFF7FEFF 		bl	I2C_Disable_IRQ
 6892              	.LVL582:
3969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 6893              		.loc 1 3969 0
 6894 009a 2368     		ldr	r3, [r4]
 6895 009c 1A68     		ldr	r2, [r3]
 6896 009e 12F4804F 		tst	r2, #16384
 6897 00a2 D1D0     		beq	.L546
3971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6898              		.loc 1 3971 0
 6899 00a4 1A68     		ldr	r2, [r3]
 6900 00a6 22F48042 		bic	r2, r2, #16384
 6901 00aa 1A60     		str	r2, [r3]
3974:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 6902              		.loc 1 3974 0
 6903 00ac A36B     		ldr	r3, [r4, #56]
 6904 00ae 002B     		cmp	r3, #0
 6905 00b0 CAD0     		beq	.L546
3978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6906              		.loc 1 3978 0
 6907 00b2 074A     		ldr	r2, .L553+4
 6908 00b4 9A63     		str	r2, [r3, #56]
3981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 6909              		.loc 1 3981 0
 6910 00b6 A06B     		ldr	r0, [r4, #56]
 6911 00b8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6912              	.LVL583:
 6913 00bc 0028     		cmp	r0, #0
 6914 00be C3D0     		beq	.L546
3984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
 6915              		.loc 1 3984 0
 6916 00c0 A06B     		ldr	r0, [r4, #56]
 6917 00c2 836B     		ldr	r3, [r0, #56]
 6918 00c4 9847     		blx	r3
 6919              	.LVL584:
 6920 00c6 BFE7     		b	.L546
 6921              	.L549:
3960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6922              		.loc 1 3960 0
 6923 00c8 0220     		movs	r0, #2
 6924 00ca A1E7     		b	.L543
 6925              	.L554:
 6926              		.align	2
 6927              	.L553:
 6928 00cc 00000000 		.word	I2C_Slave_ISR_IT
 6929 00d0 00000000 		.word	I2C_DMAAbort
 6930              		.cfi_endproc
 6931              	.LFE346:
 6933              		.section	.text.HAL_I2C_Slave_Seq_Receive_DMA,"ax",%progbits
 6934              		.align	1
 6935              		.global	HAL_I2C_Slave_Seq_Receive_DMA
 6936              		.syntax unified
 6937              		.thumb
 6938              		.thumb_func
 6939              		.fpu fpv4-sp-d16
 6941              	HAL_I2C_Slave_Seq_Receive_DMA:
 6942              	.LFB347:
4040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_StatusTypeDef dmaxferstatus;
 6943              		.loc 1 4040 0
 6944              		.cfi_startproc
 6945              		@ args = 0, pretend = 0, frame = 0
 6946              		@ frame_needed = 0, uses_anonymous_args = 0
 6947              	.LVL585:
 6948 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6949              		.cfi_def_cfa_offset 24
 6950              		.cfi_offset 3, -24
 6951              		.cfi_offset 4, -20
 6952              		.cfi_offset 5, -16
 6953              		.cfi_offset 6, -12
 6954              		.cfi_offset 7, -8
 6955              		.cfi_offset 14, -4
4046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 6956              		.loc 1 4046 0
 6957 0002 90F84140 		ldrb	r4, [r0, #65]	@ zero_extendqisi2
 6958 0006 04F02804 		and	r4, r4, #40
 6959 000a 282C     		cmp	r4, #40
 6960 000c 02D0     		beq	.L570
4204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 6961              		.loc 1 4204 0
 6962 000e 0125     		movs	r5, #1
 6963              	.LVL586:
 6964              	.L556:
4206:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6965              		.loc 1 4206 0
 6966 0010 2846     		mov	r0, r5
 6967 0012 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6968              	.LVL587:
 6969              	.L570:
4048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6970              		.loc 1 4048 0
 6971 0014 01B1     		cbz	r1, .L557
4048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 6972              		.loc 1 4048 0 is_stmt 0 discriminator 1
 6973 0016 22B9     		cbnz	r2, .L558
 6974              	.L557:
4050:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       return  HAL_ERROR;
 6975              		.loc 1 4050 0 is_stmt 1
 6976 0018 4FF40073 		mov	r3, #512
 6977              	.LVL588:
 6978 001c 4364     		str	r3, [r0, #68]
4051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 6979              		.loc 1 4051 0
 6980 001e 0125     		movs	r5, #1
 6981 0020 F6E7     		b	.L556
 6982              	.LVL589:
 6983              	.L558:
 6984 0022 1F46     		mov	r7, r3
 6985 0024 1646     		mov	r6, r2
 6986 0026 0D46     		mov	r5, r1
 6987 0028 0446     		mov	r4, r0
4055:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6988              		.loc 1 4055 0
 6989 002a 48F20201 		movw	r1, #32770
 6990              	.LVL590:
 6991 002e FFF7FEFF 		bl	I2C_Disable_IRQ
 6992              	.LVL591:
4058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6993              		.loc 1 4058 0
 6994 0032 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 6995 0036 012B     		cmp	r3, #1
 6996 0038 00F0A480 		beq	.L567
4058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 6997              		.loc 1 4058 0 is_stmt 0 discriminator 2
 6998 003c 0123     		movs	r3, #1
 6999 003e 84F84030 		strb	r3, [r4, #64]
4062:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 7000              		.loc 1 4062 0 is_stmt 1 discriminator 2
 7001 0042 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7002 0046 DBB2     		uxtb	r3, r3
 7003 0048 292B     		cmp	r3, #41
 7004 004a 49D0     		beq	.L571
4087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 7005              		.loc 1 4087 0
 7006 004c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7007 0050 DBB2     		uxtb	r3, r3
 7008 0052 2A2B     		cmp	r3, #42
 7009 0054 60D0     		beq	.L572
 7010              	.L560:
4114:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 7011              		.loc 1 4114 0
 7012 0056 2A23     		movs	r3, #42
 7013 0058 84F84130 		strb	r3, [r4, #65]
4115:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 7014              		.loc 1 4115 0
 7015 005c 2023     		movs	r3, #32
 7016 005e 84F84230 		strb	r3, [r4, #66]
4116:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7017              		.loc 1 4116 0
 7018 0062 0023     		movs	r3, #0
 7019 0064 6364     		str	r3, [r4, #68]
4119:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7020              		.loc 1 4119 0
 7021 0066 2268     		ldr	r2, [r4]
 7022 0068 5368     		ldr	r3, [r2, #4]
 7023 006a 23F40043 		bic	r3, r3, #32768
 7024 006e 5360     		str	r3, [r2, #4]
4122:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 7025              		.loc 1 4122 0
 7026 0070 6562     		str	r5, [r4, #36]
4123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 7027              		.loc 1 4123 0
 7028 0072 6685     		strh	r6, [r4, #42]	@ movhi
4124:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 7029              		.loc 1 4124 0
 7030 0074 638D     		ldrh	r3, [r4, #42]
 7031 0076 2385     		strh	r3, [r4, #40]	@ movhi
4125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 7032              		.loc 1 4125 0
 7033 0078 E762     		str	r7, [r4, #44]
4126:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7034              		.loc 1 4126 0
 7035 007a 434B     		ldr	r3, .L574
 7036 007c 6363     		str	r3, [r4, #52]
4128:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 7037              		.loc 1 4128 0
 7038 007e E36B     		ldr	r3, [r4, #60]
 7039 0080 002B     		cmp	r3, #0
 7040 0082 60D0     		beq	.L561
4131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7041              		.loc 1 4131 0
 7042 0084 414A     		ldr	r2, .L574+4
 7043 0086 DA62     		str	r2, [r3, #44]
4134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7044              		.loc 1 4134 0
 7045 0088 E36B     		ldr	r3, [r4, #60]
 7046 008a 414A     		ldr	r2, .L574+8
 7047 008c 5A63     		str	r2, [r3, #52]
4137:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 7048              		.loc 1 4137 0
 7049 008e E26B     		ldr	r2, [r4, #60]
 7050 0090 0023     		movs	r3, #0
 7051 0092 1363     		str	r3, [r2, #48]
4138:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7052              		.loc 1 4138 0
 7053 0094 E26B     		ldr	r2, [r4, #60]
 7054 0096 9363     		str	r3, [r2, #56]
4141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 7055              		.loc 1 4141 0
 7056 0098 2168     		ldr	r1, [r4]
 7057 009a 238D     		ldrh	r3, [r4, #40]
 7058 009c 2A46     		mov	r2, r5
 7059 009e 2431     		adds	r1, r1, #36
 7060 00a0 E06B     		ldr	r0, [r4, #60]
 7061 00a2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7062              	.LVL592:
4158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 7063              		.loc 1 4158 0
 7064 00a6 0546     		mov	r5, r0
 7065              	.LVL593:
 7066 00a8 0028     		cmp	r0, #0
 7067 00aa 5AD1     		bne	.L573
4161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7068              		.loc 1 4161 0
 7069 00ac 638D     		ldrh	r3, [r4, #42]
 7070 00ae 228D     		ldrh	r2, [r4, #40]
 7071 00b0 9B1A     		subs	r3, r3, r2
 7072 00b2 9BB2     		uxth	r3, r3
 7073 00b4 6385     		strh	r3, [r4, #42]	@ movhi
4164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 7074              		.loc 1 4164 0
 7075 00b6 0023     		movs	r3, #0
 7076 00b8 2385     		strh	r3, [r4, #40]	@ movhi
4181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 7077              		.loc 1 4181 0
 7078 00ba 2368     		ldr	r3, [r4]
 7079 00bc 9A69     		ldr	r2, [r3, #24]
 7080 00be 12F4803F 		tst	r2, #65536
 7081 00c2 5CD0     		beq	.L564
 7082              	.L565:
4189:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7083              		.loc 1 4189 0
 7084 00c4 0023     		movs	r3, #0
 7085 00c6 84F84030 		strb	r3, [r4, #64]
4195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7086              		.loc 1 4195 0
 7087 00ca 48F20201 		movw	r1, #32770
 7088 00ce 2046     		mov	r0, r4
 7089              	.LVL594:
 7090 00d0 FFF7FEFF 		bl	I2C_Enable_IRQ
 7091              	.LVL595:
4198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7092              		.loc 1 4198 0
 7093 00d4 2268     		ldr	r2, [r4]
 7094 00d6 1368     		ldr	r3, [r2]
 7095 00d8 43F40043 		orr	r3, r3, #32768
 7096 00dc 1360     		str	r3, [r2]
4200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7097              		.loc 1 4200 0
 7098 00de 97E7     		b	.L556
 7099              	.LVL596:
 7100              	.L571:
4065:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7101              		.loc 1 4065 0
 7102 00e0 0121     		movs	r1, #1
 7103 00e2 2046     		mov	r0, r4
 7104 00e4 FFF7FEFF 		bl	I2C_Disable_IRQ
 7105              	.LVL597:
4067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 7106              		.loc 1 4067 0
 7107 00e8 2368     		ldr	r3, [r4]
 7108 00ea 1A68     		ldr	r2, [r3]
 7109 00ec 12F4804F 		tst	r2, #16384
 7110 00f0 B1D0     		beq	.L560
4070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 7111              		.loc 1 4070 0
 7112 00f2 A26B     		ldr	r2, [r4, #56]
 7113 00f4 002A     		cmp	r2, #0
 7114 00f6 AED0     		beq	.L560
4072:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7115              		.loc 1 4072 0
 7116 00f8 1A68     		ldr	r2, [r3]
 7117 00fa 22F48042 		bic	r2, r2, #16384
 7118 00fe 1A60     		str	r2, [r3]
4076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7119              		.loc 1 4076 0
 7120 0100 A36B     		ldr	r3, [r4, #56]
 7121 0102 244A     		ldr	r2, .L574+12
 7122 0104 9A63     		str	r2, [r3, #56]
4079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 7123              		.loc 1 4079 0
 7124 0106 A06B     		ldr	r0, [r4, #56]
 7125 0108 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7126              	.LVL598:
 7127 010c 0028     		cmp	r0, #0
 7128 010e A2D0     		beq	.L560
4082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
 7129              		.loc 1 4082 0
 7130 0110 A06B     		ldr	r0, [r4, #56]
 7131 0112 836B     		ldr	r3, [r0, #56]
 7132 0114 9847     		blx	r3
 7133              	.LVL599:
 7134 0116 9EE7     		b	.L560
 7135              	.L572:
4089:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 7136              		.loc 1 4089 0
 7137 0118 2368     		ldr	r3, [r4]
 7138 011a 1A68     		ldr	r2, [r3]
 7139 011c 12F4004F 		tst	r2, #32768
 7140 0120 99D0     		beq	.L560
4091:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7141              		.loc 1 4091 0
 7142 0122 1A68     		ldr	r2, [r3]
 7143 0124 22F40042 		bic	r2, r2, #32768
 7144 0128 1A60     		str	r2, [r3]
4094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 7145              		.loc 1 4094 0
 7146 012a E36B     		ldr	r3, [r4, #60]
 7147 012c 002B     		cmp	r3, #0
 7148 012e 92D0     		beq	.L560
4098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7149              		.loc 1 4098 0
 7150 0130 184A     		ldr	r2, .L574+12
 7151 0132 9A63     		str	r2, [r3, #56]
4101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 7152              		.loc 1 4101 0
 7153 0134 E06B     		ldr	r0, [r4, #60]
 7154 0136 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7155              	.LVL600:
 7156 013a 0028     		cmp	r0, #0
 7157 013c 8BD0     		beq	.L560
4104:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
 7158              		.loc 1 4104 0
 7159 013e E06B     		ldr	r0, [r4, #60]
 7160 0140 836B     		ldr	r3, [r0, #56]
 7161 0142 9847     		blx	r3
 7162              	.LVL601:
 7163 0144 87E7     		b	.L560
 7164              	.L561:
4146:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7165              		.loc 1 4146 0
 7166 0146 2823     		movs	r3, #40
 7167 0148 84F84130 		strb	r3, [r4, #65]
4147:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7168              		.loc 1 4147 0
 7169 014c 0022     		movs	r2, #0
 7170 014e 84F84220 		strb	r2, [r4, #66]
4150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7171              		.loc 1 4150 0
 7172 0152 636C     		ldr	r3, [r4, #68]
 7173 0154 43F08003 		orr	r3, r3, #128
 7174 0158 6364     		str	r3, [r4, #68]
4153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7175              		.loc 1 4153 0
 7176 015a 84F84020 		strb	r2, [r4, #64]
4155:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 7177              		.loc 1 4155 0
 7178 015e 0125     		movs	r5, #1
 7179              	.LVL602:
 7180 0160 56E7     		b	.L556
 7181              	.LVL603:
 7182              	.L573:
4169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->Mode      = HAL_I2C_MODE_NONE;
 7183              		.loc 1 4169 0
 7184 0162 2823     		movs	r3, #40
 7185 0164 84F84130 		strb	r3, [r4, #65]
4170:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7186              		.loc 1 4170 0
 7187 0168 0022     		movs	r2, #0
 7188 016a 84F84220 		strb	r2, [r4, #66]
4173:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7189              		.loc 1 4173 0
 7190 016e 636C     		ldr	r3, [r4, #68]
 7191 0170 43F01003 		orr	r3, r3, #16
 7192 0174 6364     		str	r3, [r4, #68]
4176:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7193              		.loc 1 4176 0
 7194 0176 84F84020 		strb	r2, [r4, #64]
4178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 7195              		.loc 1 4178 0
 7196 017a 0125     		movs	r5, #1
 7197 017c 48E7     		b	.L556
 7198              	.L564:
4185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 7199              		.loc 1 4185 0
 7200 017e 0822     		movs	r2, #8
 7201 0180 DA61     		str	r2, [r3, #28]
 7202 0182 9FE7     		b	.L565
 7203              	.LVL604:
 7204              	.L567:
4058:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7205              		.loc 1 4058 0
 7206 0184 0225     		movs	r5, #2
 7207              	.LVL605:
 7208 0186 43E7     		b	.L556
 7209              	.L575:
 7210              		.align	2
 7211              	.L574:
 7212 0188 00000000 		.word	I2C_Slave_ISR_DMA
 7213 018c 00000000 		.word	I2C_DMASlaveReceiveCplt
 7214 0190 00000000 		.word	I2C_DMAError
 7215 0194 00000000 		.word	I2C_DMAAbort
 7216              		.cfi_endproc
 7217              	.LFE347:
 7219              		.section	.text.HAL_I2C_EnableListen_IT,"ax",%progbits
 7220              		.align	1
 7221              		.global	HAL_I2C_EnableListen_IT
 7222              		.syntax unified
 7223              		.thumb
 7224              		.thumb_func
 7225              		.fpu fpv4-sp-d16
 7227              	HAL_I2C_EnableListen_IT:
 7228              	.LFB348:
4215:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_READY)
 7229              		.loc 1 4215 0
 7230              		.cfi_startproc
 7231              		@ args = 0, pretend = 0, frame = 0
 7232              		@ frame_needed = 0, uses_anonymous_args = 0
 7233              	.LVL606:
 7234 0000 08B5     		push	{r3, lr}
 7235              		.cfi_def_cfa_offset 8
 7236              		.cfi_offset 3, -8
 7237              		.cfi_offset 14, -4
4216:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7238              		.loc 1 4216 0
 7239 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7240 0006 DBB2     		uxtb	r3, r3
 7241 0008 202B     		cmp	r3, #32
 7242 000a 01D0     		beq	.L580
4228:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7243              		.loc 1 4228 0
 7244 000c 0220     		movs	r0, #2
 7245              	.LVL607:
 7246              	.L577:
4230:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7247              		.loc 1 4230 0
 7248 000e 08BD     		pop	{r3, pc}
 7249              	.LVL608:
 7250              	.L580:
4218:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
 7251              		.loc 1 4218 0
 7252 0010 2823     		movs	r3, #40
 7253 0012 80F84130 		strb	r3, [r0, #65]
4219:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7254              		.loc 1 4219 0
 7255 0016 044B     		ldr	r3, .L581
 7256 0018 4363     		str	r3, [r0, #52]
4222:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7257              		.loc 1 4222 0
 7258 001a 4FF40041 		mov	r1, #32768
 7259 001e FFF7FEFF 		bl	I2C_Enable_IRQ
 7260              	.LVL609:
4224:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7261              		.loc 1 4224 0
 7262 0022 0020     		movs	r0, #0
 7263 0024 F3E7     		b	.L577
 7264              	.L582:
 7265 0026 00BF     		.align	2
 7266              	.L581:
 7267 0028 00000000 		.word	I2C_Slave_ISR_IT
 7268              		.cfi_endproc
 7269              	.LFE348:
 7271              		.section	.text.HAL_I2C_DisableListen_IT,"ax",%progbits
 7272              		.align	1
 7273              		.global	HAL_I2C_DisableListen_IT
 7274              		.syntax unified
 7275              		.thumb
 7276              		.thumb_func
 7277              		.fpu fpv4-sp-d16
 7279              	HAL_I2C_DisableListen_IT:
 7280              	.LFB349:
4239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7281              		.loc 1 4239 0
 7282              		.cfi_startproc
 7283              		@ args = 0, pretend = 0, frame = 0
 7284              		@ frame_needed = 0, uses_anonymous_args = 0
 7285              	.LVL610:
4244:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7286              		.loc 1 4244 0
 7287 0000 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7288 0004 DBB2     		uxtb	r3, r3
 7289 0006 282B     		cmp	r3, #40
 7290 0008 01D0     		beq	.L590
4259:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7291              		.loc 1 4259 0
 7292 000a 0220     		movs	r0, #2
 7293              	.LVL611:
4261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7294              		.loc 1 4261 0
 7295 000c 7047     		bx	lr
 7296              	.LVL612:
 7297              	.L590:
4239:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
 7298              		.loc 1 4239 0
 7299 000e 10B5     		push	{r4, lr}
 7300              		.cfi_def_cfa_offset 8
 7301              		.cfi_offset 4, -8
 7302              		.cfi_offset 14, -4
4246:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
 7303              		.loc 1 4246 0
 7304 0010 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 7305              	.LVL613:
4247:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7306              		.loc 1 4247 0
 7307 0014 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7308 0018 02F00302 		and	r2, r2, #3
 7309              	.LVL614:
 7310 001c 1343     		orrs	r3, r3, r2
 7311 001e 0363     		str	r3, [r0, #48]
4248:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 7312              		.loc 1 4248 0
 7313 0020 2023     		movs	r3, #32
 7314 0022 80F84130 		strb	r3, [r0, #65]
4249:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR = NULL;
 7315              		.loc 1 4249 0
 7316 0026 0024     		movs	r4, #0
 7317 0028 80F84240 		strb	r4, [r0, #66]
4250:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7318              		.loc 1 4250 0
 7319 002c 4463     		str	r4, [r0, #52]
4253:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7320              		.loc 1 4253 0
 7321 002e 4FF40041 		mov	r1, #32768
 7322 0032 FFF7FEFF 		bl	I2C_Disable_IRQ
 7323              	.LVL615:
4255:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7324              		.loc 1 4255 0
 7325 0036 2046     		mov	r0, r4
4261:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7326              		.loc 1 4261 0
 7327 0038 10BD     		pop	{r4, pc}
 7328              		.cfi_endproc
 7329              	.LFE349:
 7331              		.section	.text.HAL_I2C_Master_Abort_IT,"ax",%progbits
 7332              		.align	1
 7333              		.global	HAL_I2C_Master_Abort_IT
 7334              		.syntax unified
 7335              		.thumb
 7336              		.thumb_func
 7337              		.fpu fpv4-sp-d16
 7339              	HAL_I2C_Master_Abort_IT:
 7340              	.LFB350:
4272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7341              		.loc 1 4272 0
 7342              		.cfi_startproc
 7343              		@ args = 0, pretend = 0, frame = 0
 7344              		@ frame_needed = 0, uses_anonymous_args = 0
 7345              	.LVL616:
4273:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7346              		.loc 1 4273 0
 7347 0000 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 7348 0004 DBB2     		uxtb	r3, r3
 7349 0006 102B     		cmp	r3, #16
 7350 0008 01D0     		beq	.L601
4315:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7351              		.loc 1 4315 0
 7352 000a 0120     		movs	r0, #1
 7353              	.LVL617:
 7354 000c 7047     		bx	lr
 7355              	.LVL618:
 7356              	.L601:
4276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7357              		.loc 1 4276 0
 7358 000e 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7359 0012 012B     		cmp	r3, #1
 7360 0014 32D0     		beq	.L596
4272:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->Mode == HAL_I2C_MODE_MASTER)
 7361              		.loc 1 4272 0 discriminator 2
 7362 0016 30B5     		push	{r4, r5, lr}
 7363              		.cfi_def_cfa_offset 12
 7364              		.cfi_offset 4, -12
 7365              		.cfi_offset 5, -8
 7366              		.cfi_offset 14, -4
 7367 0018 83B0     		sub	sp, sp, #12
 7368              		.cfi_def_cfa_offset 24
 7369 001a 0C46     		mov	r4, r1
 7370 001c 0546     		mov	r5, r0
4276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7371              		.loc 1 4276 0 discriminator 2
 7372 001e 0123     		movs	r3, #1
 7373 0020 80F84030 		strb	r3, [r0, #64]
4279:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 7374              		.loc 1 4279 0 discriminator 2
 7375 0024 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7376 0028 DBB2     		uxtb	r3, r3
 7377 002a 212B     		cmp	r3, #33
 7378 002c 1AD0     		beq	.L602
4284:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 7379              		.loc 1 4284 0
 7380 002e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7381 0032 DBB2     		uxtb	r3, r3
 7382 0034 222B     		cmp	r3, #34
 7383 0036 1BD0     		beq	.L603
 7384              	.LVL619:
 7385              	.L594:
4295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7386              		.loc 1 4295 0
 7387 0038 6023     		movs	r3, #96
 7388 003a 85F84130 		strb	r3, [r5, #65]
4299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7389              		.loc 1 4299 0
 7390 003e 104B     		ldr	r3, .L604
 7391 0040 0093     		str	r3, [sp]
 7392 0042 4FF00073 		mov	r3, #33554432
 7393 0046 0122     		movs	r2, #1
 7394 0048 2146     		mov	r1, r4
 7395 004a 2846     		mov	r0, r5
 7396 004c FFF7FEFF 		bl	I2C_TransferConfig
 7397              	.LVL620:
4302:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7398              		.loc 1 4302 0
 7399 0050 0024     		movs	r4, #0
 7400 0052 85F84040 		strb	r4, [r5, #64]
4307:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7401              		.loc 1 4307 0
 7402 0056 2021     		movs	r1, #32
 7403 0058 2846     		mov	r0, r5
 7404 005a FFF7FEFF 		bl	I2C_Enable_IRQ
 7405              	.LVL621:
4309:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7406              		.loc 1 4309 0
 7407 005e 2046     		mov	r0, r4
4317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7408              		.loc 1 4317 0
 7409 0060 03B0     		add	sp, sp, #12
 7410              		.cfi_remember_state
 7411              		.cfi_def_cfa_offset 12
 7412              		@ sp needed
 7413 0062 30BD     		pop	{r4, r5, pc}
 7414              	.LVL622:
 7415              	.L602:
 7416              		.cfi_restore_state
4281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7417              		.loc 1 4281 0
 7418 0064 0121     		movs	r1, #1
 7419              	.LVL623:
 7420 0066 FFF7FEFF 		bl	I2C_Disable_IRQ
 7421              	.LVL624:
4282:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 7422              		.loc 1 4282 0
 7423 006a 1123     		movs	r3, #17
 7424 006c 2B63     		str	r3, [r5, #48]
 7425 006e E3E7     		b	.L594
 7426              	.LVL625:
 7427              	.L603:
4286:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7428              		.loc 1 4286 0
 7429 0070 0221     		movs	r1, #2
 7430              	.LVL626:
 7431 0072 FFF7FEFF 		bl	I2C_Disable_IRQ
 7432              	.LVL627:
4287:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 7433              		.loc 1 4287 0
 7434 0076 1223     		movs	r3, #18
 7435 0078 2B63     		str	r3, [r5, #48]
 7436 007a DDE7     		b	.L594
 7437              	.LVL628:
 7438              	.L596:
 7439              		.cfi_def_cfa_offset 0
 7440              		.cfi_restore 4
 7441              		.cfi_restore 5
 7442              		.cfi_restore 14
4276:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7443              		.loc 1 4276 0
 7444 007c 0220     		movs	r0, #2
 7445              	.LVL629:
4317:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7446              		.loc 1 4317 0
 7447 007e 7047     		bx	lr
 7448              	.L605:
 7449              		.align	2
 7450              	.L604:
 7451 0080 00400080 		.word	-2147467264
 7452              		.cfi_endproc
 7453              	.LFE350:
 7455              		.section	.text.HAL_I2C_EV_IRQHandler,"ax",%progbits
 7456              		.align	1
 7457              		.global	HAL_I2C_EV_IRQHandler
 7458              		.syntax unified
 7459              		.thumb
 7460              		.thumb_func
 7461              		.fpu fpv4-sp-d16
 7463              	HAL_I2C_EV_IRQHandler:
 7464              	.LFB351:
4334:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
 7465              		.loc 1 4334 0
 7466              		.cfi_startproc
 7467              		@ args = 0, pretend = 0, frame = 0
 7468              		@ frame_needed = 0, uses_anonymous_args = 0
 7469              	.LVL630:
 7470 0000 08B5     		push	{r3, lr}
 7471              		.cfi_def_cfa_offset 8
 7472              		.cfi_offset 3, -8
 7473              		.cfi_offset 14, -4
4336:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 7474              		.loc 1 4336 0
 7475 0002 0368     		ldr	r3, [r0]
 7476 0004 9969     		ldr	r1, [r3, #24]
 7477              	.LVL631:
4337:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7478              		.loc 1 4337 0
 7479 0006 1A68     		ldr	r2, [r3]
 7480              	.LVL632:
4340:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7481              		.loc 1 4340 0
 7482 0008 436B     		ldr	r3, [r0, #52]
 7483 000a 03B1     		cbz	r3, .L606
4342:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7484              		.loc 1 4342 0
 7485 000c 9847     		blx	r3
 7486              	.LVL633:
 7487              	.L606:
4344:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7488              		.loc 1 4344 0
 7489 000e 08BD     		pop	{r3, pc}
 7490              		.cfi_endproc
 7491              	.LFE351:
 7493              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 7494              		.align	1
 7495              		.weak	HAL_I2C_MasterTxCpltCallback
 7496              		.syntax unified
 7497              		.thumb
 7498              		.thumb_func
 7499              		.fpu fpv4-sp-d16
 7501              	HAL_I2C_MasterTxCpltCallback:
 7502              	.LFB353:
4402:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7503              		.loc 1 4402 0
 7504              		.cfi_startproc
 7505              		@ args = 0, pretend = 0, frame = 0
 7506              		@ frame_needed = 0, uses_anonymous_args = 0
 7507              		@ link register save eliminated.
 7508              	.LVL634:
4409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7509              		.loc 1 4409 0
 7510 0000 7047     		bx	lr
 7511              		.cfi_endproc
 7512              	.LFE353:
 7514              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 7515              		.align	1
 7516              		.weak	HAL_I2C_MasterRxCpltCallback
 7517              		.syntax unified
 7518              		.thumb
 7519              		.thumb_func
 7520              		.fpu fpv4-sp-d16
 7522              	HAL_I2C_MasterRxCpltCallback:
 7523              	.LFB354:
4418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7524              		.loc 1 4418 0
 7525              		.cfi_startproc
 7526              		@ args = 0, pretend = 0, frame = 0
 7527              		@ frame_needed = 0, uses_anonymous_args = 0
 7528              		@ link register save eliminated.
 7529              	.LVL635:
4425:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7530              		.loc 1 4425 0
 7531 0000 7047     		bx	lr
 7532              		.cfi_endproc
 7533              	.LFE354:
 7535              		.section	.text.I2C_ITMasterSeqCplt,"ax",%progbits
 7536              		.align	1
 7537              		.syntax unified
 7538              		.thumb
 7539              		.thumb_func
 7540              		.fpu fpv4-sp-d16
 7542              	I2C_ITMasterSeqCplt:
 7543              	.LFB373:
5376:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Reset I2C handle mode */
 7544              		.loc 1 5376 0
 7545              		.cfi_startproc
 7546              		@ args = 0, pretend = 0, frame = 0
 7547              		@ frame_needed = 0, uses_anonymous_args = 0
 7548              	.LVL636:
 7549 0000 38B5     		push	{r3, r4, r5, lr}
 7550              		.cfi_def_cfa_offset 16
 7551              		.cfi_offset 3, -16
 7552              		.cfi_offset 4, -12
 7553              		.cfi_offset 5, -8
 7554              		.cfi_offset 14, -4
 7555 0002 0446     		mov	r4, r0
5378:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7556              		.loc 1 5378 0
 7557 0004 0023     		movs	r3, #0
 7558 0006 80F84230 		strb	r3, [r0, #66]
5382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7559              		.loc 1 5382 0
 7560 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7561 000e DBB2     		uxtb	r3, r3
 7562 0010 212B     		cmp	r3, #33
 7563 0012 0FD0     		beq	.L615
5404:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 7564              		.loc 1 5404 0
 7565 0014 2023     		movs	r3, #32
 7566 0016 80F84130 		strb	r3, [r0, #65]
5405:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7567              		.loc 1 5405 0
 7568 001a 1223     		movs	r3, #18
 7569 001c 0363     		str	r3, [r0, #48]
5406:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7570              		.loc 1 5406 0
 7571 001e 0025     		movs	r5, #0
 7572 0020 4563     		str	r5, [r0, #52]
5409:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7573              		.loc 1 5409 0
 7574 0022 0221     		movs	r1, #2
 7575 0024 FFF7FEFF 		bl	I2C_Disable_IRQ
 7576              	.LVL637:
5412:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7577              		.loc 1 5412 0
 7578 0028 84F84050 		strb	r5, [r4, #64]
5418:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7579              		.loc 1 5418 0
 7580 002c 2046     		mov	r0, r4
 7581 002e FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 7582              	.LVL638:
 7583              	.L611:
5421:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7584              		.loc 1 5421 0
 7585 0032 38BD     		pop	{r3, r4, r5, pc}
 7586              	.LVL639:
 7587              	.L615:
5384:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 7588              		.loc 1 5384 0
 7589 0034 2023     		movs	r3, #32
 7590 0036 80F84130 		strb	r3, [r0, #65]
5385:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7591              		.loc 1 5385 0
 7592 003a 1123     		movs	r3, #17
 7593 003c 0363     		str	r3, [r0, #48]
5386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7594              		.loc 1 5386 0
 7595 003e 0025     		movs	r5, #0
 7596 0040 4563     		str	r5, [r0, #52]
5389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7597              		.loc 1 5389 0
 7598 0042 0121     		movs	r1, #1
 7599 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 7600              	.LVL640:
5392:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7601              		.loc 1 5392 0
 7602 0048 84F84050 		strb	r5, [r4, #64]
5398:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7603              		.loc 1 5398 0
 7604 004c 2046     		mov	r0, r4
 7605 004e FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 7606              	.LVL641:
 7607 0052 EEE7     		b	.L611
 7608              		.cfi_endproc
 7609              	.LFE373:
 7611              		.section	.text.HAL_I2C_SlaveTxCpltCallback,"ax",%progbits
 7612              		.align	1
 7613              		.weak	HAL_I2C_SlaveTxCpltCallback
 7614              		.syntax unified
 7615              		.thumb
 7616              		.thumb_func
 7617              		.fpu fpv4-sp-d16
 7619              	HAL_I2C_SlaveTxCpltCallback:
 7620              	.LFB355:
4433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7621              		.loc 1 4433 0
 7622              		.cfi_startproc
 7623              		@ args = 0, pretend = 0, frame = 0
 7624              		@ frame_needed = 0, uses_anonymous_args = 0
 7625              		@ link register save eliminated.
 7626              	.LVL642:
4440:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7627              		.loc 1 4440 0
 7628 0000 7047     		bx	lr
 7629              		.cfi_endproc
 7630              	.LFE355:
 7632              		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 7633              		.align	1
 7634              		.weak	HAL_I2C_SlaveRxCpltCallback
 7635              		.syntax unified
 7636              		.thumb
 7637              		.thumb_func
 7638              		.fpu fpv4-sp-d16
 7640              	HAL_I2C_SlaveRxCpltCallback:
 7641              	.LFB356:
4449:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7642              		.loc 1 4449 0
 7643              		.cfi_startproc
 7644              		@ args = 0, pretend = 0, frame = 0
 7645              		@ frame_needed = 0, uses_anonymous_args = 0
 7646              		@ link register save eliminated.
 7647              	.LVL643:
4456:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7648              		.loc 1 4456 0
 7649 0000 7047     		bx	lr
 7650              		.cfi_endproc
 7651              	.LFE356:
 7653              		.section	.text.I2C_ITSlaveSeqCplt,"ax",%progbits
 7654              		.align	1
 7655              		.syntax unified
 7656              		.thumb
 7657              		.thumb_func
 7658              		.fpu fpv4-sp-d16
 7660              	I2C_ITSlaveSeqCplt:
 7661              	.LFB374:
5429:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 7662              		.loc 1 5429 0
 7663              		.cfi_startproc
 7664              		@ args = 0, pretend = 0, frame = 0
 7665              		@ frame_needed = 0, uses_anonymous_args = 0
 7666              	.LVL644:
 7667 0000 10B5     		push	{r4, lr}
 7668              		.cfi_def_cfa_offset 8
 7669              		.cfi_offset 4, -8
 7670              		.cfi_offset 14, -4
 7671 0002 0446     		mov	r4, r0
5430:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7672              		.loc 1 5430 0
 7673 0004 0368     		ldr	r3, [r0]
 7674 0006 1A68     		ldr	r2, [r3]
 7675              	.LVL645:
5433:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7676              		.loc 1 5433 0
 7677 0008 0021     		movs	r1, #0
 7678 000a 80F84210 		strb	r1, [r0, #66]
5436:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7679              		.loc 1 5436 0
 7680 000e 12F4804F 		tst	r2, #16384
 7681 0012 0ED0     		beq	.L619
5439:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7682              		.loc 1 5439 0
 7683 0014 1A68     		ldr	r2, [r3]
 7684              	.LVL646:
 7685 0016 22F48042 		bic	r2, r2, #16384
 7686 001a 1A60     		str	r2, [r3]
 7687              	.L620:
5451:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7688              		.loc 1 5451 0
 7689 001c 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7690 0020 DBB2     		uxtb	r3, r3
 7691 0022 292B     		cmp	r3, #41
 7692 0024 0DD0     		beq	.L624
5471:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7693              		.loc 1 5471 0
 7694 0026 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7695 002a DBB2     		uxtb	r3, r3
 7696 002c 2A2B     		cmp	r3, #42
 7697 002e 18D0     		beq	.L625
 7698              	.LVL647:
 7699              	.L618:
5494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7700              		.loc 1 5494 0
 7701 0030 10BD     		pop	{r4, pc}
 7702              	.LVL648:
 7703              	.L619:
5441:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7704              		.loc 1 5441 0
 7705 0032 12F4004F 		tst	r2, #32768
 7706 0036 F1D0     		beq	.L620
5444:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7707              		.loc 1 5444 0
 7708 0038 1A68     		ldr	r2, [r3]
 7709              	.LVL649:
 7710 003a 22F40042 		bic	r2, r2, #32768
 7711 003e 1A60     		str	r2, [r3]
 7712 0040 ECE7     		b	.L620
 7713              	.L624:
5454:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 7714              		.loc 1 5454 0
 7715 0042 2823     		movs	r3, #40
 7716 0044 84F84130 		strb	r3, [r4, #65]
5455:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7717              		.loc 1 5455 0
 7718 0048 2123     		movs	r3, #33
 7719 004a 2363     		str	r3, [r4, #48]
5458:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7720              		.loc 1 5458 0
 7721 004c 0121     		movs	r1, #1
 7722 004e 2046     		mov	r0, r4
 7723              	.LVL650:
 7724 0050 FFF7FEFF 		bl	I2C_Disable_IRQ
 7725              	.LVL651:
5461:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7726              		.loc 1 5461 0
 7727 0054 0023     		movs	r3, #0
 7728 0056 84F84030 		strb	r3, [r4, #64]
5467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7729              		.loc 1 5467 0
 7730 005a 2046     		mov	r0, r4
 7731 005c FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 7732              	.LVL652:
 7733 0060 E6E7     		b	.L618
 7734              	.LVL653:
 7735              	.L625:
5474:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 7736              		.loc 1 5474 0
 7737 0062 2823     		movs	r3, #40
 7738 0064 84F84130 		strb	r3, [r4, #65]
5475:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7739              		.loc 1 5475 0
 7740 0068 2223     		movs	r3, #34
 7741 006a 2363     		str	r3, [r4, #48]
5478:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7742              		.loc 1 5478 0
 7743 006c 0221     		movs	r1, #2
 7744 006e 2046     		mov	r0, r4
 7745              	.LVL654:
 7746 0070 FFF7FEFF 		bl	I2C_Disable_IRQ
 7747              	.LVL655:
5481:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7748              		.loc 1 5481 0
 7749 0074 0023     		movs	r3, #0
 7750 0076 84F84030 		strb	r3, [r4, #64]
5487:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7751              		.loc 1 5487 0
 7752 007a 2046     		mov	r0, r4
 7753 007c FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 7754              	.LVL656:
5494:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7755              		.loc 1 5494 0
 7756 0080 D6E7     		b	.L618
 7757              		.cfi_endproc
 7758              	.LFE374:
 7760              		.section	.text.I2C_DMASlaveTransmitCplt,"ax",%progbits
 7761              		.align	1
 7762              		.syntax unified
 7763              		.thumb
 7764              		.thumb_func
 7765              		.fpu fpv4-sp-d16
 7767              	I2C_DMASlaveTransmitCplt:
 7768              	.LFB382:
6075:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7769              		.loc 1 6075 0
 7770              		.cfi_startproc
 7771              		@ args = 0, pretend = 0, frame = 0
 7772              		@ frame_needed = 0, uses_anonymous_args = 0
 7773              	.LVL657:
 7774 0000 08B5     		push	{r3, lr}
 7775              		.cfi_def_cfa_offset 8
 7776              		.cfi_offset 3, -8
 7777              		.cfi_offset 14, -4
6076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7778              		.loc 1 6076 0
 7779 0002 806A     		ldr	r0, [r0, #40]
 7780              	.LVL658:
6077:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7781              		.loc 1 6077 0
 7782 0004 C36A     		ldr	r3, [r0, #44]
 7783              	.LVL659:
6079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7784              		.loc 1 6079 0
 7785 0006 B3F1807F 		cmp	r3, #16777216
 7786 000a 00D0     		beq	.L627
6079:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7787              		.loc 1 6079 0 is_stmt 0 discriminator 1
 7788 000c 33B9     		cbnz	r3, .L626
 7789              	.L627:
6082:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7790              		.loc 1 6082 0 is_stmt 1
 7791 000e 0268     		ldr	r2, [r0]
 7792 0010 1368     		ldr	r3, [r2]
 7793              	.LVL660:
 7794 0012 23F48043 		bic	r3, r3, #16384
 7795 0016 1360     		str	r3, [r2]
6086:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7796              		.loc 1 6086 0
 7797 0018 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7798              	.LVL661:
 7799              	.L626:
6094:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7800              		.loc 1 6094 0
 7801 001c 08BD     		pop	{r3, pc}
 7802              		.cfi_endproc
 7803              	.LFE382:
 7805              		.section	.text.I2C_DMASlaveReceiveCplt,"ax",%progbits
 7806              		.align	1
 7807              		.syntax unified
 7808              		.thumb
 7809              		.thumb_func
 7810              		.fpu fpv4-sp-d16
 7812              	I2C_DMASlaveReceiveCplt:
 7813              	.LFB384:
6150:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 7814              		.loc 1 6150 0
 7815              		.cfi_startproc
 7816              		@ args = 0, pretend = 0, frame = 0
 7817              		@ frame_needed = 0, uses_anonymous_args = 0
 7818              	.LVL662:
 7819 0000 08B5     		push	{r3, lr}
 7820              		.cfi_def_cfa_offset 8
 7821              		.cfi_offset 3, -8
 7822              		.cfi_offset 14, -4
6151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 7823              		.loc 1 6151 0
 7824 0002 806A     		ldr	r0, [r0, #40]
 7825              	.LVL663:
6152:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7826              		.loc 1 6152 0
 7827 0004 C26A     		ldr	r2, [r0, #44]
 7828              	.LVL664:
6154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7829              		.loc 1 6154 0
 7830 0006 C36B     		ldr	r3, [r0, #60]
 7831 0008 1B68     		ldr	r3, [r3]
 7832 000a 5B68     		ldr	r3, [r3, #4]
 7833 000c 4BB9     		cbnz	r3, .L630
6154:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (tmpoptions != I2C_NO_OPTION_FRAME))
 7834              		.loc 1 6154 0 is_stmt 0 discriminator 1
 7835 000e 12F5803F 		cmn	r2, #65536
 7836 0012 06D0     		beq	.L630
6158:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7837              		.loc 1 6158 0 is_stmt 1
 7838 0014 0268     		ldr	r2, [r0]
 7839              	.LVL665:
 7840 0016 1368     		ldr	r3, [r2]
 7841 0018 23F40043 		bic	r3, r3, #32768
 7842 001c 1360     		str	r3, [r2]
6161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7843              		.loc 1 6161 0
 7844 001e FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 7845              	.LVL666:
 7846              	.L630:
6169:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7847              		.loc 1 6169 0
 7848 0022 08BD     		pop	{r3, pc}
 7849              		.cfi_endproc
 7850              	.LFE384:
 7852              		.section	.text.HAL_I2C_AddrCallback,"ax",%progbits
 7853              		.align	1
 7854              		.weak	HAL_I2C_AddrCallback
 7855              		.syntax unified
 7856              		.thumb
 7857              		.thumb_func
 7858              		.fpu fpv4-sp-d16
 7860              	HAL_I2C_AddrCallback:
 7861              	.LFB357:
4467:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 7862              		.loc 1 4467 0
 7863              		.cfi_startproc
 7864              		@ args = 0, pretend = 0, frame = 0
 7865              		@ frame_needed = 0, uses_anonymous_args = 0
 7866              		@ link register save eliminated.
 7867              	.LVL667:
4476:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7868              		.loc 1 4476 0
 7869 0000 7047     		bx	lr
 7870              		.cfi_endproc
 7871              	.LFE357:
 7873              		.section	.text.I2C_ITAddrCplt,"ax",%progbits
 7874              		.align	1
 7875              		.syntax unified
 7876              		.thumb
 7877              		.thumb_func
 7878              		.fpu fpv4-sp-d16
 7880              	I2C_ITAddrCplt:
 7881              	.LFB372:
5281:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint8_t transferdirection;
 7882              		.loc 1 5281 0
 7883              		.cfi_startproc
 7884              		@ args = 0, pretend = 0, frame = 0
 7885              		@ frame_needed = 0, uses_anonymous_args = 0
 7886              	.LVL668:
 7887 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7888              		.cfi_def_cfa_offset 24
 7889              		.cfi_offset 3, -24
 7890              		.cfi_offset 4, -20
 7891              		.cfi_offset 5, -16
 7892              		.cfi_offset 6, -12
 7893              		.cfi_offset 7, -8
 7894              		.cfi_offset 14, -4
5291:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 7895              		.loc 1 5291 0
 7896 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7897 0006 03F02803 		and	r3, r3, #40
 7898 000a 282B     		cmp	r3, #40
 7899 000c 06D0     		beq	.L640
5363:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7900              		.loc 1 5363 0
 7901 000e 0368     		ldr	r3, [r0]
 7902 0010 0822     		movs	r2, #8
 7903 0012 DA61     		str	r2, [r3, #28]
5366:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 7904              		.loc 1 5366 0
 7905 0014 0023     		movs	r3, #0
 7906 0016 80F84030 		strb	r3, [r0, #64]
 7907              	.LVL669:
 7908              	.L634:
5368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7909              		.loc 1 5368 0
 7910 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7911              	.LVL670:
 7912              	.L640:
 7913 001c 0446     		mov	r4, r0
5293:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 7914              		.loc 1 5293 0
 7915 001e 0368     		ldr	r3, [r0]
 7916 0020 9E69     		ldr	r6, [r3, #24]
 7917 0022 C6F30046 		ubfx	r6, r6, #16, #1
 7918              	.LVL671:
5294:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 7919              		.loc 1 5294 0
 7920 0026 9A69     		ldr	r2, [r3, #24]
 7921 0028 120C     		lsrs	r2, r2, #16
 7922 002a 02F0FE05 		and	r5, r2, #254
 7923              	.LVL672:
5295:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 7924              		.loc 1 5295 0
 7925 002e 9A68     		ldr	r2, [r3, #8]
 7926 0030 C2F30902 		ubfx	r2, r2, #0, #10
 7927              	.LVL673:
5296:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7928              		.loc 1 5296 0
 7929 0034 DF68     		ldr	r7, [r3, #12]
 7930 0036 07F0FE07 		and	r7, r7, #254
 7931              	.LVL674:
5299:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 7932              		.loc 1 5299 0
 7933 003a C168     		ldr	r1, [r0, #12]
 7934              	.LVL675:
 7935 003c 0229     		cmp	r1, #2
 7936 003e 22D1     		bne	.L636
5301:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 7937              		.loc 1 5301 0
 7938 0040 85EAD215 		eor	r5, r5, r2, lsr #7
 7939              	.LVL676:
 7940 0044 15F0060F 		tst	r5, #6
 7941 0048 10D1     		bne	.L637
 7942              	.LVL677:
5304:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->AddrEventCount == 2U)
 7943              		.loc 1 5304 0
 7944 004a 816C     		ldr	r1, [r0, #72]
 7945 004c 0131     		adds	r1, r1, #1
 7946 004e 8164     		str	r1, [r0, #72]
5305:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 7947              		.loc 1 5305 0
 7948 0050 816C     		ldr	r1, [r0, #72]
 7949 0052 0229     		cmp	r1, #2
 7950 0054 E1D1     		bne	.L634
5308:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7951              		.loc 1 5308 0
 7952 0056 0021     		movs	r1, #0
 7953 0058 8164     		str	r1, [r0, #72]
5311:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7954              		.loc 1 5311 0
 7955 005a 0820     		movs	r0, #8
 7956              	.LVL678:
 7957 005c D861     		str	r0, [r3, #28]
5314:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7958              		.loc 1 5314 0
 7959 005e 84F84010 		strb	r1, [r4, #64]
5320:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7960              		.loc 1 5320 0
 7961 0062 3146     		mov	r1, r6
 7962 0064 2046     		mov	r0, r4
 7963 0066 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 7964              	.LVL679:
 7965 006a D6E7     		b	.L634
 7966              	.LVL680:
 7967              	.L637:
5329:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7968              		.loc 1 5329 0
 7969 006c 4FF40041 		mov	r1, #32768
 7970 0070 FFF7FEFF 		bl	I2C_Disable_IRQ
 7971              	.LVL681:
5332:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7972              		.loc 1 5332 0
 7973 0074 0023     		movs	r3, #0
 7974 0076 84F84030 		strb	r3, [r4, #64]
5338:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7975              		.loc 1 5338 0
 7976 007a 3A46     		mov	r2, r7
 7977 007c 3146     		mov	r1, r6
 7978 007e 2046     		mov	r0, r4
 7979 0080 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 7980              	.LVL682:
 7981 0084 C9E7     		b	.L634
 7982              	.LVL683:
 7983              	.L636:
5346:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7984              		.loc 1 5346 0
 7985 0086 4FF40041 		mov	r1, #32768
 7986 008a FFF7FEFF 		bl	I2C_Disable_IRQ
 7987              	.LVL684:
5349:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 7988              		.loc 1 5349 0
 7989 008e 0023     		movs	r3, #0
 7990 0090 84F84030 		strb	r3, [r4, #64]
5355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 7991              		.loc 1 5355 0
 7992 0094 2A46     		mov	r2, r5
 7993 0096 3146     		mov	r1, r6
 7994 0098 2046     		mov	r0, r4
 7995 009a FFF7FEFF 		bl	HAL_I2C_AddrCallback
 7996              	.LVL685:
 7997 009e BCE7     		b	.L634
 7998              		.cfi_endproc
 7999              	.LFE372:
 8001              		.section	.text.HAL_I2C_ListenCpltCallback,"ax",%progbits
 8002              		.align	1
 8003              		.weak	HAL_I2C_ListenCpltCallback
 8004              		.syntax unified
 8005              		.thumb
 8006              		.thumb_func
 8007              		.fpu fpv4-sp-d16
 8009              	HAL_I2C_ListenCpltCallback:
 8010              	.LFB358:
4485:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8011              		.loc 1 4485 0
 8012              		.cfi_startproc
 8013              		@ args = 0, pretend = 0, frame = 0
 8014              		@ frame_needed = 0, uses_anonymous_args = 0
 8015              		@ link register save eliminated.
 8016              	.LVL686:
4492:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8017              		.loc 1 4492 0
 8018 0000 7047     		bx	lr
 8019              		.cfi_endproc
 8020              	.LFE358:
 8022              		.section	.text.I2C_ITListenCplt,"ax",%progbits
 8023              		.align	1
 8024              		.syntax unified
 8025              		.thumb
 8026              		.thumb_func
 8027              		.fpu fpv4-sp-d16
 8029              	I2C_ITListenCplt:
 8030              	.LFB377:
5805:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Reset handle parameters */
 8031              		.loc 1 5805 0
 8032              		.cfi_startproc
 8033              		@ args = 0, pretend = 0, frame = 0
 8034              		@ frame_needed = 0, uses_anonymous_args = 0
 8035              	.LVL687:
 8036 0000 10B5     		push	{r4, lr}
 8037              		.cfi_def_cfa_offset 8
 8038              		.cfi_offset 4, -8
 8039              		.cfi_offset 14, -4
 8040 0002 0446     		mov	r4, r0
5807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 8041              		.loc 1 5807 0
 8042 0004 174B     		ldr	r3, .L645
 8043 0006 C362     		str	r3, [r0, #44]
5808:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 8044              		.loc 1 5808 0
 8045 0008 0023     		movs	r3, #0
 8046 000a 0363     		str	r3, [r0, #48]
5809:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 8047              		.loc 1 5809 0
 8048 000c 2022     		movs	r2, #32
 8049 000e 80F84120 		strb	r2, [r0, #65]
5810:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8050              		.loc 1 5810 0
 8051 0012 80F84230 		strb	r3, [r0, #66]
5811:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8052              		.loc 1 5811 0
 8053 0016 4363     		str	r3, [r0, #52]
5814:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8054              		.loc 1 5814 0
 8055 0018 11F0040F 		tst	r1, #4
 8056 001c 12D0     		beq	.L643
5817:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8057              		.loc 1 5817 0
 8058 001e 0368     		ldr	r3, [r0]
 8059 0020 5A6A     		ldr	r2, [r3, #36]
 8060 0022 436A     		ldr	r3, [r0, #36]
 8061 0024 1A70     		strb	r2, [r3]
5820:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8062              		.loc 1 5820 0
 8063 0026 436A     		ldr	r3, [r0, #36]
 8064 0028 0133     		adds	r3, r3, #1
 8065 002a 4362     		str	r3, [r0, #36]
5822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8066              		.loc 1 5822 0
 8067 002c 038D     		ldrh	r3, [r0, #40]
 8068 002e 4BB1     		cbz	r3, .L643
5824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
 8069              		.loc 1 5824 0
 8070 0030 013B     		subs	r3, r3, #1
 8071 0032 0385     		strh	r3, [r0, #40]	@ movhi
5825:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8072              		.loc 1 5825 0
 8073 0034 438D     		ldrh	r3, [r0, #42]
 8074 0036 013B     		subs	r3, r3, #1
 8075 0038 9BB2     		uxth	r3, r3
 8076 003a 4385     		strh	r3, [r0, #42]	@ movhi
5828:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8077              		.loc 1 5828 0
 8078 003c 436C     		ldr	r3, [r0, #68]
 8079 003e 43F00403 		orr	r3, r3, #4
 8080 0042 4364     		str	r3, [r0, #68]
 8081              	.L643:
5833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8082              		.loc 1 5833 0
 8083 0044 48F20301 		movw	r1, #32771
 8084              	.LVL688:
 8085 0048 2046     		mov	r0, r4
 8086              	.LVL689:
 8087 004a FFF7FEFF 		bl	I2C_Disable_IRQ
 8088              	.LVL690:
5836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8089              		.loc 1 5836 0
 8090 004e 2368     		ldr	r3, [r4]
 8091 0050 1022     		movs	r2, #16
 8092 0052 DA61     		str	r2, [r3, #28]
5839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8093              		.loc 1 5839 0
 8094 0054 0023     		movs	r3, #0
 8095 0056 84F84030 		strb	r3, [r4, #64]
5845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8096              		.loc 1 5845 0
 8097 005a 2046     		mov	r0, r4
 8098 005c FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8099              	.LVL691:
5847:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8100              		.loc 1 5847 0
 8101 0060 10BD     		pop	{r4, pc}
 8102              	.LVL692:
 8103              	.L646:
 8104 0062 00BF     		.align	2
 8105              	.L645:
 8106 0064 0000FFFF 		.word	-65536
 8107              		.cfi_endproc
 8108              	.LFE377:
 8110              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
 8111              		.align	1
 8112              		.weak	HAL_I2C_MemTxCpltCallback
 8113              		.syntax unified
 8114              		.thumb
 8115              		.thumb_func
 8116              		.fpu fpv4-sp-d16
 8118              	HAL_I2C_MemTxCpltCallback:
 8119              	.LFB359:
4501:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8120              		.loc 1 4501 0
 8121              		.cfi_startproc
 8122              		@ args = 0, pretend = 0, frame = 0
 8123              		@ frame_needed = 0, uses_anonymous_args = 0
 8124              		@ link register save eliminated.
 8125              	.LVL693:
4508:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8126              		.loc 1 4508 0
 8127 0000 7047     		bx	lr
 8128              		.cfi_endproc
 8129              	.LFE359:
 8131              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 8132              		.align	1
 8133              		.weak	HAL_I2C_MemRxCpltCallback
 8134              		.syntax unified
 8135              		.thumb
 8136              		.thumb_func
 8137              		.fpu fpv4-sp-d16
 8139              	HAL_I2C_MemRxCpltCallback:
 8140              	.LFB360:
4517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8141              		.loc 1 4517 0
 8142              		.cfi_startproc
 8143              		@ args = 0, pretend = 0, frame = 0
 8144              		@ frame_needed = 0, uses_anonymous_args = 0
 8145              		@ link register save eliminated.
 8146              	.LVL694:
4524:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8147              		.loc 1 4524 0
 8148 0000 7047     		bx	lr
 8149              		.cfi_endproc
 8150              	.LFE360:
 8152              		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 8153              		.align	1
 8154              		.weak	HAL_I2C_ErrorCallback
 8155              		.syntax unified
 8156              		.thumb
 8157              		.thumb_func
 8158              		.fpu fpv4-sp-d16
 8160              	HAL_I2C_ErrorCallback:
 8161              	.LFB361:
4533:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8162              		.loc 1 4533 0
 8163              		.cfi_startproc
 8164              		@ args = 0, pretend = 0, frame = 0
 8165              		@ frame_needed = 0, uses_anonymous_args = 0
 8166              		@ link register save eliminated.
 8167              	.LVL695:
4540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8168              		.loc 1 4540 0
 8169 0000 7047     		bx	lr
 8170              		.cfi_endproc
 8171              	.LFE361:
 8173              		.section	.text.HAL_I2C_AbortCpltCallback,"ax",%progbits
 8174              		.align	1
 8175              		.weak	HAL_I2C_AbortCpltCallback
 8176              		.syntax unified
 8177              		.thumb
 8178              		.thumb_func
 8179              		.fpu fpv4-sp-d16
 8181              	HAL_I2C_AbortCpltCallback:
 8182              	.LFB362:
4549:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 8183              		.loc 1 4549 0
 8184              		.cfi_startproc
 8185              		@ args = 0, pretend = 0, frame = 0
 8186              		@ frame_needed = 0, uses_anonymous_args = 0
 8187              		@ link register save eliminated.
 8188              	.LVL696:
4556:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8189              		.loc 1 4556 0
 8190 0000 7047     		bx	lr
 8191              		.cfi_endproc
 8192              	.LFE362:
 8194              		.section	.text.I2C_TreatErrorCallback,"ax",%progbits
 8195              		.align	1
 8196              		.syntax unified
 8197              		.thumb
 8198              		.thumb_func
 8199              		.fpu fpv4-sp-d16
 8201              	I2C_TreatErrorCallback:
 8202              	.LFB379:
5968:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_ABORT)
 8203              		.loc 1 5968 0
 8204              		.cfi_startproc
 8205              		@ args = 0, pretend = 0, frame = 0
 8206              		@ frame_needed = 0, uses_anonymous_args = 0
 8207              	.LVL697:
 8208 0000 08B5     		push	{r3, lr}
 8209              		.cfi_def_cfa_offset 8
 8210              		.cfi_offset 3, -8
 8211              		.cfi_offset 14, -4
5969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8212              		.loc 1 5969 0
 8213 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8214 0006 DBB2     		uxtb	r3, r3
 8215 0008 602B     		cmp	r3, #96
 8216 000a 06D0     		beq	.L655
5986:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8217              		.loc 1 5986 0
 8218 000c 0023     		movs	r3, #0
 8219 000e 0363     		str	r3, [r0, #48]
5989:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8220              		.loc 1 5989 0
 8221 0010 80F84030 		strb	r3, [r0, #64]
5995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8222              		.loc 1 5995 0
 8223 0014 FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 8224              	.LVL698:
 8225              	.L651:
5998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8226              		.loc 1 5998 0
 8227 0018 08BD     		pop	{r3, pc}
 8228              	.LVL699:
 8229              	.L655:
5971:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8230              		.loc 1 5971 0
 8231 001a 2023     		movs	r3, #32
 8232 001c 80F84130 		strb	r3, [r0, #65]
5972:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8233              		.loc 1 5972 0
 8234 0020 0023     		movs	r3, #0
 8235 0022 0363     		str	r3, [r0, #48]
5975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8236              		.loc 1 5975 0
 8237 0024 80F84030 		strb	r3, [r0, #64]
5981:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8238              		.loc 1 5981 0
 8239 0028 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 8240              	.LVL700:
 8241 002c F4E7     		b	.L651
 8242              		.cfi_endproc
 8243              	.LFE379:
 8245              		.section	.text.I2C_ITError,"ax",%progbits
 8246              		.align	1
 8247              		.syntax unified
 8248              		.thumb
 8249              		.thumb_func
 8250              		.fpu fpv4-sp-d16
 8252              	I2C_ITError:
 8253              	.LFB378:
5856:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate = hi2c->State;
 8254              		.loc 1 5856 0
 8255              		.cfi_startproc
 8256              		@ args = 0, pretend = 0, frame = 0
 8257              		@ frame_needed = 0, uses_anonymous_args = 0
 8258              	.LVL701:
 8259 0000 10B5     		push	{r4, lr}
 8260              		.cfi_def_cfa_offset 8
 8261              		.cfi_offset 4, -8
 8262              		.cfi_offset 14, -4
 8263 0002 0446     		mov	r4, r0
5857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmppreviousstate;
 8264              		.loc 1 5857 0
 8265 0004 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8266              	.LVL702:
5861:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8267              		.loc 1 5861 0
 8268 0008 0022     		movs	r2, #0
 8269 000a 80F84220 		strb	r2, [r0, #66]
5862:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
 8270              		.loc 1 5862 0
 8271 000e 3B48     		ldr	r0, .L670
 8272              	.LVL703:
 8273 0010 E062     		str	r0, [r4, #44]
5863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8274              		.loc 1 5863 0
 8275 0012 6285     		strh	r2, [r4, #42]	@ movhi
5866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8276              		.loc 1 5866 0
 8277 0014 626C     		ldr	r2, [r4, #68]
 8278 0016 1143     		orrs	r1, r1, r2
 8279              	.LVL704:
 8280 0018 6164     		str	r1, [r4, #68]
5870:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8281              		.loc 1 5870 0
 8282 001a 283B     		subs	r3, r3, #40
 8283              	.LVL705:
 8284 001c DBB2     		uxtb	r3, r3
5869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       (tmpstate == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 8285              		.loc 1 5869 0
 8286 001e 022B     		cmp	r3, #2
 8287 0020 19D8     		bhi	.L657
5874:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8288              		.loc 1 5874 0
 8289 0022 0321     		movs	r1, #3
 8290 0024 2046     		mov	r0, r4
 8291 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
 8292              	.LVL706:
5877:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
 8293              		.loc 1 5877 0
 8294 002a 2823     		movs	r3, #40
 8295 002c 84F84130 		strb	r3, [r4, #65]
5878:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 8296              		.loc 1 5878 0
 8297 0030 334B     		ldr	r3, .L670+4
 8298 0032 6363     		str	r3, [r4, #52]
 8299              	.L658:
5896:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   if ((hi2c->hdmatx != NULL) && ((tmppreviousstate == I2C_STATE_MASTER_BUSY_TX) || \
 8300              		.loc 1 5896 0
 8301 0034 236B     		ldr	r3, [r4, #48]
 8302              	.LVL707:
5897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                  (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
 8303              		.loc 1 5897 0
 8304 0036 A26B     		ldr	r2, [r4, #56]
 8305 0038 1AB1     		cbz	r2, .L660
5897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                  (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
 8306              		.loc 1 5897 0 is_stmt 0 discriminator 1
 8307 003a 112B     		cmp	r3, #17
 8308 003c 1BD0     		beq	.L661
5897:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                  (tmppreviousstate == I2C_STATE_SLAVE_BUSY_TX)))
 8309              		.loc 1 5897 0 discriminator 2
 8310 003e 212B     		cmp	r3, #33
 8311 0040 19D0     		beq	.L661
 8312              	.L660:
5927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                       (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
 8313              		.loc 1 5927 0 is_stmt 1
 8314 0042 E26B     		ldr	r2, [r4, #60]
 8315 0044 1AB1     		cbz	r2, .L665
5927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                       (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
 8316              		.loc 1 5927 0 is_stmt 0 discriminator 1
 8317 0046 122B     		cmp	r3, #18
 8318 0048 36D0     		beq	.L666
5927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****                                       (tmppreviousstate == I2C_STATE_SLAVE_BUSY_RX)))
 8319              		.loc 1 5927 0 discriminator 2
 8320 004a 222B     		cmp	r3, #34
 8321 004c 34D0     		beq	.L666
 8322              	.L665:
5958:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 8323              		.loc 1 5958 0 is_stmt 1
 8324 004e 2046     		mov	r0, r4
 8325 0050 FFF7FEFF 		bl	I2C_TreatErrorCallback
 8326              	.LVL708:
 8327              	.L656:
5960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8328              		.loc 1 5960 0
 8329 0054 10BD     		pop	{r4, pc}
 8330              	.LVL709:
 8331              	.L657:
5883:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8332              		.loc 1 5883 0
 8333 0056 48F20301 		movw	r1, #32771
 8334 005a 2046     		mov	r0, r4
 8335 005c FFF7FEFF 		bl	I2C_Disable_IRQ
 8336              	.LVL710:
5887:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8337              		.loc 1 5887 0
 8338 0060 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8339 0064 DBB2     		uxtb	r3, r3
 8340 0066 602B     		cmp	r3, #96
 8341 0068 02D0     		beq	.L659
5890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8342              		.loc 1 5890 0
 8343 006a 2023     		movs	r3, #32
 8344 006c 84F84130 		strb	r3, [r4, #65]
 8345              	.L659:
5892:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 8346              		.loc 1 5892 0
 8347 0070 0023     		movs	r3, #0
 8348 0072 6363     		str	r3, [r4, #52]
 8349 0074 DEE7     		b	.L658
 8350              	.LVL711:
 8351              	.L661:
5900:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8352              		.loc 1 5900 0
 8353 0076 2368     		ldr	r3, [r4]
 8354              	.LVL712:
 8355 0078 1A68     		ldr	r2, [r3]
 8356 007a 12F4804F 		tst	r2, #16384
 8357 007e 03D0     		beq	.L662
5902:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8358              		.loc 1 5902 0
 8359 0080 1A68     		ldr	r2, [r3]
 8360 0082 22F48042 		bic	r2, r2, #16384
 8361 0086 1A60     		str	r2, [r3]
 8362              	.L662:
5905:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8363              		.loc 1 5905 0
 8364 0088 A06B     		ldr	r0, [r4, #56]
 8365 008a FFF7FEFF 		bl	HAL_DMA_GetState
 8366              	.LVL713:
 8367 008e 0128     		cmp	r0, #1
 8368 0090 0ED0     		beq	.L663
5909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8369              		.loc 1 5909 0
 8370 0092 A36B     		ldr	r3, [r4, #56]
 8371 0094 1B4A     		ldr	r2, .L670+8
 8372 0096 9A63     		str	r2, [r3, #56]
5912:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8373              		.loc 1 5912 0
 8374 0098 0023     		movs	r3, #0
 8375 009a 84F84030 		strb	r3, [r4, #64]
5915:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 8376              		.loc 1 5915 0
 8377 009e A06B     		ldr	r0, [r4, #56]
 8378 00a0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8379              	.LVL714:
 8380 00a4 0028     		cmp	r0, #0
 8381 00a6 D5D0     		beq	.L656
5918:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 8382              		.loc 1 5918 0
 8383 00a8 A06B     		ldr	r0, [r4, #56]
 8384 00aa 836B     		ldr	r3, [r0, #56]
 8385 00ac 9847     		blx	r3
 8386              	.LVL715:
 8387 00ae D1E7     		b	.L656
 8388              	.L663:
5923:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8389              		.loc 1 5923 0
 8390 00b0 2046     		mov	r0, r4
 8391 00b2 FFF7FEFF 		bl	I2C_TreatErrorCallback
 8392              	.LVL716:
 8393 00b6 CDE7     		b	.L656
 8394              	.LVL717:
 8395              	.L666:
5930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8396              		.loc 1 5930 0
 8397 00b8 2368     		ldr	r3, [r4]
 8398              	.LVL718:
 8399 00ba 1A68     		ldr	r2, [r3]
 8400 00bc 12F4004F 		tst	r2, #32768
 8401 00c0 03D0     		beq	.L667
5932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8402              		.loc 1 5932 0
 8403 00c2 1A68     		ldr	r2, [r3]
 8404 00c4 22F40042 		bic	r2, r2, #32768
 8405 00c8 1A60     		str	r2, [r3]
 8406              	.L667:
5935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8407              		.loc 1 5935 0
 8408 00ca E06B     		ldr	r0, [r4, #60]
 8409 00cc FFF7FEFF 		bl	HAL_DMA_GetState
 8410              	.LVL719:
 8411 00d0 0128     		cmp	r0, #1
 8412 00d2 0ED0     		beq	.L668
5939:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8413              		.loc 1 5939 0
 8414 00d4 E36B     		ldr	r3, [r4, #60]
 8415 00d6 0B4A     		ldr	r2, .L670+8
 8416 00d8 9A63     		str	r2, [r3, #56]
5942:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8417              		.loc 1 5942 0
 8418 00da 0023     		movs	r3, #0
 8419 00dc 84F84030 		strb	r3, [r4, #64]
5945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 8420              		.loc 1 5945 0
 8421 00e0 E06B     		ldr	r0, [r4, #60]
 8422 00e2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 8423              	.LVL720:
 8424 00e6 0028     		cmp	r0, #0
 8425 00e8 B4D0     		beq	.L656
5948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 8426              		.loc 1 5948 0
 8427 00ea E06B     		ldr	r0, [r4, #60]
 8428 00ec 836B     		ldr	r3, [r0, #56]
 8429 00ee 9847     		blx	r3
 8430              	.LVL721:
 8431 00f0 B0E7     		b	.L656
 8432              	.L668:
5953:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8433              		.loc 1 5953 0
 8434 00f2 2046     		mov	r0, r4
 8435 00f4 FFF7FEFF 		bl	I2C_TreatErrorCallback
 8436              	.LVL722:
 8437 00f8 ACE7     		b	.L656
 8438              	.L671:
 8439 00fa 00BF     		.align	2
 8440              	.L670:
 8441 00fc 0000FFFF 		.word	-65536
 8442 0100 00000000 		.word	I2C_Slave_ISR_IT
 8443 0104 00000000 		.word	I2C_DMAAbort
 8444              		.cfi_endproc
 8445              	.LFE378:
 8447              		.section	.text.I2C_ITSlaveCplt,"ax",%progbits
 8448              		.align	1
 8449              		.syntax unified
 8450              		.thumb
 8451              		.thumb_func
 8452              		.fpu fpv4-sp-d16
 8454              	I2C_ITSlaveCplt:
 8455              	.LFB376:
5646:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpcr1value = READ_REG(hi2c->Instance->CR1);
 8456              		.loc 1 5646 0
 8457              		.cfi_startproc
 8458              		@ args = 0, pretend = 0, frame = 0
 8459              		@ frame_needed = 0, uses_anonymous_args = 0
 8460              	.LVL723:
 8461 0000 70B5     		push	{r4, r5, r6, lr}
 8462              		.cfi_def_cfa_offset 16
 8463              		.cfi_offset 4, -16
 8464              		.cfi_offset 5, -12
 8465              		.cfi_offset 6, -8
 8466              		.cfi_offset 14, -4
 8467 0002 0446     		mov	r4, r0
 8468 0004 0D46     		mov	r5, r1
5647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8469              		.loc 1 5647 0
 8470 0006 0268     		ldr	r2, [r0]
 8471 0008 1668     		ldr	r6, [r2]
 8472              	.LVL724:
5649:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8473              		.loc 1 5649 0
 8474 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8475 000e DBB2     		uxtb	r3, r3
 8476              	.LVL725:
5652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8477              		.loc 1 5652 0
 8478 0010 2021     		movs	r1, #32
 8479              	.LVL726:
 8480 0012 D161     		str	r1, [r2, #28]
5655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8481              		.loc 1 5655 0
 8482 0014 212B     		cmp	r3, #33
 8483 0016 0DD0     		beq	.L673
5655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8484              		.loc 1 5655 0 is_stmt 0 discriminator 1
 8485 0018 292B     		cmp	r3, #41
 8486 001a 0BD0     		beq	.L673
5660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8487              		.loc 1 5660 0 is_stmt 1
 8488 001c 222B     		cmp	r3, #34
 8489 001e 01D0     		beq	.L676
5660:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8490              		.loc 1 5660 0 is_stmt 0 discriminator 1
 8491 0020 2A2B     		cmp	r3, #42
 8492 0022 0ED1     		bne	.L675
 8493              	.L676:
5662:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8494              		.loc 1 5662 0 is_stmt 1
 8495 0024 48F20201 		movw	r1, #32770
 8496 0028 2046     		mov	r0, r4
 8497              	.LVL727:
 8498 002a FFF7FEFF 		bl	I2C_Disable_IRQ
 8499              	.LVL728:
5663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 8500              		.loc 1 5663 0
 8501 002e 2223     		movs	r3, #34
 8502 0030 2363     		str	r3, [r4, #48]
 8503 0032 06E0     		b	.L675
 8504              	.LVL729:
 8505              	.L673:
5657:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 8506              		.loc 1 5657 0
 8507 0034 48F20101 		movw	r1, #32769
 8508 0038 2046     		mov	r0, r4
 8509              	.LVL730:
 8510 003a FFF7FEFF 		bl	I2C_Disable_IRQ
 8511              	.LVL731:
5658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 8512              		.loc 1 5658 0
 8513 003e 2123     		movs	r3, #33
 8514 0040 2363     		str	r3, [r4, #48]
 8515              	.L675:
5671:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8516              		.loc 1 5671 0
 8517 0042 2268     		ldr	r2, [r4]
 8518 0044 5368     		ldr	r3, [r2, #4]
 8519 0046 43F40043 		orr	r3, r3, #32768
 8520 004a 5360     		str	r3, [r2, #4]
5674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8521              		.loc 1 5674 0
 8522 004c 2268     		ldr	r2, [r4]
 8523 004e 5368     		ldr	r3, [r2, #4]
 8524 0050 23F0FF73 		bic	r3, r3, #33423360
 8525 0054 23F48B33 		bic	r3, r3, #71168
 8526 0058 23F4FF73 		bic	r3, r3, #510
 8527 005c 23F00103 		bic	r3, r3, #1
 8528 0060 5360     		str	r3, [r2, #4]
5677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8529              		.loc 1 5677 0
 8530 0062 2046     		mov	r0, r4
 8531 0064 FFF7FEFF 		bl	I2C_Flush_TXDR
 8532              	.LVL732:
5680:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8533              		.loc 1 5680 0
 8534 0068 16F4804F 		tst	r6, #16384
 8535 006c 3FD0     		beq	.L677
5683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8536              		.loc 1 5683 0
 8537 006e 2268     		ldr	r2, [r4]
 8538 0070 1368     		ldr	r3, [r2]
 8539 0072 23F48043 		bic	r3, r3, #16384
 8540 0076 1360     		str	r3, [r2]
5685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8541              		.loc 1 5685 0
 8542 0078 A36B     		ldr	r3, [r4, #56]
 8543 007a 1BB1     		cbz	r3, .L678
5687:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8544              		.loc 1 5687 0
 8545 007c 1B68     		ldr	r3, [r3]
 8546 007e 5B68     		ldr	r3, [r3, #4]
 8547 0080 9BB2     		uxth	r3, r3
 8548 0082 6385     		strh	r3, [r4, #42]	@ movhi
 8549              	.L678:
5706:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8550              		.loc 1 5706 0
 8551 0084 15F0040F 		tst	r5, #4
 8552 0088 10D0     		beq	.L679
5709:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8553              		.loc 1 5709 0
 8554 008a 25F00405 		bic	r5, r5, #4
 8555              	.LVL733:
5712:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8556              		.loc 1 5712 0
 8557 008e 2368     		ldr	r3, [r4]
 8558 0090 5A6A     		ldr	r2, [r3, #36]
 8559 0092 636A     		ldr	r3, [r4, #36]
 8560 0094 1A70     		strb	r2, [r3]
5715:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8561              		.loc 1 5715 0
 8562 0096 636A     		ldr	r3, [r4, #36]
 8563 0098 0133     		adds	r3, r3, #1
 8564 009a 6362     		str	r3, [r4, #36]
5717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8565              		.loc 1 5717 0
 8566 009c 238D     		ldrh	r3, [r4, #40]
 8567 009e 2BB1     		cbz	r3, .L679
5719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
 8568              		.loc 1 5719 0
 8569 00a0 013B     		subs	r3, r3, #1
 8570 00a2 2385     		strh	r3, [r4, #40]	@ movhi
5720:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8571              		.loc 1 5720 0
 8572 00a4 638D     		ldrh	r3, [r4, #42]
 8573 00a6 013B     		subs	r3, r3, #1
 8574 00a8 9BB2     		uxth	r3, r3
 8575 00aa 6385     		strh	r3, [r4, #42]	@ movhi
 8576              	.L679:
5725:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8577              		.loc 1 5725 0
 8578 00ac 638D     		ldrh	r3, [r4, #42]
 8579 00ae 9BB2     		uxth	r3, r3
 8580 00b0 1BB1     		cbz	r3, .L680
5728:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 8581              		.loc 1 5728 0
 8582 00b2 636C     		ldr	r3, [r4, #68]
 8583 00b4 43F00403 		orr	r3, r3, #4
 8584 00b8 6364     		str	r3, [r4, #68]
 8585              	.L680:
5731:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 8586              		.loc 1 5731 0
 8587 00ba 0023     		movs	r3, #0
 8588 00bc 84F84230 		strb	r3, [r4, #66]
5732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8589              		.loc 1 5732 0
 8590 00c0 6363     		str	r3, [r4, #52]
5734:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8591              		.loc 1 5734 0
 8592 00c2 636C     		ldr	r3, [r4, #68]
 8593 00c4 1BBB     		cbnz	r3, .L686
5746:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8594              		.loc 1 5746 0
 8595 00c6 E36A     		ldr	r3, [r4, #44]
 8596 00c8 13F5803F 		cmn	r3, #65536
 8597 00cc 2DD1     		bne	.L687
5766:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8598              		.loc 1 5766 0
 8599 00ce 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8600 00d2 DBB2     		uxtb	r3, r3
 8601 00d4 222B     		cmp	r3, #34
 8602 00d6 38D0     		beq	.L688
5783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8603              		.loc 1 5783 0
 8604 00d8 2023     		movs	r3, #32
 8605 00da 84F84130 		strb	r3, [r4, #65]
5784:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8606              		.loc 1 5784 0
 8607 00de 0023     		movs	r3, #0
 8608 00e0 2363     		str	r3, [r4, #48]
5787:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8609              		.loc 1 5787 0
 8610 00e2 84F84030 		strb	r3, [r4, #64]
5793:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8611              		.loc 1 5793 0
 8612 00e6 2046     		mov	r0, r4
 8613 00e8 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 8614              	.LVL734:
5796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8615              		.loc 1 5796 0
 8616 00ec 2CE0     		b	.L672
 8617              	.LVL735:
 8618              	.L677:
5690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8619              		.loc 1 5690 0
 8620 00ee 16F4004F 		tst	r6, #32768
 8621 00f2 C7D0     		beq	.L678
5693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8622              		.loc 1 5693 0
 8623 00f4 2268     		ldr	r2, [r4]
 8624 00f6 1368     		ldr	r3, [r2]
 8625 00f8 23F40043 		bic	r3, r3, #32768
 8626 00fc 1360     		str	r3, [r2]
5695:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8627              		.loc 1 5695 0
 8628 00fe E36B     		ldr	r3, [r4, #60]
 8629 0100 002B     		cmp	r3, #0
 8630 0102 BFD0     		beq	.L678
5697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8631              		.loc 1 5697 0
 8632 0104 1B68     		ldr	r3, [r3]
 8633 0106 5B68     		ldr	r3, [r3, #4]
 8634 0108 9BB2     		uxth	r3, r3
 8635 010a 6385     		strh	r3, [r4, #42]	@ movhi
 8636 010c BAE7     		b	.L678
 8637              	.LVL736:
 8638              	.L686:
5737:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8639              		.loc 1 5737 0
 8640 010e 616C     		ldr	r1, [r4, #68]
 8641 0110 2046     		mov	r0, r4
 8642 0112 FFF7FEFF 		bl	I2C_ITError
 8643              	.LVL737:
5740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8644              		.loc 1 5740 0
 8645 0116 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8646 011a DBB2     		uxtb	r3, r3
 8647 011c 282B     		cmp	r3, #40
 8648 011e 13D1     		bne	.L672
5743:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8649              		.loc 1 5743 0
 8650 0120 2946     		mov	r1, r5
 8651 0122 2046     		mov	r0, r4
 8652 0124 FFF7FEFF 		bl	I2C_ITListenCplt
 8653              	.LVL738:
 8654 0128 0EE0     		b	.L672
 8655              	.L687:
5749:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8656              		.loc 1 5749 0
 8657 012a 2046     		mov	r0, r4
 8658 012c FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8659              	.LVL739:
5751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 8660              		.loc 1 5751 0
 8661 0130 0B4B     		ldr	r3, .L689
 8662 0132 E362     		str	r3, [r4, #44]
5752:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8663              		.loc 1 5752 0
 8664 0134 2023     		movs	r3, #32
 8665 0136 84F84130 		strb	r3, [r4, #65]
5753:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8666              		.loc 1 5753 0
 8667 013a 0023     		movs	r3, #0
 8668 013c 2363     		str	r3, [r4, #48]
5756:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8669              		.loc 1 5756 0
 8670 013e 84F84030 		strb	r3, [r4, #64]
5762:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8671              		.loc 1 5762 0
 8672 0142 2046     		mov	r0, r4
 8673 0144 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 8674              	.LVL740:
 8675              	.L672:
5796:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8676              		.loc 1 5796 0
 8677 0148 70BD     		pop	{r4, r5, r6, pc}
 8678              	.LVL741:
 8679              	.L688:
5768:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 8680              		.loc 1 5768 0
 8681 014a 2023     		movs	r3, #32
 8682 014c 84F84130 		strb	r3, [r4, #65]
5769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8683              		.loc 1 5769 0
 8684 0150 0023     		movs	r3, #0
 8685 0152 2363     		str	r3, [r4, #48]
5772:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8686              		.loc 1 5772 0
 8687 0154 84F84030 		strb	r3, [r4, #64]
5778:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 8688              		.loc 1 5778 0
 8689 0158 2046     		mov	r0, r4
 8690 015a FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 8691              	.LVL742:
 8692 015e F3E7     		b	.L672
 8693              	.L690:
 8694              		.align	2
 8695              	.L689:
 8696 0160 0000FFFF 		.word	-65536
 8697              		.cfi_endproc
 8698              	.LFE376:
 8700              		.section	.text.I2C_Slave_ISR_IT,"ax",%progbits
 8701              		.align	1
 8702              		.syntax unified
 8703              		.thumb
 8704              		.thumb_func
 8705              		.fpu fpv4-sp-d16
 8707              	I2C_Slave_ISR_IT:
 8708              	.LFB367:
4769:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 8709              		.loc 1 4769 0
 8710              		.cfi_startproc
 8711              		@ args = 0, pretend = 0, frame = 0
 8712              		@ frame_needed = 0, uses_anonymous_args = 0
 8713              	.LVL743:
 8714 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8715              		.cfi_def_cfa_offset 24
 8716              		.cfi_offset 3, -24
 8717              		.cfi_offset 4, -20
 8718              		.cfi_offset 5, -16
 8719              		.cfi_offset 6, -12
 8720              		.cfi_offset 7, -8
 8721              		.cfi_offset 14, -4
4770:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpITFlags = ITFlags;
 8722              		.loc 1 4770 0
 8723 0002 C76A     		ldr	r7, [r0, #44]
 8724              	.LVL744:
4774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8725              		.loc 1 4774 0
 8726 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 8727 0008 012B     		cmp	r3, #1
 8728 000a 00F09C80 		beq	.L705
 8729 000e 1646     		mov	r6, r2
 8730 0010 0D46     		mov	r5, r1
 8731 0012 0446     		mov	r4, r0
4774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8732              		.loc 1 4774 0 is_stmt 0 discriminator 2
 8733 0014 0123     		movs	r3, #1
 8734 0016 80F84030 		strb	r3, [r0, #64]
4777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8735              		.loc 1 4777 0 is_stmt 1 discriminator 2
 8736 001a 11F0200F 		tst	r1, #32
 8737 001e 02D0     		beq	.L693
4777:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8738              		.loc 1 4777 0 is_stmt 0 discriminator 1
 8739 0020 12F0200F 		tst	r2, #32
 8740 0024 19D1     		bne	.L707
 8741              	.LVL745:
 8742              	.L693:
4783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8743              		.loc 1 4783 0 is_stmt 1
 8744 0026 15F0100F 		tst	r5, #16
 8745 002a 3ED0     		beq	.L694
4783:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8746              		.loc 1 4783 0 is_stmt 0 discriminator 1
 8747 002c 16F0100F 		tst	r6, #16
 8748 0030 3BD0     		beq	.L694
4789:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8749              		.loc 1 4789 0 is_stmt 1
 8750 0032 638D     		ldrh	r3, [r4, #42]
 8751 0034 9BB2     		uxth	r3, r3
 8752 0036 43BB     		cbnz	r3, .L695
4792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 8753              		.loc 1 4792 0
 8754 0038 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8755 003c DBB2     		uxtb	r3, r3
 8756 003e 282B     		cmp	r3, #40
 8757 0040 0ED0     		beq	.L708
 8758              	.L696:
4797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 8759              		.loc 1 4797 0
 8760 0042 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 8761 0046 DBB2     		uxtb	r3, r3
 8762 0048 292B     		cmp	r3, #41
 8763 004a 11D0     		beq	.L709
 8764              	.L698:
4812:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 8765              		.loc 1 4812 0
 8766 004c 2368     		ldr	r3, [r4]
 8767 004e 1022     		movs	r2, #16
 8768 0050 DA61     		str	r2, [r3, #28]
 8769              	.L697:
4890:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8770              		.loc 1 4890 0
 8771 0052 0020     		movs	r0, #0
 8772 0054 84F84000 		strb	r0, [r4, #64]
 8773              	.LVL746:
 8774              	.L692:
4893:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8775              		.loc 1 4893 0
 8776 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8777              	.LVL747:
 8778              	.L707:
4780:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 8779              		.loc 1 4780 0
 8780 005a FFF7FEFF 		bl	I2C_ITSlaveCplt
 8781              	.LVL748:
 8782 005e E2E7     		b	.L693
 8783              	.L708:
4792:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 8784              		.loc 1 4792 0 discriminator 1
 8785 0060 B7F1007F 		cmp	r7, #33554432
 8786 0064 EDD1     		bne	.L696
4795:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 8787              		.loc 1 4795 0
 8788 0066 2946     		mov	r1, r5
 8789 0068 2046     		mov	r0, r4
 8790 006a FFF7FEFF 		bl	I2C_ITListenCplt
 8791              	.LVL749:
 8792 006e F0E7     		b	.L697
 8793              	.L709:
4797:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 8794              		.loc 1 4797 0 discriminator 1
 8795 0070 17F5803F 		cmn	r7, #65536
 8796 0074 EAD0     		beq	.L698
4800:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8797              		.loc 1 4800 0
 8798 0076 2368     		ldr	r3, [r4]
 8799 0078 1022     		movs	r2, #16
 8800 007a DA61     		str	r2, [r3, #28]
4803:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8801              		.loc 1 4803 0
 8802 007c 2046     		mov	r0, r4
 8803 007e FFF7FEFF 		bl	I2C_Flush_TXDR
 8804              	.LVL750:
4807:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 8805              		.loc 1 4807 0
 8806 0082 2046     		mov	r0, r4
 8807 0084 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8808              	.LVL751:
 8809 0088 E3E7     		b	.L697
 8810              	.L695:
4819:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8811              		.loc 1 4819 0
 8812 008a 2368     		ldr	r3, [r4]
 8813 008c 1022     		movs	r2, #16
 8814 008e DA61     		str	r2, [r3, #28]
4822:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8815              		.loc 1 4822 0
 8816 0090 636C     		ldr	r3, [r4, #68]
 8817 0092 43F00403 		orr	r3, r3, #4
 8818 0096 6364     		str	r3, [r4, #68]
4824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 8819              		.loc 1 4824 0
 8820 0098 17B1     		cbz	r7, .L699
4824:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 8821              		.loc 1 4824 0 is_stmt 0 discriminator 1
 8822 009a B7F1807F 		cmp	r7, #16777216
 8823 009e D8D1     		bne	.L697
 8824              	.L699:
4827:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 8825              		.loc 1 4827 0 is_stmt 1
 8826 00a0 616C     		ldr	r1, [r4, #68]
 8827 00a2 2046     		mov	r0, r4
 8828 00a4 FFF7FEFF 		bl	I2C_ITError
 8829              	.LVL752:
 8830 00a8 D3E7     		b	.L697
 8831              	.L694:
4831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8832              		.loc 1 4831 0
 8833 00aa 15F0040F 		tst	r5, #4
 8834 00ae 1ED0     		beq	.L700
4831:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8835              		.loc 1 4831 0 is_stmt 0 discriminator 1
 8836 00b0 16F0040F 		tst	r6, #4
 8837 00b4 1BD0     		beq	.L700
4833:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8838              		.loc 1 4833 0 is_stmt 1
 8839 00b6 638D     		ldrh	r3, [r4, #42]
 8840 00b8 9BB2     		uxth	r3, r3
 8841 00ba 6BB1     		cbz	r3, .L701
4836:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8842              		.loc 1 4836 0
 8843 00bc 2368     		ldr	r3, [r4]
 8844 00be 5A6A     		ldr	r2, [r3, #36]
 8845 00c0 636A     		ldr	r3, [r4, #36]
 8846 00c2 1A70     		strb	r2, [r3]
4839:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8847              		.loc 1 4839 0
 8848 00c4 636A     		ldr	r3, [r4, #36]
 8849 00c6 0133     		adds	r3, r3, #1
 8850 00c8 6362     		str	r3, [r4, #36]
4841:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferCount--;
 8851              		.loc 1 4841 0
 8852 00ca 238D     		ldrh	r3, [r4, #40]
 8853 00cc 013B     		subs	r3, r3, #1
 8854 00ce 2385     		strh	r3, [r4, #40]	@ movhi
4842:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8855              		.loc 1 4842 0
 8856 00d0 638D     		ldrh	r3, [r4, #42]
 8857 00d2 013B     		subs	r3, r3, #1
 8858 00d4 9BB2     		uxth	r3, r3
 8859 00d6 6385     		strh	r3, [r4, #42]	@ movhi
 8860              	.L701:
4845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 8861              		.loc 1 4845 0
 8862 00d8 638D     		ldrh	r3, [r4, #42]
 8863 00da 9BB2     		uxth	r3, r3
 8864 00dc 002B     		cmp	r3, #0
 8865 00de B8D1     		bne	.L697
4845:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (tmpoptions != I2C_NO_OPTION_FRAME))
 8866              		.loc 1 4845 0 is_stmt 0 discriminator 1
 8867 00e0 17F5803F 		cmn	r7, #65536
 8868 00e4 B5D0     		beq	.L697
4849:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8869              		.loc 1 4849 0 is_stmt 1
 8870 00e6 2046     		mov	r0, r4
 8871 00e8 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8872              	.LVL753:
 8873 00ec B1E7     		b	.L697
 8874              	.L700:
4852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
 8875              		.loc 1 4852 0
 8876 00ee 15F0080F 		tst	r5, #8
 8877 00f2 02D0     		beq	.L702
4852:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****            (I2C_CHECK_IT_SOURCE(ITSources, I2C_IT_ADDRI) != RESET))
 8878              		.loc 1 4852 0 is_stmt 0 discriminator 1
 8879 00f4 16F0080F 		tst	r6, #8
 8880 00f8 17D1     		bne	.L710
 8881              	.L702:
4857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8882              		.loc 1 4857 0 is_stmt 1
 8883 00fa 15F0020F 		tst	r5, #2
 8884 00fe A8D0     		beq	.L697
4857:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8885              		.loc 1 4857 0 is_stmt 0 discriminator 1
 8886 0100 16F0020F 		tst	r6, #2
 8887 0104 A5D0     		beq	.L697
4863:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 8888              		.loc 1 4863 0 is_stmt 1
 8889 0106 638D     		ldrh	r3, [r4, #42]
 8890 0108 9BB2     		uxth	r3, r3
 8891 010a 9BB1     		cbz	r3, .L703
4866:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8892              		.loc 1 4866 0
 8893 010c 626A     		ldr	r2, [r4, #36]
 8894 010e 2368     		ldr	r3, [r4]
 8895 0110 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8896 0112 9A62     		str	r2, [r3, #40]
4869:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8897              		.loc 1 4869 0
 8898 0114 636A     		ldr	r3, [r4, #36]
 8899 0116 0133     		adds	r3, r3, #1
 8900 0118 6362     		str	r3, [r4, #36]
4871:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       hi2c->XferSize--;
 8901              		.loc 1 4871 0
 8902 011a 638D     		ldrh	r3, [r4, #42]
 8903 011c 013B     		subs	r3, r3, #1
 8904 011e 9BB2     		uxth	r3, r3
 8905 0120 6385     		strh	r3, [r4, #42]	@ movhi
4872:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 8906              		.loc 1 4872 0
 8907 0122 238D     		ldrh	r3, [r4, #40]
 8908 0124 013B     		subs	r3, r3, #1
 8909 0126 2385     		strh	r3, [r4, #40]	@ movhi
 8910 0128 93E7     		b	.L697
 8911              	.L710:
4855:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 8912              		.loc 1 4855 0
 8913 012a 2946     		mov	r1, r5
 8914 012c 2046     		mov	r0, r4
 8915 012e FFF7FEFF 		bl	I2C_ITAddrCplt
 8916              	.LVL754:
 8917 0132 8EE7     		b	.L697
 8918              	.L703:
4876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 8919              		.loc 1 4876 0
 8920 0134 B7F1807F 		cmp	r7, #16777216
 8921 0138 01D0     		beq	.L704
4876:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 8922              		.loc 1 4876 0 is_stmt 0 discriminator 1
 8923 013a 002F     		cmp	r7, #0
 8924 013c 89D1     		bne	.L697
 8925              	.L704:
4880:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 8926              		.loc 1 4880 0 is_stmt 1
 8927 013e 2046     		mov	r0, r4
 8928 0140 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 8929              	.LVL755:
 8930 0144 85E7     		b	.L697
 8931              	.LVL756:
 8932              	.L705:
4774:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8933              		.loc 1 4774 0
 8934 0146 0220     		movs	r0, #2
 8935              	.LVL757:
 8936 0148 86E7     		b	.L692
 8937              		.cfi_endproc
 8938              	.LFE367:
 8940              		.section	.text.I2C_ITMasterCplt,"ax",%progbits
 8941              		.align	1
 8942              		.syntax unified
 8943              		.thumb
 8944              		.thumb_func
 8945              		.fpu fpv4-sp-d16
 8947              	I2C_ITMasterCplt:
 8948              	.LFB375:
5503:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmperror;
 8949              		.loc 1 5503 0
 8950              		.cfi_startproc
 8951              		@ args = 0, pretend = 0, frame = 8
 8952              		@ frame_needed = 0, uses_anonymous_args = 0
 8953              	.LVL758:
 8954 0000 30B5     		push	{r4, r5, lr}
 8955              		.cfi_def_cfa_offset 12
 8956              		.cfi_offset 4, -12
 8957              		.cfi_offset 5, -8
 8958              		.cfi_offset 14, -4
 8959 0002 83B0     		sub	sp, sp, #12
 8960              		.cfi_def_cfa_offset 24
 8961 0004 0446     		mov	r4, r0
 8962 0006 0D46     		mov	r5, r1
 8963              	.LVL759:
5509:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8964              		.loc 1 5509 0
 8965 0008 0368     		ldr	r3, [r0]
 8966 000a 2022     		movs	r2, #32
 8967 000c DA61     		str	r2, [r3, #28]
5512:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8968              		.loc 1 5512 0
 8969 000e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8970 0012 DBB2     		uxtb	r3, r3
 8971 0014 212B     		cmp	r3, #33
 8972 0016 4AD0     		beq	.L723
5517:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8973              		.loc 1 5517 0
 8974 0018 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8975 001c DBB2     		uxtb	r3, r3
 8976 001e 222B     		cmp	r3, #34
 8977 0020 4BD0     		beq	.L724
 8978              	.LVL760:
 8979              	.L713:
5528:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8980              		.loc 1 5528 0
 8981 0022 2268     		ldr	r2, [r4]
 8982 0024 5368     		ldr	r3, [r2, #4]
 8983 0026 23F0FF73 		bic	r3, r3, #33423360
 8984 002a 23F48B33 		bic	r3, r3, #71168
 8985 002e 23F4FF73 		bic	r3, r3, #510
 8986 0032 23F00103 		bic	r3, r3, #1
 8987 0036 5360     		str	r3, [r2, #4]
5531:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8988              		.loc 1 5531 0
 8989 0038 0023     		movs	r3, #0
 8990 003a 6363     		str	r3, [r4, #52]
5532:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8991              		.loc 1 5532 0
 8992 003c A3F58033 		sub	r3, r3, #65536
 8993 0040 E362     		str	r3, [r4, #44]
5534:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 8994              		.loc 1 5534 0
 8995 0042 15F0100F 		tst	r5, #16
 8996 0046 06D0     		beq	.L714
5537:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 8997              		.loc 1 5537 0
 8998 0048 2368     		ldr	r3, [r4]
 8999 004a 1022     		movs	r2, #16
 9000 004c DA61     		str	r2, [r3, #28]
5540:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9001              		.loc 1 5540 0
 9002 004e 636C     		ldr	r3, [r4, #68]
 9003 0050 43F00403 		orr	r3, r3, #4
 9004 0054 6364     		str	r3, [r4, #68]
 9005              	.L714:
5544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9006              		.loc 1 5544 0
 9007 0056 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9008 005a DBB2     		uxtb	r3, r3
 9009 005c 602B     		cmp	r3, #96
 9010 005e 32D0     		beq	.L725
 9011              	.L715:
5552:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9012              		.loc 1 5552 0
 9013 0060 2046     		mov	r0, r4
 9014 0062 FFF7FEFF 		bl	I2C_Flush_TXDR
 9015              	.LVL761:
5555:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9016              		.loc 1 5555 0
 9017 0066 626C     		ldr	r2, [r4, #68]
 9018              	.LVL762:
5558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9019              		.loc 1 5558 0
 9020 0068 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9021 006c DBB2     		uxtb	r3, r3
 9022 006e 602B     		cmp	r3, #96
 9023 0070 32D0     		beq	.L716
5558:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9024              		.loc 1 5558 0 is_stmt 0 discriminator 1
 9025 0072 8ABB     		cbnz	r2, .L716
5564:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9026              		.loc 1 5564 0 is_stmt 1
 9027 0074 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9028 0078 DBB2     		uxtb	r3, r3
 9029 007a 212B     		cmp	r3, #33
 9030 007c 32D0     		beq	.L726
5599:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9031              		.loc 1 5599 0
 9032 007e 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9033 0082 DBB2     		uxtb	r3, r3
 9034 0084 222B     		cmp	r3, #34
 9035 0086 2BD1     		bne	.L711
5601:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9036              		.loc 1 5601 0
 9037 0088 2023     		movs	r3, #32
 9038 008a 84F84130 		strb	r3, [r4, #65]
5602:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9039              		.loc 1 5602 0
 9040 008e 0023     		movs	r3, #0
 9041 0090 2363     		str	r3, [r4, #48]
5604:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 9042              		.loc 1 5604 0
 9043 0092 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9044 0096 DBB2     		uxtb	r3, r3
 9045 0098 402B     		cmp	r3, #64
 9046 009a 3FD0     		beq	.L727
5620:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9047              		.loc 1 5620 0
 9048 009c 0023     		movs	r3, #0
 9049 009e 84F84230 		strb	r3, [r4, #66]
5623:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9050              		.loc 1 5623 0
 9051 00a2 84F84030 		strb	r3, [r4, #64]
5629:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9052              		.loc 1 5629 0
 9053 00a6 2046     		mov	r0, r4
 9054 00a8 FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 9055              	.LVL763:
5637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9056              		.loc 1 5637 0
 9057 00ac 18E0     		b	.L711
 9058              	.LVL764:
 9059              	.L723:
5514:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 9060              		.loc 1 5514 0
 9061 00ae 0121     		movs	r1, #1
 9062              	.LVL765:
 9063 00b0 FFF7FEFF 		bl	I2C_Disable_IRQ
 9064              	.LVL766:
5515:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9065              		.loc 1 5515 0
 9066 00b4 1123     		movs	r3, #17
 9067 00b6 2363     		str	r3, [r4, #48]
 9068 00b8 B3E7     		b	.L713
 9069              	.LVL767:
 9070              	.L724:
5519:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 9071              		.loc 1 5519 0
 9072 00ba 0221     		movs	r1, #2
 9073              	.LVL768:
 9074 00bc FFF7FEFF 		bl	I2C_Disable_IRQ
 9075              	.LVL769:
5520:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9076              		.loc 1 5520 0
 9077 00c0 1223     		movs	r3, #18
 9078 00c2 2363     		str	r3, [r4, #48]
 9079 00c4 ADE7     		b	.L713
 9080              	.L725:
5544:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9081              		.loc 1 5544 0 discriminator 1
 9082 00c6 15F0040F 		tst	r5, #4
 9083 00ca C9D0     		beq	.L715
5547:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     UNUSED(tmpreg);
 9084              		.loc 1 5547 0
 9085 00cc 2368     		ldr	r3, [r4]
 9086 00ce 5B6A     		ldr	r3, [r3, #36]
 9087 00d0 DBB2     		uxtb	r3, r3
 9088 00d2 0193     		str	r3, [sp, #4]
5548:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9089              		.loc 1 5548 0
 9090 00d4 019B     		ldr	r3, [sp, #4]
 9091 00d6 C3E7     		b	.L715
 9092              	.LVL770:
 9093              	.L716:
5561:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9094              		.loc 1 5561 0
 9095 00d8 616C     		ldr	r1, [r4, #68]
 9096 00da 2046     		mov	r0, r4
 9097 00dc FFF7FEFF 		bl	I2C_ITError
 9098              	.LVL771:
 9099              	.L711:
5637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9100              		.loc 1 5637 0
 9101 00e0 03B0     		add	sp, sp, #12
 9102              		.cfi_remember_state
 9103              		.cfi_def_cfa_offset 12
 9104              		@ sp needed
 9105 00e2 30BD     		pop	{r4, r5, pc}
 9106              	.LVL772:
 9107              	.L726:
 9108              		.cfi_restore_state
5566:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 9109              		.loc 1 5566 0
 9110 00e4 2023     		movs	r3, #32
 9111 00e6 84F84130 		strb	r3, [r4, #65]
5567:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9112              		.loc 1 5567 0
 9113 00ea 0023     		movs	r3, #0
 9114 00ec 2363     		str	r3, [r4, #48]
5569:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 9115              		.loc 1 5569 0
 9116 00ee 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 9117 00f2 DBB2     		uxtb	r3, r3
 9118 00f4 402B     		cmp	r3, #64
 9119 00f6 08D0     		beq	.L728
5585:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9120              		.loc 1 5585 0
 9121 00f8 0023     		movs	r3, #0
 9122 00fa 84F84230 		strb	r3, [r4, #66]
5588:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9123              		.loc 1 5588 0
 9124 00fe 84F84030 		strb	r3, [r4, #64]
5594:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9125              		.loc 1 5594 0
 9126 0102 2046     		mov	r0, r4
 9127 0104 FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 9128              	.LVL773:
 9129 0108 EAE7     		b	.L711
 9130              	.LVL774:
 9131              	.L728:
5571:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9132              		.loc 1 5571 0
 9133 010a 0023     		movs	r3, #0
 9134 010c 84F84230 		strb	r3, [r4, #66]
5574:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9135              		.loc 1 5574 0
 9136 0110 84F84030 		strb	r3, [r4, #64]
5580:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9137              		.loc 1 5580 0
 9138 0114 2046     		mov	r0, r4
 9139 0116 FFF7FEFF 		bl	HAL_I2C_MemTxCpltCallback
 9140              	.LVL775:
 9141 011a E1E7     		b	.L711
 9142              	.LVL776:
 9143              	.L727:
5606:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9144              		.loc 1 5606 0
 9145 011c 0023     		movs	r3, #0
 9146 011e 84F84230 		strb	r3, [r4, #66]
5609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9147              		.loc 1 5609 0
 9148 0122 84F84030 		strb	r3, [r4, #64]
5615:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** #endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
 9149              		.loc 1 5615 0
 9150 0126 2046     		mov	r0, r4
 9151 0128 FFF7FEFF 		bl	HAL_I2C_MemRxCpltCallback
 9152              	.LVL777:
 9153 012c D8E7     		b	.L711
 9154              		.cfi_endproc
 9155              	.LFE375:
 9157              		.section	.text.I2C_Master_ISR_IT,"ax",%progbits
 9158              		.align	1
 9159              		.syntax unified
 9160              		.thumb
 9161              		.thumb_func
 9162              		.fpu fpv4-sp-d16
 9164              	I2C_Master_ISR_IT:
 9165              	.LFB366:
4632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint16_t devaddress;
 9166              		.loc 1 4632 0
 9167              		.cfi_startproc
 9168              		@ args = 0, pretend = 0, frame = 0
 9169              		@ frame_needed = 0, uses_anonymous_args = 0
 9170              	.LVL778:
4637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9171              		.loc 1 4637 0
 9172 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9173 0004 012B     		cmp	r3, #1
 9174 0006 00F0B780 		beq	.L743
4632:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint16_t devaddress;
 9175              		.loc 1 4632 0 discriminator 2
 9176 000a 70B5     		push	{r4, r5, r6, lr}
 9177              		.cfi_def_cfa_offset 16
 9178              		.cfi_offset 4, -16
 9179              		.cfi_offset 5, -12
 9180              		.cfi_offset 6, -8
 9181              		.cfi_offset 14, -4
 9182 000c 82B0     		sub	sp, sp, #8
 9183              		.cfi_def_cfa_offset 24
 9184 000e 0446     		mov	r4, r0
 9185 0010 0D46     		mov	r5, r1
 9186 0012 1646     		mov	r6, r2
4637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9187              		.loc 1 4637 0 discriminator 2
 9188 0014 0123     		movs	r3, #1
 9189 0016 80F84030 		strb	r3, [r0, #64]
4639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9190              		.loc 1 4639 0 discriminator 2
 9191 001a 11F0100F 		tst	r1, #16
 9192 001e 02D0     		beq	.L731
4639:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9193              		.loc 1 4639 0 is_stmt 0 discriminator 1
 9194 0020 12F0100F 		tst	r2, #16
 9195 0024 21D1     		bne	.L748
 9196              	.L731:
4652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9197              		.loc 1 4652 0 is_stmt 1
 9198 0026 15F0040F 		tst	r5, #4
 9199 002a 28D0     		beq	.L733
4652:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9200              		.loc 1 4652 0 is_stmt 0 discriminator 1
 9201 002c 16F0040F 		tst	r6, #4
 9202 0030 25D0     		beq	.L733
4655:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9203              		.loc 1 4655 0 is_stmt 1
 9204 0032 25F00405 		bic	r5, r5, #4
 9205              	.LVL779:
4658:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9206              		.loc 1 4658 0
 9207 0036 2368     		ldr	r3, [r4]
 9208 0038 5A6A     		ldr	r2, [r3, #36]
 9209              	.LVL780:
 9210 003a 636A     		ldr	r3, [r4, #36]
 9211 003c 1A70     		strb	r2, [r3]
4661:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9212              		.loc 1 4661 0
 9213 003e 636A     		ldr	r3, [r4, #36]
 9214 0040 0133     		adds	r3, r3, #1
 9215 0042 6362     		str	r3, [r4, #36]
4663:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount--;
 9216              		.loc 1 4663 0
 9217 0044 238D     		ldrh	r3, [r4, #40]
 9218 0046 013B     		subs	r3, r3, #1
 9219 0048 2385     		strh	r3, [r4, #40]	@ movhi
4664:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9220              		.loc 1 4664 0
 9221 004a 638D     		ldrh	r3, [r4, #42]
 9222 004c 013B     		subs	r3, r3, #1
 9223 004e 9BB2     		uxth	r3, r3
 9224 0050 6385     		strh	r3, [r4, #42]	@ movhi
 9225              	.LVL781:
 9226              	.L732:
4748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9227              		.loc 1 4748 0
 9228 0052 15F0200F 		tst	r5, #32
 9229 0056 03D0     		beq	.L742
4748:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9230              		.loc 1 4748 0 is_stmt 0 discriminator 1
 9231 0058 16F0200F 		tst	r6, #32
 9232 005c 40F08780 		bne	.L749
 9233              	.L742:
4755:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9234              		.loc 1 4755 0 is_stmt 1
 9235 0060 0020     		movs	r0, #0
 9236 0062 84F84000 		strb	r0, [r4, #64]
4758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9237              		.loc 1 4758 0
 9238 0066 02B0     		add	sp, sp, #8
 9239              		.cfi_remember_state
 9240              		.cfi_def_cfa_offset 16
 9241              		@ sp needed
 9242 0068 70BD     		pop	{r4, r5, r6, pc}
 9243              	.LVL782:
 9244              	.L748:
 9245              		.cfi_restore_state
4642:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9246              		.loc 1 4642 0
 9247 006a 0368     		ldr	r3, [r0]
 9248 006c 1022     		movs	r2, #16
 9249              	.LVL783:
 9250 006e DA61     		str	r2, [r3, #28]
4647:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9251              		.loc 1 4647 0
 9252 0070 436C     		ldr	r3, [r0, #68]
 9253 0072 43F00403 		orr	r3, r3, #4
 9254 0076 4364     		str	r3, [r0, #68]
4650:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9255              		.loc 1 4650 0
 9256 0078 FFF7FEFF 		bl	I2C_Flush_TXDR
 9257              	.LVL784:
 9258 007c E9E7     		b	.L732
 9259              	.LVL785:
 9260              	.L733:
4666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9261              		.loc 1 4666 0
 9262 007e 15F0020F 		tst	r5, #2
 9263 0082 11D0     		beq	.L734
4666:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9264              		.loc 1 4666 0 is_stmt 0 discriminator 1
 9265 0084 16F0020F 		tst	r6, #2
 9266 0088 0ED0     		beq	.L734
4669:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9267              		.loc 1 4669 0 is_stmt 1
 9268 008a 626A     		ldr	r2, [r4, #36]
 9269              	.LVL786:
 9270 008c 2368     		ldr	r3, [r4]
 9271 008e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9272 0090 9A62     		str	r2, [r3, #40]
4672:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9273              		.loc 1 4672 0
 9274 0092 636A     		ldr	r3, [r4, #36]
 9275 0094 0133     		adds	r3, r3, #1
 9276 0096 6362     		str	r3, [r4, #36]
4674:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     hi2c->XferCount--;
 9277              		.loc 1 4674 0
 9278 0098 238D     		ldrh	r3, [r4, #40]
 9279 009a 013B     		subs	r3, r3, #1
 9280 009c 2385     		strh	r3, [r4, #40]	@ movhi
4675:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9281              		.loc 1 4675 0
 9282 009e 638D     		ldrh	r3, [r4, #42]
 9283 00a0 013B     		subs	r3, r3, #1
 9284 00a2 9BB2     		uxth	r3, r3
 9285 00a4 6385     		strh	r3, [r4, #42]	@ movhi
 9286 00a6 D4E7     		b	.L732
 9287              	.LVL787:
 9288              	.L734:
4677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9289              		.loc 1 4677 0
 9290 00a8 15F0800F 		tst	r5, #128
 9291 00ac 3FD0     		beq	.L735
4677:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9292              		.loc 1 4677 0 is_stmt 0 discriminator 1
 9293 00ae 16F0400F 		tst	r6, #64
 9294 00b2 3CD0     		beq	.L735
4679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 9295              		.loc 1 4679 0 is_stmt 1
 9296 00b4 638D     		ldrh	r3, [r4, #42]
 9297 00b6 9BB2     		uxth	r3, r3
 9298 00b8 5BB3     		cbz	r3, .L736
4679:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 9299              		.loc 1 4679 0 is_stmt 0 discriminator 1
 9300 00ba 238D     		ldrh	r3, [r4, #40]
 9301 00bc 4BBB     		cbnz	r3, .L736
4681:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9302              		.loc 1 4681 0 is_stmt 1
 9303 00be 2368     		ldr	r3, [r4]
 9304 00c0 5968     		ldr	r1, [r3, #4]
 9305              	.LVL788:
 9306 00c2 C1F30901 		ubfx	r1, r1, #0, #10
 9307              	.LVL789:
4683:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 9308              		.loc 1 4683 0
 9309 00c6 638D     		ldrh	r3, [r4, #42]
 9310 00c8 9BB2     		uxth	r3, r3
 9311 00ca FF2B     		cmp	r3, #255
 9312 00cc 0ED8     		bhi	.L750
4690:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9313              		.loc 1 4690 0
 9314 00ce 628D     		ldrh	r2, [r4, #42]
 9315              	.LVL790:
 9316 00d0 92B2     		uxth	r2, r2
 9317 00d2 2285     		strh	r2, [r4, #40]	@ movhi
4691:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9318              		.loc 1 4691 0
 9319 00d4 E36A     		ldr	r3, [r4, #44]
 9320 00d6 13F5803F 		cmn	r3, #65536
 9321 00da 11D0     		beq	.L738
4693:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9322              		.loc 1 4693 0
 9323 00dc E36A     		ldr	r3, [r4, #44]
 9324 00de 0020     		movs	r0, #0
 9325              	.LVL791:
 9326 00e0 0090     		str	r0, [sp]
 9327 00e2 D2B2     		uxtb	r2, r2
 9328 00e4 2046     		mov	r0, r4
 9329 00e6 FFF7FEFF 		bl	I2C_TransferConfig
 9330              	.LVL792:
 9331 00ea B2E7     		b	.L732
 9332              	.LVL793:
 9333              	.L750:
4685:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_START
 9334              		.loc 1 4685 0
 9335 00ec FF22     		movs	r2, #255
 9336              	.LVL794:
 9337 00ee 2285     		strh	r2, [r4, #40]	@ movhi
4686:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 9338              		.loc 1 4686 0
 9339 00f0 0023     		movs	r3, #0
 9340 00f2 0093     		str	r3, [sp]
 9341 00f4 4FF08073 		mov	r3, #16777216
 9342 00f8 2046     		mov	r0, r4
 9343              	.LVL795:
 9344 00fa FFF7FEFF 		bl	I2C_TransferConfig
 9345              	.LVL796:
 9346 00fe A8E7     		b	.L732
 9347              	.LVL797:
 9348              	.L738:
4697:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9349              		.loc 1 4697 0
 9350 0100 0023     		movs	r3, #0
 9351 0102 0093     		str	r3, [sp]
 9352 0104 4FF00073 		mov	r3, #33554432
 9353 0108 D2B2     		uxtb	r2, r2
 9354 010a 2046     		mov	r0, r4
 9355              	.LVL798:
 9356 010c FFF7FEFF 		bl	I2C_TransferConfig
 9357              	.LVL799:
 9358 0110 9FE7     		b	.L732
 9359              	.LVL800:
 9360              	.L736:
4704:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 9361              		.loc 1 4704 0
 9362 0112 2368     		ldr	r3, [r4]
 9363 0114 5B68     		ldr	r3, [r3, #4]
 9364 0116 13F0007F 		tst	r3, #33554432
 9365 011a 03D1     		bne	.L739
4707:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 9366              		.loc 1 4707 0
 9367 011c 2046     		mov	r0, r4
 9368              	.LVL801:
 9369 011e FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9370              	.LVL802:
 9371 0122 96E7     		b	.L732
 9372              	.LVL803:
 9373              	.L739:
4713:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 9374              		.loc 1 4713 0
 9375 0124 4021     		movs	r1, #64
 9376              	.LVL804:
 9377 0126 2046     		mov	r0, r4
 9378              	.LVL805:
 9379 0128 FFF7FEFF 		bl	I2C_ITError
 9380              	.LVL806:
 9381 012c 91E7     		b	.L732
 9382              	.LVL807:
 9383              	.L735:
4717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9384              		.loc 1 4717 0
 9385 012e 15F0400F 		tst	r5, #64
 9386 0132 8ED0     		beq	.L732
4717:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9387              		.loc 1 4717 0 is_stmt 0 discriminator 1
 9388 0134 16F0400F 		tst	r6, #64
 9389 0138 8BD0     		beq	.L732
4719:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 9390              		.loc 1 4719 0 is_stmt 1
 9391 013a 638D     		ldrh	r3, [r4, #42]
 9392 013c 9BB2     		uxth	r3, r3
 9393 013e 8BB9     		cbnz	r3, .L740
4721:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 9394              		.loc 1 4721 0
 9395 0140 2368     		ldr	r3, [r4]
 9396 0142 5A68     		ldr	r2, [r3, #4]
 9397              	.LVL808:
 9398 0144 12F0007F 		tst	r2, #33554432
 9399 0148 83D1     		bne	.L732
4724:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9400              		.loc 1 4724 0
 9401 014a E26A     		ldr	r2, [r4, #44]
 9402 014c 12F5803F 		cmn	r2, #65536
 9403 0150 04D1     		bne	.L741
4727:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9404              		.loc 1 4727 0
 9405 0152 5A68     		ldr	r2, [r3, #4]
 9406 0154 42F48042 		orr	r2, r2, #16384
 9407 0158 5A60     		str	r2, [r3, #4]
 9408 015a 7AE7     		b	.L732
 9409              	.L741:
4732:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9410              		.loc 1 4732 0
 9411 015c 2046     		mov	r0, r4
 9412              	.LVL809:
 9413 015e FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9414              	.LVL810:
 9415 0162 76E7     		b	.L732
 9416              	.LVL811:
 9417              	.L740:
4740:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 9418              		.loc 1 4740 0
 9419 0164 4021     		movs	r1, #64
 9420              	.LVL812:
 9421 0166 2046     		mov	r0, r4
 9422              	.LVL813:
 9423 0168 FFF7FEFF 		bl	I2C_ITError
 9424              	.LVL814:
 9425 016c 71E7     		b	.L732
 9426              	.LVL815:
 9427              	.L749:
4751:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9428              		.loc 1 4751 0
 9429 016e 2946     		mov	r1, r5
 9430 0170 2046     		mov	r0, r4
 9431 0172 FFF7FEFF 		bl	I2C_ITMasterCplt
 9432              	.LVL816:
 9433 0176 73E7     		b	.L742
 9434              	.LVL817:
 9435              	.L743:
 9436              		.cfi_def_cfa_offset 0
 9437              		.cfi_restore 4
 9438              		.cfi_restore 5
 9439              		.cfi_restore 6
 9440              		.cfi_restore 14
4637:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9441              		.loc 1 4637 0
 9442 0178 0220     		movs	r0, #2
 9443              	.LVL818:
4758:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9444              		.loc 1 4758 0
 9445 017a 7047     		bx	lr
 9446              		.cfi_endproc
 9447              	.LFE366:
 9449              		.section	.text.I2C_Slave_ISR_DMA,"ax",%progbits
 9450              		.align	1
 9451              		.syntax unified
 9452              		.thumb
 9453              		.thumb_func
 9454              		.fpu fpv4-sp-d16
 9456              	I2C_Slave_ISR_DMA:
 9457              	.LFB369:
5039:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmpoptions = hi2c->XferOptions;
 9458              		.loc 1 5039 0
 9459              		.cfi_startproc
 9460              		@ args = 0, pretend = 0, frame = 0
 9461              		@ frame_needed = 0, uses_anonymous_args = 0
 9462              	.LVL819:
 9463 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 9464              		.cfi_def_cfa_offset 24
 9465              		.cfi_offset 3, -24
 9466              		.cfi_offset 4, -20
 9467              		.cfi_offset 5, -16
 9468              		.cfi_offset 6, -12
 9469              		.cfi_offset 7, -8
 9470              		.cfi_offset 14, -4
5040:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t treatdmanack = 0U;
 9471              		.loc 1 5040 0
 9472 0002 C76A     		ldr	r7, [r0, #44]
 9473              	.LVL820:
5045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9474              		.loc 1 5045 0
 9475 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9476 0008 012B     		cmp	r3, #1
 9477 000a 00F08780 		beq	.L769
 9478 000e 1646     		mov	r6, r2
 9479 0010 0C46     		mov	r4, r1
 9480 0012 0546     		mov	r5, r0
5045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9481              		.loc 1 5045 0 is_stmt 0 discriminator 2
 9482 0014 0123     		movs	r3, #1
 9483 0016 80F84030 		strb	r3, [r0, #64]
5048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9484              		.loc 1 5048 0 is_stmt 1 discriminator 2
 9485 001a 11F0200F 		tst	r1, #32
 9486 001e 02D0     		beq	.L753
5048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9487              		.loc 1 5048 0 is_stmt 0 discriminator 1
 9488 0020 12F0200F 		tst	r2, #32
 9489 0024 15D1     		bne	.L774
 9490              	.LVL821:
 9491              	.L753:
5054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9492              		.loc 1 5054 0 is_stmt 1
 9493 0026 14F0100F 		tst	r4, #16
 9494 002a 68D0     		beq	.L754
5054:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9495              		.loc 1 5054 0 is_stmt 0 discriminator 1
 9496 002c 16F0100F 		tst	r6, #16
 9497 0030 65D0     		beq	.L754
5060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
 9498              		.loc 1 5060 0 is_stmt 1
 9499 0032 C6F38033 		ubfx	r3, r6, #14, #1
 9500 0036 13B9     		cbnz	r3, .L755
5060:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         (I2C_CHECK_IT_SOURCE(ITSources, I2C_CR1_RXDMAEN) != RESET))
 9501              		.loc 1 5060 0 is_stmt 0 discriminator 1
 9502 0038 16F4004F 		tst	r6, #32768
 9503 003c 5BD0     		beq	.L756
 9504              	.L755:
5064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 9505              		.loc 1 5064 0 is_stmt 1
 9506 003e EA6B     		ldr	r2, [r5, #60]
 9507 0040 52B1     		cbz	r2, .L770
5066:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9508              		.loc 1 5066 0
 9509 0042 16F4004F 		tst	r6, #32768
 9510 0046 09D0     		beq	.L771
5068:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 9511              		.loc 1 5068 0
 9512 0048 1268     		ldr	r2, [r2]
 9513 004a 5268     		ldr	r2, [r2, #4]
 9514 004c 3AB3     		cbz	r2, .L772
5041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
 9515              		.loc 1 5041 0
 9516 004e 0021     		movs	r1, #0
 9517 0050 05E0     		b	.L757
 9518              	.LVL822:
 9519              	.L774:
5051:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9520              		.loc 1 5051 0
 9521 0052 FFF7FEFF 		bl	I2C_ITSlaveCplt
 9522              	.LVL823:
 9523 0056 E6E7     		b	.L753
 9524              	.L770:
5041:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   HAL_I2C_StateTypeDef tmpstate;
 9525              		.loc 1 5041 0
 9526 0058 0021     		movs	r1, #0
 9527 005a 00E0     		b	.L757
 9528              	.L771:
 9529 005c 0021     		movs	r1, #0
 9530              	.L757:
 9531              	.LVL824:
5076:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 9532              		.loc 1 5076 0
 9533 005e AA6B     		ldr	r2, [r5, #56]
 9534 0060 1AB1     		cbz	r2, .L758
5078:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9535              		.loc 1 5078 0
 9536 0062 13B1     		cbz	r3, .L758
5080:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 9537              		.loc 1 5080 0
 9538 0064 1368     		ldr	r3, [r2]
 9539 0066 5B68     		ldr	r3, [r3, #4]
 9540 0068 DBB1     		cbz	r3, .L759
 9541              	.L758:
5087:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 9542              		.loc 1 5087 0
 9543 006a D1B9     		cbnz	r1, .L759
5117:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9544              		.loc 1 5117 0
 9545 006c 2B68     		ldr	r3, [r5]
 9546 006e 1022     		movs	r2, #16
 9547 0070 DA61     		str	r2, [r3, #28]
5120:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9548              		.loc 1 5120 0
 9549 0072 6B6C     		ldr	r3, [r5, #68]
 9550 0074 43F00403 		orr	r3, r3, #4
 9551 0078 6B64     		str	r3, [r5, #68]
5123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9552              		.loc 1 5123 0
 9553 007a 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9554 007e DBB2     		uxtb	r3, r3
 9555              	.LVL825:
5125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9556              		.loc 1 5125 0
 9557 0080 17B1     		cbz	r7, .L764
5125:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9558              		.loc 1 5125 0 is_stmt 0 discriminator 1
 9559 0082 B7F1807F 		cmp	r7, #16777216
 9560 0086 40D1     		bne	.L762
 9561              	.L764:
5127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 9562              		.loc 1 5127 0 is_stmt 1
 9563 0088 212B     		cmp	r3, #33
 9564 008a 2DD0     		beq	.L765
5127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 9565              		.loc 1 5127 0 is_stmt 0 discriminator 1
 9566 008c 292B     		cmp	r3, #41
 9567 008e 2BD0     		beq	.L765
5131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 9568              		.loc 1 5131 0 is_stmt 1
 9569 0090 222B     		cmp	r3, #34
 9570 0092 01D0     		beq	.L768
5131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           {
 9571              		.loc 1 5131 0 is_stmt 0 discriminator 1
 9572 0094 2A2B     		cmp	r3, #42
 9573 0096 29D1     		bne	.L767
 9574              	.L768:
5133:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
 9575              		.loc 1 5133 0 is_stmt 1
 9576 0098 2223     		movs	r3, #34
 9577              	.LVL826:
 9578 009a 2B63     		str	r3, [r5, #48]
 9579 009c 26E0     		b	.L767
 9580              	.LVL827:
 9581              	.L772:
5070:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
 9582              		.loc 1 5070 0
 9583 009e 0121     		movs	r1, #1
 9584 00a0 DDE7     		b	.L757
 9585              	.LVL828:
 9586              	.L759:
5090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9587              		.loc 1 5090 0
 9588 00a2 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9589 00a6 DBB2     		uxtb	r3, r3
 9590 00a8 282B     		cmp	r3, #40
 9591 00aa 08D0     		beq	.L775
 9592              	.L761:
5095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9593              		.loc 1 5095 0
 9594 00ac 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9595 00b0 DBB2     		uxtb	r3, r3
 9596 00b2 292B     		cmp	r3, #41
 9597 00b4 0BD0     		beq	.L776
 9598              	.L763:
5110:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9599              		.loc 1 5110 0
 9600 00b6 2B68     		ldr	r3, [r5]
 9601 00b8 1022     		movs	r2, #16
 9602 00ba DA61     		str	r2, [r3, #28]
 9603 00bc 25E0     		b	.L762
 9604              	.L775:
5090:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9605              		.loc 1 5090 0 discriminator 1
 9606 00be B7F1007F 		cmp	r7, #33554432
 9607 00c2 F3D1     		bne	.L761
5093:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9608              		.loc 1 5093 0
 9609 00c4 2146     		mov	r1, r4
 9610              	.LVL829:
 9611 00c6 2846     		mov	r0, r5
 9612 00c8 FFF7FEFF 		bl	I2C_ITListenCplt
 9613              	.LVL830:
 9614 00cc 1DE0     		b	.L762
 9615              	.LVL831:
 9616              	.L776:
5095:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9617              		.loc 1 5095 0 discriminator 1
 9618 00ce 17F5803F 		cmn	r7, #65536
 9619 00d2 F0D0     		beq	.L763
5098:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9620              		.loc 1 5098 0
 9621 00d4 2B68     		ldr	r3, [r5]
 9622 00d6 1022     		movs	r2, #16
 9623 00d8 DA61     		str	r2, [r3, #28]
5101:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9624              		.loc 1 5101 0
 9625 00da 2846     		mov	r0, r5
 9626 00dc FFF7FEFF 		bl	I2C_Flush_TXDR
 9627              	.LVL832:
5105:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9628              		.loc 1 5105 0
 9629 00e0 2846     		mov	r0, r5
 9630 00e2 FFF7FEFF 		bl	I2C_ITSlaveSeqCplt
 9631              	.LVL833:
 9632 00e6 10E0     		b	.L762
 9633              	.LVL834:
 9634              	.L765:
5129:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****           }
 9635              		.loc 1 5129 0
 9636 00e8 2123     		movs	r3, #33
 9637              	.LVL835:
 9638 00ea 2B63     		str	r3, [r5, #48]
 9639              	.L767:
5141:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9640              		.loc 1 5141 0
 9641 00ec 696C     		ldr	r1, [r5, #68]
 9642              	.LVL836:
 9643 00ee 2846     		mov	r0, r5
 9644 00f0 FFF7FEFF 		bl	I2C_ITError
 9645              	.LVL837:
 9646 00f4 09E0     		b	.L762
 9647              	.LVL838:
 9648              	.L756:
5148:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 9649              		.loc 1 5148 0
 9650 00f6 2B68     		ldr	r3, [r5]
 9651 00f8 1022     		movs	r2, #16
 9652 00fa DA61     		str	r2, [r3, #28]
 9653 00fc 05E0     		b	.L762
 9654              	.L754:
5151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9655              		.loc 1 5151 0
 9656 00fe 14F0080F 		tst	r4, #8
 9657 0102 02D0     		beq	.L762
5151:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9658              		.loc 1 5151 0 is_stmt 0 discriminator 1
 9659 0104 16F0080F 		tst	r6, #8
 9660 0108 03D1     		bne	.L777
 9661              	.LVL839:
 9662              	.L762:
5161:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9663              		.loc 1 5161 0 is_stmt 1
 9664 010a 0020     		movs	r0, #0
 9665 010c 85F84000 		strb	r0, [r5, #64]
 9666              	.LVL840:
 9667              	.L752:
5164:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9668              		.loc 1 5164 0
 9669 0110 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9670              	.LVL841:
 9671              	.L777:
5153:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9672              		.loc 1 5153 0
 9673 0112 2146     		mov	r1, r4
 9674 0114 2846     		mov	r0, r5
 9675 0116 FFF7FEFF 		bl	I2C_ITAddrCplt
 9676              	.LVL842:
 9677 011a F6E7     		b	.L762
 9678              	.LVL843:
 9679              	.L769:
5045:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9680              		.loc 1 5045 0
 9681 011c 0220     		movs	r0, #2
 9682              	.LVL844:
 9683 011e F7E7     		b	.L752
 9684              		.cfi_endproc
 9685              	.LFE369:
 9687              		.section	.text.I2C_Master_ISR_DMA,"ax",%progbits
 9688              		.align	1
 9689              		.syntax unified
 9690              		.thumb
 9691              		.thumb_func
 9692              		.fpu fpv4-sp-d16
 9694              	I2C_Master_ISR_DMA:
 9695              	.LFB368:
4904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint16_t devaddress;
 9696              		.loc 1 4904 0
 9697              		.cfi_startproc
 9698              		@ args = 0, pretend = 0, frame = 0
 9699              		@ frame_needed = 0, uses_anonymous_args = 0
 9700              	.LVL845:
4909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9701              		.loc 1 4909 0
 9702 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 9703 0004 012B     		cmp	r3, #1
 9704 0006 00F09980 		beq	.L791
4904:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint16_t devaddress;
 9705              		.loc 1 4904 0 discriminator 2
 9706 000a 10B5     		push	{r4, lr}
 9707              		.cfi_def_cfa_offset 8
 9708              		.cfi_offset 4, -8
 9709              		.cfi_offset 14, -4
 9710 000c 82B0     		sub	sp, sp, #8
 9711              		.cfi_def_cfa_offset 16
 9712 000e 0446     		mov	r4, r0
4909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9713              		.loc 1 4909 0 discriminator 2
 9714 0010 0123     		movs	r3, #1
 9715 0012 80F84030 		strb	r3, [r0, #64]
4911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9716              		.loc 1 4911 0 discriminator 2
 9717 0016 11F0100F 		tst	r1, #16
 9718 001a 02D0     		beq	.L780
4911:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9719              		.loc 1 4911 0 is_stmt 0 discriminator 1
 9720 001c 12F0100F 		tst	r2, #16
 9721 0020 31D1     		bne	.L797
 9722              	.L780:
4927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9723              		.loc 1 4927 0 is_stmt 1
 9724 0022 11F0800F 		tst	r1, #128
 9725 0026 5FD0     		beq	.L782
4927:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9726              		.loc 1 4927 0 is_stmt 0 discriminator 1
 9727 0028 12F0400F 		tst	r2, #64
 9728 002c 5CD0     		beq	.L782
4930:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9729              		.loc 1 4930 0 is_stmt 1
 9730 002e 2268     		ldr	r2, [r4]
 9731              	.LVL846:
 9732 0030 1368     		ldr	r3, [r2]
 9733 0032 23F04003 		bic	r3, r3, #64
 9734 0036 1360     		str	r3, [r2]
4932:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 9735              		.loc 1 4932 0
 9736 0038 638D     		ldrh	r3, [r4, #42]
 9737 003a 9BB2     		uxth	r3, r3
 9738 003c 002B     		cmp	r3, #0
 9739 003e 45D0     		beq	.L783
4935:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9740              		.loc 1 4935 0
 9741 0040 2368     		ldr	r3, [r4]
 9742 0042 5968     		ldr	r1, [r3, #4]
 9743              	.LVL847:
 9744 0044 C1F30901 		ubfx	r1, r1, #0, #10
 9745              	.LVL848:
4938:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 9746              		.loc 1 4938 0
 9747 0048 638D     		ldrh	r3, [r4, #42]
 9748 004a 9BB2     		uxth	r3, r3
 9749 004c FF2B     		cmp	r3, #255
 9750 004e 2CD9     		bls	.L784
4940:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
 9751              		.loc 1 4940 0
 9752 0050 FF23     		movs	r3, #255
 9753 0052 2385     		strh	r3, [r4, #40]	@ movhi
 9754              	.LVL849:
4941:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 9755              		.loc 1 4941 0
 9756 0054 4FF08073 		mov	r3, #16777216
 9757              	.LVL850:
 9758              	.L785:
4957:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9759              		.loc 1 4957 0
 9760 0058 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 9761 005c 0020     		movs	r0, #0
 9762              	.LVL851:
 9763 005e 0090     		str	r0, [sp]
 9764 0060 2046     		mov	r0, r4
 9765 0062 FFF7FEFF 		bl	I2C_TransferConfig
 9766              	.LVL852:
4960:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9767              		.loc 1 4960 0
 9768 0066 638D     		ldrh	r3, [r4, #42]
 9769 0068 228D     		ldrh	r2, [r4, #40]
 9770 006a 9B1A     		subs	r3, r3, r2
 9771 006c 9BB2     		uxth	r3, r3
 9772 006e 6385     		strh	r3, [r4, #42]	@ movhi
4963:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 9773              		.loc 1 4963 0
 9774 0070 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 9775 0074 DBB2     		uxtb	r3, r3
 9776 0076 222B     		cmp	r3, #34
 9777 0078 22D0     		beq	.L798
4969:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 9778              		.loc 1 4969 0
 9779 007a 2268     		ldr	r2, [r4]
 9780 007c 1368     		ldr	r3, [r2]
 9781 007e 43F48043 		orr	r3, r3, #16384
 9782 0082 1360     		str	r3, [r2]
 9783 0084 0CE0     		b	.L781
 9784              	.LVL853:
 9785              	.L797:
4914:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9786              		.loc 1 4914 0
 9787 0086 0368     		ldr	r3, [r0]
 9788 0088 1022     		movs	r2, #16
 9789              	.LVL854:
 9790 008a DA61     		str	r2, [r3, #28]
4917:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9791              		.loc 1 4917 0
 9792 008c 436C     		ldr	r3, [r0, #68]
 9793 008e 43F00403 		orr	r3, r3, #4
 9794 0092 4364     		str	r3, [r0, #68]
4922:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9795              		.loc 1 4922 0
 9796 0094 2021     		movs	r1, #32
 9797              	.LVL855:
 9798 0096 FFF7FEFF 		bl	I2C_Enable_IRQ
 9799              	.LVL856:
4925:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9800              		.loc 1 4925 0
 9801 009a 2046     		mov	r0, r4
 9802 009c FFF7FEFF 		bl	I2C_Flush_TXDR
 9803              	.LVL857:
 9804              	.L781:
5025:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9805              		.loc 1 5025 0
 9806 00a0 0020     		movs	r0, #0
 9807 00a2 84F84000 		strb	r0, [r4, #64]
5028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9808              		.loc 1 5028 0
 9809 00a6 02B0     		add	sp, sp, #8
 9810              		.cfi_remember_state
 9811              		.cfi_def_cfa_offset 8
 9812              		@ sp needed
 9813 00a8 10BD     		pop	{r4, pc}
 9814              	.LVL858:
 9815              	.L784:
 9816              		.cfi_restore_state
4945:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         if (hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 9817              		.loc 1 4945 0
 9818 00aa 638D     		ldrh	r3, [r4, #42]
 9819 00ac 2385     		strh	r3, [r4, #40]	@ movhi
4946:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9820              		.loc 1 4946 0
 9821 00ae E36A     		ldr	r3, [r4, #44]
 9822 00b0 13F5803F 		cmn	r3, #65536
 9823 00b4 01D0     		beq	.L792
4948:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9824              		.loc 1 4948 0
 9825 00b6 E36A     		ldr	r3, [r4, #44]
 9826              	.LVL859:
 9827 00b8 CEE7     		b	.L785
 9828              	.LVL860:
 9829              	.L792:
4952:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9830              		.loc 1 4952 0
 9831 00ba 4FF00073 		mov	r3, #33554432
 9832 00be CBE7     		b	.L785
 9833              	.LVL861:
 9834              	.L798:
4965:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 9835              		.loc 1 4965 0
 9836 00c0 2268     		ldr	r2, [r4]
 9837 00c2 1368     		ldr	r3, [r2]
 9838 00c4 43F40043 		orr	r3, r3, #32768
 9839 00c8 1360     		str	r3, [r2]
 9840 00ca E9E7     		b	.L781
 9841              	.LVL862:
 9842              	.L783:
4975:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 9843              		.loc 1 4975 0
 9844 00cc 2368     		ldr	r3, [r4]
 9845 00ce 5B68     		ldr	r3, [r3, #4]
 9846 00d0 13F0007F 		tst	r3, #33554432
 9847 00d4 03D1     		bne	.L787
4978:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 9848              		.loc 1 4978 0
 9849 00d6 2046     		mov	r0, r4
 9850              	.LVL863:
 9851 00d8 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9852              	.LVL864:
 9853 00dc E0E7     		b	.L781
 9854              	.LVL865:
 9855              	.L787:
4984:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       }
 9856              		.loc 1 4984 0
 9857 00de 4021     		movs	r1, #64
 9858              	.LVL866:
 9859 00e0 2046     		mov	r0, r4
 9860              	.LVL867:
 9861 00e2 FFF7FEFF 		bl	I2C_ITError
 9862              	.LVL868:
 9863 00e6 DBE7     		b	.L781
 9864              	.LVL869:
 9865              	.L782:
4988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9866              		.loc 1 4988 0
 9867 00e8 11F0400F 		tst	r1, #64
 9868 00ec 1CD0     		beq	.L788
4988:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9869              		.loc 1 4988 0 is_stmt 0 discriminator 1
 9870 00ee 12F0400F 		tst	r2, #64
 9871 00f2 19D0     		beq	.L788
4990:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 9872              		.loc 1 4990 0 is_stmt 1
 9873 00f4 638D     		ldrh	r3, [r4, #42]
 9874 00f6 9BB2     		uxth	r3, r3
 9875 00f8 8BB9     		cbnz	r3, .L789
4992:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****       {
 9876              		.loc 1 4992 0
 9877 00fa 2368     		ldr	r3, [r4]
 9878 00fc 5A68     		ldr	r2, [r3, #4]
 9879              	.LVL870:
 9880 00fe 12F0007F 		tst	r2, #33554432
 9881 0102 CDD1     		bne	.L781
4995:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         {
 9882              		.loc 1 4995 0
 9883 0104 E26A     		ldr	r2, [r4, #44]
 9884 0106 12F5803F 		cmn	r2, #65536
 9885 010a 04D1     		bne	.L790
4998:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9886              		.loc 1 4998 0
 9887 010c 5A68     		ldr	r2, [r3, #4]
 9888 010e 42F48042 		orr	r2, r2, #16384
 9889 0112 5A60     		str	r2, [r3, #4]
 9890 0114 C4E7     		b	.L781
 9891              	.L790:
5003:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****         }
 9892              		.loc 1 5003 0
 9893 0116 2046     		mov	r0, r4
 9894              	.LVL871:
 9895 0118 FFF7FEFF 		bl	I2C_ITMasterSeqCplt
 9896              	.LVL872:
 9897 011c C0E7     		b	.L781
 9898              	.LVL873:
 9899              	.L789:
5011:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 9900              		.loc 1 5011 0
 9901 011e 4021     		movs	r1, #64
 9902              	.LVL874:
 9903 0120 2046     		mov	r0, r4
 9904              	.LVL875:
 9905 0122 FFF7FEFF 		bl	I2C_ITError
 9906              	.LVL876:
 9907 0126 BBE7     		b	.L781
 9908              	.LVL877:
 9909              	.L788:
5014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9910              		.loc 1 5014 0
 9911 0128 11F0200F 		tst	r1, #32
 9912 012c B8D0     		beq	.L781
5014:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9913              		.loc 1 5014 0 is_stmt 0 discriminator 1
 9914 012e 12F0200F 		tst	r2, #32
 9915 0132 B5D0     		beq	.L781
5017:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 9916              		.loc 1 5017 0 is_stmt 1
 9917 0134 2046     		mov	r0, r4
 9918              	.LVL878:
 9919 0136 FFF7FEFF 		bl	I2C_ITMasterCplt
 9920              	.LVL879:
 9921 013a B1E7     		b	.L781
 9922              	.LVL880:
 9923              	.L791:
 9924              		.cfi_def_cfa_offset 0
 9925              		.cfi_restore 4
 9926              		.cfi_restore 14
4909:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9927              		.loc 1 4909 0
 9928 013c 0220     		movs	r0, #2
 9929              	.LVL881:
5028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9930              		.loc 1 5028 0
 9931 013e 7047     		bx	lr
 9932              		.cfi_endproc
 9933              	.LFE368:
 9935              		.section	.text.I2C_DMAError,"ax",%progbits
 9936              		.align	1
 9937              		.syntax unified
 9938              		.thumb
 9939              		.thumb_func
 9940              		.fpu fpv4-sp-d16
 9942              	I2C_DMAError:
 9943              	.LFB385:
6177:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 9944              		.loc 1 6177 0
 9945              		.cfi_startproc
 9946              		@ args = 0, pretend = 0, frame = 0
 9947              		@ frame_needed = 0, uses_anonymous_args = 0
 9948              	.LVL882:
 9949 0000 08B5     		push	{r3, lr}
 9950              		.cfi_def_cfa_offset 8
 9951              		.cfi_offset 3, -8
 9952              		.cfi_offset 14, -4
6178:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9953              		.loc 1 6178 0
 9954 0002 806A     		ldr	r0, [r0, #40]
 9955              	.LVL883:
6181:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9956              		.loc 1 6181 0
 9957 0004 0268     		ldr	r2, [r0]
 9958 0006 5368     		ldr	r3, [r2, #4]
 9959 0008 43F40043 		orr	r3, r3, #32768
 9960 000c 5360     		str	r3, [r2, #4]
6184:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 9961              		.loc 1 6184 0
 9962 000e 1021     		movs	r1, #16
 9963 0010 FFF7FEFF 		bl	I2C_ITError
 9964              	.LVL884:
6185:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9965              		.loc 1 6185 0
 9966 0014 08BD     		pop	{r3, pc}
 9967              		.cfi_endproc
 9968              	.LFE385:
 9970              		.section	.text.I2C_DMAMasterTransmitCplt,"ax",%progbits
 9971              		.align	1
 9972              		.syntax unified
 9973              		.thumb
 9974              		.thumb_func
 9975              		.fpu fpv4-sp-d16
 9977              	I2C_DMAMasterTransmitCplt:
 9978              	.LFB381:
6027:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 9979              		.loc 1 6027 0
 9980              		.cfi_startproc
 9981              		@ args = 0, pretend = 0, frame = 0
 9982              		@ frame_needed = 0, uses_anonymous_args = 0
 9983              	.LVL885:
 9984 0000 10B5     		push	{r4, lr}
 9985              		.cfi_def_cfa_offset 8
 9986              		.cfi_offset 4, -8
 9987              		.cfi_offset 14, -4
6028:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9988              		.loc 1 6028 0
 9989 0002 846A     		ldr	r4, [r0, #40]
 9990              	.LVL886:
6031:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 9991              		.loc 1 6031 0
 9992 0004 2268     		ldr	r2, [r4]
 9993 0006 1368     		ldr	r3, [r2]
 9994 0008 23F48043 		bic	r3, r3, #16384
 9995 000c 1360     		str	r3, [r2]
6034:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 9996              		.loc 1 6034 0
 9997 000e 638D     		ldrh	r3, [r4, #42]
 9998 0010 9BB2     		uxth	r3, r3
 9999 0012 ABB1     		cbz	r3, .L808
6043:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10000              		.loc 1 6043 0
 10001 0014 238D     		ldrh	r3, [r4, #40]
 10002 0016 616A     		ldr	r1, [r4, #36]
 10003 0018 1944     		add	r1, r1, r3
 10004 001a 6162     		str	r1, [r4, #36]
6046:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 10005              		.loc 1 6046 0
 10006 001c 638D     		ldrh	r3, [r4, #42]
 10007 001e 9BB2     		uxth	r3, r3
 10008 0020 FF2B     		cmp	r3, #255
 10009 0022 12D9     		bls	.L804
6048:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 10010              		.loc 1 6048 0
 10011 0024 FF23     		movs	r3, #255
 10012 0026 2385     		strh	r3, [r4, #40]	@ movhi
 10013              	.L805:
6056:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 10014              		.loc 1 6056 0
 10015 0028 2268     		ldr	r2, [r4]
 10016 002a 238D     		ldrh	r3, [r4, #40]
 10017 002c 2832     		adds	r2, r2, #40
 10018 002e A06B     		ldr	r0, [r4, #56]
 10019              	.LVL887:
 10020 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10021              	.LVL888:
 10022 0034 60B9     		cbnz	r0, .L809
6064:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 10023              		.loc 1 6064 0
 10024 0036 4021     		movs	r1, #64
 10025 0038 2046     		mov	r0, r4
 10026 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 10027              	.LVL889:
 10028              	.L801:
6067:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10029              		.loc 1 6067 0
 10030 003e 10BD     		pop	{r4, pc}
 10031              	.LVL890:
 10032              	.L808:
6037:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 10033              		.loc 1 6037 0
 10034 0040 2021     		movs	r1, #32
 10035 0042 2046     		mov	r0, r4
 10036              	.LVL891:
 10037 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 10038              	.LVL892:
 10039 0048 F9E7     		b	.L801
 10040              	.LVL893:
 10041              	.L804:
6052:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 10042              		.loc 1 6052 0
 10043 004a 638D     		ldrh	r3, [r4, #42]
 10044 004c 2385     		strh	r3, [r4, #40]	@ movhi
 10045 004e EBE7     		b	.L805
 10046              	.LVL894:
 10047              	.L809:
6059:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 10048              		.loc 1 6059 0
 10049 0050 1021     		movs	r1, #16
 10050 0052 2046     		mov	r0, r4
 10051 0054 FFF7FEFF 		bl	I2C_ITError
 10052              	.LVL895:
 10053 0058 F1E7     		b	.L801
 10054              		.cfi_endproc
 10055              	.LFE381:
 10057              		.section	.text.I2C_DMAMasterReceiveCplt,"ax",%progbits
 10058              		.align	1
 10059              		.syntax unified
 10060              		.thumb
 10061              		.thumb_func
 10062              		.fpu fpv4-sp-d16
 10064              	I2C_DMAMasterReceiveCplt:
 10065              	.LFB383:
6102:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10066              		.loc 1 6102 0
 10067              		.cfi_startproc
 10068              		@ args = 0, pretend = 0, frame = 0
 10069              		@ frame_needed = 0, uses_anonymous_args = 0
 10070              	.LVL896:
 10071 0000 10B5     		push	{r4, lr}
 10072              		.cfi_def_cfa_offset 8
 10073              		.cfi_offset 4, -8
 10074              		.cfi_offset 14, -4
6103:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10075              		.loc 1 6103 0
 10076 0002 846A     		ldr	r4, [r0, #40]
 10077              	.LVL897:
6106:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10078              		.loc 1 6106 0
 10079 0004 2268     		ldr	r2, [r4]
 10080 0006 1368     		ldr	r3, [r2]
 10081 0008 23F40043 		bic	r3, r3, #32768
 10082 000c 1360     		str	r3, [r2]
6109:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 10083              		.loc 1 6109 0
 10084 000e 638D     		ldrh	r3, [r4, #42]
 10085 0010 9BB2     		uxth	r3, r3
 10086 0012 ABB1     		cbz	r3, .L817
6118:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10087              		.loc 1 6118 0
 10088 0014 238D     		ldrh	r3, [r4, #40]
 10089 0016 626A     		ldr	r2, [r4, #36]
 10090 0018 1A44     		add	r2, r2, r3
 10091 001a 6262     		str	r2, [r4, #36]
6121:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 10092              		.loc 1 6121 0
 10093 001c 638D     		ldrh	r3, [r4, #42]
 10094 001e 9BB2     		uxth	r3, r3
 10095 0020 FF2B     		cmp	r3, #255
 10096 0022 12D9     		bls	.L813
6123:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 10097              		.loc 1 6123 0
 10098 0024 FF23     		movs	r3, #255
 10099 0026 2385     		strh	r3, [r4, #40]	@ movhi
 10100              	.L814:
6131:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     {
 10101              		.loc 1 6131 0
 10102 0028 2168     		ldr	r1, [r4]
 10103 002a 238D     		ldrh	r3, [r4, #40]
 10104 002c 2431     		adds	r1, r1, #36
 10105 002e E06B     		ldr	r0, [r4, #60]
 10106              	.LVL898:
 10107 0030 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10108              	.LVL899:
 10109 0034 60B9     		cbnz	r0, .L818
6139:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 10110              		.loc 1 6139 0
 10111 0036 4021     		movs	r1, #64
 10112 0038 2046     		mov	r0, r4
 10113 003a FFF7FEFF 		bl	I2C_Enable_IRQ
 10114              	.LVL900:
 10115              	.L810:
6142:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10116              		.loc 1 6142 0
 10117 003e 10BD     		pop	{r4, pc}
 10118              	.LVL901:
 10119              	.L817:
6112:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 10120              		.loc 1 6112 0
 10121 0040 2021     		movs	r1, #32
 10122 0042 2046     		mov	r0, r4
 10123              	.LVL902:
 10124 0044 FFF7FEFF 		bl	I2C_Enable_IRQ
 10125              	.LVL903:
 10126 0048 F9E7     		b	.L810
 10127              	.LVL904:
 10128              	.L813:
6127:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 10129              		.loc 1 6127 0
 10130 004a 638D     		ldrh	r3, [r4, #42]
 10131 004c 2385     		strh	r3, [r4, #40]	@ movhi
 10132 004e EBE7     		b	.L814
 10133              	.LVL905:
 10134              	.L818:
6134:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****     }
 10135              		.loc 1 6134 0
 10136 0050 1021     		movs	r1, #16
 10137 0052 2046     		mov	r0, r4
 10138 0054 FFF7FEFF 		bl	I2C_ITError
 10139              	.LVL906:
 10140 0058 F1E7     		b	.L810
 10141              		.cfi_endproc
 10142              	.LFE383:
 10144              		.section	.text.HAL_I2C_ER_IRQHandler,"ax",%progbits
 10145              		.align	1
 10146              		.global	HAL_I2C_ER_IRQHandler
 10147              		.syntax unified
 10148              		.thumb
 10149              		.thumb_func
 10150              		.fpu fpv4-sp-d16
 10152              	HAL_I2C_ER_IRQHandler:
 10153              	.LFB352:
4353:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 10154              		.loc 1 4353 0
 10155              		.cfi_startproc
 10156              		@ args = 0, pretend = 0, frame = 0
 10157              		@ frame_needed = 0, uses_anonymous_args = 0
 10158              	.LVL907:
 10159 0000 10B5     		push	{r4, lr}
 10160              		.cfi_def_cfa_offset 8
 10161              		.cfi_offset 4, -8
 10162              		.cfi_offset 14, -4
4354:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 10163              		.loc 1 4354 0
 10164 0002 0268     		ldr	r2, [r0]
 10165 0004 9369     		ldr	r3, [r2, #24]
 10166              	.LVL908:
4355:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   uint32_t tmperror;
 10167              		.loc 1 4355 0
 10168 0006 1168     		ldr	r1, [r2]
 10169              	.LVL909:
4359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 10170              		.loc 1 4359 0
 10171 0008 13F4807F 		tst	r3, #256
 10172 000c 09D0     		beq	.L820
4359:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 10173              		.loc 1 4359 0 is_stmt 0 discriminator 1
 10174 000e 11F0800F 		tst	r1, #128
 10175 0012 06D0     		beq	.L820
4361:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10176              		.loc 1 4361 0 is_stmt 1
 10177 0014 446C     		ldr	r4, [r0, #68]
 10178 0016 44F00104 		orr	r4, r4, #1
 10179 001a 4464     		str	r4, [r0, #68]
4364:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 10180              		.loc 1 4364 0
 10181 001c 4FF48074 		mov	r4, #256
 10182 0020 D461     		str	r4, [r2, #28]
 10183              	.L820:
4368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 10184              		.loc 1 4368 0
 10185 0022 13F4806F 		tst	r3, #1024
 10186 0026 0AD0     		beq	.L821
4368:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 10187              		.loc 1 4368 0 is_stmt 0 discriminator 1
 10188 0028 11F0800F 		tst	r1, #128
 10189 002c 07D0     		beq	.L821
4370:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10190              		.loc 1 4370 0 is_stmt 1
 10191 002e 426C     		ldr	r2, [r0, #68]
 10192 0030 42F00802 		orr	r2, r2, #8
 10193 0034 4264     		str	r2, [r0, #68]
4373:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 10194              		.loc 1 4373 0
 10195 0036 0268     		ldr	r2, [r0]
 10196 0038 4FF48064 		mov	r4, #1024
 10197 003c D461     		str	r4, [r2, #28]
 10198              	.L821:
4377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 10199              		.loc 1 4377 0
 10200 003e 13F4007F 		tst	r3, #512
 10201 0042 0AD0     		beq	.L822
4377:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 10202              		.loc 1 4377 0 is_stmt 0 discriminator 1
 10203 0044 11F0800F 		tst	r1, #128
 10204 0048 07D0     		beq	.L822
4379:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10205              		.loc 1 4379 0 is_stmt 1
 10206 004a 436C     		ldr	r3, [r0, #68]
 10207              	.LVL910:
 10208 004c 43F00203 		orr	r3, r3, #2
 10209 0050 4364     		str	r3, [r0, #68]
4382:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 10210              		.loc 1 4382 0
 10211 0052 0368     		ldr	r3, [r0]
 10212 0054 4FF40072 		mov	r2, #512
 10213 0058 DA61     		str	r2, [r3, #28]
 10214              	.L822:
4386:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10215              		.loc 1 4386 0
 10216 005a 416C     		ldr	r1, [r0, #68]
 10217              	.LVL911:
4389:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 10218              		.loc 1 4389 0
 10219 005c 11F00B0F 		tst	r1, #11
 10220 0060 00D1     		bne	.L825
 10221              	.LVL912:
 10222              	.L819:
4393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10223              		.loc 1 4393 0
 10224 0062 10BD     		pop	{r4, pc}
 10225              	.LVL913:
 10226              	.L825:
4391:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 10227              		.loc 1 4391 0
 10228 0064 FFF7FEFF 		bl	I2C_ITError
 10229              	.LVL914:
4393:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10230              		.loc 1 4393 0
 10231 0068 FBE7     		b	.L819
 10232              		.cfi_endproc
 10233              	.LFE352:
 10235              		.section	.text.I2C_DMAAbort,"ax",%progbits
 10236              		.align	1
 10237              		.syntax unified
 10238              		.thumb
 10239              		.thumb_func
 10240              		.fpu fpv4-sp-d16
 10242              	I2C_DMAAbort:
 10243              	.LFB386:
6194:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 10244              		.loc 1 6194 0
 10245              		.cfi_startproc
 10246              		@ args = 0, pretend = 0, frame = 0
 10247              		@ frame_needed = 0, uses_anonymous_args = 0
 10248              	.LVL915:
 10249 0000 08B5     		push	{r3, lr}
 10250              		.cfi_def_cfa_offset 8
 10251              		.cfi_offset 3, -8
 10252              		.cfi_offset 14, -4
6195:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10253              		.loc 1 6195 0
 10254 0002 806A     		ldr	r0, [r0, #40]
 10255              	.LVL916:
6198:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 10256              		.loc 1 6198 0
 10257 0004 836B     		ldr	r3, [r0, #56]
 10258 0006 0BB1     		cbz	r3, .L827
6200:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 10259              		.loc 1 6200 0
 10260 0008 0022     		movs	r2, #0
 10261 000a 9A63     		str	r2, [r3, #56]
 10262              	.L827:
6202:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   {
 10263              		.loc 1 6202 0
 10264 000c C36B     		ldr	r3, [r0, #60]
 10265 000e 0BB1     		cbz	r3, .L828
6204:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   }
 10266              		.loc 1 6204 0
 10267 0010 0022     		movs	r2, #0
 10268 0012 9A63     		str	r2, [r3, #56]
 10269              	.L828:
6207:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 10270              		.loc 1 6207 0
 10271 0014 FFF7FEFF 		bl	I2C_TreatErrorCallback
 10272              	.LVL917:
6208:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10273              		.loc 1 6208 0
 10274 0018 08BD     		pop	{r3, pc}
 10275              		.cfi_endproc
 10276              	.LFE386:
 10278              		.section	.text.HAL_I2C_GetState,"ax",%progbits
 10279              		.align	1
 10280              		.global	HAL_I2C_GetState
 10281              		.syntax unified
 10282              		.thumb
 10283              		.thumb_func
 10284              		.fpu fpv4-sp-d16
 10286              	HAL_I2C_GetState:
 10287              	.LFB363:
4584:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   /* Return I2C handle state */
 10288              		.loc 1 4584 0
 10289              		.cfi_startproc
 10290              		@ args = 0, pretend = 0, frame = 0
 10291              		@ frame_needed = 0, uses_anonymous_args = 0
 10292              		@ link register save eliminated.
 10293              	.LVL918:
4586:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 10294              		.loc 1 4586 0
 10295 0000 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 10296              	.LVL919:
4587:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10297              		.loc 1 4587 0
 10298 0004 7047     		bx	lr
 10299              		.cfi_endproc
 10300              	.LFE363:
 10302              		.section	.text.HAL_I2C_GetMode,"ax",%progbits
 10303              		.align	1
 10304              		.global	HAL_I2C_GetMode
 10305              		.syntax unified
 10306              		.thumb
 10307              		.thumb_func
 10308              		.fpu fpv4-sp-d16
 10310              	HAL_I2C_GetMode:
 10311              	.LFB364:
4596:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return hi2c->Mode;
 10312              		.loc 1 4596 0
 10313              		.cfi_startproc
 10314              		@ args = 0, pretend = 0, frame = 0
 10315              		@ frame_needed = 0, uses_anonymous_args = 0
 10316              		@ link register save eliminated.
 10317              	.LVL920:
4597:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 10318              		.loc 1 4597 0
 10319 0000 90F84200 		ldrb	r0, [r0, #66]	@ zero_extendqisi2
 10320              	.LVL921:
4598:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10321              		.loc 1 4598 0
 10322 0004 7047     		bx	lr
 10323              		.cfi_endproc
 10324              	.LFE364:
 10326              		.section	.text.HAL_I2C_GetError,"ax",%progbits
 10327              		.align	1
 10328              		.global	HAL_I2C_GetError
 10329              		.syntax unified
 10330              		.thumb
 10331              		.thumb_func
 10332              		.fpu fpv4-sp-d16
 10334              	HAL_I2C_GetError:
 10335              	.LFB365:
4607:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c ****   return hi2c->ErrorCode;
 10336              		.loc 1 4607 0
 10337              		.cfi_startproc
 10338              		@ args = 0, pretend = 0, frame = 0
 10339              		@ frame_needed = 0, uses_anonymous_args = 0
 10340              		@ link register save eliminated.
 10341              	.LVL922:
4608:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** }
 10342              		.loc 1 4608 0
 10343 0000 406C     		ldr	r0, [r0, #68]
 10344              	.LVL923:
4609:../system/src/stm32l4-hal-driver/stm32l4xx_hal_i2c.c **** 
 10345              		.loc 1 4609 0
 10346 0002 7047     		bx	lr
 10347              		.cfi_endproc
 10348              	.LFE365:
 10350              		.text
 10351              	.Letext0:
 10352              		.file 2 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 10353              		.file 3 "../system/include/cmsis/stm32l4xx/core_cm4.h"
 10354              		.file 4 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 10355              		.file 5 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 10356              		.file 6 "../system/include/cmsis/stm32l4xx/device/stm32l4xx.h"
 10357              		.file 7 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_def.h"
 10358              		.file 8 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_dma.h"
 10359              		.file 9 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_flash.h"
 10360              		.file 10 "../system/include/stm32l4-hal-driver/stm32l4xx_hal_i2c.h"
 10361              		.file 11 "../system/include/stm32l4-hal-driver/stm32l4xx_hal.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_i2c.c
     /tmp/cciQfHr8.s:18     .text.I2C_Flush_TXDR:0000000000000000 $t
     /tmp/cciQfHr8.s:24     .text.I2C_Flush_TXDR:0000000000000000 I2C_Flush_TXDR
     /tmp/cciQfHr8.s:58     .text.I2C_TransferConfig:0000000000000000 $t
     /tmp/cciQfHr8.s:64     .text.I2C_TransferConfig:0000000000000000 I2C_TransferConfig
     /tmp/cciQfHr8.s:108    .text.I2C_Enable_IRQ:0000000000000000 $t
     /tmp/cciQfHr8.s:114    .text.I2C_Enable_IRQ:0000000000000000 I2C_Enable_IRQ
     /tmp/cciQfHr8.s:218    .text.I2C_Enable_IRQ:000000000000006c $d
     /tmp/cciQfHr8.s:9694   .text.I2C_Master_ISR_DMA:0000000000000000 I2C_Master_ISR_DMA
     /tmp/cciQfHr8.s:9456   .text.I2C_Slave_ISR_DMA:0000000000000000 I2C_Slave_ISR_DMA
     /tmp/cciQfHr8.s:224    .text.I2C_Disable_IRQ:0000000000000000 $t
     /tmp/cciQfHr8.s:230    .text.I2C_Disable_IRQ:0000000000000000 I2C_Disable_IRQ
     /tmp/cciQfHr8.s:387    .text.I2C_ConvertOtherXferOptions:0000000000000000 $t
     /tmp/cciQfHr8.s:393    .text.I2C_ConvertOtherXferOptions:0000000000000000 I2C_ConvertOtherXferOptions
     /tmp/cciQfHr8.s:427    .text.I2C_IsAcknowledgeFailed:0000000000000000 $t
     /tmp/cciQfHr8.s:433    .text.I2C_IsAcknowledgeFailed:0000000000000000 I2C_IsAcknowledgeFailed
     /tmp/cciQfHr8.s:537    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 $t
     /tmp/cciQfHr8.s:543    .text.I2C_WaitOnTXISFlagUntilTimeout:0000000000000000 I2C_WaitOnTXISFlagUntilTimeout
     /tmp/cciQfHr8.s:616    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cciQfHr8.s:622    .text.I2C_WaitOnFlagUntilTimeout:0000000000000000 I2C_WaitOnFlagUntilTimeout
     /tmp/cciQfHr8.s:691    .text.I2C_RequestMemoryWrite:0000000000000000 $t
     /tmp/cciQfHr8.s:697    .text.I2C_RequestMemoryWrite:0000000000000000 I2C_RequestMemoryWrite
     /tmp/cciQfHr8.s:790    .text.I2C_RequestMemoryWrite:000000000000006c $d
     /tmp/cciQfHr8.s:795    .text.I2C_RequestMemoryRead:0000000000000000 $t
     /tmp/cciQfHr8.s:801    .text.I2C_RequestMemoryRead:0000000000000000 I2C_RequestMemoryRead
     /tmp/cciQfHr8.s:894    .text.I2C_RequestMemoryRead:000000000000006c $d
     /tmp/cciQfHr8.s:899    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 $t
     /tmp/cciQfHr8.s:905    .text.I2C_WaitOnSTOPFlagUntilTimeout:0000000000000000 I2C_WaitOnSTOPFlagUntilTimeout
     /tmp/cciQfHr8.s:975    .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 $t
     /tmp/cciQfHr8.s:981    .text.I2C_WaitOnRXNEFlagUntilTimeout:0000000000000000 I2C_WaitOnRXNEFlagUntilTimeout
     /tmp/cciQfHr8.s:1090   .text.HAL_I2C_MspInit:0000000000000000 $t
     /tmp/cciQfHr8.s:1097   .text.HAL_I2C_MspInit:0000000000000000 HAL_I2C_MspInit
     /tmp/cciQfHr8.s:1111   .text.HAL_I2C_Init:0000000000000000 $t
     /tmp/cciQfHr8.s:1118   .text.HAL_I2C_Init:0000000000000000 HAL_I2C_Init
     /tmp/cciQfHr8.s:1250   .text.HAL_I2C_MspDeInit:0000000000000000 $t
     /tmp/cciQfHr8.s:1257   .text.HAL_I2C_MspDeInit:0000000000000000 HAL_I2C_MspDeInit
     /tmp/cciQfHr8.s:1271   .text.HAL_I2C_DeInit:0000000000000000 $t
     /tmp/cciQfHr8.s:1278   .text.HAL_I2C_DeInit:0000000000000000 HAL_I2C_DeInit
     /tmp/cciQfHr8.s:1331   .text.HAL_I2C_Master_Transmit:0000000000000000 $t
     /tmp/cciQfHr8.s:1338   .text.HAL_I2C_Master_Transmit:0000000000000000 HAL_I2C_Master_Transmit
     /tmp/cciQfHr8.s:1587   .text.HAL_I2C_Master_Transmit:0000000000000178 $d
     /tmp/cciQfHr8.s:1592   .text.HAL_I2C_Master_Receive:0000000000000000 $t
     /tmp/cciQfHr8.s:1599   .text.HAL_I2C_Master_Receive:0000000000000000 HAL_I2C_Master_Receive
     /tmp/cciQfHr8.s:1848   .text.HAL_I2C_Master_Receive:0000000000000178 $d
     /tmp/cciQfHr8.s:1853   .text.HAL_I2C_Slave_Transmit:0000000000000000 $t
     /tmp/cciQfHr8.s:1860   .text.HAL_I2C_Slave_Transmit:0000000000000000 HAL_I2C_Slave_Transmit
     /tmp/cciQfHr8.s:2131   .text.HAL_I2C_Slave_Receive:0000000000000000 $t
     /tmp/cciQfHr8.s:2138   .text.HAL_I2C_Slave_Receive:0000000000000000 HAL_I2C_Slave_Receive
     /tmp/cciQfHr8.s:2388   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:2395   .text.HAL_I2C_Master_Transmit_IT:0000000000000000 HAL_I2C_Master_Transmit_IT
     /tmp/cciQfHr8.s:2520   .text.HAL_I2C_Master_Transmit_IT:000000000000008c $d
     /tmp/cciQfHr8.s:9164   .text.I2C_Master_ISR_IT:0000000000000000 I2C_Master_ISR_IT
     /tmp/cciQfHr8.s:2527   .text.HAL_I2C_Master_Receive_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:2534   .text.HAL_I2C_Master_Receive_IT:0000000000000000 HAL_I2C_Master_Receive_IT
     /tmp/cciQfHr8.s:2659   .text.HAL_I2C_Master_Receive_IT:000000000000008c $d
     /tmp/cciQfHr8.s:2666   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:2673   .text.HAL_I2C_Slave_Transmit_IT:0000000000000000 HAL_I2C_Slave_Transmit_IT
     /tmp/cciQfHr8.s:2752   .text.HAL_I2C_Slave_Transmit_IT:000000000000005c $d
     /tmp/cciQfHr8.s:8707   .text.I2C_Slave_ISR_IT:0000000000000000 I2C_Slave_ISR_IT
     /tmp/cciQfHr8.s:2758   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:2765   .text.HAL_I2C_Slave_Receive_IT:0000000000000000 HAL_I2C_Slave_Receive_IT
     /tmp/cciQfHr8.s:2844   .text.HAL_I2C_Slave_Receive_IT:000000000000005c $d
     /tmp/cciQfHr8.s:2850   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:2857   .text.HAL_I2C_Master_Transmit_DMA:0000000000000000 HAL_I2C_Master_Transmit_DMA
     /tmp/cciQfHr8.s:3087   .text.HAL_I2C_Master_Transmit_DMA:0000000000000138 $d
     /tmp/cciQfHr8.s:9977   .text.I2C_DMAMasterTransmitCplt:0000000000000000 I2C_DMAMasterTransmitCplt
     /tmp/cciQfHr8.s:9942   .text.I2C_DMAError:0000000000000000 I2C_DMAError
     /tmp/cciQfHr8.s:3097   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:3104   .text.HAL_I2C_Master_Receive_DMA:0000000000000000 HAL_I2C_Master_Receive_DMA
     /tmp/cciQfHr8.s:3330   .text.HAL_I2C_Master_Receive_DMA:0000000000000138 $d
     /tmp/cciQfHr8.s:10064  .text.I2C_DMAMasterReceiveCplt:0000000000000000 I2C_DMAMasterReceiveCplt
     /tmp/cciQfHr8.s:3340   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:3347   .text.HAL_I2C_Slave_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Transmit_DMA
     /tmp/cciQfHr8.s:3510   .text.HAL_I2C_Slave_Transmit_DMA:00000000000000e0 $d
     /tmp/cciQfHr8.s:7767   .text.I2C_DMASlaveTransmitCplt:0000000000000000 I2C_DMASlaveTransmitCplt
     /tmp/cciQfHr8.s:3518   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:3525   .text.HAL_I2C_Slave_Receive_DMA:0000000000000000 HAL_I2C_Slave_Receive_DMA
     /tmp/cciQfHr8.s:3690   .text.HAL_I2C_Slave_Receive_DMA:00000000000000e0 $d
     /tmp/cciQfHr8.s:7812   .text.I2C_DMASlaveReceiveCplt:0000000000000000 I2C_DMASlaveReceiveCplt
     /tmp/cciQfHr8.s:3698   .text.HAL_I2C_Mem_Write:0000000000000000 $t
     /tmp/cciQfHr8.s:3705   .text.HAL_I2C_Mem_Write:0000000000000000 HAL_I2C_Mem_Write
     /tmp/cciQfHr8.s:3990   .text.HAL_I2C_Mem_Read:0000000000000000 $t
     /tmp/cciQfHr8.s:3997   .text.HAL_I2C_Mem_Read:0000000000000000 HAL_I2C_Mem_Read
     /tmp/cciQfHr8.s:4283   .text.HAL_I2C_Mem_Read:00000000000001a8 $d
     /tmp/cciQfHr8.s:4288   .text.HAL_I2C_Mem_Write_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:4295   .text.HAL_I2C_Mem_Write_IT:0000000000000000 HAL_I2C_Mem_Write_IT
     /tmp/cciQfHr8.s:4461   .text.HAL_I2C_Mem_Write_IT:00000000000000dc $d
     /tmp/cciQfHr8.s:4467   .text.HAL_I2C_Mem_Read_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:4474   .text.HAL_I2C_Mem_Read_IT:0000000000000000 HAL_I2C_Mem_Read_IT
     /tmp/cciQfHr8.s:4641   .text.HAL_I2C_Mem_Read_IT:00000000000000d8 $d
     /tmp/cciQfHr8.s:4648   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:4655   .text.HAL_I2C_Mem_Write_DMA:0000000000000000 HAL_I2C_Mem_Write_DMA
     /tmp/cciQfHr8.s:4895   .text.HAL_I2C_Mem_Write_DMA:0000000000000158 $d
     /tmp/cciQfHr8.s:4903   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:4910   .text.HAL_I2C_Mem_Read_DMA:0000000000000000 HAL_I2C_Mem_Read_DMA
     /tmp/cciQfHr8.s:5151   .text.HAL_I2C_Mem_Read_DMA:0000000000000158 $d
     /tmp/cciQfHr8.s:5160   .text.HAL_I2C_IsDeviceReady:0000000000000000 $t
     /tmp/cciQfHr8.s:5167   .text.HAL_I2C_IsDeviceReady:0000000000000000 HAL_I2C_IsDeviceReady
     /tmp/cciQfHr8.s:5435   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:5442   .text.HAL_I2C_Master_Seq_Transmit_IT:0000000000000000 HAL_I2C_Master_Seq_Transmit_IT
     /tmp/cciQfHr8.s:5595   .text.HAL_I2C_Master_Seq_Transmit_IT:00000000000000ac $d
     /tmp/cciQfHr8.s:5601   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:5608   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Master_Seq_Transmit_DMA
     /tmp/cciQfHr8.s:5865   .text.HAL_I2C_Master_Seq_Transmit_DMA:0000000000000158 $d
     /tmp/cciQfHr8.s:5874   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:5881   .text.HAL_I2C_Master_Seq_Receive_IT:0000000000000000 HAL_I2C_Master_Seq_Receive_IT
     /tmp/cciQfHr8.s:6034   .text.HAL_I2C_Master_Seq_Receive_IT:00000000000000ac $d
     /tmp/cciQfHr8.s:6040   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:6047   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000000 HAL_I2C_Master_Seq_Receive_DMA
     /tmp/cciQfHr8.s:6304   .text.HAL_I2C_Master_Seq_Receive_DMA:0000000000000158 $d
     /tmp/cciQfHr8.s:6313   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:6320   .text.HAL_I2C_Slave_Seq_Transmit_IT:0000000000000000 HAL_I2C_Slave_Seq_Transmit_IT
     /tmp/cciQfHr8.s:6474   .text.HAL_I2C_Slave_Seq_Transmit_IT:00000000000000cc $d
     /tmp/cciQfHr8.s:10242  .text.I2C_DMAAbort:0000000000000000 I2C_DMAAbort
     /tmp/cciQfHr8.s:6480   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:6487   .text.HAL_I2C_Slave_Seq_Transmit_DMA:0000000000000000 HAL_I2C_Slave_Seq_Transmit_DMA
     /tmp/cciQfHr8.s:6759   .text.HAL_I2C_Slave_Seq_Transmit_DMA:000000000000018c $d
     /tmp/cciQfHr8.s:6767   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:6774   .text.HAL_I2C_Slave_Seq_Receive_IT:0000000000000000 HAL_I2C_Slave_Seq_Receive_IT
     /tmp/cciQfHr8.s:6928   .text.HAL_I2C_Slave_Seq_Receive_IT:00000000000000cc $d
     /tmp/cciQfHr8.s:6934   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:6941   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000000 HAL_I2C_Slave_Seq_Receive_DMA
     /tmp/cciQfHr8.s:7212   .text.HAL_I2C_Slave_Seq_Receive_DMA:0000000000000188 $d
     /tmp/cciQfHr8.s:7220   .text.HAL_I2C_EnableListen_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:7227   .text.HAL_I2C_EnableListen_IT:0000000000000000 HAL_I2C_EnableListen_IT
     /tmp/cciQfHr8.s:7267   .text.HAL_I2C_EnableListen_IT:0000000000000028 $d
     /tmp/cciQfHr8.s:7272   .text.HAL_I2C_DisableListen_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:7279   .text.HAL_I2C_DisableListen_IT:0000000000000000 HAL_I2C_DisableListen_IT
     /tmp/cciQfHr8.s:7332   .text.HAL_I2C_Master_Abort_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:7339   .text.HAL_I2C_Master_Abort_IT:0000000000000000 HAL_I2C_Master_Abort_IT
     /tmp/cciQfHr8.s:7451   .text.HAL_I2C_Master_Abort_IT:0000000000000080 $d
     /tmp/cciQfHr8.s:7456   .text.HAL_I2C_EV_IRQHandler:0000000000000000 $t
     /tmp/cciQfHr8.s:7463   .text.HAL_I2C_EV_IRQHandler:0000000000000000 HAL_I2C_EV_IRQHandler
     /tmp/cciQfHr8.s:7494   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 $t
     /tmp/cciQfHr8.s:7501   .text.HAL_I2C_MasterTxCpltCallback:0000000000000000 HAL_I2C_MasterTxCpltCallback
     /tmp/cciQfHr8.s:7515   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/cciQfHr8.s:7522   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
     /tmp/cciQfHr8.s:7536   .text.I2C_ITMasterSeqCplt:0000000000000000 $t
     /tmp/cciQfHr8.s:7542   .text.I2C_ITMasterSeqCplt:0000000000000000 I2C_ITMasterSeqCplt
     /tmp/cciQfHr8.s:7612   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 $t
     /tmp/cciQfHr8.s:7619   .text.HAL_I2C_SlaveTxCpltCallback:0000000000000000 HAL_I2C_SlaveTxCpltCallback
     /tmp/cciQfHr8.s:7633   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 $t
     /tmp/cciQfHr8.s:7640   .text.HAL_I2C_SlaveRxCpltCallback:0000000000000000 HAL_I2C_SlaveRxCpltCallback
     /tmp/cciQfHr8.s:7654   .text.I2C_ITSlaveSeqCplt:0000000000000000 $t
     /tmp/cciQfHr8.s:7660   .text.I2C_ITSlaveSeqCplt:0000000000000000 I2C_ITSlaveSeqCplt
     /tmp/cciQfHr8.s:7761   .text.I2C_DMASlaveTransmitCplt:0000000000000000 $t
     /tmp/cciQfHr8.s:7806   .text.I2C_DMASlaveReceiveCplt:0000000000000000 $t
     /tmp/cciQfHr8.s:7853   .text.HAL_I2C_AddrCallback:0000000000000000 $t
     /tmp/cciQfHr8.s:7860   .text.HAL_I2C_AddrCallback:0000000000000000 HAL_I2C_AddrCallback
     /tmp/cciQfHr8.s:7874   .text.I2C_ITAddrCplt:0000000000000000 $t
     /tmp/cciQfHr8.s:7880   .text.I2C_ITAddrCplt:0000000000000000 I2C_ITAddrCplt
     /tmp/cciQfHr8.s:8002   .text.HAL_I2C_ListenCpltCallback:0000000000000000 $t
     /tmp/cciQfHr8.s:8009   .text.HAL_I2C_ListenCpltCallback:0000000000000000 HAL_I2C_ListenCpltCallback
     /tmp/cciQfHr8.s:8023   .text.I2C_ITListenCplt:0000000000000000 $t
     /tmp/cciQfHr8.s:8029   .text.I2C_ITListenCplt:0000000000000000 I2C_ITListenCplt
     /tmp/cciQfHr8.s:8106   .text.I2C_ITListenCplt:0000000000000064 $d
     /tmp/cciQfHr8.s:8111   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 $t
     /tmp/cciQfHr8.s:8118   .text.HAL_I2C_MemTxCpltCallback:0000000000000000 HAL_I2C_MemTxCpltCallback
     /tmp/cciQfHr8.s:8132   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 $t
     /tmp/cciQfHr8.s:8139   .text.HAL_I2C_MemRxCpltCallback:0000000000000000 HAL_I2C_MemRxCpltCallback
     /tmp/cciQfHr8.s:8153   .text.HAL_I2C_ErrorCallback:0000000000000000 $t
     /tmp/cciQfHr8.s:8160   .text.HAL_I2C_ErrorCallback:0000000000000000 HAL_I2C_ErrorCallback
     /tmp/cciQfHr8.s:8174   .text.HAL_I2C_AbortCpltCallback:0000000000000000 $t
     /tmp/cciQfHr8.s:8181   .text.HAL_I2C_AbortCpltCallback:0000000000000000 HAL_I2C_AbortCpltCallback
     /tmp/cciQfHr8.s:8195   .text.I2C_TreatErrorCallback:0000000000000000 $t
     /tmp/cciQfHr8.s:8201   .text.I2C_TreatErrorCallback:0000000000000000 I2C_TreatErrorCallback
     /tmp/cciQfHr8.s:8246   .text.I2C_ITError:0000000000000000 $t
     /tmp/cciQfHr8.s:8252   .text.I2C_ITError:0000000000000000 I2C_ITError
     /tmp/cciQfHr8.s:8441   .text.I2C_ITError:00000000000000fc $d
     /tmp/cciQfHr8.s:8448   .text.I2C_ITSlaveCplt:0000000000000000 $t
     /tmp/cciQfHr8.s:8454   .text.I2C_ITSlaveCplt:0000000000000000 I2C_ITSlaveCplt
     /tmp/cciQfHr8.s:8696   .text.I2C_ITSlaveCplt:0000000000000160 $d
     /tmp/cciQfHr8.s:8701   .text.I2C_Slave_ISR_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:8941   .text.I2C_ITMasterCplt:0000000000000000 $t
     /tmp/cciQfHr8.s:8947   .text.I2C_ITMasterCplt:0000000000000000 I2C_ITMasterCplt
     /tmp/cciQfHr8.s:9158   .text.I2C_Master_ISR_IT:0000000000000000 $t
     /tmp/cciQfHr8.s:9450   .text.I2C_Slave_ISR_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:9688   .text.I2C_Master_ISR_DMA:0000000000000000 $t
     /tmp/cciQfHr8.s:9936   .text.I2C_DMAError:0000000000000000 $t
     /tmp/cciQfHr8.s:9971   .text.I2C_DMAMasterTransmitCplt:0000000000000000 $t
     /tmp/cciQfHr8.s:10058  .text.I2C_DMAMasterReceiveCplt:0000000000000000 $t
     /tmp/cciQfHr8.s:10145  .text.HAL_I2C_ER_IRQHandler:0000000000000000 $t
     /tmp/cciQfHr8.s:10152  .text.HAL_I2C_ER_IRQHandler:0000000000000000 HAL_I2C_ER_IRQHandler
     /tmp/cciQfHr8.s:10236  .text.I2C_DMAAbort:0000000000000000 $t
     /tmp/cciQfHr8.s:10279  .text.HAL_I2C_GetState:0000000000000000 $t
     /tmp/cciQfHr8.s:10286  .text.HAL_I2C_GetState:0000000000000000 HAL_I2C_GetState
     /tmp/cciQfHr8.s:10303  .text.HAL_I2C_GetMode:0000000000000000 $t
     /tmp/cciQfHr8.s:10310  .text.HAL_I2C_GetMode:0000000000000000 HAL_I2C_GetMode
     /tmp/cciQfHr8.s:10327  .text.HAL_I2C_GetError:0000000000000000 $t
     /tmp/cciQfHr8.s:10334  .text.HAL_I2C_GetError:0000000000000000 HAL_I2C_GetError
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.stm32l4xx_hal_conf.h.24.9ebdf529a64add7ef5197540a829be93
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.b6144e50d34fc998dd4c2cfb6387cf91
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.c14bec61d389910444dd6f90923a87b3
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4.stm32l4xx_hal_def.h.58.ba9880fce6c06e05c42ff3652190ba19
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc.h.158.28a9a8aed9528254d5d00c542977dfd6
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc_ex.h.22.da7044b74af98b061fec57b6c981623c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio.h.22.cdd02b3dd2d28ab2a58b80abaa62239c
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio_ex.h.22.e3066224621c54896e68c044cff2946f
                           .group:0000000000000000 wm4.stm32l4xx_hal_dma.h.22.13f7e03251508cf372ae373347b36e9b
                           .group:0000000000000000 wm4.stm32l4xx_hal_cortex.h.22.cb70b059ea6d04d060ca379a6d57d1fd
                           .group:0000000000000000 wm4.stm32l4xx_ll_adc.h.22.1a01db9155ec232fb5933b76785afed0
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc.h.321.ee3f28f76fc70066e4cbbd758e576892
                           .group:0000000000000000 wm4.stm32l4xx_hal_adc_ex.h.22.fb5e6d418a426c9b079c9adc15fee3b1
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc.h.22.e28f2dff7c14319a60cfaa8412b63a14
                           .group:0000000000000000 wm4.stm32l4xx_hal_crc_ex.h.22.58aa3be0563eedff5893c4b663184cf2
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac.h.22.74749bf4f9405a5fbfaaf1cc4c06eba3
                           .group:0000000000000000 wm4.stm32l4xx_hal_dac_ex.h.22.4e3cedba5893653c1d8ca689fa739e33
                           .group:0000000000000000 wm4.stm32l4xx_hal_exti.h.22.d0c18acb1f51146e775f234290c1ac27
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.22.80f6973ea14060a68f7ca21c1dd39289
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.847.7bdb45d9d57728034960e0aaf38df4fb
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.22.5cbc76724b1dba5416e985e397b92828
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c_ex.h.22.4c81bf9806badb3d50f1da26b08d305a
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.715.a3aff164d469153c75cf623f9ff49d7a
                           .group:0000000000000000 wm4.stm32l4xx_hal_iwdg.h.22.7e954cf06602114b3daf58f5ffbb9e50
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr.h.22.0049bff0a26f90119451fdfe5f426c51
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr_ex.h.22.3d1049b6827a186d471882b21e35998d
                           .group:0000000000000000 wm4.stm32l4xx_hal_rng.h.22.3da3130b715b6ad6f9d8d49653bdfddb
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.22.21d64301309237f9b9255a8c80902f7c
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc_ex.h.22.6c248c3dbae3d1f0fefc4b9faaa2cd0b
                           .group:0000000000000000 wm4.stm32l4xx_hal_rtc.h.977.b3b3c98b50a30362b61b120ec4fce236
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim.h.22.6c7398a1c55179e1de4bfd7d5a7564ac
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim_ex.h.22.1a7b532f5010a085c12eee7e9c7b0c21
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart.h.22.5f632bd044c516c02fe0b49488f063f8
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart_ex.h.22.de11c23890d64b2968c97dd6f5dae21a
                           .group:0000000000000000 wm4.stm32l4xx_hal.h.76.993cab68f7f350dd05a21a919b3be96f

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
HAL_DMA_GetState
