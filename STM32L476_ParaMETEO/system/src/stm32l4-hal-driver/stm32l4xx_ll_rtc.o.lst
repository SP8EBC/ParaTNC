   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_ll_rtc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LL_RTC_StructInit,"ax",%progbits
  18              		.align	1
  19              		.global	LL_RTC_StructInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	LL_RTC_StructInit:
  26              	.LFB359:
  27              		.file 1 "../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c"
   1:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
   2:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ******************************************************************************
   3:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @file    stm32l4xx_ll_rtc.c
   4:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @author  MCD Application Team
   5:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief   RTC LL module driver.
   6:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ******************************************************************************
   7:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @attention
   8:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *
   9:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * All rights reserved.</center></h2>
  11:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *
  12:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * the "License"; You may not use this file except in compliance with the
  14:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * License. You may obtain a copy of the License at:
  15:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *
  17:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ******************************************************************************
  18:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
  19:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #if defined(USE_FULL_LL_DRIVER)
  20:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  21:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /* Includes ------------------------------------------------------------------*/
  22:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #include "stm32l4xx_ll_rtc.h"
  23:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #include "stm32l4xx_ll_cortex.h"
  24:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #ifdef  USE_FULL_ASSERT
  25:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #include "stm32_assert.h"
  26:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #else
  27:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define assert_param(expr) ((void)0U)
  28:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #endif
  29:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  30:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /** @addtogroup STM32L4xx_LL_Driver
  31:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @{
  32:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
  33:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  34:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #if defined(RTC)
  35:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  36:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /** @addtogroup RTC_LL
  37:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @{
  38:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
  39:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  40:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /* Private types -------------------------------------------------------------*/
  41:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /* Private variables ---------------------------------------------------------*/
  42:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /* Private constants ---------------------------------------------------------*/
  43:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /** @addtogroup RTC_LL_Private_Constants
  44:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @{
  45:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
  46:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /* Default values used for prescaler */
  47:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define RTC_ASYNCH_PRESC_DEFAULT     0x0000007FU
  48:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define RTC_SYNCH_PRESC_DEFAULT      0x000000FFU
  49:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  50:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /* Values used for timeout */
  51:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define RTC_INITMODE_TIMEOUT         1000U /* 1s when tick set to 1ms */
  52:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define RTC_SYNCHRO_TIMEOUT          1000U /* 1s when tick set to 1ms */
  53:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
  54:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @}
  55:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
  56:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  57:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /* Private macros ------------------------------------------------------------*/
  58:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /** @addtogroup RTC_LL_Private_Macros
  59:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @{
  60:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
  61:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  62:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_HOURFORMAT(__VALUE__) (((__VALUE__) == LL_RTC_HOURFORMAT_24HOUR) \
  63:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                       || ((__VALUE__) == LL_RTC_HOURFORMAT_AMPM))
  64:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  65:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_ASYNCH_PREDIV(__VALUE__)   ((__VALUE__) <= 0x7FU)
  66:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  67:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_SYNCH_PREDIV(__VALUE__)    ((__VALUE__) <= 0x7FFFU)
  68:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  69:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_FORMAT(__VALUE__) (((__VALUE__) == LL_RTC_FORMAT_BIN) \
  70:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                   || ((__VALUE__) == LL_RTC_FORMAT_BCD))
  71:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  72:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_TIME_FORMAT(__VALUE__) (((__VALUE__) == LL_RTC_TIME_FORMAT_AM_OR_24) \
  73:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                        || ((__VALUE__) == LL_RTC_TIME_FORMAT_PM))
  74:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  75:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_HOUR12(__HOUR__)            (((__HOUR__) > 0U) && ((__HOUR__) <= 12U))
  76:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_HOUR24(__HOUR__)            ((__HOUR__) <= 23U)
  77:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_MINUTES(__MINUTES__)        ((__MINUTES__) <= 59U)
  78:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_SECONDS(__SECONDS__)        ((__SECONDS__) <= 59U)
  79:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  80:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_WEEKDAY(__VALUE__) (((__VALUE__) == LL_RTC_WEEKDAY_MONDAY) \
  81:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_TUESDAY) \
  82:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_WEDNESDAY) \
  83:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_THURSDAY) \
  84:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_FRIDAY) \
  85:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_SATURDAY) \
  86:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                    || ((__VALUE__) == LL_RTC_WEEKDAY_SUNDAY))
  87:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  88:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_DAY(__DAY__)    (((__DAY__) >= 1U) && ((__DAY__) <= 31U))
  89:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  90:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_MONTH(__MONTH__) (((__MONTH__) >= 1U) && ((__MONTH__) <= 12U))
  91:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  92:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_YEAR(__YEAR__) ((__YEAR__) <= 99U)
  93:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
  94:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_ALMA_MASK(__VALUE__) (((__VALUE__) == LL_RTC_ALMA_MASK_NONE) \
  95:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_DATEWEEKDAY) \
  96:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_HOURS) \
  97:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_MINUTES) \
  98:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_SECONDS) \
  99:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMA_MASK_ALL))
 100:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 101:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_ALMB_MASK(__VALUE__) (((__VALUE__) == LL_RTC_ALMB_MASK_NONE) \
 102:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMB_MASK_DATEWEEKDAY) \
 103:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMB_MASK_HOURS) \
 104:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMB_MASK_MINUTES) \
 105:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMB_MASK_SECONDS) \
 106:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                      || ((__VALUE__) == LL_RTC_ALMB_MASK_ALL))
 107:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 108:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 109:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_ALMA_DATE_WEEKDAY_SEL(__SEL__) (((__SEL__) == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE) ||
 110:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                                   ((__SEL__) == LL_RTC_ALMA_DATEWEEKDAYSEL_WEEKDAY)
 111:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 112:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #define IS_LL_RTC_ALMB_DATE_WEEKDAY_SEL(__SEL__) (((__SEL__) == LL_RTC_ALMB_DATEWEEKDAYSEL_DATE) ||
 113:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                                                   ((__SEL__) == LL_RTC_ALMB_DATEWEEKDAYSEL_WEEKDAY)
 114:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 115:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 116:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 117:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @}
 118:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 119:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 120:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /* Exported functions --------------------------------------------------------*/
 121:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /** @addtogroup RTC_LL_Exported_Functions
 122:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @{
 123:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 124:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 125:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /** @addtogroup RTC_LL_EF_Init
 126:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @{
 127:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 128:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 129:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 130:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  De-Initializes the RTC registers to their default reset values.
 131:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @note   This function does not reset the RTC Clock source and RTC Backup Data
 132:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         registers.
 133:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 134:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 135:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - SUCCESS: RTC registers are de-initialized
 136:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - ERROR: RTC registers are not de-initialized
 137:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 138:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** ErrorStatus LL_RTC_DeInit(RTC_TypeDef *RTCx)
 139:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
 140:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ErrorStatus status;
 141:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 142:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Check the parameter */
 143:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 144:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 145:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 146:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 147:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 148:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Set Initialization mode */
 149:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   status = LL_RTC_EnterInitMode(RTCx);
 150:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if(status != ERROR)
 151:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 152:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Reset TR, DR and CR registers */
 153:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, TR, 0x00000000U);
 154:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 155:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, WUTR, RTC_WUTR_WUT);
 156:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, DR, (RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 157:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 158:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, CR, (LL_RTC_ReadReg(RTCx, CR) & RTC_CR_WUCKSEL));
 159:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 160:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, PRER, (RTC_PRER_PREDIV_A | RTC_SYNCH_PRESC_DEFAULT));
 161:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMAR,   0x00000000U);
 162:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMBR,   0x00000000U);
 163:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, SHIFTR,   0x00000000U);
 164:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, CALR,     0x00000000U);
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMASSR, 0x00000000U);
 166:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMBSSR, 0x00000000U);
 167:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 168:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 169:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
 170:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Reset Tamper and alternate functions configuration register */
 171:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, TAMPCR, 0x00000000U);
 172:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 173:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Reset Option register */
 174:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, OR, 0x00000000U);
 175:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
 176:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 177:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Exit Initialization mode */
 178:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_DisableInitMode(RTCx);
 179:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 180:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 181:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 182:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 183:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 184:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   return status;
 185:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 186:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 187:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 188:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Initializes the RTC registers according to the specified parameters
 189:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         in RTC_InitStruct.
 190:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 191:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_InitStruct pointer to a @ref LL_RTC_InitTypeDef structure that contains
 192:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         the configuration information for the RTC peripheral.
 193:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @note   The RTC Prescaler register is write protected and can be written in
 194:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         initialization mode only.
 195:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 196:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - SUCCESS: RTC registers are initialized
 197:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - ERROR: RTC registers are not initialized
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 199:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** ErrorStatus LL_RTC_Init(RTC_TypeDef *RTCx, LL_RTC_InitTypeDef *RTC_InitStruct)
 200:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
 201:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 202:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 203:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Check the parameters */
 204:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 205:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_HOURFORMAT(RTC_InitStruct->HourFormat));
 206:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ASYNCH_PREDIV(RTC_InitStruct->AsynchPrescaler));
 207:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_SYNCH_PREDIV(RTC_InitStruct->SynchPrescaler));
 208:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 209:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 210:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 211:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 212:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Set Initialization mode */
 213:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (LL_RTC_EnterInitMode(RTCx) != ERROR)
 214:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 215:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Set Hour Format */
 216:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_SetHourFormat(RTCx, RTC_InitStruct->HourFormat);
 217:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 218:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Configure Synchronous and Asynchronous prescaler factor */
 219:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_SetSynchPrescaler(RTCx, RTC_InitStruct->SynchPrescaler);
 220:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_SetAsynchPrescaler(RTCx, RTC_InitStruct->AsynchPrescaler);
 221:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 222:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Exit Initialization mode */
 223:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_DisableInitMode(RTCx);
 224:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 225:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     status = SUCCESS;
 226:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 227:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 228:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 229:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 230:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   return status;
 231:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 232:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 233:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 234:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_InitTypeDef field to default value.
 235:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_InitStruct pointer to a @ref LL_RTC_InitTypeDef structure which will be initialized
 236:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval None
 237:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 238:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** void LL_RTC_StructInit(LL_RTC_InitTypeDef *RTC_InitStruct)
 239:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
  28              		.loc 1 239 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 240:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Set RTC_InitStruct fields to default values */
 241:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_InitStruct->HourFormat      = LL_RTC_HOURFORMAT_24HOUR;
  34              		.loc 1 241 0
  35 0000 0023     		movs	r3, #0
  36 0002 0360     		str	r3, [r0]
 242:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_InitStruct->AsynchPrescaler = RTC_ASYNCH_PRESC_DEFAULT;
  37              		.loc 1 242 0
  38 0004 7F23     		movs	r3, #127
  39 0006 4360     		str	r3, [r0, #4]
 243:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_InitStruct->SynchPrescaler  = RTC_SYNCH_PRESC_DEFAULT;
  40              		.loc 1 243 0
  41 0008 FF23     		movs	r3, #255
  42 000a 8360     		str	r3, [r0, #8]
 244:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
  43              		.loc 1 244 0
  44 000c 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE359:
  48              		.section	.text.LL_RTC_TIME_StructInit,"ax",%progbits
  49              		.align	1
  50              		.global	LL_RTC_TIME_StructInit
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	LL_RTC_TIME_StructInit:
  57              	.LFB361:
 245:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 246:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 247:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Set the RTC current time.
 248:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 249:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_Format This parameter can be one of the following values:
 250:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BIN
 251:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BCD
 252:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_TimeStruct pointer to a RTC_TimeTypeDef structure that contains
 253:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *                        the time configuration information for the RTC.
 254:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 255:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - SUCCESS: RTC Time register is configured
 256:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - ERROR: RTC Time register is not configured
 257:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 258:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** ErrorStatus LL_RTC_TIME_Init(RTC_TypeDef *RTCx, uint32_t RTC_Format, LL_RTC_TimeTypeDef *RTC_TimeSt
 259:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
 260:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 261:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 262:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Check the parameters */
 263:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 264:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_FORMAT(RTC_Format));
 265:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 266:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (RTC_Format == LL_RTC_FORMAT_BIN)
 267:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 268:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 269:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 270:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(RTC_TimeStruct->Hours));
 271:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_TimeStruct->TimeFormat));
 272:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 273:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 274:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 275:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       RTC_TimeStruct->TimeFormat = 0x00U;
 276:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(RTC_TimeStruct->Hours));
 277:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 278:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(RTC_TimeStruct->Minutes));
 279:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(RTC_TimeStruct->Seconds));
 280:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 281:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   else
 282:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 283:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 284:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 285:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Hours)));
 286:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_TimeStruct->TimeFormat));
 287:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 288:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 289:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 290:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       RTC_TimeStruct->TimeFormat = 0x00U;
 291:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Hours)));
 292:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 293:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Minutes)));
 294:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Seconds)));
 295:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 296:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 297:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 298:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 299:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 300:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Set Initialization mode */
 301:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (LL_RTC_EnterInitMode(RTCx) != ERROR)
 302:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 303:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Check the input parameters format */
 304:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (RTC_Format != LL_RTC_FORMAT_BIN)
 305:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 306:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       LL_RTC_TIME_Config(RTCx, RTC_TimeStruct->TimeFormat, RTC_TimeStruct->Hours,
 307:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                          RTC_TimeStruct->Minutes, RTC_TimeStruct->Seconds);
 308:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 309:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 310:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 311:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       LL_RTC_TIME_Config(RTCx, RTC_TimeStruct->TimeFormat, __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct-
 312:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Minutes),
 313:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Seconds));
 314:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 315:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 316:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Exit Initialization mode */
 317:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_DisableInitMode(RTC);
 318:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 319:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 320:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (LL_RTC_IsShadowRegBypassEnabled(RTCx) == 0U)
 321:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 322:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       status = LL_RTC_WaitForSynchro(RTCx);
 323:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 324:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 325:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 326:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       status = SUCCESS;
 327:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 328:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 329:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 330:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 331:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 332:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   return status;
 333:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 334:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 335:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 336:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_TimeTypeDef field to default value (Time = 00h:00min:00sec).
 337:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_TimeStruct pointer to a @ref LL_RTC_TimeTypeDef structure which will be initialized
 338:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval None
 339:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 340:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** void LL_RTC_TIME_StructInit(LL_RTC_TimeTypeDef *RTC_TimeStruct)
 341:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
  58              		.loc 1 341 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL1:
 342:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Time = 00h:00min:00sec */
 343:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_TimeStruct->TimeFormat = LL_RTC_TIME_FORMAT_AM_OR_24;
  64              		.loc 1 343 0
  65 0000 0023     		movs	r3, #0
  66 0002 0360     		str	r3, [r0]
 344:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_TimeStruct->Hours      = 0U;
  67              		.loc 1 344 0
  68 0004 0371     		strb	r3, [r0, #4]
 345:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_TimeStruct->Minutes    = 0U;
  69              		.loc 1 345 0
  70 0006 4371     		strb	r3, [r0, #5]
 346:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_TimeStruct->Seconds    = 0U;
  71              		.loc 1 346 0
  72 0008 8371     		strb	r3, [r0, #6]
 347:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
  73              		.loc 1 347 0
  74 000a 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE361:
  78              		.section	.text.LL_RTC_DATE_StructInit,"ax",%progbits
  79              		.align	1
  80              		.global	LL_RTC_DATE_StructInit
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv4-sp-d16
  86              	LL_RTC_DATE_StructInit:
  87              	.LFB363:
 348:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 349:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 350:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Set the RTC current date.
 351:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 352:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_Format This parameter can be one of the following values:
 353:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BIN
 354:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BCD
 355:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_DateStruct pointer to a RTC_DateTypeDef structure that contains
 356:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *                         the date configuration information for the RTC.
 357:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 358:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - SUCCESS: RTC Day register is configured
 359:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - ERROR: RTC Day register is not configured
 360:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 361:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** ErrorStatus LL_RTC_DATE_Init(RTC_TypeDef *RTCx, uint32_t RTC_Format, LL_RTC_DateTypeDef *RTC_DateSt
 362:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
 363:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 364:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 365:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Check the parameters */
 366:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 367:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_FORMAT(RTC_Format));
 368:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 369:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if ((RTC_Format == LL_RTC_FORMAT_BIN) && ((RTC_DateStruct->Month & 0x10U) == 0x10U))
 370:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 371:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     RTC_DateStruct->Month = (uint8_t)(((uint32_t) RTC_DateStruct->Month & (uint32_t)~(0x10U)) + 0x0
 372:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 373:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 374:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (RTC_Format == LL_RTC_FORMAT_BIN)
 375:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 376:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_YEAR(RTC_DateStruct->Year));
 377:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MONTH(RTC_DateStruct->Month));
 378:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_DAY(RTC_DateStruct->Day));
 379:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 380:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   else
 381:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 382:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_YEAR(__LL_RTC_CONVERT_BCD2BIN(RTC_DateStruct->Year)));
 383:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MONTH(__LL_RTC_CONVERT_BCD2BIN(RTC_DateStruct->Month)));
 384:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_DAY(__LL_RTC_CONVERT_BCD2BIN(RTC_DateStruct->Day)));
 385:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 386:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_WEEKDAY(RTC_DateStruct->WeekDay));
 387:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 388:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 389:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 390:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 391:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Set Initialization mode */
 392:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (LL_RTC_EnterInitMode(RTCx) != ERROR)
 393:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 394:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Check the input parameters format */
 395:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (RTC_Format != LL_RTC_FORMAT_BIN)
 396:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 397:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       LL_RTC_DATE_Config(RTCx, RTC_DateStruct->WeekDay, RTC_DateStruct->Day, RTC_DateStruct->Month,
 398:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 399:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 400:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 401:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       LL_RTC_DATE_Config(RTCx, RTC_DateStruct->WeekDay, __LL_RTC_CONVERT_BIN2BCD(RTC_DateStruct->Da
 402:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_DateStruct->Month), __LL_RTC_CONVERT_BIN2BCD(
 403:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 404:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 405:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Exit Initialization mode */
 406:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_DisableInitMode(RTC);
 407:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 408:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 409:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (LL_RTC_IsShadowRegBypassEnabled(RTCx) == 0U)
 410:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 411:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       status = LL_RTC_WaitForSynchro(RTCx);
 412:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 413:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 414:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 415:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       status = SUCCESS;
 416:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 417:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 418:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 419:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 420:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 421:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   return status;
 422:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 423:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 424:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 425:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_DateTypeDef field to default value (date = Monday, January 01 xx00
 426:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_DateStruct pointer to a @ref LL_RTC_DateTypeDef structure which will be initialized
 427:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval None
 428:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 429:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** void LL_RTC_DATE_StructInit(LL_RTC_DateTypeDef *RTC_DateStruct)
 430:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
  88              		.loc 1 430 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL2:
 431:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Monday, January 01 xx00 */
 432:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_DateStruct->WeekDay = LL_RTC_WEEKDAY_MONDAY;
  94              		.loc 1 432 0
  95 0000 0123     		movs	r3, #1
  96 0002 0370     		strb	r3, [r0]
 433:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_DateStruct->Day     = 1U;
  97              		.loc 1 433 0
  98 0004 8370     		strb	r3, [r0, #2]
 434:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_DateStruct->Month   = LL_RTC_MONTH_JANUARY;
  99              		.loc 1 434 0
 100 0006 4370     		strb	r3, [r0, #1]
 435:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_DateStruct->Year    = 0U;
 101              		.loc 1 435 0
 102 0008 0023     		movs	r3, #0
 103 000a C370     		strb	r3, [r0, #3]
 436:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 104              		.loc 1 436 0
 105 000c 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE363:
 109              		.section	.text.LL_RTC_ALMA_Init,"ax",%progbits
 110              		.align	1
 111              		.global	LL_RTC_ALMA_Init
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv4-sp-d16
 117              	LL_RTC_ALMA_Init:
 118              	.LFB364:
 437:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 438:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 439:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Set the RTC Alarm A.
 440:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
 441:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         is disabled (Use @ref LL_RTC_ALMA_Disable function).
 442:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 443:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_Format This parameter can be one of the following values:
 444:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BIN
 445:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BCD
 446:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_AlarmStruct pointer to a @ref LL_RTC_AlarmTypeDef structure that
 447:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *                         contains the alarm configuration parameters.
 448:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 449:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - SUCCESS: ALARMA registers are configured
 450:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - ERROR: ALARMA registers are not configured
 451:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 452:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** ErrorStatus LL_RTC_ALMA_Init(RTC_TypeDef *RTCx, uint32_t RTC_Format, LL_RTC_AlarmTypeDef *RTC_Alarm
 453:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
 119              		.loc 1 453 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.LVL3:
 125 0000 F0B4     		push	{r4, r5, r6, r7}
 126              		.cfi_def_cfa_offset 16
 127              		.cfi_offset 4, -16
 128              		.cfi_offset 5, -12
 129              		.cfi_offset 6, -8
 130              		.cfi_offset 7, -4
 454:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Check the parameters */
 455:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 456:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_FORMAT(RTC_Format));
 457:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ALMA_MASK(RTC_AlarmStruct->AlarmMask));
 458:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ALMA_DATE_WEEKDAY_SEL(RTC_AlarmStruct->AlarmDateWeekDaySel));
 459:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 460:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (RTC_Format == LL_RTC_FORMAT_BIN)
 131              		.loc 1 460 0
 132 0002 0C46     		mov	r4, r1
 133 0004 C1B9     		cbnz	r1, .L5
 134              	.LVL4:
 135              	.LBB122:
 136              	.LBB123:
 137              		.file 2 "../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h"
   1:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
   2:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   ******************************************************************************
   3:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @file    stm32l4xx_ll_rtc.h
   4:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @author  MCD Application Team
   5:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief   Header file of RTC LL module.
   6:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   ******************************************************************************
   7:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @attention
   8:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
   9:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * All rights reserved.</center></h2>
  11:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
  12:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * the "License"; You may not use this file except in compliance with the
  14:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * License. You may obtain a copy of the License at:
  15:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
  17:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   ******************************************************************************
  18:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
  19:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  20:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #ifndef STM32L4xx_LL_RTC_H
  22:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define STM32L4xx_LL_RTC_H
  23:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  24:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #ifdef __cplusplus
  25:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** extern "C" {
  26:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif
  27:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  28:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Includes ------------------------------------------------------------------*/
  29:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #include "stm32l4xx.h"
  30:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  31:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @addtogroup STM32L4xx_LL_Driver
  32:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
  33:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
  34:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  35:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC)
  36:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  37:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL RTC
  38:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
  39:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
  40:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  41:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Private types -------------------------------------------------------------*/
  42:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Private variables ---------------------------------------------------------*/
  43:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Private constants ---------------------------------------------------------*/
  44:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Constants RTC Private Constants
  45:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
  46:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
  47:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Masks Definition */
  48:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define RTC_LL_INIT_MASK              0xFFFFFFFFU
  49:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define RTC_LL_RSF_MASK               0xFFFFFF5FU
  50:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  51:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Write protection defines */
  52:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_DISABLE  0xFFU
  53:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_1 0xCAU
  54:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_2 0x53U
  55:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  56:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Defines used to combine date & time */
  57:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define RTC_OFFSET_WEEKDAY            24U
  58:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define RTC_OFFSET_DAY                16U
  59:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define RTC_OFFSET_MONTH              8U
  60:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define RTC_OFFSET_HOUR               16U
  61:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define RTC_OFFSET_MINUTE             8U
  62:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  63:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
  64:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
  65:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
  66:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  67:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Private macros ------------------------------------------------------------*/
  68:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
  69:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Macros RTC Private Macros
  70:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
  71:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
  72:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
  73:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
  74:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
  75:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /*USE_FULL_LL_DRIVER*/
  76:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  77:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Exported types ------------------------------------------------------------*/
  78:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
  79:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_ES_INIT RTC Exported Init structure
  80:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
  81:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
  82:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  83:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
  84:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  RTC Init structures definition
  85:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
  86:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** typedef struct
  87:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
  88:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t HourFormat;   /*!< Specifies the RTC Hours Format.
  89:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                               This parameter can be a value of @ref RTC_LL_EC_HOURFORMAT
  90:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  91:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
  92:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                               @ref LL_RTC_SetHourFormat(). */
  93:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  94:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t AsynchPrescaler; /*!< Specifies the RTC Asynchronous Predivider value.
  95:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
  96:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
  97:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
  98:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                               @ref LL_RTC_SetAsynchPrescaler(). */
  99:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t SynchPrescaler;  /*!< Specifies the RTC Synchronous Predivider value.
 101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
 102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                               @ref LL_RTC_SetSynchPrescaler(). */
 105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** } LL_RTC_InitTypeDef;
 106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  RTC Time structure definition
 109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** typedef struct
 111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
 112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t TimeFormat; /*!< Specifies the RTC AM/PM Time.
 113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                             This parameter can be a value of @ref RTC_LL_EC_TIME_FORMAT
 114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint8_t Hours;       /*!< Specifies the RTC Time Hours.
 118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 12 
 119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 23 
 120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint8_t Minutes;     /*!< Specifies the RTC Time Minutes.
 124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
 125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint8_t Seconds;     /*!< Specifies the RTC Time Seconds.
 129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
 130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** } LL_RTC_TimeTypeDef;
 133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  RTC Date structure definition
 136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** typedef struct
 138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
 139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint8_t WeekDay;  /*!< Specifies the RTC Date WeekDay.
 140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_WEEKDAY
 141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint8_t Month;    /*!< Specifies the RTC Date Month.
 145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_MONTH
 146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint8_t Day;      /*!< Specifies the RTC Date Day.
 150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 1 and Max_Data = 31
 151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint8_t Year;     /*!< Specifies the RTC Date Year.
 155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 0 and Max_Data = 99
 156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** } LL_RTC_DateTypeDef;
 159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  RTC Alarm structure definition
 162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** typedef struct
 164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
 165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   LL_RTC_TimeTypeDef AlarmTime;  /*!< Specifies the RTC Alarm Time members. */
 166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t AlarmMask;            /*!< Specifies the RTC Alarm Masks.
 168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_MASK for
 169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       or @ref LL_RTC_ALMB_SetMask() for ALARM B
 172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                  */
 173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t AlarmDateWeekDaySel;  /*!< Specifies the RTC Alarm is on day or WeekDay.
 175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_WEEKDAY_
 176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_EnableWeekday() or @ref LL_RT
 179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                  */
 180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint8_t AlarmDateWeekDay;      /*!< Specifies the RTC Alarm Day/WeekDay.
 182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to day, this parameter  must be a 
 183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_SetDay() for ALARM B.
 186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to Weekday, this parameter can be 
 188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_SetWeekDay() for ALARM B.
 191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                  */
 192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** } LL_RTC_AlarmTypeDef;
 193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Exported constants --------------------------------------------------------*/
 200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Constants RTC Exported Constants
 201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
 205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_FORMAT FORMAT
 206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_FORMAT_BIN                  0x00000000U /*!< Binary data format */
 209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_FORMAT_BCD                  0x00000001U /*!< BCD data format */
 210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_WEEKDAY_SELECTION RTC Alarm A Date WeekDay
 215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_DATE    0x00000000U             /*!< Alarm A Date is selected */
 218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_WEEKDAY RTC_ALRMAR_WDSEL        /*!< Alarm A WeekDay is selected
 219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_WEEKDAY_SELECTION RTC Alarm B Date WeekDay
 224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_DATEWEEKDAYSEL_DATE    0x00000000U             /*!< Alarm B Date is selected */
 227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_DATEWEEKDAYSEL_WEEKDAY RTC_ALRMBR_WDSEL        /*!< Alarm B WeekDay is selected
 228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_GET_FLAG Get Flags Defines
 235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief    Flags defines which can be used with LL_RTC_ReadReg function
 236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_SCR_ITSF                    RTC_SCR_CITSF
 240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_SCR_TSOVF                   RTC_SCR_CTSOVF
 241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_SCR_TSF                     RTC_SCR_CTSF
 242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_SCR_WUTF                    RTC_SCR_CWUTF
 243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_SCR_ALRBF                   RTC_SCR_CALRBF
 244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_SCR_ALRAF                   RTC_SCR_CALRAF
 245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ICSR_RECALPF                RTC_ICSR_RECALPF
 247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ICSR_INITF                  RTC_ICSR_INITF
 248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ICSR_RSF                    RTC_ICSR_RSF
 249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ICSR_INITS                  RTC_ICSR_INITS
 250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ICSR_SHPF                   RTC_ICSR_SHPF
 251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ICSR_WUTWF                  RTC_ICSR_WUTWF
 252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
 253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_ITSF                    RTC_ISR_ITSF
 254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_RECALPF                 RTC_ISR_RECALPF
 255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP3F                  RTC_ISR_TAMP3F
 256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP2F                  RTC_ISR_TAMP2F
 257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP1F                  RTC_ISR_TAMP1F
 258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_TSOVF                   RTC_ISR_TSOVF
 259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_TSF                     RTC_ISR_TSF
 260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_WUTF                    RTC_ISR_WUTF
 261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_ALRBF                   RTC_ISR_ALRBF
 262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAF                   RTC_ISR_ALRAF
 263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_INITF                   RTC_ISR_INITF
 264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_RSF                     RTC_ISR_RSF
 265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_INITS                   RTC_ISR_INITS
 266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_SHPF                    RTC_ISR_SHPF
 267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_WUTWF                   RTC_ISR_WUTWF
 268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_ALRBWF                  RTC_ISR_ALRBWF
 269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAWF                  RTC_ISR_ALRAWF
 270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
 271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_IT IT Defines
 276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief    IT defines which can be used with LL_RTC_ReadReg and  LL_RTC_WriteReg functions
 277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CR_TSIE                     RTC_CR_TSIE
 280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CR_WUTIE                    RTC_CR_WUTIE
 281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CR_ALRBIE                   RTC_CR_ALRBIE
 282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CR_ALRAIE                   RTC_CR_ALRAIE
 283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
 285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMP3IE              RTC_TAMPCR_TAMP3IE
 286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMP2IE              RTC_TAMPCR_TAMP2IE
 287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMP1IE              RTC_TAMPCR_TAMP1IE
 288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPCR_TAMPIE               RTC_TAMPCR_TAMPIE
 289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
 290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WEEKDAY  WEEK DAY
 295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_MONDAY              (uint8_t)0x01 /*!< Monday    */
 298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_TUESDAY             (uint8_t)0x02 /*!< Tuesday   */
 299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_WEDNESDAY           (uint8_t)0x03 /*!< Wednesday */
 300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_THURSDAY            (uint8_t)0x04 /*!< Thrusday  */
 301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_FRIDAY              (uint8_t)0x05 /*!< Friday    */
 302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SATURDAY            (uint8_t)0x06 /*!< Saturday  */
 303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SUNDAY              (uint8_t)0x07 /*!< Sunday    */
 304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_MONTH  MONTH
 309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_JANUARY               (uint8_t)0x01  /*!< January   */
 312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_FEBRUARY              (uint8_t)0x02  /*!< February  */
 313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_MARCH                 (uint8_t)0x03  /*!< March     */
 314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_APRIL                 (uint8_t)0x04  /*!< April     */
 315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_MAY                   (uint8_t)0x05  /*!< May       */
 316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_JUNE                  (uint8_t)0x06  /*!< June      */
 317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_JULY                  (uint8_t)0x07  /*!< July      */
 318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_AUGUST                (uint8_t)0x08  /*!< August    */
 319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_SEPTEMBER             (uint8_t)0x09  /*!< September */
 320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_OCTOBER               (uint8_t)0x10  /*!< October   */
 321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_NOVEMBER              (uint8_t)0x11  /*!< November  */
 322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_MONTH_DECEMBER              (uint8_t)0x12  /*!< December  */
 323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_HOURFORMAT  HOUR FORMAT
 328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_24HOUR           0x00000000U           /*!< 24 hour/day format */
 331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_AMPM             RTC_CR_FMT            /*!< AM/PM hour format */
 332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARMOUT  ALARM OUTPUT
 337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_DISABLE            0x00000000U             /*!< Output disabled */
 340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMA               RTC_CR_OSEL_0           /*!< Alarm A output enabled */
 341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMB               RTC_CR_OSEL_1           /*!< Alarm B output enabled */
 342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_WAKEUP             RTC_CR_OSEL             /*!< Wakeup output enabled */
 343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARM_OUTPUTTYPE  ALARM OUTPUT TYPE
 348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN  RTC_CR_TAMPALRM_TYPE   /*!< RTC_ALARM is open-drain outp
 352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL   0x00000000U            /*!< RTC_ALARM is push-pull outpu
 353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
 354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN  0x00000000U            /*!< RTC_ALARM is open-drain outp
 355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL   RTC_OR_ALARMOUTTYPE    /*!< RTC_ALARM, when mapped on PC
 356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
 357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_OUTPUTPOLARITY_PIN  OUTPUT POLARITY PIN
 362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_HIGH     0x00000000U           /*!< Pin is high when ALRAF/ALRBF/
 365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_LOW      RTC_CR_POL            /*!< Pin is low when ALRAF/ALRBF/W
 366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIME_FORMAT TIME FORMAT
 371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_AM_OR_24        0x00000000U           /*!< AM or 24-hour format */
 374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_PM              RTC_TR_PM             /*!< PM */
 375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_SHIFT_SECOND  SHIFT SECOND
 380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_DELAY          0x00000000U           /* Delay (seconds) = SUBFS / (PRED
 383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_ADVANCE        RTC_SHIFTR_ADD1S      /* Advance (seconds) = (1 - (SUBFS
 384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_MASK  ALARMA MASK
 389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_NONE              0x00000000U             /*!< No masks applied on Alarm A
 392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_DATEWEEKDAY       RTC_ALRMAR_MSK4         /*!< Date/day do not care in Ala
 393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_HOURS             RTC_ALRMAR_MSK3         /*!< Hours do not care in Alarm 
 394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_MINUTES           RTC_ALRMAR_MSK2         /*!< Minutes do not care in Alar
 395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_SECONDS           RTC_ALRMAR_MSK1         /*!< Seconds do not care in Alar
 396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_ALL               (RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | R
 397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_TIME_FORMAT  ALARMA TIME FORMAT
 402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_AM         0x00000000U           /*!< AM or 24-hour format */
 405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_PM         RTC_ALRMAR_PM         /*!< PM */
 406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_ALMA_SUBSECONDBIN_AUTOCLR  RTCEx_AlarmA_Sub_Seconds_binary_Clear_Definitions RTC 
 412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_SUBSECONDBIN_AUTOCLR_NO    0UL                  /*!<  The synchronous binary co
 415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMA_SUBSECONDBIN_AUTOCLR_YES   RTC_ALRMASSR_SSCLR   /*!<  The synchronous binary co
 416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                                                           RTC_ALRMABINR -> SS[31:0]
 417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                                                           when reaching RTC_ALRMABI
 418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
 422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_MASK  ALARMB MASK
 424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_NONE              0x00000000U             /*!< No masks applied on Alarm B
 427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_DATEWEEKDAY       RTC_ALRMBR_MSK4         /*!< Date/day do not care in Ala
 428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_HOURS             RTC_ALRMBR_MSK3         /*!< Hours do not care in Alarm 
 429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_MINUTES           RTC_ALRMBR_MSK2         /*!< Minutes do not care in Alar
 430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_SECONDS           RTC_ALRMBR_MSK1         /*!< Seconds do not care in Alar
 431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_ALL               (RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | R
 432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_TIME_FORMAT  ALARMB TIME FORMAT
 437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_TIME_FORMAT_AM         0x00000000U           /*!< AM or 24-hour format */
 440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_TIME_FORMAT_PM         RTC_ALRMBR_PM         /*!< PM */
 441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_ALMB_SUBSECONDBIN_AUTOCLR  RTCEx_AlarmB_Sub_Seconds_binary_Clear_Definitions RTC 
 447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_SUBSECONDBIN_AUTOCLR_NO    0UL                  /*!<  The synchronous binary co
 450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_SUBSECONDBIN_AUTOCLR_YES   RTC_ALRMBSSR_SSCLR   /*!<  The synchronous binary co
 451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                                                           RTC_ALRMABINR -> SS[31:0]
 452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                                                                           when reaching RTC_ALRMABI
 453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_ALMB_FLAG_AUTOCLR  RTCEx_Alarm_Flag_Clear_Definitions RTC Alarm Flag auto clear D
 458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_FLAG_AUTOCLR_NO    0UL                  /*!<  */
 462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ALMB_FLAG_AUTOCLR_YES   RTC_CR_ALRBMSK       /*!<  */
 463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
 467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIMESTAMP_EDGE  TIMESTAMP EDGE
 469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_RISING       0x00000000U           /*!< RTC_TS input rising edge gene
 472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_FALLING      RTC_CR_TSEDGE         /*!< RTC_TS input falling edge gen
 473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TS_TIME_FORMAT  TIMESTAMP TIME FORMAT
 478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_AM           0x00000000U           /*!< AM or 24-hour format */
 481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_PM           RTC_TSTR_PM           /*!< PM */
 482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER  TAMPER
 488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_1                    TAMP_CR1_TAMP1E /*!< Tamper 1 input detection */
 491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_2                    TAMP_CR1_TAMP2E /*!< Tamper 2 input detection */
 492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_3                    TAMP_CR1_TAMP3E /*!< Tamper 3 input detection */
 494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif
 495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_MASK  TAMPER MASK
 500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER1         TAMP_CR2_TAMP1MSK /*!< Tamper 1 event generates a trigge
 503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER2         TAMP_CR2_TAMP2MSK /*!< Tamper 2 event generates a trigge
 504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER3         TAMP_CR2_TAMP3MSK /*!< Tamper 3 event generates a trigge
 506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif
 507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_NOERASE  TAMPER NO ERASE
 512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER1      TAMP_CR2_TAMP1NOERASE /*!< Tamper 1 event does not erase
 515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER2      TAMP_CR2_TAMP2NOERASE /*!< Tamper 2 event does not erase
 516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER3      TAMP_CR2_TAMP3NOERASE /*!< Tamper 3 event does not erase
 518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif
 519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_DURATION  TAMPER DURATION
 524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_1RTCCLK     0x00000000U            /*!< Tamper pins are pre-charged 
 527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_2RTCCLK     TAMP_FLTCR_TAMPPRCH_0  /*!< Tamper pins are pre-charged 
 528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_4RTCCLK     TAMP_FLTCR_TAMPPRCH_1  /*!< Tamper pins are pre-charged 
 529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_8RTCCLK     TAMP_FLTCR_TAMPPRCH    /*!< Tamper pins are pre-charged 
 530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_FILTER  TAMPER FILTER
 535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_DISABLE       0x00000000U             /*!< Tamper filter is disabled *
 538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_2SAMPLE       TAMP_FLTCR_TAMPFLT_0    /*!< Tamper is activated after 2
 539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_4SAMPLE       TAMP_FLTCR_TAMPFLT_1    /*!< Tamper is activated after 4
 540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_8SAMPLE       TAMP_FLTCR_TAMPFLT      /*!< Tamper is activated after 8
 541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_SAMPLFREQDIV  TAMPER SAMPLING FREQUENCY DIVIDER
 546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_32768   0x00000000U                                     /*!< Eac
 549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_16384   TAMP_FLTCR_TAMPFREQ_0                           /*!< Eac
 550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_8192    TAMP_FLTCR_TAMPFREQ_1                           /*!< Eac
 551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_4096    (TAMP_FLTCR_TAMPFREQ_1 | TAMP_FLTCR_TAMPFREQ_0) /*!< Eac
 552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_2048    TAMP_FLTCR_TAMPFREQ_2                           /*!< Eac
 553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_1024    (TAMP_FLTCR_TAMPFREQ_2 | TAMP_FLTCR_TAMPFREQ_0) /*!< Eac
 554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_512     (TAMP_FLTCR_TAMPFREQ_2 | TAMP_FLTCR_TAMPFREQ_1) /*!< Eac
 555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_256     TAMP_FLTCR_TAMPFREQ                             /*!< Eac
 556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_ACTIVELEVEL  TAMPER ACTIVE LEVEL
 561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP1    TAMP_CR2_TAMP1TRG /*!< Tamper 1 input falling edge (if T
 564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP2    TAMP_CR2_TAMP2TRG /*!< Tamper 2 input falling edge (if T
 565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP3    TAMP_CR2_TAMP3TRG /*!< Tamper 3 input falling edge (if T
 567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif
 568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
 573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER  TAMPER
 575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_1                    RTC_TAMPCR_TAMP1E /*!< RTC_TAMP1 input detection */
 579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_2                    RTC_TAMPCR_TAMP2E /*!< RTC_TAMP2 input detection */
 582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_3                    RTC_TAMPCR_TAMP3E /*!< RTC_TAMP3 input detection */
 585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_MASK  TAMPER MASK
 591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER1         RTC_TAMPCR_TAMP1MF /*!< Tamper 1 event generates a trigg
 595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER2         RTC_TAMPCR_TAMP2MF /*!< Tamper 2 event generates a trigg
 598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER3         RTC_TAMPCR_TAMP3MF /*!< Tamper 3 event generates a trigg
 601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_NOERASE  TAMPER NO ERASE
 607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER1      RTC_TAMPCR_TAMP1NOERASE /*!< Tamper 1 event does not era
 611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER2      RTC_TAMPCR_TAMP2NOERASE /*!< Tamper 2 event does not era
 614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER3      RTC_TAMPCR_TAMP3NOERASE /*!< Tamper 3 event does not era
 617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPPRCH)
 623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_DURATION  TAMPER DURATION
 624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_1RTCCLK     0x00000000U                             /*!< Tamper pins
 627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_2RTCCLK     RTC_TAMPCR_TAMPPRCH_0  /*!< Tamper pins are pre-charged 
 628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_4RTCCLK     RTC_TAMPCR_TAMPPRCH_1  /*!< Tamper pins are pre-charged 
 629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_8RTCCLK     RTC_TAMPCR_TAMPPRCH    /*!< Tamper pins are pre-charged 
 630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPPRCH */
 634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPFLT)
 636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_FILTER  TAMPER FILTER
 637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_DISABLE       0x00000000U                              /*!< Tamper fil
 640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_2SAMPLE       RTC_TAMPCR_TAMPFLT_0    /*!< Tamper is activated after 2
 641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_4SAMPLE       RTC_TAMPCR_TAMPFLT_1    /*!< Tamper is activated after 4
 642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_8SAMPLE       RTC_TAMPCR_TAMPFLT      /*!< Tamper is activated after 8
 643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPFLT */
 647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPFREQ)
 649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_SAMPLFREQDIV  TAMPER SAMPLING FREQUENCY DIVIDER
 650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_32768   0x00000000U                                             
 653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_16384   RTC_TAMPCR_TAMPFREQ_0                           /*!< Eac
 654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_8192    RTC_TAMPCR_TAMPFREQ_1                           /*!< Eac
 655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_4096    (RTC_TAMPCR_TAMPFREQ_1 | RTC_TAMPCR_TAMPFREQ_0) /*!< Eac
 656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_2048    RTC_TAMPCR_TAMPFREQ_2                           /*!< Eac
 657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_1024    (RTC_TAMPCR_TAMPFREQ_2 | RTC_TAMPCR_TAMPFREQ_0) /*!< Eac
 658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_512     (RTC_TAMPCR_TAMPFREQ_2 | RTC_TAMPCR_TAMPFREQ_1) /*!< Eac
 659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_256     RTC_TAMPCR_TAMPFREQ                             /*!< Eac
 660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPFREQ */
 664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_ACTIVELEVEL  TAMPER ACTIVE LEVEL
 666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
 669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP1    RTC_TAMPCR_TAMP1TRG /*!< RTC_TAMP1 input falling edge (i
 670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
 671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP2    RTC_TAMPCR_TAMP2TRG /*!< RTC_TAMP2 input falling edge (i
 673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
 675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP3    RTC_TAMPCR_TAMP3TRG /*!< RTC_TAMP3 input falling edge (i
 676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
 677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
 682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WAKEUPCLOCK_DIV  WAKEUP CLOCK DIV
 684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_16          0x00000000U                           /*!< RTC/16 clock 
 687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_8           RTC_CR_WUCKSEL_0                      /*!< RTC/8 clock i
 688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_4           RTC_CR_WUCKSEL_1                      /*!< RTC/4 clock i
 689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_2           (RTC_CR_WUCKSEL_1 | RTC_CR_WUCKSEL_0) /*!< RTC/2 clock i
 690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE          RTC_CR_WUCKSEL_2                      /*!< ck_spre (usua
 691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE_WUT      (RTC_CR_WUCKSEL_2 | RTC_CR_WUCKSEL_1) /*!< ck_spre (usua
 692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_BACKUP_SUPPORT)
 697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_BKP  BACKUP
 698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR0                     0x00000000U
 701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR1                     0x00000001U
 702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR2                     0x00000002U
 703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR3                     0x00000003U
 704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR4                     0x00000004U
 705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if RTC_BKP_NUMBER > 5
 706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR5                     0x00000005U
 707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR6                     0x00000006U
 708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR7                     0x00000007U
 709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR8                     0x00000008U
 710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR9                     0x00000009U
 711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR10                    0x0000000AU
 712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR11                    0x0000000BU
 713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR12                    0x0000000CU
 714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR13                    0x0000000DU
 715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR14                    0x0000000EU
 716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR15                    0x0000000FU
 717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_BKP_NUMBER > 5 */
 718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if RTC_BKP_NUMBER > 16
 720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR16                    0x00000010U
 721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR17                    0x00000011U
 722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR18                    0x00000012U
 723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR19                    0x00000013U
 724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_BKP_NUMBER > 16 */
 725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if RTC_BKP_NUMBER > 20
 727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR20                    0x00000014U
 728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR21                    0x00000015U
 729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR22                    0x00000016U
 730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR23                    0x00000017U
 731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR24                    0x00000018U
 732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR25                    0x00000019U
 733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR26                    0x0000001AU
 734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR27                    0x0000001BU
 735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR28                    0x0000001CU
 736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR29                    0x0000001DU
 737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR30                    0x0000001EU
 738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BKP_DR31                    0x0000001FU
 739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_BKP_NUMBER > 20 */
 740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_BACKUP_SUPPORT */
 744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_OUTPUT  Calibration output
 746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_NONE           0x00000000U                 /*!< Calibration output disa
 749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_1HZ            (RTC_CR_COE | RTC_CR_COSEL) /*!< Calibration output is 1
 750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_512HZ           RTC_CR_COE                 /*!< Calibration output is 5
 751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_INSERTPULSE  Calibration pulse insertion
 756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_NONE      0x00000000U           /*!< No RTCCLK pulses are added */
 759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_SET       RTC_CALR_CALP         /*!< One RTCCLK pulse is effective
 760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_PERIOD  Calibration period
 765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_32SEC          0x00000000U           /*!< Use a 32-second calibration c
 768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_16SEC          RTC_CALR_CALW16       /*!< Use a 16-second calibration c
 769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_8SEC           RTC_CALR_CALW8        /*!< Use a 8-second calibration cy
 770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
 775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_LOWPOWER  Calibration low power
 776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CALIB_LOWPOWER_NONE         0x00000000U           /*!< High conso mode */
 779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_CALIB_LOWPOWER_SET          RTC_CALR_LPCAL        /*!< low power mode */
 780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_BINARY_MODE  Binary mode (Sub Second Register)
 785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BINARY_NONE  0x00000000U     /*!< Free running BCD calendar mode (Binary mode disabl
 788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BINARY_ONLY  RTC_ICSR_BIN_0  /*!< Free running Binary mode (BCD mode disabled) */
 789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BINARY_MIX   RTC_ICSR_BIN_1  /*!< Free running BCD calendar and Binary mode enable *
 790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_BINARY_MIX_BCDU  Calendar second incrementation in Binary mix mode
 795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BINARY_MIX_BCDU_0  0x00000000u                    /*!<  1s calendar increment is gen
 798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BINARY_MIX_BCDU_1  (0x1UL << RTC_ICSR_BCDU_Pos)   /*!<  1s calendar increment is gen
 799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BINARY_MIX_BCDU_2  (0x2UL << RTC_ICSR_BCDU_Pos)   /*!<  1s calendar increment is gen
 800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BINARY_MIX_BCDU_3  (0x3UL << RTC_ICSR_BCDU_Pos)   /*!<  1s calendar increment is gen
 801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BINARY_MIX_BCDU_4  (0x4UL << RTC_ICSR_BCDU_Pos)   /*!<  1s calendar increment is gen
 802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BINARY_MIX_BCDU_5  (0x5UL << RTC_ICSR_BCDU_Pos)   /*!<  1s calendar increment is gen
 803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BINARY_MIX_BCDU_6  (0x6UL << RTC_ICSR_BCDU_Pos)   /*!<  1s calendar increment is gen
 804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_BINARY_MIX_BCDU_7  (0x7UL << RTC_ICSR_BCDU_Pos)   /*!<  1s calendar increment is gen
 805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
 809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Exported macro ------------------------------------------------------------*/
 815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Macros RTC Exported Macros
 816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_WRITE_READ Common Write and read registers Macros
 820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Write a value in RTC register
 825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __REG__ Register to be written
 827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __VALUE__ Value to be written in the register
 828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
 829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Read a value in RTC register
 834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __REG__ Register to be read
 836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Register value
 837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define LL_RTC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Convert Convert helper Macros
 844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from 2 digit decimal format to BCD format
 849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __VALUE__ Byte to be converted
 850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Converted byte
 851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BIN2BCD(__VALUE__) (uint8_t)((((__VALUE__) / 10U) << 4U) | ((__VALUE__) % 
 853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from BCD format to 2 digit decimal format
 856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __VALUE__ BCD value to be converted
 857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Converted byte
 858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BCD2BIN(__VALUE__) (uint8_t)(((uint8_t)((__VALUE__) & (uint8_t)0xF0U) >> (
 860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Date Date helper Macros
 866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve weekday.
 871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __RTC_DATE__ Date returned by @ref  LL_RTC_DATE_Get function.
 872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
 874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
 875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
 876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
 877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
 878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
 879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
 880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define __LL_RTC_GET_WEEKDAY(__RTC_DATE__) (((__RTC_DATE__) >> RTC_OFFSET_WEEKDAY) & 0x000000FFU)
 882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Year in BCD format
 885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Year in BCD format (0x00 . . . 0x99)
 887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define __LL_RTC_GET_YEAR(__RTC_DATE__) ((__RTC_DATE__) & 0x000000FFU)
 889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Month in BCD format
 892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
 895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
 896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
 897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
 898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
 899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
 900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
 901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
 902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
 903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
 904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
 905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
 906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define __LL_RTC_GET_MONTH(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_MONTH) & 0x000000FFU)
 908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Day in BCD format
 911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Day in BCD format (0x01 . . . 0x31)
 913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define __LL_RTC_GET_DAY(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_DAY) & 0x000000FFU)
 915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Time Time helper Macros
 921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve hour in BCD format
 926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Hours in BCD format (0x01. . .0x12 or between Min_Data=0x00 and Max_Data=0x23)
 928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define __LL_RTC_GET_HOUR(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_HOUR) & 0x000000FFU)
 930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve minute in BCD format
 933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Minutes in BCD format (0x00. . .0x59)
 935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define __LL_RTC_GET_MINUTE(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_MINUTE) & 0x000000FFU)
 937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve second in BCD format
 940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Seconds in  format (0x00. . .0x59)
 942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #define __LL_RTC_GET_SECOND(__RTC_TIME__) ((__RTC_TIME__) & 0x000000FFU)
 944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
 951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /* Exported functions --------------------------------------------------------*/
 954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Functions RTC Exported Functions
 955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Configuration Configuration
 959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
 960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Hours format (24 hour/day or AM/PM hour format)
 964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           FMT           LL_RTC_SetHourFormat
 967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  HourFormat This parameter can be one of the following values:
 969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
 972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetHourFormat(RTC_TypeDef *RTCx, uint32_t HourFormat)
 974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
 975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_FMT, HourFormat);
 976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Hours format (24 hour/day or AM/PM hour format)
 980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           FMT           LL_RTC_GetHourFormat
 981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
 986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetHourFormat(RTC_TypeDef *RTCx)
 987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
 988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_FMT));
 138              		.loc 2 988 0
 139 0006 8368     		ldr	r3, [r0, #8]
 140              	.LVL5:
 141              	.LBE123:
 142              	.LBE122:
 461:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 462:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 143              		.loc 1 462 0
 144 0008 13F0400F 		tst	r3, #64
 145 000c 01D1     		bne	.L7
 463:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 464:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(RTC_AlarmStruct->AlarmTime.Hours));
 465:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_AlarmStruct->AlarmTime.TimeFormat));
 466:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 467:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 468:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 469:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       RTC_AlarmStruct->AlarmTime.TimeFormat = 0x00U;
 146              		.loc 1 469 0
 147 000e 0023     		movs	r3, #0
 148 0010 1360     		str	r3, [r2]
 149              	.L7:
 150              	.LVL6:
 151              	.LBB124:
 152              	.LBB125:
 989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
 991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
 992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Select the flag to be routed to RTC_ALARM output
 993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           OSEL          LL_RTC_SetAlarmOutEvent
 995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  AlarmOutput This parameter can be one of the following values:
 997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
 998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
 999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
1000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
1001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutEvent(RTC_TypeDef *RTCx, uint32_t AlarmOutput)
1004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_OSEL, AlarmOutput);
1006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get the flag to be routed to RTC_ALARM output
1010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           OSEL          LL_RTC_GetAlarmOutEvent
1011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
1014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
1015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
1016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
1017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutEvent(RTC_TypeDef *RTCx)
1019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_OSEL));
1021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
1024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set RTC_ALARM output type (ALARM in push-pull or open-drain output)
1026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           TAMPALRM_TYPE          LL_RTC_SetAlarmOutputType
1027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Output This parameter can be one of the following values:
1029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
1030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
1031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutputType(RTC_TypeDef *RTCx, uint32_t Output)
1034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_TAMPALRM_TYPE, Output);
1036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get RTC_ALARM output type (ALARM in push-pull or open-drain output)
1040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           TAMPALRM_TYPE          LL_RTC_SetAlarmOutputType
1041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
1044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
1045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutputType(RTC_TypeDef *RTCx)
1047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_TAMPALRM_TYPE));
1049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable initialization mode
1053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Initialization mode is used to program time and date register (RTC_TR and RTC_DR)
1054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         and prescaler register (RTC_PRER).
1055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         Counters are stopped and start counting from the new value when INIT is reset.
1056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR          INIT          LL_RTC_EnableInitMode
1057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableInitMode(RTC_TypeDef *RTCx)
1061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   /* Set the Initialization mode */
1063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->ICSR, RTC_ICSR_INIT);
1064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable initialization mode (Free running mode)
1068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR          INIT          LL_RTC_DisableInitMode
1069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableInitMode(RTC_TypeDef *RTCx)
1073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   /* Exit Initialization mode */
1075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->ICSR, RTC_ICSR_INIT);
1076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
1079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set RTC_ALARM output type (ALARM in push-pull or open-drain output)
1082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Used only when RTC_ALARM is mapped on PC13
1083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll OR        ALARMOUTTYPE  LL_RTC_SetAlarmOutputType
1084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Output This parameter can be one of the following values:
1086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
1087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
1088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutputType(RTC_TypeDef *RTCx, uint32_t Output)
1091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->OR, RTC_OR_ALARMOUTTYPE, Output);
1093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get RTC_ALARM output type (ALARM in push-pull or open-drain output)
1097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   used only when RTC_ALARM is mapped on PC13
1098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll OR        ALARMOUTTYPE  LL_RTC_GetAlarmOutputType
1099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
1102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
1103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutputType(RTC_TypeDef *RTCx)
1105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->OR, RTC_OR_ALARMOUTTYPE));
1107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable initialization mode
1111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Initialization mode is used to program time and date register (RTC_TR and RTC_DR)
1112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         and prescaler register (RTC_PRER).
1113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         Counters are stopped and start counting from the new value when INIT is reset.
1114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_EnableInitMode
1115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableInitMode(RTC_TypeDef *RTCx)
1119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   /* Set the Initialization mode */
1121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, RTC_LL_INIT_MASK);
1122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable initialization mode (Free running mode)
1126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_DisableInitMode
1127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableInitMode(RTC_TypeDef *RTCx)
1131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   /* Exit Initialization mode */
1133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (uint32_t)~RTC_ISR_INIT);
1134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
1136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
1139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Binary mode (Sub Second Register)
1141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function).
1143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR           BIN           LL_RTC_SetBinaryMode
1144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  BinaryMode can be one of the following values:
1146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_NONE
1147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_ONLY
1148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_BINARY_MIX
1149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetBinaryMode(RTC_TypeDef *RTCx, uint32_t BinaryMode)
1152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ICSR, RTC_ICSR_BIN, BinaryMode);
1154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Binary mode (Sub Second Register)
1158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR           BIN           LL_RTC_GetBinaryMode
1159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval This parameter can be one of the following values:
1161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_NONE
1162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_ONLY
1163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_BINARY_MIX
1164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetBinaryMode(RTC_TypeDef *RTCx)
1167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ICSR, RTC_ICSR_BIN));
1169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Binary Mix mode BCDU
1173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function).
1175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR           BCDU          LL_RTC_SetBinMixBCDU
1176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  BinMixBcdU can be one of the following values:
1178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_0
1179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_1
1180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_2
1181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_3
1182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_4
1183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_5
1184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_6
1185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_7
1186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetBinMixBCDU(RTC_TypeDef *RTCx, uint32_t BinMixBcdU)
1189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ICSR, RTC_ICSR_BCDU, BinMixBcdU);
1191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Binary Mix mode BCDU
1195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR           BCDU          LL_RTC_GetBinMixBCDU
1196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval This parameter can be one of the following values:
1198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_0
1199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_1
1200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_2
1201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_3
1202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_4
1203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_5
1204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_6
1205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BINARY_MIX_BCDU_7
1206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetBinMixBCDU(RTC_TypeDef *RTCx)
1209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ICSR, RTC_ICSR_BCDU));
1211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
1213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Output polarity (pin is low when ALRAF/ALRBF/WUTF is asserted)
1217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           POL           LL_RTC_SetOutputPolarity
1219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Polarity This parameter can be one of the following values:
1221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
1222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
1223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetOutputPolarity(RTC_TypeDef *RTCx, uint32_t Polarity)
1226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_POL, Polarity);
1228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Output polarity
1232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           POL           LL_RTC_GetOutputPolarity
1233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
1236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
1237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetOutputPolarity(RTC_TypeDef *RTCx)
1239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_POL));
1241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Bypass the shadow registers
1245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           BYPSHAD       LL_RTC_EnableShadowRegBypass
1247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableShadowRegBypass(RTC_TypeDef *RTCx)
1251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_BYPSHAD);
1253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Bypass the shadow registers
1257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           BYPSHAD       LL_RTC_DisableShadowRegBypass
1258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableShadowRegBypass(RTC_TypeDef *RTCx)
1262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_BYPSHAD);
1264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if Shadow registers bypass is enabled or not.
1268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           BYPSHAD       LL_RTC_IsShadowRegBypassEnabled
1269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
1271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsShadowRegBypassEnabled(RTC_TypeDef *RTCx)
1273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_BYPSHAD) == (RTC_CR_BYPSHAD));
1275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable RTC_REFIN reference clock detection (50 or 60 Hz)
1279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           REFCKON       LL_RTC_EnableRefClock
1282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableRefClock(RTC_TypeDef *RTCx)
1286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_REFCKON);
1288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable RTC_REFIN reference clock detection (50 or 60 Hz)
1292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           REFCKON       LL_RTC_DisableRefClock
1295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableRefClock(RTC_TypeDef *RTCx)
1299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_REFCKON);
1301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Asynchronous prescaler factor
1305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_PRER         PREDIV_A      LL_RTC_SetAsynchPrescaler
1306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  AsynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7F
1308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAsynchPrescaler(RTC_TypeDef *RTCx, uint32_t AsynchPrescaler)
1311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_A, AsynchPrescaler << RTC_PRER_PREDIV_A_Pos);
1313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Synchronous prescaler factor
1317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_PRER         PREDIV_S      LL_RTC_SetSynchPrescaler
1318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  SynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7FFF
1320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetSynchPrescaler(RTC_TypeDef *RTCx, uint32_t SynchPrescaler)
1323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_S, SynchPrescaler);
1325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Asynchronous prescaler factor
1329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_PRER         PREDIV_A      LL_RTC_GetAsynchPrescaler
1330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data = 0 and Max_Data = 0x7F
1332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAsynchPrescaler(RTC_TypeDef *RTCx)
1334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->PRER, RTC_PRER_PREDIV_A) >> RTC_PRER_PREDIV_A_Pos);
1336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Synchronous prescaler factor
1340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_PRER         PREDIV_S      LL_RTC_GetSynchPrescaler
1341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data = 0 and Max_Data = 0x7FFF
1343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetSynchPrescaler(RTC_TypeDef *RTCx)
1345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->PRER, RTC_PRER_PREDIV_S));
1347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable the write protection for RTC registers.
1351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_WPR          KEY           LL_RTC_EnableWriteProtection
1352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableWriteProtection(RTC_TypeDef *RTCx)
1356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_DISABLE);
1358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable the write protection for RTC registers.
1362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_WPR          KEY           LL_RTC_DisableWriteProtection
1363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableWriteProtection(RTC_TypeDef *RTCx)
1367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_1);
 153              		.loc 2 1368 0
 154 0012 CA23     		movs	r3, #202
 155 0014 4362     		str	r3, [r0, #36]
1369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 156              		.loc 2 1369 0
 157 0016 5323     		movs	r3, #83
 158 0018 4362     		str	r3, [r0, #36]
 159              	.LVL7:
 160              	.LBE125:
 161              	.LBE124:
 470:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(RTC_AlarmStruct->AlarmTime.Hours));
 471:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 472:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(RTC_AlarmStruct->AlarmTime.Minutes));
 473:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(RTC_AlarmStruct->AlarmTime.Seconds));
 474:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 475:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE)
 476:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 477:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_DAY(RTC_AlarmStruct->AlarmDateWeekDay));
 478:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 479:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 480:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 481:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_WEEKDAY(RTC_AlarmStruct->AlarmDateWeekDay));
 482:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 483:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 484:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   else
 485:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 486:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 487:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 488:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 489:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_AlarmStruct->AlarmTime.TimeFormat));
 490:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 491:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 492:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 493:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       RTC_AlarmStruct->AlarmTime.TimeFormat = 0x00U;
 494:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 495:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 496:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 497:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Minutes)));
 498:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Seconds)));
 499:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 500:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE)
 501:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 502:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_DAY(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmDateWeekDay)));
 503:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 504:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 505:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 506:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_WEEKDAY(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmDateWeekDay)));
 507:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 508:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 509:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 510:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 511:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 512:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 513:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Select weekday selection */
 514:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMA_DATEWEEKDAYSEL_DATE)
 162              		.loc 1 514 0
 163 001a D368     		ldr	r3, [r2, #12]
 164 001c 33BB     		cbnz	r3, .L9
 165              	.LVL8:
 166              	.LBB126:
 167              	.LBB127:
1370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
1373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable tamper output.
1375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note When the tamper output is enabled, all external and internal tamper flags
1376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       are ORed and routed to the TAMPALRM output.
1377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           TAMPOE       LL_RTC_EnableTamperOutput
1378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableTamperOutput(RTC_TypeDef *RTCx)
1382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_TAMPOE);
1384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable tamper output.
1388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           TAMPOE       LL_RTC_DisableTamperOutput
1389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableTamperOutput(RTC_TypeDef *RTCx)
1393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_TAMPOE);
1395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if tamper output is enabled or not.
1399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           TAMPOE       LL_RTC_IsTamperOutputEnabled
1400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
1402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsTamperOutputEnabled(RTC_TypeDef *RTCx)
1404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_TAMPOE) == (RTC_CR_TAMPOE));
1406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable internal pull-up in output mode.
1410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           TAMPALRM_PU       LL_RTC_EnableAlarmPullUp
1411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableAlarmPullUp(RTC_TypeDef *RTCx)
1415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_TAMPALRM_PU);
1417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable internal pull-up in output mode.
1421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           TAMPALRM_PU       LL_RTC_EnableAlarmPullUp
1422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableAlarmPullUp(RTC_TypeDef *RTCx)
1426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_TAMPALRM_PU);
1428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if internal pull-up in output mode is enabled or not.
1432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           TAMPALRM_PU       LL_RTC_IsAlarmPullUpEnabled
1433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
1435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsAlarmPullUpEnabled(RTC_TypeDef *RTCx)
1437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_TAMPALRM_PU) == (RTC_CR_TAMPALRM_PU));
1439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable RTC_OUT2 output
1443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note RTC_OUT2 mapping depends on both OSEL (@ref LL_RTC_SetAlarmOutEvent)
1444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       and COE (@ref LL_RTC_CAL_SetOutputFreq) settings.
1445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note RTC_OUT2 isn't available ins VBAT mode.
1446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           OUT2EN       LL_RTC_EnableOutput2
1447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableOutput2(RTC_TypeDef *RTCx)
1451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_OUT2EN);
1453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable RTC_OUT2 output
1457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           OUT2EN       LL_RTC_DisableOutput2
1458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableOutput2(RTC_TypeDef *RTCx)
1462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_OUT2EN);
1464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if RTC_OUT2 output is enabled or not.
1468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           OUT2EN       LL_RTC_IsOutput2Enabled
1469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
1471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsOutput2Enabled(RTC_TypeDef *RTCx)
1473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_OUT2EN) == (RTC_CR_OUT2EN));
1475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
1478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable RTC_OUT remap
1481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll OR           OUT_RMP       LL_RTC_EnableOutRemap
1482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableOutRemap(RTC_TypeDef *RTCx)
1486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->OR, RTC_OR_OUT_RMP);
1488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable RTC_OUT remap
1492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll OR           OUT_RMP       LL_RTC_DisableOutRemap
1493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableOutRemap(RTC_TypeDef *RTCx)
1497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->OR, RTC_OR_OUT_RMP);
1499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
1501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
1504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Time Time
1507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
1508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set time format (AM/24-hour or PM notation)
1512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TR           PM            LL_RTC_TIME_SetFormat
1515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
1517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
1522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, RTC_TR_PM, TimeFormat);
1524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get time format (AM or PM notation)
1528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       before reading this bit
1530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TR           PM            LL_RTC_TIME_GetFormat
1533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetFormat(RTC_TypeDef *RTCx)
1539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TR, RTC_TR_PM));
1541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Hours in BCD format
1545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert hour from binary to BCD for
1548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TR           HT            LL_RTC_TIME_SetHour\n
1549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           HU            LL_RTC_TIME_SetHour
1550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
1555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_HT | RTC_TR_HU),
1557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos)));
1558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Hours in BCD format
1562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       before reading this bit
1564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert hour from BCD to
1567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       Binary format
1568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TR           HT            LL_RTC_TIME_GetHour\n
1569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           HU            LL_RTC_TIME_GetHour
1570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
1572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetHour(RTC_TypeDef *RTCx)
1574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->TR, (RTC_TR_HT | RTC_TR_HU))) >> RTC_TR_HU_Pos);
1576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Minutes in BCD format
1580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
1583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TR           MNT           LL_RTC_TIME_SetMinute\n
1584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           MNU           LL_RTC_TIME_SetMinute
1585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
1590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_MNT | RTC_TR_MNU),
1592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos))
1593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Minutes in BCD format
1597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       before reading this bit
1599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert minute from BCD
1602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       to Binary format
1603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TR           MNT           LL_RTC_TIME_GetMinute\n
1604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           MNU           LL_RTC_TIME_GetMinute
1605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetMinute(RTC_TypeDef *RTCx)
1609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->TR, (RTC_TR_MNT | RTC_TR_MNU))) >> RTC_TR_MNU_Pos);
1611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Seconds in BCD format
1615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
1618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TR           ST            LL_RTC_TIME_SetSecond\n
1619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           SU            LL_RTC_TIME_SetSecond
1620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
1625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_ST | RTC_TR_SU),
1627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_TR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_TR_SU_Pos)));
1628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Seconds in BCD format
1632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       before reading this bit
1634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD
1637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       to Binary format
1638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TR           ST            LL_RTC_TIME_GetSecond\n
1639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           SU            LL_RTC_TIME_GetSecond
1640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetSecond(RTC_TypeDef *RTCx)
1644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->TR, (RTC_TR_ST | RTC_TR_SU))) >> RTC_TR_SU_Pos);
1646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set time (hour, minute and second) in BCD format
1650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note TimeFormat and Hours should follow the same format
1653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TR           PM            LL_RTC_TIME_Config\n
1654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           HT            LL_RTC_TIME_Config\n
1655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           HU            LL_RTC_TIME_Config\n
1656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           MNT           LL_RTC_TIME_Config\n
1657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           MNU           LL_RTC_TIME_Config\n
1658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           ST            LL_RTC_TIME_Config\n
1659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           SU            LL_RTC_TIME_Config
1660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
1662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_Config(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours, ui
1670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t temp = 0U;
1672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   temp = Format12_24                                                                               
1674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))     | \
1675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos)) | \
1676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_TR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_TR_SU_Pos));
1677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_PM | RTC_TR_HT | RTC_TR_HU | RTC_TR_MNT | RTC_TR_MNU | RTC_TR_ST | R
1678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get time (hour, minute and second) in BCD format
1682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       before reading this bit
1684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
1687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       are available to get independently each parameter.
1688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TR           HT            LL_RTC_TIME_Get\n
1689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           HU            LL_RTC_TIME_Get\n
1690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           MNT           LL_RTC_TIME_Get\n
1691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           MNU           LL_RTC_TIME_Get\n
1692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           ST            LL_RTC_TIME_Get\n
1693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TR           SU            LL_RTC_TIME_Get
1694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds (Format: 0x00HHMMSS).
1696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_Get(RTC_TypeDef *RTCx)
1698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t temp = 0U;
1700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   temp = READ_BIT(RTCx->TR, (RTC_TR_HT | RTC_TR_HU | RTC_TR_MNT | RTC_TR_MNU | RTC_TR_ST | RTC_TR_S
1702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)((((((temp & RTC_TR_HT) >> RTC_TR_HT_Pos) << 4U) | ((temp & RTC_TR_HU) >> RTC_TR
1703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                     (((((temp & RTC_TR_MNT) >> RTC_TR_MNT_Pos) << 4U) | ((temp & RTC_TR_MNU) >> RTC
1704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                     ((((temp & RTC_TR_ST) >> RTC_TR_ST_Pos) << 4U) | ((temp & RTC_TR_SU) >> RTC_TR_
1705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Memorize whether the daylight saving time change has been performed
1709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           BKP           LL_RTC_TIME_EnableDayLightStore
1711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_EnableDayLightStore(RTC_TypeDef *RTCx)
1715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_BKP);
1717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable memorization whether the daylight saving time change has been performed.
1721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           BKP           LL_RTC_TIME_DisableDayLightStore
1723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_DisableDayLightStore(RTC_TypeDef *RTCx)
1727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_BKP);
1729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if RTC Day Light Saving stored operation has been enabled or not
1733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           BKP           LL_RTC_TIME_IsDayLightStoreEnabled
1734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
1736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_IsDayLightStoreEnabled(RTC_TypeDef *RTCx)
1738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_BKP) == (RTC_CR_BKP));
1740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Subtract 1 hour (winter time change)
1744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           SUB1H         LL_RTC_TIME_DecHour
1746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_DecHour(RTC_TypeDef *RTCx)
1750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_SUB1H);
1752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Add 1 hour (summer time change)
1756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ADD1H         LL_RTC_TIME_IncHour
1758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_IncHour(RTC_TypeDef *RTCx)
1762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ADD1H);
1764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Sub second value in the synchronous prescaler counter.
1768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note  You can use both SubSeconds value and SecondFraction (PREDIV_S through
1769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *        LL_RTC_GetSynchPrescaler function) terms returned to convert Calendar
1770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *        SubSeconds value in second fraction ratio with time unit following
1771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *        generic formula:
1772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *          ==> Seconds fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1
1773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *        This conversion can be performed only if no shift operation is pending
1774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *        (ie. SHFP=0) when PREDIV_S >= SS.
1775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SSR          SS            LL_RTC_TIME_GetSubSecond
1776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval If binary mode is none, Value between Min_Data=0x0 and Max_Data=0x7FFF
1778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         else Value between Min_Data=0x0 and Max_Data=0xFFFFFFFF
1779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetSubSecond(RTC_TypeDef *RTCx)
1781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->SSR, RTC_SSR_SS));
1783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Synchronize to a remote clock with a high degree of precision.
1787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   This operation effectively subtracts from (delays) or advance the clock of a fraction o
1788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   When REFCKON is set, firmware must not write to Shift control register.
1790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SHIFTR       ADD1S         LL_RTC_TIME_Synchronize\n
1791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_SHIFTR       SUBFS         LL_RTC_TIME_Synchronize
1792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  ShiftSecond This parameter can be one of the following values:
1794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_SHIFT_SECOND_DELAY
1795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_SHIFT_SECOND_ADVANCE
1796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Fraction Number of Seconds Fractions (any value from 0 to 0x7FFF)
1797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_Synchronize(RTC_TypeDef *RTCx, uint32_t ShiftSecond, uint32_t Frac
1800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->SHIFTR, ShiftSecond | Fraction);
1802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
1806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Date Date
1809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
1810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Year in BCD format
1814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Year from binary to BCD for
1815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_DR           YT            LL_RTC_DATE_SetYear\n
1816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           YU            LL_RTC_DATE_SetYear
1817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Year Value between Min_Data=0x00 and Max_Data=0x99
1819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetYear(RTC_TypeDef *RTCx, uint32_t Year)
1822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_YT | RTC_DR_YU),
1824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos)));
1825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Year in BCD format
1829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       before reading this bit
1831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Year from BCD to Binary for
1832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_DR           YT            LL_RTC_DATE_GetYear\n
1833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           YU            LL_RTC_DATE_GetYear
1834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x99
1836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetYear(RTC_TypeDef *RTCx)
1838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->DR, (RTC_DR_YT | RTC_DR_YU))) >> RTC_DR_YU_Pos);
1840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Week day
1844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_DR           WDU           LL_RTC_DATE_SetWeekDay
1845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
1857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, RTC_DR_WDU, WeekDay << RTC_DR_WDU_Pos);
1859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Week day
1863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       before reading this bit
1865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_DR           WDU           LL_RTC_DATE_GetWeekDay
1866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetWeekDay(RTC_TypeDef *RTCx)
1877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->DR, RTC_DR_WDU) >> RTC_DR_WDU_Pos);
1879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Month in BCD format
1883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Month from binary to BCD fo
1884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_DR           MT            LL_RTC_DATE_SetMonth\n
1885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           MU            LL_RTC_DATE_SetMonth
1886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Month This parameter can be one of the following values:
1888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetMonth(RTC_TypeDef *RTCx, uint32_t Month)
1903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_MT | RTC_DR_MU),
1905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)));
1906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Month in BCD format
1910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       before reading this bit
1912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Month from BCD to Binary fo
1913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_DR           MT            LL_RTC_DATE_GetMonth\n
1914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           MU            LL_RTC_DATE_GetMonth
1915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetMonth(RTC_TypeDef *RTCx)
1931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->DR, (RTC_DR_MT | RTC_DR_MU))) >> RTC_DR_MU_Pos);
1933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Day in BCD format
1937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
1938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_DR           DT            LL_RTC_DATE_SetDay\n
1939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           DU            LL_RTC_DATE_SetDay
1940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
1945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_DT | RTC_DR_DU),
1947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_DR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_DR_DU_Pos)));
1948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Day in BCD format
1952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       before reading this bit
1954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
1955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_DR           DT            LL_RTC_DATE_GetDay\n
1956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           DU            LL_RTC_DATE_GetDay
1957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
1959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
1960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetDay(RTC_TypeDef *RTCx)
1961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
1962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->DR, (RTC_DR_DT | RTC_DR_DU))) >> RTC_DR_DU_Pos);
1963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
1964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
1965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
1966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set date (WeekDay, Day, Month and Year) in BCD format
1967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_DR           WDU           LL_RTC_DATE_Config\n
1968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           MT            LL_RTC_DATE_Config\n
1969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           MU            LL_RTC_DATE_Config\n
1970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           DT            LL_RTC_DATE_Config\n
1971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           DU            LL_RTC_DATE_Config\n
1972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           YT            LL_RTC_DATE_Config\n
1973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           YU            LL_RTC_DATE_Config
1974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Month This parameter can be one of the following values:
1985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Year Value between Min_Data=0x00 and Max_Data=0x99
1998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
1999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_Config(RTC_TypeDef *RTCx, uint32_t WeekDay, uint32_t Day, uint32_t
2001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t temp = 0U;
2003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   temp = (WeekDay << RTC_DR_WDU_Pos)                                                        | \
2005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
2006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
2007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Day & 0xF0U) << (RTC_DR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_DR_DU_Pos));
2008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_WDU | RTC_DR_MT | RTC_DR_MU | RTC_DR_DT | RTC_DR_DU | RTC_DR_YT | RT
2010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get date (WeekDay, Day, Month and Year) in BCD format
2014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
2015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       before reading this bit
2016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_WEEKDAY, __LL_RTC_GET_YEAR, __LL_RTC_GET_MONTH,
2017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * and __LL_RTC_GET_DAY are available to get independently each parameter.
2018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_DR           WDU           LL_RTC_DATE_Get\n
2019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           MT            LL_RTC_DATE_Get\n
2020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           MU            LL_RTC_DATE_Get\n
2021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           DT            LL_RTC_DATE_Get\n
2022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           DU            LL_RTC_DATE_Get\n
2023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           YT            LL_RTC_DATE_Get\n
2024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_DR           YU            LL_RTC_DATE_Get
2025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Combination of WeekDay, Day, Month and Year (Format: 0xWWDDMMYY).
2027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_Get(RTC_TypeDef *RTCx)
2029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t temp = 0U;
2031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   temp = READ_BIT(RTCx->DR, (RTC_DR_WDU | RTC_DR_MT | RTC_DR_MU | RTC_DR_DT | RTC_DR_DU | RTC_DR_YT
2033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_DR_WDU) >> RTC_DR_WDU_Pos) << RTC_OFFSET_WEEKDAY) | \
2034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                     (((((temp & RTC_DR_DT) >> RTC_DR_DT_Pos) << 4U) | ((temp & RTC_DR_DU) >> RTC_DR
2035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                     (((((temp & RTC_DR_MT) >> RTC_DR_MT_Pos) << 4U) | ((temp & RTC_DR_MU) >> RTC_DR
2036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                     ((((temp & RTC_DR_YT) >> RTC_DR_YT_Pos) << 4U) | ((temp & RTC_DR_YU) >> RTC_DR_
2037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
2041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_ALARMA ALARMA
2044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
2045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Alarm A
2049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ALRAE         LL_RTC_ALMA_Enable
2051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_Enable(RTC_TypeDef *RTCx)
2055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ALRAE);
2057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Alarm A
2061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ALRAE         LL_RTC_ALMA_Disable
2063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_Disable(RTC_TypeDef *RTCx)
2067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ALRAE);
2069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Specify the Alarm A masks.
2073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       MSK4          LL_RTC_ALMA_SetMask\n
2074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MSK3          LL_RTC_ALMA_SetMask\n
2075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MSK2          LL_RTC_ALMA_SetMask\n
2076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MSK1          LL_RTC_ALMA_SetMask
2077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
2079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_NONE
2080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_DATEWEEKDAY
2081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_HOURS
2082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_MINUTES
2083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_SECONDS
2084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_ALL
2085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetMask(RTC_TypeDef *RTCx, uint32_t Mask)
2088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | RTC_ALRMAR_MSK1, M
2090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get the Alarm A masks.
2094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       MSK4          LL_RTC_ALMA_GetMask\n
2095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MSK3          LL_RTC_ALMA_GetMask\n
2096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MSK2          LL_RTC_ALMA_GetMask\n
2097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MSK1          LL_RTC_ALMA_GetMask
2098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be can be a combination of the following values:
2100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_NONE
2101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_DATEWEEKDAY
2102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_HOURS
2103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_MINUTES
2104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_SECONDS
2105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_ALL
2106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetMask(RTC_TypeDef *RTCx)
2108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | RT
2110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable AlarmA Week day selection (DU[3:0] represents the week day. DT[1:0] is do not ca
2114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       WDSEL         LL_RTC_ALMA_EnableWeekday
2115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_EnableWeekday(RTC_TypeDef *RTCx)
2119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->ALRMAR, RTC_ALRMAR_WDSEL);
2121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable AlarmA Week day selection (DU[3:0] represents the date )
2125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       WDSEL         LL_RTC_ALMA_DisableWeekday
2126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_DisableWeekday(RTC_TypeDef *RTCx)
2130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->ALRMAR, RTC_ALRMAR_WDSEL);
 168              		.loc 2 2131 0
 169 001e C369     		ldr	r3, [r0, #28]
 170 0020 23F08043 		bic	r3, r3, #1073741824
 171 0024 C361     		str	r3, [r0, #28]
 172              	.LVL9:
 173              	.LBE127:
 174              	.LBE126:
 515:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 516:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Set the date for ALARM */
 517:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_ALMA_DisableWeekday(RTCx);
 518:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (RTC_Format != LL_RTC_FORMAT_BIN)
 175              		.loc 1 518 0
 176 0026 74B1     		cbz	r4, .L10
 519:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 520:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       LL_RTC_ALMA_SetDay(RTCx, RTC_AlarmStruct->AlarmDateWeekDay);
 177              		.loc 1 520 0
 178 0028 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 179              	.LVL10:
 180              	.LBB128:
 181              	.LBB129:
2132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set ALARM A Day in BCD format
2136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
2137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       DT            LL_RTC_ALMA_SetDay\n
2138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       DU            LL_RTC_ALMA_SetDay
2139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
2141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
2144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_DT | RTC_ALRMAR_DU),
 182              		.loc 2 2145 0
 183 002a C369     		ldr	r3, [r0, #28]
 184 002c 23F07C53 		bic	r3, r3, #1056964608
 185 0030 43EA0163 		orr	r3, r3, r1, lsl #24
 186 0034 C361     		str	r3, [r0, #28]
 187 0036 24E0     		b	.L11
 188              	.LVL11:
 189              	.L5:
 190              	.LBE129:
 191              	.LBE128:
 192              	.LBB130:
 193              	.LBB131:
 988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 194              		.loc 2 988 0
 195 0038 8368     		ldr	r3, [r0, #8]
 196              	.LVL12:
 197              	.LBE131:
 198              	.LBE130:
 486:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 199              		.loc 1 486 0
 200 003a 13F0400F 		tst	r3, #64
 201 003e E8D1     		bne	.L7
 493:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 202              		.loc 1 493 0
 203 0040 0023     		movs	r3, #0
 204 0042 1360     		str	r3, [r2]
 205 0044 E5E7     		b	.L7
 206              	.L10:
 521:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 522:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 523:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 524:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       LL_RTC_ALMA_SetDay(RTCx, __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmDateWeekDay));
 207              		.loc 1 524 0
 208 0046 157C     		ldrb	r5, [r2, #16]	@ zero_extendqisi2
 209 0048 384B     		ldr	r3, .L16
 210 004a A3FB0513 		umull	r1, r3, r3, r5
 211              	.LVL13:
 212 004e DB08     		lsrs	r3, r3, #3
 213 0050 1901     		lsls	r1, r3, #4
 214 0052 C9B2     		uxtb	r1, r1
 215 0054 03EB8303 		add	r3, r3, r3, lsl #2
 216 0058 5E00     		lsls	r6, r3, #1
 217 005a AB1B     		subs	r3, r5, r6
 218 005c 1943     		orrs	r1, r1, r3
 219              	.LVL14:
 220              	.LBB132:
 221              	.LBB133:
 222              		.loc 2 2145 0
 223 005e C369     		ldr	r3, [r0, #28]
 224 0060 23F07C53 		bic	r3, r3, #1056964608
 225 0064 43EA0163 		orr	r3, r3, r1, lsl #24
 226 0068 C361     		str	r3, [r0, #28]
 227 006a 0AE0     		b	.L11
 228              	.LVL15:
 229              	.L9:
 230              	.LBE133:
 231              	.LBE132:
 232              	.LBB134:
 233              	.LBB135:
2120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 234              		.loc 2 2120 0
 235 006c C369     		ldr	r3, [r0, #28]
 236 006e 43F08043 		orr	r3, r3, #1073741824
 237 0072 C361     		str	r3, [r0, #28]
 238              	.LVL16:
 239              	.LBE135:
 240              	.LBE134:
 525:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 526:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 527:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   else
 528:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 529:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Set the week day for ALARM */
 530:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_ALMA_EnableWeekday(RTCx);
 531:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_ALMA_SetWeekDay(RTCx, RTC_AlarmStruct->AlarmDateWeekDay);
 241              		.loc 1 531 0
 242 0074 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 243              	.LVL17:
 244              	.LBB136:
 245              	.LBB137:
2146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_ALRMAR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_ALRMAR_DU_Pos)));
2147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get ALARM A Day in BCD format
2151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
2152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       DT            LL_RTC_ALMA_GetDay\n
2153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       DU            LL_RTC_ALMA_GetDay
2154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
2156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetDay(RTC_TypeDef *RTCx)
2158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_DT | RTC_ALRMAR_DU))) >> RTC_ALRMAR_DU_Pos);
2160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set ALARM A Weekday
2164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       DU            LL_RTC_ALMA_SetWeekDay
2165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
2167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
2177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_DU, WeekDay << RTC_ALRMAR_DU_Pos);
 246              		.loc 2 2178 0
 247 0076 C369     		ldr	r3, [r0, #28]
 248 0078 23F07063 		bic	r3, r3, #251658240
 249 007c 43EA0163 		orr	r3, r3, r1, lsl #24
 250 0080 C361     		str	r3, [r0, #28]
 251              	.LVL18:
 252              	.L11:
 253              	.LBE137:
 254              	.LBE136:
 532:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 533:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 534:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Configure the Alarm register */
 535:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (RTC_Format != LL_RTC_FORMAT_BIN)
 255              		.loc 1 535 0
 256 0082 002C     		cmp	r4, #0
 257 0084 40D1     		bne	.L15
 536:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 537:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_ALMA_ConfigTime(RTCx, RTC_AlarmStruct->AlarmTime.TimeFormat, RTC_AlarmStruct->AlarmTime.
 538:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                            RTC_AlarmStruct->AlarmTime.Minutes, RTC_AlarmStruct->AlarmTime.Seconds);
 539:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 540:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   else
 541:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 542:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_ALMA_ConfigTime(RTCx, RTC_AlarmStruct->AlarmTime.TimeFormat,
 258              		.loc 1 542 0
 259 0086 1168     		ldr	r1, [r2]
 543:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Hours),
 260              		.loc 1 543 0
 261 0088 1679     		ldrb	r6, [r2, #4]	@ zero_extendqisi2
 262 008a 284B     		ldr	r3, .L16
 263 008c A3FB0654 		umull	r5, r4, r3, r6
 264              	.LVL19:
 265 0090 E408     		lsrs	r4, r4, #3
 266 0092 2501     		lsls	r5, r4, #4
 267 0094 EDB2     		uxtb	r5, r5
 268 0096 04EB8404 		add	r4, r4, r4, lsl #2
 269 009a 6700     		lsls	r7, r4, #1
 270 009c F61B     		subs	r6, r6, r7
 271 009e 3543     		orrs	r5, r5, r6
 272 00a0 EDB2     		uxtb	r5, r5
 544:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Minutes),
 273              		.loc 1 544 0
 274 00a2 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
 275 00a4 A3FB0764 		umull	r6, r4, r3, r7
 276 00a8 E408     		lsrs	r4, r4, #3
 277 00aa 2601     		lsls	r6, r4, #4
 278 00ac F6B2     		uxtb	r6, r6
 279 00ae 04EB8404 		add	r4, r4, r4, lsl #2
 280 00b2 4FEA440C 		lsl	ip, r4, #1
 281 00b6 A7EB0C07 		sub	r7, r7, ip
 282 00ba 3E43     		orrs	r6, r6, r7
 283 00bc F6B2     		uxtb	r6, r6
 545:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Seconds));
 284              		.loc 1 545 0
 285 00be 9779     		ldrb	r7, [r2, #6]	@ zero_extendqisi2
 286 00c0 A3FB0743 		umull	r4, r3, r3, r7
 287 00c4 DB08     		lsrs	r3, r3, #3
 288 00c6 1C01     		lsls	r4, r3, #4
 289 00c8 E4B2     		uxtb	r4, r4
 290 00ca 03EB8303 		add	r3, r3, r3, lsl #2
 291 00ce 4FEA430C 		lsl	ip, r3, #1
 292 00d2 A7EB0C03 		sub	r3, r7, ip
 293 00d6 2343     		orrs	r3, r3, r4
 294 00d8 DBB2     		uxtb	r3, r3
 295              	.LVL20:
 296              	.LBB138:
 297              	.LBB139:
2179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get ALARM A Weekday
2183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       DU            LL_RTC_ALMA_GetWeekDay
2184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetWeekDay(RTC_TypeDef *RTCx)
2195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_DU) >> RTC_ALRMAR_DU_Pos);
2197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Alarm A time format (AM/24-hour or PM notation)
2201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       PM            LL_RTC_ALMA_SetTimeFormat
2202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
2204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
2205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
2206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetTimeFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
2209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_PM, TimeFormat);
2211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm A time format (AM or PM notation)
2215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       PM            LL_RTC_ALMA_GetTimeFormat
2216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
2219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
2220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetTimeFormat(RTC_TypeDef *RTCx)
2222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_PM));
2224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set ALARM A Hours in BCD format
2228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Hours from binary to BCD fo
2229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       HT            LL_RTC_ALMA_SetHour\n
2230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       HU            LL_RTC_ALMA_SetHour
2231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
2233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
2236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_HT | RTC_ALRMAR_HU),
2238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_ALRMAR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALRMAR_HU_Pos
2239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get ALARM A Hours in BCD format
2243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
2244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       HT            LL_RTC_ALMA_GetHour\n
2245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       HU            LL_RTC_ALMA_GetHour
2246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
2248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetHour(RTC_TypeDef *RTCx)
2250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_HT | RTC_ALRMAR_HU))) >> RTC_ALRMAR_HU_Pos);
2252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set ALARM A Minutes in BCD format
2256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
2257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       MNT           LL_RTC_ALMA_SetMinute\n
2258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MNU           LL_RTC_ALMA_SetMinute
2259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
2261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
2264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU),
2266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_M
2267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get ALARM A Minutes in BCD format
2271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
2272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       MNT           LL_RTC_ALMA_GetMinute\n
2273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MNU           LL_RTC_ALMA_GetMinute
2274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetMinute(RTC_TypeDef *RTCx)
2278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU))) >> RTC_ALRMAR_MNU_Pos);
2280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set ALARM A Seconds in BCD format
2284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
2285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       ST            LL_RTC_ALMA_SetSecond\n
2286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       SU            LL_RTC_ALMA_SetSecond
2287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
2289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
2292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_ST | RTC_ALRMAR_SU),
2294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_ALRMAR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMAR_SU
2295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get ALARM A Seconds in BCD format
2299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
2300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       ST            LL_RTC_ALMA_GetSecond\n
2301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       SU            LL_RTC_ALMA_GetSecond
2302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSecond(RTC_TypeDef *RTCx)
2306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_ST | RTC_ALRMAR_SU))) >> RTC_ALRMAR_SU_Pos);
2308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Alarm A Time (hour, minute and second) in BCD format
2312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       PM            LL_RTC_ALMA_ConfigTime\n
2313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       HT            LL_RTC_ALMA_ConfigTime\n
2314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       HU            LL_RTC_ALMA_ConfigTime\n
2315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MNT           LL_RTC_ALMA_ConfigTime\n
2316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MNU           LL_RTC_ALMA_ConfigTime\n
2317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       ST            LL_RTC_ALMA_ConfigTime\n
2318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       SU            LL_RTC_ALMA_ConfigTime
2319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
2321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
2322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
2323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
2324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
2325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
2326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_ConfigTime(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours
2329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t temp = 0U;
2331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   temp = Format12_24 | (((Hours & 0xF0U) << (RTC_ALRMAR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALR
 298              		.loc 2 2332 0
 299 00da 41EA0541 		orr	r1, r1, r5, lsl #16
 300              	.LVL21:
 301 00de 41EA0626 		orr	r6, r1, r6, lsl #8
 302              	.LVL22:
 303 00e2 3343     		orrs	r3, r3, r6
 304              	.LVL23:
2333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_MNU_P
2334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_ALRMAR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMAR_SU_Pos
2335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_PM | RTC_ALRMAR_HT | RTC_ALRMAR_HU | RTC_ALRMAR_MNT | RTC_ALR
 305              		.loc 2 2336 0
 306 00e4 C169     		ldr	r1, [r0, #28]
 307 00e6 21F07F11 		bic	r1, r1, #8323199
 308 00ea 21F4FE41 		bic	r1, r1, #32512
 309 00ee 0B43     		orrs	r3, r3, r1
 310              	.LVL24:
 311 00f0 C361     		str	r3, [r0, #28]
 312              	.LVL25:
 313              	.L13:
 314              	.LBE139:
 315              	.LBE138:
 546:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 547:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Set ALARM mask */
 548:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_ALMA_SetMask(RTCx, RTC_AlarmStruct->AlarmMask);
 316              		.loc 1 548 0
 317 00f2 9368     		ldr	r3, [r2, #8]
 318              	.LVL26:
 319              	.LBB140:
 320              	.LBB141:
2089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 321              		.loc 2 2089 0
 322 00f4 C269     		ldr	r2, [r0, #28]
 323              	.LVL27:
 324 00f6 02F07F32 		and	r2, r2, #2139062143
 325 00fa 1343     		orrs	r3, r3, r2
 326              	.LVL28:
 327 00fc C361     		str	r3, [r0, #28]
 328              	.LVL29:
 329              	.LBE141:
 330              	.LBE140:
 331              	.LBB142:
 332              	.LBB143:
1357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 333              		.loc 2 1357 0
 334 00fe FF23     		movs	r3, #255
 335 0100 4362     		str	r3, [r0, #36]
 336              	.LVL30:
 337              	.LBE143:
 338              	.LBE142:
 549:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 550:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 551:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 552:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 553:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   return SUCCESS;
 554:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 339              		.loc 1 554 0
 340 0102 0020     		movs	r0, #0
 341              	.LVL31:
 342 0104 F0BC     		pop	{r4, r5, r6, r7}
 343              		.cfi_remember_state
 344              		.cfi_restore 7
 345              		.cfi_restore 6
 346              		.cfi_restore 5
 347              		.cfi_restore 4
 348              		.cfi_def_cfa_offset 0
 349 0106 7047     		bx	lr
 350              	.LVL32:
 351              	.L15:
 352              		.cfi_restore_state
 537:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                            RTC_AlarmStruct->AlarmTime.Minutes, RTC_AlarmStruct->AlarmTime.Seconds);
 353              		.loc 1 537 0
 354 0108 1168     		ldr	r1, [r2]
 355 010a 1579     		ldrb	r5, [r2, #4]	@ zero_extendqisi2
 538:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 356              		.loc 1 538 0
 357 010c 5479     		ldrb	r4, [r2, #5]	@ zero_extendqisi2
 358              	.LVL33:
 359 010e 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 360              	.LVL34:
 361              	.LBB144:
 362              	.LBB145:
2332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_MNU_P
 363              		.loc 2 2332 0
 364 0110 41EA0541 		orr	r1, r1, r5, lsl #16
 365              	.LVL35:
 366 0114 41EA0421 		orr	r1, r1, r4, lsl #8
 367 0118 0B43     		orrs	r3, r3, r1
 368              	.LVL36:
 369              		.loc 2 2336 0
 370 011a C169     		ldr	r1, [r0, #28]
 371 011c 21F07F11 		bic	r1, r1, #8323199
 372 0120 21F4FE41 		bic	r1, r1, #32512
 373 0124 0B43     		orrs	r3, r3, r1
 374              	.LVL37:
 375 0126 C361     		str	r3, [r0, #28]
 376              	.LVL38:
 377 0128 E3E7     		b	.L13
 378              	.L17:
 379 012a 00BF     		.align	2
 380              	.L16:
 381 012c CDCCCCCC 		.word	-858993459
 382              	.LBE145:
 383              	.LBE144:
 384              		.cfi_endproc
 385              	.LFE364:
 387              		.section	.text.LL_RTC_ALMB_Init,"ax",%progbits
 388              		.align	1
 389              		.global	LL_RTC_ALMB_Init
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu fpv4-sp-d16
 395              	LL_RTC_ALMB_Init:
 396              	.LFB365:
 555:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 556:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 557:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Set the RTC Alarm B.
 558:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
 559:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         is disabled (@ref LL_RTC_ALMB_Disable function).
 560:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 561:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_Format This parameter can be one of the following values:
 562:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BIN
 563:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         @arg @ref LL_RTC_FORMAT_BCD
 564:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_AlarmStruct pointer to a @ref LL_RTC_AlarmTypeDef structure that
 565:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *                         contains the alarm configuration parameters.
 566:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 567:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - SUCCESS: ALARMB registers are configured
 568:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - ERROR: ALARMB registers are not configured
 569:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 570:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** ErrorStatus LL_RTC_ALMB_Init(RTC_TypeDef *RTCx, uint32_t RTC_Format, LL_RTC_AlarmTypeDef *RTC_Alarm
 571:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
 397              		.loc 1 571 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402              	.LVL39:
 403 0000 F0B4     		push	{r4, r5, r6, r7}
 404              		.cfi_def_cfa_offset 16
 405              		.cfi_offset 4, -16
 406              		.cfi_offset 5, -12
 407              		.cfi_offset 6, -8
 408              		.cfi_offset 7, -4
 572:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Check the parameters */
 573:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 574:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_FORMAT(RTC_Format));
 575:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ALMB_MASK(RTC_AlarmStruct->AlarmMask));
 576:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_LL_RTC_ALMB_DATE_WEEKDAY_SEL(RTC_AlarmStruct->AlarmDateWeekDaySel));
 577:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 578:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (RTC_Format == LL_RTC_FORMAT_BIN)
 409              		.loc 1 578 0
 410 0002 0C46     		mov	r4, r1
 411 0004 C1B9     		cbnz	r1, .L19
 412              	.LVL40:
 413              	.LBB146:
 414              	.LBB147:
 988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 415              		.loc 2 988 0
 416 0006 8368     		ldr	r3, [r0, #8]
 417              	.LVL41:
 418              	.LBE147:
 419              	.LBE146:
 579:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 580:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 420              		.loc 1 580 0
 421 0008 13F0400F 		tst	r3, #64
 422 000c 01D1     		bne	.L21
 581:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 582:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(RTC_AlarmStruct->AlarmTime.Hours));
 583:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_AlarmStruct->AlarmTime.TimeFormat));
 584:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 585:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 586:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 587:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       RTC_AlarmStruct->AlarmTime.TimeFormat = 0x00U;
 423              		.loc 1 587 0
 424 000e 0023     		movs	r3, #0
 425 0010 1360     		str	r3, [r2]
 426              	.L21:
 427              	.LVL42:
 428              	.LBB148:
 429              	.LBB149:
1368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 430              		.loc 2 1368 0
 431 0012 CA23     		movs	r3, #202
 432 0014 4362     		str	r3, [r0, #36]
1369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 433              		.loc 2 1369 0
 434 0016 5323     		movs	r3, #83
 435 0018 4362     		str	r3, [r0, #36]
 436              	.LVL43:
 437              	.LBE149:
 438              	.LBE148:
 588:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(RTC_AlarmStruct->AlarmTime.Hours));
 589:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 590:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(RTC_AlarmStruct->AlarmTime.Minutes));
 591:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(RTC_AlarmStruct->AlarmTime.Seconds));
 592:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 593:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMB_DATEWEEKDAYSEL_DATE)
 594:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 595:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_DAY(RTC_AlarmStruct->AlarmDateWeekDay));
 596:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 597:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 598:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 599:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_WEEKDAY(RTC_AlarmStruct->AlarmDateWeekDay));
 600:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 601:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 602:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   else
 603:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 604:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (LL_RTC_GetHourFormat(RTCx) != LL_RTC_HOURFORMAT_24HOUR)
 605:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 606:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR12(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 607:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_TIME_FORMAT(RTC_AlarmStruct->AlarmTime.TimeFormat));
 608:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 609:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 610:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 611:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       RTC_AlarmStruct->AlarmTime.TimeFormat = 0x00U;
 612:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 613:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 614:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 615:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_MINUTES(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Minutes)));
 616:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     assert_param(IS_LL_RTC_SECONDS(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Seconds)));
 617:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 618:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMB_DATEWEEKDAYSEL_DATE)
 619:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 620:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_DAY(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmDateWeekDay)));
 621:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 622:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 623:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 624:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_WEEKDAY(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmDateWeekDay)));
 625:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 626:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 627:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 628:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Disable the write protection for RTC registers */
 629:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_DisableWriteProtection(RTCx);
 630:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 631:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Select weekday selection */
 632:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (RTC_AlarmStruct->AlarmDateWeekDaySel == LL_RTC_ALMB_DATEWEEKDAYSEL_DATE)
 439              		.loc 1 632 0
 440 001a D368     		ldr	r3, [r2, #12]
 441 001c 33BB     		cbnz	r3, .L23
 442              	.LVL44:
 443              	.LBB150:
 444              	.LBB151:
2337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm B Time (hour, minute and second) in BCD format
2341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
2342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * are available to get independently each parameter.
2343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMAR       HT            LL_RTC_ALMA_GetTime\n
2344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       HU            LL_RTC_ALMA_GetTime\n
2345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MNT           LL_RTC_ALMA_GetTime\n
2346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       MNU           LL_RTC_ALMA_GetTime\n
2347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       ST            LL_RTC_ALMA_GetTime\n
2348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMAR       SU            LL_RTC_ALMA_GetTime
2349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
2351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetTime(RTC_TypeDef *RTCx)
2353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)((LL_RTC_ALMA_GetHour(RTCx) << RTC_OFFSET_HOUR) | (LL_RTC_ALMA_GetMinute(RTCx) <
2355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Alarm A Mask the most-significant bits starting at this bit
2359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note This register can be written only when ALRAE is reset in RTC_CR register,
2360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       or in initialization mode.
2361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMASSR     MASKSS        LL_RTC_ALMA_SetSubSecondMask
2362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Mask If binary mode is none, Value between Min_Data=0x0 and Max_Data=0xF
2364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *              else Value between Min_Data=0x0 and Max_Data=0x3F
2365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSubSecondMask(RTC_TypeDef *RTCx, uint32_t Mask)
2368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMASSR, RTC_ALRMASSR_MASKSS, Mask << RTC_ALRMASSR_MASKSS_Pos);
2370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm A Mask the most-significant bits starting at this bit
2374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMASSR     MASKSS        LL_RTC_ALMA_GetSubSecondMask
2375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval If binary mode is none, Value between Min_Data=0x0 and Max_Data=0xF
2377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         else Value between Min_Data=0x0 and Max_Data=0x3F
2378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSubSecondMask(RTC_TypeDef *RTCx)
2380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMASSR, RTC_ALRMASSR_MASKSS) >> RTC_ALRMASSR_MASKSS_Pos);
2382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Alarm A Binary mode auto clear
2387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note This register can be written only when ALRAE is reset in RTC_CR register,
2388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       or in initialization mode.
2389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRABINR     SSCLR        LL_RTC_ALMA_SetBinAutoClr
2390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  BinaryAutoClr This parameter can be one of the following values:
2392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_SUBSECONDBIN_AUTOCLR_NO
2393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_SUBSECONDBIN_AUTOCLR_YES
2394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetBinAutoClr(RTC_TypeDef *RTCx, uint32_t BinaryAutoClr)
2397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMASSR, RTC_ALRMASSR_SSCLR, BinaryAutoClr);
2399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm A Binary mode auto clear
2403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRABINR     SSCLR        LL_RTC_ALMA_GetBinAutoClr
2404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval It can be one of the following values:
2406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_SUBSECONDBIN_AUTOCLR_NO
2407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_SUBSECONDBIN_AUTOCLR_YES
2408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetBinAutoClr(RTC_TypeDef *RTCx)
2410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMASSR, RTC_ALRMASSR_SSCLR));
2412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Alarm A Sub seconds value
2416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMABINR     SS            LL_RTC_ALMA_SetSubSecond
2417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Subsecond  If binary mode is none, Value between Min_Data=0x0 and Max_Data=0x7FFF
2419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *                    else Value between Min_Data=0x0 and Max_Data=0xFFFFFFFF
2420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSubSecond(RTC_TypeDef *RTCx, uint32_t Subsecond)
2423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRABINR, RTC_ALRABINR_SS, Subsecond);
2425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm A Sub seconds value
2429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMABINR     SS            LL_RTC_ALMA_GetSubSecond
2430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval If binary mode is none, Value between Min_Data=0x0 and Max_Data=0x7FFF
2432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         else Value between Min_Data=0x0 and Max_Data=0xFFFFFFFF
2433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSubSecond(RTC_TypeDef *RTCx)
2435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRABINR, RTC_ALRABINR_SS));
2437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #else /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
2439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Alarm A Sub seconds value
2442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RCT_ALRMASSR     SS            LL_RTC_ALMA_SetSubSecond
2443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Subsecond Value between Min_Data=0x00 and Max_Data=0x7FFF
2445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSubSecond(RTC_TypeDef *RTCx, uint32_t Subsecond)
2448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMASSR, RTC_ALRMASSR_SS, Subsecond);
2450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm A Sub seconds value
2454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RCT_ALRMASSR     SS            LL_RTC_ALMA_GetSubSecond
2455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7FFF
2457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSubSecond(RTC_TypeDef *RTCx)
2459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMASSR, RTC_ALRMASSR_SS));
2461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
2463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
2466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_ALARMB ALARMB
2469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
2470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Alarm B
2474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ALRBE         LL_RTC_ALMB_Enable
2476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_Enable(RTC_TypeDef *RTCx)
2480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ALRBE);
2482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Alarm B
2486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ALRBE         LL_RTC_ALMB_Disable
2488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_Disable(RTC_TypeDef *RTCx)
2492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ALRBE);
2494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Specify the Alarm B masks.
2498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       MSK4          LL_RTC_ALMB_SetMask\n
2499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MSK3          LL_RTC_ALMB_SetMask\n
2500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MSK2          LL_RTC_ALMB_SetMask\n
2501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MSK1          LL_RTC_ALMB_SetMask
2502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
2504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_NONE
2505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_DATEWEEKDAY
2506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_HOURS
2507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_MINUTES
2508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_SECONDS
2509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_ALL
2510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetMask(RTC_TypeDef *RTCx, uint32_t Mask)
2513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | RTC_ALRMBR_MSK1, M
2515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get the Alarm B masks.
2519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       MSK4          LL_RTC_ALMB_GetMask\n
2520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MSK3          LL_RTC_ALMB_GetMask\n
2521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MSK2          LL_RTC_ALMB_GetMask\n
2522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MSK1          LL_RTC_ALMB_GetMask
2523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be can be a combination of the following values:
2525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_NONE
2526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_DATEWEEKDAY
2527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_HOURS
2528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_MINUTES
2529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_SECONDS
2530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_ALL
2531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetMask(RTC_TypeDef *RTCx)
2533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | RT
2535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable AlarmB Week day selection (DU[3:0] represents the week day. DT[1:0] is do not ca
2539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       WDSEL         LL_RTC_ALMB_EnableWeekday
2540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_EnableWeekday(RTC_TypeDef *RTCx)
2544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->ALRMBR, RTC_ALRMBR_WDSEL);
2546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable AlarmB Week day selection (DU[3:0] represents the date )
2550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       WDSEL         LL_RTC_ALMB_DisableWeekday
2551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_DisableWeekday(RTC_TypeDef *RTCx)
2555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->ALRMBR, RTC_ALRMBR_WDSEL);
 445              		.loc 2 2556 0
 446 001e 036A     		ldr	r3, [r0, #32]
 447 0020 23F08043 		bic	r3, r3, #1073741824
 448 0024 0362     		str	r3, [r0, #32]
 449              	.LVL45:
 450              	.LBE151:
 451              	.LBE150:
 633:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 634:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Set the date for ALARM */
 635:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_ALMB_DisableWeekday(RTCx);
 636:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (RTC_Format != LL_RTC_FORMAT_BIN)
 452              		.loc 1 636 0
 453 0026 74B1     		cbz	r4, .L24
 637:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 638:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       LL_RTC_ALMB_SetDay(RTCx, RTC_AlarmStruct->AlarmDateWeekDay);
 454              		.loc 1 638 0
 455 0028 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 456              	.LVL46:
 457              	.LBB152:
 458              	.LBB153:
2557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set ALARM B Day in BCD format
2561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
2562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       DT            LL_RTC_ALMB_SetDay\n
2563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       DU            LL_RTC_ALMB_SetDay
2564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
2566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
2569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_DT | RTC_ALRMBR_DU),
 459              		.loc 2 2570 0
 460 002a 036A     		ldr	r3, [r0, #32]
 461 002c 23F07C53 		bic	r3, r3, #1056964608
 462 0030 43EA0163 		orr	r3, r3, r1, lsl #24
 463 0034 0362     		str	r3, [r0, #32]
 464 0036 24E0     		b	.L25
 465              	.LVL47:
 466              	.L19:
 467              	.LBE153:
 468              	.LBE152:
 469              	.LBB154:
 470              	.LBB155:
 988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 471              		.loc 2 988 0
 472 0038 8368     		ldr	r3, [r0, #8]
 473              	.LVL48:
 474              	.LBE155:
 475              	.LBE154:
 604:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 476              		.loc 1 604 0
 477 003a 13F0400F 		tst	r3, #64
 478 003e E8D1     		bne	.L21
 611:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_AlarmStruct->AlarmTime.Hours)));
 479              		.loc 1 611 0
 480 0040 0023     		movs	r3, #0
 481 0042 1360     		str	r3, [r2]
 482 0044 E5E7     		b	.L21
 483              	.L24:
 639:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 640:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     else
 641:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 642:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       LL_RTC_ALMB_SetDay(RTCx, __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmDateWeekDay));
 484              		.loc 1 642 0
 485 0046 157C     		ldrb	r5, [r2, #16]	@ zero_extendqisi2
 486 0048 384B     		ldr	r3, .L30
 487 004a A3FB0513 		umull	r1, r3, r3, r5
 488              	.LVL49:
 489 004e DB08     		lsrs	r3, r3, #3
 490 0050 1901     		lsls	r1, r3, #4
 491 0052 C9B2     		uxtb	r1, r1
 492 0054 03EB8303 		add	r3, r3, r3, lsl #2
 493 0058 5E00     		lsls	r6, r3, #1
 494 005a AB1B     		subs	r3, r5, r6
 495 005c 1943     		orrs	r1, r1, r3
 496              	.LVL50:
 497              	.LBB156:
 498              	.LBB157:
 499              		.loc 2 2570 0
 500 005e 036A     		ldr	r3, [r0, #32]
 501 0060 23F07C53 		bic	r3, r3, #1056964608
 502 0064 43EA0163 		orr	r3, r3, r1, lsl #24
 503 0068 0362     		str	r3, [r0, #32]
 504 006a 0AE0     		b	.L25
 505              	.LVL51:
 506              	.L23:
 507              	.LBE157:
 508              	.LBE156:
 509              	.LBB158:
 510              	.LBB159:
2545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 511              		.loc 2 2545 0
 512 006c 036A     		ldr	r3, [r0, #32]
 513 006e 43F08043 		orr	r3, r3, #1073741824
 514 0072 0362     		str	r3, [r0, #32]
 515              	.LVL52:
 516              	.LBE159:
 517              	.LBE158:
 643:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 644:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 645:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   else
 646:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 647:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Set the week day for ALARM */
 648:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_ALMB_EnableWeekday(RTCx);
 649:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_ALMB_SetWeekDay(RTCx, RTC_AlarmStruct->AlarmDateWeekDay);
 518              		.loc 1 649 0
 519 0074 117C     		ldrb	r1, [r2, #16]	@ zero_extendqisi2
 520              	.LVL53:
 521              	.LBB160:
 522              	.LBB161:
2571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_ALRMBR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_ALRMBR_DU_Pos)));
2572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get ALARM B Day in BCD format
2576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
2577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       DT            LL_RTC_ALMB_GetDay\n
2578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       DU            LL_RTC_ALMB_GetDay
2579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
2581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetDay(RTC_TypeDef *RTCx)
2583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_DT | RTC_ALRMBR_DU))) >> RTC_ALRMBR_DU_Pos);
2585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set ALARM B Weekday
2589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       DU            LL_RTC_ALMB_SetWeekDay
2590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
2592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
2602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_DU, WeekDay << RTC_ALRMBR_DU_Pos);
 523              		.loc 2 2603 0
 524 0076 036A     		ldr	r3, [r0, #32]
 525 0078 23F07063 		bic	r3, r3, #251658240
 526 007c 43EA0163 		orr	r3, r3, r1, lsl #24
 527 0080 0362     		str	r3, [r0, #32]
 528              	.LVL54:
 529              	.L25:
 530              	.LBE161:
 531              	.LBE160:
 650:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 651:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 652:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Configure the Alarm register */
 653:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (RTC_Format != LL_RTC_FORMAT_BIN)
 532              		.loc 1 653 0
 533 0082 002C     		cmp	r4, #0
 534 0084 40D1     		bne	.L29
 654:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 655:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_ALMB_ConfigTime(RTCx, RTC_AlarmStruct->AlarmTime.TimeFormat, RTC_AlarmStruct->AlarmTime.
 656:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                            RTC_AlarmStruct->AlarmTime.Minutes, RTC_AlarmStruct->AlarmTime.Seconds);
 657:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 658:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   else
 659:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 660:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_ALMB_ConfigTime(RTCx, RTC_AlarmStruct->AlarmTime.TimeFormat,
 535              		.loc 1 660 0
 536 0086 1168     		ldr	r1, [r2]
 661:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Hours),
 537              		.loc 1 661 0
 538 0088 1679     		ldrb	r6, [r2, #4]	@ zero_extendqisi2
 539 008a 284B     		ldr	r3, .L30
 540 008c A3FB0654 		umull	r5, r4, r3, r6
 541              	.LVL55:
 542 0090 E408     		lsrs	r4, r4, #3
 543 0092 2501     		lsls	r5, r4, #4
 544 0094 EDB2     		uxtb	r5, r5
 545 0096 04EB8404 		add	r4, r4, r4, lsl #2
 546 009a 6700     		lsls	r7, r4, #1
 547 009c F61B     		subs	r6, r6, r7
 548 009e 3543     		orrs	r5, r5, r6
 549 00a0 EDB2     		uxtb	r5, r5
 662:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Minutes),
 550              		.loc 1 662 0
 551 00a2 5779     		ldrb	r7, [r2, #5]	@ zero_extendqisi2
 552 00a4 A3FB0764 		umull	r6, r4, r3, r7
 553 00a8 E408     		lsrs	r4, r4, #3
 554 00aa 2601     		lsls	r6, r4, #4
 555 00ac F6B2     		uxtb	r6, r6
 556 00ae 04EB8404 		add	r4, r4, r4, lsl #2
 557 00b2 4FEA440C 		lsl	ip, r4, #1
 558 00b6 A7EB0C07 		sub	r7, r7, ip
 559 00ba 3E43     		orrs	r6, r6, r7
 560 00bc F6B2     		uxtb	r6, r6
 663:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                            __LL_RTC_CONVERT_BIN2BCD(RTC_AlarmStruct->AlarmTime.Seconds));
 561              		.loc 1 663 0
 562 00be 9779     		ldrb	r7, [r2, #6]	@ zero_extendqisi2
 563 00c0 A3FB0743 		umull	r4, r3, r3, r7
 564 00c4 DB08     		lsrs	r3, r3, #3
 565 00c6 1C01     		lsls	r4, r3, #4
 566 00c8 E4B2     		uxtb	r4, r4
 567 00ca 03EB8303 		add	r3, r3, r3, lsl #2
 568 00ce 4FEA430C 		lsl	ip, r3, #1
 569 00d2 A7EB0C03 		sub	r3, r7, ip
 570 00d6 2343     		orrs	r3, r3, r4
 571 00d8 DBB2     		uxtb	r3, r3
 572              	.LVL56:
 573              	.LBB162:
 574              	.LBB163:
2604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get ALARM B Weekday
2608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       DU            LL_RTC_ALMB_GetWeekDay
2609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetWeekDay(RTC_TypeDef *RTCx)
2620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_DU) >> RTC_ALRMBR_DU_Pos);
2622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set ALARM B time format (AM/24-hour or PM notation)
2626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       PM            LL_RTC_ALMB_SetTimeFormat
2627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
2629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetTimeFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
2634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_PM, TimeFormat);
2636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get ALARM B time format (AM or PM notation)
2640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       PM            LL_RTC_ALMB_GetTimeFormat
2641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetTimeFormat(RTC_TypeDef *RTCx)
2647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_PM));
2649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set ALARM B Hours in BCD format
2653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Hours from binary to BCD fo
2654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       HT            LL_RTC_ALMB_SetHour\n
2655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       HU            LL_RTC_ALMB_SetHour
2656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
2658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
2661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_HT | RTC_ALRMBR_HU),
2663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_ALRMBR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALRMBR_HU_Pos
2664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get ALARM B Hours in BCD format
2668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
2669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       HT            LL_RTC_ALMB_GetHour\n
2670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       HU            LL_RTC_ALMB_GetHour
2671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
2673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetHour(RTC_TypeDef *RTCx)
2675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_HT | RTC_ALRMBR_HU))) >> RTC_ALRMBR_HU_Pos);
2677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set ALARM B Minutes in BCD format
2681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
2682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       MNT           LL_RTC_ALMB_SetMinute\n
2683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MNU           LL_RTC_ALMB_SetMinute
2684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Minutes between Min_Data=0x00 and Max_Data=0x59
2686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
2689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU),
2691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_ALRMBR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMBR_M
2692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get ALARM B Minutes in BCD format
2696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
2697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       MNT           LL_RTC_ALMB_GetMinute\n
2698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MNU           LL_RTC_ALMB_GetMinute
2699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetMinute(RTC_TypeDef *RTCx)
2703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU))) >> RTC_ALRMBR_MNU_Pos);
2705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set ALARM B Seconds in BCD format
2709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
2710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       ST            LL_RTC_ALMB_SetSecond\n
2711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       SU            LL_RTC_ALMB_SetSecond
2712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
2714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
2717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_ST | RTC_ALRMBR_SU),
2719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_ALRMBR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMBR_SU
2720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get ALARM B Seconds in BCD format
2724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
2725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       ST            LL_RTC_ALMB_GetSecond\n
2726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       SU            LL_RTC_ALMB_GetSecond
2727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSecond(RTC_TypeDef *RTCx)
2731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_ST | RTC_ALRMBR_SU))) >> RTC_ALRMBR_SU_Pos);
2733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Alarm B Time (hour, minute and second) in BCD format
2737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       PM            LL_RTC_ALMB_ConfigTime\n
2738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       HT            LL_RTC_ALMB_ConfigTime\n
2739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       HU            LL_RTC_ALMB_ConfigTime\n
2740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MNT           LL_RTC_ALMB_ConfigTime\n
2741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MNU           LL_RTC_ALMB_ConfigTime\n
2742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       ST            LL_RTC_ALMB_ConfigTime\n
2743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       SU            LL_RTC_ALMB_ConfigTime
2744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
2746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
2749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
2750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
2751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_ConfigTime(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours
2754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t temp = 0U;
2756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   temp = Format12_24 | (((Hours & 0xF0U) << (RTC_ALRMBR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALR
 575              		.loc 2 2757 0
 576 00da 41EA0541 		orr	r1, r1, r5, lsl #16
 577              	.LVL57:
 578 00de 41EA0626 		orr	r6, r1, r6, lsl #8
 579              	.LVL58:
 580 00e2 3343     		orrs	r3, r3, r6
 581              	.LVL59:
2758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMBR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMBR_MNU_P
2759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_ALRMBR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMBR_SU_Pos
2760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_PM | RTC_ALRMBR_HT | RTC_ALRMBR_HU | RTC_ALRMBR_MNT | RTC_ALR
 582              		.loc 2 2761 0
 583 00e4 016A     		ldr	r1, [r0, #32]
 584 00e6 21F07F11 		bic	r1, r1, #8323199
 585 00ea 21F4FE41 		bic	r1, r1, #32512
 586 00ee 0B43     		orrs	r3, r3, r1
 587              	.LVL60:
 588 00f0 0362     		str	r3, [r0, #32]
 589              	.LVL61:
 590              	.L27:
 591              	.LBE163:
 592              	.LBE162:
 664:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 665:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Set ALARM mask */
 666:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_ALMB_SetMask(RTCx, RTC_AlarmStruct->AlarmMask);
 593              		.loc 1 666 0
 594 00f2 9368     		ldr	r3, [r2, #8]
 595              	.LVL62:
 596              	.LBB164:
 597              	.LBB165:
2514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 598              		.loc 2 2514 0
 599 00f4 026A     		ldr	r2, [r0, #32]
 600              	.LVL63:
 601 00f6 02F07F32 		and	r2, r2, #2139062143
 602 00fa 1343     		orrs	r3, r3, r2
 603              	.LVL64:
 604 00fc 0362     		str	r3, [r0, #32]
 605              	.LVL65:
 606              	.LBE165:
 607              	.LBE164:
 608              	.LBB166:
 609              	.LBB167:
1357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 610              		.loc 2 1357 0
 611 00fe FF23     		movs	r3, #255
 612 0100 4362     		str	r3, [r0, #36]
 613              	.LVL66:
 614              	.LBE167:
 615              	.LBE166:
 667:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 668:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Enable the write protection for RTC registers */
 669:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_EnableWriteProtection(RTCx);
 670:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 671:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   return SUCCESS;
 672:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 616              		.loc 1 672 0
 617 0102 0020     		movs	r0, #0
 618              	.LVL67:
 619 0104 F0BC     		pop	{r4, r5, r6, r7}
 620              		.cfi_remember_state
 621              		.cfi_restore 7
 622              		.cfi_restore 6
 623              		.cfi_restore 5
 624              		.cfi_restore 4
 625              		.cfi_def_cfa_offset 0
 626 0106 7047     		bx	lr
 627              	.LVL68:
 628              	.L29:
 629              		.cfi_restore_state
 655:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                            RTC_AlarmStruct->AlarmTime.Minutes, RTC_AlarmStruct->AlarmTime.Seconds);
 630              		.loc 1 655 0
 631 0108 1168     		ldr	r1, [r2]
 632 010a 1579     		ldrb	r5, [r2, #4]	@ zero_extendqisi2
 656:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 633              		.loc 1 656 0
 634 010c 5479     		ldrb	r4, [r2, #5]	@ zero_extendqisi2
 635              	.LVL69:
 636 010e 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 637              	.LVL70:
 638              	.LBB168:
 639              	.LBB169:
2757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMBR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMBR_MNU_P
 640              		.loc 2 2757 0
 641 0110 41EA0541 		orr	r1, r1, r5, lsl #16
 642              	.LVL71:
 643 0114 41EA0421 		orr	r1, r1, r4, lsl #8
 644 0118 0B43     		orrs	r3, r3, r1
 645              	.LVL72:
 646              		.loc 2 2761 0
 647 011a 016A     		ldr	r1, [r0, #32]
 648 011c 21F07F11 		bic	r1, r1, #8323199
 649 0120 21F4FE41 		bic	r1, r1, #32512
 650 0124 0B43     		orrs	r3, r3, r1
 651              	.LVL73:
 652 0126 0362     		str	r3, [r0, #32]
 653              	.LVL74:
 654 0128 E3E7     		b	.L27
 655              	.L31:
 656 012a 00BF     		.align	2
 657              	.L30:
 658 012c CDCCCCCC 		.word	-858993459
 659              	.LBE169:
 660              	.LBE168:
 661              		.cfi_endproc
 662              	.LFE365:
 664              		.section	.text.LL_RTC_ALMA_StructInit,"ax",%progbits
 665              		.align	1
 666              		.global	LL_RTC_ALMA_StructInit
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu fpv4-sp-d16
 672              	LL_RTC_ALMA_StructInit:
 673              	.LFB366:
 673:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 674:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 675:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_AlarmTypeDef of ALARMA field to default value (Time = 00h:00mn:00s
 676:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         Day = 1st day of the month/Mask = all fields are masked).
 677:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_AlarmStruct pointer to a @ref LL_RTC_AlarmTypeDef structure which will be initializ
 678:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval None
 679:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 680:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** void LL_RTC_ALMA_StructInit(LL_RTC_AlarmTypeDef *RTC_AlarmStruct)
 681:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
 674              		.loc 1 681 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679              	.LVL75:
 682:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
 683:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.TimeFormat = LL_RTC_ALMA_TIME_FORMAT_AM;
 680              		.loc 1 683 0
 681 0000 0023     		movs	r3, #0
 682 0002 0360     		str	r3, [r0]
 684:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Hours      = 0U;
 683              		.loc 1 684 0
 684 0004 0371     		strb	r3, [r0, #4]
 685:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Minutes    = 0U;
 685              		.loc 1 685 0
 686 0006 4371     		strb	r3, [r0, #5]
 686:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Seconds    = 0U;
 687              		.loc 1 686 0
 688 0008 8371     		strb	r3, [r0, #6]
 687:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 688:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Alarm Day Settings : Day = 1st day of the month */
 689:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmDateWeekDaySel = LL_RTC_ALMA_DATEWEEKDAYSEL_DATE;
 689              		.loc 1 689 0
 690 000a C360     		str	r3, [r0, #12]
 690:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmDateWeekDay    = 1U;
 691              		.loc 1 690 0
 692 000c 0122     		movs	r2, #1
 693 000e 0274     		strb	r2, [r0, #16]
 691:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 692:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Alarm Masks Settings : Mask =  all fields are not masked */
 693:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmMask           = LL_RTC_ALMA_MASK_NONE;
 694              		.loc 1 693 0
 695 0010 8360     		str	r3, [r0, #8]
 694:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 696              		.loc 1 694 0
 697 0012 7047     		bx	lr
 698              		.cfi_endproc
 699              	.LFE366:
 701              		.section	.text.LL_RTC_ALMB_StructInit,"ax",%progbits
 702              		.align	1
 703              		.global	LL_RTC_ALMB_StructInit
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv4-sp-d16
 709              	LL_RTC_ALMB_StructInit:
 710              	.LFB367:
 695:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 696:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 697:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Set each @ref LL_RTC_AlarmTypeDef of ALARMA field to default value (Time = 00h:00mn:00s
 698:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         Day = 1st day of the month/Mask = all fields are masked).
 699:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTC_AlarmStruct pointer to a @ref LL_RTC_AlarmTypeDef structure which will be initializ
 700:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval None
 701:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 702:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** void LL_RTC_ALMB_StructInit(LL_RTC_AlarmTypeDef *RTC_AlarmStruct)
 703:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
 711              		.loc 1 703 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 716              	.LVL76:
 704:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Alarm Time Settings : Time = 00h:00mn:00sec */
 705:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.TimeFormat = LL_RTC_ALMB_TIME_FORMAT_AM;
 717              		.loc 1 705 0
 718 0000 0023     		movs	r3, #0
 719 0002 0360     		str	r3, [r0]
 706:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Hours      = 0U;
 720              		.loc 1 706 0
 721 0004 0371     		strb	r3, [r0, #4]
 707:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Minutes    = 0U;
 722              		.loc 1 707 0
 723 0006 4371     		strb	r3, [r0, #5]
 708:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmTime.Seconds    = 0U;
 724              		.loc 1 708 0
 725 0008 8371     		strb	r3, [r0, #6]
 709:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 710:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Alarm Day Settings : Day = 1st day of the month */
 711:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmDateWeekDaySel = LL_RTC_ALMB_DATEWEEKDAYSEL_DATE;
 726              		.loc 1 711 0
 727 000a C360     		str	r3, [r0, #12]
 712:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmDateWeekDay    = 1U;
 728              		.loc 1 712 0
 729 000c 0122     		movs	r2, #1
 730 000e 0274     		strb	r2, [r0, #16]
 713:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 714:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Alarm Masks Settings : Mask =  all fields are not masked */
 715:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   RTC_AlarmStruct->AlarmMask           = LL_RTC_ALMB_MASK_NONE;
 731              		.loc 1 715 0
 732 0010 8360     		str	r3, [r0, #8]
 716:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 733              		.loc 1 716 0
 734 0012 7047     		bx	lr
 735              		.cfi_endproc
 736              	.LFE367:
 738              		.section	.text.LL_RTC_EnterInitMode,"ax",%progbits
 739              		.align	1
 740              		.global	LL_RTC_EnterInitMode
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	LL_RTC_EnterInitMode:
 747              	.LFB368:
 717:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 718:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 719:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Enters the RTC Initialization mode.
 720:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
 721:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         @ref LL_RTC_DisableWriteProtection before calling this function.
 722:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 723:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 724:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - SUCCESS: RTC is in Init mode
 725:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - ERROR: RTC is not in Init mode
 726:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 727:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** ErrorStatus LL_RTC_EnterInitMode(RTC_TypeDef *RTCx)
 728:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
 748              		.loc 1 728 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 8
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 753              	.LVL77:
 754 0000 82B0     		sub	sp, sp, #8
 755              		.cfi_def_cfa_offset 8
 729:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   __IO uint32_t timeout = RTC_INITMODE_TIMEOUT;
 756              		.loc 1 729 0
 757 0002 4FF47A73 		mov	r3, #1000
 758 0006 0193     		str	r3, [sp, #4]
 759              	.LVL78:
 760              	.LBB170:
 761              	.LBB171:
2762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm B Time (hour, minute and second) in BCD format
2766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
2767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * are available to get independently each parameter.
2768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBR       HT            LL_RTC_ALMB_GetTime\n
2769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       HU            LL_RTC_ALMB_GetTime\n
2770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MNT           LL_RTC_ALMB_GetTime\n
2771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       MNU           LL_RTC_ALMB_GetTime\n
2772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       ST            LL_RTC_ALMB_GetTime\n
2773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_ALRMBR       SU            LL_RTC_ALMB_GetTime
2774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
2776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetTime(RTC_TypeDef *RTCx)
2778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)((LL_RTC_ALMB_GetHour(RTCx) << RTC_OFFSET_HOUR) | (LL_RTC_ALMB_GetMinute(RTCx) <
2780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Alarm B Mask the most-significant bits starting at this bit
2784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note This register can be written only when ALRBE is reset in RTC_CR register,
2785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       or in initialization mode.
2786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBSSR     MASKSS        LL_RTC_ALMB_SetSubSecondMask
2787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Mask If binary mode is none, Value between Min_Data=0x0 and Max_Data=0xF
2789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *              else Value between Min_Data=0x0 and Max_Data=0x3F
2790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSubSecondMask(RTC_TypeDef *RTCx, uint32_t Mask)
2793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBSSR, RTC_ALRMBSSR_MASKSS, Mask << RTC_ALRMBSSR_MASKSS_Pos);
2795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm B Mask the most-significant bits starting at this bit
2799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBSSR     MASKSS        LL_RTC_ALMB_GetSubSecondMask
2800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval If binary mode is none, Value between Min_Data=0x0 and Max_Data=0xF
2802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         else Value between Min_Data=0x0 and Max_Data=0x3F
2803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSubSecondMask(RTC_TypeDef *RTCx)
2805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBSSR, RTC_ALRMBSSR_MASKSS) >> RTC_ALRMBSSR_MASKSS_Pos);
2807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
2810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Alarm B Binary mode auto clear
2812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note This register can be written only when ALRBE is reset in RTC_CR register,
2813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *       or in initialization mode.
2814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRBBINR     SSCLR        LL_RTC_ALMB_SetBinAutoClr
2815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  BinaryAutoClr This parameter can be one of the following values:
2817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_SUBSECONDBIN_AUTOCLR_NO
2818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_SUBSECONDBIN_AUTOCLR_YES
2819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetBinAutoClr(RTC_TypeDef *RTCx, uint32_t BinaryAutoClr)
2822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBSSR, RTC_ALRMBSSR_SSCLR, BinaryAutoClr);
2824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm B Binary mode auto clear
2828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRBBINR     SSCLR        LL_RTC_ALMB_GetBinAutoClr
2829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval It can be one of the following values:
2831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_SUBSECONDBIN_AUTOCLR_NO
2832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_SUBSECONDBIN_AUTOCLR_YES
2833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetBinAutoClr(RTC_TypeDef *RTCx)
2835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBSSR, RTC_ALRMBSSR_SSCLR));
2837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Alarm B Sub seconds value
2841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBBINR     SS            LL_RTC_ALMB_SetSubSecond
2842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Subsecond  If binary mode is none, Value between Min_Data=0x0 and Max_Data=0x7FFF
2844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *                    else Value between Min_Data=0x0 and Max_Data=0xFFFFFFFF
2845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSubSecond(RTC_TypeDef *RTCx, uint32_t Subsecond)
2848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRBBINR, RTC_ALRBBINR_SS, Subsecond);
2850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm B Sub seconds value
2854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBBINR     SS            LL_RTC_ALMB_GetSubSecond
2855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval If binary mode is none, Value between Min_Data=0x0 and Max_Data=0x7FFF
2857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         else Value between Min_Data=0x0 and Max_Data=0xFFFFFFFF
2858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSubSecond(RTC_TypeDef *RTCx)
2860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRBBINR, RTC_ALRBBINR_SS));
2862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #else /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
2864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Alarm B Sub seconds value
2867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBSSR     SS            LL_RTC_ALMB_SetSubSecond
2868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Subsecond Value between Min_Data=0x00 and Max_Data=0x7FFF
2870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSubSecond(RTC_TypeDef *RTCx, uint32_t Subsecond)
2873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBSSR, RTC_ALRMBSSR_SS, Subsecond);
2875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm B Sub seconds value
2879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ALRMBSSR     SS            LL_RTC_ALMB_GetSubSecond
2880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7FFF
2882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSubSecond(RTC_TypeDef *RTCx)
2884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBSSR, RTC_ALRMBSSR_SS));
2886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
2888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
2891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Timestamp Timestamp
2894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
2895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable internal event timestamp
2899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ITSE          LL_RTC_TS_EnableInternalEvent
2901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_EnableInternalEvent(RTC_TypeDef *RTCx)
2905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ITSE);
2907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable internal event timestamp
2911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ITSE          LL_RTC_TS_DisableInternalEvent
2913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_DisableInternalEvent(RTC_TypeDef *RTCx)
2917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ITSE);
2919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Timestamp
2923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ITSE           LL_RTC_TS_Enable
2925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_Enable(RTC_TypeDef *RTCx)
2929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_TSE);
2931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Timestamp
2935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ITSE           LL_RTC_TS_Disable
2937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_Disable(RTC_TypeDef *RTCx)
2941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_TSE);
2943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Time-stamp event active edge
2947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note TSE must be reset when TSEDGE is changed to avoid unwanted TSF setting
2949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ITSEDGE        LL_RTC_TS_SetActiveEdge
2950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Edge This parameter can be one of the following values:
2952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_RISING
2953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_FALLING
2954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
2955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_SetActiveEdge(RTC_TypeDef *RTCx, uint32_t Edge)
2957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_TSEDGE, Edge);
2959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Time-stamp event active edge
2963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ITSEDGE        LL_RTC_TS_GetActiveEdge
2965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_RISING
2968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_FALLING
2969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetActiveEdge(RTC_TypeDef *RTCx)
2971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_TSEDGE));
2973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Timestamp AM/PM notation (AM or 24-hour format)
2977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TSTR         PM            LL_RTC_TS_GetTimeFormat
2978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TS_TIME_FORMAT_AM
2981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TS_TIME_FORMAT_PM
2982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetTimeFormat(RTC_TypeDef *RTCx)
2984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_PM));
2986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
2987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
2988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
2989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Timestamp Hours in BCD format
2990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
2991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TSTR         HT            LL_RTC_TS_GetHour\n
2992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSTR         HU            LL_RTC_TS_GetHour
2993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
2995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
2996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetHour(RTC_TypeDef *RTCx)
2997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
2998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_HT | RTC_TSTR_HU) >> RTC_TSTR_HU_Pos);
2999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Timestamp Minutes in BCD format
3003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
3004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TSTR         MNT           LL_RTC_TS_GetMinute\n
3005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSTR         HU           LL_RTC_TS_GetMinute
3006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
3008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetMinute(RTC_TypeDef *RTCx)
3010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_MNT | RTC_TSTR_MNU) >> RTC_TSTR_MNU_Pos);
3012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Timestamp Seconds in BCD format
3016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
3017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TSTR         ST            LL_RTC_TS_GetSecond\n
3018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSTR         HU            LL_RTC_TS_GetSecond
3019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
3021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetSecond(RTC_TypeDef *RTCx)
3023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_ST | RTC_TSTR_SU));
3025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Timestamp time (hour, minute and second) in BCD format
3029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
3030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * are available to get independently each parameter.
3031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TSTR         HT            LL_RTC_TS_GetTime\n
3032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSTR         HU            LL_RTC_TS_GetTime\n
3033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSTR         MNT           LL_RTC_TS_GetTime\n
3034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSTR         MNU           LL_RTC_TS_GetTime\n
3035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSTR         ST            LL_RTC_TS_GetTime\n
3036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSTR         SU            LL_RTC_TS_GetTime
3037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
3039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetTime(RTC_TypeDef *RTCx)
3041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR,
3043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****                              RTC_TSTR_HT | RTC_TSTR_HU | RTC_TSTR_MNT | RTC_TSTR_MNU | RTC_TSTR_ST 
3044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Timestamp Week day
3048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TSDR         WDU           LL_RTC_TS_GetWeekDay
3049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
3052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
3053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
3054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
3055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
3056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
3057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
3058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetWeekDay(RTC_TypeDef *RTCx)
3060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_WDU) >> RTC_TSDR_WDU_Pos);
3062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Timestamp Month in BCD format
3066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Month from BCD to Binary fo
3067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TSDR         MT            LL_RTC_TS_GetMonth\n
3068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSDR         MU            LL_RTC_TS_GetMonth
3069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
3072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
3073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
3074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
3075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
3076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
3077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
3078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
3079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
3080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
3081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
3082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
3083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetMonth(RTC_TypeDef *RTCx)
3085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_MT | RTC_TSDR_MU) >> RTC_TSDR_MU_Pos);
3087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Timestamp Day in BCD format
3091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
3092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TSDR         DT            LL_RTC_TS_GetDay\n
3093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSDR         DU            LL_RTC_TS_GetDay
3094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
3096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetDay(RTC_TypeDef *RTCx)
3098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_DT | RTC_TSDR_DU));
3100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Timestamp date (WeekDay, Day and Month) in BCD format
3104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_WEEKDAY, __LL_RTC_GET_MONTH,
3105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * and __LL_RTC_GET_DAY are available to get independently each parameter.
3106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TSDR         WDU           LL_RTC_TS_GetDate\n
3107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSDR         MT            LL_RTC_TS_GetDate\n
3108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSDR         MU            LL_RTC_TS_GetDate\n
3109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSDR         DT            LL_RTC_TS_GetDate\n
3110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_TSDR         DU            LL_RTC_TS_GetDate
3111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Combination of Weekday, Day and Month
3113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetDate(RTC_TypeDef *RTCx)
3115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_WDU | RTC_TSDR_MT | RTC_TSDR_MU | RTC_TSDR_DT | R
3117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get time-stamp sub second value
3121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_TSSSR         SS            LL_RTC_TS_GetSubSecond
3122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval If binary mode is none, Value between Min_Data=0x0 and Max_Data=0x7FFF
3124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         else Value between Min_Data=0x0 and Max_Data=0xFFFFFFFF
3125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetSubSecond(RTC_TypeDef *RTCx)
3127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSSSR, RTC_TSSSR_SS));
3129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
3133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_WAKEUP_SUPPORT)
3136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Wakeup Wakeup
3137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
3138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Wakeup timer
3142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           WUTE          LL_RTC_WAKEUP_Enable
3144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_Enable(RTC_TypeDef *RTCx)
3148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_WUTE);
3150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Wakeup timer
3154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           WUTE          LL_RTC_WAKEUP_Disable
3156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_Disable(RTC_TypeDef *RTCx)
3160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_WUTE);
3162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if Wakeup timer is enabled or not
3166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           WUTE          LL_RTC_WAKEUP_IsEnabled
3167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_IsEnabled(RTC_TypeDef *RTCx)
3171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_WUTE) == (RTC_CR_WUTE));
3173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Select Wakeup clock
3177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Bit can be written only when RTC_CR WUTE bit = 0 and RTC_ISR WUTWF bit = 1
3179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           WUCKSEL       LL_RTC_WAKEUP_SetClock
3180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  WakeupClock This parameter can be one of the following values:
3182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_16
3183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_8
3184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_4
3185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_2
3186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE
3187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE_WUT
3188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_SetClock(RTC_TypeDef *RTCx, uint32_t WakeupClock)
3191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_WUCKSEL, WakeupClock);
3193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Wakeup clock
3197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           WUCKSEL       LL_RTC_WAKEUP_GetClock
3198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_16
3201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_8
3202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_4
3203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_2
3204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE
3205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE_WUT
3206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_GetClock(RTC_TypeDef *RTCx)
3208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_WUCKSEL));
3210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Wakeup auto-reload value
3214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Bit can be written only when WUTWF is set to 1 in RTC_ISR
3215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_WUTR         WUT           LL_RTC_WAKEUP_SetAutoReload
3216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Value Value between Min_Data=0x00 and Max_Data=0xFFFF
3218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_SetAutoReload(RTC_TypeDef *RTCx, uint32_t Value)
3221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->WUTR, RTC_WUTR_WUT, Value);
3223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Wakeup auto-reload value
3227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_WUTR         WUT           LL_RTC_WAKEUP_GetAutoReload
3228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
3230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_GetAutoReload(RTC_TypeDef *RTCx)
3232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->WUTR, RTC_WUTR_WUT));
3234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
3237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Wakeup auto-clear value
3239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Bit can be written only when WUTWF is set to 1 in RTC_ISR
3240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_WUTR         WUTOCLR           LL_RTC_WAKEUP_SetAutoClr
3241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Value Value between Min_Data=0x00 and Max_Data=0xFFFF
3243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_SetAutoClr(RTC_TypeDef *RTCx, uint32_t Value)
3246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->WUTR, RTC_WUTR_WUTOCLR, (Value << RTC_WUTR_WUTOCLR_Pos));
3248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Wakeup auto-clear value
3252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_WUTR         WUTOCLR           LL_RTC_WAKEUP_GetAutoClr
3253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
3255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_GetAutoClr(RTC_TypeDef *RTCx)
3257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->WUTR, RTC_WUTR_WUTOCLR)) >> RTC_WUTR_WUTOCLR_Pos);
3259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4
3261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
3264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_WAKEUP_SUPPORT */
3266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Calibration Calibration
3268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
3269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Calibration output frequency (1 Hz or 512 Hz)
3273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Bits are write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           COE           LL_RTC_CAL_SetOutputFreq\n
3275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_CR           COSEL         LL_RTC_CAL_SetOutputFreq
3276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Frequency This parameter can be one of the following values:
3278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_NONE
3279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_1HZ
3280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_512HZ
3281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetOutputFreq(RTC_TypeDef *RTCx, uint32_t Frequency)
3284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_COE | RTC_CR_COSEL, Frequency);
3286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Calibration output frequency (1 Hz or 512 Hz)
3290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           COE           LL_RTC_CAL_GetOutputFreq\n
3291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_CR           COSEL         LL_RTC_CAL_GetOutputFreq
3292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_NONE
3295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_1HZ
3296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_512HZ
3297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetOutputFreq(RTC_TypeDef *RTCx)
3299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_COE | RTC_CR_COSEL));
3301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Insert or not One RTCCLK pulse every 2exp11 pulses (frequency increased by 488.5 ppm)
3305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Bit can be written only when RECALPF is set to 0
3307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CALR         CALP          LL_RTC_CAL_SetPulse
3308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Pulse This parameter can be one of the following values:
3310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_INSERTPULSE_NONE
3311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_INSERTPULSE_SET
3312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetPulse(RTC_TypeDef *RTCx, uint32_t Pulse)
3315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALP, Pulse);
3317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if one RTCCLK has been inserted or not every 2exp11 pulses (frequency increased b
3321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CALR         CALP          LL_RTC_CAL_IsPulseInserted
3322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_IsPulseInserted(RTC_TypeDef *RTCx)
3326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CALR, RTC_CALR_CALP) == (RTC_CALR_CALP));
3328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set the calibration cycle period
3332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit can be written only when RECALPF is set to 0
3334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CALR         CALW8         LL_RTC_CAL_SetPeriod\n
3335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_CALR         CALW16        LL_RTC_CAL_SetPeriod
3336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Period This parameter can be one of the following values:
3338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_32SEC
3339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_16SEC
3340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_8SEC
3341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetPeriod(RTC_TypeDef *RTCx, uint32_t Period)
3344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALW8 | RTC_CALR_CALW16, Period);
3346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get the calibration cycle period
3350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CALR         CALW8         LL_RTC_CAL_GetPeriod\n
3351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         RTC_CALR         CALW16        LL_RTC_CAL_GetPeriod
3352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_32SEC
3355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_16SEC
3356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_8SEC
3357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetPeriod(RTC_TypeDef *RTCx)
3359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CALR, RTC_CALR_CALW8 | RTC_CALR_CALW16));
3361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Calibration minus
3365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit can be written only when RECALPF is set to 0
3367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CALR         CALM          LL_RTC_CAL_SetMinus
3368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  CalibMinus Value between Min_Data=0x00 and Max_Data=0x1FF
3370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetMinus(RTC_TypeDef *RTCx, uint32_t CalibMinus)
3373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALM, CalibMinus);
3375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Calibration minus
3379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CALR         CALM          LL_RTC_CAL_GetMinus
3380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data= 0x1FF
3382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetMinus(RTC_TypeDef *RTCx)
3384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CALR, RTC_CALR_CALM));
3386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
3389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Calibration Low Power
3391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit can be written only when RECALPF is set to 0
3393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CALR         LPCAL          LL_RTC_CAL_LowPower_Enable
3394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_LowPower_Enable(RTC_TypeDef *RTCx)
3398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CALR, RTC_CALR_LPCAL);
3400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Calibration Low Power
3404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit can be written only when RECALPF is set to 0
3406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CALR         LPCAL          LL_RTC_CAL_LowPower_Disable
3407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_LowPower_Disable(RTC_TypeDef *RTCx)
3411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CALR, RTC_CALR_LPCAL);
3413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if Calibration Low Power is enabled or not
3417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CALR         LPCAL          LL_RTC_CAL_LowPower_IsEnabled
3418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_LowPower_IsEnabled(RTC_TypeDef *RTCx)
3422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CALR, RTC_CALR_LPCAL) == (RTC_CALR_LPCAL));
3424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
3426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
3428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM32L4Q5xx)
3432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Activate timestamp on tamper detection event
3434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR       TAMPTS        LL_RTC_TS_EnableOnTamper
3435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_EnableOnTamper(RTC_TypeDef *RTCx)
3439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_TAMPTS);
3441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable timestamp on tamper detection event
3445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR       TAMPTS        LL_RTC_TS_DisableOnTamper
3446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_DisableOnTamper(RTC_TypeDef *RTCx)
3450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_TAMPTS);
3452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Tamper Tamper
3455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
3456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable TAMPx input detection
3460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_CR1       TAMP1E        LL_RTC_TAMPER_Enable\n
3461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMP_CR1       TAMP2E        LL_RTC_TAMPER_Enable
3462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
3464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1
3465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2
3466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
3467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Enable(TAMP_TypeDef *TAMPx, uint32_t Tamper)
3470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(TAMPx->CR1, Tamper);
3472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear TAMPx input detection
3476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_CR1       TAMP1E        LL_RTC_TAMPER_Disable\n
3477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMP_CR1       TAMP2E        LL_RTC_TAMPER_Disable
3478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
3480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1
3481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2
3482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
3483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Disable(TAMP_TypeDef *TAMPx, uint32_t Tamper)
3486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(TAMPx->CR1, Tamper);
3488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Tamper mask flag
3492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Associated Tamper IT must not enabled when tamper mask is set.
3493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_CR2       TAMP1MF       LL_RTC_TAMPER_EnableMask\n
3494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMP_CR2       TAMP2MF       LL_RTC_TAMPER_EnableMask
3495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
3497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER1
3498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER2
3499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
3500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableMask(TAMP_TypeDef *TAMPx, uint32_t Mask)
3503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(TAMPx->CR2, Mask);
3505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Tamper mask flag
3509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_CR2       TAMP1MF       LL_RTC_TAMPER_DisableMask\n
3510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMP_CR2       TAMP2MF       LL_RTC_TAMPER_DisableMask
3511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
3513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER1
3514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER2
3515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
3516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableMask(TAMP_TypeDef *TAMPx, uint32_t Mask)
3519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(TAMPx->CR2, Mask);
3521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable backup register erase after Tamper event detection
3525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_CR2       TAMP1NOERASE  LL_RTC_TAMPER_EnableEraseBKP\n
3526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMP_CR2       TAMP2NOERASE  LL_RTC_TAMPER_EnableEraseBKP
3527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
3529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER1
3530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER2
3531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
3532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableEraseBKP(TAMP_TypeDef *TAMPx, uint32_t Tamper)
3535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(TAMPx->CR2, Tamper);
3537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable backup register erase after Tamper event detection
3541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_CR2       TAMP1NOERASE  LL_RTC_TAMPER_DisableEraseBKP\n
3542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMP_CR2       TAMP2NOERASE  LL_RTC_TAMPER_DisableEraseBKP
3543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
3545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER1
3546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER2
3547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
3548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableEraseBKP(TAMP_TypeDef *TAMPx, uint32_t Tamper)
3551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(TAMPx->CR2, Tamper);
3553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable RTC_TAMPx pull-up disable (Disable precharge of RTC_TAMPx pins)
3557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_FLTCR       TAMPPUDIS     LL_RTC_TAMPER_DisablePullUp
3558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisablePullUp(TAMP_TypeDef *TAMPx)
3562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(TAMPx->FLTCR, TAMP_FLTCR_TAMPPUDIS);
3564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable RTC_TAMPx pull-up disable ( Precharge RTC_TAMPx pins before sampling)
3568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_FLTCR       TAMPPUDIS     LL_RTC_TAMPER_EnablePullUp
3569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnablePullUp(TAMP_TypeDef *TAMPx)
3573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(TAMPx->FLTCR, TAMP_FLTCR_TAMPPUDIS);
3575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx precharge duration
3579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_FLTCR       TAMPPRCH      LL_RTC_TAMPER_SetPrecharge
3580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Duration This parameter can be one of the following values:
3582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
3583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
3584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
3585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
3586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetPrecharge(TAMP_TypeDef *TAMPx, uint32_t Duration)
3589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(TAMPx->FLTCR, TAMP_FLTCR_TAMPPRCH, Duration);
3591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx precharge duration
3595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_FLTCR       TAMPPRCH      LL_RTC_TAMPER_GetPrecharge
3596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
3599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
3600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
3601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
3602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetPrecharge(TAMP_TypeDef *TAMPx)
3604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(TAMPx->FLTCR, TAMP_FLTCR_TAMPPRCH));
3606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx filter count
3610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_FLTCR       TAMPFLT       LL_RTC_TAMPER_SetFilterCount
3611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  FilterCount This parameter can be one of the following values:
3613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
3614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
3615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
3616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
3617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetFilterCount(TAMP_TypeDef *TAMPx, uint32_t FilterCount)
3620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(TAMPx->FLTCR, TAMP_FLTCR_TAMPFLT, FilterCount);
3622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx filter count
3626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_FLTCR       TAMPFLT       LL_RTC_TAMPER_GetFilterCount
3627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
3630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
3631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
3632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
3633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetFilterCount(TAMP_TypeDef *TAMPx)
3635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(TAMPx->FLTCR, TAMP_FLTCR_TAMPFLT));
3637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Tamper sampling frequency
3641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_FLTCR       TAMPFREQ      LL_RTC_TAMPER_SetSamplingFreq
3642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  SamplingFreq This parameter can be one of the following values:
3644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
3645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
3646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
3647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
3648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
3649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
3650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
3651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
3652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetSamplingFreq(TAMP_TypeDef *TAMPx, uint32_t SamplingFreq)
3655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(TAMPx->FLTCR, TAMP_FLTCR_TAMPFREQ, SamplingFreq);
3657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Tamper sampling frequency
3661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_FLTCR       TAMPFREQ      LL_RTC_TAMPER_GetSamplingFreq
3662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
3665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
3666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
3667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
3668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
3669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
3670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
3671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
3672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetSamplingFreq(TAMP_TypeDef *TAMPx)
3674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(TAMPx->FLTCR, TAMP_FLTCR_TAMPFREQ));
3676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Active level for Tamper input
3680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_CR2       TAMP1TRG      LL_RTC_TAMPER_EnableActiveLevel\n
3681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMP_CR2       TAMP2TRG      LL_RTC_TAMPER_EnableActiveLevel
3682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
3684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1
3685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2
3686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
3687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableActiveLevel(TAMP_TypeDef *TAMPx, uint32_t Tamper)
3690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(TAMPx->CR2, Tamper);
3692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Active level for Tamper input
3696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_CR2       TAMP1TRG      LL_RTC_TAMPER_DisableActiveLevel\n
3697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMP_CR2       TAMP2TRG      LL_RTC_TAMPER_DisableActiveLevel
3698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
3699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
3700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1
3701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2
3702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
3703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableActiveLevel(TAMP_TypeDef *TAMPx, uint32_t Tamper)
3706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(TAMPx->CR2, Tamper);
3708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
3712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Backup_Registers Backup_Registers
3715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
3716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Writes a data in a specified Backup data register.
3720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_BKPxR        BKP           LL_RTC_BKP_SetRegister
3721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx RTC Instance
3722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  BackupRegister This parameter can be one of the following values:
3723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR0
3724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR1
3725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR2
3726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR3
3727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR4
3728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Data Value between Min_Data=0x00 and Max_Data=0xFFFFFFFF
3729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_BKP_SetRegister(TAMP_TypeDef *TAMPx, uint32_t BackupRegister, uint32_t 
3732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t tmp = 0U;
3734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   tmp = (uint32_t)(&(TAMPx->BKP0R));
3736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   tmp += (BackupRegister * 4U);
3737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   /* Write the specified register */
3739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
3740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Reads data from the specified RTC Backup data Register.
3744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_BKPxR        BKP           LL_RTC_BKP_GetRegister
3745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx RTC Instance
3746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  BackupRegister This parameter can be one of the following values:
3747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR0
3748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR1
3749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR2
3750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR3
3751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR4
3752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFFFFFF
3753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_BKP_GetRegister(TAMP_TypeDef *TAMPx, uint32_t BackupRegister)
3755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t tmp = 0U;
3757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   tmp = (uint32_t)(&(TAMPx->BKP0R));
3759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   tmp += (BackupRegister * 4U);
3760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   /* Read the specified register */
3762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (*(__IO uint32_t *)tmp);
3763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
3767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_FLAG_Management FLAG_Management
3770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
3771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Internal Time-stamp flag
3775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SR          ITSF          LL_RTC_IsActiveFlag_ITS
3776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ITS(RTC_TypeDef *RTCx)
3780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->SR, RTC_SR_ITSF) == (RTC_SR_ITSF));
3782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Recalibration pending Flag
3786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR          RECALPF       LL_RTC_IsActiveFlag_RECALP
3787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_RECALP(RTC_TypeDef *RTCx)
3791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ICSR, RTC_ICSR_RECALPF) == (RTC_ICSR_RECALPF));
3793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Time-stamp overflow flag
3797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SR          TSOVF         LL_RTC_IsActiveFlag_TSOV
3798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TSOV(RTC_TypeDef *RTCx)
3802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->SR, RTC_SR_TSOVF) == (RTC_SR_TSOVF));
3804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Time-stamp flag
3808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SR          TSF           LL_RTC_IsActiveFlag_TS
3809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TS(RTC_TypeDef *RTCx)
3813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->SR, RTC_SR_TSF) == (RTC_SR_TSF));
3815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Wakeup timer flag
3819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SR          WUTF          LL_RTC_IsActiveFlag_WUT
3820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_WUT(RTC_TypeDef *RTCx)
3824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->SR, RTC_SR_WUTF) == (RTC_SR_WUTF));
3826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm B flag
3830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SR          ALRBF         LL_RTC_IsActiveFlag_ALRB
3831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ALRB(RTC_TypeDef *RTCx)
3835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->SR, RTC_SR_ALRBF) == (RTC_SR_ALRBF));
3837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm A flag
3841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SR          ALRAF         LL_RTC_IsActiveFlag_ALRA
3842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ALRA(RTC_TypeDef *RTCx)
3846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->SR, RTC_SR_ALRAF) == (RTC_SR_ALRAF));
3848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
3851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get SSR Underflow flag
3853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SR          SSRUF         LL_RTC_IsActiveFlag_SSRU
3854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_SSRU(RTC_TypeDef *RTCx)
3858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->SR, RTC_SR_SSRUF) == (RTC_SR_SSRUF)) ? 1U : 0U);
3860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif
3862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Internal Time-stamp flag
3865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SCR          CITSF          LL_RTC_ClearFlag_ITS
3866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_ITS(RTC_TypeDef *RTCx)
3870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->SCR, RTC_SCR_CITSF);
3872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Time-stamp overflow flag
3876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SCR          CTSOVF         LL_RTC_ClearFlag_TSOV
3877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TSOV(RTC_TypeDef *RTCx)
3881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->SCR, RTC_SCR_CTSOVF);
3883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Time-stamp flag
3887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SCR          CTSF           LL_RTC_ClearFlag_TS
3888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TS(RTC_TypeDef *RTCx)
3892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->SCR, RTC_SCR_CTSF);
3894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Wakeup timer flag
3898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SCR          CWUTF          LL_RTC_ClearFlag_WUT
3899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_WUT(RTC_TypeDef *RTCx)
3903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->SCR, RTC_SCR_CWUTF);
3905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Alarm B flag
3909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SCR          CALRBF         LL_RTC_ClearFlag_ALRB
3910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_ALRB(RTC_TypeDef *RTCx)
3914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->SCR, RTC_SCR_CALRBF);
3916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Alarm A flag
3920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SCR          CALRAF         LL_RTC_ClearFlag_ALRA
3921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_ALRA(RTC_TypeDef *RTCx)
3925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->SCR, RTC_SCR_CALRAF);
3927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
3930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear SSR Underflow flag
3932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SCR          CSSRUF         LL_RTC_ClearFlag_SSRU
3933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_SSRU(RTC_TypeDef *RTCx)
3937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->SCR, RTC_SCR_CSSRUF);
3939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
3941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Initialization flag
3945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR          INITF         LL_RTC_IsActiveFlag_INIT
3946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_INIT(RTC_TypeDef *RTCx)
3950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ICSR, RTC_ICSR_INITF) == (RTC_ICSR_INITF));
3952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Registers synchronization flag
3956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR          RSF           LL_RTC_IsActiveFlag_RS
3957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_RS(RTC_TypeDef *RTCx)
3961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ICSR, RTC_ICSR_RSF) == (RTC_ICSR_RSF));
3963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Registers synchronization flag
3967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR          RSF           LL_RTC_ClearFlag_RS
3968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
3970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_RS(RTC_TypeDef *RTCx)
3972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ICSR, (~((RTC_ICSR_RSF | RTC_ICSR_INIT) & 0x000000FFU) | (RTCx->ICSR & RTC_ICSR_I
3974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Initialization status flag
3978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR          INITS         LL_RTC_IsActiveFlag_INITS
3979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_INITS(RTC_TypeDef *RTCx)
3983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ICSR, RTC_ICSR_INITS) == (RTC_ICSR_INITS));
3985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Shift operation pending flag
3989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR          SHPF          LL_RTC_IsActiveFlag_SHP
3990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
3993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_SHP(RTC_TypeDef *RTCx)
3994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
3995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ICSR, RTC_ICSR_SHPF) == (RTC_ICSR_SHPF));
3996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
3997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
3998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
3999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Wakeup timer write flag
4000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_ICSR          WUTWF         LL_RTC_IsActiveFlag_WUTW
4001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_WUTW(RTC_TypeDef *RTCx)
4005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ICSR, RTC_ICSR_WUTWF) == (RTC_ICSR_WUTWF));
4007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm A masked flag.
4011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_MISR          ALRAMF        LL_RTC_IsActiveFlag_ALRAM
4012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ALRAM(RTC_TypeDef *RTCx)
4016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->MISR, RTC_MISR_ALRAMF) == (RTC_MISR_ALRAMF));
4018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
4021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get SSR Underflow masked flag.
4023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_MISR          SSRUMF        LL_RTC_IsActiveFlag_SSRUM
4024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_SSRUM(RTC_TypeDef *RTCx)
4028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->MISR, RTC_MISR_SSRUMF) == (RTC_MISR_SSRUMF)) ? 1U : 0U);
4030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif
4032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm B masked flag.
4035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_MISR          ALRBMF        LL_RTC_IsActiveFlag_ALRBM
4036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ALRBM(RTC_TypeDef *RTCx)
4040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->MISR, RTC_MISR_ALRBMF) == (RTC_MISR_ALRBMF));
4042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Wakeup timer masked flag.
4046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_MISR          WUTMF        LL_RTC_IsActiveFlag_WUTM
4047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_WUTM(RTC_TypeDef *RTCx)
4051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->MISR, RTC_MISR_WUTMF) == (RTC_MISR_WUTMF));
4053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Time-stamp masked flag.
4057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_MISR          TSMF        LL_RTC_IsActiveFlag_TSM
4058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TSM(RTC_TypeDef *RTCx)
4062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->MISR, RTC_MISR_TSMF) == (RTC_MISR_TSMF));
4064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Time-stamp overflow masked flag.
4068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_MISR          TSOVMF        LL_RTC_IsActiveFlag_TSOVM
4069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TSOVM(RTC_TypeDef *RTCx)
4073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->MISR, RTC_MISR_TSOVMF) == (RTC_MISR_TSOVMF));
4075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Internal Time-stamp masked flag.
4079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_MISR          ITSMF        LL_RTC_IsActiveFlag_ITSM
4080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ITSM(RTC_TypeDef *RTCx)
4084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->MISR, RTC_MISR_ITSMF) == (RTC_MISR_ITSMF));
4086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get tamper 1 detection flag.
4090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_SR          TAMP1F        LL_RTC_IsActiveFlag_TAMP1
4091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP1(TAMP_TypeDef *TAMPx)
4095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(TAMPx->SR, TAMP_SR_TAMP1F) == (TAMP_SR_TAMP1F));
4097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get tamper 2 detection flag.
4101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_SR          TAMP2F        LL_RTC_IsActiveFlag_TAMP2
4102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP2(TAMP_TypeDef *TAMPx)
4106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(TAMPx->SR, TAMP_SR_TAMP2F) == (TAMP_SR_TAMP2F));
4108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
4111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get tamper 3 detection flag.
4113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_SR          TAMP3F        LL_RTC_IsActiveFlag_TAMP3
4114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP3(TAMP_TypeDef *TAMPx)
4118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(TAMPx->SR, TAMP_SR_TAMP3F) == (TAMP_SR_TAMP3F));
4120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif
4122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get tamper 1 interrupt masked flag.
4125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_MISR          TAMP1MF        LL_RTC_IsActiveFlag_TAMP1M
4126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP1M(TAMP_TypeDef *TAMPx)
4130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(TAMPx->MISR, TAMP_MISR_TAMP1MF) == (TAMP_MISR_TAMP1MF));
4132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get tamper 2 interrupt masked flag.
4136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_MISR          TAMP2MF        LL_RTC_IsActiveFlag_TAMP2M
4137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP2M(TAMP_TypeDef *TAMPx)
4141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(TAMPx->MISR, TAMP_MISR_TAMP2MF) == (TAMP_MISR_TAMP2MF));
4143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
4146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get tamper 3 interrupt masked flag.
4148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_MISR          TAMP3MF        LL_RTC_IsActiveFlag_TAMP3M
4149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP3M(TAMP_TypeDef *TAMPx)
4153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(TAMPx->MISR, TAMP_MISR_TAMP3MF) == (TAMP_MISR_TAMP3MF));
4155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif
4157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear tamper 1 detection flag.
4161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_SCR          CTAMP1F         LL_RTC_ClearFlag_TAMP1
4162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP1(TAMP_TypeDef *TAMPx)
4166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(TAMPx->SCR, TAMP_SCR_CTAMP1F);
4168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear tamper 2 detection flag.
4172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_SCR          CTAMP2F         LL_RTC_ClearFlag_TAMP2
4173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP2(TAMP_TypeDef *TAMPx)
4177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(TAMPx->SCR, TAMP_SCR_CTAMP2F);
4179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
4182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear tamper 3 detection flag.
4184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_SCR          CTAMP3F         LL_RTC_ClearFlag_TAMP3
4185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP3(TAMP_TypeDef *TAMPx)
4189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(TAMPx->SCR, TAMP_SCR_CTAMP3F);
4191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif
4193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
4196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_IT_Management IT_Management
4199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
4200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Time-stamp interrupt
4204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
4205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR          TSIE         LL_RTC_EnableIT_TS
4206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableIT_TS(RTC_TypeDef *RTCx)
4210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_TSIE);
4212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Time-stamp interrupt
4216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
4217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR          TSIE         LL_RTC_DisableIT_TS
4218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableIT_TS(RTC_TypeDef *RTCx)
4222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_TSIE);
4224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Wakeup timer interrupt
4228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
4229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR          WUTIE         LL_RTC_EnableIT_WUT
4230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableIT_WUT(RTC_TypeDef *RTCx)
4234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_WUTIE);
4236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Wakeup timer interrupt
4240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
4241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR          WUTIE         LL_RTC_DisableIT_WUT
4242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableIT_WUT(RTC_TypeDef *RTCx)
4246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_WUTIE);
4248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Alarm B interrupt
4252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
4253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ALRBIE        LL_RTC_EnableIT_ALRB
4254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableIT_ALRB(RTC_TypeDef *RTCx)
4258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ALRBIE);
4260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Alarm B interrupt
4264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
4265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ALRBIE        LL_RTC_DisableIT_ALRB
4266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableIT_ALRB(RTC_TypeDef *RTCx)
4270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ALRBIE);
4272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Alarm A interrupt
4276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
4277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ALRAIE        LL_RTC_EnableIT_ALRA
4278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableIT_ALRA(RTC_TypeDef *RTCx)
4282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ALRAIE);
4284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Alarm A interrupt
4288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
4289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ALRAIE        LL_RTC_DisableIT_ALRA
4290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableIT_ALRA(RTC_TypeDef *RTCx)
4294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ALRAIE);
4296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined (STM32L4P5xx) || defined (STM32L4Q5xx)
4299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable SSR Underflow interrupt
4301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
4302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           SSRUIE        LL_RTC_EnableIT_SSRU
4303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableIT_SSRU(RTC_TypeDef *RTCx)
4307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_SSRUIE);
4309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable SSR Underflow interrupt
4313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
4314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           SSRUIE        LL_RTC_DisableIT_SSRU
4315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableIT_SSRU(RTC_TypeDef *RTCx)
4319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_SSRUIE);
4321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if SSR Underflow interrupt is enabled or not
4325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           SSRUIE        LL_RTC_IsEnabledIT_SSRU
4326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsEnabledIT_SSRU(RTC_TypeDef *RTCx)
4330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return ((READ_BIT(RTCx->CR, RTC_CR_SSRUIE) == (RTC_CR_SSRUIE)) ? 1U : 0U);
4332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* #if defined (STM32L4P5xx) || defined (STM32L4Q5xx) */
4334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if Time-stamp interrupt is enabled or not
4337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           TSIE          LL_RTC_IsEnabledIT_TS
4338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsEnabledIT_TS(RTC_TypeDef *RTCx)
4342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_TSIE) == (RTC_CR_TSIE));
4344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if Wakeup timer interrupt is enabled or not
4348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           WUTIE         LL_RTC_IsEnabledIT_WUT
4349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsEnabledIT_WUT(RTC_TypeDef *RTCx)
4353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_WUTIE) == (RTC_CR_WUTIE));
4355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if Alarm B interrupt is enabled or not
4359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ALRBIE        LL_RTC_IsEnabledIT_ALRB
4360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsEnabledIT_ALRB(RTC_TypeDef *RTCx)
4364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_ALRBIE) == (RTC_CR_ALRBIE));
4366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if Alarm A interrupt is enabled or not
4370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR           ALRAIE        LL_RTC_IsEnabledIT_ALRA
4371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsEnabledIT_ALRA(RTC_TypeDef *RTCx)
4375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_ALRAIE) == (RTC_CR_ALRAIE));
4377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable tamper 1 interrupt.
4381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_IER           TAMP1IE          LL_RTC_EnableIT_TAMP1
4382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableIT_TAMP1(TAMP_TypeDef *TAMPx)
4386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(TAMPx->IER, TAMP_IER_TAMP1IE);
4388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable tamper 1 interrupt.
4392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_IER           TAMP1IE          LL_RTC_DisableIT_TAMP1
4393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableIT_TAMP1(TAMP_TypeDef *TAMPx)
4397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(TAMPx->IER, TAMP_IER_TAMP1IE);
4399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable tamper 2 interrupt.
4403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_IER           TAMP2IE          LL_RTC_EnableIT_TAMP2
4404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableIT_TAMP2(TAMP_TypeDef *TAMPx)
4408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(TAMPx->IER, TAMP_IER_TAMP2IE);
4410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable tamper 2 interrupt.
4414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_IER           TAMP2IE          LL_RTC_DisableIT_TAMP2
4415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableIT_TAMP2(TAMP_TypeDef *TAMPx)
4419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(TAMPx->IER, TAMP_IER_TAMP2IE);
4421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if tamper 1 interrupt is enabled or not.
4425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_IER           TAMP1IE        LL_RTC_IsEnabledIT_TAMP1
4426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsEnabledIT_TAMP1(TAMP_TypeDef *TAMPx)
4430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(TAMPx->IER, TAMP_IER_TAMP1IE) == (TAMP_IER_TAMP1IE));
4432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if tamper 2 interrupt is enabled or not.
4436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_IER           TAMP2IE        LL_RTC_IsEnabledIT_TAMP2
4437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsEnabledIT_TAMP2(TAMP_TypeDef *TAMPx)
4441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(TAMPx->IER, TAMP_IER_TAMP2IE) == (TAMP_IER_TAMP2IE));
4443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
4446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable tamper 3 interrupt.
4448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_IER           TAMP3IE          LL_RTC_EnableIT_TAMP3
4449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableIT_TAMP3(TAMP_TypeDef *TAMPx)
4453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(TAMPx->IER, TAMP_IER_TAMP3IE);
4455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable tamper 3 interrupt.
4459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_IER           TAMP3IE          LL_RTC_DisableIT_TAMP3
4460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableIT_TAMP3(TAMP_TypeDef *TAMPx)
4464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(TAMPx->IER, TAMP_IER_TAMP3IE);
4466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Check if tamper 3 interrupt is enabled or not.
4470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMP_IER           TAMP3IE        LL_RTC_IsEnabledIT_TAMP3
4471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  TAMPx TAMP Instance
4472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsEnabledIT_TAMP3(TAMP_TypeDef *TAMPx)
4475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(TAMPx->IER, TAMP_IER_TAMP3IE) == (TAMP_IER_TAMP3IE));
4477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif
4479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
4482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM3
4485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPTS)
4487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Activate timestamp on tamper detection event
4489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR       TAMPTS        LL_RTC_TS_EnableOnTamper
4490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_EnableOnTamper(RTC_TypeDef *RTCx)
4494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPTS);
4496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable timestamp on tamper detection event
4500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_CR       TAMPTS        LL_RTC_TS_DisableOnTamper
4501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_DisableOnTamper(RTC_TypeDef *RTCx)
4505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPTS);
4507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPTS */
4509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Tamper Tamper
4511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
4512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable RTC_TAMPx input detection
4516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1E        LL_RTC_TAMPER_Enable\n
4517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP2E        LL_RTC_TAMPER_Enable\n
4518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP3E        LL_RTC_TAMPER_Enable
4519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
4521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1
4522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2
4523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_3
4524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
4525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Enable(RTC_TypeDef *RTCx, uint32_t Tamper)
4528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Tamper);
4530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear RTC_TAMPx input detection
4534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1E        LL_RTC_TAMPER_Disable\n
4535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP2E        LL_RTC_TAMPER_Disable\n
4536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP3E        LL_RTC_TAMPER_Disable
4537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
4539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1
4540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2
4541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_3
4542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
4543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Disable(RTC_TypeDef *RTCx, uint32_t Tamper)
4546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Tamper);
4548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Tamper mask flag
4552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @note Associated Tamper IT must not enabled when tamper mask is set.
4553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1MF       LL_RTC_TAMPER_EnableMask\n
4554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP2MF       LL_RTC_TAMPER_EnableMask\n
4555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP3MF       LL_RTC_TAMPER_EnableMask
4556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
4558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER1
4559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER2
4560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER3
4561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
4562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableMask(RTC_TypeDef *RTCx, uint32_t Mask)
4565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Mask);
4567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Tamper mask flag
4571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1MF       LL_RTC_TAMPER_DisableMask\n
4572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP2MF       LL_RTC_TAMPER_DisableMask\n
4573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP3MF       LL_RTC_TAMPER_DisableMask
4574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
4576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER1
4577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER2
4578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_MASK_TAMPER3
4579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
4580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableMask(RTC_TypeDef *RTCx, uint32_t Mask)
4583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Mask);
4585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable backup register erase after Tamper event detection
4589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1NOERASE  LL_RTC_TAMPER_EnableEraseBKP\n
4590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP2NOERASE  LL_RTC_TAMPER_EnableEraseBKP\n
4591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP3NOERASE  LL_RTC_TAMPER_EnableEraseBKP
4592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
4594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER1
4595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER2
4596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER3
4597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
4598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableEraseBKP(RTC_TypeDef *RTCx, uint32_t Tamper)
4601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Tamper);
4603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable backup register erase after Tamper event detection
4607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1NOERASE  LL_RTC_TAMPER_DisableEraseBKP\n
4608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP2NOERASE  LL_RTC_TAMPER_DisableEraseBKP\n
4609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP3NOERASE  LL_RTC_TAMPER_DisableEraseBKP
4610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
4612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER1
4613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER2
4614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_NOERASE_TAMPER3
4615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
4616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableEraseBKP(RTC_TypeDef *RTCx, uint32_t Tamper)
4619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Tamper);
4621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPPUDIS)
4624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable RTC_TAMPx pull-up disable (Disable precharge of RTC_TAMPx pins)
4626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPUDIS     LL_RTC_TAMPER_DisablePullUp
4627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisablePullUp(RTC_TypeDef *RTCx)
4631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPPUDIS);
4633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable RTC_TAMPx pull-up disable ( Precharge RTC_TAMPx pins before sampling)
4637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPUDIS     LL_RTC_TAMPER_EnablePullUp
4638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnablePullUp(RTC_TypeDef *RTCx)
4642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPPUDIS);
4644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPPUDIS */
4646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPPRCH)
4648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx precharge duration
4650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPRCH      LL_RTC_TAMPER_SetPrecharge
4651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Duration This parameter can be one of the following values:
4653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
4654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
4655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
4656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
4657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetPrecharge(RTC_TypeDef *RTCx, uint32_t Duration)
4660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAMPCR, RTC_TAMPCR_TAMPPRCH, Duration);
4662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx precharge duration
4666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPPRCH      LL_RTC_TAMPER_GetPrecharge
4667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
4669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
4670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
4671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
4672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
4673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetPrecharge(RTC_TypeDef *RTCx)
4675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPPRCH));
4677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPPRCH */
4679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPFLT)
4681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx filter count
4683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFLT       LL_RTC_TAMPER_SetFilterCount
4684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  FilterCount This parameter can be one of the following values:
4686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
4687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
4688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
4689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
4690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetFilterCount(RTC_TypeDef *RTCx, uint32_t FilterCount)
4693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAMPCR, RTC_TAMPCR_TAMPFLT, FilterCount);
4695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx filter count
4699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFLT       LL_RTC_TAMPER_GetFilterCount
4700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
4702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
4703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
4704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
4705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
4706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetFilterCount(RTC_TypeDef *RTCx)
4708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPFLT));
4710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPFLT */
4712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPCR_TAMPFREQ)
4714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Set Tamper sampling frequency
4716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFREQ      LL_RTC_TAMPER_SetSamplingFreq
4717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  SamplingFreq This parameter can be one of the following values:
4719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
4720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
4721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
4722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
4723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
4724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
4725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
4726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
4727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetSamplingFreq(RTC_TypeDef *RTCx, uint32_t SamplingFreq)
4730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAMPCR, RTC_TAMPCR_TAMPFREQ, SamplingFreq);
4732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Tamper sampling frequency
4736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMPFREQ      LL_RTC_TAMPER_GetSamplingFreq
4737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
4739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
4740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
4741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
4742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
4743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
4744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
4745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
4746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
4747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetSamplingFreq(RTC_TypeDef *RTCx)
4749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAMPCR, RTC_TAMPCR_TAMPFREQ));
4751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPCR_TAMPFREQ */
4753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Enable Active level for Tamper input
4756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1TRG      LL_RTC_TAMPER_EnableActiveLevel\n
4757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP2TRG      LL_RTC_TAMPER_EnableActiveLevel\n
4758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP3TRG      LL_RTC_TAMPER_EnableActiveLevel
4759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
4761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1
4762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2
4763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP3
4764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
4765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableActiveLevel(RTC_TypeDef *RTCx, uint32_t Tamper)
4768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   SET_BIT(RTCx->TAMPCR, Tamper);
4770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Disable Active level for Tamper input
4774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll TAMPCR       TAMP1TRG      LL_RTC_TAMPER_DisableActiveLevel\n
4775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP2TRG      LL_RTC_TAMPER_DisableActiveLevel\n
4776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         TAMPCR       TAMP3TRG      LL_RTC_TAMPER_DisableActiveLevel
4777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
4779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1
4780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2
4781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP3
4782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *
4783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableActiveLevel(RTC_TypeDef *RTCx, uint32_t Tamper)
4786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAMPCR, Tamper);
4788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
4792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_BACKUP_SUPPORT)
4795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Backup_Registers Backup_Registers
4796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
4797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Writes a data in a specified RTC Backup data register.
4801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll BKPxR        BKP           LL_RTC_BAK_SetRegister
4802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  BackupRegister This parameter can be one of the following values:
4804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR0
4805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR1
4806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR2
4807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR3
4808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR4
4809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR5
4810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR6
4811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR7
4812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR8
4813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR9
4814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR10
4815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR11
4816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR12
4817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR13
4818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR14
4819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR15
4820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR16
4821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR17
4822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR18
4823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR19
4824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR20
4825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR21
4826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR22
4827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR23
4828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR24
4829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR25
4830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR26
4831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR27
4832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR28
4833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR29
4834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR30
4835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR31
4836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  Data Value between Min_Data=0x00 and Max_Data=0xFFFFFFFF
4837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
4838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_BAK_SetRegister(RTC_TypeDef *RTCx, uint32_t BackupRegister, uint32_t Da
4840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t tmp = 0U;
4842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   tmp = (uint32_t)(&(RTCx->BKP0R));
4844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   tmp += (BackupRegister * 4U);
4845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   /* Write the specified register */
4847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
4848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Reads data from the specified RTC Backup data Register.
4852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll BKPxR        BKP           LL_RTC_BAK_GetRegister
4853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  BackupRegister This parameter can be one of the following values:
4855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR0
4856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR1
4857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR2
4858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR3
4859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR4
4860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR5
4861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR6
4862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR7
4863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR8
4864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR9
4865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR10
4866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR11
4867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR12
4868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR13
4869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR14
4870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR15
4871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR16
4872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR17
4873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR18
4874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR19
4875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR20
4876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR21
4877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR22
4878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR23
4879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR24
4880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR25
4881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR26
4882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR27
4883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR28
4884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR29
4885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR30
4886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR31
4887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFFFFFF
4888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_BAK_GetRegister(RTC_TypeDef *RTCx, uint32_t BackupRegister)
4890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   uint32_t tmp = 0U;
4892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   tmp = (uint32_t)(&(RTCx->BKP0R));
4894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   tmp += (BackupRegister * 4U);
4895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   /* Read the specified register */
4897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (*(__IO uint32_t *)tmp);
4898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @}
4902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_BACKUP_SUPPORT */
4904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_FLAG_Management FLAG_Management
4906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @{
4907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Internal Time-stamp flag
4911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll RTC_SR          ITSF          LL_RTC_IsActiveFlag_ITS
4912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ITS(RTC_TypeDef *RTCx)
4916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_ITSF) == (RTC_ISR_ITSF));
4918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Recalibration pending Flag
4922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          RECALPF       LL_RTC_IsActiveFlag_RECALP
4923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_RECALP(RTC_TypeDef *RTCx)
4927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_RECALPF) == (RTC_ISR_RECALPF));
4929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
4932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get RTC_TAMP3 detection flag
4934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          TAMP3F        LL_RTC_IsActiveFlag_TAMP3
4935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP3(RTC_TypeDef *RTCx)
4939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TAMP3F) == (RTC_ISR_TAMP3F));
4941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
4943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
4945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get RTC_TAMP2 detection flag
4947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          TAMP2F        LL_RTC_IsActiveFlag_TAMP2
4948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP2(RTC_TypeDef *RTCx)
4952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TAMP2F) == (RTC_ISR_TAMP2F));
4954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
4956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
4958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get RTC_TAMP1 detection flag
4960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          TAMP1F        LL_RTC_IsActiveFlag_TAMP1
4961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP1(RTC_TypeDef *RTCx)
4965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TAMP1F) == (RTC_ISR_TAMP1F));
4967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
4969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Time-stamp overflow flag
4972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          TSOVF         LL_RTC_IsActiveFlag_TSOV
4973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TSOV(RTC_TypeDef *RTCx)
4977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TSOVF) == (RTC_ISR_TSOVF));
4979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Time-stamp flag
4983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          TSF           LL_RTC_IsActiveFlag_TS
4984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TS(RTC_TypeDef *RTCx)
4988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
4989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TSF) == (RTC_ISR_TSF));
4990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
4991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
4992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_WAKEUP_SUPPORT)
4993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
4994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Wakeup timer flag
4995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          WUTF          LL_RTC_IsActiveFlag_WUT
4996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
4997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
4998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
4999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_WUT(RTC_TypeDef *RTCx)
5000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_WUTF) == (RTC_ISR_WUTF));
5002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_WAKEUP_SUPPORT */
5004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm B flag
5007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          ALRBF         LL_RTC_IsActiveFlag_ALRB
5008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
5010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ALRB(RTC_TypeDef *RTCx)
5012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_ALRBF) == (RTC_ISR_ALRBF));
5014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Alarm A flag
5018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          ALRAF         LL_RTC_IsActiveFlag_ALRA
5019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
5021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ALRA(RTC_TypeDef *RTCx)
5023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_ALRAF) == (RTC_ISR_ALRAF));
5025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Internal Time-stamp flag
5029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          ITSF          LL_RTC_ClearFlag_ITS
5030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
5032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_ITS(RTC_TypeDef *RTCx)
5034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_ITSF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT)
5036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER3_SUPPORT)
5039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear RTC_TAMP3 detection flag
5041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          TAMP3F        LL_RTC_ClearFlag_TAMP3
5042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
5044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP3(RTC_TypeDef *RTCx)
5046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TAMP3F | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INI
5048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER3_SUPPORT */
5050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
5052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear RTC_TAMP2 detection flag
5054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          TAMP2F        LL_RTC_ClearFlag_TAMP2
5055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
5057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP2(RTC_TypeDef *RTCx)
5059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TAMP2F | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INI
5061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
5063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_TAMPER1_SUPPORT)
5065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear RTC_TAMP1 detection flag
5067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          TAMP1F        LL_RTC_ClearFlag_TAMP1
5068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
5070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP1(RTC_TypeDef *RTCx)
5072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TAMP1F | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INI
5074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_TAMPER1_SUPPORT */
5076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Time-stamp overflow flag
5079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          TSOVF         LL_RTC_ClearFlag_TSOV
5080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
5082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TSOV(RTC_TypeDef *RTCx)
5084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TSOVF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT
5086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Time-stamp flag
5090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          TSF           LL_RTC_ClearFlag_TS
5091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
5093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TS(RTC_TypeDef *RTCx)
5095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TSF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT))
5097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #if defined(RTC_WAKEUP_SUPPORT)
5100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Wakeup timer flag
5102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          WUTF          LL_RTC_ClearFlag_WUT
5103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
5105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_WUT(RTC_TypeDef *RTCx)
5107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_WUTF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT)
5109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** #endif /* RTC_WAKEUP_SUPPORT */
5111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Alarm B flag
5114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          ALRBF         LL_RTC_ClearFlag_ALRB
5115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
5117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_ALRB(RTC_TypeDef *RTCx)
5119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_ALRBF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT
5121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Alarm A flag
5125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          ALRAF         LL_RTC_ClearFlag_ALRA
5126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
5128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_ALRA(RTC_TypeDef *RTCx)
5130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_ALRAF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT
5132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Initialization flag
5136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          INITF         LL_RTC_IsActiveFlag_INIT
5137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
5139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_INIT(RTC_TypeDef *RTCx)
5141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_INITF) == (RTC_ISR_INITF));
 762              		.loc 2 5142 0
 763 0008 C368     		ldr	r3, [r0, #12]
 764              	.LVL79:
 765              	.LBE171:
 766              	.LBE170:
 730:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ErrorStatus status = SUCCESS;
 731:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   uint32_t tmp;
 732:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 733:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Check the parameter */
 734:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 735:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 736:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Check if the Initialization mode is set */
 737:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (LL_RTC_IsActiveFlag_INIT(RTCx) == 0U)
 767              		.loc 1 737 0
 768 000a 13F0400F 		tst	r3, #64
 769 000e 1AD1     		bne	.L40
 770 0010 0146     		mov	r1, r0
 771              	.LVL80:
 772              	.LBB172:
 773              	.LBB173:
1121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 774              		.loc 2 1121 0
 775 0012 4FF0FF33 		mov	r3, #-1
 776 0016 C360     		str	r3, [r0, #12]
 777              	.LVL81:
 778              	.LBE173:
 779              	.LBE172:
 780              	.LBB174:
 781              	.LBB175:
 782              		.loc 2 5142 0
 783 0018 C368     		ldr	r3, [r0, #12]
 784 001a C3F38013 		ubfx	r3, r3, #6, #1
 785              	.LVL82:
 786              	.LBE175:
 787              	.LBE174:
 730:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ErrorStatus status = SUCCESS;
 788              		.loc 1 730 0
 789 001e 0020     		movs	r0, #0
 790              	.LVL83:
 791              	.L36:
 738:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 739:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Set the Initialization mode */
 740:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_EnableInitMode(RTCx);
 741:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 742:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 743:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     tmp = LL_RTC_IsActiveFlag_INIT(RTCx);
 744:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     while ((timeout != 0U) && (tmp != 1U))
 792              		.loc 1 744 0
 793 0020 019A     		ldr	r2, [sp, #4]
 794 0022 8AB1     		cbz	r2, .L35
 795              		.loc 1 744 0 is_stmt 0 discriminator 1
 796 0024 83B9     		cbnz	r3, .L35
 797              	.LBB176:
 798              	.LBB177:
 799              		.file 3 "../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h"
   1:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
   2:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   ******************************************************************************
   3:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @file    stm32l4xx_ll_cortex.h
   4:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @author  MCD Application Team
   5:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @brief   Header file of CORTEX LL module.
   6:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   @verbatim
   7:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   ==============================================================================
   8:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****                      ##### How to use this driver #####
   9:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   ==============================================================================
  10:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****     [..]
  11:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****     The LL CORTEX driver contains a set of generic APIs that can be
  12:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****     used by user:
  13:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****       (+) SYSTICK configuration used by @ref LL_mDelay and @ref LL_Init1msTick
  14:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****           functions
  15:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****       (+) Low power mode configuration (SCB register of Cortex-MCU)
  16:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****       (+) MPU API to configure and enable regions
  17:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****       (+) API to access to MCU info (CPUID register)
  18:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****       (+) API to enable fault handler (SHCSR accesses)
  19:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  20:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   @endverbatim
  21:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   ******************************************************************************
  22:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @attention
  23:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   *
  24:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * All rights reserved.</center></h2>
  26:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   *
  27:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * the "License"; You may not use this file except in compliance with the
  29:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * License. You may obtain a copy of the License at:
  30:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   *                        opensource.org/licenses/BSD-3-Clause
  31:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   *
  32:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   ******************************************************************************
  33:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
  34:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  35:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  36:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #ifndef STM32L4xx_LL_CORTEX_H
  37:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define STM32L4xx_LL_CORTEX_H
  38:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  39:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #ifdef __cplusplus
  40:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** extern "C" {
  41:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #endif
  42:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  43:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /* Includes ------------------------------------------------------------------*/
  44:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #include "stm32l4xx.h"
  45:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  46:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @addtogroup STM32L4xx_LL_Driver
  47:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
  48:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
  49:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  50:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL CORTEX
  51:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
  52:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
  53:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  54:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /* Private types -------------------------------------------------------------*/
  55:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /* Private variables ---------------------------------------------------------*/
  56:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  57:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /* Private constants ---------------------------------------------------------*/
  58:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  59:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /* Private macros ------------------------------------------------------------*/
  60:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  61:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /* Exported types ------------------------------------------------------------*/
  62:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /* Exported constants --------------------------------------------------------*/
  63:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Constants CORTEX Exported Constants
  64:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
  65:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
  66:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  67:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CLKSOURCE_HCLK SYSTICK Clock Source
  68:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
  69:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
  70:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK_DIV8     0x00000000U                 /*!< AHB clock divided by 8 
  71:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK          SysTick_CTRL_CLKSOURCE_Msk  /*!< AHB clock selected as S
  72:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
  73:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
  74:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
  75:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  76:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_FAULT Handler Fault type
  77:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
  78:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
  79:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_HANDLER_FAULT_USG               SCB_SHCSR_USGFAULTENA_Msk              /*!< Usage fault 
  80:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_HANDLER_FAULT_BUS               SCB_SHCSR_BUSFAULTENA_Msk              /*!< Bus fault */
  81:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_HANDLER_FAULT_MEM               SCB_SHCSR_MEMFAULTENA_Msk              /*!< Memory manag
  82:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
  83:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
  84:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
  85:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  86:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #if __MPU_PRESENT
  87:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  88:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CTRL_HFNMI_PRIVDEF MPU Control
  89:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
  90:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
  91:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_CTRL_HFNMI_PRIVDEF_NONE     0x00000000U                                       /*!< D
  92:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_CTRL_HARDFAULT_NMI          MPU_CTRL_HFNMIENA_Msk                             /*!< E
  93:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_CTRL_PRIVILEGED_DEFAULT     MPU_CTRL_PRIVDEFENA_Msk                           /*!< E
  94:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_CTRL_HFNMI_PRIVDEF          (MPU_CTRL_HFNMIENA_Msk | MPU_CTRL_PRIVDEFENA_Msk) /*!< E
  95:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
  96:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
  97:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
  98:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
  99:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION MPU Region Number
 100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
 101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER0              0x00U /*!< REGION Number 0 */
 103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER1              0x01U /*!< REGION Number 1 */
 104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER2              0x02U /*!< REGION Number 2 */
 105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER3              0x03U /*!< REGION Number 3 */
 106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER4              0x04U /*!< REGION Number 4 */
 107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER5              0x05U /*!< REGION Number 5 */
 108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER6              0x06U /*!< REGION Number 6 */
 109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER7              0x07U /*!< REGION Number 7 */
 110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
 111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
 112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
 114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION_SIZE MPU Region Size
 115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
 116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32B             (0x04U << MPU_RASR_SIZE_Pos) /*!< 32B Size of the MPU pr
 118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64B             (0x05U << MPU_RASR_SIZE_Pos) /*!< 64B Size of the MPU pr
 119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128B            (0x06U << MPU_RASR_SIZE_Pos) /*!< 128B Size of the MPU p
 120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256B            (0x07U << MPU_RASR_SIZE_Pos) /*!< 256B Size of the MPU p
 121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512B            (0x08U << MPU_RASR_SIZE_Pos) /*!< 512B Size of the MPU p
 122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1KB             (0x09U << MPU_RASR_SIZE_Pos) /*!< 1KB Size of the MPU pr
 123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2KB             (0x0AU << MPU_RASR_SIZE_Pos) /*!< 2KB Size of the MPU pr
 124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4KB             (0x0BU << MPU_RASR_SIZE_Pos) /*!< 4KB Size of the MPU pr
 125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_8KB             (0x0CU << MPU_RASR_SIZE_Pos) /*!< 8KB Size of the MPU pr
 126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_16KB            (0x0DU << MPU_RASR_SIZE_Pos) /*!< 16KB Size of the MPU p
 127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32KB            (0x0EU << MPU_RASR_SIZE_Pos) /*!< 32KB Size of the MPU p
 128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64KB            (0x0FU << MPU_RASR_SIZE_Pos) /*!< 64KB Size of the MPU p
 129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128KB           (0x10U << MPU_RASR_SIZE_Pos) /*!< 128KB Size of the MPU 
 130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256KB           (0x11U << MPU_RASR_SIZE_Pos) /*!< 256KB Size of the MPU 
 131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512KB           (0x12U << MPU_RASR_SIZE_Pos) /*!< 512KB Size of the MPU 
 132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1MB             (0x13U << MPU_RASR_SIZE_Pos) /*!< 1MB Size of the MPU pr
 133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2MB             (0x14U << MPU_RASR_SIZE_Pos) /*!< 2MB Size of the MPU pr
 134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4MB             (0x15U << MPU_RASR_SIZE_Pos) /*!< 4MB Size of the MPU pr
 135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_8MB             (0x16U << MPU_RASR_SIZE_Pos) /*!< 8MB Size of the MPU pr
 136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_16MB            (0x17U << MPU_RASR_SIZE_Pos) /*!< 16MB Size of the MPU p
 137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32MB            (0x18U << MPU_RASR_SIZE_Pos) /*!< 32MB Size of the MPU p
 138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64MB            (0x19U << MPU_RASR_SIZE_Pos) /*!< 64MB Size of the MPU p
 139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128MB           (0x1AU << MPU_RASR_SIZE_Pos) /*!< 128MB Size of the MPU 
 140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256MB           (0x1BU << MPU_RASR_SIZE_Pos) /*!< 256MB Size of the MPU 
 141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512MB           (0x1CU << MPU_RASR_SIZE_Pos) /*!< 512MB Size of the MPU 
 142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1GB             (0x1DU << MPU_RASR_SIZE_Pos) /*!< 1GB Size of the MPU pr
 143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2GB             (0x1EU << MPU_RASR_SIZE_Pos) /*!< 2GB Size of the MPU pr
 144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4GB             (0x1FU << MPU_RASR_SIZE_Pos) /*!< 4GB Size of the MPU pr
 145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
 146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
 147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
 149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION_PRIVILEDGES MPU Region Privileges
 150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
 151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_NO_ACCESS            (0x00U << MPU_RASR_AP_Pos) /*!< No access*/
 153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RW              (0x01U << MPU_RASR_AP_Pos) /*!< RW privileged (privilege
 154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RW_URO          (0x02U << MPU_RASR_AP_Pos) /*!< RW privileged - RO user 
 155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_FULL_ACCESS          (0x03U << MPU_RASR_AP_Pos) /*!< RW privileged & user (Fu
 156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RO              (0x05U << MPU_RASR_AP_Pos) /*!< RO privileged (privilege
 157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RO_URO          (0x06U << MPU_RASR_AP_Pos) /*!< RO privileged & user (re
 158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
 159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
 160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
 162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_TEX MPU TEX Level
 163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
 164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL0                  (0x00U << MPU_RASR_TEX_Pos) /*!< b000 for TEX bits */
 166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL1                  (0x01U << MPU_RASR_TEX_Pos) /*!< b001 for TEX bits */
 167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL2                  (0x02U << MPU_RASR_TEX_Pos) /*!< b010 for TEX bits */
 168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL4                  (0x04U << MPU_RASR_TEX_Pos) /*!< b100 for TEX bits */
 169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
 170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
 171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
 173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_INSTRUCTION_ACCESS MPU Instruction Access
 174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
 175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_INSTRUCTION_ACCESS_ENABLE   0x00U            /*!< Instruction fetches enabled */
 177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_INSTRUCTION_ACCESS_DISABLE  MPU_RASR_XN_Msk  /*!< Instruction fetches disabled*/
 178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
 179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
 180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
 182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_SHAREABLE_ACCESS MPU Shareable Access
 183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
 184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_ACCESS_SHAREABLE            MPU_RASR_S_Msk   /*!< Shareable memory attribute */
 186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_SHAREABLE        0x00U            /*!< Not Shareable memory attribute */
 187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
 188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
 189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
 191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CACHEABLE_ACCESS MPU Cacheable Access
 192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
 193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_ACCESS_CACHEABLE            MPU_RASR_C_Msk   /*!< Cacheable memory attribute */
 195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_CACHEABLE        0x00U            /*!< Not Cacheable memory attribute */
 196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
 197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
 198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
 200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_BUFFERABLE_ACCESS MPU Bufferable Access
 201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
 202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_ACCESS_BUFFERABLE           MPU_RASR_B_Msk   /*!< Bufferable memory attribute */
 204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_BUFFERABLE       0x00U            /*!< Not Bufferable memory attribute */
 205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
 206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
 207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** #endif /* __MPU_PRESENT */
 209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
 210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @}
 211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
 213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /* Exported macro ------------------------------------------------------------*/
 214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
 215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /* Exported functions --------------------------------------------------------*/
 216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Functions CORTEX Exported Functions
 217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
 218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
 220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EF_SYSTICK SYSTICK
 221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @{
 222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** 
 224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** /**
 225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @brief  This function checks if the Systick counter flag is active or not.
 226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @note   It can be used in timeout function on application side.
 227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @rmtoll STK_CTRL     COUNTFLAG     LL_SYSTICK_IsActiveCounterFlag
 228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   * @retval State of bit (1 or 0).
 229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   */
 230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** __STATIC_INLINE uint32_t LL_SYSTICK_IsActiveCounterFlag(void)
 231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h **** {
 232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_cortex.h ****   return ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == (SysTick_CTRL_COUNTFLAG_Msk));
 800              		.loc 3 232 0 is_stmt 1
 801 0026 094B     		ldr	r3, .L43
 802              	.LVL84:
 803 0028 1B68     		ldr	r3, [r3]
 804              	.LBE177:
 805              	.LBE176:
 745:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 746:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       if (LL_SYSTICK_IsActiveCounterFlag() == 1U)
 806              		.loc 1 746 0
 807 002a 13F4803F 		tst	r3, #65536
 808 002e 02D0     		beq	.L37
 747:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       {
 748:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****         timeout --;
 809              		.loc 1 748 0
 810 0030 019B     		ldr	r3, [sp, #4]
 811 0032 013B     		subs	r3, r3, #1
 812 0034 0193     		str	r3, [sp, #4]
 813              	.L37:
 814              	.LVL85:
 815              	.LBB178:
 816              	.LBB179:
 817              		.loc 2 5142 0
 818 0036 CB68     		ldr	r3, [r1, #12]
 819 0038 C3F38013 		ubfx	r3, r3, #6, #1
 820              	.LVL86:
 821              	.LBE179:
 822              	.LBE178:
 749:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       }
 750:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       tmp = LL_RTC_IsActiveFlag_INIT(RTCx);
 751:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       if (timeout == 0U)
 823              		.loc 1 751 0
 824 003c 019A     		ldr	r2, [sp, #4]
 825 003e 002A     		cmp	r2, #0
 826 0040 EED1     		bne	.L36
 752:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       {
 753:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****         status = ERROR;
 827              		.loc 1 753 0
 828 0042 0120     		movs	r0, #1
 829              	.LVL87:
 830 0044 ECE7     		b	.L36
 831              	.LVL88:
 832              	.L40:
 730:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   uint32_t tmp;
 833              		.loc 1 730 0
 834 0046 0020     		movs	r0, #0
 835              	.LVL89:
 836              	.L35:
 754:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       }
 755:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 756:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 757:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   return status;
 758:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 837              		.loc 1 758 0
 838 0048 02B0     		add	sp, sp, #8
 839              		.cfi_def_cfa_offset 0
 840              		@ sp needed
 841 004a 7047     		bx	lr
 842              	.L44:
 843              		.align	2
 844              	.L43:
 845 004c 10E000E0 		.word	-536813552
 846              		.cfi_endproc
 847              	.LFE368:
 849              		.section	.text.LL_RTC_DeInit,"ax",%progbits
 850              		.align	1
 851              		.global	LL_RTC_DeInit
 852              		.syntax unified
 853              		.thumb
 854              		.thumb_func
 855              		.fpu fpv4-sp-d16
 857              	LL_RTC_DeInit:
 858              	.LFB357:
 139:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ErrorStatus status;
 859              		.loc 1 139 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              	.LVL90:
 864 0000 10B5     		push	{r4, lr}
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 4, -8
 867              		.cfi_offset 14, -4
 868 0002 0446     		mov	r4, r0
 869              	.LVL91:
 870              	.LBB180:
 871              	.LBB181:
1368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 872              		.loc 2 1368 0
 873 0004 CA23     		movs	r3, #202
 874 0006 4362     		str	r3, [r0, #36]
1369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 875              		.loc 2 1369 0
 876 0008 5323     		movs	r3, #83
 877 000a 4362     		str	r3, [r0, #36]
 878              	.LVL92:
 879              	.LBE181:
 880              	.LBE180:
 149:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if(status != ERROR)
 881              		.loc 1 149 0
 882 000c FFF7FEFF 		bl	LL_RTC_EnterInitMode
 883              	.LVL93:
 150:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 884              		.loc 1 150 0
 885 0010 0128     		cmp	r0, #1
 886 0012 18D0     		beq	.L46
 153:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 887              		.loc 1 153 0
 888 0014 0023     		movs	r3, #0
 889 0016 2360     		str	r3, [r4]
 155:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, DR, (RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 890              		.loc 1 155 0
 891 0018 4FF6FF72 		movw	r2, #65535
 892 001c 6261     		str	r2, [r4, #20]
 156:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 893              		.loc 1 156 0
 894 001e 42F20112 		movw	r2, #8449
 895 0022 6260     		str	r2, [r4, #4]
 158:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 896              		.loc 1 158 0
 897 0024 A268     		ldr	r2, [r4, #8]
 898 0026 02F00702 		and	r2, r2, #7
 899 002a A260     		str	r2, [r4, #8]
 160:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMAR,   0x00000000U);
 900              		.loc 1 160 0
 901 002c 074A     		ldr	r2, .L48
 902 002e 2261     		str	r2, [r4, #16]
 161:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMBR,   0x00000000U);
 903              		.loc 1 161 0
 904 0030 E361     		str	r3, [r4, #28]
 162:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, SHIFTR,   0x00000000U);
 905              		.loc 1 162 0
 906 0032 2362     		str	r3, [r4, #32]
 163:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, CALR,     0x00000000U);
 907              		.loc 1 163 0
 908 0034 E362     		str	r3, [r4, #44]
 164:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMASSR, 0x00000000U);
 909              		.loc 1 164 0
 910 0036 E363     		str	r3, [r4, #60]
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_WriteReg(RTCx, ALRMBSSR, 0x00000000U);
 911              		.loc 1 165 0
 912 0038 6364     		str	r3, [r4, #68]
 166:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 913              		.loc 1 166 0
 914 003a A364     		str	r3, [r4, #72]
 171:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 915              		.loc 1 171 0
 916 003c 2364     		str	r3, [r4, #64]
 174:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) || defined (STM32L4P5xx) || defined (STM
 917              		.loc 1 174 0
 918 003e E364     		str	r3, [r4, #76]
 919              	.LVL94:
 920              	.LBB182:
 921              	.LBB183:
1133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 922              		.loc 2 1133 0
 923 0040 6FF08003 		mvn	r3, #128
 924 0044 E360     		str	r3, [r4, #12]
 925              	.LVL95:
 926              	.L46:
 927              	.LBE183:
 928              	.LBE182:
 929              	.LBB184:
 930              	.LBB185:
1357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 931              		.loc 2 1357 0
 932 0046 FF23     		movs	r3, #255
 933 0048 6362     		str	r3, [r4, #36]
 934              	.LVL96:
 935              	.LBE185:
 936              	.LBE184:
 185:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 937              		.loc 1 185 0
 938 004a 10BD     		pop	{r4, pc}
 939              	.LVL97:
 940              	.L49:
 941              		.align	2
 942              	.L48:
 943 004c FF007F00 		.word	8323327
 944              		.cfi_endproc
 945              	.LFE357:
 947              		.section	.text.LL_RTC_Init,"ax",%progbits
 948              		.align	1
 949              		.global	LL_RTC_Init
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu fpv4-sp-d16
 955              	LL_RTC_Init:
 956              	.LFB358:
 200:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 957              		.loc 1 200 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              	.LVL98:
 962 0000 38B5     		push	{r3, r4, r5, lr}
 963              		.cfi_def_cfa_offset 16
 964              		.cfi_offset 3, -16
 965              		.cfi_offset 4, -12
 966              		.cfi_offset 5, -8
 967              		.cfi_offset 14, -4
 968 0002 0446     		mov	r4, r0
 969 0004 0D46     		mov	r5, r1
 970              	.LVL99:
 971              	.LBB186:
 972              	.LBB187:
1368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 973              		.loc 2 1368 0
 974 0006 CA23     		movs	r3, #202
 975 0008 4362     		str	r3, [r0, #36]
1369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 976              		.loc 2 1369 0
 977 000a 5323     		movs	r3, #83
 978 000c 4362     		str	r3, [r0, #36]
 979              	.LVL100:
 980              	.LBE187:
 981              	.LBE186:
 213:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 982              		.loc 1 213 0
 983 000e FFF7FEFF 		bl	LL_RTC_EnterInitMode
 984              	.LVL101:
 985 0012 0128     		cmp	r0, #1
 986 0014 18D0     		beq	.L51
 216:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 987              		.loc 1 216 0
 988 0016 2B68     		ldr	r3, [r5]
 989              	.LVL102:
 990              	.LBB188:
 991              	.LBB189:
 975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 992              		.loc 2 975 0
 993 0018 A268     		ldr	r2, [r4, #8]
 994 001a 22F04002 		bic	r2, r2, #64
 995 001e 1343     		orrs	r3, r3, r2
 996              	.LVL103:
 997 0020 A360     		str	r3, [r4, #8]
 998              	.LVL104:
 999              	.LBE189:
 1000              	.LBE188:
 219:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     LL_RTC_SetAsynchPrescaler(RTCx, RTC_InitStruct->AsynchPrescaler);
 1001              		.loc 1 219 0
 1002 0022 AA68     		ldr	r2, [r5, #8]
 1003              	.LVL105:
 1004              	.LBB190:
 1005              	.LBB191:
1324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1006              		.loc 2 1324 0
 1007 0024 2369     		ldr	r3, [r4, #16]
 1008 0026 23F4FF43 		bic	r3, r3, #32640
 1009 002a 23F07F03 		bic	r3, r3, #127
 1010 002e 1343     		orrs	r3, r3, r2
 1011 0030 2361     		str	r3, [r4, #16]
 1012              	.LVL106:
 1013              	.LBE191:
 1014              	.LBE190:
 220:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 1015              		.loc 1 220 0
 1016 0032 6A68     		ldr	r2, [r5, #4]
 1017              	.LVL107:
 1018              	.LBB192:
 1019              	.LBB193:
1312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1020              		.loc 2 1312 0
 1021 0034 2369     		ldr	r3, [r4, #16]
 1022 0036 23F4FE03 		bic	r3, r3, #8323072
 1023 003a 43EA0243 		orr	r3, r3, r2, lsl #16
 1024 003e 2361     		str	r3, [r4, #16]
 1025              	.LVL108:
 1026              	.LBE193:
 1027              	.LBE192:
 1028              	.LBB194:
 1029              	.LBB195:
1133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1030              		.loc 2 1133 0
 1031 0040 6FF08003 		mvn	r3, #128
 1032 0044 E360     		str	r3, [r4, #12]
 1033              	.LVL109:
 1034              	.LBE195:
 1035              	.LBE194:
 225:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 1036              		.loc 1 225 0
 1037 0046 0020     		movs	r0, #0
 1038              	.LVL110:
 1039              	.L51:
 1040              	.LBB196:
 1041              	.LBB197:
1357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1042              		.loc 2 1357 0
 1043 0048 FF23     		movs	r3, #255
 1044 004a 6362     		str	r3, [r4, #36]
 1045              	.LVL111:
 1046              	.LBE197:
 1047              	.LBE196:
 231:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 1048              		.loc 1 231 0
 1049 004c 38BD     		pop	{r3, r4, r5, pc}
 1050              		.cfi_endproc
 1051              	.LFE358:
 1053              		.section	.text.LL_RTC_ExitInitMode,"ax",%progbits
 1054              		.align	1
 1055              		.global	LL_RTC_ExitInitMode
 1056              		.syntax unified
 1057              		.thumb
 1058              		.thumb_func
 1059              		.fpu fpv4-sp-d16
 1061              	LL_RTC_ExitInitMode:
 1062              	.LFB369:
 759:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 760:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 761:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Exit the RTC Initialization mode.
 762:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @note   When the initialization sequence is complete, the calendar restarts
 763:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         counting after 4 RTCCLK cycles.
 764:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
 765:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         @ref LL_RTC_DisableWriteProtection before calling this function.
 766:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 767:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 768:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - SUCCESS: RTC exited from in Init mode
 769:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - ERROR: Not applicable
 770:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 771:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** ErrorStatus LL_RTC_ExitInitMode(RTC_TypeDef *RTCx)
 772:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
 1063              		.loc 1 772 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067              		@ link register save eliminated.
 1068              	.LVL112:
 1069              	.LBB198:
 1070              	.LBB199:
1133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1071              		.loc 2 1133 0
 1072 0000 6FF08003 		mvn	r3, #128
 1073 0004 C360     		str	r3, [r0, #12]
 1074              	.LVL113:
 1075              	.LBE199:
 1076              	.LBE198:
 773:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Check the parameter */
 774:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 775:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 776:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Disable initialization mode */
 777:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_DisableInitMode(RTCx);
 778:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 779:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   return SUCCESS;
 780:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 1077              		.loc 1 780 0
 1078 0006 0020     		movs	r0, #0
 1079              	.LVL114:
 1080 0008 7047     		bx	lr
 1081              		.cfi_endproc
 1082              	.LFE369:
 1084              		.section	.text.LL_RTC_WaitForSynchro,"ax",%progbits
 1085              		.align	1
 1086              		.global	LL_RTC_WaitForSynchro
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1090              		.fpu fpv4-sp-d16
 1092              	LL_RTC_WaitForSynchro:
 1093              	.LFB370:
 781:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 782:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** /**
 783:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @brief  Waits until the RTC Time and Day registers (RTC_TR and RTC_DR) are
 784:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         synchronized with RTC APB clock.
 785:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the
 786:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         @ref LL_RTC_DisableWriteProtection before calling this function.
 787:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar
 788:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes
 789:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         the software must first clear the RSF flag.
 790:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         The software must then wait until it is set again before reading
 791:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         the calendar, which means that the calendar registers have been
 792:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.
 793:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @param  RTCx RTC Instance
 794:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   * @retval An ErrorStatus enumeration value:
 795:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - SUCCESS: RTC registers are synchronised
 796:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   *          - ERROR: RTC registers are not synchronised
 797:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   */
 798:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** ErrorStatus LL_RTC_WaitForSynchro(RTC_TypeDef *RTCx)
 799:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** {
 1094              		.loc 1 799 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 8
 1097              		@ frame_needed = 0, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099              	.LVL115:
 1100 0000 82B0     		sub	sp, sp, #8
 1101              		.cfi_def_cfa_offset 8
 1102 0002 0246     		mov	r2, r0
 800:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   __IO uint32_t timeout = RTC_SYNCHRO_TIMEOUT;
 1103              		.loc 1 800 0
 1104 0004 4FF47A73 		mov	r3, #1000
 1105 0008 0193     		str	r3, [sp, #4]
 1106              	.LVL116:
 1107              	.LBB200:
 1108              	.LBB201:
5143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Get Registers synchronization flag
5147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          RSF           LL_RTC_IsActiveFlag_RS
5148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
5150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_RS(RTC_TypeDef *RTCx)
5152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_RSF) == (RTC_ISR_RSF));
5154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
5155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** 
5156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** /**
5157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @brief  Clear Registers synchronization flag
5158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @rmtoll ISR          RSF           LL_RTC_ClearFlag_RS
5159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
5160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   * @retval None
5161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   */
5162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_RS(RTC_TypeDef *RTCx)
5163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** {
5164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_RSF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT))
 1109              		.loc 2 5164 0
 1110 000a C368     		ldr	r3, [r0, #12]
 1111 000c 03F08003 		and	r3, r3, #128
 1112 0010 63F0A003 		orn	r3, r3, #160
 1113 0014 C360     		str	r3, [r0, #12]
 1114              	.LVL117:
 1115              	.LBE201:
 1116              	.LBE200:
 1117              	.LBB202:
 1118              	.LBB203:
5153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1119              		.loc 2 5153 0
 1120 0016 C368     		ldr	r3, [r0, #12]
 1121 0018 C3F34013 		ubfx	r3, r3, #5, #1
 1122              	.LVL118:
 1123              	.LBE203:
 1124              	.LBE202:
 801:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ErrorStatus status = SUCCESS;
 1125              		.loc 1 801 0
 1126 001c 0020     		movs	r0, #0
 1127              	.LVL119:
 1128              	.L55:
 802:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   uint32_t tmp;
 803:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 804:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Check the parameter */
 805:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(RTCx));
 806:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 807:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Clear RSF flag */
 808:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   LL_RTC_ClearFlag_RS(RTCx);
 809:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 810:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   /* Wait the registers to be synchronised */
 811:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 812:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   while ((timeout != 0U) && (tmp != 0U))
 1129              		.loc 1 812 0
 1130 001e 0199     		ldr	r1, [sp, #4]
 1131 0020 81B1     		cbz	r1, .L58
 1132              		.loc 1 812 0 is_stmt 0 discriminator 1
 1133 0022 7BB1     		cbz	r3, .L58
 1134              	.LBB204:
 1135              	.LBB205:
 1136              		.loc 3 232 0 is_stmt 1
 1137 0024 154B     		ldr	r3, .L68
 1138              	.LVL120:
 1139 0026 1B68     		ldr	r3, [r3]
 1140              	.LBE205:
 1141              	.LBE204:
 813:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 814:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (LL_SYSTICK_IsActiveCounterFlag() == 1U)
 1142              		.loc 1 814 0
 1143 0028 13F4803F 		tst	r3, #65536
 1144 002c 02D0     		beq	.L56
 815:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 816:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       timeout--;
 1145              		.loc 1 816 0
 1146 002e 019B     		ldr	r3, [sp, #4]
 1147 0030 013B     		subs	r3, r3, #1
 1148 0032 0193     		str	r3, [sp, #4]
 1149              	.L56:
 1150              	.LVL121:
 1151              	.LBB206:
 1152              	.LBB207:
5153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1153              		.loc 2 5153 0
 1154 0034 D368     		ldr	r3, [r2, #12]
 1155 0036 C3F34013 		ubfx	r3, r3, #5, #1
 1156              	.LVL122:
 1157              	.LBE207:
 1158              	.LBE206:
 817:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 818:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 819:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     if (timeout == 0U)
 1159              		.loc 1 819 0
 1160 003a 0199     		ldr	r1, [sp, #4]
 1161 003c 0029     		cmp	r1, #0
 1162 003e EED1     		bne	.L55
 820:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 821:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       status = ERROR;
 1163              		.loc 1 821 0
 1164 0040 0120     		movs	r0, #1
 1165              	.LVL123:
 1166 0042 ECE7     		b	.L55
 1167              	.LVL124:
 1168              	.L58:
 822:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 823:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 824:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 825:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   if (status != ERROR)
 1169              		.loc 1 825 0
 1170 0044 C0B9     		cbnz	r0, .L60
 826:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 827:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     timeout = RTC_SYNCHRO_TIMEOUT;
 1171              		.loc 1 827 0
 1172 0046 4FF47A73 		mov	r3, #1000
 1173              	.LVL125:
 1174 004a 0193     		str	r3, [sp, #4]
 1175              	.LVL126:
 1176              	.LBB208:
 1177              	.LBB209:
5153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1178              		.loc 2 5153 0
 1179 004c D368     		ldr	r3, [r2, #12]
 1180 004e C3F34013 		ubfx	r3, r3, #5, #1
 1181              	.LVL127:
 1182              	.LBE209:
 1183              	.LBE208:
 828:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 829:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     while ((timeout != 0U) && (tmp != 1U))
 1184              		.loc 1 829 0
 1185 0052 05E0     		b	.L61
 1186              	.L62:
 1187              	.LVL128:
 1188              	.LBB210:
 1189              	.LBB211:
5153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1190              		.loc 2 5153 0
 1191 0054 D368     		ldr	r3, [r2, #12]
 1192 0056 C3F34013 		ubfx	r3, r3, #5, #1
 1193              	.LVL129:
 1194              	.LBE211:
 1195              	.LBE210:
 830:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 831:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       if (LL_SYSTICK_IsActiveCounterFlag() == 1U)
 832:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       {
 833:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****         timeout--;
 834:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       }
 835:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       tmp = LL_RTC_IsActiveFlag_RS(RTCx);
 836:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       if (timeout == 0U)
 1196              		.loc 1 836 0
 1197 005a 0199     		ldr	r1, [sp, #4]
 1198 005c 01B9     		cbnz	r1, .L61
 837:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       {
 838:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****         status = ERROR;
 1199              		.loc 1 838 0
 1200 005e 0120     		movs	r0, #1
 1201              	.LVL130:
 1202              	.L61:
 829:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 1203              		.loc 1 829 0
 1204 0060 0199     		ldr	r1, [sp, #4]
 1205 0062 49B1     		cbz	r1, .L60
 829:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 1206              		.loc 1 829 0 is_stmt 0 discriminator 1
 1207 0064 43B9     		cbnz	r3, .L60
 1208              	.LBB212:
 1209              	.LBB213:
 1210              		.loc 3 232 0 is_stmt 1
 1211 0066 054B     		ldr	r3, .L68
 1212              	.LVL131:
 1213 0068 1B68     		ldr	r3, [r3]
 1214              	.LBE213:
 1215              	.LBE212:
 831:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       {
 1216              		.loc 1 831 0
 1217 006a 13F4803F 		tst	r3, #65536
 1218 006e F1D0     		beq	.L62
 833:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       }
 1219              		.loc 1 833 0
 1220 0070 019B     		ldr	r3, [sp, #4]
 1221 0072 013B     		subs	r3, r3, #1
 1222 0074 0193     		str	r3, [sp, #4]
 1223 0076 EDE7     		b	.L62
 1224              	.LVL132:
 1225              	.L60:
 839:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       }
 840:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 841:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 842:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 843:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   return (status);
 844:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** }
 1226              		.loc 1 844 0
 1227 0078 02B0     		add	sp, sp, #8
 1228              		.cfi_def_cfa_offset 0
 1229              		@ sp needed
 1230 007a 7047     		bx	lr
 1231              	.L69:
 1232              		.align	2
 1233              	.L68:
 1234 007c 10E000E0 		.word	-536813552
 1235              		.cfi_endproc
 1236              	.LFE370:
 1238              		.section	.text.LL_RTC_TIME_Init,"ax",%progbits
 1239              		.align	1
 1240              		.global	LL_RTC_TIME_Init
 1241              		.syntax unified
 1242              		.thumb
 1243              		.thumb_func
 1244              		.fpu fpv4-sp-d16
 1246              	LL_RTC_TIME_Init:
 1247              	.LFB360:
 259:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 1248              		.loc 1 259 0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 1252              	.LVL133:
 1253 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1254              		.cfi_def_cfa_offset 24
 1255              		.cfi_offset 3, -24
 1256              		.cfi_offset 4, -20
 1257              		.cfi_offset 5, -16
 1258              		.cfi_offset 6, -12
 1259              		.cfi_offset 7, -8
 1260              		.cfi_offset 14, -4
 1261 0002 0446     		mov	r4, r0
 1262 0004 1546     		mov	r5, r2
 1263              	.LVL134:
 266:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 1264              		.loc 1 266 0
 1265 0006 0E46     		mov	r6, r1
 1266 0008 59BB     		cbnz	r1, .L71
 1267              	.LVL135:
 1268              	.LBB214:
 1269              	.LBB215:
 988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1270              		.loc 2 988 0
 1271 000a 8368     		ldr	r3, [r0, #8]
 1272              	.LVL136:
 1273              	.LBE215:
 1274              	.LBE214:
 268:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 1275              		.loc 1 268 0
 1276 000c 13F0400F 		tst	r3, #64
 1277 0010 01D1     		bne	.L72
 275:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(RTC_TimeStruct->Hours));
 1278              		.loc 1 275 0
 1279 0012 0023     		movs	r3, #0
 1280 0014 1360     		str	r3, [r2]
 1281              	.L72:
 1282              	.LVL137:
 1283              	.LBB216:
 1284              	.LBB217:
1368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 1285              		.loc 2 1368 0
 1286 0016 CA23     		movs	r3, #202
 1287 0018 6362     		str	r3, [r4, #36]
1369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1288              		.loc 2 1369 0
 1289 001a 5323     		movs	r3, #83
 1290 001c 6362     		str	r3, [r4, #36]
 1291              	.LVL138:
 1292              	.LBE217:
 1293              	.LBE216:
 301:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 1294              		.loc 1 301 0
 1295 001e 2046     		mov	r0, r4
 1296              	.LVL139:
 1297 0020 FFF7FEFF 		bl	LL_RTC_EnterInitMode
 1298              	.LVL140:
 1299 0024 0128     		cmp	r0, #1
 1300 0026 19D0     		beq	.L73
 304:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 1301              		.loc 1 304 0
 1302 0028 16B3     		cbz	r6, .L74
 306:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                          RTC_TimeStruct->Minutes, RTC_TimeStruct->Seconds);
 1303              		.loc 1 306 0
 1304 002a 2A68     		ldr	r2, [r5]
 1305 002c 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2
 307:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 1306              		.loc 1 307 0
 1307 002e 6979     		ldrb	r1, [r5, #5]	@ zero_extendqisi2
 1308 0030 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 1309              	.LVL141:
 1310              	.LBB218:
 1311              	.LBB219:
1673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))     | \
 1312              		.loc 2 1673 0
 1313 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 1314              	.LVL142:
1674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos)) | \
 1315              		.loc 2 1674 0
 1316 0036 42EA0122 		orr	r2, r2, r1, lsl #8
1673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))     | \
 1317              		.loc 2 1673 0
 1318 003a 1343     		orrs	r3, r3, r2
 1319              	.LVL143:
1677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1320              		.loc 2 1677 0
 1321 003c 2268     		ldr	r2, [r4]
 1322 003e 22F07F12 		bic	r2, r2, #8323199
 1323 0042 22F4FE42 		bic	r2, r2, #32512
 1324 0046 1343     		orrs	r3, r3, r2
 1325              	.LVL144:
 1326 0048 2360     		str	r3, [r4]
 1327              	.LVL145:
 1328              	.L75:
 1329              	.LBE219:
 1330              	.LBE218:
 1331              	.LBB220:
 1332              	.LBB221:
1133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1333              		.loc 2 1133 0
 1334 004a 264B     		ldr	r3, .L79
 1335 004c 6FF08002 		mvn	r2, #128
 1336 0050 DA60     		str	r2, [r3, #12]
 1337              	.LVL146:
 1338              	.LBE221:
 1339              	.LBE220:
 1340              	.LBB222:
 1341              	.LBB223:
1274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1342              		.loc 2 1274 0
 1343 0052 A368     		ldr	r3, [r4, #8]
 1344              	.LVL147:
 1345              	.LBE223:
 1346              	.LBE222:
 320:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 1347              		.loc 1 320 0
 1348 0054 13F0200F 		tst	r3, #32
 1349 0058 3FD0     		beq	.L78
 326:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 1350              		.loc 1 326 0
 1351 005a 0020     		movs	r0, #0
 1352              	.LVL148:
 1353              	.L73:
 1354              	.LBB224:
 1355              	.LBB225:
1357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1356              		.loc 2 1357 0
 1357 005c FF23     		movs	r3, #255
 1358 005e 6362     		str	r3, [r4, #36]
 1359              	.LVL149:
 1360              	.LBE225:
 1361              	.LBE224:
 333:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 1362              		.loc 1 333 0
 1363 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1364              	.LVL150:
 1365              	.L71:
 1366              	.LBB226:
 1367              	.LBB227:
 988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1368              		.loc 2 988 0
 1369 0062 8368     		ldr	r3, [r0, #8]
 1370              	.LVL151:
 1371              	.LBE227:
 1372              	.LBE226:
 283:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 1373              		.loc 1 283 0
 1374 0064 13F0400F 		tst	r3, #64
 1375 0068 D5D1     		bne	.L72
 290:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****       assert_param(IS_LL_RTC_HOUR24(__LL_RTC_CONVERT_BCD2BIN(RTC_TimeStruct->Hours)));
 1376              		.loc 1 290 0
 1377 006a 0023     		movs	r3, #0
 1378 006c 1360     		str	r3, [r2]
 1379 006e D2E7     		b	.L72
 1380              	.LVL152:
 1381              	.L74:
 311:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Minutes),
 1382              		.loc 1 311 0
 1383 0070 2868     		ldr	r0, [r5]
 1384 0072 2E79     		ldrb	r6, [r5, #4]	@ zero_extendqisi2
 1385              	.LVL153:
 1386 0074 1C4B     		ldr	r3, .L79+4
 1387 0076 A3FB0612 		umull	r1, r2, r3, r6
 1388 007a D208     		lsrs	r2, r2, #3
 1389 007c 1101     		lsls	r1, r2, #4
 1390 007e C9B2     		uxtb	r1, r1
 1391 0080 02EB8202 		add	r2, r2, r2, lsl #2
 1392 0084 5700     		lsls	r7, r2, #1
 1393 0086 F61B     		subs	r6, r6, r7
 1394 0088 3143     		orrs	r1, r1, r6
 1395 008a C9B2     		uxtb	r1, r1
 312:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_TimeStruct->Seconds));
 1396              		.loc 1 312 0
 1397 008c 6F79     		ldrb	r7, [r5, #5]	@ zero_extendqisi2
 1398 008e A3FB0762 		umull	r6, r2, r3, r7
 1399 0092 D208     		lsrs	r2, r2, #3
 1400 0094 1601     		lsls	r6, r2, #4
 1401 0096 F6B2     		uxtb	r6, r6
 1402 0098 02EB8202 		add	r2, r2, r2, lsl #2
 1403 009c 4FEA420C 		lsl	ip, r2, #1
 1404 00a0 A7EB0C07 		sub	r7, r7, ip
 1405 00a4 3E43     		orrs	r6, r6, r7
 1406 00a6 F6B2     		uxtb	r6, r6
 313:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 1407              		.loc 1 313 0
 1408 00a8 AD79     		ldrb	r5, [r5, #6]	@ zero_extendqisi2
 1409              	.LVL154:
 1410 00aa A3FB0523 		umull	r2, r3, r3, r5
 1411 00ae DB08     		lsrs	r3, r3, #3
 1412 00b0 1A01     		lsls	r2, r3, #4
 1413 00b2 D2B2     		uxtb	r2, r2
 1414 00b4 03EB8303 		add	r3, r3, r3, lsl #2
 1415 00b8 5F00     		lsls	r7, r3, #1
 1416 00ba EB1B     		subs	r3, r5, r7
 1417 00bc 1343     		orrs	r3, r3, r2
 1418 00be DBB2     		uxtb	r3, r3
 1419              	.LVL155:
 1420              	.LBB228:
 1421              	.LBB229:
1673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))     | \
 1422              		.loc 2 1673 0
 1423 00c0 40EA0141 		orr	r1, r0, r1, lsl #16
 1424              	.LVL156:
1674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos)) | \
 1425              		.loc 2 1674 0
 1426 00c4 41EA0626 		orr	r6, r1, r6, lsl #8
 1427              	.LVL157:
1673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))     | \
 1428              		.loc 2 1673 0
 1429 00c8 3343     		orrs	r3, r3, r6
 1430              	.LVL158:
1677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1431              		.loc 2 1677 0
 1432 00ca 2268     		ldr	r2, [r4]
 1433              	.LVL159:
 1434 00cc 22F07F12 		bic	r2, r2, #8323199
 1435 00d0 22F4FE42 		bic	r2, r2, #32512
 1436 00d4 1343     		orrs	r3, r3, r2
 1437              	.LVL160:
 1438 00d6 2360     		str	r3, [r4]
 1439              	.LVL161:
 1440 00d8 B7E7     		b	.L75
 1441              	.LVL162:
 1442              	.L78:
 1443              	.LBE229:
 1444              	.LBE228:
 322:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 1445              		.loc 1 322 0
 1446 00da 2046     		mov	r0, r4
 1447 00dc FFF7FEFF 		bl	LL_RTC_WaitForSynchro
 1448              	.LVL163:
 1449 00e0 BCE7     		b	.L73
 1450              	.L80:
 1451 00e2 00BF     		.align	2
 1452              	.L79:
 1453 00e4 00280040 		.word	1073752064
 1454 00e8 CDCCCCCC 		.word	-858993459
 1455              		.cfi_endproc
 1456              	.LFE360:
 1458              		.section	.text.LL_RTC_DATE_Init,"ax",%progbits
 1459              		.align	1
 1460              		.global	LL_RTC_DATE_Init
 1461              		.syntax unified
 1462              		.thumb
 1463              		.thumb_func
 1464              		.fpu fpv4-sp-d16
 1466              	LL_RTC_DATE_Init:
 1467              	.LFB362:
 362:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   ErrorStatus status = ERROR;
 1468              		.loc 1 362 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 0
 1471              		@ frame_needed = 0, uses_anonymous_args = 0
 1472              	.LVL164:
 1473 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1474              		.cfi_def_cfa_offset 24
 1475              		.cfi_offset 3, -24
 1476              		.cfi_offset 4, -20
 1477              		.cfi_offset 5, -16
 1478              		.cfi_offset 6, -12
 1479              		.cfi_offset 7, -8
 1480              		.cfi_offset 14, -4
 1481 0002 0446     		mov	r4, r0
 1482 0004 1546     		mov	r5, r2
 1483              	.LVL165:
 369:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 1484              		.loc 1 369 0
 1485 0006 0E46     		mov	r6, r1
 1486 0008 39B9     		cbnz	r1, .L82
 369:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 1487              		.loc 1 369 0 is_stmt 0 discriminator 1
 1488 000a 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 1489 000c 13F0100F 		tst	r3, #16
 1490 0010 03D0     		beq	.L82
 371:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   }
 1491              		.loc 1 371 0 is_stmt 1
 1492 0012 03F0EF03 		and	r3, r3, #239
 1493 0016 0A33     		adds	r3, r3, #10
 1494 0018 5370     		strb	r3, [r2, #1]
 1495              	.L82:
 1496              	.LVL166:
 1497              	.LBB230:
 1498              	.LBB231:
1368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
 1499              		.loc 2 1368 0
 1500 001a CA23     		movs	r3, #202
 1501 001c 6362     		str	r3, [r4, #36]
1369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1502              		.loc 2 1369 0
 1503 001e 5323     		movs	r3, #83
 1504 0020 6362     		str	r3, [r4, #36]
 1505              	.LVL167:
 1506              	.LBE231:
 1507              	.LBE230:
 392:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****   {
 1508              		.loc 1 392 0
 1509 0022 2046     		mov	r0, r4
 1510              	.LVL168:
 1511 0024 FFF7FEFF 		bl	LL_RTC_EnterInitMode
 1512              	.LVL169:
 1513 0028 0128     		cmp	r0, #1
 1514 002a 18D0     		beq	.L83
 395:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 1515              		.loc 1 395 0
 1516 002c D6B1     		cbz	r6, .L84
 397:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 1517              		.loc 1 397 0
 1518 002e 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1519 0030 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 1520 0032 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 1521 0034 EB78     		ldrb	r3, [r5, #3]	@ zero_extendqisi2
 1522              	.LVL170:
 1523              	.LBB232:
 1524              	.LBB233:
2005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
 1525              		.loc 2 2005 0
 1526 0036 1B04     		lsls	r3, r3, #16
 1527              	.LVL171:
2004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
 1528              		.loc 2 2004 0
 1529 0038 43EA4033 		orr	r3, r3, r0, lsl #13
2005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
 1530              		.loc 2 2005 0
 1531 003c 43EA0123 		orr	r3, r3, r1, lsl #8
2004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
 1532              		.loc 2 2004 0
 1533 0040 1343     		orrs	r3, r3, r2
 1534              	.LVL172:
2009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1535              		.loc 2 2009 0
 1536 0042 6168     		ldr	r1, [r4, #4]
 1537              	.LVL173:
 1538 0044 234A     		ldr	r2, .L89
 1539              	.LVL174:
 1540 0046 0A40     		ands	r2, r2, r1
 1541 0048 1343     		orrs	r3, r3, r2
 1542              	.LVL175:
 1543 004a 6360     		str	r3, [r4, #4]
 1544              	.LVL176:
 1545              	.L85:
 1546              	.LBE233:
 1547              	.LBE232:
 1548              	.LBB234:
 1549              	.LBB235:
1133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1550              		.loc 2 1133 0
 1551 004c 224B     		ldr	r3, .L89+4
 1552 004e 6FF08002 		mvn	r2, #128
 1553 0052 DA60     		str	r2, [r3, #12]
 1554              	.LVL177:
 1555              	.LBE235:
 1556              	.LBE234:
 1557              	.LBB236:
 1558              	.LBB237:
1274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1559              		.loc 2 1274 0
 1560 0054 A368     		ldr	r3, [r4, #8]
 1561              	.LVL178:
 1562              	.LBE237:
 1563              	.LBE236:
 409:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     {
 1564              		.loc 1 409 0
 1565 0056 13F0200F 		tst	r3, #32
 1566 005a 37D0     		beq	.L88
 415:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 1567              		.loc 1 415 0
 1568 005c 0020     		movs	r0, #0
 1569              	.LVL179:
 1570              	.L83:
 1571              	.LBB238:
 1572              	.LBB239:
1357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1573              		.loc 2 1357 0
 1574 005e FF23     		movs	r3, #255
 1575 0060 6362     		str	r3, [r4, #36]
 1576              	.LVL180:
 1577              	.LBE239:
 1578              	.LBE238:
 422:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c **** 
 1579              		.loc 1 422 0
 1580 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1581              	.LVL181:
 1582              	.L84:
 401:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****                          __LL_RTC_CONVERT_BIN2BCD(RTC_DateStruct->Month), __LL_RTC_CONVERT_BIN2BCD(
 1583              		.loc 1 401 0
 1584 0064 2E78     		ldrb	r6, [r5]	@ zero_extendqisi2
 1585              	.LVL182:
 1586 0066 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 1587 0068 1C4A     		ldr	r2, .L89+8
 1588 006a A2FB0310 		umull	r1, r0, r2, r3
 1589 006e C008     		lsrs	r0, r0, #3
 1590 0070 0101     		lsls	r1, r0, #4
 1591 0072 C9B2     		uxtb	r1, r1
 1592 0074 00EB8000 		add	r0, r0, r0, lsl #2
 1593 0078 4700     		lsls	r7, r0, #1
 1594 007a DB1B     		subs	r3, r3, r7
 1595 007c 1943     		orrs	r1, r1, r3
 1596 007e C9B2     		uxtb	r1, r1
 402:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 1597              		.loc 1 402 0
 1598 0080 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1599 0082 A2FB0037 		umull	r3, r7, r2, r0
 1600 0086 FF08     		lsrs	r7, r7, #3
 1601 0088 3B01     		lsls	r3, r7, #4
 1602 008a DBB2     		uxtb	r3, r3
 1603 008c 07EB8707 		add	r7, r7, r7, lsl #2
 1604 0090 4FEA470C 		lsl	ip, r7, #1
 1605 0094 A0EB0C00 		sub	r0, r0, ip
 1606 0098 0343     		orrs	r3, r3, r0
 1607 009a D8B2     		uxtb	r0, r3
 1608 009c ED78     		ldrb	r5, [r5, #3]	@ zero_extendqisi2
 1609              	.LVL183:
 1610 009e A2FB0532 		umull	r3, r2, r2, r5
 1611 00a2 D208     		lsrs	r2, r2, #3
 1612 00a4 1301     		lsls	r3, r2, #4
 1613 00a6 DBB2     		uxtb	r3, r3
 1614 00a8 02EB8202 		add	r2, r2, r2, lsl #2
 1615 00ac 5700     		lsls	r7, r2, #1
 1616 00ae ED1B     		subs	r5, r5, r7
 1617 00b0 2B43     		orrs	r3, r3, r5
 1618 00b2 DBB2     		uxtb	r3, r3
 1619              	.LVL184:
 1620              	.LBB240:
 1621              	.LBB241:
2005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
 1622              		.loc 2 2005 0
 1623 00b4 1B04     		lsls	r3, r3, #16
 1624              	.LVL185:
2004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
 1625              		.loc 2 2004 0
 1626 00b6 43EA4633 		orr	r3, r3, r6, lsl #13
2005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
 1627              		.loc 2 2005 0
 1628 00ba 43EA0023 		orr	r3, r3, r0, lsl #8
2004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
 1629              		.loc 2 2004 0
 1630 00be 0B43     		orrs	r3, r3, r1
 1631              	.LVL186:
2009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_rtc.h **** }
 1632              		.loc 2 2009 0
 1633 00c0 6268     		ldr	r2, [r4, #4]
 1634 00c2 0449     		ldr	r1, .L89
 1635              	.LVL187:
 1636 00c4 1140     		ands	r1, r1, r2
 1637 00c6 0B43     		orrs	r3, r3, r1
 1638              	.LVL188:
 1639 00c8 6360     		str	r3, [r4, #4]
 1640              	.LVL189:
 1641 00ca BFE7     		b	.L85
 1642              	.LVL190:
 1643              	.L88:
 1644              	.LBE241:
 1645              	.LBE240:
 411:../system/src/stm32l4-hal-driver/stm32l4xx_ll_rtc.c ****     }
 1646              		.loc 1 411 0
 1647 00cc 2046     		mov	r0, r4
 1648 00ce FFF7FEFF 		bl	LL_RTC_WaitForSynchro
 1649              	.LVL191:
 1650 00d2 C4E7     		b	.L83
 1651              	.L90:
 1652              		.align	2
 1653              	.L89:
 1654 00d4 C00000FF 		.word	-16777024
 1655 00d8 00280040 		.word	1073752064
 1656 00dc CDCCCCCC 		.word	-858993459
 1657              		.cfi_endproc
 1658              	.LFE362:
 1660              		.text
 1661              	.Letext0:
 1662              		.file 4 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 1663              		.file 5 "../system/include/cmsis/stm32l4xx/core_cm4.h"
 1664              		.file 6 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 1665              		.file 7 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 1666              		.file 8 "../system/include/cmsis/stm32l4xx/device/stm32l4xx.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_ll_rtc.c
     /tmp/cc89wWMv.s:18     .text.LL_RTC_StructInit:0000000000000000 $t
     /tmp/cc89wWMv.s:25     .text.LL_RTC_StructInit:0000000000000000 LL_RTC_StructInit
     /tmp/cc89wWMv.s:49     .text.LL_RTC_TIME_StructInit:0000000000000000 $t
     /tmp/cc89wWMv.s:56     .text.LL_RTC_TIME_StructInit:0000000000000000 LL_RTC_TIME_StructInit
     /tmp/cc89wWMv.s:79     .text.LL_RTC_DATE_StructInit:0000000000000000 $t
     /tmp/cc89wWMv.s:86     .text.LL_RTC_DATE_StructInit:0000000000000000 LL_RTC_DATE_StructInit
     /tmp/cc89wWMv.s:110    .text.LL_RTC_ALMA_Init:0000000000000000 $t
     /tmp/cc89wWMv.s:117    .text.LL_RTC_ALMA_Init:0000000000000000 LL_RTC_ALMA_Init
     /tmp/cc89wWMv.s:381    .text.LL_RTC_ALMA_Init:000000000000012c $d
     /tmp/cc89wWMv.s:388    .text.LL_RTC_ALMB_Init:0000000000000000 $t
     /tmp/cc89wWMv.s:395    .text.LL_RTC_ALMB_Init:0000000000000000 LL_RTC_ALMB_Init
     /tmp/cc89wWMv.s:658    .text.LL_RTC_ALMB_Init:000000000000012c $d
     /tmp/cc89wWMv.s:665    .text.LL_RTC_ALMA_StructInit:0000000000000000 $t
     /tmp/cc89wWMv.s:672    .text.LL_RTC_ALMA_StructInit:0000000000000000 LL_RTC_ALMA_StructInit
     /tmp/cc89wWMv.s:702    .text.LL_RTC_ALMB_StructInit:0000000000000000 $t
     /tmp/cc89wWMv.s:709    .text.LL_RTC_ALMB_StructInit:0000000000000000 LL_RTC_ALMB_StructInit
     /tmp/cc89wWMv.s:739    .text.LL_RTC_EnterInitMode:0000000000000000 $t
     /tmp/cc89wWMv.s:746    .text.LL_RTC_EnterInitMode:0000000000000000 LL_RTC_EnterInitMode
     /tmp/cc89wWMv.s:845    .text.LL_RTC_EnterInitMode:000000000000004c $d
     /tmp/cc89wWMv.s:850    .text.LL_RTC_DeInit:0000000000000000 $t
     /tmp/cc89wWMv.s:857    .text.LL_RTC_DeInit:0000000000000000 LL_RTC_DeInit
     /tmp/cc89wWMv.s:943    .text.LL_RTC_DeInit:000000000000004c $d
     /tmp/cc89wWMv.s:948    .text.LL_RTC_Init:0000000000000000 $t
     /tmp/cc89wWMv.s:955    .text.LL_RTC_Init:0000000000000000 LL_RTC_Init
     /tmp/cc89wWMv.s:1054   .text.LL_RTC_ExitInitMode:0000000000000000 $t
     /tmp/cc89wWMv.s:1061   .text.LL_RTC_ExitInitMode:0000000000000000 LL_RTC_ExitInitMode
     /tmp/cc89wWMv.s:1085   .text.LL_RTC_WaitForSynchro:0000000000000000 $t
     /tmp/cc89wWMv.s:1092   .text.LL_RTC_WaitForSynchro:0000000000000000 LL_RTC_WaitForSynchro
     /tmp/cc89wWMv.s:1234   .text.LL_RTC_WaitForSynchro:000000000000007c $d
     /tmp/cc89wWMv.s:1239   .text.LL_RTC_TIME_Init:0000000000000000 $t
     /tmp/cc89wWMv.s:1246   .text.LL_RTC_TIME_Init:0000000000000000 LL_RTC_TIME_Init
     /tmp/cc89wWMv.s:1453   .text.LL_RTC_TIME_Init:00000000000000e4 $d
     /tmp/cc89wWMv.s:1459   .text.LL_RTC_DATE_Init:0000000000000000 $t
     /tmp/cc89wWMv.s:1466   .text.LL_RTC_DATE_Init:0000000000000000 LL_RTC_DATE_Init
     /tmp/cc89wWMv.s:1654   .text.LL_RTC_DATE_Init:00000000000000d4 $d
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.b6144e50d34fc998dd4c2cfb6387cf91
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32l4xx_ll_rtc.h.48.982591193c7e1af8e2597e996d6557ba
                           .group:0000000000000000 wm4.stm32l4xx_ll_cortex.h.37.3ee1390cf689a930256ba19807aeead8

NO UNDEFINED SYMBOLS
