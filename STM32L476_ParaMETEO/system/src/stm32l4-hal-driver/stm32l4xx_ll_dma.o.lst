   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_ll_dma.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LL_DMA_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	LL_DMA_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	LL_DMA_DeInit:
  26              	.LFB270:
  27              		.file 1 "../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c"
   1:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /**
   2:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   ******************************************************************************
   3:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @file    stm32l4xx_ll_dma.c
   4:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @author  MCD Application Team
   5:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @brief   DMA LL module driver.
   6:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   ******************************************************************************
   7:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @attention
   8:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *
   9:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * All rights reserved.</center></h2>
  11:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *
  12:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * the "License"; You may not use this file except in compliance with the
  14:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * License. You may obtain a copy of the License at:
  15:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *
  17:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   ******************************************************************************
  18:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   */
  19:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #if defined(USE_FULL_LL_DRIVER)
  20:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  21:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /* Includes ------------------------------------------------------------------*/
  22:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #include "stm32l4xx_ll_dma.h"
  23:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #include "stm32l4xx_ll_bus.h"
  24:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #ifdef  USE_FULL_ASSERT
  25:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #include "stm32_assert.h"
  26:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #else
  27:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define assert_param(expr) ((void)0U)
  28:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #endif
  29:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  30:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /** @addtogroup STM32L4xx_LL_Driver
  31:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @{
  32:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   */
  33:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  34:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #if defined (DMA1) || defined (DMA2)
  35:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  36:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /** @defgroup DMA_LL DMA
  37:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @{
  38:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   */
  39:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  40:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /* Private types -------------------------------------------------------------*/
  41:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /* Private variables ---------------------------------------------------------*/
  42:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /* Private constants ---------------------------------------------------------*/
  43:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /* Private macros ------------------------------------------------------------*/
  44:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /** @addtogroup DMA_LL_Private_Macros
  45:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @{
  46:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   */
  47:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_DIRECTION(__VALUE__)          (((__VALUE__) == LL_DMA_DIRECTION_PERIPH_TO_MEMORY)
  48:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
  49:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_DIRECTION_MEMORY_TO_MEMORY)
  50:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  51:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_MODE(__VALUE__)               (((__VALUE__) == LL_DMA_MODE_NORMAL) || \
  52:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_MODE_CIRCULAR))
  53:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  54:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_PERIPHINCMODE(__VALUE__)      (((__VALUE__) == LL_DMA_PERIPH_INCREMENT) || \
  55:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_PERIPH_NOINCREMENT))
  56:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  57:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_MEMORYINCMODE(__VALUE__)      (((__VALUE__) == LL_DMA_MEMORY_INCREMENT) || \
  58:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_MEMORY_NOINCREMENT))
  59:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  60:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_PERIPHDATASIZE(__VALUE__)     (((__VALUE__) == LL_DMA_PDATAALIGN_BYTE)      || \
  61:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_PDATAALIGN_HALFWORD)  || \
  62:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_PDATAALIGN_WORD))
  63:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  64:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_MEMORYDATASIZE(__VALUE__)     (((__VALUE__) == LL_DMA_MDATAALIGN_BYTE)      || \
  65:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_MDATAALIGN_HALFWORD)  || \
  66:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_MDATAALIGN_WORD))
  67:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  68:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_NBDATA(__VALUE__)             ((__VALUE__)  <= 0x0000FFFFU)
  69:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  70:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #if defined(DMAMUX1)
  71:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_PERIPHREQUEST(__VALUE__)      ((__VALUE__) <= 93U)
  72:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #else
  73:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_PERIPHREQUEST(__VALUE__)      (((__VALUE__) == LL_DMA_REQUEST_0)  || \
  74:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_REQUEST_1)  || \
  75:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_REQUEST_2)  || \
  76:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_REQUEST_3)  || \
  77:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_REQUEST_4)  || \
  78:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_REQUEST_5)  || \
  79:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_REQUEST_6)  || \
  80:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_REQUEST_7))
  81:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #endif /* DMAMUX1 */
  82:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  83:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_PRIORITY(__VALUE__)           (((__VALUE__) == LL_DMA_PRIORITY_LOW)    || \
  84:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_PRIORITY_MEDIUM) || \
  85:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_PRIORITY_HIGH)   || \
  86:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                  ((__VALUE__) == LL_DMA_PRIORITY_VERYHIGH))
  87:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
  88:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #if defined (DMA2)
  89:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #if defined (DMA2_Channel6) && defined (DMA2_Channel7)
  90:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_ALL_CHANNEL_INSTANCE(INSTANCE, CHANNEL)  ((((INSTANCE) == DMA1) && \
  91:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                          (((CHANNEL) == LL_DMA_CHANNEL_1) || \
  92:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_2) || \
  93:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_3) || \
  94:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_4) || \
  95:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_5) || \
  96:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_6) || \
  97:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_7))) || \
  98:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                          (((INSTANCE) == DMA2) && \
  99:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                          (((CHANNEL) == LL_DMA_CHANNEL_1) || \
 100:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_2) || \
 101:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_3) || \
 102:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_4) || \
 103:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_5) || \
 104:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_6) || \
 105:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_7))))
 106:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #else
 107:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_ALL_CHANNEL_INSTANCE(INSTANCE, CHANNEL)  ((((INSTANCE) == DMA1) && \
 108:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                          (((CHANNEL) == LL_DMA_CHANNEL_1) || \
 109:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_2) || \
 110:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_3) || \
 111:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_4) || \
 112:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_5) || \
 113:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_6) || \
 114:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_7))) || \
 115:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                          (((INSTANCE) == DMA2) && \
 116:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                          (((CHANNEL) == LL_DMA_CHANNEL_1) || \
 117:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_2) || \
 118:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_3) || \
 119:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_4) || \
 120:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                           ((CHANNEL) == LL_DMA_CHANNEL_5))))
 121:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #endif
 122:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #else
 123:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #define IS_LL_DMA_ALL_CHANNEL_INSTANCE(INSTANCE, CHANNEL)  ((((INSTANCE) == DMA1) && \
 124:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                             (((CHANNEL) == LL_DMA_CHANNEL_1)|| \
 125:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                             ((CHANNEL) == LL_DMA_CHANNEL_2) || \
 126:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                             ((CHANNEL) == LL_DMA_CHANNEL_3) || \
 127:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                             ((CHANNEL) == LL_DMA_CHANNEL_4) || \
 128:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                             ((CHANNEL) == LL_DMA_CHANNEL_5) || \
 129:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                             ((CHANNEL) == LL_DMA_CHANNEL_6) || \
 130:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                                                             ((CHANNEL) == LL_DMA_CHANNEL_7))))
 131:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #endif
 132:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /**
 133:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @}
 134:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   */
 135:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 136:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /* Private function prototypes -----------------------------------------------*/
 137:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 138:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /* Exported functions --------------------------------------------------------*/
 139:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /** @addtogroup DMA_LL_Exported_Functions
 140:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @{
 141:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   */
 142:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 143:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /** @addtogroup DMA_LL_EF_Init
 144:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @{
 145:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   */
 146:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 147:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /**
 148:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @brief  De-initialize the DMA registers to their default reset values.
 149:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @param  DMAx DMAx Instance
 150:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @param  Channel This parameter can be one of the following values:
 151:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_1
 152:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_2
 153:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_3
 154:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_4
 155:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_5
 156:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_6
 157:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_7
 158:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_ALL
 159:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @retval An ErrorStatus enumeration value:
 160:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *          - SUCCESS: DMA registers are de-initialized
 161:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *          - ERROR: DMA registers are not de-initialized
 162:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   */
 163:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** ErrorStatus LL_DMA_DeInit(DMA_TypeDef *DMAx, uint32_t Channel)
 164:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** {
  28              		.loc 1 164 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   ErrorStatus status = SUCCESS;
 166:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_Channel_TypeDef *tmp;
 167:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 168:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   /* Check the DMA Instance DMAx and Channel parameters*/
 169:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   assert_param(IS_LL_DMA_ALL_CHANNEL_INSTANCE(DMAx, Channel) || (Channel == LL_DMA_CHANNEL_ALL));
 170:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 171:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   if (Channel == LL_DMA_CHANNEL_ALL)
  34              		.loc 1 171 0
  35 0000 11F5803F 		cmn	r1, #65536
  36 0004 4CD0     		beq	.L43
 164:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   ErrorStatus status = SUCCESS;
  37              		.loc 1 164 0
  38 0006 10B4     		push	{r4}
  39              		.cfi_def_cfa_offset 4
  40              		.cfi_offset 4, -4
 172:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   {
 173:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     if (DMAx == DMA1)
 174:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 175:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       /* Force reset of DMA clock */
 176:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_DMA1);
 177:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 178:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       /* Release reset of DMA clock */
 179:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_DMA1);
 180:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 181:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #if defined(DMA2)
 182:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     else if (DMAx == DMA2)
 183:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 184:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       /* Force reset of DMA clock */
 185:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       LL_AHB1_GRP1_ForceReset(LL_AHB1_GRP1_PERIPH_DMA2);
 186:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 187:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       /* Release reset of DMA clock */
 188:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       LL_AHB1_GRP1_ReleaseReset(LL_AHB1_GRP1_PERIPH_DMA2);
 189:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 190:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #endif
 191:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     else
 192:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 193:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       status = ERROR;
 194:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 195:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   }
 196:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   else
 197:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   {
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     tmp = (DMA_Channel_TypeDef *)(__LL_DMA_GET_CHANNEL_INSTANCE(DMAx, Channel));
  41              		.loc 1 198 0
  42 0008 624B     		ldr	r3, .L66
  43 000a 9842     		cmp	r0, r3
  44 000c 68D0     		beq	.L44
  45              	.L5:
  46              		.loc 1 198 0 is_stmt 0 discriminator 3
  47 000e 624B     		ldr	r3, .L66+4
  48 0010 9842     		cmp	r0, r3
  49 0012 69D0     		beq	.L45
  50              	.L7:
  51              		.loc 1 198 0 discriminator 7
  52 0014 5F4B     		ldr	r3, .L66
  53 0016 9842     		cmp	r0, r3
  54 0018 6AD0     		beq	.L46
  55              	.L8:
  56              		.loc 1 198 0 discriminator 11
  57 001a 5F4B     		ldr	r3, .L66+4
  58 001c 9842     		cmp	r0, r3
  59 001e 6BD0     		beq	.L47
  60              	.L9:
  61              		.loc 1 198 0 discriminator 15
  62 0020 5C4B     		ldr	r3, .L66
  63 0022 9842     		cmp	r0, r3
  64 0024 6CD0     		beq	.L48
  65              	.L10:
  66              		.loc 1 198 0 discriminator 19
  67 0026 5C4B     		ldr	r3, .L66+4
  68 0028 9842     		cmp	r0, r3
  69 002a 6DD0     		beq	.L49
  70              	.L11:
  71              		.loc 1 198 0 discriminator 23
  72 002c 594B     		ldr	r3, .L66
  73 002e 9842     		cmp	r0, r3
  74 0030 6ED0     		beq	.L50
  75              	.L12:
  76              		.loc 1 198 0 discriminator 27
  77 0032 594B     		ldr	r3, .L66+4
  78 0034 9842     		cmp	r0, r3
  79 0036 6FD0     		beq	.L51
  80              	.L13:
  81              		.loc 1 198 0 discriminator 31
  82 0038 564B     		ldr	r3, .L66
  83 003a 9842     		cmp	r0, r3
  84 003c 70D0     		beq	.L52
  85              	.L14:
  86              		.loc 1 198 0 discriminator 35
  87 003e 564B     		ldr	r3, .L66+4
  88 0040 9842     		cmp	r0, r3
  89 0042 71D0     		beq	.L53
  90              	.L15:
  91              		.loc 1 198 0 discriminator 39
  92 0044 534B     		ldr	r3, .L66
  93 0046 9842     		cmp	r0, r3
  94 0048 72D0     		beq	.L54
  95              	.L16:
  96              		.loc 1 198 0 discriminator 43
  97 004a 534B     		ldr	r3, .L66+4
  98 004c 9842     		cmp	r0, r3
  99 004e 73D0     		beq	.L55
 100              	.L17:
 101              		.loc 1 198 0 discriminator 47
 102 0050 504B     		ldr	r3, .L66
 103 0052 9842     		cmp	r0, r3
 104 0054 74D0     		beq	.L56
 105              		.loc 1 198 0
 106 0056 514B     		ldr	r3, .L66+8
 107              	.L6:
 108              	.LVL1:
 199:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 200:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     /* Disable the selected DMAx_Channely */
 201:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     CLEAR_BIT(tmp->CCR, DMA_CCR_EN);
 109              		.loc 1 201 0 is_stmt 1 discriminator 78
 110 0058 1A68     		ldr	r2, [r3]
 111 005a 22F00102 		bic	r2, r2, #1
 112 005e 1A60     		str	r2, [r3]
 202:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 203:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     /* Reset DMAx_Channely control register */
 204:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     WRITE_REG(tmp->CCR, 0U);
 113              		.loc 1 204 0 discriminator 78
 114 0060 0022     		movs	r2, #0
 115 0062 1A60     		str	r2, [r3]
 205:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 206:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     /* Reset DMAx_Channely remaining bytes register */
 207:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     WRITE_REG(tmp->CNDTR, 0U);
 116              		.loc 1 207 0 discriminator 78
 117 0064 5A60     		str	r2, [r3, #4]
 208:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 209:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     /* Reset DMAx_Channely peripheral address register */
 210:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     WRITE_REG(tmp->CPAR, 0U);
 118              		.loc 1 210 0 discriminator 78
 119 0066 9A60     		str	r2, [r3, #8]
 211:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 212:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     /* Reset DMAx_Channely memory 0 address register */
 213:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     WRITE_REG(tmp->CMAR, 0U);
 120              		.loc 1 213 0 discriminator 78
 121 0068 DA60     		str	r2, [r3, #12]
 122              	.LVL2:
 123              	.LBB48:
 124              	.LBB49:
 125              		.file 2 "../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h"
   1:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
   2:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   ******************************************************************************
   3:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @file    stm32l4xx_ll_dma.h
   4:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @author  MCD Application Team
   5:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   ******************************************************************************
   7:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @attention
   8:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *
   9:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * All rights reserved.</center></h2>
  11:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *
  12:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * the "License"; You may not use this file except in compliance with the
  14:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * License. You may obtain a copy of the License at:
  15:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *
  17:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   ******************************************************************************
  18:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
  19:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
  20:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #ifndef STM32L4xx_LL_DMA_H
  22:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define STM32L4xx_LL_DMA_H
  23:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
  24:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #ifdef __cplusplus
  25:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** extern "C" {
  26:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif
  27:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
  28:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  29:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #include "stm32l4xx.h"
  30:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined(DMAMUX1)
  31:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #include "stm32l4xx_ll_dmamux.h"
  32:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif /* DMAMUX1 */
  33:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
  34:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @addtogroup STM32L4xx_LL_Driver
  35:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
  36:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
  37:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
  38:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined (DMA1) || defined (DMA2)
  39:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
  40:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  41:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
  42:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
  43:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
  44:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
  45:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  46:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  47:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
  48:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
  49:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  50:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  51:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
  52:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  53:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  54:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  55:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  56:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  57:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE),
  58:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
  59:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** };
  60:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
  61:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
  62:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
  63:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
  64:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  65:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined(DMAMUX1)
  66:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #else
  67:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Constants DMA Private Constants
  68:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
  69:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
  70:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Define used to get CSELR register offset */
  71:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define DMA_CSELR_OFFSET                  (uint32_t)(DMA1_CSELR_BASE - DMA1_BASE)
  72:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
  73:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Defines used for the bit position in the register and perform offsets */
  74:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define DMA_POSITION_CSELR_CXS            POSITION_VAL(DMA_CSELR_C1S << (Channel*4U))
  75:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
  76:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
  77:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
  78:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif /* DMAMUX1 */
  79:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  80:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined(DMAMUX1)
  81:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
  82:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  83:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
  84:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
  85:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
  86:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Helper macro to convert DMA Instance DMAx into DMAMUX channel
  87:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   DMAMUX channel 0 to 6 are mapped to DMA1 channel 1 to 7.
  88:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         DMAMUX channel 7 to 13 are mapped to DMA2 channel 1 to 7.
  89:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
  90:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Channel_Offset (LL_DMA_CHANNEL_7 or 0).
  91:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
  92:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define __LL_DMA_INSTANCE_TO_DMAMUX_CHANNEL(__DMA_INSTANCE__)   \
  93:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** (((__DMA_INSTANCE__) == DMA1) ? 0x00000000U : LL_DMA_CHANNEL_7)
  94:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
  95:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
  96:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
  97:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
  98:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #else
  99:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
 101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif /* DMAMUX1 */
 108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
 109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
 111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** typedef struct
 114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
 116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
 117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
 121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
 122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
 126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
 127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
 128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
 132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         is incremented or not.
 140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         is incremented or not.
 146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
 157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined(DMAMUX1)
 170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMAMUX_LL_EC_REQUEST
 172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #else
 175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_REQUEST
 177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif /* DMAMUX1 */
 180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
 214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
 262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000000U /*!< DMA Channel 1 */
 283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000001U /*!< DMA Channel 2 */
 284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000002U /*!< DMA Channel 3 */
 285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000003U /*!< DMA Channel 4 */
 286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000004U /*!< DMA Channel 5 */
 287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000005U /*!< DMA Channel 6 */
 288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000006U /*!< DMA Channel 7 */
 289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
 347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if !defined  (DMAMUX1)
 365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EC_REQUEST Transfer peripheral request
 366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_0                  0x00000000U /*!< DMA peripheral request 0  */
 369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_1                  0x00000001U /*!< DMA peripheral request 1  */
 370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_2                  0x00000002U /*!< DMA peripheral request 2  */
 371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_3                  0x00000003U /*!< DMA peripheral request 3  */
 372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_4                  0x00000004U /*!< DMA peripheral request 4  */
 373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_5                  0x00000005U /*!< DMA peripheral request 5  */
 374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_6                  0x00000006U /*!< DMA peripheral request 6  */
 375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_REQUEST_7                  0x00000007U /*!< DMA peripheral request 7  */
 376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif /* !defined DMAMUX1 */
 380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Write a value in DMA register
 394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  __REG__ Register to be written
 396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Read a value in DMA register
 403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  __REG__ Register to be read
 405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Register value
 406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval DMAx
 419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined(DMA2)
 421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel7)) ?  DMA2 : DMA1)
 423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #else
 424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)  (DMA1)
 425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif
 426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined (DMA2)
 433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined (DMA2_Channel6) && defined (DMA2_Channel7)
 434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel6)) ? LL_DMA_CHANNEL_6 : \
 447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #else
 449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif
 463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #else
 464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif
 473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval DMAx_Channely
 479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined (DMA2)
 481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined (DMA2_Channel6) && defined (DMA2_Channel7)
 482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  DMA2_Channel7)
 497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #else
 498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  DMA1_Channel7)
 511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif
 512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #else
 513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  DMA1_Channel7)
 521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif
 522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
 529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  * @{
 534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****  */
 535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
 538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Enable DMA channel.
 541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_EN);
 557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Disable DMA channel.
 561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_EN
 577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                   DMA_CCR_EN) == (DMA_CCR_EN)) ? 1UL : 0UL);
 598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              Configuration);
 635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_C
 711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              Mode);
 712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                    DMA_CCR_CIRC));
 735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     uint32_t dma_base_addr = (uint32_t)DMAx;
 757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR
 758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                    DMA_CCR_PINC));
 782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                    DMA_CCR_MINC));
 829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set Peripheral size.
 833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Peripheral size.
 858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set Memory size.
 882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_M
 902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Memory size.
 907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set Channel priority level.
 931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
 942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR, DMA_CCR_P
 952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              Priority);
 953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel priority level.
 957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_GetChannelPriorityLevel
 958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 973:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel)
 974:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 975:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 976:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CCR,
 977:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                    DMA_CCR_PL));
 978:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 979:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
 980:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
 981:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set Number of data to transfer.
 982:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   This action has no effect if
 983:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         channel is enabled.
 984:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_SetDataLength
 985:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 986:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 987:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 988:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 989:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 990:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 991:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 992:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 993:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 994:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  NbData Between Min_Data = 0 and Max_Data = 0x0000FFFF
 995:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
 996:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
 997:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t NbData)
 998:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
 999:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CNDTR,
1001:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
1002:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1003:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1004:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1005:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Number of data to transfer.
1006:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   Once the channel is enabled, the return value indicate the
1007:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         remaining bytes to be transmitted.
1008:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_GetDataLength
1009:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1010:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1011:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1012:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1013:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1014:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1015:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1016:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1017:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1018:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1019:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1020:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataLength(DMA_TypeDef *DMAx, uint32_t Channel)
1021:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1022:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1023:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CNDTR,
1024:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                    DMA_CNDTR_NDT));
1025:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1026:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1027:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1028:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Configure the Source and Destination addresses.
1029:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1030:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   Each peripheral using DMA provides an API to get directly the register address (LL_PPP_
1031:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_ConfigAddresses\n
1032:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CMAR         MA            LL_DMA_ConfigAddresses
1033:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1034:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1035:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1036:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1037:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1038:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1039:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1040:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1041:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1042:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  SrcAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1043:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DstAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1044:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
1045:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
1046:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
1047:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
1048:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1049:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1050:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t SrcAddres
1051:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
1052:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1053:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1054:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   /* Direction Memory to Periph */
1055:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
1056:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   {
1057:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, SrcAddr
1058:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, DstAddr
1059:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   }
1060:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   /* Direction Periph to Memory and Memory to Memory */
1061:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   else
1062:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   {
1063:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, SrcAddr
1064:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, DstAddr
1065:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   }
1066:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1067:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1068:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1069:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set the Memory address.
1070:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1071:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1072:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetMemoryAddress
1073:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1074:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1075:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1076:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1077:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1078:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1079:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1080:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1081:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1082:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1083:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1084:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1085:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1086:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1087:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, MemoryAdd
1089:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1090:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1091:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1092:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set the Peripheral address.
1093:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1094:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1095:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetPeriphAddress
1096:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1097:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1098:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1099:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  PeriphAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphAd
1109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, PeriphAdd
1112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Memory address.
1116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetMemoryAddress
1118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR));
1133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Peripheral address.
1137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetPeriphAddress
1139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR));
1154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set the Memory to Memory Source address.
1158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetM2MSrcAddress
1161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR, MemoryAdd
1177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set the Memory to Memory Destination address.
1181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetM2MDstAddress
1184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR, MemoryAdd
1200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get the Memory to Memory Source address.
1204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetM2MSrcAddress
1206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CPAR));
1221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get the Memory to Memory Destination address.
1225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetM2MDstAddress
1227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel]))->CMAR));
1242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #if defined(DMAMUX1)
1245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set DMA request for DMA Channels on DMAMUX Channel x.
1247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   DMAMUX channel 0 to 6 are mapped to DMA1 channel 1 to 7.
1248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         DMAMUX channel 7 to 13 are mapped to DMA2 channel 1 to 7.
1249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CxCR         DMAREQ_ID     LL_DMA_SetPeriphRequest
1250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Request This parameter can be one of the following values:
1260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_MEM2MEM
1261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR0
1262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR1
1263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR2
1264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR3
1265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC1
1266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC2
1267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH1
1268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH2
1269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM6_UP
1270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM7_UP
1271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_RX
1272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_TX
1273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_RX
1274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_TX
1275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI3_RX
1276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI3_TX
1277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_RX
1278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_TX
1279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_RX
1280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_TX
1281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_RX
1282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_TX
1283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C4_RX
1284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C4_TX
1285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_RX
1286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_TX
1287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_RX
1288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_TX
1289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_RX
1290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_TX
1291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART4_RX
1292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART4_TX
1293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART5_RX
1294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART5_TX
1295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_RX
1296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_TX
1297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI1_A
1298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI1_B
1299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI2_A
1300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI2_B
1301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_OSPI1
1302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_OSPI2
1303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH1
1304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH2
1305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH3
1306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH4
1307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_UP
1308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_TRIG
1309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_COM
1310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH1
1311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH2
1312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH3
1313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH4
1314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_UP
1315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_TRIG
1316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_COM
1317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH1
1318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH2
1319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH3
1320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH4
1321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_UP
1322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH1
1323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH2
1324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH3
1325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH4
1326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_UP
1327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_TRIG
1328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH1
1329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH2
1330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH3
1331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH4
1332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_UP
1333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH1
1334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH2
1335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH3
1336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH4
1337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_UP
1338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_TRIG
1339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_CH1
1340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_UP
1341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_TRIG
1342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_COM
1343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_CH1
1344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_UP
1345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_CH1
1346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_UP
1347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT0
1348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT1
1349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT2
1350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT3
1351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DCMI
1352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DCMI_PSSI
1353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_IN
1354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_OUT
1355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_HASH_IN
1356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Request)
1359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dmamux_ccr_offset = ((((uint32_t)DMAx ^ (uint32_t)DMA1) >> 10U) * 7U);
1361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   MODIFY_REG((DMAMUX1_Channel0 + Channel + dmamux_ccr_offset)->CCR, DMAMUX_CxCR_DMAREQ_ID, Request)
1362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get DMA request for DMA Channels on DMAMUX Channel x.
1366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   DMAMUX channel 0 to 6 are mapped to DMA1 channel 1 to 7.
1367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         DMAMUX channel 7 to 13 are mapped to DMA2 channel 1 to 7.
1368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CxCR         DMAREQ_ID     LL_DMA_GetPeriphRequest
1369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
1379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_MEM2MEM
1380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR0
1381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR1
1382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR2
1383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR3
1384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC1
1385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC2
1386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH1
1387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH2
1388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM6_UP
1389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM7_UP
1390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_RX
1391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_TX
1392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_RX
1393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_TX
1394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI3_RX
1395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI3_TX
1396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_RX
1397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_TX
1398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_RX
1399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_TX
1400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_RX
1401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C3_TX
1402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C4_RX
1403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C4_TX
1404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_RX
1405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_TX
1406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_RX
1407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_TX
1408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_RX
1409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_TX
1410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART4_RX
1411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART4_TX
1412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART5_RX
1413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UART5_TX
1414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_RX
1415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_TX
1416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI1_A
1417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI1_B
1418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI2_A
1419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SAI2_B
1420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_OSPI1
1421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_OSPI2
1422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH1
1423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH2
1424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH3
1425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH4
1426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_UP
1427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_TRIG
1428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_COM
1429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH1
1430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH2
1431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH3
1432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_CH4
1433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_UP
1434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_TRIG
1435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM8_COM
1436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH1
1437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH2
1438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH3
1439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH4
1440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_UP
1441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH1
1442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH2
1443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH3
1444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH4
1445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_UP
1446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_TRIG
1447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH1
1448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH2
1449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH3
1450:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_CH4
1451:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM4_UP
1452:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH1
1453:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH2
1454:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH3
1455:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_CH4
1456:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_UP
1457:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM5_TRIG
1458:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_CH1
1459:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_UP
1460:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_TRIG
1461:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_COM
1462:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_CH1
1463:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_UP
1464:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_CH1
1465:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_UP
1466:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT0
1467:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT1
1468:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT2
1469:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DFSDM1_FLT3
1470:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DCMI
1471:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DCMI_PSSI
1472:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_IN
1473:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_OUT
1474:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_HASH_IN
1475:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1476:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel)
1477:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1478:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   uint32_t dmamux_ccr_offset = ((((uint32_t)DMAx ^ (uint32_t)DMA1) >> 10U) * 7U);
1479:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_BIT((DMAMUX1_Channel0 + Channel + dmamux_ccr_offset)->CCR, DMAMUX_CxCR_DMAREQ_ID));
1480:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1481:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1482:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #else
1483:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1484:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Set DMA request for DMA instance on Channel x.
1485:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note   Please refer to Reference Manual to get the available mapping of Request value link to 
1486:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CSELR        C1S           LL_DMA_SetPeriphRequest\n
1487:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C2S           LL_DMA_SetPeriphRequest\n
1488:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C3S           LL_DMA_SetPeriphRequest\n
1489:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C4S           LL_DMA_SetPeriphRequest\n
1490:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C5S           LL_DMA_SetPeriphRequest\n
1491:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C6S           LL_DMA_SetPeriphRequest\n
1492:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C7S           LL_DMA_SetPeriphRequest
1493:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1494:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1495:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1496:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1497:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1498:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1499:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1500:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1501:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1502:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  PeriphRequest This parameter can be one of the following values:
1503:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_0
1504:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_1
1505:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_2
1506:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_3
1507:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_4
1508:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_5
1509:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_6
1510:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_7
1511:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1512:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1513:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphRe
1514:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   MODIFY_REG(((DMA_Request_TypeDef *)((uint32_t)((uint32_t)DMAx + DMA_CSELR_OFFSET)))->CSELR,
 126              		.loc 2 1515 0 discriminator 78
 127 006a D0F8A820 		ldr	r2, [r0, #168]
 128 006e 8C00     		lsls	r4, r1, #2
 129 0070 0F23     		movs	r3, #15
 130              	.LVL3:
 131 0072 A340     		lsls	r3, r3, r4
 132 0074 22EA0302 		bic	r2, r2, r3
 133              	.LVL4:
 134              	.LBB50:
 135              	.LBB51:
 136              		.file 3 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h"
   1:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**************************************************************************//**
   2:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @version  V5.2.0
   5:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * @date     08. May 2019
   6:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  ******************************************************************************/
   7:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*
   8:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  10:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  12:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  16:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  *
  18:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * limitations under the License.
  23:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
  24:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  25:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  28:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  34:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __has_builtin
  36:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  38:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
  39:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ASM
  41:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  43:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __INLINE
  44:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  46:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  49:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif                                           
  52:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  55:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __USED
  56:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  58:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __WEAK
  59:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  61:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED
  62:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  64:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  67:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  70:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  78:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  86:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
  94:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 102:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 110:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 113:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 116:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 119:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 120:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 122:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 124:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 125:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            in the used linker script.
 129:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 130:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 131:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 133:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 135:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 136:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t const* src;
 137:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 138:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 139:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __copy_table_t;
 140:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 141:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   typedef struct {
 142:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t* dest;
 143:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     uint32_t  wlen;
 144:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   } __zero_table_t;
 145:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 146:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 151:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 155:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 156:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 157:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     }
 161:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 162:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  
 163:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   _start();
 164:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 165:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 166:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 168:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 169:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 172:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 173:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 176:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 177:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 180:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 181:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 184:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 185:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 189:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 190:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 191:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 192:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 196:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 198:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 200:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 201:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 202:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 203:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 207:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 209:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 211:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 212:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 213:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 214:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register
 215:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Control Register value
 217:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 218:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 220:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 221:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 222:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 224:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 225:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 226:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 227:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 229:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 233:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 235:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 236:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 237:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 239:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 240:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 241:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 242:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 243:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 244:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register
 245:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 248:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 250:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 252:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 253:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 254:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 256:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 260:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 262:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 264:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 265:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 266:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 267:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 268:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               IPSR Register value
 271:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 272:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 274:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 275:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 276:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 278:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 279:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 280:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 281:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 282:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get APSR Register
 283:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               APSR Register value
 285:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 286:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 288:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 289:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 290:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 292:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 293:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 294:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 295:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 296:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               xPSR Register value
 299:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 300:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 302:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 303:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 304:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 306:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 307:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 308:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 309:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 310:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 313:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 314:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 316:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 317:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 318:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 320:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 321:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 322:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 323:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 325:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSP Register value
 328:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 329:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 331:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 332:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 333:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 335:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 336:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 337:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 338:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 339:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 340:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 344:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 346:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 348:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 349:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 350:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 352:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 356:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 358:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 360:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 361:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 362:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 363:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 364:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 367:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 368:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 370:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 371:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 372:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 374:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 375:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 376:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 377:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 379:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSP Register value
 382:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 383:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 385:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 386:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 387:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 389:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 390:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 391:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 392:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 393:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 394:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 398:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 400:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 402:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 403:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 404:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 406:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 410:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 412:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 414:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 415:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 416:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 417:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 419:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               SP Register value
 422:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 423:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 425:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 426:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 427:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 429:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 430:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 431:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 432:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 433:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 437:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 439:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 441:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 442:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 443:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 444:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 445:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 448:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 449:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 451:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 452:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 453:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 455:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 456:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 457:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 458:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 460:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Priority Mask value
 463:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 464:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 466:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 467:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 468:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 470:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 471:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 472:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 473:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 474:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 475:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 479:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 481:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 483:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 484:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 485:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 487:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 491:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 493:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 495:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 496:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 497:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 498:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 502:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Enable FIQ
 503:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 506:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 508:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 510:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 511:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 512:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 513:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Disable FIQ
 514:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 517:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 519:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 521:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 522:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 523:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 524:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority
 525:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 527:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 528:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 530:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 531:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 532:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 534:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 535:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 536:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 537:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 539:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Base Priority register value
 542:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 543:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 545:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 546:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 547:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 549:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 550:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 551:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 552:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 553:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 554:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority
 555:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 558:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 560:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 562:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 563:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 564:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 566:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 570:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 572:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 574:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 575:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 576:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 577:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 578:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 583:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 585:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 587:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 588:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 589:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 590:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 593:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 594:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 596:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 597:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 598:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 600:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 601:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 602:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 603:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 605:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Fault Mask register value
 608:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 609:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 611:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 612:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 613:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 615:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 616:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 617:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 618:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 619:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 620:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 624:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 626:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 628:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 629:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 630:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 632:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 636:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 638:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 640:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 641:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 642:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 646:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 647:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 650:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 651:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 655:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 656:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 659:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 661:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 665:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 666:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 667:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 669:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 670:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 671:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 672:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 674:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 678:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 681:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 683:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 686:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 687:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 688:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 690:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 691:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 692:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 693:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 694:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 695:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 696:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 700:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   
 701:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 704:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 706:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 711:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 713:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 714:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 715:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 716:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 718:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 722:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 725:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 727:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 731:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 733:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 734:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 735:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 736:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 737:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 738:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 742:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 743:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 746:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 748:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 752:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 753:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 754:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 756:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 757:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 758:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 759:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 760:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 762:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 766:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 769:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 771:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return 0U;
 774:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 775:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 776:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 778:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 779:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 780:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 781:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 782:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 783:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 784:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   mode.
 788:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 789:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 792:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 794:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 799:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 801:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 802:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 803:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 804:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 806:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 810:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 813:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 815:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 819:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 821:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 822:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 823:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 824:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 827:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 828:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 829:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Get FPSCR
 830:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 833:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 835:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 843:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 844:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 845:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(result);
 847:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 848:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 849:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return(0U);
 850:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 851:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 852:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 853:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 854:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 855:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Set FPSCR
 856:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 859:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 861:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 869:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 871:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 872:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   (void)fpscr;
 873:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 874:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 875:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 876:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 877:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 879:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 880:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   Access to dedicated instructions
 883:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   @{
 884:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** */
 885:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 886:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 894:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 898:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 899:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 900:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   No Operation
 901:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 903:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 905:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 906:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 909:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 911:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 912:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 913:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Wait For Event
 914:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 917:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 919:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 920:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 921:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Send Event
 922:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 924:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 926:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 927:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 928:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            after the instruction has been completed.
 932:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 933:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 935:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 937:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 938:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 939:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 940:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 944:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 946:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 948:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 949:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 950:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 951:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 955:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 957:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 959:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 960:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 961:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 962:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
 966:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 967:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 969:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
 972:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 973:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 974:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 976:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
 977:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 978:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 979:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 980:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 981:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
 985:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
 986:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
 988:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
 989:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 990:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
 992:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
 993:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 994:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
 995:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
 996:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
1000:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1001:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1003:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
1006:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   int16_t result;
1007:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1008:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
1010:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
1011:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
1012:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1013:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1014:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1015:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Rotated value
1020:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1021:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1023:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   op2 %= 32U;
1024:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   if (op2 == 0U)
1025:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
1026:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     return op1;
1027:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
1028:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
1030:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1031:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1032:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1033:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Breakpoint
1034:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1039:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1041:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1042:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1043:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return               Reversed value
1047:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1048:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1050:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t result;
1051:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1052:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 137              		.loc 3 1055 0 discriminator 78
 138              		.syntax unified
 139              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 140 0078 93FAA3F3 		rbit r3, r3
 141              	@ 0 "" 2
 142              	.LVL5:
 143              		.thumb
 144              		.syntax unified
 145              	.LBE51:
 146              	.LBE50:
 147              		.loc 2 1515 0 discriminator 78
 148 007c C0F8A820 		str	r2, [r0, #168]
 149              	.LVL6:
 150              	.LBE49:
 151              	.LBE48:
 214:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 215:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #if defined(DMAMUX1)
 216:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     /* Reset Request register field for DMAx Channel */
 217:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     LL_DMA_SetPeriphRequest(DMAx, Channel, LL_DMAMUX_REQ_MEM2MEM);
 218:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #else
 219:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     /* Reset Request register field for DMAx Channel */
 220:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     LL_DMA_SetPeriphRequest(DMAx, Channel, LL_DMA_REQUEST_0);
 221:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #endif /* DMAMUX1 */
 222:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 223:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     if (Channel == LL_DMA_CHANNEL_1)
 152              		.loc 1 223 0 discriminator 78
 153 0080 0029     		cmp	r1, #0
 154 0082 64D0     		beq	.L57
 224:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 225:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       /* Reset interrupt pending bits for DMAx Channel1 */
 226:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       LL_DMA_ClearFlag_GI1(DMAx);
 227:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 228:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     else if (Channel == LL_DMA_CHANNEL_2)
 155              		.loc 1 228 0
 156 0084 0129     		cmp	r1, #1
 157 0086 68D0     		beq	.L58
 229:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 230:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       /* Reset interrupt pending bits for DMAx Channel2 */
 231:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       LL_DMA_ClearFlag_GI2(DMAx);
 232:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 233:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     else if (Channel == LL_DMA_CHANNEL_3)
 158              		.loc 1 233 0
 159 0088 0229     		cmp	r1, #2
 160 008a 6AD0     		beq	.L59
 234:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 235:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       /* Reset interrupt pending bits for DMAx Channel3 */
 236:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       LL_DMA_ClearFlag_GI3(DMAx);
 237:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 238:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     else if (Channel == LL_DMA_CHANNEL_4)
 161              		.loc 1 238 0
 162 008c 0329     		cmp	r1, #3
 163 008e 6DD0     		beq	.L60
 239:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 240:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       /* Reset interrupt pending bits for DMAx Channel4 */
 241:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       LL_DMA_ClearFlag_GI4(DMAx);
 242:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 243:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     else if (Channel == LL_DMA_CHANNEL_5)
 164              		.loc 1 243 0
 165 0090 0429     		cmp	r1, #4
 166 0092 70D0     		beq	.L61
 244:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 245:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       /* Reset interrupt pending bits for DMAx Channel5 */
 246:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       LL_DMA_ClearFlag_GI5(DMAx);
 247:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 248:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 249:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     else if (Channel == LL_DMA_CHANNEL_6)
 167              		.loc 1 249 0
 168 0094 0529     		cmp	r1, #5
 169 0096 73D0     		beq	.L62
 250:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 251:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       /* Reset interrupt pending bits for DMAx Channel6 */
 252:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       LL_DMA_ClearFlag_GI6(DMAx);
 253:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 254:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     else if (Channel == LL_DMA_CHANNEL_7)
 170              		.loc 1 254 0
 171 0098 0629     		cmp	r1, #6
 172 009a 76D0     		beq	.L63
 255:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 256:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       /* Reset interrupt pending bits for DMAx Channel7 */
 257:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       LL_DMA_ClearFlag_GI7(DMAx);
 258:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 259:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     else
 260:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 261:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****       status = ERROR;
 173              		.loc 1 261 0
 174 009c 0120     		movs	r0, #1
 175              	.LVL7:
 176 009e 59E0     		b	.L4
 177              	.LVL8:
 178              	.L43:
 179              		.cfi_def_cfa_offset 0
 180              		.cfi_restore 4
 173:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 181              		.loc 1 173 0
 182 00a0 3C4B     		ldr	r3, .L66
 183 00a2 9842     		cmp	r0, r3
 184 00a4 04D0     		beq	.L64
 182:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     {
 185              		.loc 1 182 0
 186 00a6 3C4B     		ldr	r3, .L66+4
 187 00a8 9842     		cmp	r0, r3
 188 00aa 0DD0     		beq	.L65
 193:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 189              		.loc 1 193 0
 190 00ac 0120     		movs	r0, #1
 191              	.LVL9:
 262:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****     }
 263:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   }
 264:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 265:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   return status;
 266:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** }
 192              		.loc 1 266 0
 193 00ae 7047     		bx	lr
 194              	.LVL10:
 195              	.L64:
 196              	.LBB52:
 197              	.LBB53:
 198              		.file 4 "../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h"
   1:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
   2:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   ******************************************************************************
   3:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @file    stm32l4xx_ll_bus.h
   4:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @author  MCD Application Team
   5:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
   7:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   @verbatim
   8:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   ==============================================================================
  10:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****     [..]
  11:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****       from/to registers.
  14:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  17:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****     [..]
  18:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****       Workarounds:
  19:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  22:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   @endverbatim
  23:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   ******************************************************************************
  24:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @attention
  25:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *
  26:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  27:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *
  29:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *
  34:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   ******************************************************************************
  35:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
  36:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  37:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #ifndef STM32L4xx_LL_BUS_H
  39:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define STM32L4xx_LL_BUS_H
  40:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  41:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #ifdef __cplusplus
  42:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** extern "C" {
  43:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif
  44:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  45:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #include "stm32l4xx.h"
  47:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  48:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** @addtogroup STM32L4xx_LL_Driver
  49:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @{
  50:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
  51:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  52:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(RCC)
  53:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  54:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @{
  56:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
  57:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  58:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  61:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  63:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  65:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @{
  69:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
  70:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  71:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @{
  73:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
  74:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  75:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHB1ENR_DMA1EN
  76:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHB1ENR_DMA2EN
  77:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(DMAMUX1)
  78:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMAMUX1        RCC_AHB1ENR_DMAMUX1EN
  79:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* DMAMUX1 */
  80:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHB1ENR_FLASHEN
  81:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHB1ENR_CRCEN
  82:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHB1ENR_TSCEN
  83:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(DMA2D)
  84:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2D          RCC_AHB1ENR_DMA2DEN
  85:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* DMA2D */
  86:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(GFXMMU)
  87:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GFXMMU         RCC_AHB1ENR_GFXMMUEN
  88:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* GFXMMU */
  89:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM1          RCC_AHB1SMENR_SRAM1SMEN
  90:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
  91:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @}
  92:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
  93:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
  94:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB2_GRP1_PERIPH  AHB2 GRP1 PERIPH
  95:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @{
  96:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
  97:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
  98:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOA          RCC_AHB2ENR_GPIOAEN
  99:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOB          RCC_AHB2ENR_GPIOBEN
 100:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOC          RCC_AHB2ENR_GPIOCEN
 101:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(GPIOD)
 102:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOD          RCC_AHB2ENR_GPIODEN
 103:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /*GPIOD*/
 104:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(GPIOE)
 105:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOE          RCC_AHB2ENR_GPIOEEN
 106:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /*GPIOE*/
 107:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(GPIOF)
 108:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOF          RCC_AHB2ENR_GPIOFEN
 109:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* GPIOF */
 110:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(GPIOG)
 111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOG          RCC_AHB2ENR_GPIOGEN
 112:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* GPIOG */
 113:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOH          RCC_AHB2ENR_GPIOHEN
 114:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(GPIOI)
 115:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_GPIOI          RCC_AHB2ENR_GPIOIEN
 116:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* GPIOI */
 117:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(USB_OTG_FS)
 118:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_OTGFS          RCC_AHB2ENR_OTGFSEN
 119:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* USB_OTG_FS */
 120:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ADC            RCC_AHB2ENR_ADCEN
 121:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(DCMI)
 122:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_DCMI           RCC_AHB2ENR_DCMIEN
 123:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* DCMI */
 124:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(AES)
 125:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_AES            RCC_AHB2ENR_AESEN
 126:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* AES */
 127:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(HASH)
 128:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_HASH           RCC_AHB2ENR_HASHEN
 129:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* HASH */
 130:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_RNG            RCC_AHB2ENR_RNGEN
 131:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(OCTOSPIM)
 132:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_OSPIM          RCC_AHB2ENR_OSPIMEN
 133:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* OCTOSPIM */
 134:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(PKA)
 135:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_PKA            RCC_AHB2ENR_PKAEN
 136:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* PKA */
 137:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(SDMMC1) && defined(RCC_AHB2ENR_SDMMC1EN)
 138:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_SDMMC1         RCC_AHB2ENR_SDMMC1EN
 139:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* SDMMC1 && RCC_AHB2ENR_SDMMC1EN */
 140:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_SRAM2          RCC_AHB2SMENR_SRAM2SMEN
 141:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(SRAM3_BASE)
 142:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_SRAM3          RCC_AHB2SMENR_SRAM3SMEN
 143:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* SRAM3_BASE */
 144:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 145:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @}
 146:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 147:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 148:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB3_GRP1_PERIPH  AHB3 GRP1 PERIPH
 149:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @{
 150:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 151:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_ALL            0xFFFFFFFFU
 152:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(FMC_Bank1_R)
 153:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_FMC            RCC_AHB3ENR_FMCEN
 154:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* FMC_Bank1_R */
 155:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(QUADSPI)
 156:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_QSPI           RCC_AHB3ENR_QSPIEN
 157:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* QUADSPI */
 158:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(OCTOSPI1)
 159:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_OSPI1          RCC_AHB3ENR_OSPI1EN
 160:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* OCTOSPI1 */
 161:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(OCTOSPI2)
 162:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_OSPI2          RCC_AHB3ENR_OSPI2EN
 163:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* OCTOSPI2 */
 164:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 165:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @}
 166:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 167:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 168:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 169:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @{
 170:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 171:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
 172:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR1_TIM2EN
 173:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(TIM3)
 174:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR1_TIM3EN
 175:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* TIM3 */
 176:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(TIM4)
 177:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM4           RCC_APB1ENR1_TIM4EN
 178:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* TIM4 */
 179:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(TIM5)
 180:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM5           RCC_APB1ENR1_TIM5EN
 181:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* TIM5 */
 182:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR1_TIM6EN
 183:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR1_TIM7EN
 184:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(LCD)
 185:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LCD            RCC_APB1ENR1_LCDEN
 186:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* LCD */
 187:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(RCC_APB1ENR1_RTCAPBEN)
 188:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTCAPB         RCC_APB1ENR1_RTCAPBEN
 189:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* RCC_APB1ENR1_RTCAPBEN */
 190:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR1_WWDGEN
 191:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(SPI2)
 192:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR1_SPI2EN
 193:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* SPI2 */
 194:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI3           RCC_APB1ENR1_SPI3EN
 195:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR1_USART2EN
 196:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(USART3)
 197:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR1_USART3EN
 198:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* USART3 */
 199:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(UART4)
 200:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART4          RCC_APB1ENR1_UART4EN
 201:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* UART4 */
 202:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(UART5)
 203:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART5          RCC_APB1ENR1_UART5EN
 204:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* UART5 */
 205:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR1_I2C1EN
 206:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(I2C2)
 207:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR1_I2C2EN
 208:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* I2C2 */
 209:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR1_I2C3EN
 210:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(CRS)
 211:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR1_CRSEN
 212:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* CRS */
 213:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN1           RCC_APB1ENR1_CAN1EN
 214:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(CAN2)
 215:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN2           RCC_APB1ENR1_CAN2EN
 216:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* CAN2 */
 217:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(USB)
 218:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR1_USBFSEN
 219:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* USB */
 220:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR1_PWREN
 221:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR1_DAC1EN
 222:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_OPAMP          RCC_APB1ENR1_OPAMPEN
 223:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR1_LPTIM1EN
 224:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 225:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @}
 226:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 227:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 228:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 229:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP2_PERIPH  APB1 GRP2 PERIPH
 230:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @{
 231:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 232:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_ALL            0xFFFFFFFFU
 233:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPUART1        RCC_APB1ENR2_LPUART1EN
 234:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(I2C4)
 235:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_I2C4           RCC_APB1ENR2_I2C4EN
 236:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* I2C4 */
 237:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(SWPMI1)
 238:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_SWPMI1         RCC_APB1ENR2_SWPMI1EN
 239:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* SWPMI1 */
 240:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB1_GRP2_PERIPH_LPTIM2         RCC_APB1ENR2_LPTIM2EN
 241:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 242:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @}
 243:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 244:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 245:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 246:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @{
 247:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 248:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 249:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN
 250:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_FW             RCC_APB2ENR_FWEN
 251:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(SDMMC1) && defined(RCC_APB2ENR_SDMMC1EN)
 252:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SDMMC1         RCC_APB2ENR_SDMMC1EN
 253:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* SDMMC1 && RCC_APB2ENR_SDMMC1EN */
 254:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 255:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 256:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(TIM8)
 257:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM8           RCC_APB2ENR_TIM8EN
 258:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* TIM8 */
 259:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 260:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 261:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 262:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(TIM17)
 263:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 264:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* TIM17 */
 265:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SAI1           RCC_APB2ENR_SAI1EN
 266:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(SAI2)
 267:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SAI2           RCC_APB2ENR_SAI2EN
 268:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* SAI2 */
 269:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(DFSDM1_Channel0)
 270:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DFSDM1         RCC_APB2ENR_DFSDM1EN
 271:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* DFSDM1_Channel0 */
 272:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(LTDC)
 273:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_LTDC           RCC_APB2ENR_LTDCEN
 274:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* LTDC */
 275:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(DSI)
 276:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DSI            RCC_APB2ENR_DSIEN
 277:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* DSI */
 278:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 279:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @}
 280:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 281:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 282:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** Legacy definitions for compatibility purpose
 283:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** @cond 0
 284:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** */
 285:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #if defined(DFSDM1_Channel0)
 286:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DFSDM          LL_APB2_GRP1_PERIPH_DFSDM1
 287:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** #endif /* DFSDM1_Channel0 */
 288:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 289:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** @endcond
 290:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 291:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 292:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 293:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @}
 294:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 295:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 296:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 297:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 298:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 299:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @{
 300:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 301:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 302:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 303:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @{
 304:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   */
 305:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 306:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 307:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 308:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_EnableClock\n
 309:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_EnableClock\n
 310:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_EnableClock\n
 311:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_EnableClock\n
 312:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_EnableClock\n
 313:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      TSCEN         LL_AHB1_GRP1_EnableClock\n
 314:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN       LL_AHB1_GRP1_EnableClock\n
 315:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      GFXMMUEN      LL_AHB1_GRP1_EnableClock
 316:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 317:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 318:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 319:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 320:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 321:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 322:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 323:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 324:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 325:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *
 326:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 327:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @retval None
 328:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** */
 329:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 330:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** {
 331:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   __IO uint32_t tmpreg;
 332:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 333:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 334:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 335:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   (void)tmpreg;
 336:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** }
 337:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 338:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 339:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 340:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 341:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 342:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_IsEnabledClock\n
 343:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_IsEnabledClock\n
 344:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 345:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      TSCEN         LL_AHB1_GRP1_IsEnabledClock\n
 346:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN       LL_AHB1_GRP1_IsEnabledClock\n
 347:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      GFXMMUEN      LL_AHB1_GRP1_IsEnabledClock
 348:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 349:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 350:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 351:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 352:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 353:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 354:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 355:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 356:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 357:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *
 358:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 359:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 360:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** */
 361:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 362:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** {
 363:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   return ((READ_BIT(RCC->AHB1ENR, Periphs) == Periphs) ? 1UL : 0UL);
 364:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** }
 365:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 366:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 367:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 368:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1ENR      DMA1EN        LL_AHB1_GRP1_DisableClock\n
 369:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2EN        LL_AHB1_GRP1_DisableClock\n
 370:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMAMUX1EN     LL_AHB1_GRP1_DisableClock\n
 371:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      FLASHEN       LL_AHB1_GRP1_DisableClock\n
 372:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      CRCEN         LL_AHB1_GRP1_DisableClock\n
 373:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      TSCEN         LL_AHB1_GRP1_DisableClock\n
 374:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN       LL_AHB1_GRP1_DisableClock\n
 375:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1ENR      GFXMMUEN      LL_AHB1_GRP1_DisableClock
 376:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 377:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 378:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 379:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 380:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 381:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 382:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 383:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 384:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 385:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *
 386:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 387:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @retval None
 388:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** */
 389:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 390:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** {
 391:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1ENR, Periphs);
 392:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** }
 393:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 394:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 395:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 396:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ForceReset\n
 397:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ForceReset\n
 398:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST     LL_AHB1_GRP1_ForceReset\n
 399:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     FLASHRST      LL_AHB1_GRP1_ForceReset\n
 400:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ForceReset\n
 401:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     TSCRST        LL_AHB1_GRP1_ForceReset\n
 402:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2DRST      LL_AHB1_GRP1_ForceReset\n
 403:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     GFXMMURST     LL_AHB1_GRP1_ForceReset
 404:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 405:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 406:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 407:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 408:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 409:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 410:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 411:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 412:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 413:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 414:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *
 415:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 416:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @retval None
 417:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** */
 418:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 419:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** {
 420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   SET_BIT(RCC->AHB1RSTR, Periphs);
 199              		.loc 4 420 0
 200 00b0 03F58053 		add	r3, r3, #4096
 201 00b4 9A6A     		ldr	r2, [r3, #40]
 202 00b6 42F00102 		orr	r2, r2, #1
 203 00ba 9A62     		str	r2, [r3, #40]
 204              	.LVL11:
 205              	.LBE53:
 206              	.LBE52:
 207              	.LBB54:
 208              	.LBB55:
 421:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** }
 422:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** 
 423:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** /**
 424:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 425:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @rmtoll AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 426:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 427:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMAMUX1RST     LL_AHB1_GRP1_ReleaseReset\n
 428:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     FLASHRST      LL_AHB1_GRP1_ReleaseReset\n
 429:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 430:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     TSCRST        LL_AHB1_GRP1_ReleaseReset\n
 431:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     DMA2DRST      LL_AHB1_GRP1_ReleaseReset\n
 432:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         AHB1RSTR     GFXMMURST     LL_AHB1_GRP1_ReleaseReset
 433:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 434:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 435:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 436:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 437:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMAMUX1 (*)
 438:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 439:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 440:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
 441:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 442:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GFXMMU (*)
 443:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *
 444:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   *         (*) value not defined in all devices.
 445:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   * @retval None
 446:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** */
 447:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 448:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** {
 449:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1RSTR, Periphs);
 209              		.loc 4 449 0
 210 00bc 9A6A     		ldr	r2, [r3, #40]
 211 00be 22F00102 		bic	r2, r2, #1
 212 00c2 9A62     		str	r2, [r3, #40]
 213              	.LBE55:
 214              	.LBE54:
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_Channel_TypeDef *tmp;
 215              		.loc 1 165 0
 216 00c4 0020     		movs	r0, #0
 217              	.LVL12:
 218 00c6 7047     		bx	lr
 219              	.LVL13:
 220              	.L65:
 221              	.LBB56:
 222              	.LBB57:
 420:../system/include/stm32l4-hal-driver/stm32l4xx_ll_bus.h **** }
 223              		.loc 4 420 0
 224 00c8 03F54063 		add	r3, r3, #3072
 225 00cc 9A6A     		ldr	r2, [r3, #40]
 226 00ce 42F00202 		orr	r2, r2, #2
 227 00d2 9A62     		str	r2, [r3, #40]
 228              	.LVL14:
 229              	.LBE57:
 230              	.LBE56:
 231              	.LBB58:
 232              	.LBB59:
 233              		.loc 4 449 0
 234 00d4 9A6A     		ldr	r2, [r3, #40]
 235 00d6 22F00202 		bic	r2, r2, #2
 236 00da 9A62     		str	r2, [r3, #40]
 237              	.LBE59:
 238              	.LBE58:
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_Channel_TypeDef *tmp;
 239              		.loc 1 165 0
 240 00dc 0020     		movs	r0, #0
 241              	.LVL15:
 242 00de 7047     		bx	lr
 243              	.LVL16:
 244              	.L44:
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 4, -4
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 247              		.loc 1 198 0 discriminator 2
 248 00e0 0029     		cmp	r1, #0
 249 00e2 94D1     		bne	.L5
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 250              		.loc 1 198 0 is_stmt 0
 251 00e4 2E4B     		ldr	r3, .L66+12
 252 00e6 B7E7     		b	.L6
 253              	.L45:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 254              		.loc 1 198 0 discriminator 6
 255 00e8 0029     		cmp	r1, #0
 256 00ea 93D1     		bne	.L7
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 257              		.loc 1 198 0
 258 00ec 2D4B     		ldr	r3, .L66+16
 259 00ee B3E7     		b	.L6
 260              	.L46:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 261              		.loc 1 198 0 discriminator 10
 262 00f0 0129     		cmp	r1, #1
 263 00f2 92D1     		bne	.L8
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 264              		.loc 1 198 0
 265 00f4 2C4B     		ldr	r3, .L66+20
 266 00f6 AFE7     		b	.L6
 267              	.L47:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 268              		.loc 1 198 0 discriminator 14
 269 00f8 0129     		cmp	r1, #1
 270 00fa 91D1     		bne	.L9
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 271              		.loc 1 198 0
 272 00fc 2B4B     		ldr	r3, .L66+24
 273 00fe ABE7     		b	.L6
 274              	.L48:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 275              		.loc 1 198 0 discriminator 18
 276 0100 0229     		cmp	r1, #2
 277 0102 90D1     		bne	.L10
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 278              		.loc 1 198 0
 279 0104 2A4B     		ldr	r3, .L66+28
 280 0106 A7E7     		b	.L6
 281              	.L49:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 282              		.loc 1 198 0 discriminator 22
 283 0108 0229     		cmp	r1, #2
 284 010a 8FD1     		bne	.L11
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 285              		.loc 1 198 0
 286 010c 294B     		ldr	r3, .L66+32
 287 010e A3E7     		b	.L6
 288              	.L50:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 289              		.loc 1 198 0 discriminator 26
 290 0110 0329     		cmp	r1, #3
 291 0112 8ED1     		bne	.L12
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 292              		.loc 1 198 0
 293 0114 284B     		ldr	r3, .L66+36
 294 0116 9FE7     		b	.L6
 295              	.L51:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 296              		.loc 1 198 0 discriminator 30
 297 0118 0329     		cmp	r1, #3
 298 011a 8DD1     		bne	.L13
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 299              		.loc 1 198 0
 300 011c 274B     		ldr	r3, .L66+40
 301 011e 9BE7     		b	.L6
 302              	.L52:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 303              		.loc 1 198 0 discriminator 34
 304 0120 0429     		cmp	r1, #4
 305 0122 8CD1     		bne	.L14
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 306              		.loc 1 198 0
 307 0124 264B     		ldr	r3, .L66+44
 308 0126 97E7     		b	.L6
 309              	.L53:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 310              		.loc 1 198 0 discriminator 38
 311 0128 0429     		cmp	r1, #4
 312 012a 8BD1     		bne	.L15
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 313              		.loc 1 198 0
 314 012c 254B     		ldr	r3, .L66+48
 315 012e 93E7     		b	.L6
 316              	.L54:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 317              		.loc 1 198 0 discriminator 42
 318 0130 0529     		cmp	r1, #5
 319 0132 8AD1     		bne	.L16
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 320              		.loc 1 198 0
 321 0134 244B     		ldr	r3, .L66+52
 322 0136 8FE7     		b	.L6
 323              	.L55:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 324              		.loc 1 198 0 discriminator 46
 325 0138 0529     		cmp	r1, #5
 326 013a 89D1     		bne	.L17
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 327              		.loc 1 198 0
 328 013c 234B     		ldr	r3, .L66+56
 329 013e 8BE7     		b	.L6
 330              	.L56:
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 331              		.loc 1 198 0 discriminator 49
 332 0140 0629     		cmp	r1, #6
 333 0142 02D0     		beq	.L38
 198:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 334              		.loc 1 198 0
 335 0144 03F59063 		add	r3, r3, #1152
 336 0148 86E7     		b	.L6
 337              	.L38:
 338 014a 214B     		ldr	r3, .L66+60
 339 014c 84E7     		b	.L6
 340              	.L57:
 341              	.LVL17:
 342              	.LBB60:
 343              	.LBB61:
1516:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              DMA_CSELR_C1S << ((Channel) * 4U), PeriphRequest << DMA_POSITION_CSELR_CXS);
1517:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1518:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1519:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1520:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get DMA request for DMA instance on Channel x.
1521:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll CSELR        C1S           LL_DMA_GetPeriphRequest\n
1522:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C2S           LL_DMA_GetPeriphRequest\n
1523:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C3S           LL_DMA_GetPeriphRequest\n
1524:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C4S           LL_DMA_GetPeriphRequest\n
1525:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C5S           LL_DMA_GetPeriphRequest\n
1526:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C6S           LL_DMA_GetPeriphRequest\n
1527:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         CSELR        C7S           LL_DMA_GetPeriphRequest
1528:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1529:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1530:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1531:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1532:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1533:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1534:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1535:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1536:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1537:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
1538:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_0
1539:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_1
1540:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_2
1541:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_3
1542:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_4
1543:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_5
1544:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_6
1545:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_7
1546:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1547:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel)
1548:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1549:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return (READ_BIT(((DMA_Request_TypeDef *)((uint32_t)((uint32_t)DMAx + DMA_CSELR_OFFSET)))->CSELR,
1550:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****                    DMA_CSELR_C1S << ((Channel) * 4U)) >> DMA_POSITION_CSELR_CXS);
1551:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1552:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1553:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** #endif /* DMAMUX1 */
1554:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1555:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @}
1556:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1557:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1558:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /** @defgroup DMA_LL_EF_FLAG_Management FLAG_Management
1559:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @{
1560:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1561:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1562:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1563:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 1 global interrupt flag.
1564:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF1          LL_DMA_IsActiveFlag_GI1
1565:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1566:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1567:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1568:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI1(DMA_TypeDef *DMAx)
1569:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1570:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF1) == (DMA_ISR_GIF1)) ? 1UL : 0UL);
1571:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1572:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1573:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1574:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 2 global interrupt flag.
1575:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF2          LL_DMA_IsActiveFlag_GI2
1576:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1577:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1578:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1579:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI2(DMA_TypeDef *DMAx)
1580:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1581:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF2) == (DMA_ISR_GIF2)) ? 1UL : 0UL);
1582:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1583:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1584:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1585:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 3 global interrupt flag.
1586:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF3          LL_DMA_IsActiveFlag_GI3
1587:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1588:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1589:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1590:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI3(DMA_TypeDef *DMAx)
1591:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1592:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF3) == (DMA_ISR_GIF3)) ? 1UL : 0UL);
1593:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1594:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1595:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1596:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 4 global interrupt flag.
1597:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF4          LL_DMA_IsActiveFlag_GI4
1598:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1599:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1600:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1601:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI4(DMA_TypeDef *DMAx)
1602:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1603:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF4) == (DMA_ISR_GIF4)) ? 1UL : 0UL);
1604:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1605:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1606:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1607:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 5 global interrupt flag.
1608:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF5          LL_DMA_IsActiveFlag_GI5
1609:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1610:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1611:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1612:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI5(DMA_TypeDef *DMAx)
1613:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1614:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF5) == (DMA_ISR_GIF5)) ? 1UL : 0UL);
1615:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1616:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1617:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1618:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 6 global interrupt flag.
1619:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF6          LL_DMA_IsActiveFlag_GI6
1620:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1621:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1622:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1623:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI6(DMA_TypeDef *DMAx)
1624:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1625:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF6) == (DMA_ISR_GIF6)) ? 1UL : 0UL);
1626:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1627:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1628:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1629:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 7 global interrupt flag.
1630:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          GIF7          LL_DMA_IsActiveFlag_GI7
1631:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1633:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1634:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI7(DMA_TypeDef *DMAx)
1635:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1636:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF7) == (DMA_ISR_GIF7)) ? 1UL : 0UL);
1637:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1638:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1639:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1640:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 1 transfer complete flag.
1641:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF1         LL_DMA_IsActiveFlag_TC1
1642:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1643:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1644:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1645:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC1(DMA_TypeDef *DMAx)
1646:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1647:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF1) == (DMA_ISR_TCIF1)) ? 1UL : 0UL);
1648:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1649:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1650:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1651:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 2 transfer complete flag.
1652:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF2         LL_DMA_IsActiveFlag_TC2
1653:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1654:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1655:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1656:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC2(DMA_TypeDef *DMAx)
1657:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1658:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF2) == (DMA_ISR_TCIF2)) ? 1UL : 0UL);
1659:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1660:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1661:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1662:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 3 transfer complete flag.
1663:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF3         LL_DMA_IsActiveFlag_TC3
1664:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1665:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1666:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1667:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC3(DMA_TypeDef *DMAx)
1668:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1669:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF3) == (DMA_ISR_TCIF3)) ? 1UL : 0UL);
1670:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1671:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1672:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1673:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 4 transfer complete flag.
1674:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF4         LL_DMA_IsActiveFlag_TC4
1675:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1676:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1677:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1678:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC4(DMA_TypeDef *DMAx)
1679:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1680:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF4) == (DMA_ISR_TCIF4)) ? 1UL : 0UL);
1681:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1682:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1683:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1684:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 5 transfer complete flag.
1685:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF5         LL_DMA_IsActiveFlag_TC5
1686:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1687:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1688:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1689:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC5(DMA_TypeDef *DMAx)
1690:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1691:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF5) == (DMA_ISR_TCIF5)) ? 1UL : 0UL);
1692:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1693:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1694:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1695:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 6 transfer complete flag.
1696:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF6         LL_DMA_IsActiveFlag_TC6
1697:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1698:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1699:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1700:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC6(DMA_TypeDef *DMAx)
1701:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1702:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF6) == (DMA_ISR_TCIF6)) ? 1UL : 0UL);
1703:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1704:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1705:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1706:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 7 transfer complete flag.
1707:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TCIF7         LL_DMA_IsActiveFlag_TC7
1708:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1709:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1710:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1711:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC7(DMA_TypeDef *DMAx)
1712:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1713:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF7) == (DMA_ISR_TCIF7)) ? 1UL : 0UL);
1714:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1715:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1716:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1717:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 1 half transfer flag.
1718:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF1         LL_DMA_IsActiveFlag_HT1
1719:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1720:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1721:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1722:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT1(DMA_TypeDef *DMAx)
1723:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1724:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF1) == (DMA_ISR_HTIF1)) ? 1UL : 0UL);
1725:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1726:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1727:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1728:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 2 half transfer flag.
1729:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF2         LL_DMA_IsActiveFlag_HT2
1730:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1731:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1732:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1733:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT2(DMA_TypeDef *DMAx)
1734:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1735:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF2) == (DMA_ISR_HTIF2)) ? 1UL : 0UL);
1736:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1737:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1738:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1739:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 3 half transfer flag.
1740:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF3         LL_DMA_IsActiveFlag_HT3
1741:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1742:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1743:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1744:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT3(DMA_TypeDef *DMAx)
1745:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1746:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF3) == (DMA_ISR_HTIF3)) ? 1UL : 0UL);
1747:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1748:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1749:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1750:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 4 half transfer flag.
1751:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF4         LL_DMA_IsActiveFlag_HT4
1752:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1753:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1754:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1755:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT4(DMA_TypeDef *DMAx)
1756:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1757:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF4) == (DMA_ISR_HTIF4)) ? 1UL : 0UL);
1758:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1759:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1760:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1761:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 5 half transfer flag.
1762:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF5         LL_DMA_IsActiveFlag_HT5
1763:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1764:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1765:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1766:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT5(DMA_TypeDef *DMAx)
1767:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1768:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF5) == (DMA_ISR_HTIF5)) ? 1UL : 0UL);
1769:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1770:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1771:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1772:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 6 half transfer flag.
1773:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF6         LL_DMA_IsActiveFlag_HT6
1774:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1775:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1776:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1777:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT6(DMA_TypeDef *DMAx)
1778:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1779:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF6) == (DMA_ISR_HTIF6)) ? 1UL : 0UL);
1780:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1781:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1782:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1783:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 7 half transfer flag.
1784:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          HTIF7         LL_DMA_IsActiveFlag_HT7
1785:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1786:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1787:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1788:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT7(DMA_TypeDef *DMAx)
1789:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1790:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF7) == (DMA_ISR_HTIF7)) ? 1UL : 0UL);
1791:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1792:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1793:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1794:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 1 transfer error flag.
1795:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF1         LL_DMA_IsActiveFlag_TE1
1796:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1797:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1798:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1799:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE1(DMA_TypeDef *DMAx)
1800:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1801:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF1) == (DMA_ISR_TEIF1)) ? 1UL : 0UL);
1802:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1803:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1804:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1805:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 2 transfer error flag.
1806:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF2         LL_DMA_IsActiveFlag_TE2
1807:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1808:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1809:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1810:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE2(DMA_TypeDef *DMAx)
1811:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1812:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF2) == (DMA_ISR_TEIF2)) ? 1UL : 0UL);
1813:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1814:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1815:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1816:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 3 transfer error flag.
1817:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF3         LL_DMA_IsActiveFlag_TE3
1818:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1819:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1820:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1821:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE3(DMA_TypeDef *DMAx)
1822:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1823:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF3) == (DMA_ISR_TEIF3)) ? 1UL : 0UL);
1824:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1825:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1826:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1827:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 4 transfer error flag.
1828:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF4         LL_DMA_IsActiveFlag_TE4
1829:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1830:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1831:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1832:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE4(DMA_TypeDef *DMAx)
1833:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1834:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF4) == (DMA_ISR_TEIF4)) ? 1UL : 0UL);
1835:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1836:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1837:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1838:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 5 transfer error flag.
1839:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF5         LL_DMA_IsActiveFlag_TE5
1840:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1841:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1842:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1843:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE5(DMA_TypeDef *DMAx)
1844:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1845:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF5) == (DMA_ISR_TEIF5)) ? 1UL : 0UL);
1846:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1847:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1848:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1849:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 6 transfer error flag.
1850:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF6         LL_DMA_IsActiveFlag_TE6
1851:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1852:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1853:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1854:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE6(DMA_TypeDef *DMAx)
1855:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1856:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF6) == (DMA_ISR_TEIF6)) ? 1UL : 0UL);
1857:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1858:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1859:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1860:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Get Channel 7 transfer error flag.
1861:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll ISR          TEIF7         LL_DMA_IsActiveFlag_TE7
1862:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1863:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1864:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1865:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE7(DMA_TypeDef *DMAx)
1866:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1867:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF7) == (DMA_ISR_TEIF7)) ? 1UL : 0UL);
1868:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1869:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1870:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1871:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 1 global interrupt flag.
1872:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 1 global interrupt flag when the channel in ON.
1873:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1874:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC1, LL_DMA_ClearFlag_HT1,
1875:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE1. bug 2.4.1/2.5.1 in Product Errata Sheet.
1876:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF1         LL_DMA_ClearFlag_GI1
1877:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1878:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1879:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1880:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI1(DMA_TypeDef *DMAx)
1881:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1882:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF1);
 344              		.loc 2 1882 0 is_stmt 1
 345 014e 0123     		movs	r3, #1
 346 0150 4360     		str	r3, [r0, #4]
 347              	.LBE61:
 348              	.LBE60:
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_Channel_TypeDef *tmp;
 349              		.loc 1 165 0
 350 0152 0020     		movs	r0, #0
 351              	.LVL18:
 352              	.L4:
 353              		.loc 1 266 0
 354 0154 5DF8044B 		ldr	r4, [sp], #4
 355              		.cfi_remember_state
 356              		.cfi_restore 4
 357              		.cfi_def_cfa_offset 0
 358 0158 7047     		bx	lr
 359              	.LVL19:
 360              	.L58:
 361              		.cfi_restore_state
 362              	.LBB62:
 363              	.LBB63:
1883:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1884:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1885:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1886:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 2 global interrupt flag.
1887:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 2 global interrupt flag when the channel in ON.
1888:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1889:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC2, LL_DMA_ClearFlag_HT2,
1890:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE2. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1891:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF2         LL_DMA_ClearFlag_GI2
1892:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1893:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1894:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1895:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI2(DMA_TypeDef *DMAx)
1896:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1897:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF2);
 364              		.loc 2 1897 0
 365 015a 1023     		movs	r3, #16
 366 015c 4360     		str	r3, [r0, #4]
 367              	.LBE63:
 368              	.LBE62:
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_Channel_TypeDef *tmp;
 369              		.loc 1 165 0
 370 015e 0020     		movs	r0, #0
 371              	.LVL20:
 372 0160 F8E7     		b	.L4
 373              	.LVL21:
 374              	.L59:
 375              	.LBB64:
 376              	.LBB65:
1898:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1899:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1900:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1901:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 3 global interrupt flag.
1902:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 3 global interrupt flag when the channel in ON.
1903:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1904:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC3, LL_DMA_ClearFlag_HT3,
1905:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE3. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1906:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF3         LL_DMA_ClearFlag_GI3
1907:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1908:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1909:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1910:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI3(DMA_TypeDef *DMAx)
1911:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1912:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF3);
 377              		.loc 2 1912 0
 378 0162 4FF48073 		mov	r3, #256
 379 0166 4360     		str	r3, [r0, #4]
 380              	.LBE65:
 381              	.LBE64:
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_Channel_TypeDef *tmp;
 382              		.loc 1 165 0
 383 0168 0020     		movs	r0, #0
 384              	.LVL22:
 385 016a F3E7     		b	.L4
 386              	.LVL23:
 387              	.L60:
 388              	.LBB66:
 389              	.LBB67:
1913:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1914:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1915:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1916:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 4 global interrupt flag.
1917:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 4 global interrupt flag when the channel in ON.
1918:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1919:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC4, LL_DMA_ClearFlag_HT4,
1920:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE4. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1921:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF4         LL_DMA_ClearFlag_GI4
1922:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1923:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1924:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1925:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI4(DMA_TypeDef *DMAx)
1926:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1927:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF4);
 390              		.loc 2 1927 0
 391 016c 4FF48053 		mov	r3, #4096
 392 0170 4360     		str	r3, [r0, #4]
 393              	.LBE67:
 394              	.LBE66:
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_Channel_TypeDef *tmp;
 395              		.loc 1 165 0
 396 0172 0020     		movs	r0, #0
 397              	.LVL24:
 398 0174 EEE7     		b	.L4
 399              	.LVL25:
 400              	.L61:
 401              	.LBB68:
 402              	.LBB69:
1928:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1929:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1930:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1931:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 5 global interrupt flag.
1932:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 5 global interrupt flag when the channel in ON.
1933:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1934:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC5, LL_DMA_ClearFlag_HT5,
1935:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE5. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1936:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF5         LL_DMA_ClearFlag_GI5
1937:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1938:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1939:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1940:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI5(DMA_TypeDef *DMAx)
1941:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1942:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF5);
 403              		.loc 2 1942 0
 404 0176 4FF48033 		mov	r3, #65536
 405 017a 4360     		str	r3, [r0, #4]
 406              	.LBE69:
 407              	.LBE68:
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_Channel_TypeDef *tmp;
 408              		.loc 1 165 0
 409 017c 0020     		movs	r0, #0
 410              	.LVL26:
 411 017e E9E7     		b	.L4
 412              	.LVL27:
 413              	.L62:
 414              	.LBB70:
 415              	.LBB71:
1943:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1944:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1945:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1946:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 6 global interrupt flag.
1947:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 6 global interrupt flag when the channel in ON.
1948:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1949:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC6, LL_DMA_ClearFlag_HT6,
1950:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE6. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1951:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF6         LL_DMA_ClearFlag_GI6
1952:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1953:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1954:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1955:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI6(DMA_TypeDef *DMAx)
1956:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1957:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF6);
 416              		.loc 2 1957 0
 417 0180 4FF48013 		mov	r3, #1048576
 418 0184 4360     		str	r3, [r0, #4]
 419              	.LBE71:
 420              	.LBE70:
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_Channel_TypeDef *tmp;
 421              		.loc 1 165 0
 422 0186 0020     		movs	r0, #0
 423              	.LVL28:
 424 0188 E4E7     		b	.L4
 425              	.LVL29:
 426              	.L63:
 427              	.LBB72:
 428              	.LBB73:
1958:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
1959:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** 
1960:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** /**
1961:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @brief  Clear Channel 7 global interrupt flag.
1962:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @note Do not Clear Channel 7 global interrupt flag when the channel in ON.
1963:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     Instead clear specific flags transfer complete, half transfer & transfer
1964:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     error flag with LL_DMA_ClearFlag_TC7, LL_DMA_ClearFlag_HT7,
1965:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****     LL_DMA_ClearFlag_TE7. bug id 2.4.1/2.5.1 in Product Errata Sheet.
1966:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @rmtoll IFCR         CGIF7         LL_DMA_ClearFlag_GI7
1967:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1968:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   * @retval None
1969:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   */
1970:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI7(DMA_TypeDef *DMAx)
1971:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** {
1972:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF7);
 429              		.loc 2 1972 0
 430 018a 4FF08073 		mov	r3, #16777216
 431 018e 4360     		str	r3, [r0, #4]
 432              	.LBE73:
 433              	.LBE72:
 165:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_Channel_TypeDef *tmp;
 434              		.loc 1 165 0
 435 0190 0020     		movs	r0, #0
 436              	.LVL30:
 437 0192 DFE7     		b	.L4
 438              	.L67:
 439              		.align	2
 440              	.L66:
 441 0194 00000240 		.word	1073872896
 442 0198 00040240 		.word	1073873920
 443 019c 80040240 		.word	1073874048
 444 01a0 08000240 		.word	1073872904
 445 01a4 08040240 		.word	1073873928
 446 01a8 1C000240 		.word	1073872924
 447 01ac 1C040240 		.word	1073873948
 448 01b0 30000240 		.word	1073872944
 449 01b4 30040240 		.word	1073873968
 450 01b8 44000240 		.word	1073872964
 451 01bc 44040240 		.word	1073873988
 452 01c0 58000240 		.word	1073872984
 453 01c4 58040240 		.word	1073874008
 454 01c8 6C000240 		.word	1073873004
 455 01cc 6C040240 		.word	1073874028
 456 01d0 80000240 		.word	1073873024
 457              		.cfi_endproc
 458              	.LFE270:
 460              		.section	.text.LL_DMA_Init,"ax",%progbits
 461              		.align	1
 462              		.global	LL_DMA_Init
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	LL_DMA_Init:
 469              	.LFB271:
 267:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 268:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /**
 269:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @brief  Initialize the DMA registers according to the specified parameters in DMA_InitStruct.
 270:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @note   To convert DMAx_Channely Instance to DMAx Instance and Channely, use helper macros :
 271:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref __LL_DMA_GET_INSTANCE
 272:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref __LL_DMA_GET_CHANNEL
 273:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @param  DMAx DMAx Instance
 274:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @param  Channel This parameter can be one of the following values:
 275:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_1
 276:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_2
 277:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_3
 278:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_4
 279:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_5
 280:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_6
 281:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *         @arg @ref LL_DMA_CHANNEL_7
 282:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @param  DMA_InitStruct pointer to a @ref LL_DMA_InitTypeDef structure.
 283:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @retval An ErrorStatus enumeration value:
 284:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *          - SUCCESS: DMA registers are initialized
 285:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   *          - ERROR: Not applicable
 286:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   */
 287:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** ErrorStatus LL_DMA_Init(DMA_TypeDef *DMAx, uint32_t Channel, LL_DMA_InitTypeDef *DMA_InitStruct)
 288:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** {
 470              		.loc 1 288 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475              	.LVL31:
 476 0000 70B4     		push	{r4, r5, r6}
 477              		.cfi_def_cfa_offset 12
 478              		.cfi_offset 4, -12
 479              		.cfi_offset 5, -8
 480              		.cfi_offset 6, -4
 289:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   /* Check the DMA Instance DMAx and Channel parameters*/
 290:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   assert_param(IS_LL_DMA_ALL_CHANNEL_INSTANCE(DMAx, Channel));
 291:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 292:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   /* Check the DMA parameters from DMA_InitStruct */
 293:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   assert_param(IS_LL_DMA_DIRECTION(DMA_InitStruct->Direction));
 294:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   assert_param(IS_LL_DMA_MODE(DMA_InitStruct->Mode));
 295:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   assert_param(IS_LL_DMA_PERIPHINCMODE(DMA_InitStruct->PeriphOrM2MSrcIncMode));
 296:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   assert_param(IS_LL_DMA_MEMORYINCMODE(DMA_InitStruct->MemoryOrM2MDstIncMode));
 297:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   assert_param(IS_LL_DMA_PERIPHDATASIZE(DMA_InitStruct->PeriphOrM2MSrcDataSize));
 298:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   assert_param(IS_LL_DMA_MEMORYDATASIZE(DMA_InitStruct->MemoryOrM2MDstDataSize));
 299:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   assert_param(IS_LL_DMA_NBDATA(DMA_InitStruct->NbData));
 300:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   assert_param(IS_LL_DMA_PERIPHREQUEST(DMA_InitStruct->PeriphRequest));
 301:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   assert_param(IS_LL_DMA_PRIORITY(DMA_InitStruct->Priority));
 302:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 303:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   /*---------------------------- DMAx CCR Configuration ------------------------
 304:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * Configure DMAx_Channely: data transfer direction, data transfer mode,
 305:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    *                          peripheral and memory increment mode,
 306:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    *                          data size alignment and  priority level with parameters :
 307:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - Direction:      DMA_CCR_DIR and DMA_CCR_MEM2MEM bits
 308:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - Mode:           DMA_CCR_CIRC bit
 309:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - PeriphOrM2MSrcIncMode:  DMA_CCR_PINC bit
 310:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - MemoryOrM2MDstIncMode:  DMA_CCR_MINC bit
 311:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - PeriphOrM2MSrcDataSize: DMA_CCR_PSIZE[1:0] bits
 312:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - MemoryOrM2MDstDataSize: DMA_CCR_MSIZE[1:0] bits
 313:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - Priority:               DMA_CCR_PL[1:0] bits
 314:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    */
 315:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   LL_DMA_ConfigTransfer(DMAx, Channel, DMA_InitStruct->Direction              | \
 481              		.loc 1 315 0
 482 0002 9368     		ldr	r3, [r2, #8]
 316:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->Mode                   | \
 483              		.loc 1 316 0
 484 0004 D468     		ldr	r4, [r2, #12]
 315:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->Mode                   | \
 485              		.loc 1 315 0
 486 0006 2343     		orrs	r3, r3, r4
 317:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->PeriphOrM2MSrcIncMode  | \
 487              		.loc 1 317 0
 488 0008 1469     		ldr	r4, [r2, #16]
 316:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->Mode                   | \
 489              		.loc 1 316 0
 490 000a 2343     		orrs	r3, r3, r4
 318:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->MemoryOrM2MDstIncMode  | \
 491              		.loc 1 318 0
 492 000c 5469     		ldr	r4, [r2, #20]
 317:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->PeriphOrM2MSrcIncMode  | \
 493              		.loc 1 317 0
 494 000e 2343     		orrs	r3, r3, r4
 319:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->PeriphOrM2MSrcDataSize | \
 495              		.loc 1 319 0
 496 0010 9469     		ldr	r4, [r2, #24]
 318:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->MemoryOrM2MDstIncMode  | \
 497              		.loc 1 318 0
 498 0012 2343     		orrs	r3, r3, r4
 320:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->MemoryOrM2MDstDataSize | \
 499              		.loc 1 320 0
 500 0014 D469     		ldr	r4, [r2, #28]
 319:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->PeriphOrM2MSrcDataSize | \
 501              		.loc 1 319 0
 502 0016 2343     		orrs	r3, r3, r4
 321:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->Priority);
 503              		.loc 1 321 0
 504 0018 946A     		ldr	r4, [r2, #40]
 315:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****                         DMA_InitStruct->Mode                   | \
 505              		.loc 1 315 0
 506 001a 2343     		orrs	r3, r3, r4
 507              	.LVL32:
 508              	.LBB74:
 509              	.LBB75:
 632:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 510              		.loc 2 632 0
 511 001c 154C     		ldr	r4, .L72
 512 001e 665C     		ldrb	r6, [r4, r1]	@ zero_extendqisi2
 513 0020 8519     		adds	r5, r0, r6
 514 0022 8459     		ldr	r4, [r0, r6]
 515 0024 24F4FF44 		bic	r4, r4, #32640
 516 0028 24F07004 		bic	r4, r4, #112
 517 002c 2343     		orrs	r3, r3, r4
 518              	.LVL33:
 519 002e 8351     		str	r3, [r0, r6]
 520              	.LVL34:
 521              	.LBE75:
 522              	.LBE74:
 322:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 323:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   /*-------------------------- DMAx CMAR Configuration -------------------------
 324:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * Configure the memory or destination base address with parameter :
 325:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - MemoryOrM2MDstAddress: DMA_CMAR_MA[31:0] bits
 326:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    */
 327:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   LL_DMA_SetMemoryAddress(DMAx, Channel, DMA_InitStruct->MemoryOrM2MDstAddress);
 523              		.loc 1 327 0
 524 0030 5368     		ldr	r3, [r2, #4]
 525              	.LVL35:
 526              	.LBB76:
 527              	.LBB77:
1088:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 528              		.loc 2 1088 0
 529 0032 EB60     		str	r3, [r5, #12]
 530              	.LVL36:
 531              	.LBE77:
 532              	.LBE76:
 328:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 329:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   /*-------------------------- DMAx CPAR Configuration -------------------------
 330:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * Configure the peripheral or source base address with parameter :
 331:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - PeriphOrM2MSrcAddress: DMA_CPAR_PA[31:0] bits
 332:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    */
 333:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   LL_DMA_SetPeriphAddress(DMAx, Channel, DMA_InitStruct->PeriphOrM2MSrcAddress);
 533              		.loc 1 333 0
 534 0034 1368     		ldr	r3, [r2]
 535              	.LVL37:
 536              	.LBB78:
 537              	.LBB79:
1111:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h **** }
 538              		.loc 2 1111 0
 539 0036 AB60     		str	r3, [r5, #8]
 540              	.LVL38:
 541              	.LBE79:
 542              	.LBE78:
 334:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 335:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   /*--------------------------- DMAx CNDTR Configuration -----------------------
 336:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * Configure the peripheral base address with parameter :
 337:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - NbData: DMA_CNDTR_NDT[15:0] bits
 338:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    */
 339:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   LL_DMA_SetDataLength(DMAx, Channel, DMA_InitStruct->NbData);
 543              		.loc 1 339 0
 544 0038 146A     		ldr	r4, [r2, #32]
 545              	.LVL39:
 546              	.LBB80:
 547              	.LBB81:
1000:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 548              		.loc 2 1000 0
 549 003a 6B68     		ldr	r3, [r5, #4]
 550 003c 1B0C     		lsrs	r3, r3, #16
 551 003e 1B04     		lsls	r3, r3, #16
 552 0040 2343     		orrs	r3, r3, r4
 553 0042 6B60     		str	r3, [r5, #4]
 554              	.LVL40:
 555              	.LBE81:
 556              	.LBE80:
 340:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 341:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #if defined(DMAMUX1)
 342:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   /*--------------------------- DMAMUXx CCR Configuration ----------------------
 343:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * Configure the DMA request for DMA Channels on DMAMUX Channel x with parameter :
 344:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - PeriphRequest: DMA_CxCR[7:0] bits
 345:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    */
 346:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   LL_DMA_SetPeriphRequest(DMAx, Channel, DMA_InitStruct->PeriphRequest);
 347:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #else
 348:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   /*--------------------------- DMAx CSELR Configuration -----------------------
 349:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * Configure the DMA request for DMA instance on Channel x with parameter :
 350:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    * - PeriphRequest: DMA_CSELR[31:0] bits
 351:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****    */
 352:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   LL_DMA_SetPeriphRequest(DMAx, Channel, DMA_InitStruct->PeriphRequest);
 557              		.loc 1 352 0
 558 0044 546A     		ldr	r4, [r2, #36]
 559              	.LVL41:
 560              	.LBB82:
 561              	.LBB83:
1515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              DMA_CSELR_C1S << ((Channel) * 4U), PeriphRequest << DMA_POSITION_CSELR_CXS);
 562              		.loc 2 1515 0
 563 0046 D0F8A820 		ldr	r2, [r0, #168]
 564              	.LVL42:
 565 004a 8900     		lsls	r1, r1, #2
 566              	.LVL43:
 567 004c 0F23     		movs	r3, #15
 568 004e 03FA01F1 		lsl	r1, r3, r1
 569 0052 22EA0103 		bic	r3, r2, r1
 570              	.LVL44:
 571              	.LBB84:
 572              	.LBB85:
 573              		.loc 3 1055 0
 574              		.syntax unified
 575              	@ 1055 "../system/include/cmsis/stm32l4xx/cmsis_gcc.h" 1
 576 0056 91FAA1F1 		rbit r1, r1
 577              	@ 0 "" 2
 578              	.LVL45:
 579              		.thumb
 580              		.syntax unified
 581              	.LBE85:
 582              	.LBE84:
 583              	.LBB86:
 584              	.LBB87:
1056:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #else
1057:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1059:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
1062:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     result <<= 1U;
1063:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     result |= value & 1U;
1064:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     s--;
1065:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
1066:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** #endif
1068:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return result;
1069:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** }
1070:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1071:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** 
1072:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** /**
1073:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \brief   Count leading zeros
1074:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****  */
1078:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:../system/include/cmsis/stm32l4xx/cmsis_gcc.h **** {
1080:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      is non-zero".
1086:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****      single CLZ instruction.
1088:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****    */
1089:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   if (value == 0U)
 585              		.loc 3 1089 0
 586 005a 49B1     		cbz	r1, .L70
1090:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   {
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****     return 32U;
1092:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
1093:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   return __builtin_clz(value);
 587              		.loc 3 1093 0
 588 005c B1FA81F1 		clz	r1, r1
 589              	.L69:
 590              	.LBE87:
 591              	.LBE86:
1515:../system/include/stm32l4-hal-driver/stm32l4xx_ll_dma.h ****              DMA_CSELR_C1S << ((Channel) * 4U), PeriphRequest << DMA_POSITION_CSELR_CXS);
 592              		.loc 2 1515 0
 593 0060 04FA01F1 		lsl	r1, r4, r1
 594 0064 1943     		orrs	r1, r1, r3
 595 0066 C0F8A810 		str	r1, [r0, #168]
 596              	.LVL46:
 597              	.LBE83:
 598              	.LBE82:
 353:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #endif /* DMAMUX1 */
 354:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 355:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   return SUCCESS;
 356:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** }
 599              		.loc 1 356 0
 600 006a 0020     		movs	r0, #0
 601              	.LVL47:
 602 006c 70BC     		pop	{r4, r5, r6}
 603              		.cfi_remember_state
 604              		.cfi_restore 6
 605              		.cfi_restore 5
 606              		.cfi_restore 4
 607              		.cfi_def_cfa_offset 0
 608 006e 7047     		bx	lr
 609              	.LVL48:
 610              	.L70:
 611              		.cfi_restore_state
 612              	.LBB91:
 613              	.LBB90:
 614              	.LBB89:
 615              	.LBB88:
1091:../system/include/cmsis/stm32l4xx/cmsis_gcc.h ****   }
 616              		.loc 3 1091 0
 617 0070 2021     		movs	r1, #32
 618 0072 F5E7     		b	.L69
 619              	.L73:
 620              		.align	2
 621              	.L72:
 622 0074 00000000 		.word	.LANCHOR0
 623              	.LBE88:
 624              	.LBE89:
 625              	.LBE90:
 626              	.LBE91:
 627              		.cfi_endproc
 628              	.LFE271:
 630              		.section	.text.LL_DMA_StructInit,"ax",%progbits
 631              		.align	1
 632              		.global	LL_DMA_StructInit
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 636              		.fpu fpv4-sp-d16
 638              	LL_DMA_StructInit:
 639              	.LFB272:
 357:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** 
 358:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** /**
 359:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @brief  Set each @ref LL_DMA_InitTypeDef field to default value.
 360:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @param  DMA_InitStruct Pointer to a @ref LL_DMA_InitTypeDef structure.
 361:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   * @retval None
 362:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   */
 363:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** void LL_DMA_StructInit(LL_DMA_InitTypeDef *DMA_InitStruct)
 364:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** {
 640              		.loc 1 364 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645              	.LVL49:
 365:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   /* Set DMA_InitStruct fields to default values */
 366:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->PeriphOrM2MSrcAddress  = 0x00000000U;
 646              		.loc 1 366 0
 647 0000 0023     		movs	r3, #0
 648 0002 0360     		str	r3, [r0]
 367:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->MemoryOrM2MDstAddress  = 0x00000000U;
 649              		.loc 1 367 0
 650 0004 4360     		str	r3, [r0, #4]
 368:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->Direction              = LL_DMA_DIRECTION_PERIPH_TO_MEMORY;
 651              		.loc 1 368 0
 652 0006 8360     		str	r3, [r0, #8]
 369:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->Mode                   = LL_DMA_MODE_NORMAL;
 653              		.loc 1 369 0
 654 0008 C360     		str	r3, [r0, #12]
 370:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->PeriphOrM2MSrcIncMode  = LL_DMA_PERIPH_NOINCREMENT;
 655              		.loc 1 370 0
 656 000a 0361     		str	r3, [r0, #16]
 371:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->MemoryOrM2MDstIncMode  = LL_DMA_MEMORY_NOINCREMENT;
 657              		.loc 1 371 0
 658 000c 4361     		str	r3, [r0, #20]
 372:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_BYTE;
 659              		.loc 1 372 0
 660 000e 8361     		str	r3, [r0, #24]
 373:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_BYTE;
 661              		.loc 1 373 0
 662 0010 C361     		str	r3, [r0, #28]
 374:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->NbData                 = 0x00000000U;
 663              		.loc 1 374 0
 664 0012 0362     		str	r3, [r0, #32]
 375:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #if defined(DMAMUX1)
 376:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->PeriphRequest          = LL_DMAMUX_REQ_MEM2MEM;
 377:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #else
 378:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->PeriphRequest          = LL_DMA_REQUEST_0;
 665              		.loc 1 378 0
 666 0014 4362     		str	r3, [r0, #36]
 379:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** #endif /* DMAMUX1 */
 380:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c ****   DMA_InitStruct->Priority               = LL_DMA_PRIORITY_LOW;
 667              		.loc 1 380 0
 668 0016 8362     		str	r3, [r0, #40]
 381:../system/src/stm32l4-hal-driver/stm32l4xx_ll_dma.c **** }
 669              		.loc 1 381 0
 670 0018 7047     		bx	lr
 671              		.cfi_endproc
 672              	.LFE272:
 674              		.section	.rodata.CHANNEL_OFFSET_TAB,"a",%progbits
 675              		.align	2
 676              		.set	.LANCHOR0,. + 0
 679              	CHANNEL_OFFSET_TAB:
 680 0000 08       		.byte	8
 681 0001 1C       		.byte	28
 682 0002 30       		.byte	48
 683 0003 44       		.byte	68
 684 0004 58       		.byte	88
 685 0005 6C       		.byte	108
 686 0006 80       		.byte	-128
 687              		.text
 688              	.Letext0:
 689              		.file 5 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 690              		.file 6 "../system/include/cmsis/stm32l4xx/core_cm4.h"
 691              		.file 7 "../system/include/cmsis/stm32l4xx/device/system_stm32l4xx.h"
 692              		.file 8 "../system/include/cmsis/stm32l4xx/device/stm32l471xx.h"
 693              		.file 9 "../system/include/cmsis/stm32l4xx/device/stm32l4xx.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_ll_dma.c
     /tmp/cc6RDceb.s:18     .text.LL_DMA_DeInit:0000000000000000 $t
     /tmp/cc6RDceb.s:25     .text.LL_DMA_DeInit:0000000000000000 LL_DMA_DeInit
     /tmp/cc6RDceb.s:441    .text.LL_DMA_DeInit:0000000000000194 $d
     /tmp/cc6RDceb.s:461    .text.LL_DMA_Init:0000000000000000 $t
     /tmp/cc6RDceb.s:468    .text.LL_DMA_Init:0000000000000000 LL_DMA_Init
     /tmp/cc6RDceb.s:622    .text.LL_DMA_Init:0000000000000074 $d
     /tmp/cc6RDceb.s:631    .text.LL_DMA_StructInit:0000000000000000 $t
     /tmp/cc6RDceb.s:638    .text.LL_DMA_StructInit:0000000000000000 LL_DMA_StructInit
     /tmp/cc6RDceb.s:675    .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/cc6RDceb.s:679    .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
                           .group:0000000000000000 wm4.0.95bc707da9dcffdc6c8c58936cbc8421
                           .group:0000000000000000 wm4.stm32l4xx.h.39.54a1fe1e096c7852edd649652f013a11
                           .group:0000000000000000 wm4.stm32l471xx.h.35.e78ad65c513105dda311dc495ac74d04
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.b6144e50d34fc998dd4c2cfb6387cf91
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l471xx.h.423.ceac761476affad641a3347d7727acfd
                           .group:0000000000000000 wm4.stm32l4xx.h.197.fb1c68184133668ca24c44c29ba4361f
                           .group:0000000000000000 wm4.stm32l4xx_ll_dma.h.71.ec7d4a304e520e9a59a2e31a9a6ea4b1
                           .group:0000000000000000 wm4.stm32l4xx_ll_bus.h.39.fb197a76289ebb493618e5ac412f5462

NO UNDEFINED SYMBOLS
