   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"_initialize_hardware.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.__initialize_hardware_early,"ax",%progbits
  16              		.align	1
  17              		.weak	__initialize_hardware_early
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	__initialize_hardware_early:
  24              	.LFB63:
  25              		.file 1 "../system/src/cortexm/_initialize_hardware.c"
   1:../system/src/cortexm/_initialize_hardware.c **** //
   2:../system/src/cortexm/_initialize_hardware.c **** // This file is part of the ÂµOS++ III distribution.
   3:../system/src/cortexm/_initialize_hardware.c **** // Copyright (c) 2014 Liviu Ionescu.
   4:../system/src/cortexm/_initialize_hardware.c **** //
   5:../system/src/cortexm/_initialize_hardware.c **** 
   6:../system/src/cortexm/_initialize_hardware.c **** // ----------------------------------------------------------------------------
   7:../system/src/cortexm/_initialize_hardware.c **** 
   8:../system/src/cortexm/_initialize_hardware.c **** #include "cmsis_device.h"
   9:../system/src/cortexm/_initialize_hardware.c **** 
  10:../system/src/cortexm/_initialize_hardware.c **** // ----------------------------------------------------------------------------
  11:../system/src/cortexm/_initialize_hardware.c **** 
  12:../system/src/cortexm/_initialize_hardware.c **** extern unsigned int __vectors_start;
  13:../system/src/cortexm/_initialize_hardware.c **** 
  14:../system/src/cortexm/_initialize_hardware.c **** // Forward declarations.
  15:../system/src/cortexm/_initialize_hardware.c **** 
  16:../system/src/cortexm/_initialize_hardware.c **** void
  17:../system/src/cortexm/_initialize_hardware.c **** __initialize_hardware_early(void);
  18:../system/src/cortexm/_initialize_hardware.c **** 
  19:../system/src/cortexm/_initialize_hardware.c **** void
  20:../system/src/cortexm/_initialize_hardware.c **** __initialize_hardware(void);
  21:../system/src/cortexm/_initialize_hardware.c **** 
  22:../system/src/cortexm/_initialize_hardware.c **** // ----------------------------------------------------------------------------
  23:../system/src/cortexm/_initialize_hardware.c **** 
  24:../system/src/cortexm/_initialize_hardware.c **** // This is the early hardware initialisation routine, it can be
  25:../system/src/cortexm/_initialize_hardware.c **** // redefined in the application for more complex cases that
  26:../system/src/cortexm/_initialize_hardware.c **** // require early inits (before BSS init).
  27:../system/src/cortexm/_initialize_hardware.c **** //
  28:../system/src/cortexm/_initialize_hardware.c **** // Called early from _start(), right before data & bss init.
  29:../system/src/cortexm/_initialize_hardware.c **** //
  30:../system/src/cortexm/_initialize_hardware.c **** // After Reset the Cortex-M processor is in Thread mode,
  31:../system/src/cortexm/_initialize_hardware.c **** // priority is Privileged, and the Stack is set to Main.
  32:../system/src/cortexm/_initialize_hardware.c **** 
  33:../system/src/cortexm/_initialize_hardware.c **** void
  34:../system/src/cortexm/_initialize_hardware.c **** __attribute__((weak))
  35:../system/src/cortexm/_initialize_hardware.c **** __initialize_hardware_early(void)
  36:../system/src/cortexm/_initialize_hardware.c **** {
  26              		.loc 1 36 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 3, -8
  33              		.cfi_offset 14, -4
  37:../system/src/cortexm/_initialize_hardware.c ****   // Call the CSMSIS system initialisation routine.
  38:../system/src/cortexm/_initialize_hardware.c ****   SystemInit();
  34              		.loc 1 38 0
  35 0002 FFF7FEFF 		bl	SystemInit
  36              	.LVL0:
  39:../system/src/cortexm/_initialize_hardware.c **** 
  40:../system/src/cortexm/_initialize_hardware.c **** #if defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)
  41:../system/src/cortexm/_initialize_hardware.c ****   // Set VTOR to the actual address, provided by the linker script.
  42:../system/src/cortexm/_initialize_hardware.c ****   // Override the manual, possibly wrong, SystemInit() setting.
  43:../system/src/cortexm/_initialize_hardware.c ****   SCB->VTOR = (uint32_t)(&__vectors_start);
  37              		.loc 1 43 0
  38 0006 024A     		ldr	r2, .L3
  39 0008 024B     		ldr	r3, .L3+4
  40 000a 9A60     		str	r2, [r3, #8]
  44:../system/src/cortexm/_initialize_hardware.c **** #endif
  45:../system/src/cortexm/_initialize_hardware.c **** 
  46:../system/src/cortexm/_initialize_hardware.c ****   // The current version of SystemInit() leaves the value of the clock
  47:../system/src/cortexm/_initialize_hardware.c ****   // in a RAM variable (SystemCoreClock), which will be cleared shortly,
  48:../system/src/cortexm/_initialize_hardware.c ****   // so it needs to be recomputed after the RAM initialisations
  49:../system/src/cortexm/_initialize_hardware.c ****   // are completed.
  50:../system/src/cortexm/_initialize_hardware.c **** 
  51:../system/src/cortexm/_initialize_hardware.c **** #if defined(OS_INCLUDE_STARTUP_INIT_FP) || (defined (__VFP_FP__) && !defined (__SOFTFP__))
  52:../system/src/cortexm/_initialize_hardware.c **** 
  53:../system/src/cortexm/_initialize_hardware.c ****   // Normally FP init is done by SystemInit(). In case this is not done
  54:../system/src/cortexm/_initialize_hardware.c ****   // there, it is possible to force its inclusion by defining
  55:../system/src/cortexm/_initialize_hardware.c ****   // OS_INCLUDE_STARTUP_INIT_FP.
  56:../system/src/cortexm/_initialize_hardware.c **** 
  57:../system/src/cortexm/_initialize_hardware.c ****   // Enable the Cortex-M4 FPU only when -mfloat-abi=hard.
  58:../system/src/cortexm/_initialize_hardware.c ****   // Code taken from Section 7.1, Cortex-M4 TRM (DDI0439C)
  59:../system/src/cortexm/_initialize_hardware.c **** 
  60:../system/src/cortexm/_initialize_hardware.c ****   // Set bits 20-23 to enable CP10 and CP11 coprocessor
  61:../system/src/cortexm/_initialize_hardware.c ****   SCB->CPACR |= (0xF << 20);
  62:../system/src/cortexm/_initialize_hardware.c **** 
  63:../system/src/cortexm/_initialize_hardware.c **** #endif // (__VFP_FP__) && !(__SOFTFP__)
  64:../system/src/cortexm/_initialize_hardware.c **** 
  65:../system/src/cortexm/_initialize_hardware.c **** #if defined(OS_DEBUG_SEMIHOSTING_FAULTS)
  66:../system/src/cortexm/_initialize_hardware.c ****   SCB->SHCSR |= SCB_SHCSR_USGFAULTENA_Msk;
  67:../system/src/cortexm/_initialize_hardware.c **** #endif
  68:../system/src/cortexm/_initialize_hardware.c **** }
  41              		.loc 1 68 0
  42 000c 08BD     		pop	{r3, pc}
  43              	.L4:
  44 000e 00BF     		.align	2
  45              	.L3:
  46 0010 00000000 		.word	__vectors_start
  47 0014 00ED00E0 		.word	-536810240
  48              		.cfi_endproc
  49              	.LFE63:
  51              		.section	.text.__initialize_hardware,"ax",%progbits
  52              		.align	1
  53              		.weak	__initialize_hardware
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu softvfp
  59              	__initialize_hardware:
  60              	.LFB64:
  69:../system/src/cortexm/_initialize_hardware.c **** 
  70:../system/src/cortexm/_initialize_hardware.c **** // This is the second hardware initialisation routine, it can be
  71:../system/src/cortexm/_initialize_hardware.c **** // redefined in the application for more complex cases that
  72:../system/src/cortexm/_initialize_hardware.c **** // require custom inits (before constructors), otherwise these can
  73:../system/src/cortexm/_initialize_hardware.c **** // be done in main().
  74:../system/src/cortexm/_initialize_hardware.c **** //
  75:../system/src/cortexm/_initialize_hardware.c **** // Called from _start(), right after data & bss init, before
  76:../system/src/cortexm/_initialize_hardware.c **** // constructors.
  77:../system/src/cortexm/_initialize_hardware.c **** 
  78:../system/src/cortexm/_initialize_hardware.c **** void
  79:../system/src/cortexm/_initialize_hardware.c **** __attribute__((weak))
  80:../system/src/cortexm/_initialize_hardware.c **** __initialize_hardware(void)
  81:../system/src/cortexm/_initialize_hardware.c **** {
  61              		.loc 1 81 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65 0000 08B5     		push	{r3, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 3, -8
  68              		.cfi_offset 14, -4
  82:../system/src/cortexm/_initialize_hardware.c ****   // Call the CSMSIS system clock routine to store the clock frequency
  83:../system/src/cortexm/_initialize_hardware.c ****   // in the SystemCoreClock global RAM location.
  84:../system/src/cortexm/_initialize_hardware.c ****   SystemCoreClockUpdate();
  69              		.loc 1 84 0
  70 0002 FFF7FEFF 		bl	SystemCoreClockUpdate
  71              	.LVL1:
  85:../system/src/cortexm/_initialize_hardware.c **** }
  72              		.loc 1 85 0
  73 0006 08BD     		pop	{r3, pc}
  74              		.cfi_endproc
  75              	.LFE64:
  77              		.text
  78              	.Letext0:
  79              		.file 2 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
  80              		.file 3 "../system/include/cmsis/core_cm3.h"
  81              		.file 4 "../system/include/cmsis/system_stm32f10x.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 _initialize_hardware.c
     /tmp/ccgkrame.s:16     .text.__initialize_hardware_early:0000000000000000 $t
     /tmp/ccgkrame.s:23     .text.__initialize_hardware_early:0000000000000000 __initialize_hardware_early
     /tmp/ccgkrame.s:46     .text.__initialize_hardware_early:0000000000000010 $d
     /tmp/ccgkrame.s:52     .text.__initialize_hardware:0000000000000000 $t
     /tmp/ccgkrame.s:59     .text.__initialize_hardware:0000000000000000 __initialize_hardware
                           .group:0000000000000000 wm4.0.879aed89c359f5856fe69c61b3590d34
                           .group:0000000000000000 wm4.stm32f10x.h.51.c58ea26c5150470d52680f0bbaa7049c
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.core_cm3.h.82.57a0f9dd004efa579f86574376281d2f
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.183.ecfd9c316d6f10b73648f6e579b02c8b
                           .group:0000000000000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:0000000000000000 wm4.stm32f10x_can.h.25.e5e43f6bbc8fc7c8aa30ef2bc5610ced
                           .group:0000000000000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:0000000000000000 wm4.stm32f10x_dac.h.25.d946244edf026333094657d55ea894b8
                           .group:0000000000000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:0000000000000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:0000000000000000 wm4.stm32f10x_exti.h.25.f52c69aad7d1994be5b2c4e2b8f4c595
                           .group:0000000000000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:0000000000000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.25.b124ac2c620f8ebddd92b6d95ca62176
                           .group:0000000000000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:0000000000000000 wm4.stm32f10x_sdio.h.25.fb0db079f5c1412c40f359319f7c40b0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.25.3f6dfa4abe177efb3c6f5a717c06b323
                           .group:0000000000000000 wm4.stm32f10x_tim.h.25.f709106ba77b314e6b070693f89f3c56
                           .group:0000000000000000 wm4.stm32f10x_usart.h.25.2e65e396239d0cc41fd0bf6faa2a32cb
                           .group:0000000000000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:0000000000000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:0000000000000000 wm4.stm32f10x.h.8317.9a8e476d96d33bb2df9a9ad0775bd4a7

UNDEFINED SYMBOLS
SystemInit
__vectors_start
SystemCoreClockUpdate
