   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"umb_master.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.umb_master_init,"ax",%progbits
  16              		.align	1
  17              		.global	umb_master_init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	umb_master_init:
  24              	.LFB87:
  25              		.file 1 "../system/src/umb_master/umb_master.c"
   1:../system/src/umb_master/umb_master.c **** /*
   2:../system/src/umb_master/umb_master.c ****  * umb_client.c
   3:../system/src/umb_master/umb_master.c ****  *
   4:../system/src/umb_master/umb_master.c ****  *  Created on: 22.02.2020
   5:../system/src/umb_master/umb_master.c ****  *      Author: mateusz
   6:../system/src/umb_master/umb_master.c ****  */
   7:../system/src/umb_master/umb_master.c **** 
   8:../system/src/umb_master/umb_master.c **** #include <string.h>
   9:../system/src/umb_master/umb_master.c **** #include <stdio.h>
  10:../system/src/umb_master/umb_master.c **** 
  11:../system/src/umb_master/umb_master.c **** #include <umb_master/umb_0x26_status.h>
  12:../system/src/umb_master/umb_master.c **** #include <umb_master/umb_0x23_offline_data.h>
  13:../system/src/umb_master/umb_master.c **** #include <umb_master/umb_master.h>
  14:../system/src/umb_master/umb_master.c **** #include <umb_master/umb_channel_pool.h>
  15:../system/src/umb_master/umb_master.c **** #include <rte_wx.h>
  16:../system/src/umb_master/umb_master.c **** 
  17:../system/src/umb_master/umb_master.c **** #define SOH 0x01
  18:../system/src/umb_master/umb_master.c **** #define STX 0x02
  19:../system/src/umb_master/umb_master.c **** #define ETX 0x03
  20:../system/src/umb_master/umb_master.c **** #define EOT 0x04
  21:../system/src/umb_master/umb_master.c **** 
  22:../system/src/umb_master/umb_master.c **** #define V10 0x10
  23:../system/src/umb_master/umb_master.c **** 
  24:../system/src/umb_master/umb_master.c **** #define MASTER_ID 0x01
  25:../system/src/umb_master/umb_master.c **** #define MASTER_CLASS 0xF0
  26:../system/src/umb_master/umb_master.c **** 
  27:../system/src/umb_master/umb_master.c **** #define TEN_MINUTES (1000 * 600)
  28:../system/src/umb_master/umb_master.c **** 
  29:../system/src/umb_master/umb_master.c **** void umb_master_init(umb_context_t* ctx, srl_context_t* serial_ctx, const config_data_umb_t * const
  26              		.loc 1 29 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 10B4     		push	{r4}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 4, -4
  30:../system/src/umb_master/umb_master.c **** 	ctx->current_routine = -1;
  35              		.loc 1 30 0
  36 0002 4FF6FF73 		movw	r3, #65535
  37 0006 0380     		strh	r3, [r0]	@ movhi
  31:../system/src/umb_master/umb_master.c **** 	ctx->state = UMB_STATUS_IDLE;
  38              		.loc 1 31 0
  39 0008 0023     		movs	r3, #0
  40 000a 0376     		strb	r3, [r0, #24]
  32:../system/src/umb_master/umb_master.c **** 	ctx->nok_error_it = 0;
  41              		.loc 1 32 0
  42 000c 8371     		strb	r3, [r0, #6]
  33:../system/src/umb_master/umb_master.c **** 	ctx->time_of_last_nok = 0xFFFFFFFFu;
  43              		.loc 1 33 0
  44 000e 4FF0FF34 		mov	r4, #-1
  45 0012 C460     		str	r4, [r0, #12]
  34:../system/src/umb_master/umb_master.c **** 	ctx->time_of_last_comms_timeout = 0xFFFFFFFFu;
  46              		.loc 1 34 0
  47 0014 0461     		str	r4, [r0, #16]
  35:../system/src/umb_master/umb_master.c **** 
  36:../system/src/umb_master/umb_master.c **** 	ctx->time_of_last_successful_comms = 0;
  48              		.loc 1 36 0
  49 0016 4361     		str	r3, [r0, #20]
  37:../system/src/umb_master/umb_master.c **** 
  38:../system/src/umb_master/umb_master.c **** 	ctx->last_fault_channel = 0;
  50              		.loc 1 38 0
  51 0018 0381     		strh	r3, [r0, #8]	@ movhi
  39:../system/src/umb_master/umb_master.c **** 
  40:../system/src/umb_master/umb_master.c **** 	ctx->serial_context = serial_ctx;
  52              		.loc 1 40 0
  53 001a C162     		str	r1, [r0, #44]
  54              	.LVL1:
  55              	.LBB2:
  41:../system/src/umb_master/umb_master.c **** 
  42:../system/src/umb_master/umb_master.c **** 	for (int i = 0; i < UMB_CONTEXT_ERR_HISTORY_LN; i++) {
  56              		.loc 1 42 0
  57 001c 03E0     		b	.L2
  58              	.LVL2:
  59              	.L3:
  43:../system/src/umb_master/umb_master.c **** 		ctx->nok_error_codes[i] = 0;
  60              		.loc 1 43 0 discriminator 3
  61 001e C118     		adds	r1, r0, r3
  62 0020 0024     		movs	r4, #0
  63 0022 8C70     		strb	r4, [r1, #2]
  42:../system/src/umb_master/umb_master.c **** 		ctx->nok_error_codes[i] = 0;
  64              		.loc 1 42 0 discriminator 3
  65 0024 0133     		adds	r3, r3, #1
  66              	.LVL3:
  67              	.L2:
  42:../system/src/umb_master/umb_master.c **** 		ctx->nok_error_codes[i] = 0;
  68              		.loc 1 42 0 is_stmt 0 discriminator 1
  69 0026 032B     		cmp	r3, #3
  70 0028 F9DD     		ble	.L3
  71              	.LBE2:
  72              	.LBB3:
  44:../system/src/umb_master/umb_master.c **** 	}
  45:../system/src/umb_master/umb_master.c **** 
  46:../system/src/umb_master/umb_master.c **** 	for (int i = 0; i < UMB_CHANNELS_STORAGE_CAPAC; i++)
  73              		.loc 1 46 0 is_stmt 1
  74 002a 0023     		movs	r3, #0
  75              	.LVL4:
  76 002c 05E0     		b	.L4
  77              	.LVL5:
  78              	.L5:
  47:../system/src/umb_master/umb_master.c **** 		rte_wx_umb_channel_values[i][0] = 0xFFFF;
  79              		.loc 1 47 0 discriminator 3
  80 002e 0A49     		ldr	r1, .L7
  81 0030 4FF6FF74 		movw	r4, #65535
  82 0034 21F82340 		strh	r4, [r1, r3, lsl #2]	@ movhi
  46:../system/src/umb_master/umb_master.c **** 		rte_wx_umb_channel_values[i][0] = 0xFFFF;
  83              		.loc 1 46 0 discriminator 3
  84 0038 0133     		adds	r3, r3, #1
  85              	.LVL6:
  86              	.L4:
  46:../system/src/umb_master/umb_master.c **** 		rte_wx_umb_channel_values[i][0] = 0xFFFF;
  87              		.loc 1 46 0 is_stmt 0 discriminator 1
  88 003a 052B     		cmp	r3, #5
  89 003c F7DD     		ble	.L5
  90              	.LBE3:
  48:../system/src/umb_master/umb_master.c **** 
  49:../system/src/umb_master/umb_master.c **** 	ctx->channel_numbers[0] = config_umb->channel_windspeed;
  91              		.loc 1 49 0 is_stmt 1
  92 003e 9388     		ldrh	r3, [r2, #4]
  93              	.LVL7:
  94 0040 4383     		strh	r3, [r0, #26]	@ movhi
  50:../system/src/umb_master/umb_master.c **** 
  51:../system/src/umb_master/umb_master.c **** 	ctx->channel_numbers[1] = config_umb->channel_wingsusts;
  95              		.loc 1 51 0
  96 0042 D388     		ldrh	r3, [r2, #6]
  97 0044 8383     		strh	r3, [r0, #28]	@ movhi
  52:../system/src/umb_master/umb_master.c **** 
  53:../system/src/umb_master/umb_master.c **** 	ctx->channel_numbers[2] = config_umb->channel_winddirection;
  98              		.loc 1 53 0
  99 0046 1389     		ldrh	r3, [r2, #8]
 100 0048 C383     		strh	r3, [r0, #30]	@ movhi
  54:../system/src/umb_master/umb_master.c **** 
  55:../system/src/umb_master/umb_master.c **** 	ctx->channel_numbers[3] = config_umb->channel_temperature;
 101              		.loc 1 55 0
 102 004a 5389     		ldrh	r3, [r2, #10]
 103 004c 0384     		strh	r3, [r0, #32]	@ movhi
  56:../system/src/umb_master/umb_master.c **** 
  57:../system/src/umb_master/umb_master.c **** 	ctx->channel_numbers[4] = config_umb->channel_qnh;
 104              		.loc 1 57 0
 105 004e 9389     		ldrh	r3, [r2, #12]
 106 0050 4384     		strh	r3, [r0, #34]	@ movhi
  58:../system/src/umb_master/umb_master.c **** 
  59:../system/src/umb_master/umb_master.c **** }
 107              		.loc 1 59 0
 108 0052 10BC     		pop	{r4}
 109              		.cfi_restore 4
 110              		.cfi_def_cfa_offset 0
 111 0054 7047     		bx	lr
 112              	.L8:
 113 0056 00BF     		.align	2
 114              	.L7:
 115 0058 00000000 		.word	rte_wx_umb_channel_values
 116              		.cfi_endproc
 117              	.LFE87:
 119              		.section	.text.umb_calc_crc,"ax",%progbits
 120              		.align	1
 121              		.global	umb_calc_crc
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu softvfp
 127              	umb_calc_crc:
 128              	.LFB90:
  60:../system/src/umb_master/umb_master.c **** 
  61:../system/src/umb_master/umb_master.c **** umb_retval_t umb_parse_serial_buffer_to_frame(uint8_t* serial_buffer, uint16_t buffer_ln, umb_frame
  62:../system/src/umb_master/umb_master.c **** 
  63:../system/src/umb_master/umb_master.c **** 	uint16_t crc = 0xFFFFu;
  64:../system/src/umb_master/umb_master.c **** 
  65:../system/src/umb_master/umb_master.c **** 	if (serial_buffer[0] != SOH && serial_buffer[1] != V10)
  66:../system/src/umb_master/umb_master.c **** 		return UMB_NOT_VALID_FRAME;
  67:../system/src/umb_master/umb_master.c **** 
  68:../system/src/umb_master/umb_master.c **** 	if (serial_buffer[3] != (MASTER_CLASS >> 4) && serial_buffer[2] != MASTER_ID)
  69:../system/src/umb_master/umb_master.c **** 		return UMB_TO_ANOTHER_MASTER;
  70:../system/src/umb_master/umb_master.c **** 
  71:../system/src/umb_master/umb_master.c **** 	frame->slave_class 		= serial_buffer[5] >> 4;
  72:../system/src/umb_master/umb_master.c **** 	frame->slave_id 		= serial_buffer[4];
  73:../system/src/umb_master/umb_master.c **** 	frame->lenght 			= serial_buffer[6] - 2;
  74:../system/src/umb_master/umb_master.c **** 
  75:../system/src/umb_master/umb_master.c **** 	if (serial_buffer[7] != STX)
  76:../system/src/umb_master/umb_master.c **** 		return UMB_NOT_VALID_FRAME;
  77:../system/src/umb_master/umb_master.c **** 
  78:../system/src/umb_master/umb_master.c **** 	frame->command_id		= serial_buffer[8];
  79:../system/src/umb_master/umb_master.c **** 	frame->protocol_version = serial_buffer[9];
  80:../system/src/umb_master/umb_master.c **** 
  81:../system/src/umb_master/umb_master.c **** 	// checking if payload isn't too big to fit into structure
  82:../system/src/umb_master/umb_master.c **** 	if (frame->lenght >= UMB_FRAME_MAX_PAYLOAD_LN)
  83:../system/src/umb_master/umb_master.c **** 		return UMB_RECV_FRAME_TOO_LONG;
  84:../system/src/umb_master/umb_master.c **** 
  85:../system/src/umb_master/umb_master.c **** 	// Copying payload of the frame from a serial buffer
  86:../system/src/umb_master/umb_master.c **** 	for (int i = 0; (i < frame->lenght && i < buffer_ln); i++) {
  87:../system/src/umb_master/umb_master.c **** 		frame->payload[i] = serial_buffer[10 + i];
  88:../system/src/umb_master/umb_master.c **** 	}
  89:../system/src/umb_master/umb_master.c **** 
  90:../system/src/umb_master/umb_master.c **** 	// recalculating crc from frame content
  91:../system/src/umb_master/umb_master.c **** 	for (int j = 0; j <= frame->lenght + 8 + 2; j++) {
  92:../system/src/umb_master/umb_master.c **** 		crc = umb_calc_crc(crc, serial_buffer[j]);
  93:../system/src/umb_master/umb_master.c **** 	}
  94:../system/src/umb_master/umb_master.c **** 
  95:../system/src/umb_master/umb_master.c **** 	frame->calculated_checksum_lsb = crc & 0xFF;
  96:../system/src/umb_master/umb_master.c **** 	frame->calculated_checksum_msb = (crc & 0xFF00) >> 8;
  97:../system/src/umb_master/umb_master.c **** 
  98:../system/src/umb_master/umb_master.c **** 	if (	serial_buffer[frame->lenght + 9 + 2] != frame->calculated_checksum_lsb ||
  99:../system/src/umb_master/umb_master.c **** 			serial_buffer[frame->lenght + 10 + 2] != frame->calculated_checksum_msb)
 100:../system/src/umb_master/umb_master.c **** 		return UMB_WRONG_CRC;
 101:../system/src/umb_master/umb_master.c **** 
 102:../system/src/umb_master/umb_master.c **** 	return UMB_OK;
 103:../system/src/umb_master/umb_master.c **** }
 104:../system/src/umb_master/umb_master.c **** 
 105:../system/src/umb_master/umb_master.c **** umb_retval_t umb_parse_frame_to_serial_buffer(uint8_t* serial_buffer, uint16_t buffer_ln, umb_frame
 106:../system/src/umb_master/umb_master.c **** 
 107:../system/src/umb_master/umb_master.c **** 	int i = 0;
 108:../system/src/umb_master/umb_master.c **** 	uint16_t crc = 0xFFFFu;
 109:../system/src/umb_master/umb_master.c **** 
 110:../system/src/umb_master/umb_master.c **** 	if (frame->lenght - 2 >= buffer_ln)
 111:../system/src/umb_master/umb_master.c **** 		return UMB_FRAME_TOO_LONG_FOR_TX;
 112:../system/src/umb_master/umb_master.c **** 
 113:../system/src/umb_master/umb_master.c **** 	memset(serial_buffer, 0x00, buffer_ln);
 114:../system/src/umb_master/umb_master.c **** 
 115:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = SOH;
 116:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = V10;
 117:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = (uint8_t)(config_umb->slave_id & 0xFF); //_UMB_SLAVE_ID;
 118:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = (uint8_t)(config_umb->slave_class & 0xFF) << 4;//_UMB_SLAVE_CLASS << 4;
 119:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = MASTER_ID;
 120:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = MASTER_CLASS;
 121:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = frame->lenght + 2;
 122:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = STX;
 123:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = frame->command_id;
 124:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = V10;
 125:../system/src/umb_master/umb_master.c **** 
 126:../system/src/umb_master/umb_master.c **** 	for (int j = 0; j < frame->lenght; j++) {
 127:../system/src/umb_master/umb_master.c **** 		serial_buffer[i++] = frame->payload[j];
 128:../system/src/umb_master/umb_master.c **** 	}
 129:../system/src/umb_master/umb_master.c **** 
 130:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = ETX;
 131:../system/src/umb_master/umb_master.c **** 
 132:../system/src/umb_master/umb_master.c **** 	for (int j = 0; j < i; j++) {
 133:../system/src/umb_master/umb_master.c **** 		crc = umb_calc_crc(crc, serial_buffer[j]);
 134:../system/src/umb_master/umb_master.c **** 	}
 135:../system/src/umb_master/umb_master.c **** 
 136:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = (uint8_t) crc & 0xFF;
 137:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = (uint8_t) ((crc & 0xFF00) >> 8);
 138:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = EOT;
 139:../system/src/umb_master/umb_master.c **** 
 140:../system/src/umb_master/umb_master.c **** 	*target_ln = (uint16_t)i;
 141:../system/src/umb_master/umb_master.c **** 
 142:../system/src/umb_master/umb_master.c **** 	return UMB_OK;
 143:../system/src/umb_master/umb_master.c **** }
 144:../system/src/umb_master/umb_master.c **** 
 145:../system/src/umb_master/umb_master.c **** uint16_t umb_calc_crc(uint16_t crc_buff, uint8_t input) {
 129              		.loc 1 145 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              	.LVL8:
 146:../system/src/umb_master/umb_master.c **** 	uint8_t i;
 147:../system/src/umb_master/umb_master.c **** 	uint16_t x16;
 148:../system/src/umb_master/umb_master.c **** 	for	(i=0; i<8; i++)
 135              		.loc 1 148 0
 136 0000 0023     		movs	r3, #0
 137 0002 05E0     		b	.L10
 138              	.LVL9:
 139              	.L13:
 149:../system/src/umb_master/umb_master.c **** 	{
 150:../system/src/umb_master/umb_master.c **** 		// XOR current D0 and next input bit to determine x16 value
 151:../system/src/umb_master/umb_master.c **** 		if		( (crc_buff & 0x0001) ^ (input & 0x01) )
 152:../system/src/umb_master/umb_master.c **** 			x16 = 0x8408;
 153:../system/src/umb_master/umb_master.c **** 		else
 154:../system/src/umb_master/umb_master.c **** 			x16 = 0x0000;
 140              		.loc 1 154 0
 141 0004 0022     		movs	r2, #0
 142              	.L11:
 143              	.LVL10:
 155:../system/src/umb_master/umb_master.c **** 		// shift crc buffer
 156:../system/src/umb_master/umb_master.c **** 		crc_buff = crc_buff >> 1;
 157:../system/src/umb_master/umb_master.c **** 		// XOR in the x16 value
 158:../system/src/umb_master/umb_master.c **** 		crc_buff ^= x16;
 144              		.loc 1 158 0 discriminator 2
 145 0006 82EA5000 		eor	r0, r2, r0, lsr #1
 146              	.LVL11:
 159:../system/src/umb_master/umb_master.c **** 		// shift input for next iteration
 160:../system/src/umb_master/umb_master.c **** 		input = input >> 1;
 147              		.loc 1 160 0 discriminator 2
 148 000a 4908     		lsrs	r1, r1, #1
 149              	.LVL12:
 148:../system/src/umb_master/umb_master.c **** 	{
 150              		.loc 1 148 0 discriminator 2
 151 000c 0133     		adds	r3, r3, #1
 152              	.LVL13:
 153 000e DBB2     		uxtb	r3, r3
 154              	.LVL14:
 155              	.L10:
 148:../system/src/umb_master/umb_master.c **** 	{
 156              		.loc 1 148 0 is_stmt 0 discriminator 1
 157 0010 072B     		cmp	r3, #7
 158 0012 07D8     		bhi	.L14
 151:../system/src/umb_master/umb_master.c **** 			x16 = 0x8408;
 159              		.loc 1 151 0 is_stmt 1
 160 0014 80EA0102 		eor	r2, r0, r1
 161 0018 12F0010F 		tst	r2, #1
 162 001c F2D0     		beq	.L13
 152:../system/src/umb_master/umb_master.c **** 		else
 163              		.loc 1 152 0
 164 001e 48F20842 		movw	r2, #33800
 165 0022 F0E7     		b	.L11
 166              	.L14:
 161:../system/src/umb_master/umb_master.c **** 	}
 162:../system/src/umb_master/umb_master.c **** 	return (crc_buff);
 163:../system/src/umb_master/umb_master.c **** }
 167              		.loc 1 163 0
 168 0024 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE90:
 172              		.section	.text.umb_parse_serial_buffer_to_frame,"ax",%progbits
 173              		.align	1
 174              		.global	umb_parse_serial_buffer_to_frame
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu softvfp
 180              	umb_parse_serial_buffer_to_frame:
 181              	.LFB88:
  61:../system/src/umb_master/umb_master.c **** 
 182              		.loc 1 61 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              	.LVL15:
  65:../system/src/umb_master/umb_master.c **** 		return UMB_NOT_VALID_FRAME;
 187              		.loc 1 65 0
 188 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 189 0002 012B     		cmp	r3, #1
 190 0004 02D0     		beq	.L16
  65:../system/src/umb_master/umb_master.c **** 		return UMB_NOT_VALID_FRAME;
 191              		.loc 1 65 0 is_stmt 0 discriminator 1
 192 0006 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 193 0008 102B     		cmp	r3, #16
 194 000a 4DD1     		bne	.L24
 195              	.L16:
  68:../system/src/umb_master/umb_master.c **** 		return UMB_TO_ANOTHER_MASTER;
 196              		.loc 1 68 0 is_stmt 1
 197 000c C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 198 000e 0F2B     		cmp	r3, #15
 199 0010 02D0     		beq	.L18
  68:../system/src/umb_master/umb_master.c **** 		return UMB_TO_ANOTHER_MASTER;
 200              		.loc 1 68 0 is_stmt 0 discriminator 1
 201 0012 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 202 0014 012B     		cmp	r3, #1
 203 0016 4AD1     		bne	.L25
 204              	.L18:
  61:../system/src/umb_master/umb_master.c **** 
 205              		.loc 1 61 0 is_stmt 1
 206 0018 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 207              		.cfi_def_cfa_offset 24
 208              		.cfi_offset 4, -24
 209              		.cfi_offset 5, -20
 210              		.cfi_offset 6, -16
 211              		.cfi_offset 7, -12
 212              		.cfi_offset 8, -8
 213              		.cfi_offset 14, -4
  71:../system/src/umb_master/umb_master.c **** 	frame->slave_id 		= serial_buffer[4];
 214              		.loc 1 71 0
 215 001c 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 216 001e 1B09     		lsrs	r3, r3, #4
 217 0020 9370     		strb	r3, [r2, #2]
  72:../system/src/umb_master/umb_master.c **** 	frame->lenght 			= serial_buffer[6] - 2;
 218              		.loc 1 72 0
 219 0022 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 220 0024 5370     		strb	r3, [r2, #1]
  73:../system/src/umb_master/umb_master.c **** 
 221              		.loc 1 73 0
 222 0026 8679     		ldrb	r6, [r0, #6]	@ zero_extendqisi2
 223 0028 023E     		subs	r6, r6, #2
 224 002a F6B2     		uxtb	r6, r6
 225 002c D670     		strb	r6, [r2, #3]
  75:../system/src/umb_master/umb_master.c **** 		return UMB_NOT_VALID_FRAME;
 226              		.loc 1 75 0
 227 002e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 228 0030 022B     		cmp	r3, #2
 229 0032 3FD1     		bne	.L26
  78:../system/src/umb_master/umb_master.c **** 	frame->protocol_version = serial_buffer[9];
 230              		.loc 1 78 0
 231 0034 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 232 0036 1371     		strb	r3, [r2, #4]
  79:../system/src/umb_master/umb_master.c **** 
 233              		.loc 1 79 0
 234 0038 437A     		ldrb	r3, [r0, #9]	@ zero_extendqisi2
 235 003a 1370     		strb	r3, [r2]
  82:../system/src/umb_master/umb_master.c **** 		return UMB_RECV_FRAME_TOO_LONG;
 236              		.loc 1 82 0
 237 003c 272E     		cmp	r6, #39
 238 003e 3CD8     		bhi	.L27
 239 0040 1746     		mov	r7, r2
 240 0042 0446     		mov	r4, r0
 241              	.LBB4:
  86:../system/src/umb_master/umb_master.c **** 		frame->payload[i] = serial_buffer[10 + i];
 242              		.loc 1 86 0
 243 0044 0023     		movs	r3, #0
 244 0046 05E0     		b	.L19
 245              	.LVL16:
 246              	.L21:
  87:../system/src/umb_master/umb_master.c **** 	}
 247              		.loc 1 87 0 discriminator 4
 248 0048 03F10A02 		add	r2, r3, #10
 249 004c A05C     		ldrb	r0, [r4, r2]	@ zero_extendqisi2
 250 004e FA18     		adds	r2, r7, r3
 251 0050 5071     		strb	r0, [r2, #5]
  86:../system/src/umb_master/umb_master.c **** 		frame->payload[i] = serial_buffer[10 + i];
 252              		.loc 1 86 0 discriminator 4
 253 0052 0133     		adds	r3, r3, #1
 254              	.LVL17:
 255              	.L19:
  86:../system/src/umb_master/umb_master.c **** 		frame->payload[i] = serial_buffer[10 + i];
 256              		.loc 1 86 0 is_stmt 0 discriminator 1
 257 0054 B046     		mov	r8, r6
 258 0056 9E42     		cmp	r6, r3
 259 0058 1FDD     		ble	.L28
  86:../system/src/umb_master/umb_master.c **** 		frame->payload[i] = serial_buffer[10 + i];
 260              		.loc 1 86 0 discriminator 3
 261 005a 9942     		cmp	r1, r3
 262 005c F4DC     		bgt	.L21
 263 005e 0025     		movs	r5, #0
 264 0060 4FF6FF70 		movw	r0, #65535
 265 0064 03E0     		b	.L22
 266              	.LVL18:
 267              	.L23:
 268              	.LBE4:
 269              	.LBB5:
  92:../system/src/umb_master/umb_master.c **** 	}
 270              		.loc 1 92 0 is_stmt 1 discriminator 3
 271 0066 615D     		ldrb	r1, [r4, r5]	@ zero_extendqisi2
 272 0068 FFF7FEFF 		bl	umb_calc_crc
 273              	.LVL19:
  91:../system/src/umb_master/umb_master.c **** 		crc = umb_calc_crc(crc, serial_buffer[j]);
 274              		.loc 1 91 0 discriminator 3
 275 006c 0135     		adds	r5, r5, #1
 276              	.LVL20:
 277              	.L22:
  91:../system/src/umb_master/umb_master.c **** 		crc = umb_calc_crc(crc, serial_buffer[j]);
 278              		.loc 1 91 0 is_stmt 0 discriminator 1
 279 006e 08F10A03 		add	r3, r8, #10
 280 0072 AB42     		cmp	r3, r5
 281 0074 F7DA     		bge	.L23
 282              	.LBE5:
  95:../system/src/umb_master/umb_master.c **** 	frame->calculated_checksum_msb = (crc & 0xFF00) >> 8;
 283              		.loc 1 95 0 is_stmt 1
 284 0076 C3B2     		uxtb	r3, r0
 285 0078 87F82D30 		strb	r3, [r7, #45]
  96:../system/src/umb_master/umb_master.c **** 
 286              		.loc 1 96 0
 287 007c C0F30720 		ubfx	r0, r0, #8, #8
 288              	.LVL21:
 289 0080 87F82E00 		strb	r0, [r7, #46]
  98:../system/src/umb_master/umb_master.c **** 			serial_buffer[frame->lenght + 10 + 2] != frame->calculated_checksum_msb)
 290              		.loc 1 98 0
 291 0084 A219     		adds	r2, r4, r6
 292 0086 D27A     		ldrb	r2, [r2, #11]	@ zero_extendqisi2
 293 0088 9342     		cmp	r3, r2
 294 008a 19D1     		bne	.L29
  99:../system/src/umb_master/umb_master.c **** 		return UMB_WRONG_CRC;
 295              		.loc 1 99 0 discriminator 1
 296 008c 3444     		add	r4, r4, r6
 297              	.LVL22:
 298 008e 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
  98:../system/src/umb_master/umb_master.c **** 			serial_buffer[frame->lenght + 10 + 2] != frame->calculated_checksum_msb)
 299              		.loc 1 98 0 discriminator 1
 300 0090 9842     		cmp	r0, r3
 301 0092 06D1     		bne	.L34
 102:../system/src/umb_master/umb_master.c **** }
 302              		.loc 1 102 0
 303 0094 0020     		movs	r0, #0
 304              	.LVL23:
 305              	.L17:
 103:../system/src/umb_master/umb_master.c **** 
 306              		.loc 1 103 0
 307 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 308              	.LVL24:
 309              	.L28:
 310              	.LBB6:
 311 009a 0025     		movs	r5, #0
 312 009c 4FF6FF70 		movw	r0, #65535
 313 00a0 E5E7     		b	.L22
 314              	.LVL25:
 315              	.L34:
 316              	.LBE6:
 100:../system/src/umb_master/umb_master.c **** 
 317              		.loc 1 100 0
 318 00a2 6FF00400 		mvn	r0, #4
 319 00a6 F6E7     		b	.L17
 320              	.LVL26:
 321              	.L24:
 322              		.cfi_def_cfa_offset 0
 323              		.cfi_restore 4
 324              		.cfi_restore 5
 325              		.cfi_restore 6
 326              		.cfi_restore 7
 327              		.cfi_restore 8
 328              		.cfi_restore 14
  66:../system/src/umb_master/umb_master.c **** 
 329              		.loc 1 66 0
 330 00a8 6FF00100 		mvn	r0, #1
 331              	.LVL27:
 332 00ac 7047     		bx	lr
 333              	.LVL28:
 334              	.L25:
  69:../system/src/umb_master/umb_master.c **** 
 335              		.loc 1 69 0
 336 00ae 6FF00200 		mvn	r0, #2
 337              	.LVL29:
 103:../system/src/umb_master/umb_master.c **** 
 338              		.loc 1 103 0
 339 00b2 7047     		bx	lr
 340              	.LVL30:
 341              	.L26:
 342              		.cfi_def_cfa_offset 24
 343              		.cfi_offset 4, -24
 344              		.cfi_offset 5, -20
 345              		.cfi_offset 6, -16
 346              		.cfi_offset 7, -12
 347              		.cfi_offset 8, -8
 348              		.cfi_offset 14, -4
  76:../system/src/umb_master/umb_master.c **** 
 349              		.loc 1 76 0
 350 00b4 6FF00100 		mvn	r0, #1
 351              	.LVL31:
 352 00b8 EDE7     		b	.L17
 353              	.LVL32:
 354              	.L27:
  83:../system/src/umb_master/umb_master.c **** 
 355              		.loc 1 83 0
 356 00ba 6FF00300 		mvn	r0, #3
 357              	.LVL33:
 358 00be EAE7     		b	.L17
 359              	.LVL34:
 360              	.L29:
 100:../system/src/umb_master/umb_master.c **** 
 361              		.loc 1 100 0
 362 00c0 6FF00400 		mvn	r0, #4
 363 00c4 E7E7     		b	.L17
 364              		.cfi_endproc
 365              	.LFE88:
 367              		.section	.text.umb_parse_frame_to_serial_buffer,"ax",%progbits
 368              		.align	1
 369              		.global	umb_parse_frame_to_serial_buffer
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu softvfp
 375              	umb_parse_frame_to_serial_buffer:
 376              	.LFB89:
 105:../system/src/umb_master/umb_master.c **** 
 377              		.loc 1 105 0
 378              		.cfi_startproc
 379              		@ args = 4, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              	.LVL35:
 382 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 383              		.cfi_def_cfa_offset 24
 384              		.cfi_offset 4, -24
 385              		.cfi_offset 5, -20
 386              		.cfi_offset 6, -16
 387              		.cfi_offset 7, -12
 388              		.cfi_offset 8, -8
 389              		.cfi_offset 14, -4
 390 0004 DDF81880 		ldr	r8, [sp, #24]
 391              	.LVL36:
 110:../system/src/umb_master/umb_master.c **** 		return UMB_FRAME_TOO_LONG_FOR_TX;
 392              		.loc 1 110 0
 393 0008 D578     		ldrb	r5, [r2, #3]	@ zero_extendqisi2
 394 000a 023D     		subs	r5, r5, #2
 395 000c 8D42     		cmp	r5, r1
 396 000e 43DA     		bge	.L41
 397 0010 1F46     		mov	r7, r3
 398 0012 1646     		mov	r6, r2
 399 0014 0A46     		mov	r2, r1
 400              	.LVL37:
 401 0016 0446     		mov	r4, r0
 113:../system/src/umb_master/umb_master.c **** 
 402              		.loc 1 113 0
 403 0018 0021     		movs	r1, #0
 404              	.LVL38:
 405 001a FFF7FEFF 		bl	memset
 406              	.LVL39:
 115:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = V10;
 407              		.loc 1 115 0
 408 001e 0121     		movs	r1, #1
 409 0020 2170     		strb	r1, [r4]
 410              	.LVL40:
 116:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = (uint8_t)(config_umb->slave_id & 0xFF); //_UMB_SLAVE_ID;
 411              		.loc 1 116 0
 412 0022 1022     		movs	r2, #16
 413 0024 6270     		strb	r2, [r4, #1]
 414              	.LVL41:
 117:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = (uint8_t)(config_umb->slave_class & 0xFF) << 4;//_UMB_SLAVE_CLASS << 4;
 415              		.loc 1 117 0
 416 0026 98F80230 		ldrb	r3, [r8, #2]	@ zero_extendqisi2
 417 002a A370     		strb	r3, [r4, #2]
 118:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = MASTER_ID;
 418              		.loc 1 118 0
 419 002c 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 420              	.LVL42:
 421 0030 1B01     		lsls	r3, r3, #4
 422 0032 E370     		strb	r3, [r4, #3]
 423              	.LVL43:
 119:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = MASTER_CLASS;
 424              		.loc 1 119 0
 425 0034 2171     		strb	r1, [r4, #4]
 426              	.LVL44:
 120:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = frame->lenght + 2;
 427              		.loc 1 120 0
 428 0036 F023     		movs	r3, #240
 429 0038 6371     		strb	r3, [r4, #5]
 121:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = STX;
 430              		.loc 1 121 0
 431 003a F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 432              	.LVL45:
 433 003c 0233     		adds	r3, r3, #2
 434 003e A371     		strb	r3, [r4, #6]
 435              	.LVL46:
 122:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = frame->command_id;
 436              		.loc 1 122 0
 437 0040 0223     		movs	r3, #2
 438 0042 E371     		strb	r3, [r4, #7]
 439              	.LVL47:
 123:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = V10;
 440              		.loc 1 123 0
 441 0044 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 442 0046 2372     		strb	r3, [r4, #8]
 443              	.LVL48:
 124:../system/src/umb_master/umb_master.c **** 
 444              		.loc 1 124 0
 445 0048 6272     		strb	r2, [r4, #9]
 446              	.LVL49:
 447              	.LBB7:
 126:../system/src/umb_master/umb_master.c **** 		serial_buffer[i++] = frame->payload[j];
 448              		.loc 1 126 0
 449 004a 0021     		movs	r1, #0
 450              	.LBE7:
 124:../system/src/umb_master/umb_master.c **** 
 451              		.loc 1 124 0
 452 004c 0A25     		movs	r5, #10
 453              	.LBB8:
 126:../system/src/umb_master/umb_master.c **** 		serial_buffer[i++] = frame->payload[j];
 454              		.loc 1 126 0
 455 004e 04E0     		b	.L37
 456              	.LVL50:
 457              	.L38:
 127:../system/src/umb_master/umb_master.c **** 	}
 458              		.loc 1 127 0 discriminator 3
 459 0050 7318     		adds	r3, r6, r1
 460 0052 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 461 0054 6355     		strb	r3, [r4, r5]
 126:../system/src/umb_master/umb_master.c **** 		serial_buffer[i++] = frame->payload[j];
 462              		.loc 1 126 0 discriminator 3
 463 0056 0131     		adds	r1, r1, #1
 464              	.LVL51:
 127:../system/src/umb_master/umb_master.c **** 	}
 465              		.loc 1 127 0 discriminator 3
 466 0058 0135     		adds	r5, r5, #1
 467              	.LVL52:
 468              	.L37:
 126:../system/src/umb_master/umb_master.c **** 		serial_buffer[i++] = frame->payload[j];
 469              		.loc 1 126 0 discriminator 1
 470 005a F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 471 005c 8B42     		cmp	r3, r1
 472 005e F7DC     		bgt	.L38
 473              	.LBE8:
 130:../system/src/umb_master/umb_master.c **** 
 474              		.loc 1 130 0
 475 0060 05F10108 		add	r8, r5, #1
 476              	.LVL53:
 477 0064 0323     		movs	r3, #3
 478 0066 6355     		strb	r3, [r4, r5]
 479              	.LVL54:
 480              	.LBB9:
 132:../system/src/umb_master/umb_master.c **** 		crc = umb_calc_crc(crc, serial_buffer[j]);
 481              		.loc 1 132 0
 482 0068 0026     		movs	r6, #0
 483              	.LVL55:
 484              	.LBE9:
 108:../system/src/umb_master/umb_master.c **** 
 485              		.loc 1 108 0
 486 006a 4FF6FF70 		movw	r0, #65535
 487              	.LBB10:
 132:../system/src/umb_master/umb_master.c **** 		crc = umb_calc_crc(crc, serial_buffer[j]);
 488              		.loc 1 132 0
 489 006e 03E0     		b	.L39
 490              	.LVL56:
 491              	.L40:
 133:../system/src/umb_master/umb_master.c **** 	}
 492              		.loc 1 133 0 discriminator 3
 493 0070 A15D     		ldrb	r1, [r4, r6]	@ zero_extendqisi2
 494 0072 FFF7FEFF 		bl	umb_calc_crc
 495              	.LVL57:
 132:../system/src/umb_master/umb_master.c **** 		crc = umb_calc_crc(crc, serial_buffer[j]);
 496              		.loc 1 132 0 discriminator 3
 497 0076 0136     		adds	r6, r6, #1
 498              	.LVL58:
 499              	.L39:
 132:../system/src/umb_master/umb_master.c **** 		crc = umb_calc_crc(crc, serial_buffer[j]);
 500              		.loc 1 132 0 is_stmt 0 discriminator 1
 501 0078 4645     		cmp	r6, r8
 502 007a F9DB     		blt	.L40
 503              	.LBE10:
 136:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = (uint8_t) ((crc & 0xFF00) >> 8);
 504              		.loc 1 136 0 is_stmt 1
 505 007c AA1C     		adds	r2, r5, #2
 506              	.LVL59:
 507 007e 04F80800 		strb	r0, [r4, r8]
 137:../system/src/umb_master/umb_master.c **** 	serial_buffer[i++] = EOT;
 508              		.loc 1 137 0
 509 0082 EB1C     		adds	r3, r5, #3
 510              	.LVL60:
 511 0084 C0F30720 		ubfx	r0, r0, #8, #8
 512              	.LVL61:
 513 0088 A054     		strb	r0, [r4, r2]
 138:../system/src/umb_master/umb_master.c **** 
 514              		.loc 1 138 0
 515 008a 0435     		adds	r5, r5, #4
 516              	.LVL62:
 517 008c 0422     		movs	r2, #4
 518 008e E254     		strb	r2, [r4, r3]
 140:../system/src/umb_master/umb_master.c **** 
 519              		.loc 1 140 0
 520 0090 3D80     		strh	r5, [r7]	@ movhi
 142:../system/src/umb_master/umb_master.c **** }
 521              		.loc 1 142 0
 522 0092 0020     		movs	r0, #0
 523              	.LVL63:
 524              	.L36:
 143:../system/src/umb_master/umb_master.c **** 
 525              		.loc 1 143 0
 526 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 527              	.LVL64:
 528              	.L41:
 111:../system/src/umb_master/umb_master.c **** 
 529              		.loc 1 111 0
 530 0098 4FF0FF30 		mov	r0, #-1
 531              	.LVL65:
 532 009c FAE7     		b	.L36
 533              		.cfi_endproc
 534              	.LFE89:
 536              		.section	.text.umb_master_callback,"ax",%progbits
 537              		.align	1
 538              		.global	umb_master_callback
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.fpu softvfp
 544              	umb_master_callback:
 545              	.LFB92:
 164:../system/src/umb_master/umb_master.c **** 
 165:../system/src/umb_master/umb_master.c **** /**
 166:../system/src/umb_master/umb_master.c ****  * This function is called in main 'for' loop to check if there
 167:../system/src/umb_master/umb_master.c ****  * is anything to do regarding UMB
 168:../system/src/umb_master/umb_master.c ****  */
 169:../system/src/umb_master/umb_master.c **** umb_retval_t umb_pooling_handler(umb_context_t* ctx, umb_call_reason_t r, uint32_t master_time, con
 170:../system/src/umb_master/umb_master.c **** 
 171:../system/src/umb_master/umb_master.c **** 	uint16_t temp = 0;
 172:../system/src/umb_master/umb_master.c **** 	umb_retval_t main_umb_retval = UMB_UNINITIALIZED;
 173:../system/src/umb_master/umb_master.c **** 
 174:../system/src/umb_master/umb_master.c **** 	switch(ctx->state) {
 175:../system/src/umb_master/umb_master.c **** 		case UMB_STATUS_IDLE:
 176:../system/src/umb_master/umb_master.c **** 			break;
 177:../system/src/umb_master/umb_master.c **** 		case UMB_STATUS_READY_TO_SEND: {
 178:../system/src/umb_master/umb_master.c **** 			// Check if serial port is idle and can be used in this moment to transmit something
 179:../system/src/umb_master/umb_master.c **** 			if (r == REASON_TRANSMIT_IDLE) {
 180:../system/src/umb_master/umb_master.c **** 				// parsing UMB frame into serial buffer
 181:../system/src/umb_master/umb_master.c **** 				umb_parse_frame_to_serial_buffer(ctx->serial_context->srl_tx_buf_pointer, ctx->serial_context->
 182:../system/src/umb_master/umb_master.c **** 
 183:../system/src/umb_master/umb_master.c **** 				// starting data transfer
 184:../system/src/umb_master/umb_master.c **** 				srl_start_tx(ctx->serial_context, temp);
 185:../system/src/umb_master/umb_master.c **** 
 186:../system/src/umb_master/umb_master.c **** 				// switching state
 187:../system/src/umb_master/umb_master.c **** 				ctx->state = UMB_STATUS_SENDING_REQUEST_TO_SLAVE;
 188:../system/src/umb_master/umb_master.c **** 			}
 189:../system/src/umb_master/umb_master.c **** 			break;
 190:../system/src/umb_master/umb_master.c **** 		}
 191:../system/src/umb_master/umb_master.c **** 		// when routine request generator created the frame which now waits to be send
 192:../system/src/umb_master/umb_master.c **** 		case UMB_STATUS_SENDING_REQUEST_TO_SLAVE: {
 193:../system/src/umb_master/umb_master.c **** 
 194:../system/src/umb_master/umb_master.c **** 			if (r == REASON_TRANSMIT_IDLE) {
 195:../system/src/umb_master/umb_master.c **** 				// transmission is done and now receive must be triggered
 196:../system/src/umb_master/umb_master.c **** 				srl_receive_data(ctx->serial_context, 8, SOH, 0x00, 0, 6, 12);
 197:../system/src/umb_master/umb_master.c **** 
 198:../system/src/umb_master/umb_master.c **** 				// enable timeout in case that sensor won't send any reponse
 199:../system/src/umb_master/umb_master.c **** 				srl_switch_timeout(ctx->serial_context, 1, 0);
 200:../system/src/umb_master/umb_master.c **** 				srl_switch_timeout_for_waiting(ctx->serial_context, 1);
 201:../system/src/umb_master/umb_master.c **** 
 202:../system/src/umb_master/umb_master.c **** 				ctx->state = UMB_STATUS_WAITING_FOR_RESPONSE;
 203:../system/src/umb_master/umb_master.c **** 			}
 204:../system/src/umb_master/umb_master.c **** 			//else if (srl_tx_state == SRL_TXING) {
 205:../system/src/umb_master/umb_master.c **** 			//	return UMB_BUSY;
 206:../system/src/umb_master/umb_master.c **** 			//}
 207:../system/src/umb_master/umb_master.c **** 			else {
 208:../system/src/umb_master/umb_master.c **** 				;
 209:../system/src/umb_master/umb_master.c **** 			}
 210:../system/src/umb_master/umb_master.c **** 			break;
 211:../system/src/umb_master/umb_master.c **** 		}
 212:../system/src/umb_master/umb_master.c **** 		case UMB_STATUS_WAITING_FOR_RESPONSE: {
 213:../system/src/umb_master/umb_master.c **** 			if (r == REASON_TRANSMIT_IDLE) {
 214:../system/src/umb_master/umb_master.c **** 
 215:../system/src/umb_master/umb_master.c **** 			}
 216:../system/src/umb_master/umb_master.c **** 			else if (r == REASON_RECEIVE_IDLE) {
 217:../system/src/umb_master/umb_master.c **** 				// deprcode the UMB frame from a content of serial buffer
 218:../system/src/umb_master/umb_master.c **** 				main_umb_retval = umb_parse_serial_buffer_to_frame(
 219:../system/src/umb_master/umb_master.c **** 																	srl_get_rx_buffer(ctx->serial_context),
 220:../system/src/umb_master/umb_master.c **** 																	srl_get_num_bytes_rxed(ctx->serial_context),
 221:../system/src/umb_master/umb_master.c **** 																	&rte_wx_umb);
 222:../system/src/umb_master/umb_master.c **** 
 223:../system/src/umb_master/umb_master.c **** 				// if data was decoded successfully
 224:../system/src/umb_master/umb_master.c **** 				if (main_umb_retval == UMB_OK) {
 225:../system/src/umb_master/umb_master.c **** 					// call a master callback to look what was received
 226:../system/src/umb_master/umb_master.c **** 					main_umb_retval = umb_master_callback(&rte_wx_umb, ctx);
 227:../system/src/umb_master/umb_master.c **** 
 228:../system/src/umb_master/umb_master.c **** 					if (main_umb_retval == UMB_OK) {
 229:../system/src/umb_master/umb_master.c **** 						ctx->time_of_last_successful_comms = master_time;
 230:../system/src/umb_master/umb_master.c **** 
 231:../system/src/umb_master/umb_master.c **** 						ctx->state = UMB_STATUS_RESPONSE_AVALIABLE;
 232:../system/src/umb_master/umb_master.c **** 					}
 233:../system/src/umb_master/umb_master.c **** 					else
 234:../system/src/umb_master/umb_master.c **** 						ctx->state = UMB_STATUS_ERROR;
 235:../system/src/umb_master/umb_master.c **** 				}
 236:../system/src/umb_master/umb_master.c **** 
 237:../system/src/umb_master/umb_master.c **** 
 238:../system/src/umb_master/umb_master.c **** 			}
 239:../system/src/umb_master/umb_master.c **** 			else if (r == REASON_RECEIVE_ERROR) {
 240:../system/src/umb_master/umb_master.c **** 				ctx->state = UMB_STATUS_ERROR;
 241:../system/src/umb_master/umb_master.c **** 
 242:../system/src/umb_master/umb_master.c **** 				ctx->time_of_last_comms_timeout = master_time;
 243:../system/src/umb_master/umb_master.c **** 
 244:../system/src/umb_master/umb_master.c **** 			}
 245:../system/src/umb_master/umb_master.c **** 			break;
 246:../system/src/umb_master/umb_master.c **** 		}
 247:../system/src/umb_master/umb_master.c **** 		case UMB_STATUS_RESPONSE_AVALIABLE: {
 248:../system/src/umb_master/umb_master.c **** 			if (r == REASON_RECEIVE_IDLE) {
 249:../system/src/umb_master/umb_master.c **** 				ctx->state = UMB_STATUS_IDLE;
 250:../system/src/umb_master/umb_master.c **** 
 251:../system/src/umb_master/umb_master.c **** 			}
 252:../system/src/umb_master/umb_master.c **** 			break;
 253:../system/src/umb_master/umb_master.c **** 		}
 254:../system/src/umb_master/umb_master.c **** 		case UMB_STATUS_ERROR: {
 255:../system/src/umb_master/umb_master.c **** 			ctx->state = UMB_STATUS_IDLE;
 256:../system/src/umb_master/umb_master.c **** 
 257:../system/src/umb_master/umb_master.c **** 			break;
 258:../system/src/umb_master/umb_master.c **** 		}
 259:../system/src/umb_master/umb_master.c **** 		case UMB_STATUS_ERROR_WRONG_RID_IN_RESPONSE: {
 260:../system/src/umb_master/umb_master.c **** 			ctx->state = UMB_STATUS_IDLE;
 261:../system/src/umb_master/umb_master.c **** 
 262:../system/src/umb_master/umb_master.c **** 			break;
 263:../system/src/umb_master/umb_master.c **** 		}
 264:../system/src/umb_master/umb_master.c **** 	}
 265:../system/src/umb_master/umb_master.c **** 
 266:../system/src/umb_master/umb_master.c **** 	return UMB_OK;
 267:../system/src/umb_master/umb_master.c **** }
 268:../system/src/umb_master/umb_master.c **** 
 269:../system/src/umb_master/umb_master.c **** /**
 270:../system/src/umb_master/umb_master.c ****  * This function is called globally after receiving any UMB data
 271:../system/src/umb_master/umb_master.c ****  */
 272:../system/src/umb_master/umb_master.c **** umb_retval_t umb_master_callback(umb_frame_t* frame, umb_context_t* ctx) {
 546              		.loc 1 272 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              	.LVL66:
 551 0000 38B5     		push	{r3, r4, r5, lr}
 552              		.cfi_def_cfa_offset 16
 553              		.cfi_offset 3, -16
 554              		.cfi_offset 4, -12
 555              		.cfi_offset 5, -8
 556              		.cfi_offset 14, -4
 557              	.LVL67:
 273:../system/src/umb_master/umb_master.c **** 
 274:../system/src/umb_master/umb_master.c **** 	umb_retval_t ret_fron_callback = UMB_UNINITIALIZED;
 275:../system/src/umb_master/umb_master.c **** 
 276:../system/src/umb_master/umb_master.c **** 	// check if this is a response to routine which was queried recently
 277:../system/src/umb_master/umb_master.c **** 	if (frame->command_id != ctx->current_routine) {
 558              		.loc 1 277 0
 559 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 560 0004 B1F90020 		ldrsh	r2, [r1]
 561 0008 9342     		cmp	r3, r2
 562 000a 06D1     		bne	.L52
 563 000c 0C46     		mov	r4, r1
 278:../system/src/umb_master/umb_master.c **** 		ctx->state = UMB_STATUS_ERROR_WRONG_RID_IN_RESPONSE;
 279:../system/src/umb_master/umb_master.c **** 
 280:../system/src/umb_master/umb_master.c **** 		return UMB_GENERAL_ERROR;
 281:../system/src/umb_master/umb_master.c **** 	}
 282:../system/src/umb_master/umb_master.c **** 
 283:../system/src/umb_master/umb_master.c **** 	// looking for a callback to this response
 284:../system/src/umb_master/umb_master.c **** 	switch (frame->command_id) {
 564              		.loc 1 284 0
 565 000e 232B     		cmp	r3, #35
 566 0010 08D0     		beq	.L46
 567 0012 262B     		cmp	r3, #38
 568 0014 10D0     		beq	.L47
 285:../system/src/umb_master/umb_master.c **** 		case 0x23: {
 286:../system/src/umb_master/umb_master.c **** 			ret_fron_callback = umb_0x23_offline_data_callback(frame, ctx);
 287:../system/src/umb_master/umb_master.c **** 
 288:../system/src/umb_master/umb_master.c **** 			if (ret_fron_callback == UMB_OK) {
 289:../system/src/umb_master/umb_master.c **** 				rte_wx_update_last_measuremenet_timers(ctx->current_channel);
 290:../system/src/umb_master/umb_master.c **** 			}
 291:../system/src/umb_master/umb_master.c **** 
 292:../system/src/umb_master/umb_master.c **** 			break;
 293:../system/src/umb_master/umb_master.c **** 		}
 294:../system/src/umb_master/umb_master.c **** 		case 0x26: {
 295:../system/src/umb_master/umb_master.c **** 			ret_fron_callback = umb_0x26_status_callback(frame, ctx);
 296:../system/src/umb_master/umb_master.c **** 			break;
 297:../system/src/umb_master/umb_master.c **** 		}
 298:../system/src/umb_master/umb_master.c **** 	}
 299:../system/src/umb_master/umb_master.c **** 
 300:../system/src/umb_master/umb_master.c **** 	return UMB_OK;
 569              		.loc 1 300 0
 570 0016 0025     		movs	r5, #0
 571 0018 11E0     		b	.L45
 572              	.L52:
 278:../system/src/umb_master/umb_master.c **** 		ctx->state = UMB_STATUS_ERROR_WRONG_RID_IN_RESPONSE;
 573              		.loc 1 278 0
 574 001a 0523     		movs	r3, #5
 575 001c 0B76     		strb	r3, [r1, #24]
 280:../system/src/umb_master/umb_master.c **** 	}
 576              		.loc 1 280 0
 577 001e 6FF03E05 		mvn	r5, #62
 578 0022 0CE0     		b	.L45
 579              	.L46:
 286:../system/src/umb_master/umb_master.c **** 
 580              		.loc 1 286 0
 581 0024 FFF7FEFF 		bl	umb_0x23_offline_data_callback
 582              	.LVL68:
 288:../system/src/umb_master/umb_master.c **** 				rte_wx_update_last_measuremenet_timers(ctx->current_channel);
 583              		.loc 1 288 0
 584 0028 0546     		mov	r5, r0
 585 002a 08B1     		cbz	r0, .L53
 586              		.loc 1 300 0
 587 002c 0025     		movs	r5, #0
 588 002e 06E0     		b	.L45
 589              	.L53:
 289:../system/src/umb_master/umb_master.c **** 			}
 590              		.loc 1 289 0
 591 0030 208D     		ldrh	r0, [r4, #40]
 592              	.LVL69:
 593 0032 FFF7FEFF 		bl	rte_wx_update_last_measuremenet_timers
 594              	.LVL70:
 595 0036 02E0     		b	.L45
 596              	.LVL71:
 597              	.L47:
 295:../system/src/umb_master/umb_master.c **** 			break;
 598              		.loc 1 295 0
 599 0038 FFF7FEFF 		bl	umb_0x26_status_callback
 600              	.LVL72:
 601              		.loc 1 300 0
 602 003c 0025     		movs	r5, #0
 603              	.LVL73:
 604              	.L45:
 301:../system/src/umb_master/umb_master.c **** }
 605              		.loc 1 301 0
 606 003e 2846     		mov	r0, r5
 607 0040 38BD     		pop	{r3, r4, r5, pc}
 608              		.cfi_endproc
 609              	.LFE92:
 611              		.section	.text.umb_pooling_handler,"ax",%progbits
 612              		.align	1
 613              		.global	umb_pooling_handler
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu softvfp
 619              	umb_pooling_handler:
 620              	.LFB91:
 169:../system/src/umb_master/umb_master.c **** 
 621              		.loc 1 169 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 8
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              	.LVL74:
 626 0000 70B5     		push	{r4, r5, r6, lr}
 627              		.cfi_def_cfa_offset 16
 628              		.cfi_offset 4, -16
 629              		.cfi_offset 5, -12
 630              		.cfi_offset 6, -8
 631              		.cfi_offset 14, -4
 632 0002 86B0     		sub	sp, sp, #24
 633              		.cfi_def_cfa_offset 40
 634 0004 0446     		mov	r4, r0
 635 0006 1546     		mov	r5, r2
 171:../system/src/umb_master/umb_master.c **** 	umb_retval_t main_umb_retval = UMB_UNINITIALIZED;
 636              		.loc 1 171 0
 637 0008 0022     		movs	r2, #0
 638              	.LVL75:
 639 000a ADF81620 		strh	r2, [sp, #22]	@ movhi
 640              	.LVL76:
 174:../system/src/umb_master/umb_master.c **** 		case UMB_STATUS_IDLE:
 641              		.loc 1 174 0
 642 000e 027E     		ldrb	r2, [r0, #24]	@ zero_extendqisi2
 643 0010 013A     		subs	r2, r2, #1
 644 0012 052A     		cmp	r2, #5
 645 0014 5AD8     		bhi	.L55
 646 0016 DFE802F0 		tbb	[pc, r2]
 647              	.LVL77:
 648              	.L57:
 649 001a 03       		.byte	(.L56-.L57)/2
 650 001b 16       		.byte	(.L58-.L57)/2
 651 001c 30       		.byte	(.L59-.L57)/2
 652 001d 52       		.byte	(.L60-.L57)/2
 653 001e 5C       		.byte	(.L61-.L57)/2
 654 001f 57       		.byte	(.L62-.L57)/2
 655              		.p2align 1
 656              	.L56:
 179:../system/src/umb_master/umb_master.c **** 				// parsing UMB frame into serial buffer
 657              		.loc 1 179 0
 658 0020 0029     		cmp	r1, #0
 659 0022 53D1     		bne	.L55
 181:../system/src/umb_master/umb_master.c **** 
 660              		.loc 1 181 0
 661 0024 E26A     		ldr	r2, [r4, #44]
 662 0026 D18B     		ldrh	r1, [r2, #30]
 663              	.LVL78:
 664 0028 5069     		ldr	r0, [r2, #20]
 665 002a 0093     		str	r3, [sp]
 666 002c 0DF11603 		add	r3, sp, #22
 667              	.LVL79:
 668 0030 294A     		ldr	r2, .L67
 669 0032 FFF7FEFF 		bl	umb_parse_frame_to_serial_buffer
 670              	.LVL80:
 184:../system/src/umb_master/umb_master.c **** 
 671              		.loc 1 184 0
 672 0036 BDF91610 		ldrsh	r1, [sp, #22]
 673 003a E06A     		ldr	r0, [r4, #44]
 674 003c FFF7FEFF 		bl	srl_start_tx
 675              	.LVL81:
 187:../system/src/umb_master/umb_master.c **** 			}
 676              		.loc 1 187 0
 677 0040 0223     		movs	r3, #2
 678 0042 2376     		strb	r3, [r4, #24]
 679 0044 42E0     		b	.L55
 680              	.LVL82:
 681              	.L58:
 194:../system/src/umb_master/umb_master.c **** 				// transmission is done and now receive must be triggered
 682              		.loc 1 194 0
 683 0046 0029     		cmp	r1, #0
 684 0048 40D1     		bne	.L55
 196:../system/src/umb_master/umb_master.c **** 
 685              		.loc 1 196 0
 686 004a 0C23     		movs	r3, #12
 687              	.LVL83:
 688 004c 0293     		str	r3, [sp, #8]
 689 004e 0623     		movs	r3, #6
 690 0050 0193     		str	r3, [sp, #4]
 691 0052 0025     		movs	r5, #0
 692              	.LVL84:
 693 0054 0095     		str	r5, [sp]
 694 0056 2B46     		mov	r3, r5
 695 0058 0122     		movs	r2, #1
 696 005a 0821     		movs	r1, #8
 697              	.LVL85:
 698 005c E06A     		ldr	r0, [r4, #44]
 699 005e FFF7FEFF 		bl	srl_receive_data
 700              	.LVL86:
 199:../system/src/umb_master/umb_master.c **** 				srl_switch_timeout_for_waiting(ctx->serial_context, 1);
 701              		.loc 1 199 0
 702 0062 2A46     		mov	r2, r5
 703 0064 0121     		movs	r1, #1
 704 0066 E06A     		ldr	r0, [r4, #44]
 705 0068 FFF7FEFF 		bl	srl_switch_timeout
 706              	.LVL87:
 200:../system/src/umb_master/umb_master.c **** 
 707              		.loc 1 200 0
 708 006c 0121     		movs	r1, #1
 709 006e E06A     		ldr	r0, [r4, #44]
 710 0070 FFF7FEFF 		bl	srl_switch_timeout_for_waiting
 711              	.LVL88:
 202:../system/src/umb_master/umb_master.c **** 			}
 712              		.loc 1 202 0
 713 0074 0323     		movs	r3, #3
 714 0076 2376     		strb	r3, [r4, #24]
 715 0078 28E0     		b	.L55
 716              	.LVL89:
 717              	.L59:
 213:../system/src/umb_master/umb_master.c **** 
 718              		.loc 1 213 0
 719 007a 39B3     		cbz	r1, .L55
 216:../system/src/umb_master/umb_master.c **** 				// deprcode the UMB frame from a content of serial buffer
 720              		.loc 1 216 0
 721 007c 0129     		cmp	r1, #1
 722 007e 05D0     		beq	.L66
 239:../system/src/umb_master/umb_master.c **** 				ctx->state = UMB_STATUS_ERROR;
 723              		.loc 1 239 0
 724 0080 0229     		cmp	r1, #2
 725 0082 23D1     		bne	.L55
 240:../system/src/umb_master/umb_master.c **** 
 726              		.loc 1 240 0
 727 0084 0623     		movs	r3, #6
 728              	.LVL90:
 729 0086 2376     		strb	r3, [r4, #24]
 242:../system/src/umb_master/umb_master.c **** 
 730              		.loc 1 242 0
 731 0088 2561     		str	r5, [r4, #16]
 732 008a 1FE0     		b	.L55
 733              	.LVL91:
 734              	.L66:
 218:../system/src/umb_master/umb_master.c **** 																	srl_get_rx_buffer(ctx->serial_context),
 735              		.loc 1 218 0
 736 008c E06A     		ldr	r0, [r4, #44]
 737 008e FFF7FEFF 		bl	srl_get_rx_buffer
 738              	.LVL92:
 739 0092 0646     		mov	r6, r0
 740 0094 E06A     		ldr	r0, [r4, #44]
 741 0096 FFF7FEFF 		bl	srl_get_num_bytes_rxed
 742              	.LVL93:
 743 009a 0F4A     		ldr	r2, .L67
 744 009c 0146     		mov	r1, r0
 745 009e 3046     		mov	r0, r6
 746 00a0 FFF7FEFF 		bl	umb_parse_serial_buffer_to_frame
 747              	.LVL94:
 224:../system/src/umb_master/umb_master.c **** 					// call a master callback to look what was received
 748              		.loc 1 224 0
 749 00a4 90B9     		cbnz	r0, .L55
 226:../system/src/umb_master/umb_master.c **** 
 750              		.loc 1 226 0
 751 00a6 2146     		mov	r1, r4
 752 00a8 0B48     		ldr	r0, .L67
 753              	.LVL95:
 754 00aa FFF7FEFF 		bl	umb_master_callback
 755              	.LVL96:
 228:../system/src/umb_master/umb_master.c **** 						ctx->time_of_last_successful_comms = master_time;
 756              		.loc 1 228 0
 757 00ae 18B9     		cbnz	r0, .L64
 229:../system/src/umb_master/umb_master.c **** 
 758              		.loc 1 229 0
 759 00b0 6561     		str	r5, [r4, #20]
 231:../system/src/umb_master/umb_master.c **** 					}
 760              		.loc 1 231 0
 761 00b2 0423     		movs	r3, #4
 762 00b4 2376     		strb	r3, [r4, #24]
 763 00b6 09E0     		b	.L55
 764              	.L64:
 234:../system/src/umb_master/umb_master.c **** 				}
 765              		.loc 1 234 0
 766 00b8 0623     		movs	r3, #6
 767 00ba 2376     		strb	r3, [r4, #24]
 768 00bc 06E0     		b	.L55
 769              	.LVL97:
 770              	.L60:
 248:../system/src/umb_master/umb_master.c **** 				ctx->state = UMB_STATUS_IDLE;
 771              		.loc 1 248 0
 772 00be 0129     		cmp	r1, #1
 773 00c0 04D1     		bne	.L55
 249:../system/src/umb_master/umb_master.c **** 
 774              		.loc 1 249 0
 775 00c2 0023     		movs	r3, #0
 776              	.LVL98:
 777 00c4 2376     		strb	r3, [r4, #24]
 778 00c6 01E0     		b	.L55
 779              	.LVL99:
 780              	.L62:
 255:../system/src/umb_master/umb_master.c **** 
 781              		.loc 1 255 0
 782 00c8 0023     		movs	r3, #0
 783              	.LVL100:
 784 00ca 2376     		strb	r3, [r4, #24]
 785              	.LVL101:
 786              	.L55:
 267:../system/src/umb_master/umb_master.c **** 
 787              		.loc 1 267 0
 788 00cc 0020     		movs	r0, #0
 789 00ce 06B0     		add	sp, sp, #24
 790              		.cfi_remember_state
 791              		.cfi_def_cfa_offset 16
 792              		@ sp needed
 793 00d0 70BD     		pop	{r4, r5, r6, pc}
 794              	.LVL102:
 795              	.L61:
 796              		.cfi_restore_state
 260:../system/src/umb_master/umb_master.c **** 
 797              		.loc 1 260 0
 798 00d2 0023     		movs	r3, #0
 799              	.LVL103:
 800 00d4 2376     		strb	r3, [r4, #24]
 262:../system/src/umb_master/umb_master.c **** 		}
 801              		.loc 1 262 0
 802 00d6 F9E7     		b	.L55
 803              	.L68:
 804              		.align	2
 805              	.L67:
 806 00d8 00000000 		.word	rte_wx_umb
 807              		.cfi_endproc
 808              	.LFE91:
 810              		.section	.text.umb_get_current_qf,"ax",%progbits
 811              		.align	1
 812              		.global	umb_get_current_qf
 813              		.syntax unified
 814              		.thumb
 815              		.thumb_func
 816              		.fpu softvfp
 818              	umb_get_current_qf:
 819              	.LFB93:
 302:../system/src/umb_master/umb_master.c **** //	ctx->time_of_last_nok = 0xFFFFFFFFu;
 303:../system/src/umb_master/umb_master.c **** //ctx->time_of_last_comms_timeout = 0xFFFFFFFFu;
 304:../system/src/umb_master/umb_master.c **** //ctx->time_of_last_successful_comms = 0;
 305:../system/src/umb_master/umb_master.c **** umb_qf_t umb_get_current_qf(umb_context_t* ctx, uint32_t master_time) {
 820              		.loc 1 305 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              		@ link register save eliminated.
 825              	.LVL104:
 826 0000 0346     		mov	r3, r0
 827              	.LVL105:
 306:../system/src/umb_master/umb_master.c **** 
 307:../system/src/umb_master/umb_master.c **** 	umb_qf_t out = UMB_QF_UNKNOWN;
 308:../system/src/umb_master/umb_master.c **** 
 309:../system/src/umb_master/umb_master.c **** 	// initialization value - no error has been received from power up
 310:../system/src/umb_master/umb_master.c **** 	if (ctx->time_of_last_nok == 0xFFFFFFFFu) {
 828              		.loc 1 310 0
 829 0002 C268     		ldr	r2, [r0, #12]
 830 0004 B2F1FF3F 		cmp	r2, #-1
 831 0008 05D0     		beq	.L73
 311:../system/src/umb_master/umb_master.c **** 		out = UMB_QF_FULL;
 312:../system/src/umb_master/umb_master.c **** 	}
 313:../system/src/umb_master/umb_master.c **** 	// if the last error status was received more (sooner) than 10 minutes ago
 314:../system/src/umb_master/umb_master.c **** 	else if (master_time - ctx->time_of_last_nok >= TEN_MINUTES) {
 832              		.loc 1 314 0
 833 000a 8A1A     		subs	r2, r1, r2
 834 000c 1148     		ldr	r0, .L85
 835              	.LVL106:
 836 000e 8242     		cmp	r2, r0
 837 0010 13D9     		bls	.L74
 315:../system/src/umb_master/umb_master.c **** 		out = UMB_QF_FULL;
 838              		.loc 1 315 0
 839 0012 0020     		movs	r0, #0
 840 0014 00E0     		b	.L70
 841              	.LVL107:
 842              	.L73:
 311:../system/src/umb_master/umb_master.c **** 		out = UMB_QF_FULL;
 843              		.loc 1 311 0
 844 0016 0020     		movs	r0, #0
 845              	.LVL108:
 846              	.L70:
 316:../system/src/umb_master/umb_master.c **** 	}
 317:../system/src/umb_master/umb_master.c **** 	// if the last error has been received later than 10 minutes ago
 318:../system/src/umb_master/umb_master.c **** 	else {
 319:../system/src/umb_master/umb_master.c **** 		out =  UMB_QF_DEGRADED;
 320:../system/src/umb_master/umb_master.c **** 	}
 321:../system/src/umb_master/umb_master.c **** 
 322:../system/src/umb_master/umb_master.c **** 	// if there were no timeouts so far
 323:../system/src/umb_master/umb_master.c **** 	if (ctx->time_of_last_comms_timeout == 0xFFFFFFFFu) {
 847              		.loc 1 323 0
 848 0018 1A69     		ldr	r2, [r3, #16]
 849 001a B2F1FF3F 		cmp	r2, #-1
 850 001e 10D0     		beq	.L78
 305:../system/src/umb_master/umb_master.c **** 
 851              		.loc 1 305 0
 852 0020 10B4     		push	{r4}
 853              		.cfi_def_cfa_offset 4
 854              		.cfi_offset 4, -4
 324:../system/src/umb_master/umb_master.c **** 		;
 325:../system/src/umb_master/umb_master.c **** 	}
 326:../system/src/umb_master/umb_master.c **** 	// if the time of last timeout during communication was later than 10 minutes ago
 327:../system/src/umb_master/umb_master.c **** 	else if (master_time - ctx->time_of_last_comms_timeout < TEN_MINUTES) {
 855              		.loc 1 327 0
 856 0022 8A1A     		subs	r2, r1, r2
 857 0024 0B4C     		ldr	r4, .L85
 858 0026 A242     		cmp	r2, r4
 859 0028 00D8     		bhi	.L71
 328:../system/src/umb_master/umb_master.c **** //		if (ctx->time_of_last_successful_comms > ctx->time_of_last_comms_timeout) {
 329:../system/src/umb_master/umb_master.c **** //			;
 330:../system/src/umb_master/umb_master.c **** //		}
 331:../system/src/umb_master/umb_master.c **** //		else {
 332:../system/src/umb_master/umb_master.c **** 			out =  UMB_QF_DEGRADED;
 860              		.loc 1 332 0
 861 002a 0120     		movs	r0, #1
 862              	.LVL109:
 863              	.L71:
 333:../system/src/umb_master/umb_master.c **** //		}
 334:../system/src/umb_master/umb_master.c **** 	}
 335:../system/src/umb_master/umb_master.c **** 
 336:../system/src/umb_master/umb_master.c **** 	// if the last successfull communication with the sensor was 10 minutes ago or sooner
 337:../system/src/umb_master/umb_master.c **** 	if (master_time - ctx->time_of_last_successful_comms > TEN_MINUTES) {
 864              		.loc 1 337 0
 865 002c 5B69     		ldr	r3, [r3, #20]
 866              	.LVL110:
 867 002e C91A     		subs	r1, r1, r3
 868              	.LVL111:
 869 0030 094B     		ldr	r3, .L85+4
 870 0032 9942     		cmp	r1, r3
 871 0034 03D8     		bhi	.L83
 872              	.LVL112:
 873              	.L72:
 338:../system/src/umb_master/umb_master.c **** 		out = UMB_QF_NOT_AVALIABLE;
 339:../system/src/umb_master/umb_master.c **** 	}
 340:../system/src/umb_master/umb_master.c **** 
 341:../system/src/umb_master/umb_master.c **** 	return out;
 342:../system/src/umb_master/umb_master.c **** }
 874              		.loc 1 342 0
 875 0036 10BC     		pop	{r4}
 876              		.cfi_restore 4
 877              		.cfi_def_cfa_offset 0
 878 0038 7047     		bx	lr
 879              	.LVL113:
 880              	.L74:
 319:../system/src/umb_master/umb_master.c **** 	}
 881              		.loc 1 319 0
 882 003a 0120     		movs	r0, #1
 883 003c ECE7     		b	.L70
 884              	.LVL114:
 885              	.L83:
 886              		.cfi_def_cfa_offset 4
 887              		.cfi_offset 4, -4
 338:../system/src/umb_master/umb_master.c **** 		out = UMB_QF_NOT_AVALIABLE;
 888              		.loc 1 338 0
 889 003e 0220     		movs	r0, #2
 890              	.LVL115:
 891 0040 F9E7     		b	.L72
 892              	.LVL116:
 893              	.L78:
 894              		.cfi_def_cfa_offset 0
 895              		.cfi_restore 4
 337:../system/src/umb_master/umb_master.c **** 		out = UMB_QF_NOT_AVALIABLE;
 896              		.loc 1 337 0
 897 0042 5B69     		ldr	r3, [r3, #20]
 898              	.LVL117:
 899 0044 C91A     		subs	r1, r1, r3
 900              	.LVL118:
 901 0046 044B     		ldr	r3, .L85+4
 902 0048 9942     		cmp	r1, r3
 903 004a 00D8     		bhi	.L84
 904              		.loc 1 342 0
 905 004c 7047     		bx	lr
 906              	.L84:
 338:../system/src/umb_master/umb_master.c **** 		out = UMB_QF_NOT_AVALIABLE;
 907              		.loc 1 338 0
 908 004e 0220     		movs	r0, #2
 909              	.LVL119:
 910 0050 7047     		bx	lr
 911              	.L86:
 912 0052 00BF     		.align	2
 913              	.L85:
 914 0054 BF270900 		.word	599999
 915 0058 C0270900 		.word	600000
 916              		.cfi_endproc
 917              	.LFE93:
 919              		.section	.text.umb_construct_status_str,"ax",%progbits
 920              		.align	1
 921              		.global	umb_construct_status_str
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 925              		.fpu softvfp
 927              	umb_construct_status_str:
 928              	.LFB94:
 343:../system/src/umb_master/umb_master.c **** 
 344:../system/src/umb_master/umb_master.c **** void umb_construct_status_str(umb_context_t* ctx, char* out_buffer, uint16_t buffer_size, uint16_t*
 929              		.loc 1 344 0
 930              		.cfi_startproc
 931              		@ args = 4, pretend = 0, frame = 16
 932              		@ frame_needed = 0, uses_anonymous_args = 0
 933              	.LVL120:
 934 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 935              		.cfi_def_cfa_offset 36
 936              		.cfi_offset 4, -36
 937              		.cfi_offset 5, -32
 938              		.cfi_offset 6, -28
 939              		.cfi_offset 7, -24
 940              		.cfi_offset 8, -20
 941              		.cfi_offset 9, -16
 942              		.cfi_offset 10, -12
 943              		.cfi_offset 11, -8
 944              		.cfi_offset 14, -4
 945 0004 89B0     		sub	sp, sp, #36
 946              		.cfi_def_cfa_offset 72
 947              	.LVL121:
 345:../system/src/umb_master/umb_master.c **** 
 346:../system/src/umb_master/umb_master.c **** 	uint32_t string_ln;
 347:../system/src/umb_master/umb_master.c **** 	uint32_t sprintf_out = 0;
 348:../system/src/umb_master/umb_master.c **** 	char local[11];
 349:../system/src/umb_master/umb_master.c **** 
 350:../system/src/umb_master/umb_master.c **** 	// local copy of time_of_last_nok
 351:../system/src/umb_master/umb_master.c **** 	uint32_t local_tln = ctx->time_of_last_nok;
 948              		.loc 1 351 0
 949 0006 C768     		ldr	r7, [r0, #12]
 950              	.LVL122:
 352:../system/src/umb_master/umb_master.c **** 
 353:../system/src/umb_master/umb_master.c **** 	// local copy of time_of_last_comms_timeput
 354:../system/src/umb_master/umb_master.c **** 	uint32_t local_tlct = ctx->time_of_last_comms_timeout;
 951              		.loc 1 354 0
 952 0008 D0F81090 		ldr	r9, [r0, #16]
 953              	.LVL123:
 355:../system/src/umb_master/umb_master.c **** 
 356:../system/src/umb_master/umb_master.c **** 	// check if there is a reason to print the status
 357:../system/src/umb_master/umb_master.c **** 	if (ctx->trigger_status_msg == 0) {
 954              		.loc 1 357 0
 955 000c 90F82A40 		ldrb	r4, [r0, #42]	@ zero_extendqisi2
 956 0010 24B9     		cbnz	r4, .L88
 358:../system/src/umb_master/umb_master.c **** 		*status_string_ln = 0;
 957              		.loc 1 358 0
 958 0012 0022     		movs	r2, #0
 959              	.LVL124:
 960 0014 1A80     		strh	r2, [r3]	@ movhi
 961              	.LVL125:
 962              	.L87:
 359:../system/src/umb_master/umb_master.c **** 
 360:../system/src/umb_master/umb_master.c **** 		return;
 361:../system/src/umb_master/umb_master.c **** 	}
 362:../system/src/umb_master/umb_master.c **** 
 363:../system/src/umb_master/umb_master.c **** 	// clear the flag to omit looping
 364:../system/src/umb_master/umb_master.c **** 	ctx->trigger_status_msg = 0;
 365:../system/src/umb_master/umb_master.c **** 
 366:../system/src/umb_master/umb_master.c **** 	// check if there is enought size in buffer
 367:../system/src/umb_master/umb_master.c **** 	if (buffer_size < 64) {
 368:../system/src/umb_master/umb_master.c **** 		*status_string_ln = 0;
 369:../system/src/umb_master/umb_master.c **** 
 370:../system/src/umb_master/umb_master.c **** 		return;
 371:../system/src/umb_master/umb_master.c **** 	}
 372:../system/src/umb_master/umb_master.c **** 
 373:../system/src/umb_master/umb_master.c **** 	memset(local, 0x00, 11);
 374:../system/src/umb_master/umb_master.c **** 
 375:../system/src/umb_master/umb_master.c **** 	// swap initialization values to zero
 376:../system/src/umb_master/umb_master.c **** 	if (local_tln == 0xFFFFFFFFu)
 377:../system/src/umb_master/umb_master.c **** 		local_tln = 0;
 378:../system/src/umb_master/umb_master.c **** 
 379:../system/src/umb_master/umb_master.c **** 	if (local_tlct == 0xFFFFFFFFu)
 380:../system/src/umb_master/umb_master.c **** 		local_tlct = 0;
 381:../system/src/umb_master/umb_master.c **** 
 382:../system/src/umb_master/umb_master.c **** 	// clearing target buffer
 383:../system/src/umb_master/umb_master.c **** 	for (int i = 0; i < buffer_size; i++)
 384:../system/src/umb_master/umb_master.c **** 		out_buffer[i] = '\0';
 385:../system/src/umb_master/umb_master.c **** 
 386:../system/src/umb_master/umb_master.c **** 	string_ln = snprintf(out_buffer, buffer_size, ">UMB Status: [TIME= 0x%x, TLN= 0x%x, TLCT= 0x%x, LF
 387:../system/src/umb_master/umb_master.c **** 																			(int)master_time,
 388:../system/src/umb_master/umb_master.c **** 																			(int)local_tln,
 389:../system/src/umb_master/umb_master.c **** 																			(int)local_tlct,
 390:../system/src/umb_master/umb_master.c **** 																			(int)ctx->last_fault_channel);
 391:../system/src/umb_master/umb_master.c **** 	for (int i = 0; i < UMB_CONTEXT_ERR_HISTORY_LN; i++ ) {
 392:../system/src/umb_master/umb_master.c **** 		// print the string representation of the error code into the buffer
 393:../system/src/umb_master/umb_master.c **** 		sprintf_out = snprintf(local, 11, "0x%02x, ", ctx->nok_error_codes[i]);
 394:../system/src/umb_master/umb_master.c **** 
 395:../system/src/umb_master/umb_master.c **** 		if (sprintf_out + string_ln < buffer_size) {
 396:../system/src/umb_master/umb_master.c **** 			// rewrite the string value into the main output
 397:../system/src/umb_master/umb_master.c **** 			strcat(out_buffer, local);
 398:../system/src/umb_master/umb_master.c **** 
 399:../system/src/umb_master/umb_master.c **** 			string_ln += sprintf_out;
 400:../system/src/umb_master/umb_master.c **** 		}
 401:../system/src/umb_master/umb_master.c **** 	}
 402:../system/src/umb_master/umb_master.c **** 
 403:../system/src/umb_master/umb_master.c **** 	out_buffer[string_ln - 2] = ']';
 404:../system/src/umb_master/umb_master.c **** 	out_buffer[string_ln - 1] = ']';
 405:../system/src/umb_master/umb_master.c **** 
 406:../system/src/umb_master/umb_master.c **** 	// setting target string lenght
 407:../system/src/umb_master/umb_master.c **** 	*status_string_ln = string_ln;
 408:../system/src/umb_master/umb_master.c **** }
 963              		.loc 1 408 0
 964 0016 09B0     		add	sp, sp, #36
 965              		.cfi_remember_state
 966              		.cfi_def_cfa_offset 36
 967              		@ sp needed
 968 0018 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 969              	.LVL126:
 970              	.L88:
 971              		.cfi_restore_state
 364:../system/src/umb_master/umb_master.c **** 
 972              		.loc 1 364 0
 973 001c 0024     		movs	r4, #0
 974 001e 80F82A40 		strb	r4, [r0, #42]
 367:../system/src/umb_master/umb_master.c **** 		*status_string_ln = 0;
 975              		.loc 1 367 0
 976 0022 3F2A     		cmp	r2, #63
 977 0024 01D8     		bhi	.L90
 368:../system/src/umb_master/umb_master.c **** 
 978              		.loc 1 368 0
 979 0026 1C80     		strh	r4, [r3]	@ movhi
 370:../system/src/umb_master/umb_master.c **** 	}
 980              		.loc 1 370 0
 981 0028 F5E7     		b	.L87
 982              	.L90:
 983 002a 9B46     		mov	fp, r3
 984 002c 1546     		mov	r5, r2
 985 002e 0E46     		mov	r6, r1
 986 0030 0446     		mov	r4, r0
 373:../system/src/umb_master/umb_master.c **** 
 987              		.loc 1 373 0
 988 0032 0B22     		movs	r2, #11
 989              	.LVL127:
 990 0034 0021     		movs	r1, #0
 991              	.LVL128:
 992 0036 05A8     		add	r0, sp, #20
 993              	.LVL129:
 994 0038 FFF7FEFF 		bl	memset
 995              	.LVL130:
 376:../system/src/umb_master/umb_master.c **** 		local_tln = 0;
 996              		.loc 1 376 0
 997 003c B7F1FF3F 		cmp	r7, #-1
 998 0040 04D0     		beq	.L102
 999              	.LVL131:
 1000              	.L91:
 379:../system/src/umb_master/umb_master.c **** 		local_tlct = 0;
 1001              		.loc 1 379 0
 1002 0042 B9F1FF3F 		cmp	r9, #-1
 1003 0046 03D0     		beq	.L103
 1004              	.LVL132:
 1005              	.L92:
 1006              	.LBB11:
 383:../system/src/umb_master/umb_master.c **** 		out_buffer[i] = '\0';
 1007              		.loc 1 383 0
 1008 0048 0020     		movs	r0, #0
 1009 004a 07E0     		b	.L93
 1010              	.LVL133:
 1011              	.L102:
 1012              	.LBE11:
 377:../system/src/umb_master/umb_master.c **** 
 1013              		.loc 1 377 0
 1014 004c 0027     		movs	r7, #0
 1015              	.LVL134:
 1016 004e F8E7     		b	.L91
 1017              	.LVL135:
 1018              	.L103:
 380:../system/src/umb_master/umb_master.c **** 
 1019              		.loc 1 380 0
 1020 0050 4FF00009 		mov	r9, #0
 1021              	.LVL136:
 1022 0054 F8E7     		b	.L92
 1023              	.LVL137:
 1024              	.L94:
 1025              	.LBB12:
 384:../system/src/umb_master/umb_master.c **** 
 1026              		.loc 1 384 0 discriminator 3
 1027 0056 0023     		movs	r3, #0
 1028 0058 3354     		strb	r3, [r6, r0]
 383:../system/src/umb_master/umb_master.c **** 		out_buffer[i] = '\0';
 1029              		.loc 1 383 0 discriminator 3
 1030 005a 0130     		adds	r0, r0, #1
 1031              	.LVL138:
 1032              	.L93:
 383:../system/src/umb_master/umb_master.c **** 		out_buffer[i] = '\0';
 1033              		.loc 1 383 0 is_stmt 0 discriminator 1
 1034 005c 8542     		cmp	r5, r0
 1035 005e FADC     		bgt	.L94
 1036              	.LBE12:
 386:../system/src/umb_master/umb_master.c **** 																			(int)master_time,
 1037              		.loc 1 386 0 is_stmt 1
 1038 0060 AA46     		mov	r10, r5
 390:../system/src/umb_master/umb_master.c **** 	for (int i = 0; i < UMB_CONTEXT_ERR_HISTORY_LN; i++ ) {
 1039              		.loc 1 390 0
 1040 0062 2389     		ldrh	r3, [r4, #8]
 386:../system/src/umb_master/umb_master.c **** 																			(int)master_time,
 1041              		.loc 1 386 0
 1042 0064 0293     		str	r3, [sp, #8]
 1043 0066 CDF80490 		str	r9, [sp, #4]
 1044 006a 0097     		str	r7, [sp]
 1045 006c 129B     		ldr	r3, [sp, #72]
 1046 006e 134A     		ldr	r2, .L105
 1047 0070 2946     		mov	r1, r5
 1048 0072 3046     		mov	r0, r6
 1049              	.LVL139:
 1050 0074 FFF7FEFF 		bl	snprintf
 1051              	.LVL140:
 1052 0078 8046     		mov	r8, r0
 1053              	.LVL141:
 1054              	.LBB13:
 391:../system/src/umb_master/umb_master.c **** 		// print the string representation of the error code into the buffer
 1055              		.loc 1 391 0
 1056 007a 0025     		movs	r5, #0
 1057 007c 00E0     		b	.L95
 1058              	.LVL142:
 1059              	.L96:
 391:../system/src/umb_master/umb_master.c **** 		// print the string representation of the error code into the buffer
 1060              		.loc 1 391 0 is_stmt 0 discriminator 2
 1061 007e 0135     		adds	r5, r5, #1
 1062              	.LVL143:
 1063              	.L95:
 391:../system/src/umb_master/umb_master.c **** 		// print the string representation of the error code into the buffer
 1064              		.loc 1 391 0 discriminator 1
 1065 0080 032D     		cmp	r5, #3
 1066 0082 10DC     		bgt	.L104
 393:../system/src/umb_master/umb_master.c **** 
 1067              		.loc 1 393 0 is_stmt 1
 1068 0084 6319     		adds	r3, r4, r5
 1069 0086 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1070 0088 0D4A     		ldr	r2, .L105+4
 1071 008a 0B21     		movs	r1, #11
 1072 008c 05A8     		add	r0, sp, #20
 1073 008e FFF7FEFF 		bl	snprintf
 1074              	.LVL144:
 395:../system/src/umb_master/umb_master.c **** 			// rewrite the string value into the main output
 1075              		.loc 1 395 0
 1076 0092 08EB0009 		add	r9, r8, r0
 1077 0096 CA45     		cmp	r10, r9
 1078 0098 F1D9     		bls	.L96
 397:../system/src/umb_master/umb_master.c **** 
 1079              		.loc 1 397 0
 1080 009a 05A9     		add	r1, sp, #20
 1081 009c 3046     		mov	r0, r6
 1082              	.LVL145:
 1083 009e FFF7FEFF 		bl	strcat
 1084              	.LVL146:
 399:../system/src/umb_master/umb_master.c **** 		}
 1085              		.loc 1 399 0
 1086 00a2 C846     		mov	r8, r9
 1087 00a4 EBE7     		b	.L96
 1088              	.LVL147:
 1089              	.L104:
 1090              	.LBE13:
 403:../system/src/umb_master/umb_master.c **** 	out_buffer[string_ln - 1] = ']';
 1091              		.loc 1 403 0
 1092 00a6 A8F10202 		sub	r2, r8, #2
 1093 00aa 5D23     		movs	r3, #93
 1094 00ac B354     		strb	r3, [r6, r2]
 404:../system/src/umb_master/umb_master.c **** 
 1095              		.loc 1 404 0
 1096 00ae 08F1FF32 		add	r2, r8, #-1
 1097 00b2 B354     		strb	r3, [r6, r2]
 407:../system/src/umb_master/umb_master.c **** }
 1098              		.loc 1 407 0
 1099 00b4 ABF80080 		strh	r8, [fp]	@ movhi
 1100 00b8 ADE7     		b	.L87
 1101              	.L106:
 1102 00ba 00BF     		.align	2
 1103              	.L105:
 1104 00bc 00000000 		.word	.LC0
 1105 00c0 44000000 		.word	.LC1
 1106              		.cfi_endproc
 1107              	.LFE94:
 1109              		.section	.text.umb_clear_error_history,"ax",%progbits
 1110              		.align	1
 1111              		.global	umb_clear_error_history
 1112              		.syntax unified
 1113              		.thumb
 1114              		.thumb_func
 1115              		.fpu softvfp
 1117              	umb_clear_error_history:
 1118              	.LFB95:
 409:../system/src/umb_master/umb_master.c **** 
 410:../system/src/umb_master/umb_master.c **** void umb_clear_error_history(umb_context_t* ctx) {
 1119              		.loc 1 410 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 0, uses_anonymous_args = 0
 1123              		@ link register save eliminated.
 1124              	.LVL148:
 411:../system/src/umb_master/umb_master.c **** 	ctx->last_fault_channel = 0;
 1125              		.loc 1 411 0
 1126 0000 0023     		movs	r3, #0
 1127 0002 0381     		strh	r3, [r0, #8]	@ movhi
 1128              	.LVL149:
 1129              	.LBB14:
 412:../system/src/umb_master/umb_master.c **** 
 413:../system/src/umb_master/umb_master.c **** 	for (int i = 0; i < UMB_CONTEXT_ERR_HISTORY_LN; i++) {
 1130              		.loc 1 413 0
 1131 0004 03E0     		b	.L108
 1132              	.LVL150:
 1133              	.L109:
 414:../system/src/umb_master/umb_master.c **** 		ctx->nok_error_codes[i] = 0;
 1134              		.loc 1 414 0 discriminator 3
 1135 0006 C218     		adds	r2, r0, r3
 1136 0008 0021     		movs	r1, #0
 1137 000a 9170     		strb	r1, [r2, #2]
 413:../system/src/umb_master/umb_master.c **** 		ctx->nok_error_codes[i] = 0;
 1138              		.loc 1 413 0 discriminator 3
 1139 000c 0133     		adds	r3, r3, #1
 1140              	.LVL151:
 1141              	.L108:
 413:../system/src/umb_master/umb_master.c **** 		ctx->nok_error_codes[i] = 0;
 1142              		.loc 1 413 0 is_stmt 0 discriminator 1
 1143 000e 032B     		cmp	r3, #3
 1144 0010 F9DD     		ble	.L109
 1145              	.LBE14:
 415:../system/src/umb_master/umb_master.c **** 	}
 416:../system/src/umb_master/umb_master.c **** 
 417:../system/src/umb_master/umb_master.c **** 	ctx->trigger_status_msg = 0;
 1146              		.loc 1 417 0 is_stmt 1
 1147 0012 0023     		movs	r3, #0
 1148              	.LVL152:
 1149 0014 80F82A30 		strb	r3, [r0, #42]
 418:../system/src/umb_master/umb_master.c **** }
 1150              		.loc 1 418 0
 1151 0018 7047     		bx	lr
 1152              		.cfi_endproc
 1153              	.LFE95:
 1155              		.section	.text.umb_get_windspeed,"ax",%progbits
 1156              		.align	1
 1157              		.global	umb_get_windspeed
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1161              		.fpu softvfp
 1163              	umb_get_windspeed:
 1164              	.LFB96:
 419:../system/src/umb_master/umb_master.c **** 
 420:../system/src/umb_master/umb_master.c **** 
 421:../system/src/umb_master/umb_master.c **** uint16_t umb_get_windspeed(const config_data_umb_t * const config_umb) {
 1165              		.loc 1 421 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 1169              		@ link register save eliminated.
 1170              	.LVL153:
 1171              	.LBB15:
 422:../system/src/umb_master/umb_master.c **** 
 423:../system/src/umb_master/umb_master.c **** 	uint16_t out = 0;
 424:../system/src/umb_master/umb_master.c **** 
 425:../system/src/umb_master/umb_master.c **** 	for (int i = 0; i < UMB_CHANNELS_STORAGE_CAPAC; i++) {
 1172              		.loc 1 425 0
 1173 0000 0023     		movs	r3, #0
 1174              	.LVL154:
 1175              	.L111:
 1176              		.loc 1 425 0 is_stmt 0 discriminator 1
 1177 0002 052B     		cmp	r3, #5
 1178 0004 0FDC     		bgt	.L115
 426:../system/src/umb_master/umb_master.c **** 		if (rte_wx_umb_channel_values[i][0] == (int16_t)config_umb->channel_windspeed) {
 1179              		.loc 1 426 0 is_stmt 1
 1180 0006 094A     		ldr	r2, .L117
 1181 0008 32F92310 		ldrsh	r1, [r2, r3, lsl #2]
 1182 000c B0F90420 		ldrsh	r2, [r0, #4]
 1183 0010 9142     		cmp	r1, r2
 1184 0012 01D0     		beq	.L116
 425:../system/src/umb_master/umb_master.c **** 		if (rte_wx_umb_channel_values[i][0] == (int16_t)config_umb->channel_windspeed) {
 1185              		.loc 1 425 0 discriminator 2
 1186 0014 0133     		adds	r3, r3, #1
 1187              	.LVL155:
 1188 0016 F4E7     		b	.L111
 1189              	.L116:
 427:../system/src/umb_master/umb_master.c **** 			out = (uint16_t)rte_wx_umb_channel_values[i][1];
 1190              		.loc 1 427 0
 1191 0018 044A     		ldr	r2, .L117
 1192 001a 02EB8303 		add	r3, r2, r3, lsl #2
 1193              	.LVL156:
 1194 001e B3F90200 		ldrsh	r0, [r3, #2]
 1195              	.LVL157:
 1196 0022 80B2     		uxth	r0, r0
 1197              	.LVL158:
 428:../system/src/umb_master/umb_master.c **** 			break;
 1198              		.loc 1 428 0
 1199 0024 7047     		bx	lr
 1200              	.LVL159:
 1201              	.L115:
 1202              	.LBE15:
 423:../system/src/umb_master/umb_master.c **** 
 1203              		.loc 1 423 0
 1204 0026 0020     		movs	r0, #0
 1205              	.LVL160:
 429:../system/src/umb_master/umb_master.c **** 		}
 430:../system/src/umb_master/umb_master.c **** 	}
 431:../system/src/umb_master/umb_master.c **** 
 432:../system/src/umb_master/umb_master.c **** 	return out;
 433:../system/src/umb_master/umb_master.c **** }
 1206              		.loc 1 433 0
 1207 0028 7047     		bx	lr
 1208              	.L118:
 1209 002a 00BF     		.align	2
 1210              	.L117:
 1211 002c 00000000 		.word	rte_wx_umb_channel_values
 1212              		.cfi_endproc
 1213              	.LFE96:
 1215              		.section	.text.umb_get_windgusts,"ax",%progbits
 1216              		.align	1
 1217              		.global	umb_get_windgusts
 1218              		.syntax unified
 1219              		.thumb
 1220              		.thumb_func
 1221              		.fpu softvfp
 1223              	umb_get_windgusts:
 1224              	.LFB97:
 434:../system/src/umb_master/umb_master.c **** 
 435:../system/src/umb_master/umb_master.c **** uint16_t umb_get_windgusts(const config_data_umb_t * const config_umb) {
 1225              		.loc 1 435 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 0, uses_anonymous_args = 0
 1229              		@ link register save eliminated.
 1230              	.LVL161:
 1231              	.LBB16:
 436:../system/src/umb_master/umb_master.c **** 	uint16_t out = 0;
 437:../system/src/umb_master/umb_master.c **** 
 438:../system/src/umb_master/umb_master.c **** 	for (int i = 0; i < UMB_CHANNELS_STORAGE_CAPAC; i++) {
 1232              		.loc 1 438 0
 1233 0000 0023     		movs	r3, #0
 1234              	.LVL162:
 1235              	.L120:
 1236              		.loc 1 438 0 is_stmt 0 discriminator 1
 1237 0002 052B     		cmp	r3, #5
 1238 0004 0FDC     		bgt	.L124
 439:../system/src/umb_master/umb_master.c **** 		if (rte_wx_umb_channel_values[i][0] == (int16_t)config_umb->channel_wingsusts) {
 1239              		.loc 1 439 0 is_stmt 1
 1240 0006 094A     		ldr	r2, .L126
 1241 0008 32F92310 		ldrsh	r1, [r2, r3, lsl #2]
 1242 000c B0F90620 		ldrsh	r2, [r0, #6]
 1243 0010 9142     		cmp	r1, r2
 1244 0012 01D0     		beq	.L125
 438:../system/src/umb_master/umb_master.c **** 		if (rte_wx_umb_channel_values[i][0] == (int16_t)config_umb->channel_wingsusts) {
 1245              		.loc 1 438 0 discriminator 2
 1246 0014 0133     		adds	r3, r3, #1
 1247              	.LVL163:
 1248 0016 F4E7     		b	.L120
 1249              	.L125:
 440:../system/src/umb_master/umb_master.c **** 			out = (uint16_t)rte_wx_umb_channel_values[i][1];
 1250              		.loc 1 440 0
 1251 0018 044A     		ldr	r2, .L126
 1252 001a 02EB8303 		add	r3, r2, r3, lsl #2
 1253              	.LVL164:
 1254 001e B3F90200 		ldrsh	r0, [r3, #2]
 1255              	.LVL165:
 1256 0022 80B2     		uxth	r0, r0
 1257              	.LVL166:
 441:../system/src/umb_master/umb_master.c **** 			break;
 1258              		.loc 1 441 0
 1259 0024 7047     		bx	lr
 1260              	.LVL167:
 1261              	.L124:
 1262              	.LBE16:
 436:../system/src/umb_master/umb_master.c **** 
 1263              		.loc 1 436 0
 1264 0026 0020     		movs	r0, #0
 1265              	.LVL168:
 442:../system/src/umb_master/umb_master.c **** 		}
 443:../system/src/umb_master/umb_master.c **** 	}
 444:../system/src/umb_master/umb_master.c **** 
 445:../system/src/umb_master/umb_master.c **** 	return out;
 446:../system/src/umb_master/umb_master.c **** }
 1266              		.loc 1 446 0
 1267 0028 7047     		bx	lr
 1268              	.L127:
 1269 002a 00BF     		.align	2
 1270              	.L126:
 1271 002c 00000000 		.word	rte_wx_umb_channel_values
 1272              		.cfi_endproc
 1273              	.LFE97:
 1275              		.section	.text.umb_get_winddirection,"ax",%progbits
 1276              		.align	1
 1277              		.global	umb_get_winddirection
 1278              		.syntax unified
 1279              		.thumb
 1280              		.thumb_func
 1281              		.fpu softvfp
 1283              	umb_get_winddirection:
 1284              	.LFB98:
 447:../system/src/umb_master/umb_master.c **** 
 448:../system/src/umb_master/umb_master.c **** int16_t umb_get_winddirection(const config_data_umb_t * const config_umb) {
 1285              		.loc 1 448 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 0
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289              		@ link register save eliminated.
 1290              	.LVL169:
 1291              	.LBB17:
 449:../system/src/umb_master/umb_master.c **** 	int16_t out = 0;
 450:../system/src/umb_master/umb_master.c **** 
 451:../system/src/umb_master/umb_master.c **** 	for (int i = 0; i < UMB_CHANNELS_STORAGE_CAPAC; i++) {
 1292              		.loc 1 451 0
 1293 0000 0023     		movs	r3, #0
 1294              	.LVL170:
 1295              	.L129:
 1296              		.loc 1 451 0 is_stmt 0 discriminator 1
 1297 0002 052B     		cmp	r3, #5
 1298 0004 0EDC     		bgt	.L133
 452:../system/src/umb_master/umb_master.c **** 		if (rte_wx_umb_channel_values[i][0] == (int16_t)config_umb->channel_winddirection) {
 1299              		.loc 1 452 0 is_stmt 1
 1300 0006 0C4A     		ldr	r2, .L135
 1301 0008 32F92310 		ldrsh	r1, [r2, r3, lsl #2]
 1302 000c B0F90820 		ldrsh	r2, [r0, #8]
 1303 0010 9142     		cmp	r1, r2
 1304 0012 01D0     		beq	.L134
 451:../system/src/umb_master/umb_master.c **** 		if (rte_wx_umb_channel_values[i][0] == (int16_t)config_umb->channel_winddirection) {
 1305              		.loc 1 451 0 discriminator 2
 1306 0014 0133     		adds	r3, r3, #1
 1307              	.LVL171:
 1308 0016 F4E7     		b	.L129
 1309              	.L134:
 453:../system/src/umb_master/umb_master.c **** 			out = (int16_t)rte_wx_umb_channel_values[i][1];
 1310              		.loc 1 453 0
 1311 0018 074A     		ldr	r2, .L135
 1312 001a 02EB8303 		add	r3, r2, r3, lsl #2
 1313              	.LVL172:
 1314 001e B3F90230 		ldrsh	r3, [r3, #2]
 1315              	.LVL173:
 454:../system/src/umb_master/umb_master.c **** 			break;
 1316              		.loc 1 454 0
 1317 0022 00E0     		b	.L131
 1318              	.LVL174:
 1319              	.L133:
 1320              	.LBE17:
 449:../system/src/umb_master/umb_master.c **** 
 1321              		.loc 1 449 0
 1322 0024 0023     		movs	r3, #0
 1323              	.LVL175:
 1324              	.L131:
 455:../system/src/umb_master/umb_master.c **** 		}
 456:../system/src/umb_master/umb_master.c **** 	}
 457:../system/src/umb_master/umb_master.c **** 	out /= 10;
 1325              		.loc 1 457 0
 1326 0026 0548     		ldr	r0, .L135+4
 1327              	.LVL176:
 1328 0028 80FB0320 		smull	r2, r0, r0, r3
 1329 002c DB17     		asrs	r3, r3, #31
 1330              	.LVL177:
 1331 002e C3EBA000 		rsb	r0, r3, r0, asr #2
 1332              	.LVL178:
 458:../system/src/umb_master/umb_master.c **** 	return out;
 459:../system/src/umb_master/umb_master.c **** }
 1333              		.loc 1 459 0
 1334 0032 00B2     		sxth	r0, r0
 1335 0034 7047     		bx	lr
 1336              	.L136:
 1337 0036 00BF     		.align	2
 1338              	.L135:
 1339 0038 00000000 		.word	rte_wx_umb_channel_values
 1340 003c 67666666 		.word	1717986919
 1341              		.cfi_endproc
 1342              	.LFE98:
 1344              		.global	__aeabi_i2f
 1345              		.global	__aeabi_fmul
 1346              		.section	.text.umb_get_temperature,"ax",%progbits
 1347              		.align	1
 1348              		.global	umb_get_temperature
 1349              		.syntax unified
 1350              		.thumb
 1351              		.thumb_func
 1352              		.fpu softvfp
 1354              	umb_get_temperature:
 1355              	.LFB99:
 460:../system/src/umb_master/umb_master.c **** 
 461:../system/src/umb_master/umb_master.c **** float umb_get_temperature(const config_data_umb_t * const config_umb) {
 1356              		.loc 1 461 0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 0
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
 1360              	.LVL179:
 1361 0000 08B5     		push	{r3, lr}
 1362              		.cfi_def_cfa_offset 8
 1363              		.cfi_offset 3, -8
 1364              		.cfi_offset 14, -4
 1365              	.LVL180:
 1366              	.LBB18:
 462:../system/src/umb_master/umb_master.c **** 	float out = 0.0f;
 463:../system/src/umb_master/umb_master.c **** 
 464:../system/src/umb_master/umb_master.c **** 	for (int i = 0; i < UMB_CHANNELS_STORAGE_CAPAC; i++) {
 1367              		.loc 1 464 0
 1368 0002 0023     		movs	r3, #0
 1369              	.LVL181:
 1370              	.L138:
 1371              		.loc 1 464 0 is_stmt 0 discriminator 1
 1372 0004 052B     		cmp	r3, #5
 1373 0006 13DC     		bgt	.L143
 465:../system/src/umb_master/umb_master.c **** 		if (rte_wx_umb_channel_values[i][0] == (int16_t)config_umb->channel_temperature) {
 1374              		.loc 1 465 0 is_stmt 1
 1375 0008 0A4A     		ldr	r2, .L145
 1376 000a 32F92310 		ldrsh	r1, [r2, r3, lsl #2]
 1377 000e B0F90A20 		ldrsh	r2, [r0, #10]
 1378 0012 9142     		cmp	r1, r2
 1379 0014 01D0     		beq	.L144
 464:../system/src/umb_master/umb_master.c **** 		if (rte_wx_umb_channel_values[i][0] == (int16_t)config_umb->channel_temperature) {
 1380              		.loc 1 464 0 discriminator 2
 1381 0016 0133     		adds	r3, r3, #1
 1382              	.LVL182:
 1383 0018 F4E7     		b	.L138
 1384              	.L144:
 466:../system/src/umb_master/umb_master.c **** 			out = (float)rte_wx_umb_channel_values[i][1] * 0.1f;
 1385              		.loc 1 466 0
 1386 001a 064A     		ldr	r2, .L145
 1387 001c 02EB8303 		add	r3, r2, r3, lsl #2
 1388              	.LVL183:
 1389 0020 B3F90200 		ldrsh	r0, [r3, #2]
 1390              	.LVL184:
 1391 0024 FFF7FEFF 		bl	__aeabi_i2f
 1392              	.LVL185:
 1393 0028 0349     		ldr	r1, .L145+4
 1394 002a FFF7FEFF 		bl	__aeabi_fmul
 1395              	.LVL186:
 467:../system/src/umb_master/umb_master.c **** 			break;
 1396              		.loc 1 467 0
 1397 002e 00E0     		b	.L137
 1398              	.LVL187:
 1399              	.L143:
 1400              	.LBE18:
 462:../system/src/umb_master/umb_master.c **** 
 1401              		.loc 1 462 0
 1402 0030 0020     		movs	r0, #0
 1403              	.LVL188:
 1404              	.L137:
 468:../system/src/umb_master/umb_master.c **** 		}
 469:../system/src/umb_master/umb_master.c **** 	}
 470:../system/src/umb_master/umb_master.c **** 
 471:../system/src/umb_master/umb_master.c **** 	return out;
 472:../system/src/umb_master/umb_master.c **** }
 1405              		.loc 1 472 0
 1406 0032 08BD     		pop	{r3, pc}
 1407              	.L146:
 1408              		.align	2
 1409              	.L145:
 1410 0034 00000000 		.word	rte_wx_umb_channel_values
 1411 0038 CDCCCC3D 		.word	1036831949
 1412              		.cfi_endproc
 1413              	.LFE99:
 1415              		.section	.text.umb_get_qnh,"ax",%progbits
 1416              		.align	1
 1417              		.global	umb_get_qnh
 1418              		.syntax unified
 1419              		.thumb
 1420              		.thumb_func
 1421              		.fpu softvfp
 1423              	umb_get_qnh:
 1424              	.LFB100:
 473:../system/src/umb_master/umb_master.c **** 
 474:../system/src/umb_master/umb_master.c **** float umb_get_qnh(const config_data_umb_t * const config_umb) {
 1425              		.loc 1 474 0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 0
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429              	.LVL189:
 1430 0000 08B5     		push	{r3, lr}
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 3, -8
 1433              		.cfi_offset 14, -4
 1434              	.LVL190:
 1435              	.LBB19:
 475:../system/src/umb_master/umb_master.c **** 	float out = 0;
 476:../system/src/umb_master/umb_master.c **** 
 477:../system/src/umb_master/umb_master.c **** 	for (int i = 0; i < UMB_CHANNELS_STORAGE_CAPAC; i++) {
 1436              		.loc 1 477 0
 1437 0002 0023     		movs	r3, #0
 1438              	.LVL191:
 1439              	.L148:
 1440              		.loc 1 477 0 is_stmt 0 discriminator 1
 1441 0004 052B     		cmp	r3, #5
 1442 0006 13DC     		bgt	.L153
 478:../system/src/umb_master/umb_master.c **** 		if (rte_wx_umb_channel_values[i][0] == (int16_t)config_umb->channel_qnh) {
 1443              		.loc 1 478 0 is_stmt 1
 1444 0008 0A4A     		ldr	r2, .L155
 1445 000a 32F92310 		ldrsh	r1, [r2, r3, lsl #2]
 1446 000e B0F90C20 		ldrsh	r2, [r0, #12]
 1447 0012 9142     		cmp	r1, r2
 1448 0014 01D0     		beq	.L154
 477:../system/src/umb_master/umb_master.c **** 		if (rte_wx_umb_channel_values[i][0] == (int16_t)config_umb->channel_qnh) {
 1449              		.loc 1 477 0 discriminator 2
 1450 0016 0133     		adds	r3, r3, #1
 1451              	.LVL192:
 1452 0018 F4E7     		b	.L148
 1453              	.L154:
 479:../system/src/umb_master/umb_master.c **** 			out = (float)rte_wx_umb_channel_values[i][1] * 0.1f;
 1454              		.loc 1 479 0
 1455 001a 064A     		ldr	r2, .L155
 1456 001c 02EB8303 		add	r3, r2, r3, lsl #2
 1457              	.LVL193:
 1458 0020 B3F90200 		ldrsh	r0, [r3, #2]
 1459              	.LVL194:
 1460 0024 FFF7FEFF 		bl	__aeabi_i2f
 1461              	.LVL195:
 1462 0028 0349     		ldr	r1, .L155+4
 1463 002a FFF7FEFF 		bl	__aeabi_fmul
 1464              	.LVL196:
 480:../system/src/umb_master/umb_master.c **** 			break;
 1465              		.loc 1 480 0
 1466 002e 00E0     		b	.L147
 1467              	.LVL197:
 1468              	.L153:
 1469              	.LBE19:
 475:../system/src/umb_master/umb_master.c **** 
 1470              		.loc 1 475 0
 1471 0030 0020     		movs	r0, #0
 1472              	.LVL198:
 1473              	.L147:
 481:../system/src/umb_master/umb_master.c **** 		}
 482:../system/src/umb_master/umb_master.c **** 	}
 483:../system/src/umb_master/umb_master.c **** 
 484:../system/src/umb_master/umb_master.c **** 	return out;
 485:../system/src/umb_master/umb_master.c **** }
 1474              		.loc 1 485 0
 1475 0032 08BD     		pop	{r3, pc}
 1476              	.L156:
 1477              		.align	2
 1478              	.L155:
 1479 0034 00000000 		.word	rte_wx_umb_channel_values
 1480 0038 CDCCCC3D 		.word	1036831949
 1481              		.cfi_endproc
 1482              	.LFE100:
 1484              		.section	.rodata.umb_construct_status_str.str1.4,"aMS",%progbits,1
 1485              		.align	2
 1486              	.LC0:
 1487 0000 3E554D42 		.ascii	">UMB Status: [TIME= 0x%x, TLN= 0x%x, TLCT= 0x%x, LF"
 1487      20537461 
 1487      7475733A 
 1487      205B5449 
 1487      4D453D20 
 1488 0033 433D2025 		.ascii	"C= %d ERRS= [\000"
 1488      64204552 
 1488      52533D20 
 1488      5B00
 1489 0041 000000   		.space	3
 1490              	.LC1:
 1491 0044 30782530 		.ascii	"0x%02x, \000"
 1491      32782C20 
 1491      00
 1492              		.text
 1493              	.Letext0:
 1494              		.file 2 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_
 1495              		.file 3 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1496              		.file 4 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1497              		.file 5 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 1498              		.file 6 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1499              		.file 7 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1500              		.file 8 "../system/include/umb_master/../umb_master/umb_retval_t.h"
 1501              		.file 9 "../system/include/umb_master/../umb_master/umb_state_t.h"
 1502              		.file 10 "../system/include/cmsis/core_cm3.h"
 1503              		.file 11 "../system/include/cmsis/system_stm32f10x.h"
 1504              		.file 12 "../system/include/cmsis/stm32f10x.h"
 1505              		.file 13 "../system/include/drivers/serial.h"
 1506              		.file 14 "../system/include/umb_master/../umb_master/umb_context_t.h"
 1507              		.file 15 "../system/include/umb_master/../umb_master/umb_frame_t.h"
 1508              		.file 16 "../include/config_data.h"
 1509              		.file 17 "../system/include/umb_master/umb_call_reason.h"
 1510              		.file 18 "../system/include/umb_master/umb_qf_t.h"
 1511              		.file 19 "../system/include/drivers/dallas.h"
 1512              		.file 20 "../system/include/drivers/analog_anemometer.h"
 1513              		.file 21 "../system/include/davis_vantage/davis_loop_t.h"
 1514              		.file 22 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 1515              		.file 23 "../system/include/drivers/ms5611.h"
 1516              		.file 24 "../system/include/drivers/bme280.h"
 1517              		.file 25 "../include/rte_wx.h"
 1518              		.file 26 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdio.h"
 1519              		.file 27 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
 1520              		.file 28 "../system/include/umb_master/umb_0x23_offline_data.h"
 1521              		.file 29 "../system/include/umb_master/umb_0x26_status.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 umb_master.c
     /tmp/ccsZgLYI.s:16     .text.umb_master_init:0000000000000000 $t
     /tmp/ccsZgLYI.s:23     .text.umb_master_init:0000000000000000 umb_master_init
     /tmp/ccsZgLYI.s:115    .text.umb_master_init:0000000000000058 $d
     /tmp/ccsZgLYI.s:120    .text.umb_calc_crc:0000000000000000 $t
     /tmp/ccsZgLYI.s:127    .text.umb_calc_crc:0000000000000000 umb_calc_crc
     /tmp/ccsZgLYI.s:173    .text.umb_parse_serial_buffer_to_frame:0000000000000000 $t
     /tmp/ccsZgLYI.s:180    .text.umb_parse_serial_buffer_to_frame:0000000000000000 umb_parse_serial_buffer_to_frame
     /tmp/ccsZgLYI.s:368    .text.umb_parse_frame_to_serial_buffer:0000000000000000 $t
     /tmp/ccsZgLYI.s:375    .text.umb_parse_frame_to_serial_buffer:0000000000000000 umb_parse_frame_to_serial_buffer
     /tmp/ccsZgLYI.s:537    .text.umb_master_callback:0000000000000000 $t
     /tmp/ccsZgLYI.s:544    .text.umb_master_callback:0000000000000000 umb_master_callback
     /tmp/ccsZgLYI.s:612    .text.umb_pooling_handler:0000000000000000 $t
     /tmp/ccsZgLYI.s:619    .text.umb_pooling_handler:0000000000000000 umb_pooling_handler
     /tmp/ccsZgLYI.s:649    .text.umb_pooling_handler:000000000000001a $d
     /tmp/ccsZgLYI.s:655    .text.umb_pooling_handler:0000000000000020 $t
     /tmp/ccsZgLYI.s:806    .text.umb_pooling_handler:00000000000000d8 $d
     /tmp/ccsZgLYI.s:811    .text.umb_get_current_qf:0000000000000000 $t
     /tmp/ccsZgLYI.s:818    .text.umb_get_current_qf:0000000000000000 umb_get_current_qf
     /tmp/ccsZgLYI.s:914    .text.umb_get_current_qf:0000000000000054 $d
     /tmp/ccsZgLYI.s:920    .text.umb_construct_status_str:0000000000000000 $t
     /tmp/ccsZgLYI.s:927    .text.umb_construct_status_str:0000000000000000 umb_construct_status_str
     /tmp/ccsZgLYI.s:1104   .text.umb_construct_status_str:00000000000000bc $d
     /tmp/ccsZgLYI.s:1110   .text.umb_clear_error_history:0000000000000000 $t
     /tmp/ccsZgLYI.s:1117   .text.umb_clear_error_history:0000000000000000 umb_clear_error_history
     /tmp/ccsZgLYI.s:1156   .text.umb_get_windspeed:0000000000000000 $t
     /tmp/ccsZgLYI.s:1163   .text.umb_get_windspeed:0000000000000000 umb_get_windspeed
     /tmp/ccsZgLYI.s:1211   .text.umb_get_windspeed:000000000000002c $d
     /tmp/ccsZgLYI.s:1216   .text.umb_get_windgusts:0000000000000000 $t
     /tmp/ccsZgLYI.s:1223   .text.umb_get_windgusts:0000000000000000 umb_get_windgusts
     /tmp/ccsZgLYI.s:1271   .text.umb_get_windgusts:000000000000002c $d
     /tmp/ccsZgLYI.s:1276   .text.umb_get_winddirection:0000000000000000 $t
     /tmp/ccsZgLYI.s:1283   .text.umb_get_winddirection:0000000000000000 umb_get_winddirection
     /tmp/ccsZgLYI.s:1339   .text.umb_get_winddirection:0000000000000038 $d
     /tmp/ccsZgLYI.s:1347   .text.umb_get_temperature:0000000000000000 $t
     /tmp/ccsZgLYI.s:1354   .text.umb_get_temperature:0000000000000000 umb_get_temperature
     /tmp/ccsZgLYI.s:1410   .text.umb_get_temperature:0000000000000034 $d
     /tmp/ccsZgLYI.s:1416   .text.umb_get_qnh:0000000000000000 $t
     /tmp/ccsZgLYI.s:1423   .text.umb_get_qnh:0000000000000000 umb_get_qnh
     /tmp/ccsZgLYI.s:1479   .text.umb_get_qnh:0000000000000034 $d
     /tmp/ccsZgLYI.s:1485   .rodata.umb_construct_status_str.str1.4:0000000000000000 $d
                           .group:0000000000000000 wm4.0.879aed89c359f5856fe69c61b3590d34
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.umb_defines.h.9.77e79b84cd2dd9a74204aaeb1ca9d6be
                           .group:0000000000000000 wm4.stm32f10x.h.51.c58ea26c5150470d52680f0bbaa7049c
                           .group:0000000000000000 wm4.core_cm3.h.42.c33bb1302bf53de0580fb6140a46f2eb
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.183.ecfd9c316d6f10b73648f6e579b02c8b
                           .group:0000000000000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:0000000000000000 wm4.stm32f10x_can.h.25.e5e43f6bbc8fc7c8aa30ef2bc5610ced
                           .group:0000000000000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:0000000000000000 wm4.stm32f10x_dac.h.25.d946244edf026333094657d55ea894b8
                           .group:0000000000000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:0000000000000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:0000000000000000 wm4.stm32f10x_exti.h.25.f52c69aad7d1994be5b2c4e2b8f4c595
                           .group:0000000000000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:0000000000000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.25.b124ac2c620f8ebddd92b6d95ca62176
                           .group:0000000000000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:0000000000000000 wm4.stm32f10x_sdio.h.25.fb0db079f5c1412c40f359319f7c40b0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.25.3f6dfa4abe177efb3c6f5a717c06b323
                           .group:0000000000000000 wm4.stm32f10x_tim.h.25.f709106ba77b314e6b070693f89f3c56
                           .group:0000000000000000 wm4.stm32f10x_usart.h.25.2e65e396239d0cc41fd0bf6faa2a32cb
                           .group:0000000000000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:0000000000000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:0000000000000000 wm4.stm32f10x.h.8317.9a8e476d96d33bb2df9a9ad0775bd4a7
                           .group:0000000000000000 wm4.serial.h.14.12640f911db3fed3671ed7e729a57e3f
                           .group:0000000000000000 wm4.umb_frame_t.h.9.05796095a57acd1575f07118cb6ab058
                           .group:0000000000000000 wm4.config_data.h.9.cbb5077079a900a357fa92ca07074f04
                           .group:0000000000000000 wm4.station_config.h.9.39d8e1c3ae8d42c39bc1698d9fb88942
                           .group:0000000000000000 wm4.dallas.h.28.4c25313e4181236c94847de9c84bd06e
                           .group:0000000000000000 wm4.analog_anemometer.h.9.8c21570f6fc3dcd7763ba4d0d5168e3c
                           .group:0000000000000000 wm4.math.h.13.adb102f7bd7860b1f241e149d6914a1e
                           .group:0000000000000000 wm4.ms5611.h.13.84fbf6afa85557f675e3d85f1be6067c
                           .group:0000000000000000 wm4.bme280.h.9.aefe05f9329372f30337537cea488dce
                           .group:0000000000000000 wm4.rte_wx.h.30.cb80bd87f9fae81b43459954f1781e96

UNDEFINED SYMBOLS
rte_wx_umb_channel_values
memset
umb_0x23_offline_data_callback
rte_wx_update_last_measuremenet_timers
umb_0x26_status_callback
srl_start_tx
srl_receive_data
srl_switch_timeout
srl_switch_timeout_for_waiting
srl_get_rx_buffer
srl_get_num_bytes_rxed
rte_wx_umb
snprintf
strcat
__aeabi_i2f
__aeabi_fmul
