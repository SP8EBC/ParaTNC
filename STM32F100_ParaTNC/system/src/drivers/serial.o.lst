   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"serial.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.srl_init,"ax",%progbits
  16              		.align	1
  17              		.global	srl_init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	srl_init:
  24              	.LFB70:
  25              		.file 1 "../system/src/drivers/serial.c"
   1:../system/src/drivers/serial.c **** #include "drivers/serial.h"
   2:../system/src/drivers/serial.c **** #include "drivers/gpio_conf.h"
   3:../system/src/drivers/serial.c **** 
   4:../system/src/drivers/serial.c **** #include "station_config.h"
   5:../system/src/drivers/serial.c **** #include "diag/Trace.h"
   6:../system/src/drivers/serial.c **** 
   7:../system/src/drivers/serial.c **** #include "main.h" 	// global_time is here
   8:../system/src/drivers/serial.c **** 
   9:../system/src/drivers/serial.c **** #include <string.h>
  10:../system/src/drivers/serial.c **** 
  11:../system/src/drivers/serial.c **** 
  12:../system/src/drivers/serial.c **** #ifdef SEPARATE_TX_BUFF
  13:../system/src/drivers/serial.c **** uint8_t srl_usart1_tx_buffer[TX_BUFFER_1_LN] = {'\0'};
  14:../system/src/drivers/serial.c **** #endif
  15:../system/src/drivers/serial.c **** 
  16:../system/src/drivers/serial.c **** #ifdef SEPARATE_RX_BUFF
  17:../system/src/drivers/serial.c **** uint8_t srl_usart1_rx_buffer[RX_BUFFER_1_LN] = {'\0'};
  18:../system/src/drivers/serial.c **** #endif
  19:../system/src/drivers/serial.c **** 
  20:../system/src/drivers/serial.c **** #ifdef SEPARATE_TX_BUFF
  21:../system/src/drivers/serial.c **** uint8_t srl_usart2_tx_buffer[TX_BUFFER_2_LN] = {'\0'};
  22:../system/src/drivers/serial.c **** #endif
  23:../system/src/drivers/serial.c **** 
  24:../system/src/drivers/serial.c **** #ifdef SEPARATE_RX_BUFF
  25:../system/src/drivers/serial.c **** uint8_t srl_usart2_rx_buffer[RX_BUFFER_2_LN] = {'\0'};
  26:../system/src/drivers/serial.c **** #endif
  27:../system/src/drivers/serial.c **** 
  28:../system/src/drivers/serial.c **** 
  29:../system/src/drivers/serial.c **** void srl_init(
  30:../system/src/drivers/serial.c **** 			srl_context_t *ctx,
  31:../system/src/drivers/serial.c **** 			USART_TypeDef *port,
  32:../system/src/drivers/serial.c **** 			uint8_t *rx_buffer,
  33:../system/src/drivers/serial.c **** 			uint16_t rx_buffer_size,
  34:../system/src/drivers/serial.c **** 			uint8_t *tx_buffer,
  35:../system/src/drivers/serial.c **** 			uint16_t tx_buffer_size,
  36:../system/src/drivers/serial.c **** 			uint32_t baudrate,
  37:../system/src/drivers/serial.c **** 			uint8_t stop_bits
  38:../system/src/drivers/serial.c **** 			) {
  26              		.loc 1 38 0
  27              		.cfi_startproc
  28              		@ args = 16, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 85B0     		sub	sp, sp, #20
  39              		.cfi_def_cfa_offset 40
  40 0004 BDF82CC0 		ldrh	ip, [sp, #44]
  41 0008 9DF83470 		ldrb	r7, [sp, #52]	@ zero_extendqisi2
  39:../system/src/drivers/serial.c **** 
  40:../system/src/drivers/serial.c **** 	if (ctx->srl_rx_state == SRL_RX_IDLE)
  42              		.loc 1 40 0
  43 000c 90F84440 		ldrb	r4, [r0, #68]	@ zero_extendqisi2
  44 0010 012C     		cmp	r4, #1
  45 0012 01D1     		bne	.L12
  46              	.LVL1:
  47              	.L1:
  41:../system/src/drivers/serial.c **** 		return;
  42:../system/src/drivers/serial.c **** 
  43:../system/src/drivers/serial.c **** 	#ifdef SEPARATE_TX_BUFF
  44:../system/src/drivers/serial.c **** 	ctx->srl_tx_buf_pointer = tx_buffer;
  45:../system/src/drivers/serial.c **** 	ctx->srl_rx_buf_ln = tx_buffer_size;
  46:../system/src/drivers/serial.c **** 	#endif
  47:../system/src/drivers/serial.c **** 
  48:../system/src/drivers/serial.c **** 	#ifdef SEPARATE_RX_BUFF
  49:../system/src/drivers/serial.c **** 	ctx->srl_rx_buf_pointer = rx_buffer;
  50:../system/src/drivers/serial.c **** 	ctx->srl_tx_buf_ln = rx_buffer_size;
  51:../system/src/drivers/serial.c **** 	#endif
  52:../system/src/drivers/serial.c **** 
  53:../system/src/drivers/serial.c **** 	memset(ctx->srl_rx_buf_pointer, 0x00, ctx->srl_rx_buf_ln);
  54:../system/src/drivers/serial.c **** 	memset(ctx->srl_tx_buf_pointer, 0x00, ctx->srl_tx_buf_ln);
  55:../system/src/drivers/serial.c **** 
  56:../system/src/drivers/serial.c **** 	ctx->port = port;
  57:../system/src/drivers/serial.c **** 	ctx->port_baurate = baudrate;
  58:../system/src/drivers/serial.c **** 	ctx->port_stopbits = stop_bits;
  59:../system/src/drivers/serial.c **** 
  60:../system/src/drivers/serial.c **** 	//ctx->te_port = 0;
  61:../system/src/drivers/serial.c **** 	//ctx->te_pin = 0;
  62:../system/src/drivers/serial.c **** 
  63:../system/src/drivers/serial.c **** 	ctx->srl_tx_start_time = 0xFFFFFFFFu;
  64:../system/src/drivers/serial.c **** 
  65:../system/src/drivers/serial.c **** 	USART_InitTypeDef USART_InitStructure;
  66:../system/src/drivers/serial.c **** 
  67:../system/src/drivers/serial.c **** 	USART_InitStructure.USART_BaudRate = baudrate;
  68:../system/src/drivers/serial.c **** 	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
  69:../system/src/drivers/serial.c **** 	USART_InitStructure.USART_Parity = USART_Parity_No;
  70:../system/src/drivers/serial.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
  71:../system/src/drivers/serial.c **** 	USART_InitStructure.USART_Mode = USART_Mode_Rx;
  72:../system/src/drivers/serial.c **** 	if (stop_bits == 1)
  73:../system/src/drivers/serial.c **** 		USART_InitStructure.USART_StopBits = USART_StopBits_1;
  74:../system/src/drivers/serial.c **** 	else if (stop_bits == 2)
  75:../system/src/drivers/serial.c **** 		USART_InitStructure.USART_StopBits = USART_StopBits_2;
  76:../system/src/drivers/serial.c **** 	else if (stop_bits == 3)
  77:../system/src/drivers/serial.c **** 		USART_InitStructure.USART_StopBits = USART_StopBits_0_5;
  78:../system/src/drivers/serial.c **** 	else if (stop_bits == 4)
  79:../system/src/drivers/serial.c **** 		USART_InitStructure.USART_StopBits = USART_StopBits_1_5;
  80:../system/src/drivers/serial.c **** 	else
  81:../system/src/drivers/serial.c **** 		USART_InitStructure.USART_StopBits = USART_StopBits_1;
  82:../system/src/drivers/serial.c **** 
  83:../system/src/drivers/serial.c **** 	USART_Init(port, &USART_InitStructure);
  84:../system/src/drivers/serial.c **** 
  85:../system/src/drivers/serial.c **** 	if (port == USART1) {
  86:../system/src/drivers/serial.c **** 		NVIC_EnableIRQ( USART1_IRQn );
  87:../system/src/drivers/serial.c **** 	}
  88:../system/src/drivers/serial.c **** 	else if (port == USART2) {
  89:../system/src/drivers/serial.c **** 		NVIC_EnableIRQ( USART2_IRQn );
  90:../system/src/drivers/serial.c **** 	}
  91:../system/src/drivers/serial.c **** 
  92:../system/src/drivers/serial.c **** 	port->CR1 |= USART_CR1_UE;
  93:../system/src/drivers/serial.c **** 	port->SR &= (0xFFFFFFFF ^ USART_SR_TC);
  94:../system/src/drivers/serial.c **** 
  95:../system/src/drivers/serial.c **** 	ctx->srl_rx_state = SRL_RX_IDLE;
  96:../system/src/drivers/serial.c **** 	ctx->srl_tx_state = SRL_TX_IDLE;
  97:../system/src/drivers/serial.c **** 
  98:../system/src/drivers/serial.c **** 	ctx->srl_rx_error_reason = SRL_ERR_NONE;
  99:../system/src/drivers/serial.c **** 
 100:../system/src/drivers/serial.c **** 	ctx->srl_rx_timeout_calc_started = 0;
 101:../system/src/drivers/serial.c **** 	ctx->total_idle_counter = 0;
 102:../system/src/drivers/serial.c **** 
 103:../system/src/drivers/serial.c **** 	ctx->srl_rx_start_time = 0;
 104:../system/src/drivers/serial.c **** 	ctx->srl_rx_waiting_start_time = 0;
 105:../system/src/drivers/serial.c **** 
 106:../system/src/drivers/serial.c **** 	ctx->srl_rx_timeout_enable = 0;
 107:../system/src/drivers/serial.c **** 	ctx->srl_rx_timeout_waiting_enable = 0;
 108:../system/src/drivers/serial.c **** }
  48              		.loc 1 108 0
  49 0014 05B0     		add	sp, sp, #20
  50              		.cfi_remember_state
  51              		.cfi_def_cfa_offset 20
  52              		@ sp needed
  53 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
  54              	.LVL2:
  55              	.L12:
  56              		.cfi_restore_state
  57 0018 1646     		mov	r6, r2
  58 001a 0D46     		mov	r5, r1
  59 001c 0446     		mov	r4, r0
  44:../system/src/drivers/serial.c **** 	ctx->srl_rx_buf_ln = tx_buffer_size;
  60              		.loc 1 44 0
  61 001e 0A9A     		ldr	r2, [sp, #40]
  62              	.LVL3:
  63 0020 4261     		str	r2, [r0, #20]
  45:../system/src/drivers/serial.c **** 	#endif
  64              		.loc 1 45 0
  65 0022 A0F81CC0 		strh	ip, [r0, #28]	@ movhi
  49:../system/src/drivers/serial.c **** 	ctx->srl_tx_buf_ln = rx_buffer_size;
  66              		.loc 1 49 0
  67 0026 8661     		str	r6, [r0, #24]
  50:../system/src/drivers/serial.c **** 	#endif
  68              		.loc 1 50 0
  69 0028 C383     		strh	r3, [r0, #30]	@ movhi
  53:../system/src/drivers/serial.c **** 	memset(ctx->srl_tx_buf_pointer, 0x00, ctx->srl_tx_buf_ln);
  70              		.loc 1 53 0
  71 002a 6246     		mov	r2, ip
  72 002c 0021     		movs	r1, #0
  73              	.LVL4:
  74 002e 3046     		mov	r0, r6
  75              	.LVL5:
  76 0030 FFF7FEFF 		bl	memset
  77              	.LVL6:
  54:../system/src/drivers/serial.c **** 
  78              		.loc 1 54 0
  79 0034 E28B     		ldrh	r2, [r4, #30]
  80 0036 0021     		movs	r1, #0
  81 0038 6069     		ldr	r0, [r4, #20]
  82 003a FFF7FEFF 		bl	memset
  83              	.LVL7:
  56:../system/src/drivers/serial.c **** 	ctx->port_baurate = baudrate;
  84              		.loc 1 56 0
  85 003e 2560     		str	r5, [r4]
  57:../system/src/drivers/serial.c **** 	ctx->port_stopbits = stop_bits;
  86              		.loc 1 57 0
  87 0040 0C9B     		ldr	r3, [sp, #48]
  88 0042 6360     		str	r3, [r4, #4]
  58:../system/src/drivers/serial.c **** 
  89              		.loc 1 58 0
  90 0044 2772     		strb	r7, [r4, #8]
  63:../system/src/drivers/serial.c **** 
  91              		.loc 1 63 0
  92 0046 4FF0FF33 		mov	r3, #-1
  93 004a 2364     		str	r3, [r4, #64]
  67:../system/src/drivers/serial.c **** 	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
  94              		.loc 1 67 0
  95 004c 0C9B     		ldr	r3, [sp, #48]
  96 004e 0093     		str	r3, [sp]
  68:../system/src/drivers/serial.c **** 	USART_InitStructure.USART_Parity = USART_Parity_No;
  97              		.loc 1 68 0
  98 0050 0023     		movs	r3, #0
  99 0052 ADF80430 		strh	r3, [sp, #4]	@ movhi
  69:../system/src/drivers/serial.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 100              		.loc 1 69 0
 101 0056 ADF80830 		strh	r3, [sp, #8]	@ movhi
  70:../system/src/drivers/serial.c **** 	USART_InitStructure.USART_Mode = USART_Mode_Rx;
 102              		.loc 1 70 0
 103 005a ADF80C30 		strh	r3, [sp, #12]	@ movhi
  71:../system/src/drivers/serial.c **** 	if (stop_bits == 1)
 104              		.loc 1 71 0
 105 005e 0423     		movs	r3, #4
 106 0060 ADF80A30 		strh	r3, [sp, #10]	@ movhi
  72:../system/src/drivers/serial.c **** 		USART_InitStructure.USART_StopBits = USART_StopBits_1;
 107              		.loc 1 72 0
 108 0064 012F     		cmp	r7, #1
 109 0066 09D0     		beq	.L13
  74:../system/src/drivers/serial.c **** 		USART_InitStructure.USART_StopBits = USART_StopBits_2;
 110              		.loc 1 74 0
 111 0068 022F     		cmp	r7, #2
 112 006a 31D0     		beq	.L14
  76:../system/src/drivers/serial.c **** 		USART_InitStructure.USART_StopBits = USART_StopBits_0_5;
 113              		.loc 1 76 0
 114 006c 032F     		cmp	r7, #3
 115 006e 34D0     		beq	.L15
  78:../system/src/drivers/serial.c **** 		USART_InitStructure.USART_StopBits = USART_StopBits_1_5;
 116              		.loc 1 78 0
 117 0070 042F     		cmp	r7, #4
 118 0072 37D0     		beq	.L16
  81:../system/src/drivers/serial.c **** 
 119              		.loc 1 81 0
 120 0074 0023     		movs	r3, #0
 121 0076 ADF80630 		strh	r3, [sp, #6]	@ movhi
 122 007a 02E0     		b	.L4
 123              	.L13:
  73:../system/src/drivers/serial.c **** 	else if (stop_bits == 2)
 124              		.loc 1 73 0
 125 007c 0023     		movs	r3, #0
 126 007e ADF80630 		strh	r3, [sp, #6]	@ movhi
 127              	.L4:
  83:../system/src/drivers/serial.c **** 
 128              		.loc 1 83 0
 129 0082 6946     		mov	r1, sp
 130 0084 2846     		mov	r0, r5
 131 0086 FFF7FEFF 		bl	USART_Init
 132              	.LVL8:
  85:../system/src/drivers/serial.c **** 		NVIC_EnableIRQ( USART1_IRQn );
 133              		.loc 1 85 0
 134 008a 1D4B     		ldr	r3, .L19
 135 008c 9D42     		cmp	r5, r3
 136 008e 2ED0     		beq	.L17
  88:../system/src/drivers/serial.c **** 		NVIC_EnableIRQ( USART2_IRQn );
 137              		.loc 1 88 0
 138 0090 1C4B     		ldr	r3, .L19+4
 139 0092 9D42     		cmp	r5, r3
 140 0094 2FD0     		beq	.L18
 141              	.LVL9:
 142              	.L9:
  92:../system/src/drivers/serial.c **** 	port->SR &= (0xFFFFFFFF ^ USART_SR_TC);
 143              		.loc 1 92 0
 144 0096 AB89     		ldrh	r3, [r5, #12]
 145 0098 43F40053 		orr	r3, r3, #8192
 146 009c AB81     		strh	r3, [r5, #12]	@ movhi
  93:../system/src/drivers/serial.c **** 
 147              		.loc 1 93 0
 148 009e 2B88     		ldrh	r3, [r5]
 149 00a0 9BB2     		uxth	r3, r3
 150 00a2 23F04003 		bic	r3, r3, #64
 151 00a6 9BB2     		uxth	r3, r3
 152 00a8 2B80     		strh	r3, [r5]	@ movhi
  95:../system/src/drivers/serial.c **** 	ctx->srl_tx_state = SRL_TX_IDLE;
 153              		.loc 1 95 0
 154 00aa 0123     		movs	r3, #1
 155 00ac 84F84430 		strb	r3, [r4, #68]
  96:../system/src/drivers/serial.c **** 
 156              		.loc 1 96 0
 157 00b0 84F84530 		strb	r3, [r4, #69]
  98:../system/src/drivers/serial.c **** 
 158              		.loc 1 98 0
 159 00b4 0023     		movs	r3, #0
 160 00b6 84F84630 		strb	r3, [r4, #70]
 100:../system/src/drivers/serial.c **** 	ctx->total_idle_counter = 0;
 161              		.loc 1 100 0
 162 00ba 84F82F30 		strb	r3, [r4, #47]
 101:../system/src/drivers/serial.c **** 
 163              		.loc 1 101 0
 164 00be 84F84730 		strb	r3, [r4, #71]
 103:../system/src/drivers/serial.c **** 	ctx->srl_rx_waiting_start_time = 0;
 165              		.loc 1 103 0
 166 00c2 A363     		str	r3, [r4, #56]
 104:../system/src/drivers/serial.c **** 
 167              		.loc 1 104 0
 168 00c4 E363     		str	r3, [r4, #60]
 106:../system/src/drivers/serial.c **** 	ctx->srl_rx_timeout_waiting_enable = 0;
 169              		.loc 1 106 0
 170 00c6 84F82D30 		strb	r3, [r4, #45]
 107:../system/src/drivers/serial.c **** }
 171              		.loc 1 107 0
 172 00ca 84F82E30 		strb	r3, [r4, #46]
 173 00ce A1E7     		b	.L1
 174              	.LVL10:
 175              	.L14:
  75:../system/src/drivers/serial.c **** 	else if (stop_bits == 3)
 176              		.loc 1 75 0
 177 00d0 4FF40053 		mov	r3, #8192
 178 00d4 ADF80630 		strh	r3, [sp, #6]	@ movhi
 179 00d8 D3E7     		b	.L4
 180              	.L15:
  77:../system/src/drivers/serial.c **** 	else if (stop_bits == 4)
 181              		.loc 1 77 0
 182 00da 4FF48053 		mov	r3, #4096
 183 00de ADF80630 		strh	r3, [sp, #6]	@ movhi
 184 00e2 CEE7     		b	.L4
 185              	.L16:
  79:../system/src/drivers/serial.c **** 	else
 186              		.loc 1 79 0
 187 00e4 4FF44053 		mov	r3, #12288
 188 00e8 ADF80630 		strh	r3, [sp, #6]	@ movhi
 189 00ec C9E7     		b	.L4
 190              	.L17:
 191              	.LVL11:
 192              	.LBB10:
 193              	.LBB11:
 194              		.file 2 "../system/include/cmsis/core_cm3.h"
   1:../system/include/cmsis/core_cm3.h **** /**************************************************************************//**
   2:../system/include/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:../system/include/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:../system/include/cmsis/core_cm3.h ****  * @version  V4.30
   5:../system/include/cmsis/core_cm3.h ****  * @date     20. October 2015
   6:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
   7:../system/include/cmsis/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../system/include/cmsis/core_cm3.h **** 
   9:../system/include/cmsis/core_cm3.h ****    All rights reserved.
  10:../system/include/cmsis/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:../system/include/cmsis/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:../system/include/cmsis/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:../system/include/cmsis/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:../system/include/cmsis/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../system/include/cmsis/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:../system/include/cmsis/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:../system/include/cmsis/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../system/include/cmsis/core_cm3.h ****      to endorse or promote products derived from this software without
  19:../system/include/cmsis/core_cm3.h ****      specific prior written permission.
  20:../system/include/cmsis/core_cm3.h ****    *
  21:../system/include/cmsis/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../system/include/cmsis/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../system/include/cmsis/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../system/include/cmsis/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../system/include/cmsis/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../system/include/cmsis/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../system/include/cmsis/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../system/include/cmsis/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../system/include/cmsis/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../system/include/cmsis/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../system/include/cmsis/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../system/include/cmsis/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:../system/include/cmsis/core_cm3.h **** 
  34:../system/include/cmsis/core_cm3.h **** 
  35:../system/include/cmsis/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:../system/include/cmsis/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:../system/include/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:../system/include/cmsis/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:../system/include/cmsis/core_cm3.h **** #endif
  40:../system/include/cmsis/core_cm3.h **** 
  41:../system/include/cmsis/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:../system/include/cmsis/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:../system/include/cmsis/core_cm3.h **** 
  44:../system/include/cmsis/core_cm3.h **** // [ILG]
  45:../system/include/cmsis/core_cm3.h **** #if defined ( __GNUC__ )
  46:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic push
  47:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  48:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic ignored "-Wconversion"
  49:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  50:../system/include/cmsis/core_cm3.h **** #endif
  51:../system/include/cmsis/core_cm3.h **** 
  52:../system/include/cmsis/core_cm3.h **** #include <stdint.h>
  53:../system/include/cmsis/core_cm3.h **** 
  54:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
  55:../system/include/cmsis/core_cm3.h ****  extern "C" {
  56:../system/include/cmsis/core_cm3.h **** #endif
  57:../system/include/cmsis/core_cm3.h **** 
  58:../system/include/cmsis/core_cm3.h **** /**
  59:../system/include/cmsis/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  60:../system/include/cmsis/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  61:../system/include/cmsis/core_cm3.h **** 
  62:../system/include/cmsis/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  63:../system/include/cmsis/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  64:../system/include/cmsis/core_cm3.h **** 
  65:../system/include/cmsis/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  66:../system/include/cmsis/core_cm3.h ****      Unions are used for effective representation of core registers.
  67:../system/include/cmsis/core_cm3.h **** 
  68:../system/include/cmsis/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  69:../system/include/cmsis/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  70:../system/include/cmsis/core_cm3.h ****  */
  71:../system/include/cmsis/core_cm3.h **** 
  72:../system/include/cmsis/core_cm3.h **** 
  73:../system/include/cmsis/core_cm3.h **** /*******************************************************************************
  74:../system/include/cmsis/core_cm3.h ****  *                 CMSIS definitions
  75:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
  76:../system/include/cmsis/core_cm3.h **** /**
  77:../system/include/cmsis/core_cm3.h ****   \ingroup Cortex_M3
  78:../system/include/cmsis/core_cm3.h ****   @{
  79:../system/include/cmsis/core_cm3.h ****  */
  80:../system/include/cmsis/core_cm3.h **** 
  81:../system/include/cmsis/core_cm3.h **** /*  CMSIS CM3 definitions */
  82:../system/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  83:../system/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  84:../system/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  85:../system/include/cmsis/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  86:../system/include/cmsis/core_cm3.h **** 
  87:../system/include/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  88:../system/include/cmsis/core_cm3.h **** 
  89:../system/include/cmsis/core_cm3.h **** 
  90:../system/include/cmsis/core_cm3.h **** #if   defined ( __CC_ARM )
  91:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  92:../system/include/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  93:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  94:../system/include/cmsis/core_cm3.h **** 
  95:../system/include/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  96:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  97:../system/include/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  98:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  99:../system/include/cmsis/core_cm3.h **** 
 100:../system/include/cmsis/core_cm3.h **** #elif defined ( __GNUC__ )
 101:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 102:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 103:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 104:../system/include/cmsis/core_cm3.h **** 
 105:../system/include/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 106:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
 107:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 108:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 109:../system/include/cmsis/core_cm3.h **** 
 110:../system/include/cmsis/core_cm3.h **** #elif defined ( __TMS470__ )
 111:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 112:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 113:../system/include/cmsis/core_cm3.h **** 
 114:../system/include/cmsis/core_cm3.h **** #elif defined ( __TASKING__ )
 115:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 116:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 117:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 118:../system/include/cmsis/core_cm3.h **** 
 119:../system/include/cmsis/core_cm3.h **** #elif defined ( __CSMC__ )
 120:../system/include/cmsis/core_cm3.h ****   #define __packed
 121:../system/include/cmsis/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 122:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 123:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 124:../system/include/cmsis/core_cm3.h **** 
 125:../system/include/cmsis/core_cm3.h **** #else
 126:../system/include/cmsis/core_cm3.h ****   #error Unknown compiler
 127:../system/include/cmsis/core_cm3.h **** #endif
 128:../system/include/cmsis/core_cm3.h **** 
 129:../system/include/cmsis/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 130:../system/include/cmsis/core_cm3.h ****     This core does not support an FPU at all
 131:../system/include/cmsis/core_cm3.h **** */
 132:../system/include/cmsis/core_cm3.h **** #define __FPU_USED       0U
 133:../system/include/cmsis/core_cm3.h **** 
 134:../system/include/cmsis/core_cm3.h **** #if defined ( __CC_ARM )
 135:../system/include/cmsis/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 136:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 137:../system/include/cmsis/core_cm3.h ****   #endif
 138:../system/include/cmsis/core_cm3.h **** 
 139:../system/include/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 140:../system/include/cmsis/core_cm3.h ****   #if defined __ARM_PCS_VFP
 141:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 142:../system/include/cmsis/core_cm3.h ****   #endif
 143:../system/include/cmsis/core_cm3.h **** 
 144:../system/include/cmsis/core_cm3.h **** #elif defined ( __GNUC__ )
 145:../system/include/cmsis/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 146:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 147:../system/include/cmsis/core_cm3.h ****   #endif
 148:../system/include/cmsis/core_cm3.h **** 
 149:../system/include/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 150:../system/include/cmsis/core_cm3.h ****   #if defined __ARMVFP__
 151:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 152:../system/include/cmsis/core_cm3.h ****   #endif
 153:../system/include/cmsis/core_cm3.h **** 
 154:../system/include/cmsis/core_cm3.h **** #elif defined ( __TMS470__ )
 155:../system/include/cmsis/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 156:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 157:../system/include/cmsis/core_cm3.h ****   #endif
 158:../system/include/cmsis/core_cm3.h **** 
 159:../system/include/cmsis/core_cm3.h **** #elif defined ( __TASKING__ )
 160:../system/include/cmsis/core_cm3.h ****   #if defined __FPU_VFP__
 161:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 162:../system/include/cmsis/core_cm3.h ****   #endif
 163:../system/include/cmsis/core_cm3.h **** 
 164:../system/include/cmsis/core_cm3.h **** #elif defined ( __CSMC__ )
 165:../system/include/cmsis/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 166:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 167:../system/include/cmsis/core_cm3.h ****   #endif
 168:../system/include/cmsis/core_cm3.h **** 
 169:../system/include/cmsis/core_cm3.h **** #endif
 170:../system/include/cmsis/core_cm3.h **** 
 171:../system/include/cmsis/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 172:../system/include/cmsis/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 173:../system/include/cmsis/core_cm3.h **** 
 174:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
 175:../system/include/cmsis/core_cm3.h **** }
 176:../system/include/cmsis/core_cm3.h **** #endif
 177:../system/include/cmsis/core_cm3.h **** 
 178:../system/include/cmsis/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 179:../system/include/cmsis/core_cm3.h **** 
 180:../system/include/cmsis/core_cm3.h **** #ifndef __CMSIS_GENERIC
 181:../system/include/cmsis/core_cm3.h **** 
 182:../system/include/cmsis/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 183:../system/include/cmsis/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 184:../system/include/cmsis/core_cm3.h **** 
 185:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
 186:../system/include/cmsis/core_cm3.h ****  extern "C" {
 187:../system/include/cmsis/core_cm3.h **** #endif
 188:../system/include/cmsis/core_cm3.h **** 
 189:../system/include/cmsis/core_cm3.h **** /* check device defines and use defaults */
 190:../system/include/cmsis/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 191:../system/include/cmsis/core_cm3.h ****   #ifndef __CM3_REV
 192:../system/include/cmsis/core_cm3.h ****     #define __CM3_REV               0x0200U
 193:../system/include/cmsis/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 194:../system/include/cmsis/core_cm3.h ****   #endif
 195:../system/include/cmsis/core_cm3.h **** 
 196:../system/include/cmsis/core_cm3.h ****   #ifndef __MPU_PRESENT
 197:../system/include/cmsis/core_cm3.h ****     #define __MPU_PRESENT             0U
 198:../system/include/cmsis/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 199:../system/include/cmsis/core_cm3.h ****   #endif
 200:../system/include/cmsis/core_cm3.h **** 
 201:../system/include/cmsis/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 202:../system/include/cmsis/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 203:../system/include/cmsis/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 204:../system/include/cmsis/core_cm3.h ****   #endif
 205:../system/include/cmsis/core_cm3.h **** 
 206:../system/include/cmsis/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 207:../system/include/cmsis/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 208:../system/include/cmsis/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 209:../system/include/cmsis/core_cm3.h ****   #endif
 210:../system/include/cmsis/core_cm3.h **** #endif
 211:../system/include/cmsis/core_cm3.h **** 
 212:../system/include/cmsis/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 213:../system/include/cmsis/core_cm3.h **** /**
 214:../system/include/cmsis/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 215:../system/include/cmsis/core_cm3.h **** 
 216:../system/include/cmsis/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 217:../system/include/cmsis/core_cm3.h ****     \li to specify the access to peripheral variables.
 218:../system/include/cmsis/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 219:../system/include/cmsis/core_cm3.h **** */
 220:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
 221:../system/include/cmsis/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 222:../system/include/cmsis/core_cm3.h **** #else
 223:../system/include/cmsis/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 224:../system/include/cmsis/core_cm3.h **** #endif
 225:../system/include/cmsis/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 226:../system/include/cmsis/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 227:../system/include/cmsis/core_cm3.h **** 
 228:../system/include/cmsis/core_cm3.h **** /* following defines should be used for structure members */
 229:../system/include/cmsis/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 230:../system/include/cmsis/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 231:../system/include/cmsis/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 232:../system/include/cmsis/core_cm3.h **** 
 233:../system/include/cmsis/core_cm3.h **** /*@} end of group Cortex_M3 */
 234:../system/include/cmsis/core_cm3.h **** 
 235:../system/include/cmsis/core_cm3.h **** 
 236:../system/include/cmsis/core_cm3.h **** 
 237:../system/include/cmsis/core_cm3.h **** /*******************************************************************************
 238:../system/include/cmsis/core_cm3.h ****  *                 Register Abstraction
 239:../system/include/cmsis/core_cm3.h ****   Core Register contain:
 240:../system/include/cmsis/core_cm3.h ****   - Core Register
 241:../system/include/cmsis/core_cm3.h ****   - Core NVIC Register
 242:../system/include/cmsis/core_cm3.h ****   - Core SCB Register
 243:../system/include/cmsis/core_cm3.h ****   - Core SysTick Register
 244:../system/include/cmsis/core_cm3.h ****   - Core Debug Register
 245:../system/include/cmsis/core_cm3.h ****   - Core MPU Register
 246:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
 247:../system/include/cmsis/core_cm3.h **** /**
 248:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 249:../system/include/cmsis/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 250:../system/include/cmsis/core_cm3.h **** */
 251:../system/include/cmsis/core_cm3.h **** 
 252:../system/include/cmsis/core_cm3.h **** /**
 253:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
 254:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 255:../system/include/cmsis/core_cm3.h ****   \brief      Core Register type definitions.
 256:../system/include/cmsis/core_cm3.h ****   @{
 257:../system/include/cmsis/core_cm3.h ****  */
 258:../system/include/cmsis/core_cm3.h **** 
 259:../system/include/cmsis/core_cm3.h **** /**
 260:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 261:../system/include/cmsis/core_cm3.h ****  */
 262:../system/include/cmsis/core_cm3.h **** typedef union
 263:../system/include/cmsis/core_cm3.h **** {
 264:../system/include/cmsis/core_cm3.h ****   struct
 265:../system/include/cmsis/core_cm3.h ****   {
 266:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 267:../system/include/cmsis/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 268:../system/include/cmsis/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 269:../system/include/cmsis/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 270:../system/include/cmsis/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 271:../system/include/cmsis/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 272:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 273:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 274:../system/include/cmsis/core_cm3.h **** } APSR_Type;
 275:../system/include/cmsis/core_cm3.h **** 
 276:../system/include/cmsis/core_cm3.h **** /* APSR Register Definitions */
 277:../system/include/cmsis/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 278:../system/include/cmsis/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 279:../system/include/cmsis/core_cm3.h **** 
 280:../system/include/cmsis/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 281:../system/include/cmsis/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 282:../system/include/cmsis/core_cm3.h **** 
 283:../system/include/cmsis/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 284:../system/include/cmsis/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 285:../system/include/cmsis/core_cm3.h **** 
 286:../system/include/cmsis/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 287:../system/include/cmsis/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 288:../system/include/cmsis/core_cm3.h **** 
 289:../system/include/cmsis/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 290:../system/include/cmsis/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 291:../system/include/cmsis/core_cm3.h **** 
 292:../system/include/cmsis/core_cm3.h **** 
 293:../system/include/cmsis/core_cm3.h **** /**
 294:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 295:../system/include/cmsis/core_cm3.h ****  */
 296:../system/include/cmsis/core_cm3.h **** typedef union
 297:../system/include/cmsis/core_cm3.h **** {
 298:../system/include/cmsis/core_cm3.h ****   struct
 299:../system/include/cmsis/core_cm3.h ****   {
 300:../system/include/cmsis/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 301:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 302:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 303:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 304:../system/include/cmsis/core_cm3.h **** } IPSR_Type;
 305:../system/include/cmsis/core_cm3.h **** 
 306:../system/include/cmsis/core_cm3.h **** /* IPSR Register Definitions */
 307:../system/include/cmsis/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 308:../system/include/cmsis/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 309:../system/include/cmsis/core_cm3.h **** 
 310:../system/include/cmsis/core_cm3.h **** 
 311:../system/include/cmsis/core_cm3.h **** /**
 312:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 313:../system/include/cmsis/core_cm3.h ****  */
 314:../system/include/cmsis/core_cm3.h **** typedef union
 315:../system/include/cmsis/core_cm3.h **** {
 316:../system/include/cmsis/core_cm3.h ****   struct
 317:../system/include/cmsis/core_cm3.h ****   {
 318:../system/include/cmsis/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 319:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 320:../system/include/cmsis/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 321:../system/include/cmsis/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 322:../system/include/cmsis/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 323:../system/include/cmsis/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 324:../system/include/cmsis/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 325:../system/include/cmsis/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 326:../system/include/cmsis/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 327:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 328:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 329:../system/include/cmsis/core_cm3.h **** } xPSR_Type;
 330:../system/include/cmsis/core_cm3.h **** 
 331:../system/include/cmsis/core_cm3.h **** /* xPSR Register Definitions */
 332:../system/include/cmsis/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 333:../system/include/cmsis/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 334:../system/include/cmsis/core_cm3.h **** 
 335:../system/include/cmsis/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 336:../system/include/cmsis/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 337:../system/include/cmsis/core_cm3.h **** 
 338:../system/include/cmsis/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 339:../system/include/cmsis/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 340:../system/include/cmsis/core_cm3.h **** 
 341:../system/include/cmsis/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 342:../system/include/cmsis/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 343:../system/include/cmsis/core_cm3.h **** 
 344:../system/include/cmsis/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 345:../system/include/cmsis/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 346:../system/include/cmsis/core_cm3.h **** 
 347:../system/include/cmsis/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 348:../system/include/cmsis/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 349:../system/include/cmsis/core_cm3.h **** 
 350:../system/include/cmsis/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 351:../system/include/cmsis/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 352:../system/include/cmsis/core_cm3.h **** 
 353:../system/include/cmsis/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 354:../system/include/cmsis/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 355:../system/include/cmsis/core_cm3.h **** 
 356:../system/include/cmsis/core_cm3.h **** 
 357:../system/include/cmsis/core_cm3.h **** /**
 358:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 359:../system/include/cmsis/core_cm3.h ****  */
 360:../system/include/cmsis/core_cm3.h **** typedef union
 361:../system/include/cmsis/core_cm3.h **** {
 362:../system/include/cmsis/core_cm3.h ****   struct
 363:../system/include/cmsis/core_cm3.h ****   {
 364:../system/include/cmsis/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 365:../system/include/cmsis/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 366:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 367:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 368:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 369:../system/include/cmsis/core_cm3.h **** } CONTROL_Type;
 370:../system/include/cmsis/core_cm3.h **** 
 371:../system/include/cmsis/core_cm3.h **** /* CONTROL Register Definitions */
 372:../system/include/cmsis/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 373:../system/include/cmsis/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 374:../system/include/cmsis/core_cm3.h **** 
 375:../system/include/cmsis/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 376:../system/include/cmsis/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 377:../system/include/cmsis/core_cm3.h **** 
 378:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_CORE */
 379:../system/include/cmsis/core_cm3.h **** 
 380:../system/include/cmsis/core_cm3.h **** 
 381:../system/include/cmsis/core_cm3.h **** /**
 382:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
 383:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 384:../system/include/cmsis/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 385:../system/include/cmsis/core_cm3.h ****   @{
 386:../system/include/cmsis/core_cm3.h ****  */
 387:../system/include/cmsis/core_cm3.h **** 
 388:../system/include/cmsis/core_cm3.h **** /**
 389:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 390:../system/include/cmsis/core_cm3.h ****  */
 391:../system/include/cmsis/core_cm3.h **** typedef struct
 392:../system/include/cmsis/core_cm3.h **** {
 393:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 394:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[24U];
 395:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 396:../system/include/cmsis/core_cm3.h ****         uint32_t RSERVED1[24U];
 397:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 398:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[24U];
 399:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 400:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED3[24U];
 401:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 402:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED4[56U];
 403:../system/include/cmsis/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 404:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED5[644U];
 405:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 406:../system/include/cmsis/core_cm3.h **** }  NVIC_Type;
 407:../system/include/cmsis/core_cm3.h **** 
 408:../system/include/cmsis/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 409:../system/include/cmsis/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 410:../system/include/cmsis/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 411:../system/include/cmsis/core_cm3.h **** 
 412:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 413:../system/include/cmsis/core_cm3.h **** 
 414:../system/include/cmsis/core_cm3.h **** 
 415:../system/include/cmsis/core_cm3.h **** /**
 416:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 417:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 418:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 419:../system/include/cmsis/core_cm3.h ****   @{
 420:../system/include/cmsis/core_cm3.h ****  */
 421:../system/include/cmsis/core_cm3.h **** 
 422:../system/include/cmsis/core_cm3.h **** /**
 423:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 424:../system/include/cmsis/core_cm3.h ****  */
 425:../system/include/cmsis/core_cm3.h **** typedef struct
 426:../system/include/cmsis/core_cm3.h **** {
 427:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 428:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 429:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 430:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 431:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 432:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 433:../system/include/cmsis/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 434:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 435:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 436:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 437:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 438:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 439:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 440:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 441:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 442:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 443:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 444:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 445:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 446:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[5U];
 447:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 448:../system/include/cmsis/core_cm3.h **** } SCB_Type;
 449:../system/include/cmsis/core_cm3.h **** 
 450:../system/include/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 451:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 452:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 453:../system/include/cmsis/core_cm3.h **** 
 454:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 455:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 456:../system/include/cmsis/core_cm3.h **** 
 457:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 458:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 459:../system/include/cmsis/core_cm3.h **** 
 460:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 461:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 462:../system/include/cmsis/core_cm3.h **** 
 463:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 464:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 465:../system/include/cmsis/core_cm3.h **** 
 466:../system/include/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 467:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 468:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 469:../system/include/cmsis/core_cm3.h **** 
 470:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 471:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 472:../system/include/cmsis/core_cm3.h **** 
 473:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 474:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 475:../system/include/cmsis/core_cm3.h **** 
 476:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 477:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 478:../system/include/cmsis/core_cm3.h **** 
 479:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 480:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 481:../system/include/cmsis/core_cm3.h **** 
 482:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 483:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 484:../system/include/cmsis/core_cm3.h **** 
 485:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 486:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 487:../system/include/cmsis/core_cm3.h **** 
 488:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 489:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 490:../system/include/cmsis/core_cm3.h **** 
 491:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 492:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 493:../system/include/cmsis/core_cm3.h **** 
 494:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 495:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 496:../system/include/cmsis/core_cm3.h **** 
 497:../system/include/cmsis/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 498:../system/include/cmsis/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 499:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 500:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 501:../system/include/cmsis/core_cm3.h **** 
 502:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 503:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 504:../system/include/cmsis/core_cm3.h **** #else
 505:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 506:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 507:../system/include/cmsis/core_cm3.h **** #endif
 508:../system/include/cmsis/core_cm3.h **** 
 509:../system/include/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 510:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 511:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 512:../system/include/cmsis/core_cm3.h **** 
 513:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 514:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 515:../system/include/cmsis/core_cm3.h **** 
 516:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 517:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 518:../system/include/cmsis/core_cm3.h **** 
 519:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 520:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 521:../system/include/cmsis/core_cm3.h **** 
 522:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 523:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 524:../system/include/cmsis/core_cm3.h **** 
 525:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 526:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 527:../system/include/cmsis/core_cm3.h **** 
 528:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 529:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 530:../system/include/cmsis/core_cm3.h **** 
 531:../system/include/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 532:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 533:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 534:../system/include/cmsis/core_cm3.h **** 
 535:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 536:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 537:../system/include/cmsis/core_cm3.h **** 
 538:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 539:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 540:../system/include/cmsis/core_cm3.h **** 
 541:../system/include/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 542:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 543:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 544:../system/include/cmsis/core_cm3.h **** 
 545:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 546:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 547:../system/include/cmsis/core_cm3.h **** 
 548:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 549:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 550:../system/include/cmsis/core_cm3.h **** 
 551:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 552:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 553:../system/include/cmsis/core_cm3.h **** 
 554:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 555:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 556:../system/include/cmsis/core_cm3.h **** 
 557:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 558:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 559:../system/include/cmsis/core_cm3.h **** 
 560:../system/include/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 561:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 562:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 563:../system/include/cmsis/core_cm3.h **** 
 564:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 565:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 566:../system/include/cmsis/core_cm3.h **** 
 567:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 568:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 569:../system/include/cmsis/core_cm3.h **** 
 570:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 571:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 572:../system/include/cmsis/core_cm3.h **** 
 573:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 574:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 575:../system/include/cmsis/core_cm3.h **** 
 576:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 577:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 578:../system/include/cmsis/core_cm3.h **** 
 579:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 580:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 581:../system/include/cmsis/core_cm3.h **** 
 582:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 583:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 584:../system/include/cmsis/core_cm3.h **** 
 585:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 586:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 587:../system/include/cmsis/core_cm3.h **** 
 588:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 589:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 590:../system/include/cmsis/core_cm3.h **** 
 591:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 592:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 593:../system/include/cmsis/core_cm3.h **** 
 594:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 595:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 596:../system/include/cmsis/core_cm3.h **** 
 597:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 598:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 599:../system/include/cmsis/core_cm3.h **** 
 600:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 601:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 602:../system/include/cmsis/core_cm3.h **** 
 603:../system/include/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 604:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 605:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 606:../system/include/cmsis/core_cm3.h **** 
 607:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 608:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 609:../system/include/cmsis/core_cm3.h **** 
 610:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 611:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 612:../system/include/cmsis/core_cm3.h **** 
 613:../system/include/cmsis/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 614:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 615:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 616:../system/include/cmsis/core_cm3.h **** 
 617:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 618:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 619:../system/include/cmsis/core_cm3.h **** 
 620:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 621:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 622:../system/include/cmsis/core_cm3.h **** 
 623:../system/include/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 624:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 625:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 626:../system/include/cmsis/core_cm3.h **** 
 627:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 628:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 629:../system/include/cmsis/core_cm3.h **** 
 630:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 631:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 632:../system/include/cmsis/core_cm3.h **** 
 633:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 634:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 635:../system/include/cmsis/core_cm3.h **** 
 636:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 637:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 638:../system/include/cmsis/core_cm3.h **** 
 639:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_SCB */
 640:../system/include/cmsis/core_cm3.h **** 
 641:../system/include/cmsis/core_cm3.h **** 
 642:../system/include/cmsis/core_cm3.h **** /**
 643:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 644:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 645:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 646:../system/include/cmsis/core_cm3.h ****   @{
 647:../system/include/cmsis/core_cm3.h ****  */
 648:../system/include/cmsis/core_cm3.h **** 
 649:../system/include/cmsis/core_cm3.h **** /**
 650:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 651:../system/include/cmsis/core_cm3.h ****  */
 652:../system/include/cmsis/core_cm3.h **** typedef struct
 653:../system/include/cmsis/core_cm3.h **** {
 654:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[1U];
 655:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 656:../system/include/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 657:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 658:../system/include/cmsis/core_cm3.h **** #else
 659:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[1U];
 660:../system/include/cmsis/core_cm3.h **** #endif
 661:../system/include/cmsis/core_cm3.h **** } SCnSCB_Type;
 662:../system/include/cmsis/core_cm3.h **** 
 663:../system/include/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 664:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 665:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 666:../system/include/cmsis/core_cm3.h **** 
 667:../system/include/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 668:../system/include/cmsis/core_cm3.h **** 
 669:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 670:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 671:../system/include/cmsis/core_cm3.h **** 
 672:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 673:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 674:../system/include/cmsis/core_cm3.h **** 
 675:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 676:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 677:../system/include/cmsis/core_cm3.h **** 
 678:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 679:../system/include/cmsis/core_cm3.h **** 
 680:../system/include/cmsis/core_cm3.h **** 
 681:../system/include/cmsis/core_cm3.h **** /**
 682:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 683:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 684:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 685:../system/include/cmsis/core_cm3.h ****   @{
 686:../system/include/cmsis/core_cm3.h ****  */
 687:../system/include/cmsis/core_cm3.h **** 
 688:../system/include/cmsis/core_cm3.h **** /**
 689:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 690:../system/include/cmsis/core_cm3.h ****  */
 691:../system/include/cmsis/core_cm3.h **** typedef struct
 692:../system/include/cmsis/core_cm3.h **** {
 693:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 694:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 695:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 696:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 697:../system/include/cmsis/core_cm3.h **** } SysTick_Type;
 698:../system/include/cmsis/core_cm3.h **** 
 699:../system/include/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 700:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 701:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 702:../system/include/cmsis/core_cm3.h **** 
 703:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 704:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 705:../system/include/cmsis/core_cm3.h **** 
 706:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 707:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 708:../system/include/cmsis/core_cm3.h **** 
 709:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 710:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 711:../system/include/cmsis/core_cm3.h **** 
 712:../system/include/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 713:../system/include/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 714:../system/include/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 715:../system/include/cmsis/core_cm3.h **** 
 716:../system/include/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 717:../system/include/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 718:../system/include/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 719:../system/include/cmsis/core_cm3.h **** 
 720:../system/include/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 721:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 722:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 723:../system/include/cmsis/core_cm3.h **** 
 724:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 725:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 726:../system/include/cmsis/core_cm3.h **** 
 727:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 728:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 729:../system/include/cmsis/core_cm3.h **** 
 730:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 731:../system/include/cmsis/core_cm3.h **** 
 732:../system/include/cmsis/core_cm3.h **** 
 733:../system/include/cmsis/core_cm3.h **** /**
 734:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 735:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 736:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 737:../system/include/cmsis/core_cm3.h ****   @{
 738:../system/include/cmsis/core_cm3.h ****  */
 739:../system/include/cmsis/core_cm3.h **** 
 740:../system/include/cmsis/core_cm3.h **** /**
 741:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 742:../system/include/cmsis/core_cm3.h ****  */
 743:../system/include/cmsis/core_cm3.h **** typedef struct
 744:../system/include/cmsis/core_cm3.h **** {
 745:../system/include/cmsis/core_cm3.h ****   __OM  union
 746:../system/include/cmsis/core_cm3.h ****   {
 747:../system/include/cmsis/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 748:../system/include/cmsis/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 749:../system/include/cmsis/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 750:../system/include/cmsis/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 751:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[864U];
 752:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 753:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[15U];
 754:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 755:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[15U];
 756:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 757:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED3[29U];
 758:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 759:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 760:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 761:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED4[43U];
 762:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 763:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 764:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED5[6U];
 765:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 766:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 767:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 768:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 769:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 770:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 771:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 772:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 773:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 774:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 775:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 776:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 777:../system/include/cmsis/core_cm3.h **** } ITM_Type;
 778:../system/include/cmsis/core_cm3.h **** 
 779:../system/include/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 780:../system/include/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 781:../system/include/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 782:../system/include/cmsis/core_cm3.h **** 
 783:../system/include/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 784:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 785:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 786:../system/include/cmsis/core_cm3.h **** 
 787:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 788:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 789:../system/include/cmsis/core_cm3.h **** 
 790:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 791:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 792:../system/include/cmsis/core_cm3.h **** 
 793:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 794:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 795:../system/include/cmsis/core_cm3.h **** 
 796:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 797:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 798:../system/include/cmsis/core_cm3.h **** 
 799:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 800:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 801:../system/include/cmsis/core_cm3.h **** 
 802:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 803:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 804:../system/include/cmsis/core_cm3.h **** 
 805:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 806:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 807:../system/include/cmsis/core_cm3.h **** 
 808:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 809:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 810:../system/include/cmsis/core_cm3.h **** 
 811:../system/include/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 812:../system/include/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 813:../system/include/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 814:../system/include/cmsis/core_cm3.h **** 
 815:../system/include/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 816:../system/include/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 817:../system/include/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 818:../system/include/cmsis/core_cm3.h **** 
 819:../system/include/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 820:../system/include/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 821:../system/include/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 822:../system/include/cmsis/core_cm3.h **** 
 823:../system/include/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 824:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 825:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 826:../system/include/cmsis/core_cm3.h **** 
 827:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 828:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 829:../system/include/cmsis/core_cm3.h **** 
 830:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 831:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 832:../system/include/cmsis/core_cm3.h **** 
 833:../system/include/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 834:../system/include/cmsis/core_cm3.h **** 
 835:../system/include/cmsis/core_cm3.h **** 
 836:../system/include/cmsis/core_cm3.h **** /**
 837:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 838:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 839:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 840:../system/include/cmsis/core_cm3.h ****   @{
 841:../system/include/cmsis/core_cm3.h ****  */
 842:../system/include/cmsis/core_cm3.h **** 
 843:../system/include/cmsis/core_cm3.h **** /**
 844:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 845:../system/include/cmsis/core_cm3.h ****  */
 846:../system/include/cmsis/core_cm3.h **** typedef struct
 847:../system/include/cmsis/core_cm3.h **** {
 848:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 849:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 850:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 851:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 852:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 853:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 854:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 855:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 856:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 857:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 858:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 859:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[1U];
 860:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 861:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 862:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 863:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[1U];
 864:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 865:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 866:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 867:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[1U];
 868:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 869:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 870:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 871:../system/include/cmsis/core_cm3.h **** } DWT_Type;
 872:../system/include/cmsis/core_cm3.h **** 
 873:../system/include/cmsis/core_cm3.h **** /* DWT Control Register Definitions */
 874:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 875:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 876:../system/include/cmsis/core_cm3.h **** 
 877:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 878:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 879:../system/include/cmsis/core_cm3.h **** 
 880:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 881:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 882:../system/include/cmsis/core_cm3.h **** 
 883:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 884:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 885:../system/include/cmsis/core_cm3.h **** 
 886:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 887:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 888:../system/include/cmsis/core_cm3.h **** 
 889:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 890:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 891:../system/include/cmsis/core_cm3.h **** 
 892:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 893:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 894:../system/include/cmsis/core_cm3.h **** 
 895:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 896:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 897:../system/include/cmsis/core_cm3.h **** 
 898:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 899:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 900:../system/include/cmsis/core_cm3.h **** 
 901:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 902:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 903:../system/include/cmsis/core_cm3.h **** 
 904:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 905:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 906:../system/include/cmsis/core_cm3.h **** 
 907:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 908:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 909:../system/include/cmsis/core_cm3.h **** 
 910:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 911:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 912:../system/include/cmsis/core_cm3.h **** 
 913:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 914:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 915:../system/include/cmsis/core_cm3.h **** 
 916:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 917:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 918:../system/include/cmsis/core_cm3.h **** 
 919:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 920:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 921:../system/include/cmsis/core_cm3.h **** 
 922:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 923:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 924:../system/include/cmsis/core_cm3.h **** 
 925:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 926:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 927:../system/include/cmsis/core_cm3.h **** 
 928:../system/include/cmsis/core_cm3.h **** /* DWT CPI Count Register Definitions */
 929:../system/include/cmsis/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 930:../system/include/cmsis/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 931:../system/include/cmsis/core_cm3.h **** 
 932:../system/include/cmsis/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 933:../system/include/cmsis/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 934:../system/include/cmsis/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 935:../system/include/cmsis/core_cm3.h **** 
 936:../system/include/cmsis/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 937:../system/include/cmsis/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 938:../system/include/cmsis/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 939:../system/include/cmsis/core_cm3.h **** 
 940:../system/include/cmsis/core_cm3.h **** /* DWT LSU Count Register Definitions */
 941:../system/include/cmsis/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 942:../system/include/cmsis/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 943:../system/include/cmsis/core_cm3.h **** 
 944:../system/include/cmsis/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 945:../system/include/cmsis/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 946:../system/include/cmsis/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 947:../system/include/cmsis/core_cm3.h **** 
 948:../system/include/cmsis/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 949:../system/include/cmsis/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 950:../system/include/cmsis/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 951:../system/include/cmsis/core_cm3.h **** 
 952:../system/include/cmsis/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 953:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 954:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 955:../system/include/cmsis/core_cm3.h **** 
 956:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 957:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 958:../system/include/cmsis/core_cm3.h **** 
 959:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 960:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 961:../system/include/cmsis/core_cm3.h **** 
 962:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 963:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 964:../system/include/cmsis/core_cm3.h **** 
 965:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 966:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 967:../system/include/cmsis/core_cm3.h **** 
 968:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 969:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 970:../system/include/cmsis/core_cm3.h **** 
 971:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 972:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 973:../system/include/cmsis/core_cm3.h **** 
 974:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 975:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 976:../system/include/cmsis/core_cm3.h **** 
 977:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 978:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 979:../system/include/cmsis/core_cm3.h **** 
 980:../system/include/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 981:../system/include/cmsis/core_cm3.h **** 
 982:../system/include/cmsis/core_cm3.h **** 
 983:../system/include/cmsis/core_cm3.h **** /**
 984:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 985:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 986:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 987:../system/include/cmsis/core_cm3.h ****   @{
 988:../system/include/cmsis/core_cm3.h ****  */
 989:../system/include/cmsis/core_cm3.h **** 
 990:../system/include/cmsis/core_cm3.h **** /**
 991:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 992:../system/include/cmsis/core_cm3.h ****  */
 993:../system/include/cmsis/core_cm3.h **** typedef struct
 994:../system/include/cmsis/core_cm3.h **** {
 995:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 996:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 997:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[2U];
 998:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 999:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[55U];
1000:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1001:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[131U];
1002:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1003:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1004:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1005:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED3[759U];
1006:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1007:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1008:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1009:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED4[1U];
1010:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1011:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1012:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1013:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED5[39U];
1014:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1015:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1016:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED7[8U];
1017:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1018:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1019:../system/include/cmsis/core_cm3.h **** } TPI_Type;
1020:../system/include/cmsis/core_cm3.h **** 
1021:../system/include/cmsis/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1022:../system/include/cmsis/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1023:../system/include/cmsis/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1024:../system/include/cmsis/core_cm3.h **** 
1025:../system/include/cmsis/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1026:../system/include/cmsis/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1027:../system/include/cmsis/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1028:../system/include/cmsis/core_cm3.h **** 
1029:../system/include/cmsis/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1030:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1031:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1032:../system/include/cmsis/core_cm3.h **** 
1033:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1034:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1035:../system/include/cmsis/core_cm3.h **** 
1036:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1037:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1038:../system/include/cmsis/core_cm3.h **** 
1039:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1040:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1041:../system/include/cmsis/core_cm3.h **** 
1042:../system/include/cmsis/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1043:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1044:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1045:../system/include/cmsis/core_cm3.h **** 
1046:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1047:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1048:../system/include/cmsis/core_cm3.h **** 
1049:../system/include/cmsis/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1050:../system/include/cmsis/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1051:../system/include/cmsis/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1052:../system/include/cmsis/core_cm3.h **** 
1053:../system/include/cmsis/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1054:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1055:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1056:../system/include/cmsis/core_cm3.h **** 
1057:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1058:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1059:../system/include/cmsis/core_cm3.h **** 
1060:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1061:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1062:../system/include/cmsis/core_cm3.h **** 
1063:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1064:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1065:../system/include/cmsis/core_cm3.h **** 
1066:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1067:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1068:../system/include/cmsis/core_cm3.h **** 
1069:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1070:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1071:../system/include/cmsis/core_cm3.h **** 
1072:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1073:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1074:../system/include/cmsis/core_cm3.h **** 
1075:../system/include/cmsis/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1076:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1077:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1078:../system/include/cmsis/core_cm3.h **** 
1079:../system/include/cmsis/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1080:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1081:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1082:../system/include/cmsis/core_cm3.h **** 
1083:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1084:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1085:../system/include/cmsis/core_cm3.h **** 
1086:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1087:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1088:../system/include/cmsis/core_cm3.h **** 
1089:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1090:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1091:../system/include/cmsis/core_cm3.h **** 
1092:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1093:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1094:../system/include/cmsis/core_cm3.h **** 
1095:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1096:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1097:../system/include/cmsis/core_cm3.h **** 
1098:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1099:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1100:../system/include/cmsis/core_cm3.h **** 
1101:../system/include/cmsis/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1102:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1103:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1104:../system/include/cmsis/core_cm3.h **** 
1105:../system/include/cmsis/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1106:../system/include/cmsis/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1107:../system/include/cmsis/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1108:../system/include/cmsis/core_cm3.h **** 
1109:../system/include/cmsis/core_cm3.h **** /* TPI DEVID Register Definitions */
1110:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1111:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1112:../system/include/cmsis/core_cm3.h **** 
1113:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1114:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1115:../system/include/cmsis/core_cm3.h **** 
1116:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1117:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1118:../system/include/cmsis/core_cm3.h **** 
1119:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1120:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1121:../system/include/cmsis/core_cm3.h **** 
1122:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1123:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1124:../system/include/cmsis/core_cm3.h **** 
1125:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1126:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1127:../system/include/cmsis/core_cm3.h **** 
1128:../system/include/cmsis/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1129:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1130:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1131:../system/include/cmsis/core_cm3.h **** 
1132:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1133:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1134:../system/include/cmsis/core_cm3.h **** 
1135:../system/include/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1136:../system/include/cmsis/core_cm3.h **** 
1137:../system/include/cmsis/core_cm3.h **** 
1138:../system/include/cmsis/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1139:../system/include/cmsis/core_cm3.h **** /**
1140:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
1141:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1142:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1143:../system/include/cmsis/core_cm3.h ****   @{
1144:../system/include/cmsis/core_cm3.h ****  */
1145:../system/include/cmsis/core_cm3.h **** 
1146:../system/include/cmsis/core_cm3.h **** /**
1147:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1148:../system/include/cmsis/core_cm3.h ****  */
1149:../system/include/cmsis/core_cm3.h **** typedef struct
1150:../system/include/cmsis/core_cm3.h **** {
1151:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1152:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1153:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1154:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1155:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1156:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1157:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1158:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1159:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1160:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1161:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1162:../system/include/cmsis/core_cm3.h **** } MPU_Type;
1163:../system/include/cmsis/core_cm3.h **** 
1164:../system/include/cmsis/core_cm3.h **** /* MPU Type Register Definitions */
1165:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1166:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1167:../system/include/cmsis/core_cm3.h **** 
1168:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1169:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1170:../system/include/cmsis/core_cm3.h **** 
1171:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1172:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1173:../system/include/cmsis/core_cm3.h **** 
1174:../system/include/cmsis/core_cm3.h **** /* MPU Control Register Definitions */
1175:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1176:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1177:../system/include/cmsis/core_cm3.h **** 
1178:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1179:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1180:../system/include/cmsis/core_cm3.h **** 
1181:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1182:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1183:../system/include/cmsis/core_cm3.h **** 
1184:../system/include/cmsis/core_cm3.h **** /* MPU Region Number Register Definitions */
1185:../system/include/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1186:../system/include/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1187:../system/include/cmsis/core_cm3.h **** 
1188:../system/include/cmsis/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1189:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1190:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1191:../system/include/cmsis/core_cm3.h **** 
1192:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1193:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1194:../system/include/cmsis/core_cm3.h **** 
1195:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1196:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1197:../system/include/cmsis/core_cm3.h **** 
1198:../system/include/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1199:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1200:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1201:../system/include/cmsis/core_cm3.h **** 
1202:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1203:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1204:../system/include/cmsis/core_cm3.h **** 
1205:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1206:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1207:../system/include/cmsis/core_cm3.h **** 
1208:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1209:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1210:../system/include/cmsis/core_cm3.h **** 
1211:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1212:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1213:../system/include/cmsis/core_cm3.h **** 
1214:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1215:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1216:../system/include/cmsis/core_cm3.h **** 
1217:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1218:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1219:../system/include/cmsis/core_cm3.h **** 
1220:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1221:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1222:../system/include/cmsis/core_cm3.h **** 
1223:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1224:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1225:../system/include/cmsis/core_cm3.h **** 
1226:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1227:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1228:../system/include/cmsis/core_cm3.h **** 
1229:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_MPU */
1230:../system/include/cmsis/core_cm3.h **** #endif
1231:../system/include/cmsis/core_cm3.h **** 
1232:../system/include/cmsis/core_cm3.h **** 
1233:../system/include/cmsis/core_cm3.h **** /**
1234:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
1235:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1236:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1237:../system/include/cmsis/core_cm3.h ****   @{
1238:../system/include/cmsis/core_cm3.h ****  */
1239:../system/include/cmsis/core_cm3.h **** 
1240:../system/include/cmsis/core_cm3.h **** /**
1241:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1242:../system/include/cmsis/core_cm3.h ****  */
1243:../system/include/cmsis/core_cm3.h **** typedef struct
1244:../system/include/cmsis/core_cm3.h **** {
1245:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1246:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1247:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1248:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1249:../system/include/cmsis/core_cm3.h **** } CoreDebug_Type;
1250:../system/include/cmsis/core_cm3.h **** 
1251:../system/include/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1252:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1253:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1254:../system/include/cmsis/core_cm3.h **** 
1255:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1256:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1257:../system/include/cmsis/core_cm3.h **** 
1258:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1259:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1260:../system/include/cmsis/core_cm3.h **** 
1261:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1262:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1263:../system/include/cmsis/core_cm3.h **** 
1264:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1265:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1266:../system/include/cmsis/core_cm3.h **** 
1267:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1268:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1269:../system/include/cmsis/core_cm3.h **** 
1270:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1271:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1272:../system/include/cmsis/core_cm3.h **** 
1273:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1274:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1275:../system/include/cmsis/core_cm3.h **** 
1276:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1277:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1278:../system/include/cmsis/core_cm3.h **** 
1279:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1280:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1281:../system/include/cmsis/core_cm3.h **** 
1282:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1283:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1284:../system/include/cmsis/core_cm3.h **** 
1285:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1286:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1287:../system/include/cmsis/core_cm3.h **** 
1288:../system/include/cmsis/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1289:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1290:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1291:../system/include/cmsis/core_cm3.h **** 
1292:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1293:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1294:../system/include/cmsis/core_cm3.h **** 
1295:../system/include/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1296:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1297:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1298:../system/include/cmsis/core_cm3.h **** 
1299:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1300:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1301:../system/include/cmsis/core_cm3.h **** 
1302:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1303:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1304:../system/include/cmsis/core_cm3.h **** 
1305:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1306:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1307:../system/include/cmsis/core_cm3.h **** 
1308:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1309:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1310:../system/include/cmsis/core_cm3.h **** 
1311:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1312:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1313:../system/include/cmsis/core_cm3.h **** 
1314:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1315:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1316:../system/include/cmsis/core_cm3.h **** 
1317:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1318:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1319:../system/include/cmsis/core_cm3.h **** 
1320:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1321:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1322:../system/include/cmsis/core_cm3.h **** 
1323:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1324:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1325:../system/include/cmsis/core_cm3.h **** 
1326:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1327:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1328:../system/include/cmsis/core_cm3.h **** 
1329:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1330:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1331:../system/include/cmsis/core_cm3.h **** 
1332:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1333:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1334:../system/include/cmsis/core_cm3.h **** 
1335:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1336:../system/include/cmsis/core_cm3.h **** 
1337:../system/include/cmsis/core_cm3.h **** 
1338:../system/include/cmsis/core_cm3.h **** /**
1339:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
1340:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1341:../system/include/cmsis/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1342:../system/include/cmsis/core_cm3.h ****   @{
1343:../system/include/cmsis/core_cm3.h ****  */
1344:../system/include/cmsis/core_cm3.h **** 
1345:../system/include/cmsis/core_cm3.h **** /**
1346:../system/include/cmsis/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1347:../system/include/cmsis/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:../system/include/cmsis/core_cm3.h ****   \param[in] value  Value of the bit field.
1349:../system/include/cmsis/core_cm3.h ****   \return           Masked and shifted value.
1350:../system/include/cmsis/core_cm3.h **** */
1351:../system/include/cmsis/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1352:../system/include/cmsis/core_cm3.h **** 
1353:../system/include/cmsis/core_cm3.h **** /**
1354:../system/include/cmsis/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1355:../system/include/cmsis/core_cm3.h ****   \param[in] field  Name of the register bit field.
1356:../system/include/cmsis/core_cm3.h ****   \param[in] value  Value of register.
1357:../system/include/cmsis/core_cm3.h ****   \return           Masked and shifted bit field value.
1358:../system/include/cmsis/core_cm3.h **** */
1359:../system/include/cmsis/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1360:../system/include/cmsis/core_cm3.h **** 
1361:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1362:../system/include/cmsis/core_cm3.h **** 
1363:../system/include/cmsis/core_cm3.h **** 
1364:../system/include/cmsis/core_cm3.h **** /**
1365:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
1366:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1367:../system/include/cmsis/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1368:../system/include/cmsis/core_cm3.h ****   @{
1369:../system/include/cmsis/core_cm3.h ****  */
1370:../system/include/cmsis/core_cm3.h **** 
1371:../system/include/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1372:../system/include/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1373:../system/include/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1374:../system/include/cmsis/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1375:../system/include/cmsis/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1376:../system/include/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1377:../system/include/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1378:../system/include/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1379:../system/include/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1380:../system/include/cmsis/core_cm3.h **** 
1381:../system/include/cmsis/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1382:../system/include/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1383:../system/include/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1384:../system/include/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1385:../system/include/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1386:../system/include/cmsis/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1387:../system/include/cmsis/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1388:../system/include/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1389:../system/include/cmsis/core_cm3.h **** 
1390:../system/include/cmsis/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1391:../system/include/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1392:../system/include/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1393:../system/include/cmsis/core_cm3.h **** #endif
1394:../system/include/cmsis/core_cm3.h **** 
1395:../system/include/cmsis/core_cm3.h **** /*@} */
1396:../system/include/cmsis/core_cm3.h **** 
1397:../system/include/cmsis/core_cm3.h **** 
1398:../system/include/cmsis/core_cm3.h **** 
1399:../system/include/cmsis/core_cm3.h **** /*******************************************************************************
1400:../system/include/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
1401:../system/include/cmsis/core_cm3.h ****   Core Function Interface contains:
1402:../system/include/cmsis/core_cm3.h ****   - Core NVIC Functions
1403:../system/include/cmsis/core_cm3.h ****   - Core SysTick Functions
1404:../system/include/cmsis/core_cm3.h ****   - Core Debug Functions
1405:../system/include/cmsis/core_cm3.h ****   - Core Register Access Functions
1406:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
1407:../system/include/cmsis/core_cm3.h **** /**
1408:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1409:../system/include/cmsis/core_cm3.h **** */
1410:../system/include/cmsis/core_cm3.h **** 
1411:../system/include/cmsis/core_cm3.h **** 
1412:../system/include/cmsis/core_cm3.h **** 
1413:../system/include/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1414:../system/include/cmsis/core_cm3.h **** /**
1415:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1416:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1417:../system/include/cmsis/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1418:../system/include/cmsis/core_cm3.h ****   @{
1419:../system/include/cmsis/core_cm3.h ****  */
1420:../system/include/cmsis/core_cm3.h **** 
1421:../system/include/cmsis/core_cm3.h **** /**
1422:../system/include/cmsis/core_cm3.h ****   \brief   Set Priority Grouping
1423:../system/include/cmsis/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1424:../system/include/cmsis/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1425:../system/include/cmsis/core_cm3.h ****            Only values from 0..7 are used.
1426:../system/include/cmsis/core_cm3.h ****            In case of a conflict between priority grouping and available
1427:../system/include/cmsis/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1428:../system/include/cmsis/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1429:../system/include/cmsis/core_cm3.h ****  */
1430:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1431:../system/include/cmsis/core_cm3.h **** {
1432:../system/include/cmsis/core_cm3.h ****   uint32_t reg_value;
1433:../system/include/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1434:../system/include/cmsis/core_cm3.h **** 
1435:../system/include/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1436:../system/include/cmsis/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1437:../system/include/cmsis/core_cm3.h ****   reg_value  =  (reg_value                                   |
1438:../system/include/cmsis/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1439:../system/include/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1440:../system/include/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1441:../system/include/cmsis/core_cm3.h **** }
1442:../system/include/cmsis/core_cm3.h **** 
1443:../system/include/cmsis/core_cm3.h **** 
1444:../system/include/cmsis/core_cm3.h **** /**
1445:../system/include/cmsis/core_cm3.h ****   \brief   Get Priority Grouping
1446:../system/include/cmsis/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1447:../system/include/cmsis/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1448:../system/include/cmsis/core_cm3.h ****  */
1449:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1450:../system/include/cmsis/core_cm3.h **** {
1451:../system/include/cmsis/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1452:../system/include/cmsis/core_cm3.h **** }
1453:../system/include/cmsis/core_cm3.h **** 
1454:../system/include/cmsis/core_cm3.h **** 
1455:../system/include/cmsis/core_cm3.h **** /**
1456:../system/include/cmsis/core_cm3.h ****   \brief   Enable External Interrupt
1457:../system/include/cmsis/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1458:../system/include/cmsis/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1459:../system/include/cmsis/core_cm3.h ****  */
1460:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1461:../system/include/cmsis/core_cm3.h **** {
1462:../system/include/cmsis/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 195              		.loc 2 1462 0
 196 00ee 064B     		ldr	r3, .L19+8
 197 00f0 2022     		movs	r2, #32
 198 00f2 5A60     		str	r2, [r3, #4]
 199              	.LVL12:
 200 00f4 CFE7     		b	.L9
 201              	.LVL13:
 202              	.L18:
 203              	.LBE11:
 204              	.LBE10:
 205              	.LBB12:
 206              	.LBB13:
 207 00f6 044B     		ldr	r3, .L19+8
 208 00f8 4022     		movs	r2, #64
 209 00fa 5A60     		str	r2, [r3, #4]
 210              	.LVL14:
 211 00fc CBE7     		b	.L9
 212              	.L20:
 213 00fe 00BF     		.align	2
 214              	.L19:
 215 0100 00380140 		.word	1073821696
 216 0104 00440040 		.word	1073759232
 217 0108 00E100E0 		.word	-536813312
 218              	.LBE13:
 219              	.LBE12:
 220              		.cfi_endproc
 221              	.LFE70:
 223              		.section	.text.srl_close,"ax",%progbits
 224              		.align	1
 225              		.global	srl_close
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 231              	srl_close:
 232              	.LFB71:
 109:../system/src/drivers/serial.c **** 
 110:../system/src/drivers/serial.c **** void srl_close(srl_context_t *ctx) {
 233              		.loc 1 110 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              	.LVL15:
 238 0000 10B5     		push	{r4, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 4, -8
 241              		.cfi_offset 14, -4
 242 0002 0446     		mov	r4, r0
 111:../system/src/drivers/serial.c **** 	USART_DeInit(ctx->port);
 243              		.loc 1 111 0
 244 0004 0068     		ldr	r0, [r0]
 245              	.LVL16:
 246 0006 FFF7FEFF 		bl	USART_DeInit
 247              	.LVL17:
 112:../system/src/drivers/serial.c **** 
 113:../system/src/drivers/serial.c **** 	if (ctx->te_port != NULL && ctx->te_pin != 0) {
 248              		.loc 1 113 0
 249 000a E068     		ldr	r0, [r4, #12]
 250 000c 08B1     		cbz	r0, .L22
 251              		.loc 1 113 0 is_stmt 0 discriminator 1
 252 000e 218A     		ldrh	r1, [r4, #16]
 253 0010 29B9     		cbnz	r1, .L24
 254              	.L22:
 114:../system/src/drivers/serial.c **** 		GPIO_ResetBits(ctx->te_port, ctx->te_pin);
 115:../system/src/drivers/serial.c **** 	}
 116:../system/src/drivers/serial.c **** 
 117:../system/src/drivers/serial.c **** 	ctx->srl_rx_state = SRL_RX_NOT_CONFIG;
 255              		.loc 1 117 0 is_stmt 1
 256 0012 0023     		movs	r3, #0
 257 0014 84F84430 		strb	r3, [r4, #68]
 118:../system/src/drivers/serial.c **** 	ctx->srl_tx_state = SRL_TX_NOT_CONFIG;
 258              		.loc 1 118 0
 259 0018 84F84530 		strb	r3, [r4, #69]
 119:../system/src/drivers/serial.c **** }
 260              		.loc 1 119 0
 261 001c 10BD     		pop	{r4, pc}
 262              	.LVL18:
 263              	.L24:
 114:../system/src/drivers/serial.c **** 		GPIO_ResetBits(ctx->te_port, ctx->te_pin);
 264              		.loc 1 114 0
 265 001e FFF7FEFF 		bl	GPIO_ResetBits
 266              	.LVL19:
 267 0022 F6E7     		b	.L22
 268              		.cfi_endproc
 269              	.LFE71:
 271              		.section	.text.srl_keep_timeout,"ax",%progbits
 272              		.align	1
 273              		.global	srl_keep_timeout
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu softvfp
 279              	srl_keep_timeout:
 280              	.LFB72:
 120:../system/src/drivers/serial.c **** 
 121:../system/src/drivers/serial.c **** // this function shall be called in 10ms periods by some timer to check the timeout
 122:../system/src/drivers/serial.c **** // during receive. This method works differently depends on what receive mode was initiaded
 123:../system/src/drivers/serial.c **** //
 124:../system/src/drivers/serial.c **** // if start & stop characters are in use the timeout will be calculted from the time when
 125:../system/src/drivers/serial.c **** // start character was received and operation mode has been switched from SRL_WAITING_TO_RX
 126:../system/src/drivers/serial.c **** // to SRL_RXING
 127:../system/src/drivers/serial.c **** //
 128:../system/src/drivers/serial.c **** // if no start & stop character is used by software timeout is calculated from the time when
 129:../system/src/drivers/serial.c **** // first character was received after calling srl_receive_data
 130:../system/src/drivers/serial.c **** void srl_keep_timeout(srl_context_t *ctx) {
 281              		.loc 1 130 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL20:
 131:../system/src/drivers/serial.c **** 	if (ctx->srl_rx_state != SRL_RX_NOT_CONFIG && ctx->srl_rx_timeout_enable == 1) {
 287              		.loc 1 131 0
 288 0000 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 289 0004 1BB1     		cbz	r3, .L26
 290              		.loc 1 131 0 is_stmt 0 discriminator 1
 291 0006 90F82D30 		ldrb	r3, [r0, #45]	@ zero_extendqisi2
 292 000a 012B     		cmp	r3, #1
 293 000c 06D0     		beq	.L28
 294              	.L26:
 132:../system/src/drivers/serial.c **** 
 133:../system/src/drivers/serial.c **** 		// checking if flag to check a timeout is raised
 134:../system/src/drivers/serial.c **** 		if (ctx->srl_rx_timeout_calc_started == 1) {
 135:../system/src/drivers/serial.c **** 
 136:../system/src/drivers/serial.c **** 			// check if timeout expired
 137:../system/src/drivers/serial.c **** 			if (master_time - ctx->srl_rx_start_time > ctx->srl_rx_timeout_trigger_value_in_msec) {
 138:../system/src/drivers/serial.c **** 				// disable the receiving part of UART, disable interrupt and switch to an error state
 139:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_RE);
 140:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_RXNEIE);
 141:../system/src/drivers/serial.c **** 
 142:../system/src/drivers/serial.c **** 				ctx->srl_rx_state = SRL_RX_ERROR;
 143:../system/src/drivers/serial.c **** 
 144:../system/src/drivers/serial.c **** 				ctx->srl_rx_error_reason = SRL_ERR_TIMEOUT_RECEIVING;
 145:../system/src/drivers/serial.c **** 			}
 146:../system/src/drivers/serial.c **** 		}
 147:../system/src/drivers/serial.c **** 
 148:../system/src/drivers/serial.c **** 	}
 149:../system/src/drivers/serial.c **** 	else {
 150:../system/src/drivers/serial.c **** 		;
 151:../system/src/drivers/serial.c **** 	}
 152:../system/src/drivers/serial.c **** 
 153:../system/src/drivers/serial.c **** 	if ((ctx->srl_rx_state == SRL_WAITING_TO_RX || ctx->srl_rx_state == SRL_RXING ) && ctx->srl_rx_tim
 295              		.loc 1 153 0 is_stmt 1
 296 000e 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 297 0012 023B     		subs	r3, r3, #2
 298 0014 DBB2     		uxtb	r3, r3
 299 0016 012B     		cmp	r3, #1
 300 0018 20D9     		bls	.L29
 301              	.L25:
 154:../system/src/drivers/serial.c **** 		if (master_time - ctx->srl_rx_waiting_start_time > ctx->srl_rx_timeout_trigger_value_in_msec) {
 155:../system/src/drivers/serial.c **** 			ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_RE);
 156:../system/src/drivers/serial.c **** 			ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_RXNEIE);
 157:../system/src/drivers/serial.c **** 
 158:../system/src/drivers/serial.c **** 			ctx->srl_rx_state = SRL_RX_ERROR;
 159:../system/src/drivers/serial.c **** 
 160:../system/src/drivers/serial.c **** 			ctx->srl_rx_error_reason = SRL_ERR_TIMEOUT_WAITING;
 161:../system/src/drivers/serial.c **** 		}
 162:../system/src/drivers/serial.c **** 	}
 163:../system/src/drivers/serial.c **** }
 302              		.loc 1 163 0
 303 001a 7047     		bx	lr
 304              	.L28:
 134:../system/src/drivers/serial.c **** 
 305              		.loc 1 134 0
 306 001c 90F82F30 		ldrb	r3, [r0, #47]	@ zero_extendqisi2
 307 0020 012B     		cmp	r3, #1
 308 0022 F4D1     		bne	.L26
 137:../system/src/drivers/serial.c **** 				// disable the receiving part of UART, disable interrupt and switch to an error state
 309              		.loc 1 137 0
 310 0024 826B     		ldr	r2, [r0, #56]
 311 0026 1D4B     		ldr	r3, .L30
 312 0028 1B68     		ldr	r3, [r3]
 313 002a 9B1A     		subs	r3, r3, r2
 314 002c 426B     		ldr	r2, [r0, #52]
 315 002e 9342     		cmp	r3, r2
 316 0030 EDD9     		bls	.L26
 139:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_RXNEIE);
 317              		.loc 1 139 0
 318 0032 0268     		ldr	r2, [r0]
 319 0034 9389     		ldrh	r3, [r2, #12]
 320 0036 9BB2     		uxth	r3, r3
 321 0038 23F00403 		bic	r3, r3, #4
 322 003c 9BB2     		uxth	r3, r3
 323 003e 9381     		strh	r3, [r2, #12]	@ movhi
 140:../system/src/drivers/serial.c **** 
 324              		.loc 1 140 0
 325 0040 0268     		ldr	r2, [r0]
 326 0042 9389     		ldrh	r3, [r2, #12]
 327 0044 9BB2     		uxth	r3, r3
 328 0046 23F02003 		bic	r3, r3, #32
 329 004a 9BB2     		uxth	r3, r3
 330 004c 9381     		strh	r3, [r2, #12]	@ movhi
 142:../system/src/drivers/serial.c **** 
 331              		.loc 1 142 0
 332 004e 0523     		movs	r3, #5
 333 0050 80F84430 		strb	r3, [r0, #68]
 144:../system/src/drivers/serial.c **** 			}
 334              		.loc 1 144 0
 335 0054 0223     		movs	r3, #2
 336 0056 80F84630 		strb	r3, [r0, #70]
 337 005a D8E7     		b	.L26
 338              	.L29:
 153:../system/src/drivers/serial.c **** 		if (master_time - ctx->srl_rx_waiting_start_time > ctx->srl_rx_timeout_trigger_value_in_msec) {
 339              		.loc 1 153 0 discriminator 1
 340 005c 90F82E30 		ldrb	r3, [r0, #46]	@ zero_extendqisi2
 341 0060 012B     		cmp	r3, #1
 342 0062 DAD1     		bne	.L25
 154:../system/src/drivers/serial.c **** 			ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_RE);
 343              		.loc 1 154 0
 344 0064 C26B     		ldr	r2, [r0, #60]
 345 0066 0D4B     		ldr	r3, .L30
 346 0068 1B68     		ldr	r3, [r3]
 347 006a 9B1A     		subs	r3, r3, r2
 348 006c 426B     		ldr	r2, [r0, #52]
 349 006e 9342     		cmp	r3, r2
 350 0070 D3D9     		bls	.L25
 155:../system/src/drivers/serial.c **** 			ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_RXNEIE);
 351              		.loc 1 155 0
 352 0072 0268     		ldr	r2, [r0]
 353 0074 9389     		ldrh	r3, [r2, #12]
 354 0076 9BB2     		uxth	r3, r3
 355 0078 23F00403 		bic	r3, r3, #4
 356 007c 9BB2     		uxth	r3, r3
 357 007e 9381     		strh	r3, [r2, #12]	@ movhi
 156:../system/src/drivers/serial.c **** 
 358              		.loc 1 156 0
 359 0080 0268     		ldr	r2, [r0]
 360 0082 9389     		ldrh	r3, [r2, #12]
 361 0084 9BB2     		uxth	r3, r3
 362 0086 23F02003 		bic	r3, r3, #32
 363 008a 9BB2     		uxth	r3, r3
 364 008c 9381     		strh	r3, [r2, #12]	@ movhi
 158:../system/src/drivers/serial.c **** 
 365              		.loc 1 158 0
 366 008e 0523     		movs	r3, #5
 367 0090 80F84430 		strb	r3, [r0, #68]
 160:../system/src/drivers/serial.c **** 		}
 368              		.loc 1 160 0
 369 0094 0123     		movs	r3, #1
 370 0096 80F84630 		strb	r3, [r0, #70]
 371              		.loc 1 163 0
 372 009a BEE7     		b	.L25
 373              	.L31:
 374              		.align	2
 375              	.L30:
 376 009c 00000000 		.word	master_time
 377              		.cfi_endproc
 378              	.LFE72:
 380              		.section	.text.srl_send_data,"ax",%progbits
 381              		.align	1
 382              		.global	srl_send_data
 383              		.syntax unified
 384              		.thumb
 385              		.thumb_func
 386              		.fpu softvfp
 388              	srl_send_data:
 389              	.LFB73:
 164:../system/src/drivers/serial.c **** 
 165:../system/src/drivers/serial.c **** uint8_t srl_send_data(srl_context_t *ctx, uint8_t* data, uint8_t mode, uint16_t leng, uint8_t inter
 390              		.loc 1 165 0
 391              		.cfi_startproc
 392              		@ args = 4, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              	.LVL21:
 395 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 396              		.cfi_def_cfa_offset 24
 397              		.cfi_offset 4, -24
 398              		.cfi_offset 5, -20
 399              		.cfi_offset 6, -16
 400              		.cfi_offset 7, -12
 401              		.cfi_offset 8, -8
 402              		.cfi_offset 14, -4
 403 0004 9DF81870 		ldrb	r7, [sp, #24]	@ zero_extendqisi2
 166:../system/src/drivers/serial.c **** 	if (ctx->srl_tx_state == SRL_TXING)
 404              		.loc 1 166 0
 405 0008 90F84540 		ldrb	r4, [r0, #69]	@ zero_extendqisi2
 406 000c 032C     		cmp	r4, #3
 407 000e 55D0     		beq	.L42
 408 0010 1E46     		mov	r6, r3
 409 0012 9046     		mov	r8, r2
 410 0014 0D46     		mov	r5, r1
 411 0016 0446     		mov	r4, r0
 167:../system/src/drivers/serial.c **** 		return SRL_BUSY;
 168:../system/src/drivers/serial.c **** 
 169:../system/src/drivers/serial.c **** 	/* Wesja z dnia 04.09.2013
 170:../system/src/drivers/serial.c **** 	
 171:../system/src/drivers/serial.c **** 		char* data - wskaznik na tablice z danymi do przeslania
 172:../system/src/drivers/serial.c **** 		char mode - tryb pracy ktory okresla czy ma wysylac okreslona liczbe znakow
 173:../system/src/drivers/serial.c **** 					czy wysylac wszystko do napotkania 0x00
 174:../system/src/drivers/serial.c **** 		short leng - ilosc znakow do wyslania istotna tylko gdy mode = 1
 175:../system/src/drivers/serial.c **** 		internal_external - ustawienie 0 spowoduje skopiowanie do wewnentrznego bufora i wysylanie z nieg
 176:../system/src/drivers/serial.c **** 		jedynka spowoduje wysylanie bezposrednio z wewnetrznego
 177:../system/src/drivers/serial.c **** 		 */
 178:../system/src/drivers/serial.c **** 	int i;
 179:../system/src/drivers/serial.c **** 
 180:../system/src/drivers/serial.c **** 	// the bytes counter needs to be set to 1 as the first byte is sent in this function
 181:../system/src/drivers/serial.c **** 	ctx->srl_tx_bytes_counter = 1;
 412              		.loc 1 181 0
 413 0018 0123     		movs	r3, #1
 414              	.LVL22:
 415 001a 4384     		strh	r3, [r0, #34]	@ movhi
 182:../system/src/drivers/serial.c **** 
 183:../system/src/drivers/serial.c **** 	// if an user want to send data using internal buffer
 184:../system/src/drivers/serial.c **** 	if (internal_external == 0) {
 416              		.loc 1 184 0
 417 001c 4FBB     		cbnz	r7, .L34
 185:../system/src/drivers/serial.c **** 
 186:../system/src/drivers/serial.c **** 		// if data at the input is too long to fit in the buffer
 187:../system/src/drivers/serial.c **** 		if (leng >= ctx->srl_rx_buf_ln)
 418              		.loc 1 187 0
 419 001e 838B     		ldrh	r3, [r0, #28]
 420 0020 B342     		cmp	r3, r6
 421 0022 01D8     		bhi	.L49
 188:../system/src/drivers/serial.c **** 			return SRL_DATA_TOO_LONG;
 422              		.loc 1 188 0
 423 0024 0120     		movs	r0, #1
 424              	.LVL23:
 425 0026 47E0     		b	.L33
 426              	.LVL24:
 427              	.L49:
 189:../system/src/drivers/serial.c **** 
 190:../system/src/drivers/serial.c **** 		// setting a pointer to transmit buffer to the internal buffer inside the driver
 191:../system/src/drivers/serial.c **** 		ctx->srl_tx_buf_pointer = srl_usart1_tx_buffer;
 428              		.loc 1 191 0
 429 0028 2648     		ldr	r0, .L50
 430              	.LVL25:
 431 002a 6061     		str	r0, [r4, #20]
 192:../system/src/drivers/serial.c **** 
 193:../system/src/drivers/serial.c **** 		ctx->srl_tx_buf_ln = TX_BUFFER_1_LN;
 432              		.loc 1 193 0
 433 002c 4FF40072 		mov	r2, #512
 434              	.LVL26:
 435 0030 E283     		strh	r2, [r4, #30]	@ movhi
 194:../system/src/drivers/serial.c **** 
 195:../system/src/drivers/serial.c **** 		// cleaning the buffer from previous content
 196:../system/src/drivers/serial.c **** 		memset(ctx->srl_tx_buf_pointer, 0x00, TX_BUFFER_1_LN);
 436              		.loc 1 196 0
 437 0032 0021     		movs	r1, #0
 438              	.LVL27:
 439 0034 FFF7FEFF 		bl	memset
 440              	.LVL28:
 197:../system/src/drivers/serial.c **** 
 198:../system/src/drivers/serial.c **** 		// copying the data from provided pointer to internal buffer
 199:../system/src/drivers/serial.c **** 		if (mode == 0) {
 441              		.loc 1 199 0
 442 0038 B8F1000F 		cmp	r8, #0
 443 003c 0FD0     		beq	.L44
 200:../system/src/drivers/serial.c **** 			// copying everything till the 0x00 is spoted or till the buffer border is reached
 201:../system/src/drivers/serial.c **** 			for (i = 0; (i < TX_BUFFER_1_LN && *(data+i) != '\0'); i++)
 202:../system/src/drivers/serial.c **** 				ctx->srl_tx_buf_pointer[i]=data[i];
 203:../system/src/drivers/serial.c **** 			ctx->srl_tx_bytes_req = i;
 204:../system/src/drivers/serial.c **** 		}
 205:../system/src/drivers/serial.c **** 		else if (mode == 1) {
 444              		.loc 1 205 0
 445 003e B8F1010F 		cmp	r8, #1
 446 0042 1BD1     		bne	.L39
 206:../system/src/drivers/serial.c **** 			// we don't need to check against buffer size because this was confirmed already
 207:../system/src/drivers/serial.c **** 			for (i = 0; i<=leng ; i++)
 447              		.loc 1 207 0
 448 0044 0023     		movs	r3, #0
 449 0046 10E0     		b	.L40
 450              	.LVL29:
 451              	.L38:
 202:../system/src/drivers/serial.c **** 			ctx->srl_tx_bytes_req = i;
 452              		.loc 1 202 0 discriminator 4
 453 0048 6169     		ldr	r1, [r4, #20]
 454 004a CA54     		strb	r2, [r1, r3]
 201:../system/src/drivers/serial.c **** 				ctx->srl_tx_buf_pointer[i]=data[i];
 455              		.loc 1 201 0 discriminator 4
 456 004c 0133     		adds	r3, r3, #1
 457              	.LVL30:
 458              	.L35:
 201:../system/src/drivers/serial.c **** 				ctx->srl_tx_buf_pointer[i]=data[i];
 459              		.loc 1 201 0 is_stmt 0 discriminator 1
 460 004e B3F5007F 		cmp	r3, #512
 461 0052 02DA     		bge	.L37
 201:../system/src/drivers/serial.c **** 				ctx->srl_tx_buf_pointer[i]=data[i];
 462              		.loc 1 201 0 discriminator 3
 463 0054 EA5C     		ldrb	r2, [r5, r3]	@ zero_extendqisi2
 464 0056 002A     		cmp	r2, #0
 465 0058 F6D1     		bne	.L38
 466              	.L37:
 203:../system/src/drivers/serial.c **** 		}
 467              		.loc 1 203 0 is_stmt 1
 468 005a E384     		strh	r3, [r4, #38]	@ movhi
 469 005c 0EE0     		b	.L39
 470              	.LVL31:
 471              	.L44:
 201:../system/src/drivers/serial.c **** 				ctx->srl_tx_buf_pointer[i]=data[i];
 472              		.loc 1 201 0
 473 005e 0023     		movs	r3, #0
 474 0060 F5E7     		b	.L35
 475              	.LVL32:
 476              	.L41:
 208:../system/src/drivers/serial.c **** 				ctx->srl_tx_buf_pointer[i]=data[i];
 477              		.loc 1 208 0 discriminator 3
 478 0062 6269     		ldr	r2, [r4, #20]
 479 0064 E95C     		ldrb	r1, [r5, r3]	@ zero_extendqisi2
 480 0066 D154     		strb	r1, [r2, r3]
 207:../system/src/drivers/serial.c **** 				ctx->srl_tx_buf_pointer[i]=data[i];
 481              		.loc 1 207 0 discriminator 3
 482 0068 0133     		adds	r3, r3, #1
 483              	.LVL33:
 484              	.L40:
 207:../system/src/drivers/serial.c **** 				ctx->srl_tx_buf_pointer[i]=data[i];
 485              		.loc 1 207 0 is_stmt 0 discriminator 1
 486 006a 9E42     		cmp	r6, r3
 487 006c F9DA     		bge	.L41
 209:../system/src/drivers/serial.c **** 			ctx->srl_tx_bytes_req = leng;
 488              		.loc 1 209 0 is_stmt 1
 489 006e E684     		strh	r6, [r4, #38]	@ movhi
 490 0070 04E0     		b	.L39
 491              	.LVL34:
 492              	.L34:
 210:../system/src/drivers/serial.c **** 		}
 211:../system/src/drivers/serial.c **** 	}
 212:../system/src/drivers/serial.c **** 	else if (internal_external == 1) {
 493              		.loc 1 212 0
 494 0072 012F     		cmp	r7, #1
 495 0074 24D1     		bne	.L46
 213:../system/src/drivers/serial.c **** 		ctx->srl_tx_buf_pointer = data;
 496              		.loc 1 213 0
 497 0076 6161     		str	r1, [r4, #20]
 214:../system/src/drivers/serial.c **** 		ctx->srl_tx_bytes_req = leng;
 498              		.loc 1 214 0
 499 0078 C684     		strh	r6, [r0, #38]	@ movhi
 215:../system/src/drivers/serial.c **** 		ctx->srl_tx_buf_ln = leng;
 500              		.loc 1 215 0
 501 007a C683     		strh	r6, [r0, #30]	@ movhi
 502              	.LVL35:
 503              	.L39:
 216:../system/src/drivers/serial.c **** 	}
 217:../system/src/drivers/serial.c **** 	else return SRL_WRONG_BUFFER_PARAM;
 218:../system/src/drivers/serial.c **** 
 219:../system/src/drivers/serial.c **** //	if (ctx->te_port != 0)
 220:../system/src/drivers/serial.c **** //		GPIO_SetBits(ctx->te_port, ctx->te_pin);
 221:../system/src/drivers/serial.c **** 
 222:../system/src/drivers/serial.c **** 	// enabling transmitter
 223:../system/src/drivers/serial.c **** 	ctx->port->CR1 |= USART_CR1_TE;
 504              		.loc 1 223 0
 505 007c 2268     		ldr	r2, [r4]
 506 007e 9389     		ldrh	r3, [r2, #12]
 507 0080 43F00803 		orr	r3, r3, #8
 508 0084 9381     		strh	r3, [r2, #12]	@ movhi
 224:../system/src/drivers/serial.c **** 	ctx->port->SR &= (0xFFFFFFFF ^ USART_SR_TC);
 509              		.loc 1 224 0
 510 0086 2268     		ldr	r2, [r4]
 511 0088 1388     		ldrh	r3, [r2]
 512 008a 9BB2     		uxth	r3, r3
 513 008c 23F04003 		bic	r3, r3, #64
 514 0090 9BB2     		uxth	r3, r3
 515 0092 1380     		strh	r3, [r2]	@ movhi
 225:../system/src/drivers/serial.c **** 	ctx->port->DR = ctx->srl_tx_buf_pointer[0];
 516              		.loc 1 225 0
 517 0094 6269     		ldr	r2, [r4, #20]
 518 0096 2368     		ldr	r3, [r4]
 519 0098 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 520 009a 9A80     		strh	r2, [r3, #4]	@ movhi
 226:../system/src/drivers/serial.c **** 	ctx->srl_tx_state = SRL_TXING;
 521              		.loc 1 226 0
 522 009c 0323     		movs	r3, #3
 523 009e 84F84530 		strb	r3, [r4, #69]
 227:../system/src/drivers/serial.c **** 	ctx->port->CR1 |= USART_CR1_TXEIE;				// przerwanie zg�aszane kiedy rejsetr DR jest pusty
 524              		.loc 1 227 0
 525 00a2 2268     		ldr	r2, [r4]
 526 00a4 9389     		ldrh	r3, [r2, #12]
 527 00a6 43F08003 		orr	r3, r3, #128
 528 00aa 9381     		strh	r3, [r2, #12]	@ movhi
 228:../system/src/drivers/serial.c **** 	ctx->port->CR1 |= USART_CR1_TCIE;				// przerwanie zg�aszane po transmisji bajtu
 529              		.loc 1 228 0
 530 00ac 2268     		ldr	r2, [r4]
 531 00ae 9389     		ldrh	r3, [r2, #12]
 532 00b0 43F04003 		orr	r3, r3, #64
 533 00b4 9381     		strh	r3, [r2, #12]	@ movhi
 229:../system/src/drivers/serial.c **** 												// je�eli rejestr DR jest nadal pusty
 230:../system/src/drivers/serial.c **** 	return SRL_OK;
 534              		.loc 1 230 0
 535 00b6 0020     		movs	r0, #0
 536              	.LVL36:
 537              	.L33:
 231:../system/src/drivers/serial.c **** 
 232:../system/src/drivers/serial.c **** }
 538              		.loc 1 232 0
 539 00b8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 540              	.LVL37:
 541              	.L42:
 167:../system/src/drivers/serial.c **** 
 542              		.loc 1 167 0
 543 00bc 0220     		movs	r0, #2
 544              	.LVL38:
 545 00be FBE7     		b	.L33
 546              	.LVL39:
 547              	.L46:
 217:../system/src/drivers/serial.c **** 
 548              		.loc 1 217 0
 549 00c0 0320     		movs	r0, #3
 550              	.LVL40:
 551 00c2 F9E7     		b	.L33
 552              	.L51:
 553              		.align	2
 554              	.L50:
 555 00c4 00000000 		.word	.LANCHOR0
 556              		.cfi_endproc
 557              	.LFE73:
 559              		.section	.text.srl_start_tx,"ax",%progbits
 560              		.align	1
 561              		.global	srl_start_tx
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 565              		.fpu softvfp
 567              	srl_start_tx:
 568              	.LFB74:
 233:../system/src/drivers/serial.c **** 
 234:../system/src/drivers/serial.c **** /**
 235:../system/src/drivers/serial.c ****  * This function assumes than
 236:../system/src/drivers/serial.c ****  */
 237:../system/src/drivers/serial.c **** uint8_t srl_start_tx(srl_context_t *ctx, short leng) {
 569              		.loc 1 237 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 574              	.LVL41:
 238:../system/src/drivers/serial.c **** 	if (ctx->srl_tx_state == SRL_TXING)
 575              		.loc 1 238 0
 576 0000 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 577 0004 032B     		cmp	r3, #3
 578 0006 30D0     		beq	.L55
 239:../system/src/drivers/serial.c **** 		return SRL_BUSY;
 240:../system/src/drivers/serial.c **** 
 241:../system/src/drivers/serial.c **** 	// if data at the input is too long to fit in the buffer
 242:../system/src/drivers/serial.c **** 	if (leng >= ctx->srl_rx_buf_ln)
 579              		.loc 1 242 0
 580 0008 838B     		ldrh	r3, [r0, #28]
 581 000a 9942     		cmp	r1, r3
 582 000c 2FDA     		bge	.L56
 243:../system/src/drivers/serial.c **** 		return SRL_DATA_TOO_LONG;
 244:../system/src/drivers/serial.c **** 
 245:../system/src/drivers/serial.c **** 	ctx->srl_tx_bytes_req = leng;
 583              		.loc 1 245 0
 584 000e C184     		strh	r1, [r0, #38]	@ movhi
 246:../system/src/drivers/serial.c **** 
 247:../system/src/drivers/serial.c **** 	// setting a pointer to transmit buffer to the internal buffer inside the driver
 248:../system/src/drivers/serial.c **** 	//ctx->srl_tx_buf_pointer = srl_usart1_tx_buffer;
 249:../system/src/drivers/serial.c **** 
 250:../system/src/drivers/serial.c **** //	if (ctx->te_port != 0)
 251:../system/src/drivers/serial.c **** //		GPIO_SetBits(ctx->te_port, ctx->te_pin);
 252:../system/src/drivers/serial.c **** 
 253:../system/src/drivers/serial.c **** 	// check if delay should be applied to transmission
 254:../system/src/drivers/serial.c **** 	if (ctx->srl_tx_start_time == 0xFFFFFFFFu) {
 585              		.loc 1 254 0
 586 0010 036C     		ldr	r3, [r0, #64]
 587 0012 B3F1FF3F 		cmp	r3, #-1
 588 0016 07D0     		beq	.L57
 255:../system/src/drivers/serial.c **** 		// 0xFFFFFFFF is a magic number which disables the pre-tx delay
 256:../system/src/drivers/serial.c **** 		ctx->port->CR1 |= USART_CR1_TE;
 257:../system/src/drivers/serial.c **** 		ctx->port->SR &= (0xFFFFFFFF ^ USART_SR_TC);
 258:../system/src/drivers/serial.c **** 		ctx->port->DR = ctx->srl_tx_buf_pointer[0];
 259:../system/src/drivers/serial.c **** 
 260:../system/src/drivers/serial.c **** 		// the bytes counter needs to be set to 1 as the first byte is sent in this function
 261:../system/src/drivers/serial.c **** 		ctx->srl_tx_bytes_counter = 1;
 262:../system/src/drivers/serial.c **** 
 263:../system/src/drivers/serial.c **** 		ctx->srl_tx_state = SRL_TXING;
 264:../system/src/drivers/serial.c **** 
 265:../system/src/drivers/serial.c **** 		ctx->port->CR1 |= USART_CR1_TXEIE;
 266:../system/src/drivers/serial.c **** 		ctx->port->CR1 |= USART_CR1_TCIE;
 267:../system/src/drivers/serial.c **** 
 268:../system/src/drivers/serial.c **** 	}
 269:../system/src/drivers/serial.c **** 	else {
 270:../system/src/drivers/serial.c **** 		ctx->srl_tx_state = SRL_TX_WAITING;
 589              		.loc 1 270 0
 590 0018 0223     		movs	r3, #2
 591 001a 80F84530 		strb	r3, [r0, #69]
 592              	.LBB14:
 593              	.LBB15:
 594              		.file 3 "../include/main.h"
   1:../include/main.h **** #ifndef MAIN_H_
   2:../include/main.h **** #define MAIN_H_
   3:../include/main.h **** 
   4:../include/main.h **** #include "aprs/ax25.h"
   5:../include/main.h **** #include "drivers/serial.h"
   6:../include/main.h **** #include "config_data.h"
   7:../include/main.h **** 
   8:../include/main.h **** #define SW_VER "EA00"
   9:../include/main.h **** #define SW_DATE "23052021"
  10:../include/main.h **** 
  11:../include/main.h **** #define SYSTICK_TICKS_PER_SECONDS 100
  12:../include/main.h **** #define SYSTICK_TICKS_PERIOD 10
  13:../include/main.h **** 
  14:../include/main.h **** #define INTERNAL_WATCHDOG
  15:../include/main.h **** #define EXTERNAL_WATCHDOG
  16:../include/main.h **** 
  17:../include/main.h **** #define PWR_SWITCH_BOTH
  18:../include/main.h **** 
  19:../include/main.h **** #define OWN_APRS_MSG_LN 	160
  20:../include/main.h **** 
  21:../include/main.h **** extern uint32_t master_time;
  22:../include/main.h **** 
  23:../include/main.h **** extern const config_data_mode_t * main_config_data_mode;
  24:../include/main.h **** extern const config_data_basic_t * main_config_data_basic;
  25:../include/main.h **** extern const config_data_wx_sources_t * main_config_data_wx_sources;
  26:../include/main.h **** extern const config_data_umb_t * main_config_data_umb;
  27:../include/main.h **** extern const config_data_rtu_t * main_config_data_rtu;
  28:../include/main.h **** 
  29:../include/main.h **** extern int32_t main_wx_sensors_pool_timer;
  30:../include/main.h **** extern int32_t main_one_minute_pool_timer;
  31:../include/main.h **** extern int32_t main_one_second_pool_timer;
  32:../include/main.h **** extern int32_t main_two_second_pool_timer;
  33:../include/main.h **** extern int32_t main_ten_second_pool_timer;
  34:../include/main.h **** 
  35:../include/main.h **** extern AX25Ctx main_ax25;
  36:../include/main.h **** extern Afsk main_afsk;
  37:../include/main.h **** 
  38:../include/main.h **** extern AX25Call main_own_path[3];
  39:../include/main.h **** extern uint8_t main_own_path_ln;
  40:../include/main.h **** extern uint8_t main_own_aprs_msg_len;
  41:../include/main.h **** extern char main_own_aprs_msg[OWN_APRS_MSG_LN];
  42:../include/main.h **** 
  43:../include/main.h **** extern char main_string_latitude[9];
  44:../include/main.h **** extern char main_string_longitude[9];
  45:../include/main.h **** 
  46:../include/main.h **** extern char main_symbol_f;
  47:../include/main.h **** extern char main_symbol_s;
  48:../include/main.h **** 
  49:../include/main.h **** extern srl_context_t* main_kiss_srl_ctx_ptr;
  50:../include/main.h **** extern srl_context_t* main_wx_srl_ctx_ptr;
  51:../include/main.h **** 
  52:../include/main.h **** extern  uint8_t main_kiss_enabled;
  53:../include/main.h **** 
  54:../include/main.h **** extern char after_tx_lock;
  55:../include/main.h **** 
  56:../include/main.h **** extern unsigned short rx10m, tx10m, digi10m, digidrop10m, kiss10m;
  57:../include/main.h **** 
  58:../include/main.h **** uint16_t main_get_adc_sample(void);
  59:../include/main.h **** 
  60:../include/main.h **** void main_service_cpu_load_ticks(void);
  61:../include/main.h **** 
  62:../include/main.h **** inline uint32_t main_get_master_time(void) {
  63:../include/main.h **** 	return master_time;
 595              		.loc 3 63 0
 596 001e 154B     		ldr	r3, .L58
 597 0020 1B68     		ldr	r3, [r3]
 598              	.LBE15:
 599              	.LBE14:
 271:../system/src/drivers/serial.c **** 		ctx->srl_tx_start_time = main_get_master_time();
 600              		.loc 1 271 0
 601 0022 0364     		str	r3, [r0, #64]
 272:../system/src/drivers/serial.c **** 	}
 273:../system/src/drivers/serial.c **** 
 274:../system/src/drivers/serial.c **** 	return SRL_OK;
 602              		.loc 1 274 0
 603 0024 0020     		movs	r0, #0
 604              	.LVL42:
 605 0026 7047     		bx	lr
 606              	.LVL43:
 607              	.L57:
 256:../system/src/drivers/serial.c **** 		ctx->port->SR &= (0xFFFFFFFF ^ USART_SR_TC);
 608              		.loc 1 256 0
 609 0028 0268     		ldr	r2, [r0]
 610 002a 9389     		ldrh	r3, [r2, #12]
 611 002c 43F00803 		orr	r3, r3, #8
 612 0030 9381     		strh	r3, [r2, #12]	@ movhi
 257:../system/src/drivers/serial.c **** 		ctx->port->DR = ctx->srl_tx_buf_pointer[0];
 613              		.loc 1 257 0
 614 0032 0268     		ldr	r2, [r0]
 615 0034 1388     		ldrh	r3, [r2]
 616 0036 9BB2     		uxth	r3, r3
 617 0038 23F04003 		bic	r3, r3, #64
 618 003c 9BB2     		uxth	r3, r3
 619 003e 1380     		strh	r3, [r2]	@ movhi
 258:../system/src/drivers/serial.c **** 
 620              		.loc 1 258 0
 621 0040 4269     		ldr	r2, [r0, #20]
 622 0042 0368     		ldr	r3, [r0]
 623 0044 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 624 0046 9A80     		strh	r2, [r3, #4]	@ movhi
 261:../system/src/drivers/serial.c **** 
 625              		.loc 1 261 0
 626 0048 0123     		movs	r3, #1
 627 004a 4384     		strh	r3, [r0, #34]	@ movhi
 263:../system/src/drivers/serial.c **** 
 628              		.loc 1 263 0
 629 004c 0323     		movs	r3, #3
 630 004e 80F84530 		strb	r3, [r0, #69]
 265:../system/src/drivers/serial.c **** 		ctx->port->CR1 |= USART_CR1_TCIE;
 631              		.loc 1 265 0
 632 0052 0268     		ldr	r2, [r0]
 633 0054 9389     		ldrh	r3, [r2, #12]
 634 0056 43F08003 		orr	r3, r3, #128
 635 005a 9381     		strh	r3, [r2, #12]	@ movhi
 266:../system/src/drivers/serial.c **** 
 636              		.loc 1 266 0
 637 005c 0268     		ldr	r2, [r0]
 638 005e 9389     		ldrh	r3, [r2, #12]
 639 0060 43F04003 		orr	r3, r3, #64
 640 0064 9381     		strh	r3, [r2, #12]	@ movhi
 641              		.loc 1 274 0
 642 0066 0020     		movs	r0, #0
 643              	.LVL44:
 644 0068 7047     		bx	lr
 645              	.LVL45:
 646              	.L55:
 239:../system/src/drivers/serial.c **** 
 647              		.loc 1 239 0
 648 006a 0220     		movs	r0, #2
 649              	.LVL46:
 650 006c 7047     		bx	lr
 651              	.LVL47:
 652              	.L56:
 243:../system/src/drivers/serial.c **** 
 653              		.loc 1 243 0
 654 006e 0120     		movs	r0, #1
 655              	.LVL48:
 275:../system/src/drivers/serial.c **** }
 656              		.loc 1 275 0
 657 0070 7047     		bx	lr
 658              	.L59:
 659 0072 00BF     		.align	2
 660              	.L58:
 661 0074 00000000 		.word	master_time
 662              		.cfi_endproc
 663              	.LFE74:
 665              		.section	.text.srl_wait_for_tx_completion,"ax",%progbits
 666              		.align	1
 667              		.global	srl_wait_for_tx_completion
 668              		.syntax unified
 669              		.thumb
 670              		.thumb_func
 671              		.fpu softvfp
 673              	srl_wait_for_tx_completion:
 674              	.LFB75:
 276:../system/src/drivers/serial.c **** 
 277:../system/src/drivers/serial.c **** void srl_wait_for_tx_completion(srl_context_t *ctx) {
 675              		.loc 1 277 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 680              	.LVL49:
 681              	.L62:
 278:../system/src/drivers/serial.c **** 	  while(ctx->srl_tx_state != SRL_TX_IDLE && ctx->srl_tx_state != SRL_TX_ERROR);
 682              		.loc 1 278 0 discriminator 2
 683 0000 90F84530 		ldrb	r3, [r0, #69]	@ zero_extendqisi2
 684 0004 012B     		cmp	r3, #1
 685 0006 01D0     		beq	.L60
 686              		.loc 1 278 0 is_stmt 0 discriminator 1
 687 0008 042B     		cmp	r3, #4
 688 000a F9D1     		bne	.L62
 689              	.L60:
 279:../system/src/drivers/serial.c **** }
 690              		.loc 1 279 0 is_stmt 1
 691 000c 7047     		bx	lr
 692              		.cfi_endproc
 693              	.LFE75:
 695              		.section	.text.srl_wait_for_rx_completion_or_timeout,"ax",%progbits
 696              		.align	1
 697              		.global	srl_wait_for_rx_completion_or_timeout
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu softvfp
 703              	srl_wait_for_rx_completion_or_timeout:
 704              	.LFB76:
 280:../system/src/drivers/serial.c **** 
 281:../system/src/drivers/serial.c **** uint8_t srl_wait_for_rx_completion_or_timeout(srl_context_t *ctx, uint8_t* output) {
 705              		.loc 1 281 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 710              	.LVL50:
 282:../system/src/drivers/serial.c **** 
 283:../system/src/drivers/serial.c **** 	*output = SRL_UNINITIALIZED;
 711              		.loc 1 283 0
 712 0000 7F23     		movs	r3, #127
 713 0002 0B70     		strb	r3, [r1]
 714              	.L64:
 284:../system/src/drivers/serial.c **** 
 285:../system/src/drivers/serial.c **** 	// block the execution until the
 286:../system/src/drivers/serial.c **** 	while(ctx->srl_rx_state != SRL_RX_DONE && ctx->srl_rx_state != SRL_RX_ERROR);
 715              		.loc 1 286 0 discriminator 1
 716 0004 90F84420 		ldrb	r2, [r0, #68]	@ zero_extendqisi2
 717 0008 131F     		subs	r3, r2, #4
 718 000a DBB2     		uxtb	r3, r3
 719 000c 012B     		cmp	r3, #1
 720 000e F9D8     		bhi	.L64
 287:../system/src/drivers/serial.c **** 
 288:../system/src/drivers/serial.c **** 	switch (ctx->srl_rx_state) {
 721              		.loc 1 288 0
 722 0010 042A     		cmp	r2, #4
 723 0012 03D0     		beq	.L66
 724 0014 052A     		cmp	r2, #5
 725 0016 04D0     		beq	.L67
 726              	.L65:
 289:../system/src/drivers/serial.c **** 		case SRL_RX_DONE: {
 290:../system/src/drivers/serial.c **** 			*output = SRL_OK;
 291:../system/src/drivers/serial.c **** 			break;
 292:../system/src/drivers/serial.c **** 		}
 293:../system/src/drivers/serial.c **** 
 294:../system/src/drivers/serial.c **** 		case SRL_RX_ERROR: {
 295:../system/src/drivers/serial.c **** 			*output = SRL_TIMEOUT;
 296:../system/src/drivers/serial.c **** 			break;
 297:../system/src/drivers/serial.c **** 		}
 298:../system/src/drivers/serial.c **** 
 299:../system/src/drivers/serial.c **** 		default: {
 300:../system/src/drivers/serial.c **** 			break;
 301:../system/src/drivers/serial.c **** 		}
 302:../system/src/drivers/serial.c **** 	}
 303:../system/src/drivers/serial.c **** 
 304:../system/src/drivers/serial.c **** 	return *output;
 305:../system/src/drivers/serial.c **** }
 727              		.loc 1 305 0
 728 0018 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 729              	.LVL51:
 730 001a 7047     		bx	lr
 731              	.LVL52:
 732              	.L66:
 290:../system/src/drivers/serial.c **** 			break;
 733              		.loc 1 290 0
 734 001c 0023     		movs	r3, #0
 735 001e 0B70     		strb	r3, [r1]
 291:../system/src/drivers/serial.c **** 		}
 736              		.loc 1 291 0
 737 0020 FAE7     		b	.L65
 738              	.L67:
 295:../system/src/drivers/serial.c **** 			break;
 739              		.loc 1 295 0
 740 0022 0523     		movs	r3, #5
 741 0024 0B70     		strb	r3, [r1]
 296:../system/src/drivers/serial.c **** 		}
 742              		.loc 1 296 0
 743 0026 F7E7     		b	.L65
 744              		.cfi_endproc
 745              	.LFE76:
 747              		.section	.text.srl_receive_data,"ax",%progbits
 748              		.align	1
 749              		.global	srl_receive_data
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 753              		.fpu softvfp
 755              	srl_receive_data:
 756              	.LFB77:
 306:../system/src/drivers/serial.c **** 
 307:../system/src/drivers/serial.c **** uint8_t srl_receive_data(srl_context_t *ctx, int num, char start, char stop, char echo, char len_ad
 757              		.loc 1 307 0
 758              		.cfi_startproc
 759              		@ args = 12, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              	.LVL53:
 762 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 763              		.cfi_def_cfa_offset 32
 764              		.cfi_offset 3, -32
 765              		.cfi_offset 4, -28
 766              		.cfi_offset 5, -24
 767              		.cfi_offset 6, -20
 768              		.cfi_offset 7, -16
 769              		.cfi_offset 8, -12
 770              		.cfi_offset 9, -8
 771              		.cfi_offset 14, -4
 772 0004 9DF92470 		ldrsb	r7, [sp, #36]
 308:../system/src/drivers/serial.c **** 	if (ctx->srl_rx_state == SRL_RXING)
 773              		.loc 1 308 0
 774 0008 90F84440 		ldrb	r4, [r0, #68]	@ zero_extendqisi2
 775 000c 032C     		cmp	r4, #3
 776 000e 61D0     		beq	.L79
 309:../system/src/drivers/serial.c **** 		return SRL_BUSY;
 310:../system/src/drivers/serial.c **** 
 311:../system/src/drivers/serial.c **** 	//trace_printf("Serial:SrlReceiveData()\r\n");
 312:../system/src/drivers/serial.c **** 
 313:../system/src/drivers/serial.c **** 	if (num >= ctx->srl_rx_buf_ln)
 777              		.loc 1 313 0
 778 0010 868B     		ldrh	r6, [r0, #28]
 779 0012 8E42     		cmp	r6, r1
 780 0014 02DC     		bgt	.L83
 314:../system/src/drivers/serial.c **** 		return SRL_DATA_TOO_LONG;
 781              		.loc 1 314 0
 782 0016 0120     		movs	r0, #1
 783              	.LVL54:
 784              	.L69:
 315:../system/src/drivers/serial.c **** 
 316:../system/src/drivers/serial.c **** 	memset(ctx->srl_rx_buf_pointer, 0x00, ctx->srl_rx_buf_ln);
 317:../system/src/drivers/serial.c **** 
 318:../system/src/drivers/serial.c **** 	ctx->srl_rx_error_reason = SRL_ERR_NONE;
 319:../system/src/drivers/serial.c **** 
 320:../system/src/drivers/serial.c **** 	// checking if user want
 321:../system/src/drivers/serial.c **** 	if (start != 0x00) {
 322:../system/src/drivers/serial.c **** 		ctx->srl_triggered_start = 1;
 323:../system/src/drivers/serial.c **** 		ctx->srl_start_trigger = start;
 324:../system/src/drivers/serial.c **** 	}
 325:../system/src/drivers/serial.c **** 	else {
 326:../system/src/drivers/serial.c **** 		ctx->srl_triggered_start = 0;
 327:../system/src/drivers/serial.c **** 		ctx->srl_start_trigger = 0;
 328:../system/src/drivers/serial.c **** 	}
 329:../system/src/drivers/serial.c **** 
 330:../system/src/drivers/serial.c **** 	if (stop != 0x00) {
 331:../system/src/drivers/serial.c **** 		ctx->srl_triggered_stop = 1;
 332:../system/src/drivers/serial.c **** 		ctx->srl_stop_trigger = stop;
 333:../system/src/drivers/serial.c **** 	}
 334:../system/src/drivers/serial.c **** 	else {
 335:../system/src/drivers/serial.c **** 		ctx->srl_triggered_stop = 0;
 336:../system/src/drivers/serial.c **** 		ctx->srl_stop_trigger = 0;
 337:../system/src/drivers/serial.c **** 	}
 338:../system/src/drivers/serial.c **** 
 339:../system/src/drivers/serial.c **** 	if (ctx->srl_triggered_start == 1 || ctx->srl_triggered_stop == 1) {
 340:../system/src/drivers/serial.c **** 		if (num < 3)
 341:../system/src/drivers/serial.c **** 			return SRL_WRONG_PARAMS_COMBINATION;
 342:../system/src/drivers/serial.c **** 
 343:../system/src/drivers/serial.c **** 		ctx->srl_rx_state = SRL_WAITING_TO_RX;
 344:../system/src/drivers/serial.c **** 		ctx->srl_rx_waiting_start_time = master_time;
 345:../system/src/drivers/serial.c **** 	}
 346:../system/src/drivers/serial.c **** 	else {
 347:../system/src/drivers/serial.c **** 		ctx->srl_rx_state = SRL_RXING;
 348:../system/src/drivers/serial.c **** 	}
 349:../system/src/drivers/serial.c **** 
 350:../system/src/drivers/serial.c **** 	ctx->srl_enable_echo = echo;
 351:../system/src/drivers/serial.c **** 	ctx->srl_rx_bytes_counter = 0;
 352:../system/src/drivers/serial.c **** 	ctx->srl_rx_bytes_req = num;
 353:../system/src/drivers/serial.c **** 
 354:../system/src/drivers/serial.c **** 	if (len_addr != 0) {
 355:../system/src/drivers/serial.c **** 		ctx->srl_rx_lenght_param_addres = len_addr;
 356:../system/src/drivers/serial.c **** 	}
 357:../system/src/drivers/serial.c **** 	else {
 358:../system/src/drivers/serial.c **** 		ctx->srl_rx_lenght_param_addres = num + 1;
 359:../system/src/drivers/serial.c **** 	}
 360:../system/src/drivers/serial.c **** 	ctx->srl_rx_lenght_param_modifier = len_modifier;
 361:../system/src/drivers/serial.c **** 
 362:../system/src/drivers/serial.c **** 	ctx->srl_rx_timeout_calc_started = 0;
 363:../system/src/drivers/serial.c **** 
 364:../system/src/drivers/serial.c **** 	ctx->port->CR1 |= USART_CR1_RE;					// uruchamianie odbiornika
 365:../system/src/drivers/serial.c **** 	ctx->port->CR1 |= USART_CR1_RXNEIE;			// przerwanie od przepe�nionego bufora odbioru
 366:../system/src/drivers/serial.c **** // 	PORT->CR1 |= USART_CR1_IDLEIE;			// przerwanie od bezczynno�ci szyny RS przy odbiorze
 367:../system/src/drivers/serial.c **** 												// spowodowanej zako�czeniem transmisji przez urz�dzenie
 368:../system/src/drivers/serial.c ****  	return SRL_OK;
 369:../system/src/drivers/serial.c **** }
 785              		.loc 1 369 0
 786 0018 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 787              	.LVL55:
 788              	.L83:
 789 001c 9846     		mov	r8, r3
 790 001e 9146     		mov	r9, r2
 791 0020 0D46     		mov	r5, r1
 792 0022 0446     		mov	r4, r0
 316:../system/src/drivers/serial.c **** 
 793              		.loc 1 316 0
 794 0024 3246     		mov	r2, r6
 795              	.LVL56:
 796 0026 0021     		movs	r1, #0
 797              	.LVL57:
 798 0028 8069     		ldr	r0, [r0, #24]
 799              	.LVL58:
 800 002a FFF7FEFF 		bl	memset
 801              	.LVL59:
 318:../system/src/drivers/serial.c **** 
 802              		.loc 1 318 0
 803 002e 0023     		movs	r3, #0
 804 0030 84F84630 		strb	r3, [r4, #70]
 321:../system/src/drivers/serial.c **** 		ctx->srl_triggered_start = 1;
 805              		.loc 1 321 0
 806 0034 B9F1000F 		cmp	r9, #0
 807 0038 33D0     		beq	.L70
 322:../system/src/drivers/serial.c **** 		ctx->srl_start_trigger = start;
 808              		.loc 1 322 0
 809 003a 0123     		movs	r3, #1
 810 003c 84F82830 		strb	r3, [r4, #40]
 323:../system/src/drivers/serial.c **** 	}
 811              		.loc 1 323 0
 812 0040 84F82A90 		strb	r9, [r4, #42]
 813              	.L71:
 330:../system/src/drivers/serial.c **** 		ctx->srl_triggered_stop = 1;
 814              		.loc 1 330 0
 815 0044 B8F1000F 		cmp	r8, #0
 816 0048 31D0     		beq	.L72
 331:../system/src/drivers/serial.c **** 		ctx->srl_stop_trigger = stop;
 817              		.loc 1 331 0
 818 004a 0123     		movs	r3, #1
 819 004c 84F82930 		strb	r3, [r4, #41]
 332:../system/src/drivers/serial.c **** 	}
 820              		.loc 1 332 0
 821 0050 84F82B80 		strb	r8, [r4, #43]
 822              	.L73:
 339:../system/src/drivers/serial.c **** 		if (num < 3)
 823              		.loc 1 339 0
 824 0054 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 825 0058 012B     		cmp	r3, #1
 826 005a 2ED0     		beq	.L74
 339:../system/src/drivers/serial.c **** 		if (num < 3)
 827              		.loc 1 339 0 is_stmt 0 discriminator 1
 828 005c 94F82930 		ldrb	r3, [r4, #41]	@ zero_extendqisi2
 829 0060 012B     		cmp	r3, #1
 830 0062 2AD0     		beq	.L74
 347:../system/src/drivers/serial.c **** 	}
 831              		.loc 1 347 0 is_stmt 1
 832 0064 0323     		movs	r3, #3
 833 0066 84F84430 		strb	r3, [r4, #68]
 834              	.L76:
 350:../system/src/drivers/serial.c **** 	ctx->srl_rx_bytes_counter = 0;
 835              		.loc 1 350 0
 836 006a 9DF92030 		ldrsb	r3, [sp, #32]
 837 006e 84F84830 		strb	r3, [r4, #72]
 351:../system/src/drivers/serial.c **** 	ctx->srl_rx_bytes_req = num;
 838              		.loc 1 351 0
 839 0072 0023     		movs	r3, #0
 840 0074 2384     		strh	r3, [r4, #32]	@ movhi
 352:../system/src/drivers/serial.c **** 
 841              		.loc 1 352 0
 842 0076 A584     		strh	r5, [r4, #36]	@ movhi
 354:../system/src/drivers/serial.c **** 		ctx->srl_rx_lenght_param_addres = len_addr;
 843              		.loc 1 354 0
 844 0078 47B3     		cbz	r7, .L77
 355:../system/src/drivers/serial.c **** 	}
 845              		.loc 1 355 0
 846 007a 84F84970 		strb	r7, [r4, #73]
 847              	.L78:
 360:../system/src/drivers/serial.c **** 
 848              		.loc 1 360 0
 849 007e 9DF92830 		ldrsb	r3, [sp, #40]
 850 0082 84F84A30 		strb	r3, [r4, #74]
 362:../system/src/drivers/serial.c **** 
 851              		.loc 1 362 0
 852 0086 0020     		movs	r0, #0
 853 0088 84F82F00 		strb	r0, [r4, #47]
 364:../system/src/drivers/serial.c **** 	ctx->port->CR1 |= USART_CR1_RXNEIE;			// przerwanie od przepe�nionego bufora odbioru
 854              		.loc 1 364 0
 855 008c 2268     		ldr	r2, [r4]
 856 008e 9389     		ldrh	r3, [r2, #12]
 857 0090 43F00403 		orr	r3, r3, #4
 858 0094 9381     		strh	r3, [r2, #12]	@ movhi
 365:../system/src/drivers/serial.c **** // 	PORT->CR1 |= USART_CR1_IDLEIE;			// przerwanie od bezczynno�ci szyny RS przy odbiorze
 859              		.loc 1 365 0
 860 0096 2268     		ldr	r2, [r4]
 861 0098 9389     		ldrh	r3, [r2, #12]
 862 009a 43F02003 		orr	r3, r3, #32
 863 009e 9381     		strh	r3, [r2, #12]	@ movhi
 368:../system/src/drivers/serial.c **** }
 864              		.loc 1 368 0
 865 00a0 BAE7     		b	.L69
 866              	.L70:
 326:../system/src/drivers/serial.c **** 		ctx->srl_start_trigger = 0;
 867              		.loc 1 326 0
 868 00a2 0023     		movs	r3, #0
 869 00a4 84F82830 		strb	r3, [r4, #40]
 327:../system/src/drivers/serial.c **** 	}
 870              		.loc 1 327 0
 871 00a8 84F82A30 		strb	r3, [r4, #42]
 872 00ac CAE7     		b	.L71
 873              	.L72:
 335:../system/src/drivers/serial.c **** 		ctx->srl_stop_trigger = 0;
 874              		.loc 1 335 0
 875 00ae 0023     		movs	r3, #0
 876 00b0 84F82930 		strb	r3, [r4, #41]
 336:../system/src/drivers/serial.c **** 	}
 877              		.loc 1 336 0
 878 00b4 84F82B30 		strb	r3, [r4, #43]
 879 00b8 CCE7     		b	.L73
 880              	.L74:
 340:../system/src/drivers/serial.c **** 			return SRL_WRONG_PARAMS_COMBINATION;
 881              		.loc 1 340 0
 882 00ba 022D     		cmp	r5, #2
 883 00bc 0CDD     		ble	.L81
 343:../system/src/drivers/serial.c **** 		ctx->srl_rx_waiting_start_time = master_time;
 884              		.loc 1 343 0
 885 00be 0223     		movs	r3, #2
 886 00c0 84F84430 		strb	r3, [r4, #68]
 344:../system/src/drivers/serial.c **** 	}
 887              		.loc 1 344 0
 888 00c4 054B     		ldr	r3, .L84
 889 00c6 1B68     		ldr	r3, [r3]
 890 00c8 E363     		str	r3, [r4, #60]
 891 00ca CEE7     		b	.L76
 892              	.L77:
 358:../system/src/drivers/serial.c **** 	}
 893              		.loc 1 358 0
 894 00cc 691C     		adds	r1, r5, #1
 895 00ce 84F84910 		strb	r1, [r4, #73]
 896 00d2 D4E7     		b	.L78
 897              	.LVL60:
 898              	.L79:
 309:../system/src/drivers/serial.c **** 
 899              		.loc 1 309 0
 900 00d4 0220     		movs	r0, #2
 901              	.LVL61:
 902 00d6 9FE7     		b	.L69
 903              	.LVL62:
 904              	.L81:
 341:../system/src/drivers/serial.c **** 
 905              		.loc 1 341 0
 906 00d8 0420     		movs	r0, #4
 907 00da 9DE7     		b	.L69
 908              	.L85:
 909              		.align	2
 910              	.L84:
 911 00dc 00000000 		.word	master_time
 912              		.cfi_endproc
 913              	.LFE77:
 915              		.section	.text.srl_receive_data_with_instant_timeout,"ax",%progbits
 916              		.align	1
 917              		.global	srl_receive_data_with_instant_timeout
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 921              		.fpu softvfp
 923              	srl_receive_data_with_instant_timeout:
 924              	.LFB78:
 370:../system/src/drivers/serial.c **** 
 371:../system/src/drivers/serial.c **** /**
 372:../system/src/drivers/serial.c ****  * This function start the transfer with
 373:../system/src/drivers/serial.c ****  */
 374:../system/src/drivers/serial.c **** uint8_t srl_receive_data_with_instant_timeout(srl_context_t *ctx, int num, char start, char stop, c
 925              		.loc 1 374 0
 926              		.cfi_startproc
 927              		@ args = 12, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL63:
 930 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 931              		.cfi_def_cfa_offset 32
 932              		.cfi_offset 3, -32
 933              		.cfi_offset 4, -28
 934              		.cfi_offset 5, -24
 935              		.cfi_offset 6, -20
 936              		.cfi_offset 7, -16
 937              		.cfi_offset 8, -12
 938              		.cfi_offset 9, -8
 939              		.cfi_offset 14, -4
 940 0004 9DF92480 		ldrsb	r8, [sp, #36]
 375:../system/src/drivers/serial.c **** 	if (ctx->srl_rx_state == SRL_RXING)
 941              		.loc 1 375 0
 942 0008 90F84440 		ldrb	r4, [r0, #68]	@ zero_extendqisi2
 943 000c 032C     		cmp	r4, #3
 944 000e 5FD0     		beq	.L97
 376:../system/src/drivers/serial.c **** 		return SRL_BUSY;
 377:../system/src/drivers/serial.c **** 
 378:../system/src/drivers/serial.c **** 	if (num >= ctx->srl_rx_buf_ln)
 945              		.loc 1 378 0
 946 0010 878B     		ldrh	r7, [r0, #28]
 947 0012 8F42     		cmp	r7, r1
 948 0014 02DC     		bgt	.L101
 379:../system/src/drivers/serial.c **** 		return SRL_DATA_TOO_LONG;
 949              		.loc 1 379 0
 950 0016 0120     		movs	r0, #1
 951              	.LVL64:
 952              	.L87:
 380:../system/src/drivers/serial.c **** 
 381:../system/src/drivers/serial.c **** 	memset(ctx->srl_rx_buf_pointer, 0x00, ctx->srl_rx_buf_ln);
 382:../system/src/drivers/serial.c **** 
 383:../system/src/drivers/serial.c **** 	// checking if user want
 384:../system/src/drivers/serial.c **** 	if (start != 0x00) {
 385:../system/src/drivers/serial.c **** 		ctx->srl_triggered_start = 1;
 386:../system/src/drivers/serial.c **** 		ctx->srl_start_trigger = start;
 387:../system/src/drivers/serial.c **** 	}
 388:../system/src/drivers/serial.c **** 	else {
 389:../system/src/drivers/serial.c **** 		ctx->srl_triggered_start = 0;
 390:../system/src/drivers/serial.c **** 	}
 391:../system/src/drivers/serial.c **** 
 392:../system/src/drivers/serial.c **** 	if (stop != 0x00) {
 393:../system/src/drivers/serial.c **** 		ctx->srl_triggered_stop = 1;
 394:../system/src/drivers/serial.c **** 		ctx->srl_stop_trigger = stop;
 395:../system/src/drivers/serial.c **** 	}
 396:../system/src/drivers/serial.c **** 	else {
 397:../system/src/drivers/serial.c **** 		ctx->srl_triggered_stop = 0;
 398:../system/src/drivers/serial.c **** 	}
 399:../system/src/drivers/serial.c **** 
 400:../system/src/drivers/serial.c **** 	if (ctx->srl_triggered_start == 1 || ctx->srl_triggered_stop == 1) {
 401:../system/src/drivers/serial.c **** 		if (num < 3)
 402:../system/src/drivers/serial.c **** 			return SRL_WRONG_PARAMS_COMBINATION;
 403:../system/src/drivers/serial.c **** 
 404:../system/src/drivers/serial.c **** 		ctx->srl_rx_state = SRL_WAITING_TO_RX;
 405:../system/src/drivers/serial.c **** 		ctx->srl_rx_waiting_start_time = master_time;
 406:../system/src/drivers/serial.c **** 	}
 407:../system/src/drivers/serial.c **** 	else {
 408:../system/src/drivers/serial.c **** 		ctx->srl_rx_state = SRL_RXING;
 409:../system/src/drivers/serial.c **** 	}
 410:../system/src/drivers/serial.c **** 
 411:../system/src/drivers/serial.c **** 	ctx->srl_enable_echo = echo;
 412:../system/src/drivers/serial.c **** 	ctx->srl_rx_bytes_counter = 0;
 413:../system/src/drivers/serial.c **** 	ctx->srl_rx_bytes_req = num;
 414:../system/src/drivers/serial.c **** 
 415:../system/src/drivers/serial.c **** 	if (len_addr != 0) {
 416:../system/src/drivers/serial.c **** 		ctx->srl_rx_lenght_param_addres = len_addr;
 417:../system/src/drivers/serial.c **** 	}
 418:../system/src/drivers/serial.c **** 	else {
 419:../system/src/drivers/serial.c **** 		ctx->srl_rx_lenght_param_addres = num + 1;
 420:../system/src/drivers/serial.c **** 	}
 421:../system/src/drivers/serial.c **** 	ctx->srl_rx_lenght_param_modifier = len_modifier;
 422:../system/src/drivers/serial.c **** 
 423:../system/src/drivers/serial.c **** 	// set current time as receive start time
 424:../system/src/drivers/serial.c **** 	ctx->srl_rx_start_time = master_time;
 425:../system/src/drivers/serial.c **** 
 426:../system/src/drivers/serial.c **** 	ctx->srl_rx_timeout_calc_started = 1;
 427:../system/src/drivers/serial.c **** 
 428:../system/src/drivers/serial.c **** 	ctx->port->CR1 |= USART_CR1_RE;					// uruchamianie odbiornika
 429:../system/src/drivers/serial.c **** 	ctx->port->CR1 |= USART_CR1_RXNEIE;			// przerwanie od przepe�nionego bufora odbioru
 430:../system/src/drivers/serial.c **** // 	PORT->CR1 |= USART_CR1_IDLEIE;			// przerwanie od bezczynno�ci szyny RS przy odbiorze
 431:../system/src/drivers/serial.c **** 												// spowodowanej zako�czeniem transmisji przez urz�dzenie
 432:../system/src/drivers/serial.c ****  	return SRL_OK;
 433:../system/src/drivers/serial.c **** }
 953              		.loc 1 433 0
 954 0018 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 955              	.LVL65:
 956              	.L101:
 957 001c 1E46     		mov	r6, r3
 958 001e 9146     		mov	r9, r2
 959 0020 0D46     		mov	r5, r1
 960 0022 0446     		mov	r4, r0
 381:../system/src/drivers/serial.c **** 
 961              		.loc 1 381 0
 962 0024 3A46     		mov	r2, r7
 963              	.LVL66:
 964 0026 0021     		movs	r1, #0
 965              	.LVL67:
 966 0028 8069     		ldr	r0, [r0, #24]
 967              	.LVL68:
 968 002a FFF7FEFF 		bl	memset
 969              	.LVL69:
 384:../system/src/drivers/serial.c **** 		ctx->srl_triggered_start = 1;
 970              		.loc 1 384 0
 971 002e B9F1000F 		cmp	r9, #0
 972 0032 38D0     		beq	.L88
 385:../system/src/drivers/serial.c **** 		ctx->srl_start_trigger = start;
 973              		.loc 1 385 0
 974 0034 0123     		movs	r3, #1
 975 0036 84F82830 		strb	r3, [r4, #40]
 386:../system/src/drivers/serial.c **** 	}
 976              		.loc 1 386 0
 977 003a 84F82A90 		strb	r9, [r4, #42]
 978              	.L89:
 392:../system/src/drivers/serial.c **** 		ctx->srl_triggered_stop = 1;
 979              		.loc 1 392 0
 980 003e 002E     		cmp	r6, #0
 981 0040 35D0     		beq	.L90
 393:../system/src/drivers/serial.c **** 		ctx->srl_stop_trigger = stop;
 982              		.loc 1 393 0
 983 0042 0123     		movs	r3, #1
 984 0044 84F82930 		strb	r3, [r4, #41]
 394:../system/src/drivers/serial.c **** 	}
 985              		.loc 1 394 0
 986 0048 84F82B60 		strb	r6, [r4, #43]
 987              	.L91:
 400:../system/src/drivers/serial.c **** 		if (num < 3)
 988              		.loc 1 400 0
 989 004c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 990 0050 012B     		cmp	r3, #1
 991 0052 30D0     		beq	.L92
 400:../system/src/drivers/serial.c **** 		if (num < 3)
 992              		.loc 1 400 0 is_stmt 0 discriminator 1
 993 0054 94F82930 		ldrb	r3, [r4, #41]	@ zero_extendqisi2
 994 0058 012B     		cmp	r3, #1
 995 005a 2CD0     		beq	.L92
 408:../system/src/drivers/serial.c **** 	}
 996              		.loc 1 408 0 is_stmt 1
 997 005c 0323     		movs	r3, #3
 998 005e 84F84430 		strb	r3, [r4, #68]
 999              	.L94:
 411:../system/src/drivers/serial.c **** 	ctx->srl_rx_bytes_counter = 0;
 1000              		.loc 1 411 0
 1001 0062 9DF92030 		ldrsb	r3, [sp, #32]
 1002 0066 84F84830 		strb	r3, [r4, #72]
 412:../system/src/drivers/serial.c **** 	ctx->srl_rx_bytes_req = num;
 1003              		.loc 1 412 0
 1004 006a 0023     		movs	r3, #0
 1005 006c 2384     		strh	r3, [r4, #32]	@ movhi
 413:../system/src/drivers/serial.c **** 
 1006              		.loc 1 413 0
 1007 006e A584     		strh	r5, [r4, #36]	@ movhi
 415:../system/src/drivers/serial.c **** 		ctx->srl_rx_lenght_param_addres = len_addr;
 1008              		.loc 1 415 0
 1009 0070 B8F1000F 		cmp	r8, #0
 1010 0074 28D0     		beq	.L95
 416:../system/src/drivers/serial.c **** 	}
 1011              		.loc 1 416 0
 1012 0076 84F84980 		strb	r8, [r4, #73]
 1013              	.L96:
 421:../system/src/drivers/serial.c **** 
 1014              		.loc 1 421 0
 1015 007a 9DF92830 		ldrsb	r3, [sp, #40]
 1016 007e 84F84A30 		strb	r3, [r4, #74]
 424:../system/src/drivers/serial.c **** 
 1017              		.loc 1 424 0
 1018 0082 154B     		ldr	r3, .L102
 1019 0084 1B68     		ldr	r3, [r3]
 1020 0086 A363     		str	r3, [r4, #56]
 426:../system/src/drivers/serial.c **** 
 1021              		.loc 1 426 0
 1022 0088 0123     		movs	r3, #1
 1023 008a 84F82F30 		strb	r3, [r4, #47]
 428:../system/src/drivers/serial.c **** 	ctx->port->CR1 |= USART_CR1_RXNEIE;			// przerwanie od przepe�nionego bufora odbioru
 1024              		.loc 1 428 0
 1025 008e 2268     		ldr	r2, [r4]
 1026 0090 9389     		ldrh	r3, [r2, #12]
 1027 0092 43F00403 		orr	r3, r3, #4
 1028 0096 9381     		strh	r3, [r2, #12]	@ movhi
 429:../system/src/drivers/serial.c **** // 	PORT->CR1 |= USART_CR1_IDLEIE;			// przerwanie od bezczynno�ci szyny RS przy odbiorze
 1029              		.loc 1 429 0
 1030 0098 2268     		ldr	r2, [r4]
 1031 009a 9389     		ldrh	r3, [r2, #12]
 1032 009c 43F02003 		orr	r3, r3, #32
 1033 00a0 9381     		strh	r3, [r2, #12]	@ movhi
 432:../system/src/drivers/serial.c **** }
 1034              		.loc 1 432 0
 1035 00a2 0020     		movs	r0, #0
 1036 00a4 B8E7     		b	.L87
 1037              	.L88:
 389:../system/src/drivers/serial.c **** 	}
 1038              		.loc 1 389 0
 1039 00a6 0023     		movs	r3, #0
 1040 00a8 84F82830 		strb	r3, [r4, #40]
 1041 00ac C7E7     		b	.L89
 1042              	.L90:
 397:../system/src/drivers/serial.c **** 	}
 1043              		.loc 1 397 0
 1044 00ae 0023     		movs	r3, #0
 1045 00b0 84F82930 		strb	r3, [r4, #41]
 1046 00b4 CAE7     		b	.L91
 1047              	.L92:
 401:../system/src/drivers/serial.c **** 			return SRL_WRONG_PARAMS_COMBINATION;
 1048              		.loc 1 401 0
 1049 00b6 022D     		cmp	r5, #2
 1050 00b8 0CDD     		ble	.L99
 404:../system/src/drivers/serial.c **** 		ctx->srl_rx_waiting_start_time = master_time;
 1051              		.loc 1 404 0
 1052 00ba 0223     		movs	r3, #2
 1053 00bc 84F84430 		strb	r3, [r4, #68]
 405:../system/src/drivers/serial.c **** 	}
 1054              		.loc 1 405 0
 1055 00c0 054B     		ldr	r3, .L102
 1056 00c2 1B68     		ldr	r3, [r3]
 1057 00c4 E363     		str	r3, [r4, #60]
 1058 00c6 CCE7     		b	.L94
 1059              	.L95:
 419:../system/src/drivers/serial.c **** 	}
 1060              		.loc 1 419 0
 1061 00c8 691C     		adds	r1, r5, #1
 1062 00ca 84F84910 		strb	r1, [r4, #73]
 1063 00ce D4E7     		b	.L96
 1064              	.LVL70:
 1065              	.L97:
 376:../system/src/drivers/serial.c **** 
 1066              		.loc 1 376 0
 1067 00d0 0220     		movs	r0, #2
 1068              	.LVL71:
 1069 00d2 A1E7     		b	.L87
 1070              	.LVL72:
 1071              	.L99:
 402:../system/src/drivers/serial.c **** 
 1072              		.loc 1 402 0
 1073 00d4 0420     		movs	r0, #4
 1074 00d6 9FE7     		b	.L87
 1075              	.L103:
 1076              		.align	2
 1077              	.L102:
 1078 00d8 00000000 		.word	master_time
 1079              		.cfi_endproc
 1080              	.LFE78:
 1082              		.section	.text.srl_receive_data_with_callback,"ax",%progbits
 1083              		.align	1
 1084              		.global	srl_receive_data_with_callback
 1085              		.syntax unified
 1086              		.thumb
 1087              		.thumb_func
 1088              		.fpu softvfp
 1090              	srl_receive_data_with_callback:
 1091              	.LFB79:
 434:../system/src/drivers/serial.c **** 
 435:../system/src/drivers/serial.c **** uint8_t srl_receive_data_with_callback(srl_context_t *ctx, srl_rx_termination_callback_t cbk) {
 1092              		.loc 1 435 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096              	.LVL73:
 436:../system/src/drivers/serial.c **** 	uint8_t retval = SRL_OK;
 437:../system/src/drivers/serial.c **** 
 438:../system/src/drivers/serial.c **** 	if (ctx->srl_rx_state == SRL_RXING) {
 1097              		.loc 1 438 0
 1098 0000 90F84430 		ldrb	r3, [r0, #68]	@ zero_extendqisi2
 1099 0004 032B     		cmp	r3, #3
 1100 0006 34D0     		beq	.L106
 439:../system/src/drivers/serial.c **** 		retval = SRL_BUSY;
 440:../system/src/drivers/serial.c **** 	}
 441:../system/src/drivers/serial.c **** 	else {
 442:../system/src/drivers/serial.c **** 		// check if input pointers were set to something
 443:../system/src/drivers/serial.c **** 		if (cbk == NULL || ctx == NULL) {
 1101              		.loc 1 443 0
 1102 0008 0029     		cmp	r1, #0
 1103 000a 34D0     		beq	.L107
 1104              		.loc 1 443 0 is_stmt 0 discriminator 1
 1105 000c 0028     		cmp	r0, #0
 1106 000e 34D0     		beq	.L108
 435:../system/src/drivers/serial.c **** 	uint8_t retval = SRL_OK;
 1107              		.loc 1 435 0 is_stmt 1
 1108 0010 10B5     		push	{r4, lr}
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 4, -8
 1111              		.cfi_offset 14, -4
 1112 0012 0446     		mov	r4, r0
 444:../system/src/drivers/serial.c **** 			retval = SRL_WRONG_PARAMS_COMBINATION;
 445:../system/src/drivers/serial.c **** 		}
 446:../system/src/drivers/serial.c **** 		else {
 447:../system/src/drivers/serial.c **** 			// set the callback pointer within the context
 448:../system/src/drivers/serial.c **** 			ctx->srl_rx_term = cbk;
 1113              		.loc 1 448 0
 1114 0014 C164     		str	r1, [r0, #76]
 449:../system/src/drivers/serial.c **** 
 450:../system/src/drivers/serial.c **** 			// set the amount of bytes to be received as the size
 451:../system/src/drivers/serial.c **** 			// of the receive buffer (minus one byte for safety).
 452:../system/src/drivers/serial.c **** 			// it will be up to the callback function to terminate the receiving
 453:../system/src/drivers/serial.c **** 			ctx->srl_rx_bytes_req = ctx->srl_rx_buf_ln - 1;
 1115              		.loc 1 453 0
 1116 0016 828B     		ldrh	r2, [r0, #28]
 1117 0018 531E     		subs	r3, r2, #1
 1118 001a 8384     		strh	r3, [r0, #36]	@ movhi
 454:../system/src/drivers/serial.c **** 
 455:../system/src/drivers/serial.c **** 			// clear the rx buffer
 456:../system/src/drivers/serial.c **** 			memset(ctx->srl_rx_buf_pointer, 0x00, ctx->srl_rx_buf_ln);
 1119              		.loc 1 456 0
 1120 001c 0021     		movs	r1, #0
 1121              	.LVL74:
 1122 001e 8069     		ldr	r0, [r0, #24]
 1123              	.LVL75:
 1124 0020 FFF7FEFF 		bl	memset
 1125              	.LVL76:
 457:../system/src/drivers/serial.c **** 
 458:../system/src/drivers/serial.c **** 			ctx->srl_rx_bytes_counter = 0;
 1126              		.loc 1 458 0
 1127 0024 0020     		movs	r0, #0
 1128 0026 2084     		strh	r0, [r4, #32]	@ movhi
 459:../system/src/drivers/serial.c **** 
 460:../system/src/drivers/serial.c **** 			ctx->srl_rx_lenght_param_addres = ctx->srl_rx_buf_ln - 1;
 1129              		.loc 1 460 0
 1130 0028 A38B     		ldrh	r3, [r4, #28]
 1131 002a 013B     		subs	r3, r3, #1
 1132 002c 84F84930 		strb	r3, [r4, #73]
 461:../system/src/drivers/serial.c **** 			ctx->srl_rx_lenght_param_modifier = 0;
 1133              		.loc 1 461 0
 1134 0030 84F84A00 		strb	r0, [r4, #74]
 462:../system/src/drivers/serial.c **** 
 463:../system/src/drivers/serial.c **** 			ctx->srl_triggered_start = 0;
 1135              		.loc 1 463 0
 1136 0034 84F82800 		strb	r0, [r4, #40]
 464:../system/src/drivers/serial.c **** 			ctx->srl_triggered_stop = 0;
 1137              		.loc 1 464 0
 1138 0038 84F82900 		strb	r0, [r4, #41]
 465:../system/src/drivers/serial.c **** 			ctx->srl_enable_echo = 0;
 1139              		.loc 1 465 0
 1140 003c 84F84800 		strb	r0, [r4, #72]
 466:../system/src/drivers/serial.c **** 
 467:../system/src/drivers/serial.c **** 			ctx->srl_rx_timeout_calc_started = 0;
 1141              		.loc 1 467 0
 1142 0040 84F82F00 		strb	r0, [r4, #47]
 468:../system/src/drivers/serial.c **** 
 469:../system/src/drivers/serial.c **** 			ctx->srl_rx_state = SRL_RXING;
 1143              		.loc 1 469 0
 1144 0044 0323     		movs	r3, #3
 1145 0046 84F84430 		strb	r3, [r4, #68]
 470:../system/src/drivers/serial.c **** 			ctx->port->CR1 |= USART_CR1_RE;					// uruchamianie odbiornika
 1146              		.loc 1 470 0
 1147 004a 2268     		ldr	r2, [r4]
 1148 004c 9389     		ldrh	r3, [r2, #12]
 1149 004e 43F00403 		orr	r3, r3, #4
 1150 0052 9381     		strh	r3, [r2, #12]	@ movhi
 471:../system/src/drivers/serial.c **** 			ctx->port->CR1 |= USART_CR1_RXNEIE;
 1151              		.loc 1 471 0
 1152 0054 2268     		ldr	r2, [r4]
 1153 0056 9389     		ldrh	r3, [r2, #12]
 1154 0058 43F02003 		orr	r3, r3, #32
 1155 005c 9381     		strh	r3, [r2, #12]	@ movhi
 472:../system/src/drivers/serial.c **** 			ctx->port->CR1 |= USART_CR1_IDLEIE;
 1156              		.loc 1 472 0
 1157 005e 2268     		ldr	r2, [r4]
 1158 0060 9389     		ldrh	r3, [r2, #12]
 1159 0062 43F01003 		orr	r3, r3, #16
 1160 0066 9381     		strh	r3, [r2, #12]	@ movhi
 473:../system/src/drivers/serial.c **** 
 474:../system/src/drivers/serial.c **** 			ctx->srl_rx_waiting_start_time = master_time;
 1161              		.loc 1 474 0
 1162 0068 054B     		ldr	r3, .L113
 1163 006a 1B68     		ldr	r3, [r3]
 1164 006c E363     		str	r3, [r4, #60]
 475:../system/src/drivers/serial.c **** 			ctx->srl_rx_start_time = master_time;
 1165              		.loc 1 475 0
 1166 006e A363     		str	r3, [r4, #56]
 1167              	.LVL77:
 476:../system/src/drivers/serial.c **** 
 477:../system/src/drivers/serial.c **** 		}
 478:../system/src/drivers/serial.c **** 	}
 479:../system/src/drivers/serial.c **** 
 480:../system/src/drivers/serial.c **** 	return retval;
 481:../system/src/drivers/serial.c **** }
 1168              		.loc 1 481 0
 1169 0070 10BD     		pop	{r4, pc}
 1170              	.LVL78:
 1171              	.L106:
 1172              		.cfi_def_cfa_offset 0
 1173              		.cfi_restore 4
 1174              		.cfi_restore 14
 439:../system/src/drivers/serial.c **** 	}
 1175              		.loc 1 439 0
 1176 0072 0220     		movs	r0, #2
 1177              	.LVL79:
 1178 0074 7047     		bx	lr
 1179              	.LVL80:
 1180              	.L107:
 444:../system/src/drivers/serial.c **** 		}
 1181              		.loc 1 444 0
 1182 0076 0420     		movs	r0, #4
 1183              	.LVL81:
 1184 0078 7047     		bx	lr
 1185              	.LVL82:
 1186              	.L108:
 1187 007a 0420     		movs	r0, #4
 1188              	.LVL83:
 1189              		.loc 1 481 0
 1190 007c 7047     		bx	lr
 1191              	.L114:
 1192 007e 00BF     		.align	2
 1193              	.L113:
 1194 0080 00000000 		.word	master_time
 1195              		.cfi_endproc
 1196              	.LFE79:
 1198              		.section	.text.srl_irq_handler,"ax",%progbits
 1199              		.align	1
 1200              		.global	srl_irq_handler
 1201              		.syntax unified
 1202              		.thumb
 1203              		.thumb_func
 1204              		.fpu softvfp
 1206              	srl_irq_handler:
 1207              	.LFB80:
 482:../system/src/drivers/serial.c **** 
 483:../system/src/drivers/serial.c **** void srl_irq_handler(srl_context_t *ctx) {
 1208              		.loc 1 483 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212              	.LVL84:
 1213 0000 38B5     		push	{r3, r4, r5, lr}
 1214              		.cfi_def_cfa_offset 16
 1215              		.cfi_offset 3, -16
 1216              		.cfi_offset 4, -12
 1217              		.cfi_offset 5, -8
 1218              		.cfi_offset 14, -4
 1219 0002 0446     		mov	r4, r0
 1220              	.LVL85:
 484:../system/src/drivers/serial.c **** 
 485:../system/src/drivers/serial.c **** 	// local variable for recalculating a stream length (how many bytes the driver should receives)
 486:../system/src/drivers/serial.c **** 	uint16_t len_temp = 0;
 487:../system/src/drivers/serial.c **** 
 488:../system/src/drivers/serial.c **** 	// set to one if there are conditions to stop receiving
 489:../system/src/drivers/serial.c **** 	uint8_t stop_rxing = 0;
 490:../system/src/drivers/serial.c **** 
 491:../system/src/drivers/serial.c **** 	// local variable to store
 492:../system/src/drivers/serial.c **** 	uint8_t value = 0;
 493:../system/src/drivers/serial.c **** 
 494:../system/src/drivers/serial.c **** 	if ((ctx->port->SR & USART_SR_IDLE) == USART_SR_IDLE) {
 1221              		.loc 1 494 0
 1222 0004 0368     		ldr	r3, [r0]
 1223 0006 1A88     		ldrh	r2, [r3]
 1224 0008 12F0100F 		tst	r2, #16
 1225 000c 08D0     		beq	.L116
 495:../system/src/drivers/serial.c **** 		ctx->srl_garbage_storage = (uint8_t)ctx->port->DR;
 1226              		.loc 1 495 0
 1227 000e 9A88     		ldrh	r2, [r3, #4]
 1228 0010 D2B2     		uxtb	r2, r2
 1229 0012 80F82C20 		strb	r2, [r0, #44]
 496:../system/src/drivers/serial.c **** 
 497:../system/src/drivers/serial.c **** 		ctx->total_idle_counter++;
 1230              		.loc 1 497 0
 1231 0016 90F84720 		ldrb	r2, [r0, #71]	@ zero_extendqisi2
 1232 001a 0132     		adds	r2, r2, #1
 1233 001c 80F84720 		strb	r2, [r0, #71]
 1234              	.L116:
 498:../system/src/drivers/serial.c **** 	}
 499:../system/src/drivers/serial.c **** 
 500:../system/src/drivers/serial.c **** 	// if overrun happened, a byte hadn't been transferred from DR before the next byte is received
 501:../system/src/drivers/serial.c **** 	if ((ctx->port->SR & USART_SR_ORE) == USART_SR_ORE) {
 1235              		.loc 1 501 0
 1236 0020 1A88     		ldrh	r2, [r3]
 1237 0022 12F0080F 		tst	r2, #8
 1238 0026 08D0     		beq	.L117
 502:../system/src/drivers/serial.c **** 		switch (ctx->srl_rx_state) {
 1239              		.loc 1 502 0
 1240 0028 94F84420 		ldrb	r2, [r4, #68]	@ zero_extendqisi2
 1241 002c 032A     		cmp	r2, #3
 1242 002e 40F0A480 		bne	.L139
 503:../system/src/drivers/serial.c **** 			case SRL_RXING:
 504:../system/src/drivers/serial.c **** 				ctx->srl_garbage_storage = (uint8_t)ctx->port->DR;
 1243              		.loc 1 504 0
 1244 0032 9A88     		ldrh	r2, [r3, #4]
 1245 0034 D2B2     		uxtb	r2, r2
 1246 0036 84F82C20 		strb	r2, [r4, #44]
 1247              	.L117:
 505:../system/src/drivers/serial.c **** 
 506:../system/src/drivers/serial.c **** 				break;
 507:../system/src/drivers/serial.c **** 			default:
 508:../system/src/drivers/serial.c **** 				// if the UART driver is not receiving actually but hardware controler received any data
 509:../system/src/drivers/serial.c **** 				// it is required to read value of DR register to clear the interrupt
 510:../system/src/drivers/serial.c **** 				ctx->srl_garbage_storage = (uint8_t)ctx->port->DR;
 511:../system/src/drivers/serial.c **** 				break;
 512:../system/src/drivers/serial.c **** 		}
 513:../system/src/drivers/serial.c **** 	}
 514:../system/src/drivers/serial.c **** 
 515:../system/src/drivers/serial.c **** 	// if any data has been received by the UART controller
 516:../system/src/drivers/serial.c **** 	if ((ctx->port->SR & USART_SR_RXNE) == USART_SR_RXNE) {
 1248              		.loc 1 516 0
 1249 003a 1A88     		ldrh	r2, [r3]
 1250 003c 12F0200F 		tst	r2, #32
 1251 0040 52D0     		beq	.L120
 517:../system/src/drivers/serial.c **** 
 518:../system/src/drivers/serial.c **** 		// incremenet the received bytes counter
 519:../system/src/drivers/serial.c **** 		ctx->total_rx_bytes++;
 1252              		.loc 1 519 0
 1253 0042 226D     		ldr	r2, [r4, #80]
 1254 0044 0132     		adds	r2, r2, #1
 1255 0046 2265     		str	r2, [r4, #80]
 520:../system/src/drivers/serial.c **** 
 521:../system/src/drivers/serial.c **** 		switch (ctx->srl_rx_state) {
 1256              		.loc 1 521 0
 1257 0048 94F84420 		ldrb	r2, [r4, #68]	@ zero_extendqisi2
 1258 004c 022A     		cmp	r2, #2
 1259 004e 00F0C880 		beq	.L121
 1260 0052 032A     		cmp	r2, #3
 1261 0054 48D1     		bne	.L120
 522:../system/src/drivers/serial.c **** 			case SRL_RXING: {
 523:../system/src/drivers/serial.c **** 
 524:../system/src/drivers/serial.c **** 				ctx->srl_rx_start_time = master_time;
 1262              		.loc 1 524 0
 1263 0056 834A     		ldr	r2, .L145
 1264 0058 1268     		ldr	r2, [r2]
 1265 005a A263     		str	r2, [r4, #56]
 525:../system/src/drivers/serial.c **** 
 526:../system/src/drivers/serial.c **** 				// raise a flag to signalize that timeout shall be calulated from now.
 527:../system/src/drivers/serial.c **** 				ctx->srl_rx_timeout_calc_started = 1;
 1266              		.loc 1 527 0
 1267 005c 0122     		movs	r2, #1
 1268 005e 84F82F20 		strb	r2, [r4, #47]
 528:../system/src/drivers/serial.c **** 
 529:../system/src/drivers/serial.c **** 				// disable the waiting timeout
 530:../system/src/drivers/serial.c **** 				ctx->srl_rx_timeout_waiting_enable = 0;
 1269              		.loc 1 530 0
 1270 0062 0022     		movs	r2, #0
 1271 0064 84F82E20 		strb	r2, [r4, #46]
 531:../system/src/drivers/serial.c **** 
 532:../system/src/drivers/serial.c **** 				// if there is any data remaining to receive
 533:../system/src/drivers/serial.c **** 				if (ctx->srl_rx_bytes_counter < ctx->srl_rx_bytes_req) {
 1272              		.loc 1 533 0
 1273 0068 228C     		ldrh	r2, [r4, #32]
 1274 006a A18C     		ldrh	r1, [r4, #36]
 1275 006c 8A42     		cmp	r2, r1
 1276 006e 80F0A480 		bcs	.L137
 534:../system/src/drivers/serial.c **** 
 535:../system/src/drivers/serial.c **** 					// storing received byte into buffer
 536:../system/src/drivers/serial.c **** 					ctx->srl_rx_buf_pointer[ctx->srl_rx_bytes_counter] = (uint8_t)ctx->port->DR;
 1277              		.loc 1 536 0
 1278 0072 9988     		ldrh	r1, [r3, #4]
 1279 0074 A369     		ldr	r3, [r4, #24]
 1280 0076 9954     		strb	r1, [r3, r2]
 537:../system/src/drivers/serial.c **** 
 538:../system/src/drivers/serial.c **** 					// check if termination callback pointer has been set
 539:../system/src/drivers/serial.c **** 					if (ctx->srl_rx_term != NULL) {
 1281              		.loc 1 539 0
 1282 0078 E36C     		ldr	r3, [r4, #76]
 1283 007a 002B     		cmp	r3, #0
 1284 007c 00F08980 		beq	.L138
 540:../system/src/drivers/serial.c **** 						// if yes call it
 541:../system/src/drivers/serial.c **** 						stop_rxing = ctx->srl_rx_term(	ctx->srl_rx_buf_pointer[ctx->srl_rx_bytes_counter],
 1285              		.loc 1 541 0
 1286 0080 A569     		ldr	r5, [r4, #24]
 1287 0082 208C     		ldrh	r0, [r4, #32]
 1288              	.LVL86:
 1289 0084 0246     		mov	r2, r0
 1290 0086 2946     		mov	r1, r5
 1291 0088 285C     		ldrb	r0, [r5, r0]	@ zero_extendqisi2
 1292 008a 9847     		blx	r3
 1293              	.LVL87:
 542:../system/src/drivers/serial.c **** 														ctx->srl_rx_buf_pointer,
 543:../system/src/drivers/serial.c **** 														ctx->srl_rx_bytes_counter);
 544:../system/src/drivers/serial.c **** 
 545:../system/src/drivers/serial.c **** 						// and check the return value
 546:../system/src/drivers/serial.c **** 						if (stop_rxing == 1) {
 1294              		.loc 1 546 0
 1295 008c 0128     		cmp	r0, #1
 1296 008e 79D0     		beq	.L141
 1297              	.LVL88:
 1298              	.L124:
 547:../system/src/drivers/serial.c **** 							// if this was the last byte of transmission switch the state
 548:../system/src/drivers/serial.c **** 							// of receiving part to done
 549:../system/src/drivers/serial.c **** 							ctx->srl_rx_state = SRL_RX_DONE;
 550:../system/src/drivers/serial.c **** 
 551:../system/src/drivers/serial.c **** 							ctx->srl_triggered_stop = 0;
 552:../system/src/drivers/serial.c **** 						}
 553:../system/src/drivers/serial.c **** 
 554:../system/src/drivers/serial.c **** 					}
 555:../system/src/drivers/serial.c **** 
 556:../system/src/drivers/serial.c **** 					// checking if this byte in stream holds the protocol information about
 557:../system/src/drivers/serial.c **** 					// how many bytes needs to be received.
 558:../system/src/drivers/serial.c **** 					if (ctx->srl_rx_lenght_param_addres == ctx->srl_rx_bytes_counter) {
 1299              		.loc 1 558 0
 1300 0090 94F84920 		ldrb	r2, [r4, #73]	@ zero_extendqisi2
 1301 0094 238C     		ldrh	r3, [r4, #32]
 1302 0096 9A42     		cmp	r2, r3
 1303 0098 7DD0     		beq	.L142
 1304              	.LVL89:
 1305              	.L125:
 559:../system/src/drivers/serial.c **** 						len_temp = ctx->srl_rx_buf_pointer[ctx->srl_rx_bytes_counter];
 560:../system/src/drivers/serial.c **** 
 561:../system/src/drivers/serial.c **** 						// adding (or substracting) a length modifier
 562:../system/src/drivers/serial.c **** 						len_temp += ctx->srl_rx_lenght_param_modifier;
 563:../system/src/drivers/serial.c **** 
 564:../system/src/drivers/serial.c **** 						// if the target length is bigger than buffer size switch to error state
 565:../system/src/drivers/serial.c **** 						if (len_temp >= ctx->srl_rx_buf_ln) {
 566:../system/src/drivers/serial.c **** 							ctx->srl_rx_error_reason = SRL_ERR_OVERFLOW;
 567:../system/src/drivers/serial.c **** 							ctx->srl_rx_state = SRL_RX_ERROR;
 568:../system/src/drivers/serial.c **** 							stop_rxing = 1;
 569:../system/src/drivers/serial.c **** 						}
 570:../system/src/drivers/serial.c **** 						else {
 571:../system/src/drivers/serial.c **** 							ctx->srl_rx_bytes_req = len_temp;
 572:../system/src/drivers/serial.c **** 						}
 573:../system/src/drivers/serial.c **** 					}
 574:../system/src/drivers/serial.c **** 
 575:../system/src/drivers/serial.c **** 					// moving buffer pointer forward
 576:../system/src/drivers/serial.c **** 					ctx->srl_rx_bytes_counter++;
 1306              		.loc 1 576 0
 1307 009a 0133     		adds	r3, r3, #1
 1308 009c 2384     		strh	r3, [r4, #32]	@ movhi
 1309              	.LVL90:
 1310              	.L123:
 577:../system/src/drivers/serial.c **** 
 578:../system/src/drivers/serial.c **** 				}
 579:../system/src/drivers/serial.c **** 
 580:../system/src/drivers/serial.c **** 				// if the user want the driver to stop receiving after certain is received
 581:../system/src/drivers/serial.c **** 				if (ctx->srl_triggered_stop == 1) {
 1311              		.loc 1 581 0
 1312 009e 94F82930 		ldrb	r3, [r4, #41]	@ zero_extendqisi2
 1313 00a2 012B     		cmp	r3, #1
 1314 00a4 00F08B80 		beq	.L143
 1315              	.LVL91:
 1316              	.L127:
 582:../system/src/drivers/serial.c **** 					if (ctx->srl_rx_buf_pointer[ctx->srl_rx_bytes_counter - 1] == ctx->srl_stop_trigger) {
 583:../system/src/drivers/serial.c **** 						ctx->srl_rx_state = SRL_RX_DONE;
 584:../system/src/drivers/serial.c **** 						stop_rxing = 1;
 585:../system/src/drivers/serial.c **** 					}
 586:../system/src/drivers/serial.c **** 				}
 587:../system/src/drivers/serial.c **** 
 588:../system/src/drivers/serial.c **** 				// if after incrementing a pointer we reached the end of the buffer
 589:../system/src/drivers/serial.c **** 				if (ctx->srl_rx_bytes_counter >= ctx->srl_rx_bytes_req) {
 1317              		.loc 1 589 0
 1318 00a8 228C     		ldrh	r2, [r4, #32]
 1319 00aa A38C     		ldrh	r3, [r4, #36]
 1320 00ac 9A42     		cmp	r2, r3
 1321 00ae C0F09580 		bcc	.L128
 1322              	.LVL92:
 590:../system/src/drivers/serial.c **** 
 591:../system/src/drivers/serial.c **** 					// enabling a flag to disble receiver
 592:../system/src/drivers/serial.c **** 					stop_rxing = 1;
 593:../system/src/drivers/serial.c **** 
 594:../system/src/drivers/serial.c **** 					// setting a state to receive done
 595:../system/src/drivers/serial.c **** 					ctx->srl_rx_state = SRL_RX_DONE;
 1323              		.loc 1 595 0
 1324 00b2 0423     		movs	r3, #4
 1325 00b4 84F84430 		strb	r3, [r4, #68]
 1326              	.LVL93:
 1327              	.L129:
 596:../system/src/drivers/serial.c **** 				}
 597:../system/src/drivers/serial.c **** 
 598:../system/src/drivers/serial.c **** 				if (stop_rxing == 1) {
 599:../system/src/drivers/serial.c **** 
 600:../system/src/drivers/serial.c **** 					ctx->srl_rx_timeout_calc_started = 0;
 1328              		.loc 1 600 0
 1329 00b8 0023     		movs	r3, #0
 1330 00ba 84F82F30 		strb	r3, [r4, #47]
 601:../system/src/drivers/serial.c **** 
 602:../system/src/drivers/serial.c **** 					// disabling UART receiver and its interrupt
 603:../system/src/drivers/serial.c **** 					ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_RE);
 1331              		.loc 1 603 0
 1332 00be 2268     		ldr	r2, [r4]
 1333 00c0 9389     		ldrh	r3, [r2, #12]
 1334 00c2 9BB2     		uxth	r3, r3
 1335 00c4 23F00403 		bic	r3, r3, #4
 1336 00c8 9BB2     		uxth	r3, r3
 1337 00ca 9381     		strh	r3, [r2, #12]	@ movhi
 604:../system/src/drivers/serial.c **** 					ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_RXNEIE);
 1338              		.loc 1 604 0
 1339 00cc 2268     		ldr	r2, [r4]
 1340 00ce 9389     		ldrh	r3, [r2, #12]
 1341 00d0 9BB2     		uxth	r3, r3
 1342 00d2 23F02003 		bic	r3, r3, #32
 1343 00d6 9BB2     		uxth	r3, r3
 1344 00d8 9381     		strh	r3, [r2, #12]	@ movhi
 605:../system/src/drivers/serial.c **** 					ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_IDLEIE);
 1345              		.loc 1 605 0
 1346 00da 2268     		ldr	r2, [r4]
 1347 00dc 9389     		ldrh	r3, [r2, #12]
 1348 00de 9BB2     		uxth	r3, r3
 1349 00e0 23F01003 		bic	r3, r3, #16
 1350 00e4 9BB2     		uxth	r3, r3
 1351 00e6 9381     		strh	r3, [r2, #12]	@ movhi
 1352              	.LVL94:
 1353              	.L120:
 606:../system/src/drivers/serial.c **** 				}
 607:../system/src/drivers/serial.c **** 
 608:../system/src/drivers/serial.c **** 				break;
 609:../system/src/drivers/serial.c **** 			}
 610:../system/src/drivers/serial.c **** 
 611:../system/src/drivers/serial.c **** 			// the state when a driver is waiting for start character to appear on serial link
 612:../system/src/drivers/serial.c **** 			case SRL_WAITING_TO_RX: {
 613:../system/src/drivers/serial.c **** 
 614:../system/src/drivers/serial.c **** 				// storing the value of DR register into local variable to protect against data races
 615:../system/src/drivers/serial.c **** 				// which may happened if this IT routine will be preempted by another (long) one
 616:../system/src/drivers/serial.c **** 				value = (uint8_t)ctx->port->DR;
 617:../system/src/drivers/serial.c **** 
 618:../system/src/drivers/serial.c **** 				// checking if start character was received
 619:../system/src/drivers/serial.c **** 				if (value == ctx->srl_start_trigger) {
 620:../system/src/drivers/serial.c **** 
 621:../system/src/drivers/serial.c **** 					// storing received byte in buffer as firts one
 622:../system/src/drivers/serial.c **** 					ctx->srl_rx_buf_pointer[ctx->srl_rx_bytes_counter] = value;
 623:../system/src/drivers/serial.c **** 
 624:../system/src/drivers/serial.c **** 					// increasing the counter value
 625:../system/src/drivers/serial.c **** 					ctx->srl_rx_bytes_counter++;
 626:../system/src/drivers/serial.c **** 
 627:../system/src/drivers/serial.c **** 					// change state to receiving
 628:../system/src/drivers/serial.c **** 					ctx->srl_rx_state = SRL_RXING;
 629:../system/src/drivers/serial.c **** 
 630:../system/src/drivers/serial.c **** 					// as receiving is started there is no point to calculate waiting timeout
 631:../system/src/drivers/serial.c **** 					ctx->srl_rx_timeout_waiting_enable = 0;
 632:../system/src/drivers/serial.c **** 				}
 633:../system/src/drivers/serial.c **** 				else {
 634:../system/src/drivers/serial.c **** 					// if this is not start byte just store it in garbage buffer to clear interrupt condition
 635:../system/src/drivers/serial.c **** 					ctx->srl_garbage_storage = value;
 636:../system/src/drivers/serial.c **** 				}
 637:../system/src/drivers/serial.c **** 				break;
 638:../system/src/drivers/serial.c **** 			}
 639:../system/src/drivers/serial.c **** 			default: break;
 640:../system/src/drivers/serial.c **** 		}
 641:../system/src/drivers/serial.c **** 
 642:../system/src/drivers/serial.c **** 	}
 643:../system/src/drivers/serial.c **** 
 644:../system/src/drivers/serial.c **** 	// if one byte was successfully transferred from DR to shift register for transmission over USART
 645:../system/src/drivers/serial.c **** 	if ((ctx->port->SR & USART_SR_TXE) == USART_SR_TXE) {
 1354              		.loc 1 645 0
 1355 00e8 2368     		ldr	r3, [r4]
 1356 00ea 1A88     		ldrh	r2, [r3]
 1357 00ec 12F0800F 		tst	r2, #128
 1358 00f0 42D0     		beq	.L115
 646:../system/src/drivers/serial.c **** 
 647:../system/src/drivers/serial.c **** 		// increment the transmitted bytes counter
 648:../system/src/drivers/serial.c **** 		ctx->total_tx_bytes++;
 1359              		.loc 1 648 0
 1360 00f2 626D     		ldr	r2, [r4, #84]
 1361 00f4 0132     		adds	r2, r2, #1
 1362 00f6 6265     		str	r2, [r4, #84]
 649:../system/src/drivers/serial.c **** 
 650:../system/src/drivers/serial.c **** 		switch (ctx->srl_tx_state) {
 1363              		.loc 1 650 0
 1364 00f8 94F84520 		ldrb	r2, [r4, #69]	@ zero_extendqisi2
 1365 00fc 032A     		cmp	r2, #3
 1366 00fe 3BD1     		bne	.L115
 651:../system/src/drivers/serial.c **** 		case SRL_TXING:
 652:../system/src/drivers/serial.c **** 			if (ctx->srl_tx_bytes_counter < ctx->srl_tx_bytes_req) {
 1367              		.loc 1 652 0
 1368 0100 618C     		ldrh	r1, [r4, #34]
 1369 0102 E28C     		ldrh	r2, [r4, #38]
 1370 0104 9142     		cmp	r1, r2
 1371 0106 80F08280 		bcs	.L133
 653:../system/src/drivers/serial.c **** 				if (ctx->te_port != 0) {
 1372              		.loc 1 653 0
 1373 010a E068     		ldr	r0, [r4, #12]
 1374 010c 10B1     		cbz	r0, .L134
 654:../system/src/drivers/serial.c **** 					GPIO_SetBits(ctx->te_port, ctx->te_pin);
 1375              		.loc 1 654 0
 1376 010e 218A     		ldrh	r1, [r4, #16]
 1377 0110 FFF7FEFF 		bl	GPIO_SetBits
 1378              	.LVL95:
 1379              	.L134:
 655:../system/src/drivers/serial.c **** 				}
 656:../system/src/drivers/serial.c **** 
 657:../system/src/drivers/serial.c **** 				ctx->port->DR = ctx->srl_tx_buf_pointer[ctx->srl_tx_bytes_counter++];
 1380              		.loc 1 657 0
 1381 0114 6169     		ldr	r1, [r4, #20]
 1382 0116 638C     		ldrh	r3, [r4, #34]
 1383 0118 5A1C     		adds	r2, r3, #1
 1384 011a 6284     		strh	r2, [r4, #34]	@ movhi
 1385 011c 2268     		ldr	r2, [r4]
 1386 011e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1387 0120 9380     		strh	r3, [r2, #4]	@ movhi
 1388              	.L135:
 658:../system/src/drivers/serial.c **** 			}
 659:../system/src/drivers/serial.c **** 			else {
 660:../system/src/drivers/serial.c **** 				while((ctx->port->SR & USART_SR_TC) != USART_SR_TC);
 661:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_TE);		//wyġṗczanie nadajnika portu szeregowego
 662:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_TXEIE);
 663:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_TCIE);	// wyġṗczanie przerwañ od portu szeregoweg
 664:../system/src/drivers/serial.c **** 				ctx->port->SR &= (0xFFFFFFFF ^ USART_SR_TC);
 665:../system/src/drivers/serial.c **** 				ctx->srl_tx_state = SRL_TX_IDLE;
 666:../system/src/drivers/serial.c **** 
 667:../system/src/drivers/serial.c **** 				if (ctx->te_port != 0)
 668:../system/src/drivers/serial.c **** 					GPIO_ResetBits(ctx->te_port, ctx->te_pin);
 669:../system/src/drivers/serial.c **** 
 670:../system/src/drivers/serial.c **** 			}
 671:../system/src/drivers/serial.c **** 
 672:../system/src/drivers/serial.c **** 			if (ctx->srl_tx_bytes_counter >= ctx->srl_tx_buf_ln ||
 1389              		.loc 1 672 0
 1390 0122 628C     		ldrh	r2, [r4, #34]
 1391 0124 E38B     		ldrh	r3, [r4, #30]
 1392 0126 9A42     		cmp	r2, r3
 1393 0128 02D2     		bcs	.L136
 673:../system/src/drivers/serial.c **** 					ctx->srl_tx_bytes_req >= ctx->srl_tx_buf_ln) {
 1394              		.loc 1 673 0 discriminator 1
 1395 012a E28C     		ldrh	r2, [r4, #38]
 672:../system/src/drivers/serial.c **** 					ctx->srl_tx_bytes_req >= ctx->srl_tx_buf_ln) {
 1396              		.loc 1 672 0 discriminator 1
 1397 012c 9342     		cmp	r3, r2
 1398 012e 23D8     		bhi	.L115
 1399              	.L136:
 674:../system/src/drivers/serial.c **** 
 675:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_TE);		//wyġṗczanie nadajnika portu szeregowego
 1400              		.loc 1 675 0
 1401 0130 2268     		ldr	r2, [r4]
 1402 0132 9389     		ldrh	r3, [r2, #12]
 1403 0134 9BB2     		uxth	r3, r3
 1404 0136 23F00803 		bic	r3, r3, #8
 1405 013a 9BB2     		uxth	r3, r3
 1406 013c 9381     		strh	r3, [r2, #12]	@ movhi
 676:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_TXEIE);
 1407              		.loc 1 676 0
 1408 013e 2268     		ldr	r2, [r4]
 1409 0140 9389     		ldrh	r3, [r2, #12]
 1410 0142 9BB2     		uxth	r3, r3
 1411 0144 23F08003 		bic	r3, r3, #128
 1412 0148 9BB2     		uxth	r3, r3
 1413 014a 9381     		strh	r3, [r2, #12]	@ movhi
 677:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_TCIE);	// wyġṗczanie przerwañ od portu szeregoweg
 1414              		.loc 1 677 0
 1415 014c 2268     		ldr	r2, [r4]
 1416 014e 9389     		ldrh	r3, [r2, #12]
 1417 0150 9BB2     		uxth	r3, r3
 1418 0152 23F04003 		bic	r3, r3, #64
 1419 0156 9BB2     		uxth	r3, r3
 1420 0158 9381     		strh	r3, [r2, #12]	@ movhi
 678:../system/src/drivers/serial.c **** 				ctx->port->SR &= (0xFFFFFFFF ^ USART_SR_TC);
 1421              		.loc 1 678 0
 1422 015a 2268     		ldr	r2, [r4]
 1423 015c 1388     		ldrh	r3, [r2]
 1424 015e 9BB2     		uxth	r3, r3
 1425 0160 23F04003 		bic	r3, r3, #64
 1426 0164 9BB2     		uxth	r3, r3
 1427 0166 1380     		strh	r3, [r2]	@ movhi
 679:../system/src/drivers/serial.c **** 				ctx->srl_tx_state = SRL_TX_IDLE;
 1428              		.loc 1 679 0
 1429 0168 0123     		movs	r3, #1
 1430 016a 84F84530 		strb	r3, [r4, #69]
 680:../system/src/drivers/serial.c **** 
 681:../system/src/drivers/serial.c **** 				if (ctx->te_port != 0)
 1431              		.loc 1 681 0
 1432 016e E068     		ldr	r0, [r4, #12]
 1433 0170 10B1     		cbz	r0, .L115
 682:../system/src/drivers/serial.c **** 					GPIO_ResetBits(ctx->te_port, ctx->te_pin);
 1434              		.loc 1 682 0
 1435 0172 218A     		ldrh	r1, [r4, #16]
 1436 0174 FFF7FEFF 		bl	GPIO_ResetBits
 1437              	.LVL96:
 1438              	.L115:
 683:../system/src/drivers/serial.c **** 					//GPIO_ResetBits(GPIOA, GPIO_Pin_7);
 684:../system/src/drivers/serial.c **** 
 685:../system/src/drivers/serial.c **** 			}
 686:../system/src/drivers/serial.c **** 
 687:../system/src/drivers/serial.c **** 			break;
 688:../system/src/drivers/serial.c **** 			default: break;
 689:../system/src/drivers/serial.c **** 		}
 690:../system/src/drivers/serial.c **** 	}
 691:../system/src/drivers/serial.c **** 
 692:../system/src/drivers/serial.c **** }
 1439              		.loc 1 692 0
 1440 0178 38BD     		pop	{r3, r4, r5, pc}
 1441              	.LVL97:
 1442              	.L139:
 510:../system/src/drivers/serial.c **** 				break;
 1443              		.loc 1 510 0
 1444 017a 9A88     		ldrh	r2, [r3, #4]
 1445 017c D2B2     		uxtb	r2, r2
 1446 017e 84F82C20 		strb	r2, [r4, #44]
 511:../system/src/drivers/serial.c **** 		}
 1447              		.loc 1 511 0
 1448 0182 5AE7     		b	.L117
 1449              	.LVL98:
 1450              	.L141:
 549:../system/src/drivers/serial.c **** 
 1451              		.loc 1 549 0
 1452 0184 0423     		movs	r3, #4
 1453 0186 84F84430 		strb	r3, [r4, #68]
 551:../system/src/drivers/serial.c **** 						}
 1454              		.loc 1 551 0
 1455 018a 0023     		movs	r3, #0
 1456 018c 84F82930 		strb	r3, [r4, #41]
 1457 0190 7EE7     		b	.L124
 1458              	.LVL99:
 1459              	.L138:
 489:../system/src/drivers/serial.c **** 
 1460              		.loc 1 489 0
 1461 0192 0020     		movs	r0, #0
 1462              	.LVL100:
 1463 0194 7CE7     		b	.L124
 1464              	.LVL101:
 1465              	.L142:
 559:../system/src/drivers/serial.c **** 
 1466              		.loc 1 559 0
 1467 0196 A269     		ldr	r2, [r4, #24]
 1468 0198 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1469              	.LVL102:
 562:../system/src/drivers/serial.c **** 
 1470              		.loc 1 562 0
 1471 019a 94F84A20 		ldrb	r2, [r4, #74]	@ zero_extendqisi2
 1472 019e 0A44     		add	r2, r2, r1
 1473              	.LVL103:
 565:../system/src/drivers/serial.c **** 							ctx->srl_rx_error_reason = SRL_ERR_OVERFLOW;
 1474              		.loc 1 565 0
 1475 01a0 A18B     		ldrh	r1, [r4, #28]
 1476 01a2 9142     		cmp	r1, r2
 1477 01a4 07D8     		bhi	.L126
 566:../system/src/drivers/serial.c **** 							ctx->srl_rx_state = SRL_RX_ERROR;
 1478              		.loc 1 566 0
 1479 01a6 0322     		movs	r2, #3
 1480              	.LVL104:
 1481 01a8 84F84620 		strb	r2, [r4, #70]
 1482              	.LVL105:
 567:../system/src/drivers/serial.c **** 							stop_rxing = 1;
 1483              		.loc 1 567 0
 1484 01ac 0522     		movs	r2, #5
 1485 01ae 84F84420 		strb	r2, [r4, #68]
 1486              	.LVL106:
 568:../system/src/drivers/serial.c **** 						}
 1487              		.loc 1 568 0
 1488 01b2 0120     		movs	r0, #1
 1489 01b4 71E7     		b	.L125
 1490              	.LVL107:
 1491              	.L126:
 571:../system/src/drivers/serial.c **** 						}
 1492              		.loc 1 571 0
 1493 01b6 A284     		strh	r2, [r4, #36]	@ movhi
 1494 01b8 6FE7     		b	.L125
 1495              	.LVL108:
 1496              	.L137:
 489:../system/src/drivers/serial.c **** 
 1497              		.loc 1 489 0
 1498 01ba 0020     		movs	r0, #0
 1499              	.LVL109:
 1500 01bc 6FE7     		b	.L123
 1501              	.LVL110:
 1502              	.L143:
 582:../system/src/drivers/serial.c **** 						ctx->srl_rx_state = SRL_RX_DONE;
 1503              		.loc 1 582 0
 1504 01be A269     		ldr	r2, [r4, #24]
 1505 01c0 218C     		ldrh	r1, [r4, #32]
 1506 01c2 0A44     		add	r2, r2, r1
 1507 01c4 12F8011C 		ldrb	r1, [r2, #-1]	@ zero_extendqisi2
 1508 01c8 94F82B20 		ldrb	r2, [r4, #43]	@ zero_extendqisi2
 1509 01cc 9142     		cmp	r1, r2
 1510 01ce 7FF46BAF 		bne	.L127
 583:../system/src/drivers/serial.c **** 						stop_rxing = 1;
 1511              		.loc 1 583 0
 1512 01d2 0422     		movs	r2, #4
 1513 01d4 84F84420 		strb	r2, [r4, #68]
 1514              	.LVL111:
 584:../system/src/drivers/serial.c **** 					}
 1515              		.loc 1 584 0
 1516 01d8 1846     		mov	r0, r3
 1517 01da 65E7     		b	.L127
 1518              	.LVL112:
 1519              	.L128:
 598:../system/src/drivers/serial.c **** 
 1520              		.loc 1 598 0
 1521 01dc 0128     		cmp	r0, #1
 1522 01de 83D1     		bne	.L120
 1523 01e0 6AE7     		b	.L129
 1524              	.LVL113:
 1525              	.L121:
 616:../system/src/drivers/serial.c **** 
 1526              		.loc 1 616 0
 1527 01e2 9B88     		ldrh	r3, [r3, #4]
 1528 01e4 DBB2     		uxtb	r3, r3
 1529              	.LVL114:
 619:../system/src/drivers/serial.c **** 
 1530              		.loc 1 619 0
 1531 01e6 94F82A20 		ldrb	r2, [r4, #42]	@ zero_extendqisi2
 1532 01ea 9A42     		cmp	r2, r3
 1533 01ec 02D0     		beq	.L144
 635:../system/src/drivers/serial.c **** 				}
 1534              		.loc 1 635 0
 1535 01ee 84F82C30 		strb	r3, [r4, #44]
 1536 01f2 79E7     		b	.L120
 1537              	.L144:
 622:../system/src/drivers/serial.c **** 
 1538              		.loc 1 622 0
 1539 01f4 A169     		ldr	r1, [r4, #24]
 1540 01f6 228C     		ldrh	r2, [r4, #32]
 1541 01f8 8B54     		strb	r3, [r1, r2]
 625:../system/src/drivers/serial.c **** 
 1542              		.loc 1 625 0
 1543 01fa 238C     		ldrh	r3, [r4, #32]
 1544              	.LVL115:
 1545 01fc 0133     		adds	r3, r3, #1
 1546 01fe 2384     		strh	r3, [r4, #32]	@ movhi
 1547              	.LVL116:
 628:../system/src/drivers/serial.c **** 
 1548              		.loc 1 628 0
 1549 0200 0323     		movs	r3, #3
 1550 0202 84F84430 		strb	r3, [r4, #68]
 631:../system/src/drivers/serial.c **** 				}
 1551              		.loc 1 631 0
 1552 0206 0023     		movs	r3, #0
 1553 0208 84F82E30 		strb	r3, [r4, #46]
 1554 020c 6CE7     		b	.L120
 1555              	.LVL117:
 1556              	.L133:
 660:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_TE);		//wyġṗczanie nadajnika portu szeregowego
 1557              		.loc 1 660 0 discriminator 1
 1558 020e 1A88     		ldrh	r2, [r3]
 1559 0210 12F0400F 		tst	r2, #64
 1560 0214 FBD0     		beq	.L133
 661:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_TXEIE);
 1561              		.loc 1 661 0
 1562 0216 9A89     		ldrh	r2, [r3, #12]
 1563 0218 92B2     		uxth	r2, r2
 1564 021a 22F00802 		bic	r2, r2, #8
 1565 021e 92B2     		uxth	r2, r2
 1566 0220 9A81     		strh	r2, [r3, #12]	@ movhi
 662:../system/src/drivers/serial.c **** 				ctx->port->CR1 &= (0xFFFFFFFF ^ USART_CR1_TCIE);	// wyġṗczanie przerwañ od portu szeregoweg
 1567              		.loc 1 662 0
 1568 0222 2268     		ldr	r2, [r4]
 1569 0224 9389     		ldrh	r3, [r2, #12]
 1570 0226 9BB2     		uxth	r3, r3
 1571 0228 23F08003 		bic	r3, r3, #128
 1572 022c 9BB2     		uxth	r3, r3
 1573 022e 9381     		strh	r3, [r2, #12]	@ movhi
 663:../system/src/drivers/serial.c **** 				ctx->port->SR &= (0xFFFFFFFF ^ USART_SR_TC);
 1574              		.loc 1 663 0
 1575 0230 2268     		ldr	r2, [r4]
 1576 0232 9389     		ldrh	r3, [r2, #12]
 1577 0234 9BB2     		uxth	r3, r3
 1578 0236 23F04003 		bic	r3, r3, #64
 1579 023a 9BB2     		uxth	r3, r3
 1580 023c 9381     		strh	r3, [r2, #12]	@ movhi
 664:../system/src/drivers/serial.c **** 				ctx->srl_tx_state = SRL_TX_IDLE;
 1581              		.loc 1 664 0
 1582 023e 2268     		ldr	r2, [r4]
 1583 0240 1388     		ldrh	r3, [r2]
 1584 0242 9BB2     		uxth	r3, r3
 1585 0244 23F04003 		bic	r3, r3, #64
 1586 0248 9BB2     		uxth	r3, r3
 1587 024a 1380     		strh	r3, [r2]	@ movhi
 665:../system/src/drivers/serial.c **** 
 1588              		.loc 1 665 0
 1589 024c 0123     		movs	r3, #1
 1590 024e 84F84530 		strb	r3, [r4, #69]
 667:../system/src/drivers/serial.c **** 					GPIO_ResetBits(ctx->te_port, ctx->te_pin);
 1591              		.loc 1 667 0
 1592 0252 E068     		ldr	r0, [r4, #12]
 1593 0254 0028     		cmp	r0, #0
 1594 0256 3FF464AF 		beq	.L135
 668:../system/src/drivers/serial.c **** 
 1595              		.loc 1 668 0
 1596 025a 218A     		ldrh	r1, [r4, #16]
 1597 025c FFF7FEFF 		bl	GPIO_ResetBits
 1598              	.LVL118:
 1599 0260 5FE7     		b	.L135
 1600              	.L146:
 1601 0262 00BF     		.align	2
 1602              	.L145:
 1603 0264 00000000 		.word	master_time
 1604              		.cfi_endproc
 1605              	.LFE80:
 1607              		.section	.text.srl_get_num_bytes_rxed,"ax",%progbits
 1608              		.align	1
 1609              		.global	srl_get_num_bytes_rxed
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu softvfp
 1615              	srl_get_num_bytes_rxed:
 1616              	.LFB81:
 693:../system/src/drivers/serial.c **** 
 694:../system/src/drivers/serial.c **** uint16_t srl_get_num_bytes_rxed(srl_context_t *ctx) {
 1617              		.loc 1 694 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 0
 1620              		@ frame_needed = 0, uses_anonymous_args = 0
 1621              		@ link register save eliminated.
 1622              	.LVL119:
 695:../system/src/drivers/serial.c **** 	return ctx->srl_rx_bytes_counter;
 696:../system/src/drivers/serial.c **** }
 1623              		.loc 1 696 0
 1624 0000 008C     		ldrh	r0, [r0, #32]
 1625              	.LVL120:
 1626 0002 7047     		bx	lr
 1627              		.cfi_endproc
 1628              	.LFE81:
 1630              		.section	.text.srl_get_rx_buffer,"ax",%progbits
 1631              		.align	1
 1632              		.global	srl_get_rx_buffer
 1633              		.syntax unified
 1634              		.thumb
 1635              		.thumb_func
 1636              		.fpu softvfp
 1638              	srl_get_rx_buffer:
 1639              	.LFB82:
 697:../system/src/drivers/serial.c **** 
 698:../system/src/drivers/serial.c **** uint8_t* srl_get_rx_buffer(srl_context_t *ctx) {
 1640              		.loc 1 698 0
 1641              		.cfi_startproc
 1642              		@ args = 0, pretend = 0, frame = 0
 1643              		@ frame_needed = 0, uses_anonymous_args = 0
 1644              		@ link register save eliminated.
 1645              	.LVL121:
 699:../system/src/drivers/serial.c **** 	return ctx->srl_rx_buf_pointer;
 700:../system/src/drivers/serial.c **** }
 1646              		.loc 1 700 0
 1647 0000 8069     		ldr	r0, [r0, #24]
 1648              	.LVL122:
 1649 0002 7047     		bx	lr
 1650              		.cfi_endproc
 1651              	.LFE82:
 1653              		.section	.text.srl_keep_tx_delay,"ax",%progbits
 1654              		.align	1
 1655              		.global	srl_keep_tx_delay
 1656              		.syntax unified
 1657              		.thumb
 1658              		.thumb_func
 1659              		.fpu softvfp
 1661              	srl_keep_tx_delay:
 1662              	.LFB83:
 701:../system/src/drivers/serial.c **** 
 702:../system/src/drivers/serial.c **** void srl_keep_tx_delay(srl_context_t *ctx) {
 1663              		.loc 1 702 0
 1664              		.cfi_startproc
 1665              		@ args = 0, pretend = 0, frame = 0
 1666              		@ frame_needed = 0, uses_anonymous_args = 0
 1667              		@ link register save eliminated.
 1668              	.LVL123:
 703:../system/src/drivers/serial.c **** 	if (ctx != 0) {
 1669              		.loc 1 703 0
 1670 0000 38B1     		cbz	r0, .L149
 704:../system/src/drivers/serial.c **** 
 705:../system/src/drivers/serial.c **** 		// check if pre tx delay is enabled by an user
 706:../system/src/drivers/serial.c **** 		if (ctx->srl_tx_start_time != 0xFFFFFFFFu) {
 1671              		.loc 1 706 0
 1672 0002 026C     		ldr	r2, [r0, #64]
 1673 0004 B2F1FF3F 		cmp	r2, #-1
 1674 0008 03D0     		beq	.L149
 707:../system/src/drivers/serial.c **** 
 708:../system/src/drivers/serial.c **** 			// if it is enabled then check if the serial port is currently set to waiting state
 709:../system/src/drivers/serial.c **** 			if (ctx->srl_tx_state == SRL_TX_WAITING) {
 1675              		.loc 1 709 0
 1676 000a 90F84510 		ldrb	r1, [r0, #69]	@ zero_extendqisi2
 1677 000e 0229     		cmp	r1, #2
 1678 0010 00D0     		beq	.L151
 1679              	.L149:
 710:../system/src/drivers/serial.c **** 
 711:../system/src/drivers/serial.c **** 				// check if a delay has expired
 712:../system/src/drivers/serial.c **** 				if (main_get_master_time() - ctx->srl_tx_start_time >= SRL_TX_DELAY_IN_MS) {
 713:../system/src/drivers/serial.c **** 
 714:../system/src/drivers/serial.c **** 					// if yes start the transmission
 715:../system/src/drivers/serial.c **** 					ctx->port->CR1 |= USART_CR1_TE;
 716:../system/src/drivers/serial.c **** 					ctx->port->SR &= (0xFFFFFFFF ^ USART_SR_TC);
 717:../system/src/drivers/serial.c **** 					ctx->port->DR = ctx->srl_tx_buf_pointer[0];
 718:../system/src/drivers/serial.c **** 
 719:../system/src/drivers/serial.c **** 					ctx->srl_tx_bytes_counter = 1;
 720:../system/src/drivers/serial.c **** 
 721:../system/src/drivers/serial.c **** 					ctx->srl_tx_state = SRL_TXING;
 722:../system/src/drivers/serial.c **** 
 723:../system/src/drivers/serial.c **** 					ctx->port->CR1 |= USART_CR1_TXEIE;
 724:../system/src/drivers/serial.c **** 					ctx->port->CR1 |= USART_CR1_TCIE;
 725:../system/src/drivers/serial.c **** 				}
 726:../system/src/drivers/serial.c **** 			}
 727:../system/src/drivers/serial.c **** 
 728:../system/src/drivers/serial.c **** 		}
 729:../system/src/drivers/serial.c **** 	}
 730:../system/src/drivers/serial.c **** }
 1680              		.loc 1 730 0
 1681 0012 7047     		bx	lr
 1682              	.L151:
 1683              	.LBB16:
 1684              	.LBB17:
 1685              		.loc 3 63 0
 1686 0014 1249     		ldr	r1, .L152
 1687 0016 0968     		ldr	r1, [r1]
 1688              	.LBE17:
 1689              	.LBE16:
 712:../system/src/drivers/serial.c **** 
 1690              		.loc 1 712 0
 1691 0018 8A1A     		subs	r2, r1, r2
 1692 001a 1D2A     		cmp	r2, #29
 1693 001c F9D9     		bls	.L149
 715:../system/src/drivers/serial.c **** 					ctx->port->SR &= (0xFFFFFFFF ^ USART_SR_TC);
 1694              		.loc 1 715 0
 1695 001e 0168     		ldr	r1, [r0]
 1696 0020 8A89     		ldrh	r2, [r1, #12]
 1697 0022 42F00802 		orr	r2, r2, #8
 1698 0026 8A81     		strh	r2, [r1, #12]	@ movhi
 716:../system/src/drivers/serial.c **** 					ctx->port->DR = ctx->srl_tx_buf_pointer[0];
 1699              		.loc 1 716 0
 1700 0028 0168     		ldr	r1, [r0]
 1701 002a 0A88     		ldrh	r2, [r1]
 1702 002c 92B2     		uxth	r2, r2
 1703 002e 22F04002 		bic	r2, r2, #64
 1704 0032 92B2     		uxth	r2, r2
 1705 0034 0A80     		strh	r2, [r1]	@ movhi
 717:../system/src/drivers/serial.c **** 
 1706              		.loc 1 717 0
 1707 0036 4169     		ldr	r1, [r0, #20]
 1708 0038 0268     		ldr	r2, [r0]
 1709 003a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1710 003c 9180     		strh	r1, [r2, #4]	@ movhi
 719:../system/src/drivers/serial.c **** 
 1711              		.loc 1 719 0
 1712 003e 0122     		movs	r2, #1
 1713 0040 4284     		strh	r2, [r0, #34]	@ movhi
 721:../system/src/drivers/serial.c **** 
 1714              		.loc 1 721 0
 1715 0042 0322     		movs	r2, #3
 1716 0044 80F84520 		strb	r2, [r0, #69]
 723:../system/src/drivers/serial.c **** 					ctx->port->CR1 |= USART_CR1_TCIE;
 1717              		.loc 1 723 0
 1718 0048 0168     		ldr	r1, [r0]
 1719 004a 8A89     		ldrh	r2, [r1, #12]
 1720 004c 42F08002 		orr	r2, r2, #128
 1721 0050 8A81     		strh	r2, [r1, #12]	@ movhi
 724:../system/src/drivers/serial.c **** 				}
 1722              		.loc 1 724 0
 1723 0052 0268     		ldr	r2, [r0]
 1724 0054 9389     		ldrh	r3, [r2, #12]
 1725 0056 43F04003 		orr	r3, r3, #64
 1726 005a 9381     		strh	r3, [r2, #12]	@ movhi
 1727              		.loc 1 730 0
 1728 005c D9E7     		b	.L149
 1729              	.L153:
 1730 005e 00BF     		.align	2
 1731              	.L152:
 1732 0060 00000000 		.word	master_time
 1733              		.cfi_endproc
 1734              	.LFE83:
 1736              		.section	.text.srl_switch_tx_delay,"ax",%progbits
 1737              		.align	1
 1738              		.global	srl_switch_tx_delay
 1739              		.syntax unified
 1740              		.thumb
 1741              		.thumb_func
 1742              		.fpu softvfp
 1744              	srl_switch_tx_delay:
 1745              	.LFB84:
 731:../system/src/drivers/serial.c **** 
 732:../system/src/drivers/serial.c **** void srl_switch_tx_delay(srl_context_t *ctx, uint8_t disable_enable) {
 1746              		.loc 1 732 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 0
 1749              		@ frame_needed = 0, uses_anonymous_args = 0
 1750              		@ link register save eliminated.
 1751              	.LVL124:
 733:../system/src/drivers/serial.c **** 	if (ctx != 0) {
 1752              		.loc 1 733 0
 1753 0000 20B1     		cbz	r0, .L154
 734:../system/src/drivers/serial.c **** 
 735:../system/src/drivers/serial.c **** 		if (disable_enable == 1) {
 1754              		.loc 1 735 0
 1755 0002 0129     		cmp	r1, #1
 1756 0004 03D0     		beq	.L157
 736:../system/src/drivers/serial.c **** 			ctx->srl_tx_start_time = 0x0u;
 737:../system/src/drivers/serial.c **** 		}
 738:../system/src/drivers/serial.c **** 		else {
 739:../system/src/drivers/serial.c **** 			ctx->srl_tx_start_time = 0xFFFFFFFFu;
 1757              		.loc 1 739 0
 1758 0006 4FF0FF32 		mov	r2, #-1
 1759 000a 0264     		str	r2, [r0, #64]
 1760              	.L154:
 740:../system/src/drivers/serial.c **** 		}
 741:../system/src/drivers/serial.c **** 	}
 742:../system/src/drivers/serial.c **** }
 1761              		.loc 1 742 0
 1762 000c 7047     		bx	lr
 1763              	.L157:
 736:../system/src/drivers/serial.c **** 			ctx->srl_tx_start_time = 0x0u;
 1764              		.loc 1 736 0
 1765 000e 0022     		movs	r2, #0
 1766 0010 0264     		str	r2, [r0, #64]
 1767 0012 7047     		bx	lr
 1768              		.cfi_endproc
 1769              	.LFE84:
 1771              		.section	.text.srl_switch_timeout,"ax",%progbits
 1772              		.align	1
 1773              		.global	srl_switch_timeout
 1774              		.syntax unified
 1775              		.thumb
 1776              		.thumb_func
 1777              		.fpu softvfp
 1779              	srl_switch_timeout:
 1780              	.LFB85:
 743:../system/src/drivers/serial.c **** 
 744:../system/src/drivers/serial.c **** /**
 745:../system/src/drivers/serial.c ****  * This function controls the timeout which is calculated for data reception (when the
 746:../system/src/drivers/serial.c ****  * state is set to SRL_RXING). The time starts ticking after the first byte appears in
 747:../system/src/drivers/serial.c ****  * data register, so this protect against stalling in the middle of data transfer
 748:../system/src/drivers/serial.c ****  */
 749:../system/src/drivers/serial.c **** void srl_switch_timeout(srl_context_t *ctx, uint8_t disable_enable, uint32_t value) {
 1781              		.loc 1 749 0
 1782              		.cfi_startproc
 1783              		@ args = 0, pretend = 0, frame = 0
 1784              		@ frame_needed = 0, uses_anonymous_args = 0
 1785              		@ link register save eliminated.
 1786              	.LVL125:
 750:../system/src/drivers/serial.c **** 	if (disable_enable == 1)
 1787              		.loc 1 750 0
 1788 0000 0129     		cmp	r1, #1
 1789 0002 04D0     		beq	.L163
 751:../system/src/drivers/serial.c **** 		ctx->srl_rx_timeout_enable = 1;
 752:../system/src/drivers/serial.c **** 	else if (disable_enable == 0)
 1790              		.loc 1 752 0
 1791 0004 31B9     		cbnz	r1, .L160
 753:../system/src/drivers/serial.c **** 		ctx->srl_rx_timeout_enable = 0;
 1792              		.loc 1 753 0
 1793 0006 0023     		movs	r3, #0
 1794 0008 80F82D30 		strb	r3, [r0, #45]
 1795 000c 02E0     		b	.L160
 1796              	.L163:
 751:../system/src/drivers/serial.c **** 		ctx->srl_rx_timeout_enable = 1;
 1797              		.loc 1 751 0
 1798 000e 0123     		movs	r3, #1
 1799 0010 80F82D30 		strb	r3, [r0, #45]
 1800              	.L160:
 754:../system/src/drivers/serial.c **** 	else {
 755:../system/src/drivers/serial.c **** 		;
 756:../system/src/drivers/serial.c **** 	}
 757:../system/src/drivers/serial.c **** 
 758:../system/src/drivers/serial.c **** 	if (value != 0) {
 1801              		.loc 1 758 0
 1802 0014 1AB9     		cbnz	r2, .L164
 759:../system/src/drivers/serial.c **** 		ctx->srl_rx_timeout_trigger_value_in_msec = value;
 760:../system/src/drivers/serial.c **** 	}
 761:../system/src/drivers/serial.c **** 	else {
 762:../system/src/drivers/serial.c **** 		ctx->srl_rx_timeout_trigger_value_in_msec = SRL_DEFAULT_RX_TIMEOUT_IN_MS;
 1803              		.loc 1 762 0
 1804 0016 4FF49663 		mov	r3, #1200
 1805 001a 4363     		str	r3, [r0, #52]
 763:../system/src/drivers/serial.c **** 	}
 764:../system/src/drivers/serial.c **** }
 1806              		.loc 1 764 0
 1807 001c 7047     		bx	lr
 1808              	.L164:
 759:../system/src/drivers/serial.c **** 		ctx->srl_rx_timeout_trigger_value_in_msec = value;
 1809              		.loc 1 759 0
 1810 001e 4263     		str	r2, [r0, #52]
 1811 0020 7047     		bx	lr
 1812              		.cfi_endproc
 1813              	.LFE85:
 1815              		.section	.text.srl_switch_timeout_for_waiting,"ax",%progbits
 1816              		.align	1
 1817              		.global	srl_switch_timeout_for_waiting
 1818              		.syntax unified
 1819              		.thumb
 1820              		.thumb_func
 1821              		.fpu softvfp
 1823              	srl_switch_timeout_for_waiting:
 1824              	.LFB86:
 765:../system/src/drivers/serial.c **** 
 766:../system/src/drivers/serial.c **** /**
 767:../system/src/drivers/serial.c ****  * This function enables the timeout which is calculated for the waiting state for
 768:../system/src/drivers/serial.c ****  * the data reception to begin (the first byte on serial port). It must be called for
 769:../system/src/drivers/serial.c ****  * each RX transaction it is required as this timeout is cleared/disabled after the first
 770:../system/src/drivers/serial.c ****  * byte received by the serial port (when the state changes from SRL_WAITING_TO_RX to
 771:../system/src/drivers/serial.c ****  * SRL_RXING)
 772:../system/src/drivers/serial.c ****  */
 773:../system/src/drivers/serial.c **** void srl_switch_timeout_for_waiting(srl_context_t *ctx, uint8_t disable_enable) {
 1825              		.loc 1 773 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 0
 1828              		@ frame_needed = 0, uses_anonymous_args = 0
 1829              		@ link register save eliminated.
 1830              	.LVL126:
 774:../system/src/drivers/serial.c **** 	if (disable_enable == 1)
 1831              		.loc 1 774 0
 1832 0000 0129     		cmp	r1, #1
 1833 0002 04D0     		beq	.L169
 775:../system/src/drivers/serial.c **** 		ctx->srl_rx_timeout_waiting_enable = 1;
 776:../system/src/drivers/serial.c **** 	else if (disable_enable == 0)
 1834              		.loc 1 776 0
 1835 0004 31B9     		cbnz	r1, .L167
 777:../system/src/drivers/serial.c **** 		ctx->srl_rx_timeout_waiting_enable = 0;
 1836              		.loc 1 777 0
 1837 0006 0023     		movs	r3, #0
 1838 0008 80F82E30 		strb	r3, [r0, #46]
 1839 000c 02E0     		b	.L167
 1840              	.L169:
 775:../system/src/drivers/serial.c **** 		ctx->srl_rx_timeout_waiting_enable = 1;
 1841              		.loc 1 775 0
 1842 000e 0123     		movs	r3, #1
 1843 0010 80F82E30 		strb	r3, [r0, #46]
 1844              	.L167:
 778:../system/src/drivers/serial.c **** 	else {
 779:../system/src/drivers/serial.c **** 		;
 780:../system/src/drivers/serial.c **** 	}
 781:../system/src/drivers/serial.c **** 
 782:../system/src/drivers/serial.c **** 	if (ctx->srl_rx_timeout_trigger_value_in_msec == 0)
 1845              		.loc 1 782 0
 1846 0014 436B     		ldr	r3, [r0, #52]
 1847 0016 13B9     		cbnz	r3, .L165
 783:../system/src/drivers/serial.c **** 		ctx->srl_rx_timeout_trigger_value_in_msec = SRL_DEFAULT_RX_TIMEOUT_IN_MS;
 1848              		.loc 1 783 0
 1849 0018 4FF49663 		mov	r3, #1200
 1850 001c 4363     		str	r3, [r0, #52]
 1851              	.L165:
 784:../system/src/drivers/serial.c **** 
 785:../system/src/drivers/serial.c **** }
 1852              		.loc 1 785 0
 1853 001e 7047     		bx	lr
 1854              		.cfi_endproc
 1855              	.LFE86:
 1857              		.global	srl_usart2_rx_buffer
 1858              		.global	srl_usart2_tx_buffer
 1859              		.global	srl_usart1_rx_buffer
 1860              		.global	srl_usart1_tx_buffer
 1861              		.section	.bss.srl_usart1_rx_buffer,"aw",%nobits
 1862              		.align	2
 1865              	srl_usart1_rx_buffer:
 1866 0000 00000000 		.space	512
 1866      00000000 
 1866      00000000 
 1866      00000000 
 1866      00000000 
 1867              		.section	.bss.srl_usart1_tx_buffer,"aw",%nobits
 1868              		.align	2
 1869              		.set	.LANCHOR0,. + 0
 1872              	srl_usart1_tx_buffer:
 1873 0000 00000000 		.space	512
 1873      00000000 
 1873      00000000 
 1873      00000000 
 1873      00000000 
 1874              		.section	.bss.srl_usart2_rx_buffer,"aw",%nobits
 1875              		.align	2
 1878              	srl_usart2_rx_buffer:
 1879 0000 00000000 		.space	96
 1879      00000000 
 1879      00000000 
 1879      00000000 
 1879      00000000 
 1880              		.section	.bss.srl_usart2_tx_buffer,"aw",%nobits
 1881              		.align	2
 1884              	srl_usart2_tx_buffer:
 1885 0000 00000000 		.space	96
 1885      00000000 
 1885      00000000 
 1885      00000000 
 1885      00000000 
 1886              		.text
 1887              	.Letext0:
 1888              		.file 4 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 1889              		.file 5 "../system/include/cmsis/stm32f10x.h"
 1890              		.file 6 "../system/include/cmsis/system_stm32f10x.h"
 1891              		.file 7 "../system/include/stm32f1-stdperiph/stm32f10x_usart.h"
 1892              		.file 8 "../system/include/drivers/serial.h"
 1893              		.file 9 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1894              		.file 10 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1895              		.file 11 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/st
 1896              		.file 12 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/unistd.h"
 1897              		.file 13 "../system/include/aprs/cfifo.h"
 1898              		.file 14 "../system/include/aprs/afsk.h"
 1899              		.file 15 "../system/include/aprs/ax25.h"
 1900              		.file 16 "../include/config_data.h"
 1901              		.file 17 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1902              		.file 18 "../system/include/stm32f1-stdperiph/stm32f10x_gpio.h"
 1903              		.file 19 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 serial.c
     /tmp/ccL96Uys.s:16     .text.srl_init:0000000000000000 $t
     /tmp/ccL96Uys.s:23     .text.srl_init:0000000000000000 srl_init
     /tmp/ccL96Uys.s:215    .text.srl_init:0000000000000100 $d
     /tmp/ccL96Uys.s:224    .text.srl_close:0000000000000000 $t
     /tmp/ccL96Uys.s:231    .text.srl_close:0000000000000000 srl_close
     /tmp/ccL96Uys.s:272    .text.srl_keep_timeout:0000000000000000 $t
     /tmp/ccL96Uys.s:279    .text.srl_keep_timeout:0000000000000000 srl_keep_timeout
     /tmp/ccL96Uys.s:376    .text.srl_keep_timeout:000000000000009c $d
     /tmp/ccL96Uys.s:381    .text.srl_send_data:0000000000000000 $t
     /tmp/ccL96Uys.s:388    .text.srl_send_data:0000000000000000 srl_send_data
     /tmp/ccL96Uys.s:555    .text.srl_send_data:00000000000000c4 $d
     /tmp/ccL96Uys.s:560    .text.srl_start_tx:0000000000000000 $t
     /tmp/ccL96Uys.s:567    .text.srl_start_tx:0000000000000000 srl_start_tx
     /tmp/ccL96Uys.s:661    .text.srl_start_tx:0000000000000074 $d
     /tmp/ccL96Uys.s:666    .text.srl_wait_for_tx_completion:0000000000000000 $t
     /tmp/ccL96Uys.s:673    .text.srl_wait_for_tx_completion:0000000000000000 srl_wait_for_tx_completion
     /tmp/ccL96Uys.s:696    .text.srl_wait_for_rx_completion_or_timeout:0000000000000000 $t
     /tmp/ccL96Uys.s:703    .text.srl_wait_for_rx_completion_or_timeout:0000000000000000 srl_wait_for_rx_completion_or_timeout
     /tmp/ccL96Uys.s:748    .text.srl_receive_data:0000000000000000 $t
     /tmp/ccL96Uys.s:755    .text.srl_receive_data:0000000000000000 srl_receive_data
     /tmp/ccL96Uys.s:911    .text.srl_receive_data:00000000000000dc $d
     /tmp/ccL96Uys.s:916    .text.srl_receive_data_with_instant_timeout:0000000000000000 $t
     /tmp/ccL96Uys.s:923    .text.srl_receive_data_with_instant_timeout:0000000000000000 srl_receive_data_with_instant_timeout
     /tmp/ccL96Uys.s:1078   .text.srl_receive_data_with_instant_timeout:00000000000000d8 $d
     /tmp/ccL96Uys.s:1083   .text.srl_receive_data_with_callback:0000000000000000 $t
     /tmp/ccL96Uys.s:1090   .text.srl_receive_data_with_callback:0000000000000000 srl_receive_data_with_callback
     /tmp/ccL96Uys.s:1194   .text.srl_receive_data_with_callback:0000000000000080 $d
     /tmp/ccL96Uys.s:1199   .text.srl_irq_handler:0000000000000000 $t
     /tmp/ccL96Uys.s:1206   .text.srl_irq_handler:0000000000000000 srl_irq_handler
     /tmp/ccL96Uys.s:1603   .text.srl_irq_handler:0000000000000264 $d
     /tmp/ccL96Uys.s:1608   .text.srl_get_num_bytes_rxed:0000000000000000 $t
     /tmp/ccL96Uys.s:1615   .text.srl_get_num_bytes_rxed:0000000000000000 srl_get_num_bytes_rxed
     /tmp/ccL96Uys.s:1631   .text.srl_get_rx_buffer:0000000000000000 $t
     /tmp/ccL96Uys.s:1638   .text.srl_get_rx_buffer:0000000000000000 srl_get_rx_buffer
     /tmp/ccL96Uys.s:1654   .text.srl_keep_tx_delay:0000000000000000 $t
     /tmp/ccL96Uys.s:1661   .text.srl_keep_tx_delay:0000000000000000 srl_keep_tx_delay
     /tmp/ccL96Uys.s:1732   .text.srl_keep_tx_delay:0000000000000060 $d
     /tmp/ccL96Uys.s:1737   .text.srl_switch_tx_delay:0000000000000000 $t
     /tmp/ccL96Uys.s:1744   .text.srl_switch_tx_delay:0000000000000000 srl_switch_tx_delay
     /tmp/ccL96Uys.s:1772   .text.srl_switch_timeout:0000000000000000 $t
     /tmp/ccL96Uys.s:1779   .text.srl_switch_timeout:0000000000000000 srl_switch_timeout
     /tmp/ccL96Uys.s:1816   .text.srl_switch_timeout_for_waiting:0000000000000000 $t
     /tmp/ccL96Uys.s:1823   .text.srl_switch_timeout_for_waiting:0000000000000000 srl_switch_timeout_for_waiting
     /tmp/ccL96Uys.s:1878   .bss.srl_usart2_rx_buffer:0000000000000000 srl_usart2_rx_buffer
     /tmp/ccL96Uys.s:1884   .bss.srl_usart2_tx_buffer:0000000000000000 srl_usart2_tx_buffer
     /tmp/ccL96Uys.s:1865   .bss.srl_usart1_rx_buffer:0000000000000000 srl_usart1_rx_buffer
     /tmp/ccL96Uys.s:1872   .bss.srl_usart1_tx_buffer:0000000000000000 srl_usart1_tx_buffer
     /tmp/ccL96Uys.s:1862   .bss.srl_usart1_rx_buffer:0000000000000000 $d
     /tmp/ccL96Uys.s:1868   .bss.srl_usart1_tx_buffer:0000000000000000 $d
     /tmp/ccL96Uys.s:1875   .bss.srl_usart2_rx_buffer:0000000000000000 $d
     /tmp/ccL96Uys.s:1881   .bss.srl_usart2_tx_buffer:0000000000000000 $d
                           .group:0000000000000000 wm4.0.879aed89c359f5856fe69c61b3590d34
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.stm32f10x.h.51.c58ea26c5150470d52680f0bbaa7049c
                           .group:0000000000000000 wm4.core_cm3.h.42.c33bb1302bf53de0580fb6140a46f2eb
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.183.ecfd9c316d6f10b73648f6e579b02c8b
                           .group:0000000000000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:0000000000000000 wm4.stm32f10x_can.h.25.e5e43f6bbc8fc7c8aa30ef2bc5610ced
                           .group:0000000000000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:0000000000000000 wm4.stm32f10x_dac.h.25.d946244edf026333094657d55ea894b8
                           .group:0000000000000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:0000000000000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:0000000000000000 wm4.stm32f10x_exti.h.25.f52c69aad7d1994be5b2c4e2b8f4c595
                           .group:0000000000000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:0000000000000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.25.b124ac2c620f8ebddd92b6d95ca62176
                           .group:0000000000000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:0000000000000000 wm4.stm32f10x_sdio.h.25.fb0db079f5c1412c40f359319f7c40b0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.25.3f6dfa4abe177efb3c6f5a717c06b323
                           .group:0000000000000000 wm4.stm32f10x_tim.h.25.f709106ba77b314e6b070693f89f3c56
                           .group:0000000000000000 wm4.stm32f10x_usart.h.25.2e65e396239d0cc41fd0bf6faa2a32cb
                           .group:0000000000000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:0000000000000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:0000000000000000 wm4.stm32f10x.h.8317.9a8e476d96d33bb2df9a9ad0775bd4a7
                           .group:0000000000000000 wm4.serial.h.8.be81c40110fd9bb3b68e7ebdb6b30450
                           .group:0000000000000000 wm4.gpio_conf.h.2.69b8036899651cb596b9dee7090abf1b
                           .group:0000000000000000 wm4.station_config.h.9.75b6c5687acc8f60d219d6a552b2bf59
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.unistd.h.9.2709ac388e61c5728907bf928c890ff7
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.stddef.h.137.87f4223e19f53e7620a07a017dcd2e0a
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4.stddef.h.39.79ae3d254e9e71fbd4877f77aa50f4ea
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.unistd.h.170.da6e816043042c61475c2b1f58468b37
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.macros.h.2.7a7a5ac48d4160b7481c806e80b68442
                           .group:0000000000000000 wm4.config.h.2.f5e96167cb26b0ce97c5e7513a95bc8b
                           .group:0000000000000000 wm4.afsk.h.17.cf8f922069680e152e1eddb76cd4cc82
                           .group:0000000000000000 wm4.ax25.h.18.077e42a4af9016476e34900472a8fe18
                           .group:0000000000000000 wm4.config_data.h.9.6026a38cd2f39158a8fd50707ba1bf90
                           .group:0000000000000000 wm4.main.h.8.3d6ad69e5f061008d8c5cc5f5c9dd15a
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e

UNDEFINED SYMBOLS
memset
USART_Init
USART_DeInit
GPIO_ResetBits
master_time
GPIO_SetBits
