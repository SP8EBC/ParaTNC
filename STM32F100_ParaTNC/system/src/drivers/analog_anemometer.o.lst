   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"analog_anemometer.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.analog_anemometer_init,"ax",%progbits
  16              		.align	1
  17              		.global	analog_anemometer_init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	analog_anemometer_init:
  24              	.LFB105:
  25              		.file 1 "../system/src/drivers/analog_anemometer.c"
   1:../system/src/drivers/analog_anemometer.c **** /*
   2:../system/src/drivers/analog_anemometer.c ****  * analog_anemometer.c
   3:../system/src/drivers/analog_anemometer.c ****  *
   4:../system/src/drivers/analog_anemometer.c ****  *  Created on: 25.12.2019
   5:../system/src/drivers/analog_anemometer.c ****  *      Author: mateusz
   6:../system/src/drivers/analog_anemometer.c ****  */
   7:../system/src/drivers/analog_anemometer.c **** 
   8:../system/src/drivers/analog_anemometer.c **** #include "station_config.h"
   9:../system/src/drivers/analog_anemometer.c **** #include "station_config_target_hw.h"
  10:../system/src/drivers/analog_anemometer.c **** 
  11:../system/src/drivers/analog_anemometer.c **** #if defined(_ANEMOMETER_ANALOGUE_SPARKFUN) || defined(_ANEMOMETER_ANALOGUE)
  12:../system/src/drivers/analog_anemometer.c **** 
  13:../system/src/drivers/analog_anemometer.c **** #define WIND_DEBUG
  14:../system/src/drivers/analog_anemometer.c **** 
  15:../system/src/drivers/analog_anemometer.c **** #include "drivers/analog_anemometer.h"
  16:../system/src/drivers/analog_anemometer.c **** 
  17:../system/src/drivers/analog_anemometer.c **** #include <stdint.h>
  18:../system/src/drivers/analog_anemometer.c **** #include <string.h>
  19:../system/src/drivers/analog_anemometer.c **** #include "drivers/dma_helper_functions.h"
  20:../system/src/drivers/analog_anemometer.c **** #include "rte_wx.h"
  21:../system/src/drivers/analog_anemometer.c **** #include "main.h"
  22:../system/src/drivers/analog_anemometer.c **** #include "wx_handler.h"
  23:../system/src/drivers/analog_anemometer.c **** #include "LedConfig.h"
  24:../system/src/drivers/analog_anemometer.c **** #include "io.h"
  25:../system/src/drivers/analog_anemometer.c **** 
  26:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
  27:../system/src/drivers/analog_anemometer.c **** #include <stm32f10x_tim.h>
  28:../system/src/drivers/analog_anemometer.c **** #include <stm32f10x_dma.h>
  29:../system/src/drivers/analog_anemometer.c **** #include <drivers/f1/gpio_conf_stm32f1x.h>
  30:../system/src/drivers/analog_anemometer.c **** #endif
  31:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
  32:../system/src/drivers/analog_anemometer.c **** #include <stm32l4xx.h>
  33:../system/src/drivers/analog_anemometer.c **** #include <stm32l4xx_ll_tim.h>
  34:../system/src/drivers/analog_anemometer.c **** #include <stm32l4xx_ll_dma.h>
  35:../system/src/drivers/analog_anemometer.c **** #include <stm32l4xx_ll_gpio.h>
  36:../system/src/drivers/analog_anemometer.c **** #endif
  37:../system/src/drivers/analog_anemometer.c **** 
  38:../system/src/drivers/analog_anemometer.c **** #define MINUM_PULSE_LN 15
  39:../system/src/drivers/analog_anemometer.c **** #define MAXIMUM_PULSE_SLEW_RATE 4000
  40:../system/src/drivers/analog_anemometer.c **** 
  41:../system/src/drivers/analog_anemometer.c **** #define UF_MAXIMUM_FREQUENCY 8280//32767
  42:../system/src/drivers/analog_anemometer.c **** #define UPSCALED_MAX_ANGLE 		(360 * 100)
  43:../system/src/drivers/analog_anemometer.c **** #define UPSCALED_MAX_ANGLE_2 	(360 * 10)
  44:../system/src/drivers/analog_anemometer.c **** 
  45:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
  46:../system/src/drivers/analog_anemometer.c **** 	DMA_InitTypeDef DMA_InitStruct;
  47:../system/src/drivers/analog_anemometer.c **** #endif
  48:../system/src/drivers/analog_anemometer.c **** 
  49:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
  50:../system/src/drivers/analog_anemometer.c **** 	LL_DMA_InitTypeDef DMA_InitStruct;
  51:../system/src/drivers/analog_anemometer.c **** #endif
  52:../system/src/drivers/analog_anemometer.c **** 
  53:../system/src/drivers/analog_anemometer.c **** // an array where DMA will store values of the timer latched by compare-capture input
  54:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_windspeed_pulses_time[ANALOG_ANEMOMETER_SPEED_PULSES_N];
  55:../system/src/drivers/analog_anemometer.c **** 
  56:../system/src/drivers/analog_anemometer.c **** // an array with calculated times between pulses
  57:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_time_between_pulses[ANALOG_ANEMOMETER_SPEED_PULSES_N];
  58:../system/src/drivers/analog_anemometer.c **** 
  59:../system/src/drivers/analog_anemometer.c **** #ifdef WIND_DEBUG
  60:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_direction_timer_values[ANALOG_ANEMOMETER_SPEED_PULSES_N];
  61:../system/src/drivers/analog_anemometer.c **** uint8_t analog_anemometer_direction_timer_values_it = 0;
  62:../system/src/drivers/analog_anemometer.c **** #endif
  63:../system/src/drivers/analog_anemometer.c **** 
  64:../system/src/drivers/analog_anemometer.c **** // a static copy of impulse-meters/second constant. This value expresses
  65:../system/src/drivers/analog_anemometer.c **** // how many pulses in 10 seconds measurement time gives 1 m/s.
  66:../system/src/drivers/analog_anemometer.c **** // Value of ten means that if within 10 second period 10 pulses were detected it gives
  67:../system/src/drivers/analog_anemometer.c **** // 1m/s
  68:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_pulses_per_m_s_constant = 0;
  69:../system/src/drivers/analog_anemometer.c **** 
  70:../system/src/drivers/analog_anemometer.c **** // a flag which will be raised if not enought pulses has been copied by a DMA before a timer overfl
  71:../system/src/drivers/analog_anemometer.c **** uint8_t analog_anemometer_timer_has_been_fired = 0;
  72:../system/src/drivers/analog_anemometer.c **** 
  73:../system/src/drivers/analog_anemometer.c **** uint8_t analog_anemometer_slew_limit_fired = 0;
  74:../system/src/drivers/analog_anemometer.c **** 
  75:../system/src/drivers/analog_anemometer.c **** uint8_t analog_anemometer_deboucing_fired = 0;
  76:../system/src/drivers/analog_anemometer.c **** 
  77:../system/src/drivers/analog_anemometer.c **** uint8_t analog_anemometer_direction_doesnt_work = 0;
  78:../system/src/drivers/analog_anemometer.c **** 
  79:../system/src/drivers/analog_anemometer.c **** // direction recalculated from v/f
  80:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_direction = 0;
  81:../system/src/drivers/analog_anemometer.c **** 
  82:../system/src/drivers/analog_anemometer.c **** // scaling value which sets the upper value in percents of the frequency in relation to 32767 Hz
  83:../system/src/drivers/analog_anemometer.c **** // translating this to a voltage at an input of the U/f converter this sets a maximum ratio of the
  84:../system/src/drivers/analog_anemometer.c **** // potentiometer inside the direction
  85:../system/src/drivers/analog_anemometer.c **** int16_t analog_anemometer_b_coeff = 100;
  86:../system/src/drivers/analog_anemometer.c **** 
  87:../system/src/drivers/analog_anemometer.c **** int16_t analog_anemometer_a_coeff = 10;
  88:../system/src/drivers/analog_anemometer.c **** 
  89:../system/src/drivers/analog_anemometer.c **** // this controls if the direction increases (1) od decreaes (-1) with the frequency
  90:../system/src/drivers/analog_anemometer.c **** int8_t analog_anemometer_direction_pol = 1;
  91:../system/src/drivers/analog_anemometer.c **** 
  92:../system/src/drivers/analog_anemometer.c **** uint16_t analog_anemometer_last_direction_cnt = 0;
  93:../system/src/drivers/analog_anemometer.c **** 
  94:../system/src/drivers/analog_anemometer.c **** // incremeneted by one if condition below is true
  95:../system/src/drivers/analog_anemometer.c **** //
  96:../system/src/drivers/analog_anemometer.c **** //			// if the value is greater than maximum one just ignore
  97:../system/src/drivers/analog_anemometer.c **** //				if (current_value > UF_MAXIMUM_FREQUENCY) {
  98:../system/src/drivers/analog_anemometer.c **** //
  99:../system/src/drivers/analog_anemometer.c **** //					// and reinitialize the timer before returning from the function
 100:../system/src/drivers/analog_anemometer.c **** //					analog_anemometer_direction_reset();
 101:../system/src/drivers/analog_anemometer.c **** //
 102:../system/src/drivers/analog_anemometer.c **** //					return rte_wx_winddirection_last;
 103:../system/src/drivers/analog_anemometer.c **** //				}
 104:../system/src/drivers/analog_anemometer.c **** uint8_t analog_anemometer__direction_freq_too_high = 0;
 105:../system/src/drivers/analog_anemometer.c **** 
 106:../system/src/drivers/analog_anemometer.c **** #ifdef _ANEMOMETER_ANALOGUE
 107:../system/src/drivers/analog_anemometer.c **** int8_t  analog_anemometer_direction_mode = DIRECTION_REGULAR;
 108:../system/src/drivers/analog_anemometer.c **** #endif
 109:../system/src/drivers/analog_anemometer.c **** 
 110:../system/src/drivers/analog_anemometer.c **** #ifdef _ANEMOMETER_ANALOGUE_SPARKFUN
 111:../system/src/drivers/analog_anemometer.c **** int8_t  analog_anemometer_direction_mode = DIRECTION_SPARKFUN;
 112:../system/src/drivers/analog_anemometer.c **** #endif
 113:../system/src/drivers/analog_anemometer.c **** 
 114:../system/src/drivers/analog_anemometer.c **** // this array consists voltage ranges to calculate
 115:../system/src/drivers/analog_anemometer.c **** const int16_t analog_anemometer_direction_sparkfun_ranges[16][3] = {
 116:../system/src/drivers/analog_anemometer.c **** 		{4018, 4112, 112},
 117:../system/src/drivers/analog_anemometer.c **** 		{4112, 4182, 67},
 118:../system/src/drivers/analog_anemometer.c **** 		{4182, 4296, 90},
 119:../system/src/drivers/analog_anemometer.c **** 		{4296, 4537, 157},
 120:../system/src/drivers/analog_anemometer.c **** 		{4537, 4840, 135},
 121:../system/src/drivers/analog_anemometer.c **** 		{4840, 5107, 202},
 122:../system/src/drivers/analog_anemometer.c **** 		{5107, 5529, 180},
 123:../system/src/drivers/analog_anemometer.c **** 		{5529, 5982, 22},
 124:../system/src/drivers/analog_anemometer.c **** 		{5982, 6490, 45},
 125:../system/src/drivers/analog_anemometer.c **** 		{6490, 6935, 247},
 126:../system/src/drivers/analog_anemometer.c **** 		{6935, 7201, 225},
 127:../system/src/drivers/analog_anemometer.c **** 		{7201, 7607, 337},
 128:../system/src/drivers/analog_anemometer.c **** 		{7607, 7932, 0},
 129:../system/src/drivers/analog_anemometer.c **** 		{7932, 8349, 292},
 130:../system/src/drivers/analog_anemometer.c **** 		{8349, 8746, 270},
 131:../system/src/drivers/analog_anemometer.c **** 		{8746, 9276, 315}
 132:../system/src/drivers/analog_anemometer.c **** };
 133:../system/src/drivers/analog_anemometer.c **** 
 134:../system/src/drivers/analog_anemometer.c **** void analog_anemometer_init(uint16_t pulses_per_meter_second, uint8_t anemometer_lower_boundary,
 135:../system/src/drivers/analog_anemometer.c **** 		uint8_t anemometer_upper_boundary, uint8_t direction_polarity) {
  26              		.loc 1 135 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 85B0     		sub	sp, sp, #20
  39              		.cfi_def_cfa_offset 40
 136:../system/src/drivers/analog_anemometer.c **** 
 137:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 138:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;
 139:../system/src/drivers/analog_anemometer.c **** #endif
 140:../system/src/drivers/analog_anemometer.c **** 
 141:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 142:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_InitTypeDef TIM_InitTypeDef;
 143:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_IC_InitTypeDef TIM_IC_InitTypeDef;
 144:../system/src/drivers/analog_anemometer.c **** 	LL_GPIO_InitTypeDef GPIO_InitTypeDef;
 145:../system/src/drivers/analog_anemometer.c **** #endif
 146:../system/src/drivers/analog_anemometer.c **** 
 147:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_pulses_per_m_s_constant = pulses_per_meter_second;
  40              		.loc 1 147 0
  41 0004 544C     		ldr	r4, .L3
  42 0006 2080     		strh	r0, [r4]	@ movhi
 148:../system/src/drivers/analog_anemometer.c **** 
 149:../system/src/drivers/analog_anemometer.c **** 	// Solving the linear equation to find 'a' and 'b' coefficient needed to rescale the wind directio
 150:../system/src/drivers/analog_anemometer.c **** 	// from raw value calculated from an input frequency, to physical value which includes the lower a
 151:../system/src/drivers/analog_anemometer.c **** 	// the higher value of anemometer resistance / frequency
 152:../system/src/drivers/analog_anemometer.c **** 	// * 100
 153:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_a_coeff = ((10000 * -UPSCALED_MAX_ANGLE) / (UPSCALED_MAX_ANGLE * anemometer_lowe
  43              		.loc 1 153 0
  44 0008 544C     		ldr	r4, .L3+4
  45 000a 04FB02F4 		mul	r4, r4, r2
  46 000e 48F6A040 		movw	r0, #36000
  47              	.LVL1:
  48 0012 00FB0144 		mla	r4, r0, r1, r4
  49 0016 5248     		ldr	r0, .L3+8
  50 0018 90FBF4F0 		sdiv	r0, r0, r4
  51 001c 514C     		ldr	r4, .L3+12
  52 001e 2080     		strh	r0, [r4]	@ movhi
 154:../system/src/drivers/analog_anemometer.c **** 	// * 10
 155:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_b_coeff = (UPSCALED_MAX_ANGLE_2 * anemometer_lower_boundary * UPSCALED_MAX_ANGLE
  53              		.loc 1 155 0
  54 0020 5148     		ldr	r0, .L3+16
  55 0022 00FB01F0 		mul	r0, r0, r1
  56 0026 514C     		ldr	r4, .L3+20
  57 0028 04FB02F2 		mul	r2, r4, r2
  58              	.LVL2:
  59 002c 4FF46164 		mov	r4, #3600
  60 0030 04FB0121 		mla	r1, r4, r1, r2
  61              	.LVL3:
  62 0034 90FBF1F1 		sdiv	r1, r0, r1
  63 0038 4D4A     		ldr	r2, .L3+24
  64 003a 1180     		strh	r1, [r2]	@ movhi
 156:../system/src/drivers/analog_anemometer.c **** 
 157:../system/src/drivers/analog_anemometer.c **** 	// signal polariy
 158:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_direction_pol = direction_polarity;
  65              		.loc 1 158 0
  66 003c 4D4A     		ldr	r2, .L3+28
  67 003e 1370     		strb	r3, [r2]
 159:../system/src/drivers/analog_anemometer.c **** 
 160:../system/src/drivers/analog_anemometer.c **** 	// initializing arrays;
 161:../system/src/drivers/analog_anemometer.c **** 	memset(analog_anemometer_windspeed_pulses_time, 0x00, ANALOG_ANEMOMETER_SPEED_PULSES_N);
  68              		.loc 1 161 0
  69 0040 4D4F     		ldr	r7, .L3+32
  70 0042 0A22     		movs	r2, #10
  71 0044 0021     		movs	r1, #0
  72 0046 3846     		mov	r0, r7
  73 0048 FFF7FEFF 		bl	memset
  74              	.LVL4:
 162:../system/src/drivers/analog_anemometer.c **** 	memset(analog_anemometer_time_between_pulses, 0x00, ANALOG_ANEMOMETER_SPEED_PULSES_N);
  75              		.loc 1 162 0
  76 004c 0A22     		movs	r2, #10
  77 004e 0021     		movs	r1, #0
  78 0050 4A48     		ldr	r0, .L3+36
  79 0052 FFF7FEFF 		bl	memset
  80              	.LVL5:
 163:../system/src/drivers/analog_anemometer.c **** #ifdef WIND_DEBUG
 164:../system/src/drivers/analog_anemometer.c **** 	memset(analog_anemometer_direction_timer_values, 0x00, ANALOG_ANEMOMETER_SPEED_PULSES_N);
  81              		.loc 1 164 0
  82 0056 0A22     		movs	r2, #10
  83 0058 0021     		movs	r1, #0
  84 005a 4948     		ldr	r0, .L3+40
  85 005c FFF7FEFF 		bl	memset
  86              	.LVL6:
 165:../system/src/drivers/analog_anemometer.c **** #endif
 166:../system/src/drivers/analog_anemometer.c **** 
 167:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 168:../system/src/drivers/analog_anemometer.c **** 	// enabling the clock for TIM17
 169:../system/src/drivers/analog_anemometer.c **** 	RCC->APB2ENR |= RCC_APB2ENR_TIM17EN;
  87              		.loc 1 169 0
  88 0060 484B     		ldr	r3, .L3+44
  89 0062 9A69     		ldr	r2, [r3, #24]
  90 0064 42F48022 		orr	r2, r2, #262144
  91 0068 9A61     		str	r2, [r3, #24]
 170:../system/src/drivers/analog_anemometer.c **** 	RCC->AHBENR |= RCC_AHBENR_DMA1EN;
  92              		.loc 1 170 0
  93 006a 5A69     		ldr	r2, [r3, #20]
  94 006c 42F00102 		orr	r2, r2, #1
  95 0070 5A61     		str	r2, [r3, #20]
 171:../system/src/drivers/analog_anemometer.c **** 
 172:../system/src/drivers/analog_anemometer.c **** 	// Configuring a pin where pulses from anemometer are connected
 173:../system/src/drivers/analog_anemometer.c **** 	Configure_GPIO(GPIOB,9,FLOATING_INPUT);
  96              		.loc 1 173 0
  97 0072 0422     		movs	r2, #4
  98 0074 0921     		movs	r1, #9
  99 0076 4448     		ldr	r0, .L3+48
 100 0078 FFF7FEFF 		bl	Configure_GPIO
 101              	.LVL7:
 174:../system/src/drivers/analog_anemometer.c **** 
 175:../system/src/drivers/analog_anemometer.c **** 	// resetting the timer to defaults
 176:../system/src/drivers/analog_anemometer.c **** 	TIM_DeInit(TIM17);
 102              		.loc 1 176 0
 103 007c 434C     		ldr	r4, .L3+52
 104 007e 2046     		mov	r0, r4
 105 0080 FFF7FEFF 		bl	TIM_DeInit
 106              	.LVL8:
 177:../system/src/drivers/analog_anemometer.c **** 
 178:../system/src/drivers/analog_anemometer.c **** 	// initializing structure with default values
 179:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseStructInit(&TIM_TimeBaseInitStruct);
 107              		.loc 1 179 0
 108 0084 01A8     		add	r0, sp, #4
 109 0086 FFF7FEFF 		bl	TIM_TimeBaseStructInit
 110              	.LVL9:
 180:../system/src/drivers/analog_anemometer.c **** 
 181:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInitStruct.TIM_Prescaler = 23999;					// PSC 23999
 111              		.loc 1 181 0
 112 008a 45F6BF53 		movw	r3, #23999
 113 008e ADF80430 		strh	r3, [sp, #4]	@ movhi
 182:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInitStruct.TIM_Period = 60000;					// ARR
 114              		.loc 1 182 0
 115 0092 4EF66023 		movw	r3, #60000
 116 0096 ADF80830 		strh	r3, [sp, #8]	@ movhi
 183:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;
 117              		.loc 1 183 0
 118 009a 0025     		movs	r5, #0
 119 009c ADF80650 		strh	r5, [sp, #6]	@ movhi
 184:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInitStruct.TIM_ClockDivision = TIM_CKD_DIV1;
 120              		.loc 1 184 0
 121 00a0 ADF80A50 		strh	r5, [sp, #10]	@ movhi
 185:../system/src/drivers/analog_anemometer.c **** 
 186:../system/src/drivers/analog_anemometer.c **** 	// Configuring basics of thr timer
 187:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInit(TIM17, &TIM_TimeBaseInitStruct);
 122              		.loc 1 187 0
 123 00a4 01A9     		add	r1, sp, #4
 124 00a6 2046     		mov	r0, r4
 125 00a8 FFF7FEFF 		bl	TIM_TimeBaseInit
 126              	.LVL10:
 188:../system/src/drivers/analog_anemometer.c **** 
 189:../system/src/drivers/analog_anemometer.c **** 	// Enabling capture input
 190:../system/src/drivers/analog_anemometer.c **** 	TIM_TIxExternalClockConfig(TIM17, TIM_TIxExternalCLK1Source_TI1, TIM_ICPolarity_Rising, 0);
 127              		.loc 1 190 0
 128 00ac 2B46     		mov	r3, r5
 129 00ae 2A46     		mov	r2, r5
 130 00b0 5021     		movs	r1, #80
 131 00b2 2046     		mov	r0, r4
 132 00b4 FFF7FEFF 		bl	TIM_TIxExternalClockConfig
 133              	.LVL11:
 191:../system/src/drivers/analog_anemometer.c **** 
 192:../system/src/drivers/analog_anemometer.c **** 	// Starting timer
 193:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM17, ENABLE);
 134              		.loc 1 193 0
 135 00b8 0121     		movs	r1, #1
 136 00ba 2046     		mov	r0, r4
 137 00bc FFF7FEFF 		bl	TIM_Cmd
 138              	.LVL12:
 194:../system/src/drivers/analog_anemometer.c **** 
 195:../system/src/drivers/analog_anemometer.c **** 	// Enabling a DMA request signal from first capture-compare channel
 196:../system/src/drivers/analog_anemometer.c **** 	TIM_DMACmd(TIM17, TIM_DMA_CC1, ENABLE);
 139              		.loc 1 196 0
 140 00c0 0122     		movs	r2, #1
 141 00c2 4FF40071 		mov	r1, #512
 142 00c6 2046     		mov	r0, r4
 143 00c8 FFF7FEFF 		bl	TIM_DMACmd
 144              	.LVL13:
 197:../system/src/drivers/analog_anemometer.c **** 
 198:../system/src/drivers/analog_anemometer.c **** 	// Enabling an interrupt
 199:../system/src/drivers/analog_anemometer.c **** 	TIM_ITConfig(TIM17, TIM_IT_Update, ENABLE);
 145              		.loc 1 199 0
 146 00cc 0122     		movs	r2, #1
 147 00ce 1146     		mov	r1, r2
 148 00d0 2046     		mov	r0, r4
 149 00d2 FFF7FEFF 		bl	TIM_ITConfig
 150              	.LVL14:
 151              	.LBB24:
 152              	.LBB25:
 153              		.file 2 "../system/include/cmsis/core_cm3.h"
   1:../system/include/cmsis/core_cm3.h **** /**************************************************************************//**
   2:../system/include/cmsis/core_cm3.h ****  * @file     core_cm3.h
   3:../system/include/cmsis/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:../system/include/cmsis/core_cm3.h ****  * @version  V4.30
   5:../system/include/cmsis/core_cm3.h ****  * @date     20. October 2015
   6:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
   7:../system/include/cmsis/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../system/include/cmsis/core_cm3.h **** 
   9:../system/include/cmsis/core_cm3.h ****    All rights reserved.
  10:../system/include/cmsis/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:../system/include/cmsis/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:../system/include/cmsis/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:../system/include/cmsis/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:../system/include/cmsis/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../system/include/cmsis/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:../system/include/cmsis/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:../system/include/cmsis/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../system/include/cmsis/core_cm3.h ****      to endorse or promote products derived from this software without
  19:../system/include/cmsis/core_cm3.h ****      specific prior written permission.
  20:../system/include/cmsis/core_cm3.h ****    *
  21:../system/include/cmsis/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../system/include/cmsis/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../system/include/cmsis/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../system/include/cmsis/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../system/include/cmsis/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../system/include/cmsis/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../system/include/cmsis/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../system/include/cmsis/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../system/include/cmsis/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../system/include/cmsis/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../system/include/cmsis/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../system/include/cmsis/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:../system/include/cmsis/core_cm3.h **** 
  34:../system/include/cmsis/core_cm3.h **** 
  35:../system/include/cmsis/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:../system/include/cmsis/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:../system/include/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:../system/include/cmsis/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:../system/include/cmsis/core_cm3.h **** #endif
  40:../system/include/cmsis/core_cm3.h **** 
  41:../system/include/cmsis/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:../system/include/cmsis/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:../system/include/cmsis/core_cm3.h **** 
  44:../system/include/cmsis/core_cm3.h **** // [ILG]
  45:../system/include/cmsis/core_cm3.h **** #if defined ( __GNUC__ )
  46:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic push
  47:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  48:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic ignored "-Wconversion"
  49:../system/include/cmsis/core_cm3.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  50:../system/include/cmsis/core_cm3.h **** #endif
  51:../system/include/cmsis/core_cm3.h **** 
  52:../system/include/cmsis/core_cm3.h **** #include <stdint.h>
  53:../system/include/cmsis/core_cm3.h **** 
  54:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
  55:../system/include/cmsis/core_cm3.h ****  extern "C" {
  56:../system/include/cmsis/core_cm3.h **** #endif
  57:../system/include/cmsis/core_cm3.h **** 
  58:../system/include/cmsis/core_cm3.h **** /**
  59:../system/include/cmsis/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  60:../system/include/cmsis/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  61:../system/include/cmsis/core_cm3.h **** 
  62:../system/include/cmsis/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  63:../system/include/cmsis/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  64:../system/include/cmsis/core_cm3.h **** 
  65:../system/include/cmsis/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  66:../system/include/cmsis/core_cm3.h ****      Unions are used for effective representation of core registers.
  67:../system/include/cmsis/core_cm3.h **** 
  68:../system/include/cmsis/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  69:../system/include/cmsis/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  70:../system/include/cmsis/core_cm3.h ****  */
  71:../system/include/cmsis/core_cm3.h **** 
  72:../system/include/cmsis/core_cm3.h **** 
  73:../system/include/cmsis/core_cm3.h **** /*******************************************************************************
  74:../system/include/cmsis/core_cm3.h ****  *                 CMSIS definitions
  75:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
  76:../system/include/cmsis/core_cm3.h **** /**
  77:../system/include/cmsis/core_cm3.h ****   \ingroup Cortex_M3
  78:../system/include/cmsis/core_cm3.h ****   @{
  79:../system/include/cmsis/core_cm3.h ****  */
  80:../system/include/cmsis/core_cm3.h **** 
  81:../system/include/cmsis/core_cm3.h **** /*  CMSIS CM3 definitions */
  82:../system/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  83:../system/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  84:../system/include/cmsis/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  85:../system/include/cmsis/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  86:../system/include/cmsis/core_cm3.h **** 
  87:../system/include/cmsis/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  88:../system/include/cmsis/core_cm3.h **** 
  89:../system/include/cmsis/core_cm3.h **** 
  90:../system/include/cmsis/core_cm3.h **** #if   defined ( __CC_ARM )
  91:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  92:../system/include/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  93:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  94:../system/include/cmsis/core_cm3.h **** 
  95:../system/include/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  96:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  97:../system/include/cmsis/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  98:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  99:../system/include/cmsis/core_cm3.h **** 
 100:../system/include/cmsis/core_cm3.h **** #elif defined ( __GNUC__ )
 101:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 102:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 103:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 104:../system/include/cmsis/core_cm3.h **** 
 105:../system/include/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 106:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
 107:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 108:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 109:../system/include/cmsis/core_cm3.h **** 
 110:../system/include/cmsis/core_cm3.h **** #elif defined ( __TMS470__ )
 111:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 112:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 113:../system/include/cmsis/core_cm3.h **** 
 114:../system/include/cmsis/core_cm3.h **** #elif defined ( __TASKING__ )
 115:../system/include/cmsis/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 116:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 117:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 118:../system/include/cmsis/core_cm3.h **** 
 119:../system/include/cmsis/core_cm3.h **** #elif defined ( __CSMC__ )
 120:../system/include/cmsis/core_cm3.h ****   #define __packed
 121:../system/include/cmsis/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 122:../system/include/cmsis/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 123:../system/include/cmsis/core_cm3.h ****   #define __STATIC_INLINE  static inline
 124:../system/include/cmsis/core_cm3.h **** 
 125:../system/include/cmsis/core_cm3.h **** #else
 126:../system/include/cmsis/core_cm3.h ****   #error Unknown compiler
 127:../system/include/cmsis/core_cm3.h **** #endif
 128:../system/include/cmsis/core_cm3.h **** 
 129:../system/include/cmsis/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 130:../system/include/cmsis/core_cm3.h ****     This core does not support an FPU at all
 131:../system/include/cmsis/core_cm3.h **** */
 132:../system/include/cmsis/core_cm3.h **** #define __FPU_USED       0U
 133:../system/include/cmsis/core_cm3.h **** 
 134:../system/include/cmsis/core_cm3.h **** #if defined ( __CC_ARM )
 135:../system/include/cmsis/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 136:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 137:../system/include/cmsis/core_cm3.h ****   #endif
 138:../system/include/cmsis/core_cm3.h **** 
 139:../system/include/cmsis/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 140:../system/include/cmsis/core_cm3.h ****   #if defined __ARM_PCS_VFP
 141:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 142:../system/include/cmsis/core_cm3.h ****   #endif
 143:../system/include/cmsis/core_cm3.h **** 
 144:../system/include/cmsis/core_cm3.h **** #elif defined ( __GNUC__ )
 145:../system/include/cmsis/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 146:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 147:../system/include/cmsis/core_cm3.h ****   #endif
 148:../system/include/cmsis/core_cm3.h **** 
 149:../system/include/cmsis/core_cm3.h **** #elif defined ( __ICCARM__ )
 150:../system/include/cmsis/core_cm3.h ****   #if defined __ARMVFP__
 151:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 152:../system/include/cmsis/core_cm3.h ****   #endif
 153:../system/include/cmsis/core_cm3.h **** 
 154:../system/include/cmsis/core_cm3.h **** #elif defined ( __TMS470__ )
 155:../system/include/cmsis/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 156:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 157:../system/include/cmsis/core_cm3.h ****   #endif
 158:../system/include/cmsis/core_cm3.h **** 
 159:../system/include/cmsis/core_cm3.h **** #elif defined ( __TASKING__ )
 160:../system/include/cmsis/core_cm3.h ****   #if defined __FPU_VFP__
 161:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 162:../system/include/cmsis/core_cm3.h ****   #endif
 163:../system/include/cmsis/core_cm3.h **** 
 164:../system/include/cmsis/core_cm3.h **** #elif defined ( __CSMC__ )
 165:../system/include/cmsis/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 166:../system/include/cmsis/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 167:../system/include/cmsis/core_cm3.h ****   #endif
 168:../system/include/cmsis/core_cm3.h **** 
 169:../system/include/cmsis/core_cm3.h **** #endif
 170:../system/include/cmsis/core_cm3.h **** 
 171:../system/include/cmsis/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 172:../system/include/cmsis/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 173:../system/include/cmsis/core_cm3.h **** 
 174:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
 175:../system/include/cmsis/core_cm3.h **** }
 176:../system/include/cmsis/core_cm3.h **** #endif
 177:../system/include/cmsis/core_cm3.h **** 
 178:../system/include/cmsis/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 179:../system/include/cmsis/core_cm3.h **** 
 180:../system/include/cmsis/core_cm3.h **** #ifndef __CMSIS_GENERIC
 181:../system/include/cmsis/core_cm3.h **** 
 182:../system/include/cmsis/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 183:../system/include/cmsis/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 184:../system/include/cmsis/core_cm3.h **** 
 185:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
 186:../system/include/cmsis/core_cm3.h ****  extern "C" {
 187:../system/include/cmsis/core_cm3.h **** #endif
 188:../system/include/cmsis/core_cm3.h **** 
 189:../system/include/cmsis/core_cm3.h **** /* check device defines and use defaults */
 190:../system/include/cmsis/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 191:../system/include/cmsis/core_cm3.h ****   #ifndef __CM3_REV
 192:../system/include/cmsis/core_cm3.h ****     #define __CM3_REV               0x0200U
 193:../system/include/cmsis/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 194:../system/include/cmsis/core_cm3.h ****   #endif
 195:../system/include/cmsis/core_cm3.h **** 
 196:../system/include/cmsis/core_cm3.h ****   #ifndef __MPU_PRESENT
 197:../system/include/cmsis/core_cm3.h ****     #define __MPU_PRESENT             0U
 198:../system/include/cmsis/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 199:../system/include/cmsis/core_cm3.h ****   #endif
 200:../system/include/cmsis/core_cm3.h **** 
 201:../system/include/cmsis/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 202:../system/include/cmsis/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 203:../system/include/cmsis/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 204:../system/include/cmsis/core_cm3.h ****   #endif
 205:../system/include/cmsis/core_cm3.h **** 
 206:../system/include/cmsis/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 207:../system/include/cmsis/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 208:../system/include/cmsis/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 209:../system/include/cmsis/core_cm3.h ****   #endif
 210:../system/include/cmsis/core_cm3.h **** #endif
 211:../system/include/cmsis/core_cm3.h **** 
 212:../system/include/cmsis/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 213:../system/include/cmsis/core_cm3.h **** /**
 214:../system/include/cmsis/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 215:../system/include/cmsis/core_cm3.h **** 
 216:../system/include/cmsis/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 217:../system/include/cmsis/core_cm3.h ****     \li to specify the access to peripheral variables.
 218:../system/include/cmsis/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 219:../system/include/cmsis/core_cm3.h **** */
 220:../system/include/cmsis/core_cm3.h **** #ifdef __cplusplus
 221:../system/include/cmsis/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 222:../system/include/cmsis/core_cm3.h **** #else
 223:../system/include/cmsis/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 224:../system/include/cmsis/core_cm3.h **** #endif
 225:../system/include/cmsis/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 226:../system/include/cmsis/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 227:../system/include/cmsis/core_cm3.h **** 
 228:../system/include/cmsis/core_cm3.h **** /* following defines should be used for structure members */
 229:../system/include/cmsis/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 230:../system/include/cmsis/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 231:../system/include/cmsis/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 232:../system/include/cmsis/core_cm3.h **** 
 233:../system/include/cmsis/core_cm3.h **** /*@} end of group Cortex_M3 */
 234:../system/include/cmsis/core_cm3.h **** 
 235:../system/include/cmsis/core_cm3.h **** 
 236:../system/include/cmsis/core_cm3.h **** 
 237:../system/include/cmsis/core_cm3.h **** /*******************************************************************************
 238:../system/include/cmsis/core_cm3.h ****  *                 Register Abstraction
 239:../system/include/cmsis/core_cm3.h ****   Core Register contain:
 240:../system/include/cmsis/core_cm3.h ****   - Core Register
 241:../system/include/cmsis/core_cm3.h ****   - Core NVIC Register
 242:../system/include/cmsis/core_cm3.h ****   - Core SCB Register
 243:../system/include/cmsis/core_cm3.h ****   - Core SysTick Register
 244:../system/include/cmsis/core_cm3.h ****   - Core Debug Register
 245:../system/include/cmsis/core_cm3.h ****   - Core MPU Register
 246:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
 247:../system/include/cmsis/core_cm3.h **** /**
 248:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 249:../system/include/cmsis/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 250:../system/include/cmsis/core_cm3.h **** */
 251:../system/include/cmsis/core_cm3.h **** 
 252:../system/include/cmsis/core_cm3.h **** /**
 253:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
 254:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 255:../system/include/cmsis/core_cm3.h ****   \brief      Core Register type definitions.
 256:../system/include/cmsis/core_cm3.h ****   @{
 257:../system/include/cmsis/core_cm3.h ****  */
 258:../system/include/cmsis/core_cm3.h **** 
 259:../system/include/cmsis/core_cm3.h **** /**
 260:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 261:../system/include/cmsis/core_cm3.h ****  */
 262:../system/include/cmsis/core_cm3.h **** typedef union
 263:../system/include/cmsis/core_cm3.h **** {
 264:../system/include/cmsis/core_cm3.h ****   struct
 265:../system/include/cmsis/core_cm3.h ****   {
 266:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 267:../system/include/cmsis/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 268:../system/include/cmsis/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 269:../system/include/cmsis/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 270:../system/include/cmsis/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 271:../system/include/cmsis/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 272:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 273:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 274:../system/include/cmsis/core_cm3.h **** } APSR_Type;
 275:../system/include/cmsis/core_cm3.h **** 
 276:../system/include/cmsis/core_cm3.h **** /* APSR Register Definitions */
 277:../system/include/cmsis/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 278:../system/include/cmsis/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 279:../system/include/cmsis/core_cm3.h **** 
 280:../system/include/cmsis/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 281:../system/include/cmsis/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 282:../system/include/cmsis/core_cm3.h **** 
 283:../system/include/cmsis/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 284:../system/include/cmsis/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 285:../system/include/cmsis/core_cm3.h **** 
 286:../system/include/cmsis/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 287:../system/include/cmsis/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 288:../system/include/cmsis/core_cm3.h **** 
 289:../system/include/cmsis/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 290:../system/include/cmsis/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 291:../system/include/cmsis/core_cm3.h **** 
 292:../system/include/cmsis/core_cm3.h **** 
 293:../system/include/cmsis/core_cm3.h **** /**
 294:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 295:../system/include/cmsis/core_cm3.h ****  */
 296:../system/include/cmsis/core_cm3.h **** typedef union
 297:../system/include/cmsis/core_cm3.h **** {
 298:../system/include/cmsis/core_cm3.h ****   struct
 299:../system/include/cmsis/core_cm3.h ****   {
 300:../system/include/cmsis/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 301:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 302:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 303:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 304:../system/include/cmsis/core_cm3.h **** } IPSR_Type;
 305:../system/include/cmsis/core_cm3.h **** 
 306:../system/include/cmsis/core_cm3.h **** /* IPSR Register Definitions */
 307:../system/include/cmsis/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 308:../system/include/cmsis/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 309:../system/include/cmsis/core_cm3.h **** 
 310:../system/include/cmsis/core_cm3.h **** 
 311:../system/include/cmsis/core_cm3.h **** /**
 312:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 313:../system/include/cmsis/core_cm3.h ****  */
 314:../system/include/cmsis/core_cm3.h **** typedef union
 315:../system/include/cmsis/core_cm3.h **** {
 316:../system/include/cmsis/core_cm3.h ****   struct
 317:../system/include/cmsis/core_cm3.h ****   {
 318:../system/include/cmsis/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 319:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 320:../system/include/cmsis/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 321:../system/include/cmsis/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 322:../system/include/cmsis/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 323:../system/include/cmsis/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 324:../system/include/cmsis/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 325:../system/include/cmsis/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 326:../system/include/cmsis/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 327:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 328:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 329:../system/include/cmsis/core_cm3.h **** } xPSR_Type;
 330:../system/include/cmsis/core_cm3.h **** 
 331:../system/include/cmsis/core_cm3.h **** /* xPSR Register Definitions */
 332:../system/include/cmsis/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 333:../system/include/cmsis/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 334:../system/include/cmsis/core_cm3.h **** 
 335:../system/include/cmsis/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 336:../system/include/cmsis/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 337:../system/include/cmsis/core_cm3.h **** 
 338:../system/include/cmsis/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 339:../system/include/cmsis/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 340:../system/include/cmsis/core_cm3.h **** 
 341:../system/include/cmsis/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 342:../system/include/cmsis/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 343:../system/include/cmsis/core_cm3.h **** 
 344:../system/include/cmsis/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 345:../system/include/cmsis/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 346:../system/include/cmsis/core_cm3.h **** 
 347:../system/include/cmsis/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 348:../system/include/cmsis/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 349:../system/include/cmsis/core_cm3.h **** 
 350:../system/include/cmsis/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 351:../system/include/cmsis/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 352:../system/include/cmsis/core_cm3.h **** 
 353:../system/include/cmsis/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 354:../system/include/cmsis/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 355:../system/include/cmsis/core_cm3.h **** 
 356:../system/include/cmsis/core_cm3.h **** 
 357:../system/include/cmsis/core_cm3.h **** /**
 358:../system/include/cmsis/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 359:../system/include/cmsis/core_cm3.h ****  */
 360:../system/include/cmsis/core_cm3.h **** typedef union
 361:../system/include/cmsis/core_cm3.h **** {
 362:../system/include/cmsis/core_cm3.h ****   struct
 363:../system/include/cmsis/core_cm3.h ****   {
 364:../system/include/cmsis/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 365:../system/include/cmsis/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 366:../system/include/cmsis/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 367:../system/include/cmsis/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 368:../system/include/cmsis/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 369:../system/include/cmsis/core_cm3.h **** } CONTROL_Type;
 370:../system/include/cmsis/core_cm3.h **** 
 371:../system/include/cmsis/core_cm3.h **** /* CONTROL Register Definitions */
 372:../system/include/cmsis/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 373:../system/include/cmsis/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 374:../system/include/cmsis/core_cm3.h **** 
 375:../system/include/cmsis/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 376:../system/include/cmsis/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 377:../system/include/cmsis/core_cm3.h **** 
 378:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_CORE */
 379:../system/include/cmsis/core_cm3.h **** 
 380:../system/include/cmsis/core_cm3.h **** 
 381:../system/include/cmsis/core_cm3.h **** /**
 382:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
 383:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 384:../system/include/cmsis/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 385:../system/include/cmsis/core_cm3.h ****   @{
 386:../system/include/cmsis/core_cm3.h ****  */
 387:../system/include/cmsis/core_cm3.h **** 
 388:../system/include/cmsis/core_cm3.h **** /**
 389:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 390:../system/include/cmsis/core_cm3.h ****  */
 391:../system/include/cmsis/core_cm3.h **** typedef struct
 392:../system/include/cmsis/core_cm3.h **** {
 393:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 394:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[24U];
 395:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 396:../system/include/cmsis/core_cm3.h ****         uint32_t RSERVED1[24U];
 397:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 398:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[24U];
 399:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 400:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED3[24U];
 401:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 402:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED4[56U];
 403:../system/include/cmsis/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 404:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED5[644U];
 405:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 406:../system/include/cmsis/core_cm3.h **** }  NVIC_Type;
 407:../system/include/cmsis/core_cm3.h **** 
 408:../system/include/cmsis/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 409:../system/include/cmsis/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 410:../system/include/cmsis/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 411:../system/include/cmsis/core_cm3.h **** 
 412:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 413:../system/include/cmsis/core_cm3.h **** 
 414:../system/include/cmsis/core_cm3.h **** 
 415:../system/include/cmsis/core_cm3.h **** /**
 416:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 417:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 418:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 419:../system/include/cmsis/core_cm3.h ****   @{
 420:../system/include/cmsis/core_cm3.h ****  */
 421:../system/include/cmsis/core_cm3.h **** 
 422:../system/include/cmsis/core_cm3.h **** /**
 423:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 424:../system/include/cmsis/core_cm3.h ****  */
 425:../system/include/cmsis/core_cm3.h **** typedef struct
 426:../system/include/cmsis/core_cm3.h **** {
 427:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 428:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 429:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 430:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 431:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 432:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 433:../system/include/cmsis/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 434:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 435:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 436:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 437:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 438:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 439:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 440:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 441:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 442:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 443:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 444:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 445:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 446:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[5U];
 447:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 448:../system/include/cmsis/core_cm3.h **** } SCB_Type;
 449:../system/include/cmsis/core_cm3.h **** 
 450:../system/include/cmsis/core_cm3.h **** /* SCB CPUID Register Definitions */
 451:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 452:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 453:../system/include/cmsis/core_cm3.h **** 
 454:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 455:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 456:../system/include/cmsis/core_cm3.h **** 
 457:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 458:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 459:../system/include/cmsis/core_cm3.h **** 
 460:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 461:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 462:../system/include/cmsis/core_cm3.h **** 
 463:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 464:../system/include/cmsis/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 465:../system/include/cmsis/core_cm3.h **** 
 466:../system/include/cmsis/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 467:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 468:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 469:../system/include/cmsis/core_cm3.h **** 
 470:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 471:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 472:../system/include/cmsis/core_cm3.h **** 
 473:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 474:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 475:../system/include/cmsis/core_cm3.h **** 
 476:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 477:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 478:../system/include/cmsis/core_cm3.h **** 
 479:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 480:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 481:../system/include/cmsis/core_cm3.h **** 
 482:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 483:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 484:../system/include/cmsis/core_cm3.h **** 
 485:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 486:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 487:../system/include/cmsis/core_cm3.h **** 
 488:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 489:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 490:../system/include/cmsis/core_cm3.h **** 
 491:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 492:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 493:../system/include/cmsis/core_cm3.h **** 
 494:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 495:../system/include/cmsis/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 496:../system/include/cmsis/core_cm3.h **** 
 497:../system/include/cmsis/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 498:../system/include/cmsis/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 499:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 500:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 501:../system/include/cmsis/core_cm3.h **** 
 502:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 503:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 504:../system/include/cmsis/core_cm3.h **** #else
 505:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 506:../system/include/cmsis/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 507:../system/include/cmsis/core_cm3.h **** #endif
 508:../system/include/cmsis/core_cm3.h **** 
 509:../system/include/cmsis/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 510:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 511:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 512:../system/include/cmsis/core_cm3.h **** 
 513:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 514:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 515:../system/include/cmsis/core_cm3.h **** 
 516:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 517:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 518:../system/include/cmsis/core_cm3.h **** 
 519:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 520:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 521:../system/include/cmsis/core_cm3.h **** 
 522:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 523:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 524:../system/include/cmsis/core_cm3.h **** 
 525:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 526:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 527:../system/include/cmsis/core_cm3.h **** 
 528:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 529:../system/include/cmsis/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 530:../system/include/cmsis/core_cm3.h **** 
 531:../system/include/cmsis/core_cm3.h **** /* SCB System Control Register Definitions */
 532:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 533:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 534:../system/include/cmsis/core_cm3.h **** 
 535:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 536:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 537:../system/include/cmsis/core_cm3.h **** 
 538:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 539:../system/include/cmsis/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 540:../system/include/cmsis/core_cm3.h **** 
 541:../system/include/cmsis/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 542:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 543:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 544:../system/include/cmsis/core_cm3.h **** 
 545:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 546:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 547:../system/include/cmsis/core_cm3.h **** 
 548:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 549:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 550:../system/include/cmsis/core_cm3.h **** 
 551:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 552:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 553:../system/include/cmsis/core_cm3.h **** 
 554:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 555:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 556:../system/include/cmsis/core_cm3.h **** 
 557:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 558:../system/include/cmsis/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 559:../system/include/cmsis/core_cm3.h **** 
 560:../system/include/cmsis/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 561:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 562:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 563:../system/include/cmsis/core_cm3.h **** 
 564:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 565:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 566:../system/include/cmsis/core_cm3.h **** 
 567:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 568:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 569:../system/include/cmsis/core_cm3.h **** 
 570:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 571:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 572:../system/include/cmsis/core_cm3.h **** 
 573:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 574:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 575:../system/include/cmsis/core_cm3.h **** 
 576:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 577:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 578:../system/include/cmsis/core_cm3.h **** 
 579:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 580:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 581:../system/include/cmsis/core_cm3.h **** 
 582:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 583:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 584:../system/include/cmsis/core_cm3.h **** 
 585:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 586:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 587:../system/include/cmsis/core_cm3.h **** 
 588:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 589:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 590:../system/include/cmsis/core_cm3.h **** 
 591:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 592:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 593:../system/include/cmsis/core_cm3.h **** 
 594:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 595:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 596:../system/include/cmsis/core_cm3.h **** 
 597:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 598:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 599:../system/include/cmsis/core_cm3.h **** 
 600:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 601:../system/include/cmsis/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 602:../system/include/cmsis/core_cm3.h **** 
 603:../system/include/cmsis/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 604:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 605:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 606:../system/include/cmsis/core_cm3.h **** 
 607:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 608:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 609:../system/include/cmsis/core_cm3.h **** 
 610:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 611:../system/include/cmsis/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 612:../system/include/cmsis/core_cm3.h **** 
 613:../system/include/cmsis/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 614:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 615:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 616:../system/include/cmsis/core_cm3.h **** 
 617:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 618:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 619:../system/include/cmsis/core_cm3.h **** 
 620:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 621:../system/include/cmsis/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 622:../system/include/cmsis/core_cm3.h **** 
 623:../system/include/cmsis/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 624:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 625:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 626:../system/include/cmsis/core_cm3.h **** 
 627:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 628:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 629:../system/include/cmsis/core_cm3.h **** 
 630:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 631:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 632:../system/include/cmsis/core_cm3.h **** 
 633:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 634:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 635:../system/include/cmsis/core_cm3.h **** 
 636:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 637:../system/include/cmsis/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 638:../system/include/cmsis/core_cm3.h **** 
 639:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_SCB */
 640:../system/include/cmsis/core_cm3.h **** 
 641:../system/include/cmsis/core_cm3.h **** 
 642:../system/include/cmsis/core_cm3.h **** /**
 643:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 644:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 645:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 646:../system/include/cmsis/core_cm3.h ****   @{
 647:../system/include/cmsis/core_cm3.h ****  */
 648:../system/include/cmsis/core_cm3.h **** 
 649:../system/include/cmsis/core_cm3.h **** /**
 650:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 651:../system/include/cmsis/core_cm3.h ****  */
 652:../system/include/cmsis/core_cm3.h **** typedef struct
 653:../system/include/cmsis/core_cm3.h **** {
 654:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[1U];
 655:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 656:../system/include/cmsis/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 657:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 658:../system/include/cmsis/core_cm3.h **** #else
 659:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[1U];
 660:../system/include/cmsis/core_cm3.h **** #endif
 661:../system/include/cmsis/core_cm3.h **** } SCnSCB_Type;
 662:../system/include/cmsis/core_cm3.h **** 
 663:../system/include/cmsis/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 664:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 665:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 666:../system/include/cmsis/core_cm3.h **** 
 667:../system/include/cmsis/core_cm3.h **** /* Auxiliary Control Register Definitions */
 668:../system/include/cmsis/core_cm3.h **** 
 669:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 670:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 671:../system/include/cmsis/core_cm3.h **** 
 672:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 673:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 674:../system/include/cmsis/core_cm3.h **** 
 675:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 676:../system/include/cmsis/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 677:../system/include/cmsis/core_cm3.h **** 
 678:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 679:../system/include/cmsis/core_cm3.h **** 
 680:../system/include/cmsis/core_cm3.h **** 
 681:../system/include/cmsis/core_cm3.h **** /**
 682:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 683:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 684:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 685:../system/include/cmsis/core_cm3.h ****   @{
 686:../system/include/cmsis/core_cm3.h ****  */
 687:../system/include/cmsis/core_cm3.h **** 
 688:../system/include/cmsis/core_cm3.h **** /**
 689:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 690:../system/include/cmsis/core_cm3.h ****  */
 691:../system/include/cmsis/core_cm3.h **** typedef struct
 692:../system/include/cmsis/core_cm3.h **** {
 693:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 694:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 695:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 696:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 697:../system/include/cmsis/core_cm3.h **** } SysTick_Type;
 698:../system/include/cmsis/core_cm3.h **** 
 699:../system/include/cmsis/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 700:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 701:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 702:../system/include/cmsis/core_cm3.h **** 
 703:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 704:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 705:../system/include/cmsis/core_cm3.h **** 
 706:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 707:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 708:../system/include/cmsis/core_cm3.h **** 
 709:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 710:../system/include/cmsis/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 711:../system/include/cmsis/core_cm3.h **** 
 712:../system/include/cmsis/core_cm3.h **** /* SysTick Reload Register Definitions */
 713:../system/include/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 714:../system/include/cmsis/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 715:../system/include/cmsis/core_cm3.h **** 
 716:../system/include/cmsis/core_cm3.h **** /* SysTick Current Register Definitions */
 717:../system/include/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 718:../system/include/cmsis/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 719:../system/include/cmsis/core_cm3.h **** 
 720:../system/include/cmsis/core_cm3.h **** /* SysTick Calibration Register Definitions */
 721:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 722:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 723:../system/include/cmsis/core_cm3.h **** 
 724:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 725:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 726:../system/include/cmsis/core_cm3.h **** 
 727:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 728:../system/include/cmsis/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 729:../system/include/cmsis/core_cm3.h **** 
 730:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 731:../system/include/cmsis/core_cm3.h **** 
 732:../system/include/cmsis/core_cm3.h **** 
 733:../system/include/cmsis/core_cm3.h **** /**
 734:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 735:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 736:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 737:../system/include/cmsis/core_cm3.h ****   @{
 738:../system/include/cmsis/core_cm3.h ****  */
 739:../system/include/cmsis/core_cm3.h **** 
 740:../system/include/cmsis/core_cm3.h **** /**
 741:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 742:../system/include/cmsis/core_cm3.h ****  */
 743:../system/include/cmsis/core_cm3.h **** typedef struct
 744:../system/include/cmsis/core_cm3.h **** {
 745:../system/include/cmsis/core_cm3.h ****   __OM  union
 746:../system/include/cmsis/core_cm3.h ****   {
 747:../system/include/cmsis/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 748:../system/include/cmsis/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 749:../system/include/cmsis/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 750:../system/include/cmsis/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 751:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[864U];
 752:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 753:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[15U];
 754:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 755:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[15U];
 756:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 757:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED3[29U];
 758:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 759:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 760:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 761:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED4[43U];
 762:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 763:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 764:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED5[6U];
 765:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 766:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 767:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 768:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 769:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 770:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 771:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 772:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 773:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 774:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 775:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 776:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 777:../system/include/cmsis/core_cm3.h **** } ITM_Type;
 778:../system/include/cmsis/core_cm3.h **** 
 779:../system/include/cmsis/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 780:../system/include/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 781:../system/include/cmsis/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 782:../system/include/cmsis/core_cm3.h **** 
 783:../system/include/cmsis/core_cm3.h **** /* ITM Trace Control Register Definitions */
 784:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 785:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 786:../system/include/cmsis/core_cm3.h **** 
 787:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 788:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 789:../system/include/cmsis/core_cm3.h **** 
 790:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 791:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 792:../system/include/cmsis/core_cm3.h **** 
 793:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 794:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 795:../system/include/cmsis/core_cm3.h **** 
 796:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 797:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 798:../system/include/cmsis/core_cm3.h **** 
 799:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 800:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 801:../system/include/cmsis/core_cm3.h **** 
 802:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 803:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 804:../system/include/cmsis/core_cm3.h **** 
 805:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 806:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 807:../system/include/cmsis/core_cm3.h **** 
 808:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 809:../system/include/cmsis/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 810:../system/include/cmsis/core_cm3.h **** 
 811:../system/include/cmsis/core_cm3.h **** /* ITM Integration Write Register Definitions */
 812:../system/include/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 813:../system/include/cmsis/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 814:../system/include/cmsis/core_cm3.h **** 
 815:../system/include/cmsis/core_cm3.h **** /* ITM Integration Read Register Definitions */
 816:../system/include/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 817:../system/include/cmsis/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 818:../system/include/cmsis/core_cm3.h **** 
 819:../system/include/cmsis/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 820:../system/include/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 821:../system/include/cmsis/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 822:../system/include/cmsis/core_cm3.h **** 
 823:../system/include/cmsis/core_cm3.h **** /* ITM Lock Status Register Definitions */
 824:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 825:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 826:../system/include/cmsis/core_cm3.h **** 
 827:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 828:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 829:../system/include/cmsis/core_cm3.h **** 
 830:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 831:../system/include/cmsis/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 832:../system/include/cmsis/core_cm3.h **** 
 833:../system/include/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 834:../system/include/cmsis/core_cm3.h **** 
 835:../system/include/cmsis/core_cm3.h **** 
 836:../system/include/cmsis/core_cm3.h **** /**
 837:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 838:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 839:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 840:../system/include/cmsis/core_cm3.h ****   @{
 841:../system/include/cmsis/core_cm3.h ****  */
 842:../system/include/cmsis/core_cm3.h **** 
 843:../system/include/cmsis/core_cm3.h **** /**
 844:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 845:../system/include/cmsis/core_cm3.h ****  */
 846:../system/include/cmsis/core_cm3.h **** typedef struct
 847:../system/include/cmsis/core_cm3.h **** {
 848:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 849:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 850:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 851:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 852:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 853:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 854:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 855:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 856:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 857:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 858:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 859:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[1U];
 860:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 861:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 862:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 863:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[1U];
 864:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 865:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 866:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 867:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[1U];
 868:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 869:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 870:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 871:../system/include/cmsis/core_cm3.h **** } DWT_Type;
 872:../system/include/cmsis/core_cm3.h **** 
 873:../system/include/cmsis/core_cm3.h **** /* DWT Control Register Definitions */
 874:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 875:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 876:../system/include/cmsis/core_cm3.h **** 
 877:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 878:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 879:../system/include/cmsis/core_cm3.h **** 
 880:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 881:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 882:../system/include/cmsis/core_cm3.h **** 
 883:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 884:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 885:../system/include/cmsis/core_cm3.h **** 
 886:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 887:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 888:../system/include/cmsis/core_cm3.h **** 
 889:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 890:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 891:../system/include/cmsis/core_cm3.h **** 
 892:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 893:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 894:../system/include/cmsis/core_cm3.h **** 
 895:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 896:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 897:../system/include/cmsis/core_cm3.h **** 
 898:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 899:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 900:../system/include/cmsis/core_cm3.h **** 
 901:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 902:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 903:../system/include/cmsis/core_cm3.h **** 
 904:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 905:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 906:../system/include/cmsis/core_cm3.h **** 
 907:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 908:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 909:../system/include/cmsis/core_cm3.h **** 
 910:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 911:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 912:../system/include/cmsis/core_cm3.h **** 
 913:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 914:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 915:../system/include/cmsis/core_cm3.h **** 
 916:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 917:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 918:../system/include/cmsis/core_cm3.h **** 
 919:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 920:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 921:../system/include/cmsis/core_cm3.h **** 
 922:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 923:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 924:../system/include/cmsis/core_cm3.h **** 
 925:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 926:../system/include/cmsis/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 927:../system/include/cmsis/core_cm3.h **** 
 928:../system/include/cmsis/core_cm3.h **** /* DWT CPI Count Register Definitions */
 929:../system/include/cmsis/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 930:../system/include/cmsis/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 931:../system/include/cmsis/core_cm3.h **** 
 932:../system/include/cmsis/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 933:../system/include/cmsis/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 934:../system/include/cmsis/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 935:../system/include/cmsis/core_cm3.h **** 
 936:../system/include/cmsis/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 937:../system/include/cmsis/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 938:../system/include/cmsis/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 939:../system/include/cmsis/core_cm3.h **** 
 940:../system/include/cmsis/core_cm3.h **** /* DWT LSU Count Register Definitions */
 941:../system/include/cmsis/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 942:../system/include/cmsis/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 943:../system/include/cmsis/core_cm3.h **** 
 944:../system/include/cmsis/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 945:../system/include/cmsis/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 946:../system/include/cmsis/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 947:../system/include/cmsis/core_cm3.h **** 
 948:../system/include/cmsis/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 949:../system/include/cmsis/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 950:../system/include/cmsis/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 951:../system/include/cmsis/core_cm3.h **** 
 952:../system/include/cmsis/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 953:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 954:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 955:../system/include/cmsis/core_cm3.h **** 
 956:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 957:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 958:../system/include/cmsis/core_cm3.h **** 
 959:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 960:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 961:../system/include/cmsis/core_cm3.h **** 
 962:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 963:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 964:../system/include/cmsis/core_cm3.h **** 
 965:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 966:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 967:../system/include/cmsis/core_cm3.h **** 
 968:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 969:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 970:../system/include/cmsis/core_cm3.h **** 
 971:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 972:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 973:../system/include/cmsis/core_cm3.h **** 
 974:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 975:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 976:../system/include/cmsis/core_cm3.h **** 
 977:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 978:../system/include/cmsis/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 979:../system/include/cmsis/core_cm3.h **** 
 980:../system/include/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 981:../system/include/cmsis/core_cm3.h **** 
 982:../system/include/cmsis/core_cm3.h **** 
 983:../system/include/cmsis/core_cm3.h **** /**
 984:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
 985:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 986:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 987:../system/include/cmsis/core_cm3.h ****   @{
 988:../system/include/cmsis/core_cm3.h ****  */
 989:../system/include/cmsis/core_cm3.h **** 
 990:../system/include/cmsis/core_cm3.h **** /**
 991:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 992:../system/include/cmsis/core_cm3.h ****  */
 993:../system/include/cmsis/core_cm3.h **** typedef struct
 994:../system/include/cmsis/core_cm3.h **** {
 995:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 996:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 997:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED0[2U];
 998:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 999:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED1[55U];
1000:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1001:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED2[131U];
1002:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1003:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1004:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1005:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED3[759U];
1006:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1007:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1008:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1009:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED4[1U];
1010:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1011:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1012:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1013:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED5[39U];
1014:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1015:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1016:../system/include/cmsis/core_cm3.h ****         uint32_t RESERVED7[8U];
1017:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1018:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1019:../system/include/cmsis/core_cm3.h **** } TPI_Type;
1020:../system/include/cmsis/core_cm3.h **** 
1021:../system/include/cmsis/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1022:../system/include/cmsis/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1023:../system/include/cmsis/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1024:../system/include/cmsis/core_cm3.h **** 
1025:../system/include/cmsis/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1026:../system/include/cmsis/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1027:../system/include/cmsis/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1028:../system/include/cmsis/core_cm3.h **** 
1029:../system/include/cmsis/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1030:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1031:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1032:../system/include/cmsis/core_cm3.h **** 
1033:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1034:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1035:../system/include/cmsis/core_cm3.h **** 
1036:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1037:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1038:../system/include/cmsis/core_cm3.h **** 
1039:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1040:../system/include/cmsis/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1041:../system/include/cmsis/core_cm3.h **** 
1042:../system/include/cmsis/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1043:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1044:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1045:../system/include/cmsis/core_cm3.h **** 
1046:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1047:../system/include/cmsis/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1048:../system/include/cmsis/core_cm3.h **** 
1049:../system/include/cmsis/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1050:../system/include/cmsis/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1051:../system/include/cmsis/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1052:../system/include/cmsis/core_cm3.h **** 
1053:../system/include/cmsis/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1054:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1055:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1056:../system/include/cmsis/core_cm3.h **** 
1057:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1058:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1059:../system/include/cmsis/core_cm3.h **** 
1060:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1061:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1062:../system/include/cmsis/core_cm3.h **** 
1063:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1064:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1065:../system/include/cmsis/core_cm3.h **** 
1066:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1067:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1068:../system/include/cmsis/core_cm3.h **** 
1069:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1070:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1071:../system/include/cmsis/core_cm3.h **** 
1072:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1073:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1074:../system/include/cmsis/core_cm3.h **** 
1075:../system/include/cmsis/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1076:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1077:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1078:../system/include/cmsis/core_cm3.h **** 
1079:../system/include/cmsis/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1080:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1081:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1082:../system/include/cmsis/core_cm3.h **** 
1083:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1084:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1085:../system/include/cmsis/core_cm3.h **** 
1086:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1087:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1088:../system/include/cmsis/core_cm3.h **** 
1089:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1090:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1091:../system/include/cmsis/core_cm3.h **** 
1092:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1093:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1094:../system/include/cmsis/core_cm3.h **** 
1095:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1096:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1097:../system/include/cmsis/core_cm3.h **** 
1098:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1099:../system/include/cmsis/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1100:../system/include/cmsis/core_cm3.h **** 
1101:../system/include/cmsis/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1102:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1103:../system/include/cmsis/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1104:../system/include/cmsis/core_cm3.h **** 
1105:../system/include/cmsis/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1106:../system/include/cmsis/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1107:../system/include/cmsis/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1108:../system/include/cmsis/core_cm3.h **** 
1109:../system/include/cmsis/core_cm3.h **** /* TPI DEVID Register Definitions */
1110:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1111:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1112:../system/include/cmsis/core_cm3.h **** 
1113:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1114:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1115:../system/include/cmsis/core_cm3.h **** 
1116:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1117:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1118:../system/include/cmsis/core_cm3.h **** 
1119:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1120:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1121:../system/include/cmsis/core_cm3.h **** 
1122:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1123:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1124:../system/include/cmsis/core_cm3.h **** 
1125:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1126:../system/include/cmsis/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1127:../system/include/cmsis/core_cm3.h **** 
1128:../system/include/cmsis/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1129:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1130:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1131:../system/include/cmsis/core_cm3.h **** 
1132:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1133:../system/include/cmsis/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1134:../system/include/cmsis/core_cm3.h **** 
1135:../system/include/cmsis/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1136:../system/include/cmsis/core_cm3.h **** 
1137:../system/include/cmsis/core_cm3.h **** 
1138:../system/include/cmsis/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1139:../system/include/cmsis/core_cm3.h **** /**
1140:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
1141:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1142:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1143:../system/include/cmsis/core_cm3.h ****   @{
1144:../system/include/cmsis/core_cm3.h ****  */
1145:../system/include/cmsis/core_cm3.h **** 
1146:../system/include/cmsis/core_cm3.h **** /**
1147:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1148:../system/include/cmsis/core_cm3.h ****  */
1149:../system/include/cmsis/core_cm3.h **** typedef struct
1150:../system/include/cmsis/core_cm3.h **** {
1151:../system/include/cmsis/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1152:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1153:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1154:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1155:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1156:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1157:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1158:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1159:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1160:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1161:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1162:../system/include/cmsis/core_cm3.h **** } MPU_Type;
1163:../system/include/cmsis/core_cm3.h **** 
1164:../system/include/cmsis/core_cm3.h **** /* MPU Type Register Definitions */
1165:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1166:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1167:../system/include/cmsis/core_cm3.h **** 
1168:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1169:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1170:../system/include/cmsis/core_cm3.h **** 
1171:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1172:../system/include/cmsis/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1173:../system/include/cmsis/core_cm3.h **** 
1174:../system/include/cmsis/core_cm3.h **** /* MPU Control Register Definitions */
1175:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1176:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1177:../system/include/cmsis/core_cm3.h **** 
1178:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1179:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1180:../system/include/cmsis/core_cm3.h **** 
1181:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1182:../system/include/cmsis/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1183:../system/include/cmsis/core_cm3.h **** 
1184:../system/include/cmsis/core_cm3.h **** /* MPU Region Number Register Definitions */
1185:../system/include/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1186:../system/include/cmsis/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1187:../system/include/cmsis/core_cm3.h **** 
1188:../system/include/cmsis/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1189:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1190:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1191:../system/include/cmsis/core_cm3.h **** 
1192:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1193:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1194:../system/include/cmsis/core_cm3.h **** 
1195:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1196:../system/include/cmsis/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1197:../system/include/cmsis/core_cm3.h **** 
1198:../system/include/cmsis/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1199:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1200:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1201:../system/include/cmsis/core_cm3.h **** 
1202:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1203:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1204:../system/include/cmsis/core_cm3.h **** 
1205:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1206:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1207:../system/include/cmsis/core_cm3.h **** 
1208:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1209:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1210:../system/include/cmsis/core_cm3.h **** 
1211:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1212:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1213:../system/include/cmsis/core_cm3.h **** 
1214:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1215:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1216:../system/include/cmsis/core_cm3.h **** 
1217:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1218:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1219:../system/include/cmsis/core_cm3.h **** 
1220:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1221:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1222:../system/include/cmsis/core_cm3.h **** 
1223:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1224:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1225:../system/include/cmsis/core_cm3.h **** 
1226:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1227:../system/include/cmsis/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1228:../system/include/cmsis/core_cm3.h **** 
1229:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_MPU */
1230:../system/include/cmsis/core_cm3.h **** #endif
1231:../system/include/cmsis/core_cm3.h **** 
1232:../system/include/cmsis/core_cm3.h **** 
1233:../system/include/cmsis/core_cm3.h **** /**
1234:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_core_register
1235:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1236:../system/include/cmsis/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1237:../system/include/cmsis/core_cm3.h ****   @{
1238:../system/include/cmsis/core_cm3.h ****  */
1239:../system/include/cmsis/core_cm3.h **** 
1240:../system/include/cmsis/core_cm3.h **** /**
1241:../system/include/cmsis/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1242:../system/include/cmsis/core_cm3.h ****  */
1243:../system/include/cmsis/core_cm3.h **** typedef struct
1244:../system/include/cmsis/core_cm3.h **** {
1245:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1246:../system/include/cmsis/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1247:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1248:../system/include/cmsis/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1249:../system/include/cmsis/core_cm3.h **** } CoreDebug_Type;
1250:../system/include/cmsis/core_cm3.h **** 
1251:../system/include/cmsis/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1252:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1253:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1254:../system/include/cmsis/core_cm3.h **** 
1255:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1256:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1257:../system/include/cmsis/core_cm3.h **** 
1258:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1259:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1260:../system/include/cmsis/core_cm3.h **** 
1261:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1262:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1263:../system/include/cmsis/core_cm3.h **** 
1264:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1265:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1266:../system/include/cmsis/core_cm3.h **** 
1267:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1268:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1269:../system/include/cmsis/core_cm3.h **** 
1270:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1271:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1272:../system/include/cmsis/core_cm3.h **** 
1273:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1274:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1275:../system/include/cmsis/core_cm3.h **** 
1276:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1277:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1278:../system/include/cmsis/core_cm3.h **** 
1279:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1280:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1281:../system/include/cmsis/core_cm3.h **** 
1282:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1283:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1284:../system/include/cmsis/core_cm3.h **** 
1285:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1286:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1287:../system/include/cmsis/core_cm3.h **** 
1288:../system/include/cmsis/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1289:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1290:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1291:../system/include/cmsis/core_cm3.h **** 
1292:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1293:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1294:../system/include/cmsis/core_cm3.h **** 
1295:../system/include/cmsis/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1296:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1297:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1298:../system/include/cmsis/core_cm3.h **** 
1299:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1300:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1301:../system/include/cmsis/core_cm3.h **** 
1302:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1303:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1304:../system/include/cmsis/core_cm3.h **** 
1305:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1306:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1307:../system/include/cmsis/core_cm3.h **** 
1308:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1309:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1310:../system/include/cmsis/core_cm3.h **** 
1311:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1312:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1313:../system/include/cmsis/core_cm3.h **** 
1314:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1315:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1316:../system/include/cmsis/core_cm3.h **** 
1317:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1318:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1319:../system/include/cmsis/core_cm3.h **** 
1320:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1321:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1322:../system/include/cmsis/core_cm3.h **** 
1323:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1324:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1325:../system/include/cmsis/core_cm3.h **** 
1326:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1327:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1328:../system/include/cmsis/core_cm3.h **** 
1329:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1330:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1331:../system/include/cmsis/core_cm3.h **** 
1332:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1333:../system/include/cmsis/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1334:../system/include/cmsis/core_cm3.h **** 
1335:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1336:../system/include/cmsis/core_cm3.h **** 
1337:../system/include/cmsis/core_cm3.h **** 
1338:../system/include/cmsis/core_cm3.h **** /**
1339:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
1340:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1341:../system/include/cmsis/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1342:../system/include/cmsis/core_cm3.h ****   @{
1343:../system/include/cmsis/core_cm3.h ****  */
1344:../system/include/cmsis/core_cm3.h **** 
1345:../system/include/cmsis/core_cm3.h **** /**
1346:../system/include/cmsis/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1347:../system/include/cmsis/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:../system/include/cmsis/core_cm3.h ****   \param[in] value  Value of the bit field.
1349:../system/include/cmsis/core_cm3.h ****   \return           Masked and shifted value.
1350:../system/include/cmsis/core_cm3.h **** */
1351:../system/include/cmsis/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1352:../system/include/cmsis/core_cm3.h **** 
1353:../system/include/cmsis/core_cm3.h **** /**
1354:../system/include/cmsis/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1355:../system/include/cmsis/core_cm3.h ****   \param[in] field  Name of the register bit field.
1356:../system/include/cmsis/core_cm3.h ****   \param[in] value  Value of register.
1357:../system/include/cmsis/core_cm3.h ****   \return           Masked and shifted bit field value.
1358:../system/include/cmsis/core_cm3.h **** */
1359:../system/include/cmsis/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1360:../system/include/cmsis/core_cm3.h **** 
1361:../system/include/cmsis/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1362:../system/include/cmsis/core_cm3.h **** 
1363:../system/include/cmsis/core_cm3.h **** 
1364:../system/include/cmsis/core_cm3.h **** /**
1365:../system/include/cmsis/core_cm3.h ****   \ingroup    CMSIS_core_register
1366:../system/include/cmsis/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1367:../system/include/cmsis/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1368:../system/include/cmsis/core_cm3.h ****   @{
1369:../system/include/cmsis/core_cm3.h ****  */
1370:../system/include/cmsis/core_cm3.h **** 
1371:../system/include/cmsis/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1372:../system/include/cmsis/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1373:../system/include/cmsis/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1374:../system/include/cmsis/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1375:../system/include/cmsis/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1376:../system/include/cmsis/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1377:../system/include/cmsis/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1378:../system/include/cmsis/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1379:../system/include/cmsis/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1380:../system/include/cmsis/core_cm3.h **** 
1381:../system/include/cmsis/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1382:../system/include/cmsis/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1383:../system/include/cmsis/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1384:../system/include/cmsis/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1385:../system/include/cmsis/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1386:../system/include/cmsis/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1387:../system/include/cmsis/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1388:../system/include/cmsis/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1389:../system/include/cmsis/core_cm3.h **** 
1390:../system/include/cmsis/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1391:../system/include/cmsis/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1392:../system/include/cmsis/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1393:../system/include/cmsis/core_cm3.h **** #endif
1394:../system/include/cmsis/core_cm3.h **** 
1395:../system/include/cmsis/core_cm3.h **** /*@} */
1396:../system/include/cmsis/core_cm3.h **** 
1397:../system/include/cmsis/core_cm3.h **** 
1398:../system/include/cmsis/core_cm3.h **** 
1399:../system/include/cmsis/core_cm3.h **** /*******************************************************************************
1400:../system/include/cmsis/core_cm3.h ****  *                Hardware Abstraction Layer
1401:../system/include/cmsis/core_cm3.h ****   Core Function Interface contains:
1402:../system/include/cmsis/core_cm3.h ****   - Core NVIC Functions
1403:../system/include/cmsis/core_cm3.h ****   - Core SysTick Functions
1404:../system/include/cmsis/core_cm3.h ****   - Core Debug Functions
1405:../system/include/cmsis/core_cm3.h ****   - Core Register Access Functions
1406:../system/include/cmsis/core_cm3.h ****  ******************************************************************************/
1407:../system/include/cmsis/core_cm3.h **** /**
1408:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1409:../system/include/cmsis/core_cm3.h **** */
1410:../system/include/cmsis/core_cm3.h **** 
1411:../system/include/cmsis/core_cm3.h **** 
1412:../system/include/cmsis/core_cm3.h **** 
1413:../system/include/cmsis/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1414:../system/include/cmsis/core_cm3.h **** /**
1415:../system/include/cmsis/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1416:../system/include/cmsis/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1417:../system/include/cmsis/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1418:../system/include/cmsis/core_cm3.h ****   @{
1419:../system/include/cmsis/core_cm3.h ****  */
1420:../system/include/cmsis/core_cm3.h **** 
1421:../system/include/cmsis/core_cm3.h **** /**
1422:../system/include/cmsis/core_cm3.h ****   \brief   Set Priority Grouping
1423:../system/include/cmsis/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1424:../system/include/cmsis/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1425:../system/include/cmsis/core_cm3.h ****            Only values from 0..7 are used.
1426:../system/include/cmsis/core_cm3.h ****            In case of a conflict between priority grouping and available
1427:../system/include/cmsis/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1428:../system/include/cmsis/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1429:../system/include/cmsis/core_cm3.h ****  */
1430:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1431:../system/include/cmsis/core_cm3.h **** {
1432:../system/include/cmsis/core_cm3.h ****   uint32_t reg_value;
1433:../system/include/cmsis/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1434:../system/include/cmsis/core_cm3.h **** 
1435:../system/include/cmsis/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1436:../system/include/cmsis/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1437:../system/include/cmsis/core_cm3.h ****   reg_value  =  (reg_value                                   |
1438:../system/include/cmsis/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1439:../system/include/cmsis/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1440:../system/include/cmsis/core_cm3.h ****   SCB->AIRCR =  reg_value;
1441:../system/include/cmsis/core_cm3.h **** }
1442:../system/include/cmsis/core_cm3.h **** 
1443:../system/include/cmsis/core_cm3.h **** 
1444:../system/include/cmsis/core_cm3.h **** /**
1445:../system/include/cmsis/core_cm3.h ****   \brief   Get Priority Grouping
1446:../system/include/cmsis/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1447:../system/include/cmsis/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1448:../system/include/cmsis/core_cm3.h ****  */
1449:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1450:../system/include/cmsis/core_cm3.h **** {
1451:../system/include/cmsis/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1452:../system/include/cmsis/core_cm3.h **** }
1453:../system/include/cmsis/core_cm3.h **** 
1454:../system/include/cmsis/core_cm3.h **** 
1455:../system/include/cmsis/core_cm3.h **** /**
1456:../system/include/cmsis/core_cm3.h ****   \brief   Enable External Interrupt
1457:../system/include/cmsis/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1458:../system/include/cmsis/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1459:../system/include/cmsis/core_cm3.h ****  */
1460:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1461:../system/include/cmsis/core_cm3.h **** {
1462:../system/include/cmsis/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 154              		.loc 2 1462 0
 155 00d6 2E4E     		ldr	r6, .L3+56
 156 00d8 4FF08063 		mov	r3, #67108864
 157 00dc 3360     		str	r3, [r6]
 158              	.LVL15:
 159              	.LBE25:
 160              	.LBE24:
 200:../system/src/drivers/analog_anemometer.c **** 	NVIC_EnableIRQ( TIM1_TRG_COM_TIM17_IRQn );
 201:../system/src/drivers/analog_anemometer.c **** 
 202:../system/src/drivers/analog_anemometer.c **** 	// Initializing the struct with DMA configuration
 203:../system/src/drivers/analog_anemometer.c **** 	DMA_StructInit(&DMA_InitStruct);
 161              		.loc 1 203 0
 162 00de 2D4C     		ldr	r4, .L3+60
 163 00e0 2046     		mov	r0, r4
 164 00e2 FFF7FEFF 		bl	DMA_StructInit
 165              	.LVL16:
 204:../system/src/drivers/analog_anemometer.c **** 
 205:../system/src/drivers/analog_anemometer.c **** 	// De initializing DMA1
 206:../system/src/drivers/analog_anemometer.c **** 	DMA_DeInit(DMA1_Channel7);
 166              		.loc 1 206 0
 167 00e6 2C48     		ldr	r0, .L3+64
 168 00e8 FFF7FEFF 		bl	DMA_DeInit
 169              	.LVL17:
 207:../system/src/drivers/analog_anemometer.c **** 
 208:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_BufferSize = ANALOG_ANEMOMETER_SPEED_PULSES_N;
 170              		.loc 1 208 0
 171 00ec 0A23     		movs	r3, #10
 172 00ee E360     		str	r3, [r4, #12]
 209:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_DIR = DMA_DIR_PeripheralSRC;
 173              		.loc 1 209 0
 174 00f0 A560     		str	r5, [r4, #8]
 210:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_M2M = DMA_M2M_Disable;
 175              		.loc 1 210 0
 176 00f2 A562     		str	r5, [r4, #40]
 211:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_MemoryBaseAddr = (uint32_t)analog_anemometer_windspeed_pulses_time;
 177              		.loc 1 211 0
 178 00f4 6760     		str	r7, [r4, #4]
 212:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
 179              		.loc 1 212 0
 180 00f6 4FF48063 		mov	r3, #1024
 181 00fa E361     		str	r3, [r4, #28]
 213:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_MemoryInc = DMA_MemoryInc_Enable;
 182              		.loc 1 213 0
 183 00fc 8023     		movs	r3, #128
 184 00fe 6361     		str	r3, [r4, #20]
 214:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_PeripheralBaseAddr = (uint32_t)&TIM17->CCR1;
 185              		.loc 1 214 0
 186 0100 264B     		ldr	r3, .L3+68
 187 0102 2360     		str	r3, [r4]
 215:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
 188              		.loc 1 215 0
 189 0104 4FF48073 		mov	r3, #256
 190 0108 A361     		str	r3, [r4, #24]
 216:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 191              		.loc 1 216 0
 192 010a 2561     		str	r5, [r4, #16]
 217:../system/src/drivers/analog_anemometer.c **** 
 218:../system/src/drivers/analog_anemometer.c **** 	dma_helper_start_ch7(&DMA_InitStruct);
 193              		.loc 1 218 0
 194 010c 2046     		mov	r0, r4
 195 010e FFF7FEFF 		bl	dma_helper_start_ch7
 196              	.LVL18:
 197              	.LBB26:
 198              	.LBB27:
 199              		.loc 2 1462 0
 200 0112 4FF40033 		mov	r3, #131072
 201 0116 3360     		str	r3, [r6]
 202              	.LVL19:
 203              	.LBE27:
 204              	.LBE26:
 219:../system/src/drivers/analog_anemometer.c **** 
 220:../system/src/drivers/analog_anemometer.c **** 	NVIC_EnableIRQ( DMA1_Channel7_IRQn );
 221:../system/src/drivers/analog_anemometer.c **** 
 222:../system/src/drivers/analog_anemometer.c **** 	// Initializing direction
 223:../system/src/drivers/analog_anemometer.c **** 
 224:../system/src/drivers/analog_anemometer.c **** 	// Configuring PD2 as an input for TIM3_ETR
 225:../system/src/drivers/analog_anemometer.c **** 	Configure_GPIO(GPIOD,2,FLOATING_INPUT);
 205              		.loc 1 225 0
 206 0118 0422     		movs	r2, #4
 207 011a 0221     		movs	r1, #2
 208 011c 2048     		ldr	r0, .L3+72
 209 011e FFF7FEFF 		bl	Configure_GPIO
 210              	.LVL20:
 226:../system/src/drivers/analog_anemometer.c **** 
 227:../system/src/drivers/analog_anemometer.c **** 	// initializing structure with default values
 228:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseStructInit(&TIM_TimeBaseInitStruct);
 211              		.loc 1 228 0
 212 0122 01A8     		add	r0, sp, #4
 213 0124 FFF7FEFF 		bl	TIM_TimeBaseStructInit
 214              	.LVL21:
 229:../system/src/drivers/analog_anemometer.c **** 
 230:../system/src/drivers/analog_anemometer.c **** 	// using default values of InitStruct
 231:../system/src/drivers/analog_anemometer.c **** 	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseInitStruct);
 215              		.loc 1 231 0
 216 0128 1E4C     		ldr	r4, .L3+76
 217 012a 01A9     		add	r1, sp, #4
 218 012c 2046     		mov	r0, r4
 219 012e FFF7FEFF 		bl	TIM_TimeBaseInit
 220              	.LVL22:
 232:../system/src/drivers/analog_anemometer.c **** 
 233:../system/src/drivers/analog_anemometer.c **** 	// enabling an external trigger to the TIM3
 234:../system/src/drivers/analog_anemometer.c **** 	TIM_ETRClockMode2Config(TIM3, TIM_ExtTRGPSC_OFF, TIM_ExtTRGPolarity_Inverted, 0);
 221              		.loc 1 234 0
 222 0132 2B46     		mov	r3, r5
 223 0134 4FF40042 		mov	r2, #32768
 224 0138 2946     		mov	r1, r5
 225 013a 2046     		mov	r0, r4
 226 013c FFF7FEFF 		bl	TIM_ETRClockMode2Config
 227              	.LVL23:
 235:../system/src/drivers/analog_anemometer.c **** 
 236:../system/src/drivers/analog_anemometer.c **** 	// Starting timer
 237:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM3, ENABLE);
 228              		.loc 1 237 0
 229 0140 0121     		movs	r1, #1
 230 0142 2046     		mov	r0, r4
 231 0144 FFF7FEFF 		bl	TIM_Cmd
 232              	.LVL24:
 233              	.LBB28:
 234              	.LBB29:
1463:../system/include/cmsis/core_cm3.h **** }
1464:../system/include/cmsis/core_cm3.h **** 
1465:../system/include/cmsis/core_cm3.h **** 
1466:../system/include/cmsis/core_cm3.h **** /**
1467:../system/include/cmsis/core_cm3.h ****   \brief   Disable External Interrupt
1468:../system/include/cmsis/core_cm3.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1469:../system/include/cmsis/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1470:../system/include/cmsis/core_cm3.h ****  */
1471:../system/include/cmsis/core_cm3.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1472:../system/include/cmsis/core_cm3.h **** {
1473:../system/include/cmsis/core_cm3.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 235              		.loc 2 1473 0
 236 0148 4FF00053 		mov	r3, #536870912
 237 014c C6F88030 		str	r3, [r6, #128]
 238              	.LVL25:
 239              	.LBE29:
 240              	.LBE28:
 238:../system/src/drivers/analog_anemometer.c **** 
 239:../system/src/drivers/analog_anemometer.c **** 	// disable an interrupt from TIMER3
 240:../system/src/drivers/analog_anemometer.c **** 	NVIC_DisableIRQ(TIM3_IRQn);
 241:../system/src/drivers/analog_anemometer.c **** 
 242:../system/src/drivers/analog_anemometer.c **** #endif
 243:../system/src/drivers/analog_anemometer.c **** 
 244:../system/src/drivers/analog_anemometer.c **** 
 245:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 246:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_ALTERNATE;
 247:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_9;
 248:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 249:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 250:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_2;
 251:../system/src/drivers/analog_anemometer.c **** 
 252:../system/src/drivers/analog_anemometer.c **** 	LL_GPIO_Init(GPIOB, &GPIO_InitTypeDef);
 253:../system/src/drivers/analog_anemometer.c **** 
 254:../system/src/drivers/analog_anemometer.c **** 	// set parameters for TIM4 used for windspeed
 255:../system/src/drivers/analog_anemometer.c **** 	TIM_InitTypeDef.Prescaler = 23999;
 256:../system/src/drivers/analog_anemometer.c **** 	TIM_InitTypeDef.Autoreload = 60000;
 257:../system/src/drivers/analog_anemometer.c **** 	TIM_InitTypeDef.CounterMode = LL_TIM_COUNTERMODE_UP;
 258:../system/src/drivers/analog_anemometer.c **** 	TIM_InitTypeDef.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 259:../system/src/drivers/analog_anemometer.c **** 	TIM_InitTypeDef.RepetitionCounter = 0;
 260:../system/src/drivers/analog_anemometer.c **** 
 261:../system/src/drivers/analog_anemometer.c **** 	// deinitialize TIM4 (windspeed)
 262:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_DeInit(TIM4);
 263:../system/src/drivers/analog_anemometer.c **** 
 264:../system/src/drivers/analog_anemometer.c **** 	// initialize timer basics
 265:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_Init(TIM4, &TIM_InitTypeDef);
 266:../system/src/drivers/analog_anemometer.c **** 
 267:../system/src/drivers/analog_anemometer.c **** 	// set parameters for TIM4 capture/compare 3 mapped to TI4 (pin PB9)
 268:../system/src/drivers/analog_anemometer.c **** 	TIM_IC_InitTypeDef.ICFilter = LL_TIM_IC_FILTER_FDIV1;
 269:../system/src/drivers/analog_anemometer.c **** 	TIM_IC_InitTypeDef.ICPolarity = LL_TIM_IC_POLARITY_RISING;
 270:../system/src/drivers/analog_anemometer.c **** 	TIM_IC_InitTypeDef.ICPrescaler = 0;
 271:../system/src/drivers/analog_anemometer.c **** 	TIM_IC_InitTypeDef.ICActiveInput = LL_TIM_ACTIVEINPUT_INDIRECTTI;	// 10: CC3 channel is configured
 272:../system/src/drivers/analog_anemometer.c **** 
 273:../system/src/drivers/analog_anemometer.c **** 	// configure and activate fourth channel
 274:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_IC_Init(TIM4, LL_TIM_CHANNEL_CH3, &TIM_IC_InitTypeDef);
 275:../system/src/drivers/analog_anemometer.c **** 
 276:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableDMAReq_UPDATE(TIM4);
 277:../system/src/drivers/analog_anemometer.c **** 
 278:../system/src/drivers/analog_anemometer.c **** 	// enable DMA request for fourth channel
 279:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableDMAReq_CC3(TIM4);
 280:../system/src/drivers/analog_anemometer.c **** 
 281:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.Direction = LL_DMA_DIRECTION_PERIPH_TO_MEMORY;
 282:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.MemoryOrM2MDstAddress = (uint32_t)analog_anemometer_windspeed_pulses_time;
 283:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 284:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_INCREMENT;
 285:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.Mode = LL_DMA_MODE_NORMAL;
 286:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.NbData = ANALOG_ANEMOMETER_SPEED_PULSES_N;
 287:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.PeriphOrM2MSrcAddress = (uint32_t)&TIM4->CCR3;
 288:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_HALFWORD;
 289:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.PeriphOrM2MSrcIncMode = LL_DMA_MEMORY_NOINCREMENT;
 290:../system/src/drivers/analog_anemometer.c **** 	DMA_InitStruct.PeriphRequest = LL_DMA_REQUEST_6; // LL_DMAMUX_REQ_TIM4_CH3
 291:../system/src/drivers/analog_anemometer.c **** 
 292:../system/src/drivers/analog_anemometer.c **** 	LL_DMA_Init(DMA1, LL_DMA_CHANNEL_5, &DMA_InitStruct);
 293:../system/src/drivers/analog_anemometer.c **** 
 294:../system/src/drivers/analog_anemometer.c **** 	LL_DMA_EnableIT_TC(DMA1, LL_DMA_CHANNEL_5);
 295:../system/src/drivers/analog_anemometer.c **** 
 296:../system/src/drivers/analog_anemometer.c **** 	LL_DMA_EnableChannel(DMA1, LL_DMA_CHANNEL_5);
 297:../system/src/drivers/analog_anemometer.c **** 
 298:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableCounter(TIM4);
 299:../system/src/drivers/analog_anemometer.c **** 
 300:../system/src/drivers/analog_anemometer.c **** 	NVIC_EnableIRQ( DMA1_Channel5_IRQn );
 301:../system/src/drivers/analog_anemometer.c **** 
 302:../system/src/drivers/analog_anemometer.c **** 	// direction
 303:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Mode = LL_GPIO_MODE_ALTERNATE;
 304:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Pin = LL_GPIO_PIN_2;
 305:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Pull = LL_GPIO_PULL_NO;
 306:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Speed = LL_GPIO_SPEED_FREQ_MEDIUM;
 307:../system/src/drivers/analog_anemometer.c **** 	GPIO_InitTypeDef.Alternate = LL_GPIO_AF_2;
 308:../system/src/drivers/analog_anemometer.c **** 
 309:../system/src/drivers/analog_anemometer.c **** 	LL_GPIO_Init(GPIOD, &GPIO_InitTypeDef);
 310:../system/src/drivers/analog_anemometer.c **** 
 311:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_StructInit(&TIM_InitTypeDef);
 312:../system/src/drivers/analog_anemometer.c **** 
 313:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_Init(TIM3, &TIM_InitTypeDef);
 314:../system/src/drivers/analog_anemometer.c **** 
 315:../system/src/drivers/analog_anemometer.c **** 	//	TIM_ETRClockMode2Config(TIM3, TIM_ExtTRGPSC_OFF, TIM_ExtTRGPolarity_Inverted, 0);
 316:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableExternalClock(TIM3);
 317:../system/src/drivers/analog_anemometer.c **** 
 318:../system/src/drivers/analog_anemometer.c **** 	// invert ETR polarity
 319:../system/src/drivers/analog_anemometer.c **** 	//TIM3->SMCR |= (1 << 15);
 320:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_ConfigETR(TIM3, LL_TIM_ETR_POLARITY_INVERTED, LL_TIM_ETR_PRESCALER_DIV1, LL_TIM_ETR_FILTER_
 321:../system/src/drivers/analog_anemometer.c **** 
 322:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableCounter(TIM3);
 323:../system/src/drivers/analog_anemometer.c **** 
 324:../system/src/drivers/analog_anemometer.c **** 	NVIC_EnableIRQ( TIM3_IRQn );
 325:../system/src/drivers/analog_anemometer.c **** #endif
 326:../system/src/drivers/analog_anemometer.c **** 
 327:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_timer_has_been_fired = 0;
 241              		.loc 1 327 0
 242 0150 154B     		ldr	r3, .L3+80
 243 0152 1D70     		strb	r5, [r3]
 328:../system/src/drivers/analog_anemometer.c **** 
 329:../system/src/drivers/analog_anemometer.c **** 	return;
 330:../system/src/drivers/analog_anemometer.c **** }
 244              		.loc 1 330 0
 245 0154 05B0     		add	sp, sp, #20
 246              		.cfi_def_cfa_offset 20
 247              		@ sp needed
 248 0156 F0BD     		pop	{r4, r5, r6, r7, pc}
 249              	.L4:
 250              		.align	2
 251              	.L3:
 252 0158 00000000 		.word	.LANCHOR0
 253 015c 6073FFFF 		.word	-36000
 254 0160 00D68AEA 		.word	-360000000
 255 0164 00000000 		.word	.LANCHOR1
 256 0168 00C1C500 		.word	12960000
 257 016c F0F1FFFF 		.word	-3600
 258 0170 00000000 		.word	.LANCHOR2
 259 0174 00000000 		.word	.LANCHOR3
 260 0178 00000000 		.word	analog_anemometer_windspeed_pulses_time
 261 017c 00000000 		.word	analog_anemometer_time_between_pulses
 262 0180 00000000 		.word	analog_anemometer_direction_timer_values
 263 0184 00100240 		.word	1073876992
 264 0188 000C0140 		.word	1073810432
 265 018c 00480140 		.word	1073825792
 266 0190 00E100E0 		.word	-536813312
 267 0194 00000000 		.word	DMA_InitStruct
 268 0198 80000240 		.word	1073873024
 269 019c 34480140 		.word	1073825844
 270 01a0 00140140 		.word	1073812480
 271 01a4 00040040 		.word	1073742848
 272 01a8 00000000 		.word	.LANCHOR4
 273              		.cfi_endproc
 274              	.LFE105:
 276              		.section	.text.analog_anemometer_deinit,"ax",%progbits
 277              		.align	1
 278              		.global	analog_anemometer_deinit
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu softvfp
 284              	analog_anemometer_deinit:
 285              	.LFB106:
 331:../system/src/drivers/analog_anemometer.c **** 
 332:../system/src/drivers/analog_anemometer.c **** void analog_anemometer_deinit(void) {
 286              		.loc 1 332 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 333:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 334:../system/src/drivers/analog_anemometer.c **** 	LL_DMA_DisableIT_TC(DMA1, LL_DMA_CHANNEL_5);
 335:../system/src/drivers/analog_anemometer.c **** 
 336:../system/src/drivers/analog_anemometer.c **** 	LL_DMA_DisableChannel(DMA1, LL_DMA_CHANNEL_5);
 337:../system/src/drivers/analog_anemometer.c **** 
 338:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_DisableCounter(TIM4);
 339:../system/src/drivers/analog_anemometer.c **** #endif
 340:../system/src/drivers/analog_anemometer.c **** }
 291              		.loc 1 340 0
 292 0000 7047     		bx	lr
 293              		.cfi_endproc
 294              	.LFE106:
 296              		.section	.text.analog_anemometer_timer_irq,"ax",%progbits
 297              		.align	1
 298              		.global	analog_anemometer_timer_irq
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 302              		.fpu softvfp
 304              	analog_anemometer_timer_irq:
 305              	.LFB107:
 341:../system/src/drivers/analog_anemometer.c **** 
 342:../system/src/drivers/analog_anemometer.c **** void analog_anemometer_timer_irq(void) {
 306              		.loc 1 342 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 343:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_timer_has_been_fired = 1;
 311              		.loc 1 343 0
 312 0000 014B     		ldr	r3, .L7
 313 0002 0122     		movs	r2, #1
 314 0004 1A70     		strb	r2, [r3]
 344:../system/src/drivers/analog_anemometer.c **** }
 315              		.loc 1 344 0
 316 0006 7047     		bx	lr
 317              	.L8:
 318              		.align	2
 319              	.L7:
 320 0008 00000000 		.word	.LANCHOR4
 321              		.cfi_endproc
 322              	.LFE107:
 324              		.section	.text.analog_anemometer_dma_irq,"ax",%progbits
 325              		.align	1
 326              		.global	analog_anemometer_dma_irq
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu softvfp
 332              	analog_anemometer_dma_irq:
 333              	.LFB108:
 345:../system/src/drivers/analog_anemometer.c **** 
 346:../system/src/drivers/analog_anemometer.c **** void analog_anemometer_dma_irq(void) {
 334              		.loc 1 346 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 16
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 30B5     		push	{r4, r5, lr}
 339              		.cfi_def_cfa_offset 12
 340              		.cfi_offset 4, -12
 341              		.cfi_offset 5, -8
 342              		.cfi_offset 14, -4
 343 0002 85B0     		sub	sp, sp, #20
 344              		.cfi_def_cfa_offset 32
 345              	.LVL26:
 347:../system/src/drivers/analog_anemometer.c **** 	int i = 0;
 348:../system/src/drivers/analog_anemometer.c **** 	uint16_t pulse_ln = 0;
 349:../system/src/drivers/analog_anemometer.c **** 	uint16_t previous_pulse_ln = 0;
 350:../system/src/drivers/analog_anemometer.c **** 	uint16_t shorter_pulse = 0;
 351:../system/src/drivers/analog_anemometer.c **** 	volatile uint16_t minimum_pulse_ln = 60000;
 346              		.loc 1 351 0
 347 0004 4EF66022 		movw	r2, #60000
 348 0008 ADF80E20 		strh	r2, [sp, #14]	@ movhi
 352:../system/src/drivers/analog_anemometer.c **** 	volatile uint16_t previous_minimum_pulse_ln = 60000;	// first value bigger than minimal one
 349              		.loc 1 352 0
 350 000c ADF80C20 		strh	r2, [sp, #12]	@ movhi
 353:../system/src/drivers/analog_anemometer.c **** 	volatile uint16_t maximum_pulse_ln = 0;
 351              		.loc 1 353 0
 352 0010 0023     		movs	r3, #0
 353 0012 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 354:../system/src/drivers/analog_anemometer.c **** 	volatile uint16_t previous_maximum_pulse_ln = 0;		//
 354              		.loc 1 354 0
 355 0016 ADF80830 		strh	r3, [sp, #8]	@ movhi
 355:../system/src/drivers/analog_anemometer.c **** 	volatile uint16_t slew_rate_limit = 60000;
 356              		.loc 1 355 0
 357 001a ADF80620 		strh	r2, [sp, #6]	@ movhi
 356:../system/src/drivers/analog_anemometer.c **** 
 357:../system/src/drivers/analog_anemometer.c **** 	// resetting flags
 358:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_slew_limit_fired = 0;
 358              		.loc 1 358 0
 359 001e 7F4A     		ldr	r2, .L49
 360 0020 1370     		strb	r3, [r2]
 359:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_deboucing_fired = 0;
 361              		.loc 1 359 0
 362 0022 7F4A     		ldr	r2, .L49+4
 363 0024 1370     		strb	r3, [r2]
 360:../system/src/drivers/analog_anemometer.c **** 
 361:../system/src/drivers/analog_anemometer.c **** 	// checking if timer overflowed (raised an iterrupt)
 362:../system/src/drivers/analog_anemometer.c **** 	if (analog_anemometer_timer_has_been_fired == 1) {
 364              		.loc 1 362 0
 365 0026 7F4B     		ldr	r3, .L49+8
 366 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 367 002a 012B     		cmp	r3, #1
 368 002c 0ED0     		beq	.L43
 369              	.LBB30:
 370              	.LBB31:
 371              		.file 3 "../include/LedConfig.h"
   1:../include/LedConfig.h **** /*
   2:../include/LedConfig.h ****  * LedConfig.h
   3:../include/LedConfig.h ****  *
   4:../include/LedConfig.h ****  *  Created on: 05.07.2017
   5:../include/LedConfig.h ****  *      Author: mateusz
   6:../include/LedConfig.h ****  */
   7:../include/LedConfig.h **** 
   8:../include/LedConfig.h **** #ifndef LEDCONFIG_H_
   9:../include/LedConfig.h **** #define LEDCONFIG_H_
  10:../include/LedConfig.h **** 
  11:../include/LedConfig.h **** // PC8 - LED1 - upper
  12:../include/LedConfig.h **** // PC9 - LED2 - lower
  13:../include/LedConfig.h **** 
  14:../include/LedConfig.h **** #ifdef STM32F10X_MD_VL
  15:../include/LedConfig.h **** #include <stm32f10x.h>
  16:../include/LedConfig.h **** #endif
  17:../include/LedConfig.h **** #ifdef STM32L471xx
  18:../include/LedConfig.h **** #include <stm32l4xx.h>
  19:../include/LedConfig.h **** #include <stm32l4xx_ll_gpio.h>
  20:../include/LedConfig.h **** #endif
  21:../include/LedConfig.h **** 
  22:../include/LedConfig.h **** #include <stdint.h>
  23:../include/LedConfig.h **** #include <stdbool.h>
  24:../include/LedConfig.h **** 
  25:../include/LedConfig.h **** #define BLINK_DURATION_MSEC 		20 * BLINK_MSEC_PER_SVC_CALL
  26:../include/LedConfig.h **** #define BLINK_MSEC_PER_SVC_CALL 	10
  27:../include/LedConfig.h **** 
  28:../include/LedConfig.h **** /* C++ detection */
  29:../include/LedConfig.h **** #ifdef __cplusplus
  30:../include/LedConfig.h **** extern "C" {
  31:../include/LedConfig.h **** #endif
  32:../include/LedConfig.h **** 
  33:../include/LedConfig.h **** extern uint8_t led_blinking_led2;
  34:../include/LedConfig.h **** extern uint8_t led_blinking_led1;
  35:../include/LedConfig.h **** 
  36:../include/LedConfig.h **** void led_config(void);
  37:../include/LedConfig.h **** void led_init(void);
  38:../include/LedConfig.h **** void led_service_blink(void);
  39:../include/LedConfig.h **** 
  40:../include/LedConfig.h **** #ifdef STM32F10X_MD_VL
  41:../include/LedConfig.h **** inline void led_control_led1_upper(bool _in) {
  42:../include/LedConfig.h **** 	if (_in == true) {
  43:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
  44:../include/LedConfig.h **** 	}
  45:../include/LedConfig.h **** 	else {
  46:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
  47:../include/LedConfig.h **** 	}
  48:../include/LedConfig.h **** }
  49:../include/LedConfig.h **** 
  50:../include/LedConfig.h **** inline void led_control_led2_bottom(bool _in) {
  51:../include/LedConfig.h **** 	if (_in == true) {
  52:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
  53:../include/LedConfig.h **** 	}
  54:../include/LedConfig.h **** 	else {
  55:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
  56:../include/LedConfig.h **** 	}
  57:../include/LedConfig.h **** }
  58:../include/LedConfig.h **** 
  59:../include/LedConfig.h **** inline void led_flip_led1_upper(void) {
  60:../include/LedConfig.h **** 	if ((GPIOC->ODR & GPIO_ODR_ODR8)  == GPIO_ODR_ODR8) {
  61:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR8;
  62:../include/LedConfig.h **** 	}
  63:../include/LedConfig.h **** 	else {
  64:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS8;
  65:../include/LedConfig.h **** 	}
  66:../include/LedConfig.h **** }
  67:../include/LedConfig.h **** 
  68:../include/LedConfig.h **** inline void led_flip_led2_bottom(void) {
  69:../include/LedConfig.h **** 	if ((GPIOC->ODR & GPIO_ODR_ODR9)  == GPIO_ODR_ODR9) {
  70:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
  71:../include/LedConfig.h **** 	}
  72:../include/LedConfig.h **** 	else {
  73:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BS9;
  74:../include/LedConfig.h **** 	}
  75:../include/LedConfig.h **** }
  76:../include/LedConfig.h **** 
  77:../include/LedConfig.h **** inline void led_blink_led1_upper(void) {
  78:../include/LedConfig.h **** 	led_blinking_led1 = BLINK_DURATION_MSEC;
  79:../include/LedConfig.h **** 
  80:../include/LedConfig.h **** 	led_flip_led1_upper();
  81:../include/LedConfig.h **** }
  82:../include/LedConfig.h **** 
  83:../include/LedConfig.h **** inline void led_blink_led2_botoom(void) {
  84:../include/LedConfig.h **** 	led_blinking_led2 = BLINK_DURATION_MSEC;
 372              		.loc 3 84 0
 373 002e 7E4B     		ldr	r3, .L49+12
 374 0030 C822     		movs	r2, #200
 375 0032 1A70     		strb	r2, [r3]
 376              	.LBB32:
 377              	.LBB33:
  69:../include/LedConfig.h **** 		GPIOC->BSRR |= GPIO_BSRR_BR9;
 378              		.loc 3 69 0
 379 0034 7D4B     		ldr	r3, .L49+16
 380 0036 DB68     		ldr	r3, [r3, #12]
 381 0038 13F4007F 		tst	r3, #512
 382 003c 18D0     		beq	.L14
  70:../include/LedConfig.h **** 	}
 383              		.loc 3 70 0
 384 003e 7B4A     		ldr	r2, .L49+16
 385 0040 1369     		ldr	r3, [r2, #16]
 386 0042 43F00073 		orr	r3, r3, #33554432
 387 0046 1361     		str	r3, [r2, #16]
 388              	.L15:
 389              	.LBE33:
 390              	.LBE32:
 391              	.LBE31:
 392              	.LBE30:
 363:../system/src/drivers/analog_anemometer.c **** 		rte_wx_windspeed_pulses = 1;
 364:../system/src/drivers/analog_anemometer.c **** 
 365:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_timer_has_been_fired = 0;
 366:../system/src/drivers/analog_anemometer.c **** 
 367:../system/src/drivers/analog_anemometer.c **** 		// reseting array to default values
 368:../system/src/drivers/analog_anemometer.c **** 		for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N; i++)
 393              		.loc 1 368 0 discriminator 1
 394 0048 0023     		movs	r3, #0
 395 004a 22E0     		b	.L16
 396              	.L43:
 363:../system/src/drivers/analog_anemometer.c **** 		rte_wx_windspeed_pulses = 1;
 397              		.loc 1 363 0
 398 004c 784B     		ldr	r3, .L49+20
 399 004e 0122     		movs	r2, #1
 400 0050 1A80     		strh	r2, [r3]	@ movhi
 365:../system/src/drivers/analog_anemometer.c **** 
 401              		.loc 1 365 0
 402 0052 0023     		movs	r3, #0
 403 0054 734A     		ldr	r2, .L49+8
 404 0056 1370     		strb	r3, [r2]
 405              	.LVL27:
 406              	.L11:
 407              		.loc 1 368 0 discriminator 1
 408 0058 092B     		cmp	r3, #9
 409 005a 05DC     		bgt	.L44
 369:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_windspeed_pulses_time[i] = 0;
 410              		.loc 1 369 0 discriminator 3
 411 005c 754A     		ldr	r2, .L49+24
 412 005e 0021     		movs	r1, #0
 413 0060 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 368:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_windspeed_pulses_time[i] = 0;
 414              		.loc 1 368 0 discriminator 3
 415 0064 0133     		adds	r3, r3, #1
 416              	.LVL28:
 417 0066 F7E7     		b	.L11
 418              	.L44:
 370:../system/src/drivers/analog_anemometer.c **** 
 371:../system/src/drivers/analog_anemometer.c **** 		// restarting the DMA channel
 372:../system/src/drivers/analog_anemometer.c **** 		dma_helper_start_ch7(&DMA_InitStruct);
 419              		.loc 1 372 0
 420 0068 7348     		ldr	r0, .L49+28
 421 006a FFF7FEFF 		bl	dma_helper_start_ch7
 422              	.LVL29:
 373:../system/src/drivers/analog_anemometer.c **** 
 374:../system/src/drivers/analog_anemometer.c **** 		return;
 423              		.loc 1 374 0
 424 006e D3E0     		b	.L9
 425              	.LVL30:
 426              	.L14:
 427              	.LBB37:
 428              	.LBB36:
 429              	.LBB35:
 430              	.LBB34:
  73:../include/LedConfig.h **** 	}
 431              		.loc 3 73 0
 432 0070 6E4A     		ldr	r2, .L49+16
 433 0072 1369     		ldr	r3, [r2, #16]
 434 0074 43F40073 		orr	r3, r3, #512
 435 0078 1361     		str	r3, [r2, #16]
 436 007a E5E7     		b	.L15
 437              	.LVL31:
 438              	.L17:
 439              	.LBE34:
 440              	.LBE35:
 441              	.LBE36:
 442              	.LBE37:
 375:../system/src/drivers/analog_anemometer.c **** 	}
 376:../system/src/drivers/analog_anemometer.c **** 
 377:../system/src/drivers/analog_anemometer.c **** 	// blinking the led - led will blink every 10 pulses, so if wind is 1m/s it will blink every 10 se
 378:../system/src/drivers/analog_anemometer.c **** 	led_blink_led2_botoom();
 379:../system/src/drivers/analog_anemometer.c **** 
 380:../system/src/drivers/analog_anemometer.c **** 	// calculating time between pulses
 381:../system/src/drivers/analog_anemometer.c **** 	for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N - 1; i++) {
 382:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_windspeed_pulses_time[i + 1] -
 443              		.loc 1 382 0 discriminator 3
 444 007c 591C     		adds	r1, r3, #1
 445 007e 6D48     		ldr	r0, .L49+24
 446 0080 30F81120 		ldrh	r2, [r0, r1, lsl #1]
 383:../system/src/drivers/analog_anemometer.c **** 				analog_anemometer_windspeed_pulses_time[i];
 447              		.loc 1 383 0 discriminator 3
 448 0084 30F81300 		ldrh	r0, [r0, r3, lsl #1]
 382:../system/src/drivers/analog_anemometer.c **** 				analog_anemometer_windspeed_pulses_time[i];
 449              		.loc 1 382 0 discriminator 3
 450 0088 121A     		subs	r2, r2, r0
 451              	.LVL32:
 384:../system/src/drivers/analog_anemometer.c **** 
 385:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_time_between_pulses[i] = pulse_ln;
 452              		.loc 1 385 0 discriminator 3
 453 008a 6C48     		ldr	r0, .L49+32
 454 008c 20F81320 		strh	r2, [r0, r3, lsl #1]	@ movhi
 455              	.LVL33:
 381:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_windspeed_pulses_time[i + 1] -
 456              		.loc 1 381 0 discriminator 3
 457 0090 0B46     		mov	r3, r1
 458              	.LVL34:
 459              	.L16:
 381:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_windspeed_pulses_time[i + 1] -
 460              		.loc 1 381 0 is_stmt 0 discriminator 1
 461 0092 082B     		cmp	r3, #8
 462 0094 F2DD     		ble	.L17
 386:../system/src/drivers/analog_anemometer.c **** 	}
 387:../system/src/drivers/analog_anemometer.c **** 
 388:../system/src/drivers/analog_anemometer.c **** 	// debouncing captured pulse times
 389:../system/src/drivers/analog_anemometer.c **** 	for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N - 1; i++) {
 463              		.loc 1 389 0 is_stmt 1
 464 0096 0023     		movs	r3, #0
 465              	.LVL35:
 466 0098 00E0     		b	.L18
 467              	.LVL36:
 468              	.L19:
 469              		.loc 1 389 0 is_stmt 0 discriminator 2
 470 009a 0133     		adds	r3, r3, #1
 471              	.LVL37:
 472              	.L18:
 473              		.loc 1 389 0 discriminator 1
 474 009c 082B     		cmp	r3, #8
 475 009e 0CDC     		bgt	.L45
 390:../system/src/drivers/analog_anemometer.c **** 		if (analog_anemometer_time_between_pulses[i] < MINUM_PULSE_LN) {
 476              		.loc 1 390 0 is_stmt 1
 477 00a0 664A     		ldr	r2, .L49+32
 478 00a2 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 479 00a6 0E2A     		cmp	r2, #14
 480 00a8 F7D8     		bhi	.L19
 391:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_time_between_pulses[i] = 0;
 481              		.loc 1 391 0
 482 00aa 644A     		ldr	r2, .L49+32
 483 00ac 0021     		movs	r1, #0
 484 00ae 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 392:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired = 1;
 485              		.loc 1 392 0
 486 00b2 5B4A     		ldr	r2, .L49+4
 487 00b4 0121     		movs	r1, #1
 488 00b6 1170     		strb	r1, [r2]
 489 00b8 EFE7     		b	.L19
 490              	.L45:
 393:../system/src/drivers/analog_anemometer.c **** 		}
 394:../system/src/drivers/analog_anemometer.c **** 	}
 395:../system/src/drivers/analog_anemometer.c **** 
 396:../system/src/drivers/analog_anemometer.c **** 	// limiting slew rate
 397:../system/src/drivers/analog_anemometer.c **** 	for (i = 1; i < ANALOG_ANEMOMETER_SPEED_PULSES_N; i++) {
 491              		.loc 1 397 0
 492 00ba 0123     		movs	r3, #1
 493              	.LVL38:
 494 00bc 1EE0     		b	.L21
 495              	.LVL39:
 496              	.L41:
 497              	.LBB38:
 398:../system/src/drivers/analog_anemometer.c **** 		previous_pulse_ln = analog_anemometer_time_between_pulses[i - 1];
 399:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_time_between_pulses[i];
 400:../system/src/drivers/analog_anemometer.c **** 
 401:../system/src/drivers/analog_anemometer.c **** 		// checking which inter-pulse time is shorter
 402:../system/src/drivers/analog_anemometer.c **** 		if (previous_pulse_ln < pulse_ln)
 403:../system/src/drivers/analog_anemometer.c **** 			shorter_pulse = previous_pulse_ln;
 404:../system/src/drivers/analog_anemometer.c **** 		else
 405:../system/src/drivers/analog_anemometer.c **** 			shorter_pulse = pulse_ln;
 498              		.loc 1 405 0
 499 00be 0246     		mov	r2, r0
 500 00c0 27E0     		b	.L22
 501              	.LVL40:
 502              	.L23:
 406:../system/src/drivers/analog_anemometer.c **** 
 407:../system/src/drivers/analog_anemometer.c **** 		// calculating maximum slew rate basing on current inter pulse ln
 408:../system/src/drivers/analog_anemometer.c **** 		if (shorter_pulse >= 1000) {
 409:../system/src/drivers/analog_anemometer.c **** 			// 1 meter per second
 410:../system/src/drivers/analog_anemometer.c **** 			slew_rate_limit = shorter_pulse;
 411:../system/src/drivers/analog_anemometer.c **** 		}
 412:../system/src/drivers/analog_anemometer.c **** 		else if (shorter_pulse >= 200 && shorter_pulse < 1000) {
 503              		.loc 1 412 0
 504 00c2 A2F1C805 		sub	r5, r2, #200
 505 00c6 ADB2     		uxth	r5, r5
 506 00c8 B5F5487F 		cmp	r5, #800
 507 00cc 03D2     		bcs	.L25
 413:../system/src/drivers/analog_anemometer.c **** 			// from 1 to 5 meters per second
 414:../system/src/drivers/analog_anemometer.c **** 			slew_rate_limit = shorter_pulse >> 1;
 508              		.loc 1 414 0
 509 00ce 5208     		lsrs	r2, r2, #1
 510              	.LVL41:
 511 00d0 ADF80620 		strh	r2, [sp, #6]	@ movhi
 512 00d4 22E0     		b	.L24
 513              	.LVL42:
 514              	.L25:
 415:../system/src/drivers/analog_anemometer.c **** 		}
 416:../system/src/drivers/analog_anemometer.c **** 		else {
 417:../system/src/drivers/analog_anemometer.c **** 			// more than 5 meters per second
 418:../system/src/drivers/analog_anemometer.c **** 			slew_rate_limit = shorter_pulse >> 2;
 515              		.loc 1 418 0
 516 00d6 9208     		lsrs	r2, r2, #2
 517              	.LVL43:
 518 00d8 ADF80620 		strh	r2, [sp, #6]	@ movhi
 519 00dc 1EE0     		b	.L24
 520              	.LVL44:
 521              	.L27:
 419:../system/src/drivers/analog_anemometer.c **** 		}
 420:../system/src/drivers/analog_anemometer.c **** 
 421:../system/src/drivers/analog_anemometer.c **** 		// skipping pulses erased by debouncing
 422:../system/src/drivers/analog_anemometer.c **** 		if (pulse_ln == 0 || previous_pulse_ln == 0) {
 423:../system/src/drivers/analog_anemometer.c **** 			continue;
 424:../system/src/drivers/analog_anemometer.c **** 		}
 425:../system/src/drivers/analog_anemometer.c **** 
 426:../system/src/drivers/analog_anemometer.c **** 		int32_t diff = pulse_ln - previous_pulse_ln;
 427:../system/src/drivers/analog_anemometer.c **** 
 428:../system/src/drivers/analog_anemometer.c **** 		// if current inter-pulse time is much longer than previous (some pulse is missing?)
 429:../system/src/drivers/analog_anemometer.c **** 		if ( diff > slew_rate_limit ) {
 430:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_time_between_pulses[i] = previous_pulse_ln + ((uint32_t)slew_rate_limit);
 431:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired = 1;
 432:../system/src/drivers/analog_anemometer.c **** 		}
 433:../system/src/drivers/analog_anemometer.c **** 		// if previous inter-pulse time is much longer than current
 434:../system/src/drivers/analog_anemometer.c **** 		else if (diff < -slew_rate_limit){
 522              		.loc 1 434 0
 523 00de BDF80620 		ldrh	r2, [sp, #6]
 524 00e2 5242     		negs	r2, r2
 525 00e4 AA42     		cmp	r2, r5
 526 00e6 08DD     		ble	.L26
 435:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_time_between_pulses[i - 1] = pulse_ln + ((uint32_t)slew_rate_limit);
 527              		.loc 1 435 0
 528 00e8 BDF80620 		ldrh	r2, [sp, #6]
 529 00ec 1044     		add	r0, r0, r2
 530              	.LVL45:
 531 00ee 534A     		ldr	r2, .L49+32
 532              	.LVL46:
 533 00f0 22F81400 		strh	r0, [r2, r4, lsl #1]	@ movhi
 534              	.LVL47:
 436:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired = 1;
 535              		.loc 1 436 0
 536 00f4 494A     		ldr	r2, .L49
 537 00f6 0121     		movs	r1, #1
 538              	.LVL48:
 539 00f8 1170     		strb	r1, [r2]
 540              	.LVL49:
 541              	.L26:
 542              	.LBE38:
 397:../system/src/drivers/analog_anemometer.c **** 		previous_pulse_ln = analog_anemometer_time_between_pulses[i - 1];
 543              		.loc 1 397 0 discriminator 2
 544 00fa 0133     		adds	r3, r3, #1
 545              	.LVL50:
 546              	.L21:
 397:../system/src/drivers/analog_anemometer.c **** 		previous_pulse_ln = analog_anemometer_time_between_pulses[i - 1];
 547              		.loc 1 397 0 is_stmt 0 discriminator 1
 548 00fc 092B     		cmp	r3, #9
 549 00fe 21DC     		bgt	.L46
 550              	.LBB39:
 398:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_time_between_pulses[i];
 551              		.loc 1 398 0 is_stmt 1
 552 0100 5C1E     		subs	r4, r3, #1
 553 0102 4E4A     		ldr	r2, .L49+32
 554 0104 32F81410 		ldrh	r1, [r2, r4, lsl #1]
 555              	.LVL51:
 399:../system/src/drivers/analog_anemometer.c **** 
 556              		.loc 1 399 0
 557 0108 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 558              	.LVL52:
 402:../system/src/drivers/analog_anemometer.c **** 			shorter_pulse = previous_pulse_ln;
 559              		.loc 1 402 0
 560 010c 8142     		cmp	r1, r0
 561 010e D6D2     		bcs	.L41
 403:../system/src/drivers/analog_anemometer.c **** 		else
 562              		.loc 1 403 0
 563 0110 0A46     		mov	r2, r1
 564              	.L22:
 565              	.LVL53:
 408:../system/src/drivers/analog_anemometer.c **** 			// 1 meter per second
 566              		.loc 1 408 0
 567 0112 B2F57A7F 		cmp	r2, #1000
 568 0116 D4D3     		bcc	.L23
 410:../system/src/drivers/analog_anemometer.c **** 		}
 569              		.loc 1 410 0
 570 0118 ADF80620 		strh	r2, [sp, #6]	@ movhi
 571              	.LVL54:
 572              	.L24:
 422:../system/src/drivers/analog_anemometer.c **** 			continue;
 573              		.loc 1 422 0
 574 011c 0028     		cmp	r0, #0
 575 011e ECD0     		beq	.L26
 422:../system/src/drivers/analog_anemometer.c **** 			continue;
 576              		.loc 1 422 0 is_stmt 0 discriminator 1
 577 0120 0029     		cmp	r1, #0
 578 0122 EAD0     		beq	.L26
 426:../system/src/drivers/analog_anemometer.c **** 
 579              		.loc 1 426 0 is_stmt 1
 580 0124 451A     		subs	r5, r0, r1
 581              	.LVL55:
 429:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_time_between_pulses[i] = previous_pulse_ln + ((uint32_t)slew_rate_limit);
 582              		.loc 1 429 0
 583 0126 BDF80620 		ldrh	r2, [sp, #6]
 584 012a 92B2     		uxth	r2, r2
 585 012c AA42     		cmp	r2, r5
 586 012e D6DA     		bge	.L27
 430:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired = 1;
 587              		.loc 1 430 0
 588 0130 BDF80620 		ldrh	r2, [sp, #6]
 589 0134 1144     		add	r1, r1, r2
 590              	.LVL56:
 591 0136 414A     		ldr	r2, .L49+32
 592              	.LVL57:
 593 0138 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 594              	.LVL58:
 431:../system/src/drivers/analog_anemometer.c **** 		}
 595              		.loc 1 431 0
 596 013c 374A     		ldr	r2, .L49
 597 013e 0121     		movs	r1, #1
 598 0140 1170     		strb	r1, [r2]
 599 0142 DAE7     		b	.L26
 600              	.LVL59:
 601              	.L46:
 602              	.LBE39:
 437:../system/src/drivers/analog_anemometer.c **** 		}
 438:../system/src/drivers/analog_anemometer.c **** 		// if this pulse time is ok do nothing.
 439:../system/src/drivers/analog_anemometer.c **** 		else {
 440:../system/src/drivers/analog_anemometer.c **** 			;
 441:../system/src/drivers/analog_anemometer.c **** 		}
 442:../system/src/drivers/analog_anemometer.c **** 	}
 443:../system/src/drivers/analog_anemometer.c **** 
 444:../system/src/drivers/analog_anemometer.c **** 	minimum_pulse_ln = 60000;
 603              		.loc 1 444 0
 604 0144 4EF66023 		movw	r3, #60000
 605              	.LVL60:
 606 0148 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 445:../system/src/drivers/analog_anemometer.c **** 	previous_minimum_pulse_ln = 60000;
 607              		.loc 1 445 0
 608 014c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 446:../system/src/drivers/analog_anemometer.c **** 
 447:../system/src/drivers/analog_anemometer.c **** 	maximum_pulse_ln = 0;
 609              		.loc 1 447 0
 610 0150 0023     		movs	r3, #0
 611 0152 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 448:../system/src/drivers/analog_anemometer.c **** 	previous_maximum_pulse_ln = 0;
 612              		.loc 1 448 0
 613 0156 ADF80830 		strh	r3, [sp, #8]	@ movhi
 614              	.LVL61:
 449:../system/src/drivers/analog_anemometer.c **** 
 450:../system/src/drivers/analog_anemometer.c **** 	// find maximum and minimum values within inter-pulses times
 451:../system/src/drivers/analog_anemometer.c **** 	for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N; i++) {
 615              		.loc 1 451 0
 616 015a 0AE0     		b	.L29
 617              	.LVL62:
 618              	.L48:
 452:../system/src/drivers/analog_anemometer.c **** 
 453:../system/src/drivers/analog_anemometer.c **** 		pulse_ln = analog_anemometer_time_between_pulses[i];
 454:../system/src/drivers/analog_anemometer.c **** 
 455:../system/src/drivers/analog_anemometer.c **** 		// skipping pulses erased by debouncing
 456:../system/src/drivers/analog_anemometer.c **** 		if (pulse_ln == 0)
 457:../system/src/drivers/analog_anemometer.c **** 			continue;
 458:../system/src/drivers/analog_anemometer.c **** 
 459:../system/src/drivers/analog_anemometer.c **** 		// find maximum and minimum values within pulses duration
 460:../system/src/drivers/analog_anemometer.c **** 		if (pulse_ln < minimum_pulse_ln) {
 461:../system/src/drivers/analog_anemometer.c **** 
 462:../system/src/drivers/analog_anemometer.c **** 			// check if 'previous' has a default value of 60k
 463:../system/src/drivers/analog_anemometer.c **** 			if (previous_minimum_pulse_ln == 60000) {
 464:../system/src/drivers/analog_anemometer.c **** 				// if yes store the current value to handle a situation than whole
 465:../system/src/drivers/analog_anemometer.c **** 				// circular buffer conssit the same value
 466:../system/src/drivers/analog_anemometer.c **** 				previous_minimum_pulse_ln = pulse_ln;
 619              		.loc 1 466 0
 620 015c ADF80C20 		strh	r2, [sp, #12]	@ movhi
 621 0160 1FE0     		b	.L33
 622              	.L34:
 467:../system/src/drivers/analog_anemometer.c **** 			}
 468:../system/src/drivers/analog_anemometer.c **** 			else {
 469:../system/src/drivers/analog_anemometer.c **** 				// copying previous minimal value
 470:../system/src/drivers/analog_anemometer.c **** 				previous_minimum_pulse_ln = minimum_pulse_ln;
 471:../system/src/drivers/analog_anemometer.c **** 			}
 472:../system/src/drivers/analog_anemometer.c **** 
 473:../system/src/drivers/analog_anemometer.c **** 			// setting current minimal value
 474:../system/src/drivers/analog_anemometer.c **** 			minimum_pulse_ln = pulse_ln;
 475:../system/src/drivers/analog_anemometer.c **** 		}
 476:../system/src/drivers/analog_anemometer.c **** 
 477:../system/src/drivers/analog_anemometer.c **** 		if (pulse_ln > maximum_pulse_ln) {
 478:../system/src/drivers/analog_anemometer.c **** 
 479:../system/src/drivers/analog_anemometer.c **** 			if (previous_maximum_pulse_ln == 0) {
 480:../system/src/drivers/analog_anemometer.c **** 				previous_maximum_pulse_ln = pulse_ln;
 481:../system/src/drivers/analog_anemometer.c **** 			}
 482:../system/src/drivers/analog_anemometer.c **** 			else {
 483:../system/src/drivers/analog_anemometer.c **** 				previous_maximum_pulse_ln = maximum_pulse_ln;
 623              		.loc 1 483 0
 624 0162 BDF80A10 		ldrh	r1, [sp, #10]
 625 0166 89B2     		uxth	r1, r1
 626 0168 ADF80810 		strh	r1, [sp, #8]	@ movhi
 627              	.L35:
 484:../system/src/drivers/analog_anemometer.c **** 			}
 485:../system/src/drivers/analog_anemometer.c **** 
 486:../system/src/drivers/analog_anemometer.c **** 			maximum_pulse_ln = pulse_ln;
 628              		.loc 1 486 0
 629 016c ADF80A20 		strh	r2, [sp, #10]	@ movhi
 630              	.L30:
 451:../system/src/drivers/analog_anemometer.c **** 
 631              		.loc 1 451 0 discriminator 2
 632 0170 0133     		adds	r3, r3, #1
 633              	.LVL63:
 634              	.L29:
 451:../system/src/drivers/analog_anemometer.c **** 
 635              		.loc 1 451 0 is_stmt 0 discriminator 1
 636 0172 092B     		cmp	r3, #9
 637 0174 24DC     		bgt	.L47
 453:../system/src/drivers/analog_anemometer.c **** 
 638              		.loc 1 453 0 is_stmt 1
 639 0176 314A     		ldr	r2, .L49+32
 640 0178 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 641              	.LVL64:
 456:../system/src/drivers/analog_anemometer.c **** 			continue;
 642              		.loc 1 456 0
 643 017c 002A     		cmp	r2, #0
 644 017e F7D0     		beq	.L30
 460:../system/src/drivers/analog_anemometer.c **** 
 645              		.loc 1 460 0
 646 0180 BDF80E10 		ldrh	r1, [sp, #14]
 647 0184 89B2     		uxth	r1, r1
 648 0186 9142     		cmp	r1, r2
 649 0188 0DD9     		bls	.L31
 463:../system/src/drivers/analog_anemometer.c **** 				// if yes store the current value to handle a situation than whole
 650              		.loc 1 463 0
 651 018a BDF80C10 		ldrh	r1, [sp, #12]
 652 018e 89B2     		uxth	r1, r1
 653 0190 4EF66020 		movw	r0, #60000
 654 0194 8142     		cmp	r1, r0
 655 0196 E1D0     		beq	.L48
 470:../system/src/drivers/analog_anemometer.c **** 			}
 656              		.loc 1 470 0
 657 0198 BDF80E10 		ldrh	r1, [sp, #14]
 658 019c 89B2     		uxth	r1, r1
 659 019e ADF80C10 		strh	r1, [sp, #12]	@ movhi
 660              	.L33:
 474:../system/src/drivers/analog_anemometer.c **** 		}
 661              		.loc 1 474 0
 662 01a2 ADF80E20 		strh	r2, [sp, #14]	@ movhi
 663              	.L31:
 477:../system/src/drivers/analog_anemometer.c **** 
 664              		.loc 1 477 0
 665 01a6 BDF80A10 		ldrh	r1, [sp, #10]
 666 01aa 89B2     		uxth	r1, r1
 667 01ac 9142     		cmp	r1, r2
 668 01ae DFD2     		bcs	.L30
 479:../system/src/drivers/analog_anemometer.c **** 				previous_maximum_pulse_ln = pulse_ln;
 669              		.loc 1 479 0
 670 01b0 BDF80810 		ldrh	r1, [sp, #8]
 671 01b4 89B2     		uxth	r1, r1
 672 01b6 0029     		cmp	r1, #0
 673 01b8 D3D1     		bne	.L34
 480:../system/src/drivers/analog_anemometer.c **** 			}
 674              		.loc 1 480 0
 675 01ba ADF80820 		strh	r2, [sp, #8]	@ movhi
 676 01be D5E7     		b	.L35
 677              	.LVL65:
 678              	.L47:
 487:../system/src/drivers/analog_anemometer.c **** 		}
 488:../system/src/drivers/analog_anemometer.c **** 
 489:../system/src/drivers/analog_anemometer.c **** 	}
 490:../system/src/drivers/analog_anemometer.c **** 
 491:../system/src/drivers/analog_anemometer.c **** 	// calculating the target inter-pulse duration
 492:../system/src/drivers/analog_anemometer.c **** 	rte_wx_windspeed_pulses = (uint16_t)((previous_maximum_pulse_ln + previous_minimum_pulse_ln) / 2);
 679              		.loc 1 492 0
 680 01c0 BDF80820 		ldrh	r2, [sp, #8]
 681 01c4 BDF80C30 		ldrh	r3, [sp, #12]
 682              	.LVL66:
 683 01c8 1344     		add	r3, r3, r2
 684 01ca 5B08     		lsrs	r3, r3, #1
 685 01cc 184A     		ldr	r2, .L49+20
 686 01ce 1380     		strh	r3, [r2]	@ movhi
 493:../system/src/drivers/analog_anemometer.c **** 
 494:../system/src/drivers/analog_anemometer.c **** 	// resetting the timer
 495:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_timer_has_been_fired = 0;
 687              		.loc 1 495 0
 688 01d0 0023     		movs	r3, #0
 689 01d2 144A     		ldr	r2, .L49+8
 690 01d4 1370     		strb	r3, [r2]
 691              	.LVL67:
 496:../system/src/drivers/analog_anemometer.c **** 
 497:../system/src/drivers/analog_anemometer.c **** 	for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N; i++)
 692              		.loc 1 497 0
 693 01d6 04E0     		b	.L37
 694              	.LVL68:
 695              	.L38:
 498:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_windspeed_pulses_time[i] = 0;
 696              		.loc 1 498 0 discriminator 3
 697 01d8 164A     		ldr	r2, .L49+24
 698 01da 0021     		movs	r1, #0
 699 01dc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 497:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_windspeed_pulses_time[i] = 0;
 700              		.loc 1 497 0 discriminator 3
 701 01e0 0133     		adds	r3, r3, #1
 702              	.LVL69:
 703              	.L37:
 497:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_windspeed_pulses_time[i] = 0;
 704              		.loc 1 497 0 is_stmt 0 discriminator 1
 705 01e2 092B     		cmp	r3, #9
 706 01e4 F8DD     		ble	.L38
 499:../system/src/drivers/analog_anemometer.c **** 
 500:../system/src/drivers/analog_anemometer.c **** 	for (i = 0; i < ANALOG_ANEMOMETER_SPEED_PULSES_N; i++)
 707              		.loc 1 500 0 is_stmt 1
 708 01e6 0023     		movs	r3, #0
 709              	.LVL70:
 710 01e8 04E0     		b	.L39
 711              	.LVL71:
 712              	.L40:
 501:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_time_between_pulses[i] = 0;
 713              		.loc 1 501 0 discriminator 3
 714 01ea 144A     		ldr	r2, .L49+32
 715 01ec 0021     		movs	r1, #0
 716 01ee 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 500:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_time_between_pulses[i] = 0;
 717              		.loc 1 500 0 discriminator 3
 718 01f2 0133     		adds	r3, r3, #1
 719              	.LVL72:
 720              	.L39:
 500:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_time_between_pulses[i] = 0;
 721              		.loc 1 500 0 is_stmt 0 discriminator 1
 722 01f4 092B     		cmp	r3, #9
 723 01f6 F8DD     		ble	.L40
 502:../system/src/drivers/analog_anemometer.c **** 
 503:../system/src/drivers/analog_anemometer.c **** 	dma_helper_start_ch7(&DMA_InitStruct);
 724              		.loc 1 503 0 is_stmt 1
 725 01f8 0F48     		ldr	r0, .L49+28
 726 01fa FFF7FEFF 		bl	dma_helper_start_ch7
 727              	.LVL73:
 504:../system/src/drivers/analog_anemometer.c **** 
 505:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 506:../system/src/drivers/analog_anemometer.c **** 	// Stopping timer
 507:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM17, DISABLE);
 728              		.loc 1 507 0
 729 01fe 104C     		ldr	r4, .L49+36
 730 0200 0021     		movs	r1, #0
 731 0202 2046     		mov	r0, r4
 732 0204 FFF7FEFF 		bl	TIM_Cmd
 733              	.LVL74:
 508:../system/src/drivers/analog_anemometer.c **** 
 509:../system/src/drivers/analog_anemometer.c **** 	// Resetting the counter
 510:../system/src/drivers/analog_anemometer.c **** 	TIM_SetCounter(TIM17, 0);
 734              		.loc 1 510 0
 735 0208 0021     		movs	r1, #0
 736 020a 2046     		mov	r0, r4
 737 020c FFF7FEFF 		bl	TIM_SetCounter
 738              	.LVL75:
 511:../system/src/drivers/analog_anemometer.c **** 
 512:../system/src/drivers/analog_anemometer.c **** 	// Enabling counter once again
 513:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM17, ENABLE);
 739              		.loc 1 513 0
 740 0210 0121     		movs	r1, #1
 741 0212 2046     		mov	r0, r4
 742 0214 FFF7FEFF 		bl	TIM_Cmd
 743              	.LVL76:
 744              	.L9:
 514:../system/src/drivers/analog_anemometer.c **** #endif
 515:../system/src/drivers/analog_anemometer.c **** 
 516:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 517:../system/src/drivers/analog_anemometer.c **** 
 518:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_DisableCounter(TIM4);
 519:../system/src/drivers/analog_anemometer.c **** 
 520:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_SetCounter(TIM4, 0);
 521:../system/src/drivers/analog_anemometer.c **** 
 522:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableCounter(TIM4);
 523:../system/src/drivers/analog_anemometer.c **** 
 524:../system/src/drivers/analog_anemometer.c **** #endif
 525:../system/src/drivers/analog_anemometer.c **** 
 526:../system/src/drivers/analog_anemometer.c **** 	return;
 527:../system/src/drivers/analog_anemometer.c **** }
 745              		.loc 1 527 0
 746 0218 05B0     		add	sp, sp, #20
 747              		.cfi_def_cfa_offset 12
 748              		@ sp needed
 749 021a 30BD     		pop	{r4, r5, pc}
 750              	.L50:
 751              		.align	2
 752              	.L49:
 753 021c 00000000 		.word	.LANCHOR5
 754 0220 00000000 		.word	.LANCHOR6
 755 0224 00000000 		.word	.LANCHOR4
 756 0228 00000000 		.word	led_blinking_led2
 757 022c 00100140 		.word	1073811456
 758 0230 00000000 		.word	rte_wx_windspeed_pulses
 759 0234 00000000 		.word	analog_anemometer_windspeed_pulses_time
 760 0238 00000000 		.word	DMA_InitStruct
 761 023c 00000000 		.word	analog_anemometer_time_between_pulses
 762 0240 00480140 		.word	1073825792
 763              		.cfi_endproc
 764              	.LFE108:
 766              		.section	.text.analog_anemometer_get_ms_from_pulse,"ax",%progbits
 767              		.align	1
 768              		.global	analog_anemometer_get_ms_from_pulse
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu softvfp
 774              	analog_anemometer_get_ms_from_pulse:
 775              	.LFB109:
 528:../system/src/drivers/analog_anemometer.c **** 
 529:../system/src/drivers/analog_anemometer.c **** /**
 530:../system/src/drivers/analog_anemometer.c ****  * This functions takes the average time between two pulses expressed as
 531:../system/src/drivers/analog_anemometer.c ****  * a multiplicity of one millisecond (2500 equals two and half of a second)
 532:../system/src/drivers/analog_anemometer.c ****  * and converts it to the windspeed in 0.1 m/s incremenets (4 equals to .4m/s, 18 equals to 1.8m/s)
 533:../system/src/drivers/analog_anemometer.c ****  */
 534:../system/src/drivers/analog_anemometer.c **** uint32_t analog_anemometer_get_ms_from_pulse(uint16_t inter_pulse_time) {
 776              		.loc 1 534 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              		@ link register save eliminated.
 781              	.LVL77:
 535:../system/src/drivers/analog_anemometer.c **** 	uint32_t output = 0;
 536:../system/src/drivers/analog_anemometer.c **** 
 537:../system/src/drivers/analog_anemometer.c **** 	uint32_t scaled_pulses_frequency = 1000000 / (inter_pulse_time * 10);		// *100 from real value
 782              		.loc 1 537 0
 783 0000 00EB8003 		add	r3, r0, r0, lsl #2
 784 0004 5A00     		lsls	r2, r3, #1
 785 0006 064B     		ldr	r3, .L54
 786 0008 93FBF2F3 		sdiv	r3, r3, r2
 787              	.LVL78:
 538:../system/src/drivers/analog_anemometer.c **** 
 539:../system/src/drivers/analog_anemometer.c **** 	if (inter_pulse_time > 5)
 788              		.loc 1 539 0
 789 000c 0528     		cmp	r0, #5
 790 000e 04D9     		bls	.L53
 540:../system/src/drivers/analog_anemometer.c **** 		output = scaled_pulses_frequency / (analog_anemometer_pulses_per_m_s_constant);
 791              		.loc 1 540 0
 792 0010 044A     		ldr	r2, .L54+4
 793 0012 1088     		ldrh	r0, [r2]
 794              	.LVL79:
 795 0014 B3FBF0F0 		udiv	r0, r3, r0
 796              	.LVL80:
 797 0018 7047     		bx	lr
 798              	.LVL81:
 799              	.L53:
 541:../system/src/drivers/analog_anemometer.c **** 	else
 542:../system/src/drivers/analog_anemometer.c **** 		output = 0;
 800              		.loc 1 542 0
 801 001a 0020     		movs	r0, #0
 802              	.LVL82:
 543:../system/src/drivers/analog_anemometer.c **** 
 544:../system/src/drivers/analog_anemometer.c **** 	return output;
 545:../system/src/drivers/analog_anemometer.c **** }
 803              		.loc 1 545 0
 804 001c 7047     		bx	lr
 805              	.L55:
 806 001e 00BF     		.align	2
 807              	.L54:
 808 0020 40420F00 		.word	1000000
 809 0024 00000000 		.word	.LANCHOR0
 810              		.cfi_endproc
 811              	.LFE109:
 813              		.section	.text.analog_anemometer_direction_sparkfun,"ax",%progbits
 814              		.align	1
 815              		.global	analog_anemometer_direction_sparkfun
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 819              		.fpu softvfp
 821              	analog_anemometer_direction_sparkfun:
 822              	.LFB111:
 546:../system/src/drivers/analog_anemometer.c **** 
 547:../system/src/drivers/analog_anemometer.c **** int16_t analog_anemometer_direction_handler(void) {
 548:../system/src/drivers/analog_anemometer.c **** 
 549:../system/src/drivers/analog_anemometer.c **** 	uint16_t downscaled_angle = 0;
 550:../system/src/drivers/analog_anemometer.c **** 
 551:../system/src/drivers/analog_anemometer.c **** 	if (io_get_5v_isol_sw___cntrl_vbat_s() == 0) {
 552:../system/src/drivers/analog_anemometer.c **** 		return rte_wx_winddirection_last;
 553:../system/src/drivers/analog_anemometer.c **** 	}
 554:../system/src/drivers/analog_anemometer.c **** 
 555:../system/src/drivers/analog_anemometer.c **** 
 556:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 557:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM3, DISABLE);
 558:../system/src/drivers/analog_anemometer.c **** 
 559:../system/src/drivers/analog_anemometer.c **** 	// getting current counter value
 560:../system/src/drivers/analog_anemometer.c **** 	uint16_t current_value = TIM_GetCounter(TIM3);
 561:../system/src/drivers/analog_anemometer.c **** 
 562:../system/src/drivers/analog_anemometer.c **** 	// if the counter value is zero it means that probably U/f converter isn't running
 563:../system/src/drivers/analog_anemometer.c **** 	if (current_value == 0) {
 564:../system/src/drivers/analog_anemometer.c **** 		TIM_SetCounter(TIM3, 0);
 565:../system/src/drivers/analog_anemometer.c **** 
 566:../system/src/drivers/analog_anemometer.c **** 		TIM_Cmd(TIM3, ENABLE);
 567:../system/src/drivers/analog_anemometer.c **** 
 568:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_direction_doesnt_work = 1;
 569:../system/src/drivers/analog_anemometer.c **** 
 570:../system/src/drivers/analog_anemometer.c **** 		return rte_wx_winddirection_last;
 571:../system/src/drivers/analog_anemometer.c **** 	}
 572:../system/src/drivers/analog_anemometer.c **** #endif
 573:../system/src/drivers/analog_anemometer.c **** 
 574:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 575:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_DisableCounter(TIM3);
 576:../system/src/drivers/analog_anemometer.c **** 
 577:../system/src/drivers/analog_anemometer.c **** 	// getting current counter value
 578:../system/src/drivers/analog_anemometer.c **** 	volatile uint16_t current_value = LL_TIM_GetCounter(TIM3);//TIM_GetCounter(TIM3);
 579:../system/src/drivers/analog_anemometer.c **** 
 580:../system/src/drivers/analog_anemometer.c **** 	// if the counter value is zero it means that probably U/f converter isn't running
 581:../system/src/drivers/analog_anemometer.c **** 	if (current_value == 0) {
 582:../system/src/drivers/analog_anemometer.c **** 		LL_TIM_SetCounter(TIM3, 0);
 583:../system/src/drivers/analog_anemometer.c **** 
 584:../system/src/drivers/analog_anemometer.c **** 		LL_TIM_EnableCounter(TIM3);
 585:../system/src/drivers/analog_anemometer.c **** 
 586:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_direction_doesnt_work = 1;
 587:../system/src/drivers/analog_anemometer.c **** 
 588:../system/src/drivers/analog_anemometer.c **** 		return rte_wx_winddirection_last;
 589:../system/src/drivers/analog_anemometer.c **** 	}
 590:../system/src/drivers/analog_anemometer.c **** 
 591:../system/src/drivers/analog_anemometer.c **** #endif
 592:../system/src/drivers/analog_anemometer.c **** 
 593:../system/src/drivers/analog_anemometer.c **** 	// update the last
 594:../system/src/drivers/analog_anemometer.c **** 	wx_last_good_wind_time = main_get_master_time();
 595:../system/src/drivers/analog_anemometer.c **** 
 596:../system/src/drivers/analog_anemometer.c **** #ifdef	WIND_DEBUG
 597:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_direction_timer_values[(analog_anemometer_direction_timer_values_it++) % ANALOG_
 598:../system/src/drivers/analog_anemometer.c **** #endif
 599:../system/src/drivers/analog_anemometer.c **** 
 600:../system/src/drivers/analog_anemometer.c **** 	// if the value is greater than maximum one just ignore
 601:../system/src/drivers/analog_anemometer.c **** 	if (current_value > UF_MAXIMUM_FREQUENCY) {
 602:../system/src/drivers/analog_anemometer.c **** 
 603:../system/src/drivers/analog_anemometer.c **** 		// and reinitialize the timer before returning from the function
 604:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer_direction_reset();
 605:../system/src/drivers/analog_anemometer.c **** 
 606:../system/src/drivers/analog_anemometer.c **** 		analog_anemometer__direction_freq_too_high++;
 607:../system/src/drivers/analog_anemometer.c **** 
 608:../system/src/drivers/analog_anemometer.c **** 		return rte_wx_winddirection_last;
 609:../system/src/drivers/analog_anemometer.c **** 	}
 610:../system/src/drivers/analog_anemometer.c **** 
 611:../system/src/drivers/analog_anemometer.c **** 	if (analog_anemometer_direction_mode == DIRECTION_REGULAR) {
 612:../system/src/drivers/analog_anemometer.c **** 		// upscaling by factor of 1000 to omit usage of the floating point arithmetics
 613:../system/src/drivers/analog_anemometer.c **** 		uint32_t upscaled_frequecy = current_value * 100;
 614:../system/src/drivers/analog_anemometer.c **** 
 615:../system/src/drivers/analog_anemometer.c **** 		// calculating the ratio between the current input frequency and the maximum one
 616:../system/src/drivers/analog_anemometer.c **** 		uint16_t ratio_of_upscaled_frequency = upscaled_frequecy / UF_MAXIMUM_FREQUENCY;		// this val is 
 617:../system/src/drivers/analog_anemometer.c **** 
 618:../system/src/drivers/analog_anemometer.c **** 		// converting the upscaled ratio into the upscaled angle
 619:../system/src/drivers/analog_anemometer.c **** 		uint32_t upscaled_angle = ratio_of_upscaled_frequency * 360;			// this val is * 100 from physical
 620:../system/src/drivers/analog_anemometer.c **** 
 621:../system/src/drivers/analog_anemometer.c **** 		// rescaling the angle according to lower and higher limit
 622:../system/src/drivers/analog_anemometer.c **** 		int32_t angle_adjusted_to_real_freq_borders = analog_anemometer_a_coeff *
 623:../system/src/drivers/analog_anemometer.c **** 												upscaled_angle + 1000 * analog_anemometer_b_coeff;
 624:../system/src/drivers/analog_anemometer.c **** 
 625:../system/src/drivers/analog_anemometer.c **** 		if (angle_adjusted_to_real_freq_borders < 0)
 626:../system/src/drivers/analog_anemometer.c **** 			angle_adjusted_to_real_freq_borders = 0;
 627:../system/src/drivers/analog_anemometer.c **** 
 628:../system/src/drivers/analog_anemometer.c **** 		// downscaling the angle
 629:../system/src/drivers/analog_anemometer.c **** 		downscaled_angle = angle_adjusted_to_real_freq_borders / 10000;
 630:../system/src/drivers/analog_anemometer.c **** 
 631:../system/src/drivers/analog_anemometer.c **** 		// adjusting to polarity of the signal
 632:../system/src/drivers/analog_anemometer.c **** 		downscaled_angle *= analog_anemometer_direction_pol;
 633:../system/src/drivers/analog_anemometer.c **** 	}
 634:../system/src/drivers/analog_anemometer.c **** 	else if (analog_anemometer_direction_mode == DIRECTION_SPARKFUN) {
 635:../system/src/drivers/analog_anemometer.c **** 		downscaled_angle = analog_anemometer_direction_sparkfun(current_value);
 636:../system/src/drivers/analog_anemometer.c **** 	}
 637:../system/src/drivers/analog_anemometer.c **** 	else {
 638:../system/src/drivers/analog_anemometer.c **** 		;
 639:../system/src/drivers/analog_anemometer.c **** 	}
 640:../system/src/drivers/analog_anemometer.c **** 
 641:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_last_direction_cnt = 0;
 642:../system/src/drivers/analog_anemometer.c **** 
 643:../system/src/drivers/analog_anemometer.c **** 	rte_wx_winddirection_last = downscaled_angle;
 644:../system/src/drivers/analog_anemometer.c **** 
 645:../system/src/drivers/analog_anemometer.c **** 	// set the led state
 646:../system/src/drivers/analog_anemometer.c **** 	if (rte_wx_winddirection_last > 0 && rte_wx_winddirection_last < 180) {
 647:../system/src/drivers/analog_anemometer.c **** 		led_control_led2_bottom(true);
 648:../system/src/drivers/analog_anemometer.c **** 	}
 649:../system/src/drivers/analog_anemometer.c **** 	else {
 650:../system/src/drivers/analog_anemometer.c **** 		led_control_led2_bottom(false);
 651:../system/src/drivers/analog_anemometer.c **** 	}
 652:../system/src/drivers/analog_anemometer.c **** 
 653:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 654:../system/src/drivers/analog_anemometer.c **** 	TIM_SetCounter(TIM3, 0);
 655:../system/src/drivers/analog_anemometer.c **** 
 656:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM3, ENABLE);
 657:../system/src/drivers/analog_anemometer.c **** #endif
 658:../system/src/drivers/analog_anemometer.c **** 
 659:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 660:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_SetCounter(TIM3, 0);
 661:../system/src/drivers/analog_anemometer.c **** 
 662:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableCounter(TIM3);
 663:../system/src/drivers/analog_anemometer.c **** #endif
 664:../system/src/drivers/analog_anemometer.c **** 
 665:../system/src/drivers/analog_anemometer.c **** 	return downscaled_angle;
 666:../system/src/drivers/analog_anemometer.c **** }
 667:../system/src/drivers/analog_anemometer.c **** 
 668:../system/src/drivers/analog_anemometer.c **** int16_t analog_anemometer_direction_sparkfun(uint32_t timer_value) {
 823              		.loc 1 668 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828              	.LVL83:
 829              	.LBB40:
 669:../system/src/drivers/analog_anemometer.c **** 
 670:../system/src/drivers/analog_anemometer.c **** 	int16_t out = -1;
 671:../system/src/drivers/analog_anemometer.c **** 
 672:../system/src/drivers/analog_anemometer.c **** 	// iterate through table which consist ranges of valid timer counter values
 673:../system/src/drivers/analog_anemometer.c **** 	// for each wind direction
 674:../system/src/drivers/analog_anemometer.c **** 	for (int i = 0; i < 16; i++)  {
 830              		.loc 1 674 0
 831 0000 0023     		movs	r3, #0
 832 0002 00E0     		b	.L57
 833              	.LVL84:
 834              	.L58:
 835              		.loc 1 674 0 is_stmt 0 discriminator 2
 836 0004 0133     		adds	r3, r3, #1
 837              	.LVL85:
 838              	.L57:
 839              		.loc 1 674 0 discriminator 1
 840 0006 0F2B     		cmp	r3, #15
 841 0008 14DC     		bgt	.L61
 675:../system/src/drivers/analog_anemometer.c **** 		if (timer_value >= analog_anemometer_direction_sparkfun_ranges[i][0] &&
 842              		.loc 1 675 0 is_stmt 1
 843 000a 03EB4301 		add	r1, r3, r3, lsl #1
 844 000e 4A00     		lsls	r2, r1, #1
 845 0010 0A49     		ldr	r1, .L62
 846 0012 8A5E     		ldrsh	r2, [r1, r2]
 847 0014 8242     		cmp	r2, r0
 848 0016 F5D8     		bhi	.L58
 676:../system/src/drivers/analog_anemometer.c **** 			timer_value < analog_anemometer_direction_sparkfun_ranges[i][1]	) {
 849              		.loc 1 676 0 discriminator 1
 850 0018 03EB4302 		add	r2, r3, r3, lsl #1
 851 001c 5100     		lsls	r1, r2, #1
 852 001e 074A     		ldr	r2, .L62
 853 0020 0A44     		add	r2, r2, r1
 854 0022 B2F90220 		ldrsh	r2, [r2, #2]
 675:../system/src/drivers/analog_anemometer.c **** 		if (timer_value >= analog_anemometer_direction_sparkfun_ranges[i][0] &&
 855              		.loc 1 675 0 discriminator 1
 856 0026 8242     		cmp	r2, r0
 857 0028 ECD9     		bls	.L58
 677:../system/src/drivers/analog_anemometer.c **** 
 678:../system/src/drivers/analog_anemometer.c **** 			out = analog_anemometer_direction_sparkfun_ranges[i][2];
 858              		.loc 1 678 0
 859 002a 044B     		ldr	r3, .L62
 860              	.LVL86:
 861 002c 0B44     		add	r3, r3, r1
 862 002e B3F90400 		ldrsh	r0, [r3, #4]
 863              	.LVL87:
 679:../system/src/drivers/analog_anemometer.c **** 
 680:../system/src/drivers/analog_anemometer.c **** 			// exit from the loop and then from the function if the angle has been found.
 681:../system/src/drivers/analog_anemometer.c **** 			break;
 864              		.loc 1 681 0
 865 0032 7047     		bx	lr
 866              	.LVL88:
 867              	.L61:
 868              	.LBE40:
 670:../system/src/drivers/analog_anemometer.c **** 
 869              		.loc 1 670 0
 870 0034 4FF0FF30 		mov	r0, #-1
 871              	.LVL89:
 682:../system/src/drivers/analog_anemometer.c **** 		}
 683:../system/src/drivers/analog_anemometer.c **** 	}
 684:../system/src/drivers/analog_anemometer.c **** 
 685:../system/src/drivers/analog_anemometer.c **** 	return out;
 686:../system/src/drivers/analog_anemometer.c **** }
 872              		.loc 1 686 0
 873 0038 7047     		bx	lr
 874              	.L63:
 875 003a 00BF     		.align	2
 876              	.L62:
 877 003c 00000000 		.word	.LANCHOR7
 878              		.cfi_endproc
 879              	.LFE111:
 881              		.section	.text.analog_anemometer_direction_reset,"ax",%progbits
 882              		.align	1
 883              		.global	analog_anemometer_direction_reset
 884              		.syntax unified
 885              		.thumb
 886              		.thumb_func
 887              		.fpu softvfp
 889              	analog_anemometer_direction_reset:
 890              	.LFB112:
 687:../system/src/drivers/analog_anemometer.c **** 
 688:../system/src/drivers/analog_anemometer.c **** void analog_anemometer_direction_reset(void) {
 891              		.loc 1 688 0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895 0000 10B5     		push	{r4, lr}
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 4, -8
 898              		.cfi_offset 14, -4
 689:../system/src/drivers/analog_anemometer.c **** 
 690:../system/src/drivers/analog_anemometer.c **** #ifdef STM32F10X_MD_VL
 691:../system/src/drivers/analog_anemometer.c **** 	// stopping the timer
 692:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM3, DISABLE);
 899              		.loc 1 692 0
 900 0002 074C     		ldr	r4, .L66
 901 0004 0021     		movs	r1, #0
 902 0006 2046     		mov	r0, r4
 903 0008 FFF7FEFF 		bl	TIM_Cmd
 904              	.LVL90:
 693:../system/src/drivers/analog_anemometer.c **** 
 694:../system/src/drivers/analog_anemometer.c **** 	// resetting it
 695:../system/src/drivers/analog_anemometer.c **** 	TIM_SetCounter(TIM3, 0);
 905              		.loc 1 695 0
 906 000c 0021     		movs	r1, #0
 907 000e 2046     		mov	r0, r4
 908 0010 FFF7FEFF 		bl	TIM_SetCounter
 909              	.LVL91:
 696:../system/src/drivers/analog_anemometer.c **** 
 697:../system/src/drivers/analog_anemometer.c **** 	// end then restarting once again
 698:../system/src/drivers/analog_anemometer.c **** 	TIM_Cmd(TIM3, ENABLE);
 910              		.loc 1 698 0
 911 0014 0121     		movs	r1, #1
 912 0016 2046     		mov	r0, r4
 913 0018 FFF7FEFF 		bl	TIM_Cmd
 914              	.LVL92:
 699:../system/src/drivers/analog_anemometer.c **** #endif
 700:../system/src/drivers/analog_anemometer.c **** 
 701:../system/src/drivers/analog_anemometer.c **** #ifdef STM32L471xx
 702:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_DisableCounter(TIM3);
 703:../system/src/drivers/analog_anemometer.c **** 
 704:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_SetCounter(TIM3, 0);
 705:../system/src/drivers/analog_anemometer.c **** 
 706:../system/src/drivers/analog_anemometer.c **** 	LL_TIM_EnableCounter(TIM3);
 707:../system/src/drivers/analog_anemometer.c **** #endif
 708:../system/src/drivers/analog_anemometer.c **** }
 915              		.loc 1 708 0
 916 001c 10BD     		pop	{r4, pc}
 917              	.L67:
 918 001e 00BF     		.align	2
 919              	.L66:
 920 0020 00040040 		.word	1073742848
 921              		.cfi_endproc
 922              	.LFE112:
 924              		.section	.text.analog_anemometer_direction_handler,"ax",%progbits
 925              		.align	1
 926              		.global	analog_anemometer_direction_handler
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu softvfp
 932              	analog_anemometer_direction_handler:
 933              	.LFB110:
 547:../system/src/drivers/analog_anemometer.c **** 
 934              		.loc 1 547 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938 0000 38B5     		push	{r3, r4, r5, lr}
 939              		.cfi_def_cfa_offset 16
 940              		.cfi_offset 3, -16
 941              		.cfi_offset 4, -12
 942              		.cfi_offset 5, -8
 943              		.cfi_offset 14, -4
 944              	.LVL93:
 945              	.LBB41:
 946              	.LBB42:
 947              		.file 4 "../include/io.h"
   1:../include/io.h **** /*
   2:../include/io.h ****  * io.h
   3:../include/io.h ****  *
   4:../include/io.h ****  *  Created on: 11.06.2020
   5:../include/io.h ****  *      Author: mateusz
   6:../include/io.h ****  */
   7:../include/io.h **** 
   8:../include/io.h **** #ifndef IO_H_
   9:../include/io.h **** #define IO_H_
  10:../include/io.h **** 
  11:../include/io.h **** #ifdef STM32F10X_MD_VL
  12:../include/io.h **** #include <stm32f10x.h>
  13:../include/io.h **** #endif
  14:../include/io.h **** #ifdef STM32L471xx
  15:../include/io.h **** #include <stm32l4xx.h>
  16:../include/io.h **** #endif
  17:../include/io.h **** 
  18:../include/io.h **** void io_oc_init(void);
  19:../include/io.h **** void io_oc_output_low(void);
  20:../include/io.h **** void io_oc_output_hiz(void);
  21:../include/io.h **** 
  22:../include/io.h **** void io_ext_watchdog_config(void);
  23:../include/io.h **** void io_ext_watchdog_service(void);
  24:../include/io.h **** 
  25:../include/io.h **** 
  26:../include/io.h **** inline void io_5v_isol_sw___cntrl_vbat_s_enable(void) {
  27:../include/io.h **** 	// ParaMETEO - UC_CNTRL_VS
  28:../include/io.h **** 	GPIOB->BSRR |= GPIO_BSRR_BS8;
  29:../include/io.h **** }
  30:../include/io.h **** inline void io_5v_isol_sw___cntrl_vbat_s_disable(void) {
  31:../include/io.h **** 	// ParaMETEO - UC_CNTRL_VS
  32:../include/io.h **** 	GPIOB->BSRR |= GPIO_BSRR_BR8;
  33:../include/io.h **** }
  34:../include/io.h **** 
  35:../include/io.h **** inline void io_12v_sw___cntrl_vbat_g_enable(void) {
  36:../include/io.h **** 	// ParaMETEO - UC_CNTRL_VG
  37:../include/io.h **** 	GPIOA->BSRR |= GPIO_BSRR_BS6;
  38:../include/io.h **** 
  39:../include/io.h **** }
  40:../include/io.h **** inline void io_12v_sw___cntrl_vbat_g_disable(void) {
  41:../include/io.h **** 	// ParaMETEO - UC_CNTRL_VG
  42:../include/io.h **** 	GPIOA->BSRR |= GPIO_BSRR_BR6;
  43:../include/io.h **** 
  44:../include/io.h **** }
  45:../include/io.h **** 
  46:../include/io.h **** inline uint8_t io_get_5v_isol_sw___cntrl_vbat_s(void) {
  47:../include/io.h **** 	if ((GPIOB->ODR & (1 << 8)) != 0) {
 948              		.loc 4 47 0
 949 0002 4F4B     		ldr	r3, .L89
 950 0004 DB68     		ldr	r3, [r3, #12]
 951 0006 13F4807F 		tst	r3, #256
 952 000a 03D1     		bne	.L83
 953              	.LBE42:
 954              	.LBE41:
 552:../system/src/drivers/analog_anemometer.c **** 	}
 955              		.loc 1 552 0
 956 000c 4D4B     		ldr	r3, .L89+4
 957 000e B3F90000 		ldrsh	r0, [r3]
 958              	.LVL94:
 959              	.L72:
 666:../system/src/drivers/analog_anemometer.c **** 
 960              		.loc 1 666 0
 961 0012 38BD     		pop	{r3, r4, r5, pc}
 962              	.LVL95:
 963              	.L83:
 557:../system/src/drivers/analog_anemometer.c **** 
 964              		.loc 1 557 0
 965 0014 4C4C     		ldr	r4, .L89+8
 966 0016 0021     		movs	r1, #0
 967 0018 2046     		mov	r0, r4
 968 001a FFF7FEFF 		bl	TIM_Cmd
 969              	.LVL96:
 560:../system/src/drivers/analog_anemometer.c **** 
 970              		.loc 1 560 0
 971 001e 2046     		mov	r0, r4
 972 0020 FFF7FEFF 		bl	TIM_GetCounter
 973              	.LVL97:
 563:../system/src/drivers/analog_anemometer.c **** 		TIM_SetCounter(TIM3, 0);
 974              		.loc 1 563 0
 975 0024 0146     		mov	r1, r0
 976 0026 0028     		cmp	r0, #0
 977 0028 3BD0     		beq	.L84
 978              	.LBB43:
 979              	.LBB44:
 980              		.file 5 "../include/main.h"
   1:../include/main.h **** #ifndef MAIN_H_
   2:../include/main.h **** #define MAIN_H_
   3:../include/main.h **** 
   4:../include/main.h **** #include "aprs/ax25.h"
   5:../include/main.h **** #include "drivers/serial.h"
   6:../include/main.h **** #include "config_data.h"
   7:../include/main.h **** 
   8:../include/main.h **** #define SW_VER "EA01"
   9:../include/main.h **** #define SW_DATE "28092021"
  10:../include/main.h **** 
  11:../include/main.h **** #define SYSTICK_TICKS_PER_SECONDS 100
  12:../include/main.h **** #define SYSTICK_TICKS_PERIOD 10
  13:../include/main.h **** 
  14:../include/main.h **** //#define INTERNAL_WATCHDOG
  15:../include/main.h **** #define EXTERNAL_WATCHDOG
  16:../include/main.h **** 
  17:../include/main.h **** #define PWR_SWITCH_BOTH
  18:../include/main.h **** 
  19:../include/main.h **** #define OWN_APRS_MSG_LN 	160
  20:../include/main.h **** 
  21:../include/main.h **** extern uint32_t master_time;
  22:../include/main.h **** 
  23:../include/main.h **** extern const config_data_mode_t * main_config_data_mode;
  24:../include/main.h **** extern const config_data_basic_t * main_config_data_basic;
  25:../include/main.h **** extern const config_data_wx_sources_t * main_config_data_wx_sources;
  26:../include/main.h **** extern const config_data_umb_t * main_config_data_umb;
  27:../include/main.h **** extern const config_data_rtu_t * main_config_data_rtu;
  28:../include/main.h **** 
  29:../include/main.h **** extern int32_t main_wx_sensors_pool_timer;
  30:../include/main.h **** extern int32_t main_one_minute_pool_timer;
  31:../include/main.h **** extern int32_t main_one_second_pool_timer;
  32:../include/main.h **** extern int32_t main_two_second_pool_timer;
  33:../include/main.h **** extern int32_t main_ten_second_pool_timer;
  34:../include/main.h **** 
  35:../include/main.h **** extern AX25Ctx main_ax25;
  36:../include/main.h **** extern Afsk main_afsk;
  37:../include/main.h **** 
  38:../include/main.h **** extern AX25Call main_own_path[3];
  39:../include/main.h **** extern uint8_t main_own_path_ln;
  40:../include/main.h **** extern uint8_t main_own_aprs_msg_len;
  41:../include/main.h **** extern char main_own_aprs_msg[OWN_APRS_MSG_LN];
  42:../include/main.h **** 
  43:../include/main.h **** extern char main_string_latitude[9];
  44:../include/main.h **** extern char main_string_longitude[9];
  45:../include/main.h **** 
  46:../include/main.h **** extern char main_symbol_f;
  47:../include/main.h **** extern char main_symbol_s;
  48:../include/main.h **** 
  49:../include/main.h **** extern srl_context_t* main_kiss_srl_ctx_ptr;
  50:../include/main.h **** extern srl_context_t* main_wx_srl_ctx_ptr;
  51:../include/main.h **** 
  52:../include/main.h **** extern  uint8_t main_kiss_enabled;
  53:../include/main.h **** 
  54:../include/main.h **** extern char after_tx_lock;
  55:../include/main.h **** 
  56:../include/main.h **** extern unsigned short rx10m, tx10m, digi10m, digidrop10m, kiss10m;
  57:../include/main.h **** 
  58:../include/main.h **** uint16_t main_get_adc_sample(void);
  59:../include/main.h **** 
  60:../include/main.h **** void main_service_cpu_load_ticks(void);
  61:../include/main.h **** 
  62:../include/main.h **** inline uint32_t main_get_master_time(void) {
  63:../include/main.h **** 	return master_time;
 981              		.loc 5 63 0
 982 002a 484B     		ldr	r3, .L89+12
 983 002c 1A68     		ldr	r2, [r3]
 984              	.LBE44:
 985              	.LBE43:
 594:../system/src/drivers/analog_anemometer.c **** 
 986              		.loc 1 594 0
 987 002e 484B     		ldr	r3, .L89+16
 988 0030 1A60     		str	r2, [r3]
 597:../system/src/drivers/analog_anemometer.c **** #endif
 989              		.loc 1 597 0
 990 0032 484B     		ldr	r3, .L89+20
 991 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 992 0036 501C     		adds	r0, r2, #1
 993              	.LVL98:
 994 0038 1870     		strb	r0, [r3]
 995 003a 474B     		ldr	r3, .L89+24
 996 003c A3FB0203 		umull	r0, r3, r3, r2
 997 0040 DB08     		lsrs	r3, r3, #3
 998 0042 03EB8303 		add	r3, r3, r3, lsl #2
 999 0046 5800     		lsls	r0, r3, #1
 1000 0048 121A     		subs	r2, r2, r0
 1001 004a D2B2     		uxtb	r2, r2
 1002 004c 434B     		ldr	r3, .L89+28
 1003 004e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 601:../system/src/drivers/analog_anemometer.c **** 
 1004              		.loc 1 601 0
 1005 0052 42F25803 		movw	r3, #8280
 1006 0056 9942     		cmp	r1, r3
 1007 0058 33D8     		bhi	.L85
 611:../system/src/drivers/analog_anemometer.c **** 		// upscaling by factor of 1000 to omit usage of the floating point arithmetics
 1008              		.loc 1 611 0
 1009 005a 414B     		ldr	r3, .L89+32
 1010 005c 93F90030 		ldrsb	r3, [r3]
 1011 0060 012B     		cmp	r3, #1
 1012 0062 38D0     		beq	.L86
 634:../system/src/drivers/analog_anemometer.c **** 		downscaled_angle = analog_anemometer_direction_sparkfun(current_value);
 1013              		.loc 1 634 0
 1014 0064 022B     		cmp	r3, #2
 1015 0066 60D0     		beq	.L87
 549:../system/src/drivers/analog_anemometer.c **** 
 1016              		.loc 1 549 0
 1017 0068 0024     		movs	r4, #0
 1018              	.LVL99:
 1019              	.L76:
 641:../system/src/drivers/analog_anemometer.c **** 
 1020              		.loc 1 641 0
 1021 006a 3E4B     		ldr	r3, .L89+36
 1022 006c 0022     		movs	r2, #0
 1023 006e 1A80     		strh	r2, [r3]	@ movhi
 643:../system/src/drivers/analog_anemometer.c **** 
 1024              		.loc 1 643 0
 1025 0070 344B     		ldr	r3, .L89+4
 1026 0072 1C80     		strh	r4, [r3]	@ movhi
 646:../system/src/drivers/analog_anemometer.c **** 		led_control_led2_bottom(true);
 1027              		.loc 1 646 0
 1028 0074 631E     		subs	r3, r4, #1
 1029 0076 9BB2     		uxth	r3, r3
 1030 0078 B22B     		cmp	r3, #178
 1031 007a 5BD8     		bhi	.L77
 1032              	.LVL100:
 1033              	.LBB45:
 1034              	.LBB46:
  52:../include/LedConfig.h **** 	}
 1035              		.loc 3 52 0
 1036 007c 02F18042 		add	r2, r2, #1073741824
 1037 0080 02F58832 		add	r2, r2, #69632
 1038 0084 1369     		ldr	r3, [r2, #16]
 1039 0086 43F40073 		orr	r3, r3, #512
 1040 008a 1361     		str	r3, [r2, #16]
 1041              	.LVL101:
 1042              	.L78:
 1043              	.LBE46:
 1044              	.LBE45:
 654:../system/src/drivers/analog_anemometer.c **** 
 1045              		.loc 1 654 0
 1046 008c 2E4D     		ldr	r5, .L89+8
 1047 008e 0021     		movs	r1, #0
 1048 0090 2846     		mov	r0, r5
 1049 0092 FFF7FEFF 		bl	TIM_SetCounter
 1050              	.LVL102:
 656:../system/src/drivers/analog_anemometer.c **** #endif
 1051              		.loc 1 656 0
 1052 0096 0121     		movs	r1, #1
 1053 0098 2846     		mov	r0, r5
 1054 009a FFF7FEFF 		bl	TIM_Cmd
 1055              	.LVL103:
 665:../system/src/drivers/analog_anemometer.c **** }
 1056              		.loc 1 665 0
 1057 009e 20B2     		sxth	r0, r4
 1058 00a0 B7E7     		b	.L72
 1059              	.LVL104:
 1060              	.L84:
 564:../system/src/drivers/analog_anemometer.c **** 
 1061              		.loc 1 564 0
 1062 00a2 294C     		ldr	r4, .L89+8
 1063 00a4 0021     		movs	r1, #0
 1064 00a6 2046     		mov	r0, r4
 1065              	.LVL105:
 1066 00a8 FFF7FEFF 		bl	TIM_SetCounter
 1067              	.LVL106:
 566:../system/src/drivers/analog_anemometer.c **** 
 1068              		.loc 1 566 0
 1069 00ac 0121     		movs	r1, #1
 1070 00ae 2046     		mov	r0, r4
 1071 00b0 FFF7FEFF 		bl	TIM_Cmd
 1072              	.LVL107:
 568:../system/src/drivers/analog_anemometer.c **** 
 1073              		.loc 1 568 0
 1074 00b4 2C4B     		ldr	r3, .L89+40
 1075 00b6 0122     		movs	r2, #1
 1076 00b8 1A70     		strb	r2, [r3]
 570:../system/src/drivers/analog_anemometer.c **** 	}
 1077              		.loc 1 570 0
 1078 00ba 224B     		ldr	r3, .L89+4
 1079 00bc B3F90000 		ldrsh	r0, [r3]
 1080 00c0 A7E7     		b	.L72
 1081              	.L85:
 604:../system/src/drivers/analog_anemometer.c **** 
 1082              		.loc 1 604 0
 1083 00c2 FFF7FEFF 		bl	analog_anemometer_direction_reset
 1084              	.LVL108:
 606:../system/src/drivers/analog_anemometer.c **** 
 1085              		.loc 1 606 0
 1086 00c6 294A     		ldr	r2, .L89+44
 1087 00c8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1088 00ca 0133     		adds	r3, r3, #1
 1089 00cc 1370     		strb	r3, [r2]
 608:../system/src/drivers/analog_anemometer.c **** 	}
 1090              		.loc 1 608 0
 1091 00ce 1D4B     		ldr	r3, .L89+4
 1092 00d0 B3F90000 		ldrsh	r0, [r3]
 1093 00d4 9DE7     		b	.L72
 1094              	.L86:
 1095              	.LBB47:
 613:../system/src/drivers/analog_anemometer.c **** 
 1096              		.loc 1 613 0
 1097 00d6 6423     		movs	r3, #100
 1098 00d8 03FB01F3 		mul	r3, r3, r1
 1099              	.LVL109:
 616:../system/src/drivers/analog_anemometer.c **** 
 1100              		.loc 1 616 0
 1101 00dc 2449     		ldr	r1, .L89+48
 1102 00de A1FB0323 		umull	r2, r3, r1, r3
 1103              	.LVL110:
 619:../system/src/drivers/analog_anemometer.c **** 
 1104              		.loc 1 619 0
 1105 00e2 C3F34F33 		ubfx	r3, r3, #13, #16
 1106              	.LVL111:
 1107 00e6 4FF4B471 		mov	r1, #360
 1108 00ea 01FB03F1 		mul	r1, r1, r3
 1109              	.LVL112:
 622:../system/src/drivers/analog_anemometer.c **** 												upscaled_angle + 1000 * analog_anemometer_b_coeff;
 1110              		.loc 1 622 0
 1111 00ee 214B     		ldr	r3, .L89+52
 1112 00f0 B3F90030 		ldrsh	r3, [r3]
 623:../system/src/drivers/analog_anemometer.c **** 
 1113              		.loc 1 623 0
 1114 00f4 204A     		ldr	r2, .L89+56
 1115 00f6 B2F90000 		ldrsh	r0, [r2]
 1116 00fa 4FF47A72 		mov	r2, #1000
 1117 00fe 02FB00F2 		mul	r2, r2, r0
 1118 0102 01FB0323 		mla	r3, r1, r3, r2
 1119              	.LVL113:
 625:../system/src/drivers/analog_anemometer.c **** 			angle_adjusted_to_real_freq_borders = 0;
 1120              		.loc 1 625 0
 1121 0106 002B     		cmp	r3, #0
 1122 0108 0DDB     		blt	.L88
 1123              	.LVL114:
 1124              	.L75:
 629:../system/src/drivers/analog_anemometer.c **** 
 1125              		.loc 1 629 0
 1126 010a 1C4A     		ldr	r2, .L89+60
 1127 010c 82FB0312 		smull	r1, r2, r2, r3
 1128              	.LVL115:
 1129 0110 DB17     		asrs	r3, r3, #31
 1130              	.LVL116:
 1131 0112 C3EB2233 		rsb	r3, r3, r2, asr #12
 1132 0116 9BB2     		uxth	r3, r3
 1133              	.LVL117:
 632:../system/src/drivers/analog_anemometer.c **** 	}
 1134              		.loc 1 632 0
 1135 0118 194A     		ldr	r2, .L89+64
 1136 011a 92F90000 		ldrsb	r0, [r2]
 1137 011e 00FB03F0 		mul	r0, r0, r3
 1138 0122 84B2     		uxth	r4, r0
 1139              	.LVL118:
 1140              	.LBE47:
 1141 0124 A1E7     		b	.L76
 1142              	.LVL119:
 1143              	.L88:
 1144              	.LBB48:
 626:../system/src/drivers/analog_anemometer.c **** 
 1145              		.loc 1 626 0
 1146 0126 0023     		movs	r3, #0
 1147              	.LVL120:
 1148 0128 EFE7     		b	.L75
 1149              	.LVL121:
 1150              	.L87:
 1151              	.LBE48:
 635:../system/src/drivers/analog_anemometer.c **** 	}
 1152              		.loc 1 635 0
 1153 012a 0846     		mov	r0, r1
 1154 012c FFF7FEFF 		bl	analog_anemometer_direction_sparkfun
 1155              	.LVL122:
 1156 0130 84B2     		uxth	r4, r0
 1157              	.LVL123:
 1158 0132 9AE7     		b	.L76
 1159              	.L77:
 1160              	.LVL124:
 1161              	.LBB49:
 1162              	.LBB50:
  55:../include/LedConfig.h **** 	}
 1163              		.loc 3 55 0
 1164 0134 134A     		ldr	r2, .L89+68
 1165 0136 1369     		ldr	r3, [r2, #16]
 1166 0138 43F00073 		orr	r3, r3, #33554432
 1167 013c 1361     		str	r3, [r2, #16]
 1168 013e A5E7     		b	.L78
 1169              	.L90:
 1170              		.align	2
 1171              	.L89:
 1172 0140 000C0140 		.word	1073810432
 1173 0144 00000000 		.word	rte_wx_winddirection_last
 1174 0148 00040040 		.word	1073742848
 1175 014c 00000000 		.word	master_time
 1176 0150 00000000 		.word	wx_last_good_wind_time
 1177 0154 00000000 		.word	.LANCHOR9
 1178 0158 CDCCCCCC 		.word	-858993459
 1179 015c 00000000 		.word	analog_anemometer_direction_timer_values
 1180 0160 00000000 		.word	.LANCHOR11
 1181 0164 00000000 		.word	.LANCHOR12
 1182 0168 00000000 		.word	.LANCHOR8
 1183 016c 00000000 		.word	.LANCHOR10
 1184 0170 6D7B47FD 		.word	-45646995
 1185 0174 00000000 		.word	.LANCHOR1
 1186 0178 00000000 		.word	.LANCHOR2
 1187 017c AD8BDB68 		.word	1759218605
 1188 0180 00000000 		.word	.LANCHOR3
 1189 0184 00100140 		.word	1073811456
 1190              	.LBE50:
 1191              	.LBE49:
 1192              		.cfi_endproc
 1193              	.LFE110:
 1195              		.section	.text.analog_anemometer_get_qf,"ax",%progbits
 1196              		.align	1
 1197              		.global	analog_anemometer_get_qf
 1198              		.syntax unified
 1199              		.thumb
 1200              		.thumb_func
 1201              		.fpu softvfp
 1203              	analog_anemometer_get_qf:
 1204              	.LFB113:
 709:../system/src/drivers/analog_anemometer.c **** 
 710:../system/src/drivers/analog_anemometer.c **** analog_wind_qf_t analog_anemometer_get_qf(void) {
 1205              		.loc 1 710 0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209              		@ link register save eliminated.
 711:../system/src/drivers/analog_anemometer.c **** 
 712:../system/src/drivers/analog_anemometer.c **** 	analog_wind_qf_t out;
 713:../system/src/drivers/analog_anemometer.c **** 
 714:../system/src/drivers/analog_anemometer.c **** 	if (
 715:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 1210              		.loc 1 715 0
 1211 0000 234B     		ldr	r3, .L107
 1212 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 714:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 1213              		.loc 1 714 0
 1214 0004 33B9     		cbnz	r3, .L92
 716:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 1215              		.loc 1 716 0
 1216 0006 234A     		ldr	r2, .L107+4
 1217 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 715:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 1218              		.loc 1 715 0
 1219 000a 1AB9     		cbnz	r2, .L92
 717:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1220              		.loc 1 717 0
 1221 000c 224A     		ldr	r2, .L107+8
 1222 000e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 716:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 1223              		.loc 1 716 0
 1224 0010 002A     		cmp	r2, #0
 1225 0012 35D0     		beq	.L97
 1226              	.L92:
 718:../system/src/drivers/analog_anemometer.c **** 			)
 719:../system/src/drivers/analog_anemometer.c **** 	{
 720:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_FULL;
 721:../system/src/drivers/analog_anemometer.c **** 	}
 722:../system/src/drivers/analog_anemometer.c **** 	else if (
 1227              		.loc 1 722 0
 1228 0014 012B     		cmp	r3, #1
 1229 0016 19D0     		beq	.L104
 1230              	.L94:
 723:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 1 &&
 724:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 725:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 726:../system/src/drivers/analog_anemometer.c **** 			)
 727:../system/src/drivers/analog_anemometer.c **** 	{
 728:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_DEGRADED_SLEW;
 729:../system/src/drivers/analog_anemometer.c **** 	}
 730:../system/src/drivers/analog_anemometer.c **** 	else if (
 1231              		.loc 1 730 0
 1232 0018 1BB9     		cbnz	r3, .L95
 731:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 732:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 1 &&
 1233              		.loc 1 732 0
 1234 001a 1E4A     		ldr	r2, .L107+4
 1235 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 731:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 1236              		.loc 1 731 0
 1237 001e 012A     		cmp	r2, #1
 1238 0020 1ED0     		beq	.L105
 1239              	.L95:
 733:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 734:../system/src/drivers/analog_anemometer.c **** 			)
 735:../system/src/drivers/analog_anemometer.c **** 	{
 736:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_DEGRADED_DEBOUNCE;
 737:../system/src/drivers/analog_anemometer.c **** 
 738:../system/src/drivers/analog_anemometer.c **** 	}
 739:../system/src/drivers/analog_anemometer.c **** 	else if (
 1240              		.loc 1 739 0
 1241 0022 012B     		cmp	r3, #1
 1242 0024 22D0     		beq	.L106
 1243              	.L96:
 740:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 1 &&
 741:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 1 &&
 742:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 743:../system/src/drivers/analog_anemometer.c **** 			)
 744:../system/src/drivers/analog_anemometer.c **** 	{
 745:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_DEGRADED;
 746:../system/src/drivers/analog_anemometer.c **** 
 747:../system/src/drivers/analog_anemometer.c **** 	}
 748:../system/src/drivers/analog_anemometer.c **** 	else if (
 1244              		.loc 1 748 0
 1245 0026 002B     		cmp	r3, #0
 1246 0028 2CD1     		bne	.L101
 749:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 750:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 1247              		.loc 1 750 0
 1248 002a 1A4B     		ldr	r3, .L107+4
 1249 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 749:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_slew_limit_fired == 0 &&
 1250              		.loc 1 749 0
 1251 002e 002B     		cmp	r3, #0
 1252 0030 2AD1     		bne	.L102
 751:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 1
 1253              		.loc 1 751 0
 1254 0032 194B     		ldr	r3, .L107+8
 1255 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 750:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 1
 1256              		.loc 1 750 0
 1257 0036 012B     		cmp	r3, #1
 1258 0038 28D0     		beq	.L103
 752:../system/src/drivers/analog_anemometer.c **** 			)
 753:../system/src/drivers/analog_anemometer.c **** 	{
 754:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_NOT_AVALIABLE;
 755:../system/src/drivers/analog_anemometer.c **** 
 756:../system/src/drivers/analog_anemometer.c **** 	}
 757:../system/src/drivers/analog_anemometer.c **** 	else {
 758:../system/src/drivers/analog_anemometer.c **** 		out = AN_WIND_QF_UNKNOWN;
 1259              		.loc 1 758 0
 1260 003a 0520     		movs	r0, #5
 1261              	.L93:
 1262              	.LVL125:
 759:../system/src/drivers/analog_anemometer.c **** 
 760:../system/src/drivers/analog_anemometer.c **** 	}
 761:../system/src/drivers/analog_anemometer.c **** 
 762:../system/src/drivers/analog_anemometer.c **** 	// reseting flags
 763:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_slew_limit_fired = 0;
 1263              		.loc 1 763 0
 1264 003c 0023     		movs	r3, #0
 1265 003e 144A     		ldr	r2, .L107
 1266 0040 1370     		strb	r3, [r2]
 764:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_deboucing_fired = 0;
 1267              		.loc 1 764 0
 1268 0042 144A     		ldr	r2, .L107+4
 1269 0044 1370     		strb	r3, [r2]
 765:../system/src/drivers/analog_anemometer.c **** 	analog_anemometer_direction_doesnt_work = 0;
 1270              		.loc 1 765 0
 1271 0046 144A     		ldr	r2, .L107+8
 1272 0048 1370     		strb	r3, [r2]
 766:../system/src/drivers/analog_anemometer.c **** 
 767:../system/src/drivers/analog_anemometer.c **** 	return out;
 768:../system/src/drivers/analog_anemometer.c **** 
 769:../system/src/drivers/analog_anemometer.c **** }
 1273              		.loc 1 769 0
 1274 004a 7047     		bx	lr
 1275              	.LVL126:
 1276              	.L104:
 724:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1277              		.loc 1 724 0
 1278 004c 114A     		ldr	r2, .L107+4
 1279 004e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 723:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 0 &&
 1280              		.loc 1 723 0
 1281 0050 002A     		cmp	r2, #0
 1282 0052 E1D1     		bne	.L94
 725:../system/src/drivers/analog_anemometer.c **** 			)
 1283              		.loc 1 725 0
 1284 0054 104A     		ldr	r2, .L107+8
 1285 0056 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 724:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1286              		.loc 1 724 0
 1287 0058 002A     		cmp	r2, #0
 1288 005a DDD1     		bne	.L94
 728:../system/src/drivers/analog_anemometer.c **** 	}
 1289              		.loc 1 728 0
 1290 005c 0220     		movs	r0, #2
 1291 005e EDE7     		b	.L93
 1292              	.L105:
 733:../system/src/drivers/analog_anemometer.c **** 			)
 1293              		.loc 1 733 0
 1294 0060 0D4A     		ldr	r2, .L107+8
 1295 0062 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 732:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1296              		.loc 1 732 0
 1297 0064 002A     		cmp	r2, #0
 1298 0066 DCD1     		bne	.L95
 736:../system/src/drivers/analog_anemometer.c **** 
 1299              		.loc 1 736 0
 1300 0068 0120     		movs	r0, #1
 1301 006a E7E7     		b	.L93
 1302              	.L106:
 741:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1303              		.loc 1 741 0
 1304 006c 094A     		ldr	r2, .L107+4
 1305 006e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 740:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_deboucing_fired == 1 &&
 1306              		.loc 1 740 0
 1307 0070 012A     		cmp	r2, #1
 1308 0072 D8D1     		bne	.L96
 742:../system/src/drivers/analog_anemometer.c **** 			)
 1309              		.loc 1 742 0
 1310 0074 084A     		ldr	r2, .L107+8
 1311 0076 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 741:../system/src/drivers/analog_anemometer.c **** 			analog_anemometer_direction_doesnt_work == 0
 1312              		.loc 1 741 0
 1313 0078 002A     		cmp	r2, #0
 1314 007a D4D1     		bne	.L96
 745:../system/src/drivers/analog_anemometer.c **** 
 1315              		.loc 1 745 0
 1316 007c 0320     		movs	r0, #3
 1317 007e DDE7     		b	.L93
 1318              	.L97:
 720:../system/src/drivers/analog_anemometer.c **** 	}
 1319              		.loc 1 720 0
 1320 0080 0020     		movs	r0, #0
 1321 0082 DBE7     		b	.L93
 1322              	.L101:
 758:../system/src/drivers/analog_anemometer.c **** 
 1323              		.loc 1 758 0
 1324 0084 0520     		movs	r0, #5
 1325 0086 D9E7     		b	.L93
 1326              	.L102:
 1327 0088 0520     		movs	r0, #5
 1328 008a D7E7     		b	.L93
 1329              	.L103:
 754:../system/src/drivers/analog_anemometer.c **** 
 1330              		.loc 1 754 0
 1331 008c 0420     		movs	r0, #4
 1332 008e D5E7     		b	.L93
 1333              	.L108:
 1334              		.align	2
 1335              	.L107:
 1336 0090 00000000 		.word	.LANCHOR5
 1337 0094 00000000 		.word	.LANCHOR6
 1338 0098 00000000 		.word	.LANCHOR8
 1339              		.cfi_endproc
 1340              	.LFE113:
 1342              		.global	analog_anemometer_direction_sparkfun_ranges
 1343              		.global	analog_anemometer_direction_mode
 1344              		.global	analog_anemometer__direction_freq_too_high
 1345              		.global	analog_anemometer_last_direction_cnt
 1346              		.global	analog_anemometer_direction_pol
 1347              		.global	analog_anemometer_a_coeff
 1348              		.global	analog_anemometer_b_coeff
 1349              		.global	analog_anemometer_direction
 1350              		.global	analog_anemometer_direction_doesnt_work
 1351              		.global	analog_anemometer_deboucing_fired
 1352              		.global	analog_anemometer_slew_limit_fired
 1353              		.global	analog_anemometer_timer_has_been_fired
 1354              		.global	analog_anemometer_pulses_per_m_s_constant
 1355              		.global	analog_anemometer_direction_timer_values_it
 1356              		.comm	analog_anemometer_direction_timer_values,20,4
 1357              		.comm	analog_anemometer_time_between_pulses,20,4
 1358              		.comm	analog_anemometer_windspeed_pulses_time,20,4
 1359              		.comm	DMA_InitStruct,44,4
 1360              		.section	.bss.analog_anemometer__direction_freq_too_high,"aw",%nobits
 1361              		.set	.LANCHOR10,. + 0
 1364              	analog_anemometer__direction_freq_too_high:
 1365 0000 00       		.space	1
 1366              		.section	.bss.analog_anemometer_deboucing_fired,"aw",%nobits
 1367              		.set	.LANCHOR6,. + 0
 1370              	analog_anemometer_deboucing_fired:
 1371 0000 00       		.space	1
 1372              		.section	.bss.analog_anemometer_direction,"aw",%nobits
 1373              		.align	1
 1376              	analog_anemometer_direction:
 1377 0000 0000     		.space	2
 1378              		.section	.bss.analog_anemometer_direction_doesnt_work,"aw",%nobits
 1379              		.set	.LANCHOR8,. + 0
 1382              	analog_anemometer_direction_doesnt_work:
 1383 0000 00       		.space	1
 1384              		.section	.bss.analog_anemometer_direction_timer_values_it,"aw",%nobits
 1385              		.set	.LANCHOR9,. + 0
 1388              	analog_anemometer_direction_timer_values_it:
 1389 0000 00       		.space	1
 1390              		.section	.bss.analog_anemometer_last_direction_cnt,"aw",%nobits
 1391              		.align	1
 1392              		.set	.LANCHOR12,. + 0
 1395              	analog_anemometer_last_direction_cnt:
 1396 0000 0000     		.space	2
 1397              		.section	.bss.analog_anemometer_pulses_per_m_s_constant,"aw",%nobits
 1398              		.align	1
 1399              		.set	.LANCHOR0,. + 0
 1402              	analog_anemometer_pulses_per_m_s_constant:
 1403 0000 0000     		.space	2
 1404              		.section	.bss.analog_anemometer_slew_limit_fired,"aw",%nobits
 1405              		.set	.LANCHOR5,. + 0
 1408              	analog_anemometer_slew_limit_fired:
 1409 0000 00       		.space	1
 1410              		.section	.bss.analog_anemometer_timer_has_been_fired,"aw",%nobits
 1411              		.set	.LANCHOR4,. + 0
 1414              	analog_anemometer_timer_has_been_fired:
 1415 0000 00       		.space	1
 1416              		.section	.data.analog_anemometer_a_coeff,"aw",%progbits
 1417              		.align	1
 1418              		.set	.LANCHOR1,. + 0
 1421              	analog_anemometer_a_coeff:
 1422 0000 0A00     		.short	10
 1423              		.section	.data.analog_anemometer_b_coeff,"aw",%progbits
 1424              		.align	1
 1425              		.set	.LANCHOR2,. + 0
 1428              	analog_anemometer_b_coeff:
 1429 0000 6400     		.short	100
 1430              		.section	.data.analog_anemometer_direction_mode,"aw",%progbits
 1431              		.set	.LANCHOR11,. + 0
 1434              	analog_anemometer_direction_mode:
 1435 0000 01       		.byte	1
 1436              		.section	.data.analog_anemometer_direction_pol,"aw",%progbits
 1437              		.set	.LANCHOR3,. + 0
 1440              	analog_anemometer_direction_pol:
 1441 0000 01       		.byte	1
 1442              		.section	.rodata.analog_anemometer_direction_sparkfun_ranges,"a",%progbits
 1443              		.align	2
 1444              		.set	.LANCHOR7,. + 0
 1447              	analog_anemometer_direction_sparkfun_ranges:
 1448 0000 B20F     		.short	4018
 1449 0002 1010     		.short	4112
 1450 0004 7000     		.short	112
 1451 0006 1010     		.short	4112
 1452 0008 5610     		.short	4182
 1453 000a 4300     		.short	67
 1454 000c 5610     		.short	4182
 1455 000e C810     		.short	4296
 1456 0010 5A00     		.short	90
 1457 0012 C810     		.short	4296
 1458 0014 B911     		.short	4537
 1459 0016 9D00     		.short	157
 1460 0018 B911     		.short	4537
 1461 001a E812     		.short	4840
 1462 001c 8700     		.short	135
 1463 001e E812     		.short	4840
 1464 0020 F313     		.short	5107
 1465 0022 CA00     		.short	202
 1466 0024 F313     		.short	5107
 1467 0026 9915     		.short	5529
 1468 0028 B400     		.short	180
 1469 002a 9915     		.short	5529
 1470 002c 5E17     		.short	5982
 1471 002e 1600     		.short	22
 1472 0030 5E17     		.short	5982
 1473 0032 5A19     		.short	6490
 1474 0034 2D00     		.short	45
 1475 0036 5A19     		.short	6490
 1476 0038 171B     		.short	6935
 1477 003a F700     		.short	247
 1478 003c 171B     		.short	6935
 1479 003e 211C     		.short	7201
 1480 0040 E100     		.short	225
 1481 0042 211C     		.short	7201
 1482 0044 B71D     		.short	7607
 1483 0046 5101     		.short	337
 1484 0048 B71D     		.short	7607
 1485 004a FC1E     		.short	7932
 1486 004c 0000     		.short	0
 1487 004e FC1E     		.short	7932
 1488 0050 9D20     		.short	8349
 1489 0052 2401     		.short	292
 1490 0054 9D20     		.short	8349
 1491 0056 2A22     		.short	8746
 1492 0058 0E01     		.short	270
 1493 005a 2A22     		.short	8746
 1494 005c 3C24     		.short	9276
 1495 005e 3B01     		.short	315
 1496              		.text
 1497              	.Letext0:
 1498              		.file 6 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 1499              		.file 7 "../system/include/drivers/analog_anemometer.h"
 1500              		.file 8 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1501              		.file 9 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1502              		.file 10 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/st
 1503              		.file 11 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1504              		.file 12 "../system/include/cmsis/stm32f10x.h"
 1505              		.file 13 "../system/include/cmsis/system_stm32f10x.h"
 1506              		.file 14 "../system/include/stm32f1-stdperiph/stm32f10x_tim.h"
 1507              		.file 15 "../system/include/stm32f1-stdperiph/stm32f10x_dma.h"
 1508              		.file 16 "../system/include/drivers/dallas.h"
 1509              		.file 17 "../system/include/davis_vantage/davis_loop_t.h"
 1510              		.file 18 "../system/include/umb_master/umb_frame_t.h"
 1511              		.file 19 "../system/include/umb_master/umb_state_t.h"
 1512              		.file 20 "../system/include/drivers/serial.h"
 1513              		.file 21 "../system/include/umb_master/umb_context_t.h"
 1514              		.file 22 "../system/include/umb_master/umb_qf_t.h"
 1515              		.file 23 "../include/config_data.h"
 1516              		.file 24 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 1517              		.file 25 "../system/include/drivers/ms5611.h"
 1518              		.file 26 "../system/include/drivers/bme280.h"
 1519              		.file 27 "../include/rte_wx.h"
 1520              		.file 28 "../system/include/aprs/cfifo.h"
 1521              		.file 29 "../system/include/aprs/afsk.h"
 1522              		.file 30 "../system/include/aprs/ax25.h"
 1523              		.file 31 "../include/wx_handler.h"
 1524              		.file 32 "../system/include/drivers/dma_helper_functions.h"
 1525              		.file 33 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/string.h"
 1526              		.file 34 "../system/include/drivers/f1/gpio_conf_stm32f1x.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 analog_anemometer.c
     /tmp/cc2JewjE.s:16     .text.analog_anemometer_init:0000000000000000 $t
     /tmp/cc2JewjE.s:23     .text.analog_anemometer_init:0000000000000000 analog_anemometer_init
     /tmp/cc2JewjE.s:252    .text.analog_anemometer_init:0000000000000158 $d
                            *COM*:0000000000000014 analog_anemometer_windspeed_pulses_time
                            *COM*:0000000000000014 analog_anemometer_time_between_pulses
                            *COM*:0000000000000014 analog_anemometer_direction_timer_values
                            *COM*:000000000000002c DMA_InitStruct
     /tmp/cc2JewjE.s:277    .text.analog_anemometer_deinit:0000000000000000 $t
     /tmp/cc2JewjE.s:284    .text.analog_anemometer_deinit:0000000000000000 analog_anemometer_deinit
     /tmp/cc2JewjE.s:297    .text.analog_anemometer_timer_irq:0000000000000000 $t
     /tmp/cc2JewjE.s:304    .text.analog_anemometer_timer_irq:0000000000000000 analog_anemometer_timer_irq
     /tmp/cc2JewjE.s:320    .text.analog_anemometer_timer_irq:0000000000000008 $d
     /tmp/cc2JewjE.s:325    .text.analog_anemometer_dma_irq:0000000000000000 $t
     /tmp/cc2JewjE.s:332    .text.analog_anemometer_dma_irq:0000000000000000 analog_anemometer_dma_irq
     /tmp/cc2JewjE.s:753    .text.analog_anemometer_dma_irq:000000000000021c $d
     /tmp/cc2JewjE.s:767    .text.analog_anemometer_get_ms_from_pulse:0000000000000000 $t
     /tmp/cc2JewjE.s:774    .text.analog_anemometer_get_ms_from_pulse:0000000000000000 analog_anemometer_get_ms_from_pulse
     /tmp/cc2JewjE.s:808    .text.analog_anemometer_get_ms_from_pulse:0000000000000020 $d
     /tmp/cc2JewjE.s:814    .text.analog_anemometer_direction_sparkfun:0000000000000000 $t
     /tmp/cc2JewjE.s:821    .text.analog_anemometer_direction_sparkfun:0000000000000000 analog_anemometer_direction_sparkfun
     /tmp/cc2JewjE.s:877    .text.analog_anemometer_direction_sparkfun:000000000000003c $d
     /tmp/cc2JewjE.s:882    .text.analog_anemometer_direction_reset:0000000000000000 $t
     /tmp/cc2JewjE.s:889    .text.analog_anemometer_direction_reset:0000000000000000 analog_anemometer_direction_reset
     /tmp/cc2JewjE.s:920    .text.analog_anemometer_direction_reset:0000000000000020 $d
     /tmp/cc2JewjE.s:925    .text.analog_anemometer_direction_handler:0000000000000000 $t
     /tmp/cc2JewjE.s:932    .text.analog_anemometer_direction_handler:0000000000000000 analog_anemometer_direction_handler
     /tmp/cc2JewjE.s:1172   .text.analog_anemometer_direction_handler:0000000000000140 $d
     /tmp/cc2JewjE.s:1196   .text.analog_anemometer_get_qf:0000000000000000 $t
     /tmp/cc2JewjE.s:1203   .text.analog_anemometer_get_qf:0000000000000000 analog_anemometer_get_qf
     /tmp/cc2JewjE.s:1336   .text.analog_anemometer_get_qf:0000000000000090 $d
     /tmp/cc2JewjE.s:1447   .rodata.analog_anemometer_direction_sparkfun_ranges:0000000000000000 analog_anemometer_direction_sparkfun_ranges
     /tmp/cc2JewjE.s:1434   .data.analog_anemometer_direction_mode:0000000000000000 analog_anemometer_direction_mode
     /tmp/cc2JewjE.s:1364   .bss.analog_anemometer__direction_freq_too_high:0000000000000000 analog_anemometer__direction_freq_too_high
     /tmp/cc2JewjE.s:1395   .bss.analog_anemometer_last_direction_cnt:0000000000000000 analog_anemometer_last_direction_cnt
     /tmp/cc2JewjE.s:1440   .data.analog_anemometer_direction_pol:0000000000000000 analog_anemometer_direction_pol
     /tmp/cc2JewjE.s:1421   .data.analog_anemometer_a_coeff:0000000000000000 analog_anemometer_a_coeff
     /tmp/cc2JewjE.s:1428   .data.analog_anemometer_b_coeff:0000000000000000 analog_anemometer_b_coeff
     /tmp/cc2JewjE.s:1376   .bss.analog_anemometer_direction:0000000000000000 analog_anemometer_direction
     /tmp/cc2JewjE.s:1382   .bss.analog_anemometer_direction_doesnt_work:0000000000000000 analog_anemometer_direction_doesnt_work
     /tmp/cc2JewjE.s:1370   .bss.analog_anemometer_deboucing_fired:0000000000000000 analog_anemometer_deboucing_fired
     /tmp/cc2JewjE.s:1408   .bss.analog_anemometer_slew_limit_fired:0000000000000000 analog_anemometer_slew_limit_fired
     /tmp/cc2JewjE.s:1414   .bss.analog_anemometer_timer_has_been_fired:0000000000000000 analog_anemometer_timer_has_been_fired
     /tmp/cc2JewjE.s:1402   .bss.analog_anemometer_pulses_per_m_s_constant:0000000000000000 analog_anemometer_pulses_per_m_s_constant
     /tmp/cc2JewjE.s:1388   .bss.analog_anemometer_direction_timer_values_it:0000000000000000 analog_anemometer_direction_timer_values_it
     /tmp/cc2JewjE.s:1365   .bss.analog_anemometer__direction_freq_too_high:0000000000000000 $d
     /tmp/cc2JewjE.s:1371   .bss.analog_anemometer_deboucing_fired:0000000000000000 $d
     /tmp/cc2JewjE.s:1373   .bss.analog_anemometer_direction:0000000000000000 $d
     /tmp/cc2JewjE.s:1383   .bss.analog_anemometer_direction_doesnt_work:0000000000000000 $d
     /tmp/cc2JewjE.s:1389   .bss.analog_anemometer_direction_timer_values_it:0000000000000000 $d
     /tmp/cc2JewjE.s:1391   .bss.analog_anemometer_last_direction_cnt:0000000000000000 $d
     /tmp/cc2JewjE.s:1398   .bss.analog_anemometer_pulses_per_m_s_constant:0000000000000000 $d
     /tmp/cc2JewjE.s:1409   .bss.analog_anemometer_slew_limit_fired:0000000000000000 $d
     /tmp/cc2JewjE.s:1415   .bss.analog_anemometer_timer_has_been_fired:0000000000000000 $d
     /tmp/cc2JewjE.s:1417   .data.analog_anemometer_a_coeff:0000000000000000 $d
     /tmp/cc2JewjE.s:1424   .data.analog_anemometer_b_coeff:0000000000000000 $d
     /tmp/cc2JewjE.s:1443   .rodata.analog_anemometer_direction_sparkfun_ranges:0000000000000000 $d
                           .group:0000000000000000 wm4.0.879aed89c359f5856fe69c61b3590d34
                           .group:0000000000000000 wm4.station_config.h.9.39d8e1c3ae8d42c39bc1698d9fb88942
                           .group:0000000000000000 wm4.analog_anemometer.h.9.430158203b91afa161b428bcf6db9b27
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.analog_anemometer.h.24.21280651ebc1262cc199fde93c45eb95
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.newlib.h.18.5e5ca3429233af402d406a202f1fc1ac
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.cdefs.h.47.0bcdf94cb40e176393dd1404056825b4
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.stm32f10x.h.51.c58ea26c5150470d52680f0bbaa7049c
                           .group:0000000000000000 wm4.core_cm3.h.42.c33bb1302bf53de0580fb6140a46f2eb
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.183.ecfd9c316d6f10b73648f6e579b02c8b
                           .group:0000000000000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:0000000000000000 wm4.stm32f10x_can.h.25.e5e43f6bbc8fc7c8aa30ef2bc5610ced
                           .group:0000000000000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:0000000000000000 wm4.stm32f10x_dac.h.25.d946244edf026333094657d55ea894b8
                           .group:0000000000000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:0000000000000000 wm4.stm32f10x_exti.h.25.f52c69aad7d1994be5b2c4e2b8f4c595
                           .group:0000000000000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:0000000000000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.25.b124ac2c620f8ebddd92b6d95ca62176
                           .group:0000000000000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:0000000000000000 wm4.stm32f10x_sdio.h.25.fb0db079f5c1412c40f359319f7c40b0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.25.3f6dfa4abe177efb3c6f5a717c06b323
                           .group:0000000000000000 wm4.stm32f10x_tim.h.25.f709106ba77b314e6b070693f89f3c56
                           .group:0000000000000000 wm4.stm32f10x_usart.h.25.2e65e396239d0cc41fd0bf6faa2a32cb
                           .group:0000000000000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:0000000000000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:0000000000000000 wm4.stm32f10x.h.8317.9a8e476d96d33bb2df9a9ad0775bd4a7
                           .group:0000000000000000 wm4.stm32f10x_dma.h.95.3ba03f0eac1ed728f3bbe553623f105a
                           .group:0000000000000000 wm4.dallas.h.9.67a8cfc0b128d7b4f1ab07251516b59e
                           .group:0000000000000000 wm4.umb_frame_t.h.9.05796095a57acd1575f07118cb6ab058
                           .group:0000000000000000 wm4.umb_defines.h.9.77e79b84cd2dd9a74204aaeb1ca9d6be
                           .group:0000000000000000 wm4.serial.h.2.a574250aaf0d4f0a93b2db72031afff6
                           .group:0000000000000000 wm4.config_data.h.9.cbb5077079a900a357fa92ca07074f04
                           .group:0000000000000000 wm4.math.h.13.adb102f7bd7860b1f241e149d6914a1e
                           .group:0000000000000000 wm4.ms5611.h.13.84fbf6afa85557f675e3d85f1be6067c
                           .group:0000000000000000 wm4.bme280.h.9.aefe05f9329372f30337537cea488dce
                           .group:0000000000000000 wm4.rte_wx.h.30.cb80bd87f9fae81b43459954f1781e96
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.macros.h.2.7a7a5ac48d4160b7481c806e80b68442
                           .group:0000000000000000 wm4.config.h.2.f5e96167cb26b0ce97c5e7513a95bc8b
                           .group:0000000000000000 wm4.afsk.h.17.cf8f922069680e152e1eddb76cd4cc82
                           .group:0000000000000000 wm4.ax25.h.18.077e42a4af9016476e34900472a8fe18
                           .group:0000000000000000 wm4.main.h.8.55d65ee492038dbe94ebf355bcb87510
                           .group:0000000000000000 wm4.wx_handler.h.9.c93580273a56e0f9036dfe7a28400494
                           .group:0000000000000000 wm4.LedConfig.h.9.4d8a7e6bb86dda658c789f8aaf01aaee
                           .group:0000000000000000 wm4.gpio_conf_stm32f1x.h.2.27cf130122f64ee972f9a45626090ff6

UNDEFINED SYMBOLS
memset
Configure_GPIO
TIM_DeInit
TIM_TimeBaseStructInit
TIM_TimeBaseInit
TIM_TIxExternalClockConfig
TIM_Cmd
TIM_DMACmd
TIM_ITConfig
DMA_StructInit
DMA_DeInit
dma_helper_start_ch7
TIM_ETRClockMode2Config
TIM_SetCounter
led_blinking_led2
rte_wx_windspeed_pulses
TIM_GetCounter
rte_wx_winddirection_last
master_time
wx_last_good_wind_time
