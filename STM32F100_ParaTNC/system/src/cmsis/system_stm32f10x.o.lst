   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32f10x.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SetSysClockTo24,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SetSysClockTo24:
  23              	.LFB66:
  24              		.file 1 "../system/src/cmsis/system_stm32f10x.c"
   1:../system/src/cmsis/system_stm32f10x.c **** /**
   2:../system/src/cmsis/system_stm32f10x.c ****   ******************************************************************************
   3:../system/src/cmsis/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:../system/src/cmsis/system_stm32f10x.c ****   * @author  MCD Application Team
   5:../system/src/cmsis/system_stm32f10x.c ****   * @version V3.5.0
   6:../system/src/cmsis/system_stm32f10x.c ****   * @date    11-March-2011
   7:../system/src/cmsis/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:../system/src/cmsis/system_stm32f10x.c ****   * 
   9:../system/src/cmsis/system_stm32f10x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:../system/src/cmsis/system_stm32f10x.c ****   *     user application:
  11:../system/src/cmsis/system_stm32f10x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:../system/src/cmsis/system_stm32f10x.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:../system/src/cmsis/system_stm32f10x.c ****   *                      This function is called at startup just after reset and 
  14:../system/src/cmsis/system_stm32f10x.c ****   *                      before branch to main program. This call is made inside
  15:../system/src/cmsis/system_stm32f10x.c ****   *                      the "startup_stm32f10x_xx.s" file.
  16:../system/src/cmsis/system_stm32f10x.c ****   *
  17:../system/src/cmsis/system_stm32f10x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:../system/src/cmsis/system_stm32f10x.c ****   *                                  by the user application to setup the SysTick 
  19:../system/src/cmsis/system_stm32f10x.c ****   *                                  timer or configure other parameters.
  20:../system/src/cmsis/system_stm32f10x.c ****   *                                     
  21:../system/src/cmsis/system_stm32f10x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:../system/src/cmsis/system_stm32f10x.c ****   *                                 be called whenever the core clock is changed
  23:../system/src/cmsis/system_stm32f10x.c ****   *                                 during program execution.
  24:../system/src/cmsis/system_stm32f10x.c ****   *
  25:../system/src/cmsis/system_stm32f10x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:../system/src/cmsis/system_stm32f10x.c ****   *    Then SystemInit() function is called, in "startup_stm32f10x_xx.s" file, to
  27:../system/src/cmsis/system_stm32f10x.c ****   *    configure the system clock before to branch to main program.
  28:../system/src/cmsis/system_stm32f10x.c ****   *
  29:../system/src/cmsis/system_stm32f10x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  30:../system/src/cmsis/system_stm32f10x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  31:../system/src/cmsis/system_stm32f10x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  32:../system/src/cmsis/system_stm32f10x.c ****   *
  33:../system/src/cmsis/system_stm32f10x.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on
  34:../system/src/cmsis/system_stm32f10x.c ****   *    the product used), refer to "HSE_VALUE" define in "stm32f10x.h" file. 
  35:../system/src/cmsis/system_stm32f10x.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  36:../system/src/cmsis/system_stm32f10x.c ****   *    are using different crystal you have to adapt the HSE value to your own
  37:../system/src/cmsis/system_stm32f10x.c ****   *    configuration.
  38:../system/src/cmsis/system_stm32f10x.c ****   *        
  39:../system/src/cmsis/system_stm32f10x.c ****   ******************************************************************************
  40:../system/src/cmsis/system_stm32f10x.c ****   * @attention
  41:../system/src/cmsis/system_stm32f10x.c ****   *
  42:../system/src/cmsis/system_stm32f10x.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  43:../system/src/cmsis/system_stm32f10x.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  44:../system/src/cmsis/system_stm32f10x.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  45:../system/src/cmsis/system_stm32f10x.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  46:../system/src/cmsis/system_stm32f10x.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  47:../system/src/cmsis/system_stm32f10x.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  48:../system/src/cmsis/system_stm32f10x.c ****   *
  49:../system/src/cmsis/system_stm32f10x.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  50:../system/src/cmsis/system_stm32f10x.c ****   ******************************************************************************
  51:../system/src/cmsis/system_stm32f10x.c ****   */
  52:../system/src/cmsis/system_stm32f10x.c **** 
  53:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup CMSIS
  54:../system/src/cmsis/system_stm32f10x.c ****   * @{
  55:../system/src/cmsis/system_stm32f10x.c ****   */
  56:../system/src/cmsis/system_stm32f10x.c **** 
  57:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  58:../system/src/cmsis/system_stm32f10x.c ****   * @{
  59:../system/src/cmsis/system_stm32f10x.c ****   */  
  60:../system/src/cmsis/system_stm32f10x.c ****   
  61:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
  62:../system/src/cmsis/system_stm32f10x.c ****   * @{
  63:../system/src/cmsis/system_stm32f10x.c ****   */
  64:../system/src/cmsis/system_stm32f10x.c **** 
  65:../system/src/cmsis/system_stm32f10x.c **** #include "stm32f10x.h"
  66:../system/src/cmsis/system_stm32f10x.c **** 
  67:../system/src/cmsis/system_stm32f10x.c **** /**
  68:../system/src/cmsis/system_stm32f10x.c ****   * @}
  69:../system/src/cmsis/system_stm32f10x.c ****   */
  70:../system/src/cmsis/system_stm32f10x.c **** 
  71:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  72:../system/src/cmsis/system_stm32f10x.c ****   * @{
  73:../system/src/cmsis/system_stm32f10x.c ****   */
  74:../system/src/cmsis/system_stm32f10x.c **** 
  75:../system/src/cmsis/system_stm32f10x.c **** /**
  76:../system/src/cmsis/system_stm32f10x.c ****   * @}
  77:../system/src/cmsis/system_stm32f10x.c ****   */
  78:../system/src/cmsis/system_stm32f10x.c **** 
  79:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  80:../system/src/cmsis/system_stm32f10x.c ****   * @{
  81:../system/src/cmsis/system_stm32f10x.c ****   */
  82:../system/src/cmsis/system_stm32f10x.c **** 
  83:../system/src/cmsis/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  84:../system/src/cmsis/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
  85:../system/src/cmsis/system_stm32f10x.c ****    
  86:../system/src/cmsis/system_stm32f10x.c ****    IMPORTANT NOTE:
  87:../system/src/cmsis/system_stm32f10x.c ****    ============== 
  88:../system/src/cmsis/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  89:../system/src/cmsis/system_stm32f10x.c **** 
  90:../system/src/cmsis/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  91:../system/src/cmsis/system_stm32f10x.c ****       maximum frequency.
  92:../system/src/cmsis/system_stm32f10x.c ****       
  93:../system/src/cmsis/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  94:../system/src/cmsis/system_stm32f10x.c ****     source.
  95:../system/src/cmsis/system_stm32f10x.c **** 
  96:../system/src/cmsis/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  97:../system/src/cmsis/system_stm32f10x.c ****         - For Low, Medium and High density Value line devices an external 8MHz 
  98:../system/src/cmsis/system_stm32f10x.c ****           crystal is used to drive the System clock.
  99:../system/src/cmsis/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
 100:../system/src/cmsis/system_stm32f10x.c ****           used to drive the System clock.
 101:../system/src/cmsis/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
 102:../system/src/cmsis/system_stm32f10x.c ****           the System clock.
 103:../system/src/cmsis/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
 104:../system/src/cmsis/system_stm32f10x.c ****     */
 105:../system/src/cmsis/system_stm32f10x.c ****     
 106:../system/src/cmsis/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 107:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 108:../system/src/cmsis/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
 109:../system/src/cmsis/system_stm32f10x.c **** #else
 110:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 111:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
 112:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
 113:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
 114:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
 115:../system/src/cmsis/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
 116:../system/src/cmsis/system_stm32f10x.c **** #endif
 117:../system/src/cmsis/system_stm32f10x.c **** 
 118:../system/src/cmsis/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 119:../system/src/cmsis/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) or on 
 120:../system/src/cmsis/system_stm32f10x.c ****      STM32100E-EVAL board (STM32 High-density value line devices) as data memory */ 
 121:../system/src/cmsis/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 122:../system/src/cmsis/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
 123:../system/src/cmsis/system_stm32f10x.c **** #endif
 124:../system/src/cmsis/system_stm32f10x.c **** 
 125:../system/src/cmsis/system_stm32f10x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 126:../system/src/cmsis/system_stm32f10x.c ****      Internal SRAM. */ 
 127:../system/src/cmsis/system_stm32f10x.c **** /* #define VECT_TAB_SRAM */
 128:../system/src/cmsis/system_stm32f10x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 129:../system/src/cmsis/system_stm32f10x.c ****                                   This value must be a multiple of 0x200. */
 130:../system/src/cmsis/system_stm32f10x.c **** 
 131:../system/src/cmsis/system_stm32f10x.c **** 
 132:../system/src/cmsis/system_stm32f10x.c **** /**
 133:../system/src/cmsis/system_stm32f10x.c ****   * @}
 134:../system/src/cmsis/system_stm32f10x.c ****   */
 135:../system/src/cmsis/system_stm32f10x.c **** 
 136:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
 137:../system/src/cmsis/system_stm32f10x.c ****   * @{
 138:../system/src/cmsis/system_stm32f10x.c ****   */
 139:../system/src/cmsis/system_stm32f10x.c **** 
 140:../system/src/cmsis/system_stm32f10x.c **** /**
 141:../system/src/cmsis/system_stm32f10x.c ****   * @}
 142:../system/src/cmsis/system_stm32f10x.c ****   */
 143:../system/src/cmsis/system_stm32f10x.c **** 
 144:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 145:../system/src/cmsis/system_stm32f10x.c ****   * @{
 146:../system/src/cmsis/system_stm32f10x.c ****   */
 147:../system/src/cmsis/system_stm32f10x.c **** 
 148:../system/src/cmsis/system_stm32f10x.c **** /*******************************************************************************
 149:../system/src/cmsis/system_stm32f10x.c **** *  Clock Definitions
 150:../system/src/cmsis/system_stm32f10x.c **** *******************************************************************************/
 151:../system/src/cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 152:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 153:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 154:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 155:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 156:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 157:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 158:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 159:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 160:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 161:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 162:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 163:../system/src/cmsis/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 164:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_VALUE;        /*!< System Clock Frequency (Core Clock) */
 165:../system/src/cmsis/system_stm32f10x.c **** #endif
 166:../system/src/cmsis/system_stm32f10x.c **** 
 167:../system/src/cmsis/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 168:../system/src/cmsis/system_stm32f10x.c **** /**
 169:../system/src/cmsis/system_stm32f10x.c ****   * @}
 170:../system/src/cmsis/system_stm32f10x.c ****   */
 171:../system/src/cmsis/system_stm32f10x.c **** 
 172:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 173:../system/src/cmsis/system_stm32f10x.c ****   * @{
 174:../system/src/cmsis/system_stm32f10x.c ****   */
 175:../system/src/cmsis/system_stm32f10x.c **** 
 176:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClock(void);
 177:../system/src/cmsis/system_stm32f10x.c **** 
 178:../system/src/cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 179:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 180:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 181:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 182:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 183:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 184:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 185:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 186:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 187:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 188:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 189:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockTo72(void);
 190:../system/src/cmsis/system_stm32f10x.c **** #endif
 191:../system/src/cmsis/system_stm32f10x.c **** 
 192:../system/src/cmsis/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 193:../system/src/cmsis/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 194:../system/src/cmsis/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 195:../system/src/cmsis/system_stm32f10x.c **** 
 196:../system/src/cmsis/system_stm32f10x.c **** /**
 197:../system/src/cmsis/system_stm32f10x.c ****   * @}
 198:../system/src/cmsis/system_stm32f10x.c ****   */
 199:../system/src/cmsis/system_stm32f10x.c **** 
 200:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 201:../system/src/cmsis/system_stm32f10x.c ****   * @{
 202:../system/src/cmsis/system_stm32f10x.c ****   */
 203:../system/src/cmsis/system_stm32f10x.c **** 
 204:../system/src/cmsis/system_stm32f10x.c **** /**
 205:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
 206:../system/src/cmsis/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 207:../system/src/cmsis/system_stm32f10x.c ****   *         SystemCoreClock variable.
 208:../system/src/cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 209:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 210:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 211:../system/src/cmsis/system_stm32f10x.c ****   */
 212:../system/src/cmsis/system_stm32f10x.c **** void SystemInit (void)
 213:../system/src/cmsis/system_stm32f10x.c **** {
 214:../system/src/cmsis/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 215:../system/src/cmsis/system_stm32f10x.c ****   /* Set HSION bit */
 216:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
 217:../system/src/cmsis/system_stm32f10x.c **** 
 218:../system/src/cmsis/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 219:../system/src/cmsis/system_stm32f10x.c **** #ifndef STM32F10X_CL
 220:../system/src/cmsis/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
 221:../system/src/cmsis/system_stm32f10x.c **** #else
 222:../system/src/cmsis/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 223:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 224:../system/src/cmsis/system_stm32f10x.c ****   
 225:../system/src/cmsis/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 226:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 227:../system/src/cmsis/system_stm32f10x.c **** 
 228:../system/src/cmsis/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 229:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 230:../system/src/cmsis/system_stm32f10x.c **** 
 231:../system/src/cmsis/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 232:../system/src/cmsis/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 233:../system/src/cmsis/system_stm32f10x.c **** 
 234:../system/src/cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 235:../system/src/cmsis/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 236:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 237:../system/src/cmsis/system_stm32f10x.c **** 
 238:../system/src/cmsis/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 239:../system/src/cmsis/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 240:../system/src/cmsis/system_stm32f10x.c **** 
 241:../system/src/cmsis/system_stm32f10x.c ****   /* Reset CFGR2 register */
 242:../system/src/cmsis/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 243:../system/src/cmsis/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 244:../system/src/cmsis/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 245:../system/src/cmsis/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 246:../system/src/cmsis/system_stm32f10x.c **** 
 247:../system/src/cmsis/system_stm32f10x.c ****   /* Reset CFGR2 register */
 248:../system/src/cmsis/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 249:../system/src/cmsis/system_stm32f10x.c **** #else
 250:../system/src/cmsis/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 251:../system/src/cmsis/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 252:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 253:../system/src/cmsis/system_stm32f10x.c ****     
 254:../system/src/cmsis/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 255:../system/src/cmsis/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 256:../system/src/cmsis/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 257:../system/src/cmsis/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 258:../system/src/cmsis/system_stm32f10x.c **** #endif 
 259:../system/src/cmsis/system_stm32f10x.c **** 
 260:../system/src/cmsis/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 261:../system/src/cmsis/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 262:../system/src/cmsis/system_stm32f10x.c ****   SetSysClock();
 263:../system/src/cmsis/system_stm32f10x.c **** 
 264:../system/src/cmsis/system_stm32f10x.c **** #ifdef VECT_TAB_SRAM
 265:../system/src/cmsis/system_stm32f10x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 266:../system/src/cmsis/system_stm32f10x.c **** #else
 267:../system/src/cmsis/system_stm32f10x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 268:../system/src/cmsis/system_stm32f10x.c **** #endif 
 269:../system/src/cmsis/system_stm32f10x.c **** }
 270:../system/src/cmsis/system_stm32f10x.c **** 
 271:../system/src/cmsis/system_stm32f10x.c **** /**
 272:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 273:../system/src/cmsis/system_stm32f10x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 274:../system/src/cmsis/system_stm32f10x.c ****   *         be used by the user application to setup the SysTick timer or configure
 275:../system/src/cmsis/system_stm32f10x.c ****   *         other parameters.
 276:../system/src/cmsis/system_stm32f10x.c ****   *           
 277:../system/src/cmsis/system_stm32f10x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 278:../system/src/cmsis/system_stm32f10x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 279:../system/src/cmsis/system_stm32f10x.c ****   *         based on this variable will be incorrect.         
 280:../system/src/cmsis/system_stm32f10x.c ****   *     
 281:../system/src/cmsis/system_stm32f10x.c ****   * @note   - The system frequency computed by this function is not the real 
 282:../system/src/cmsis/system_stm32f10x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 283:../system/src/cmsis/system_stm32f10x.c ****   *           constant and the selected clock source:
 284:../system/src/cmsis/system_stm32f10x.c ****   *             
 285:../system/src/cmsis/system_stm32f10x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 286:../system/src/cmsis/system_stm32f10x.c ****   *                                              
 287:../system/src/cmsis/system_stm32f10x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 288:../system/src/cmsis/system_stm32f10x.c ****   *                          
 289:../system/src/cmsis/system_stm32f10x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 290:../system/src/cmsis/system_stm32f10x.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 291:../system/src/cmsis/system_stm32f10x.c ****   *         
 292:../system/src/cmsis/system_stm32f10x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 293:../system/src/cmsis/system_stm32f10x.c ****   *             8 MHz) but the real value may vary depending on the variations
 294:../system/src/cmsis/system_stm32f10x.c ****   *             in voltage and temperature.   
 295:../system/src/cmsis/system_stm32f10x.c ****   *    
 296:../system/src/cmsis/system_stm32f10x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 297:../system/src/cmsis/system_stm32f10x.c ****   *              8 MHz or 25 MHz, depedning on the product used), user has to ensure
 298:../system/src/cmsis/system_stm32f10x.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 299:../system/src/cmsis/system_stm32f10x.c ****   *              Otherwise, this function may have wrong result.
 300:../system/src/cmsis/system_stm32f10x.c ****   *                
 301:../system/src/cmsis/system_stm32f10x.c ****   *         - The result of this function could be not correct when using fractional
 302:../system/src/cmsis/system_stm32f10x.c ****   *           value for HSE crystal.
 303:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 304:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 305:../system/src/cmsis/system_stm32f10x.c ****   */
 306:../system/src/cmsis/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 307:../system/src/cmsis/system_stm32f10x.c **** {
 308:../system/src/cmsis/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 309:../system/src/cmsis/system_stm32f10x.c **** 
 310:../system/src/cmsis/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 311:../system/src/cmsis/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 312:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 313:../system/src/cmsis/system_stm32f10x.c **** 
 314:../system/src/cmsis/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 315:../system/src/cmsis/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 316:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
 317:../system/src/cmsis/system_stm32f10x.c ****     
 318:../system/src/cmsis/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:../system/src/cmsis/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 320:../system/src/cmsis/system_stm32f10x.c ****   
 321:../system/src/cmsis/system_stm32f10x.c ****   switch (tmp)
 322:../system/src/cmsis/system_stm32f10x.c ****   {
 323:../system/src/cmsis/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 324:../system/src/cmsis/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 325:../system/src/cmsis/system_stm32f10x.c ****       break;
 326:../system/src/cmsis/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 327:../system/src/cmsis/system_stm32f10x.c ****       SystemCoreClock = HSE_VALUE;
 328:../system/src/cmsis/system_stm32f10x.c ****       break;
 329:../system/src/cmsis/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 330:../system/src/cmsis/system_stm32f10x.c **** 
 331:../system/src/cmsis/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 332:../system/src/cmsis/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 333:../system/src/cmsis/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 334:../system/src/cmsis/system_stm32f10x.c ****       
 335:../system/src/cmsis/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 336:../system/src/cmsis/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
 337:../system/src/cmsis/system_stm32f10x.c ****       
 338:../system/src/cmsis/system_stm32f10x.c ****       if (pllsource == 0x00)
 339:../system/src/cmsis/system_stm32f10x.c ****       {
 340:../system/src/cmsis/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 341:../system/src/cmsis/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 342:../system/src/cmsis/system_stm32f10x.c ****       }
 343:../system/src/cmsis/system_stm32f10x.c ****       else
 344:../system/src/cmsis/system_stm32f10x.c ****       {
 345:../system/src/cmsis/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 346:../system/src/cmsis/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 347:../system/src/cmsis/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 348:../system/src/cmsis/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 349:../system/src/cmsis/system_stm32f10x.c ****  #else
 350:../system/src/cmsis/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 351:../system/src/cmsis/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 352:../system/src/cmsis/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 353:../system/src/cmsis/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 354:../system/src/cmsis/system_stm32f10x.c ****         }
 355:../system/src/cmsis/system_stm32f10x.c ****         else
 356:../system/src/cmsis/system_stm32f10x.c ****         {
 357:../system/src/cmsis/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 358:../system/src/cmsis/system_stm32f10x.c ****         }
 359:../system/src/cmsis/system_stm32f10x.c ****  #endif
 360:../system/src/cmsis/system_stm32f10x.c ****       }
 361:../system/src/cmsis/system_stm32f10x.c **** #else
 362:../system/src/cmsis/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 363:../system/src/cmsis/system_stm32f10x.c ****       
 364:../system/src/cmsis/system_stm32f10x.c ****       if (pllmull != 0x0D)
 365:../system/src/cmsis/system_stm32f10x.c ****       {
 366:../system/src/cmsis/system_stm32f10x.c ****          pllmull += 2;
 367:../system/src/cmsis/system_stm32f10x.c ****       }
 368:../system/src/cmsis/system_stm32f10x.c ****       else
 369:../system/src/cmsis/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 370:../system/src/cmsis/system_stm32f10x.c ****         pllmull = 13 / 2; 
 371:../system/src/cmsis/system_stm32f10x.c ****       }
 372:../system/src/cmsis/system_stm32f10x.c ****             
 373:../system/src/cmsis/system_stm32f10x.c ****       if (pllsource == 0x00)
 374:../system/src/cmsis/system_stm32f10x.c ****       {
 375:../system/src/cmsis/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 376:../system/src/cmsis/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 377:../system/src/cmsis/system_stm32f10x.c ****       }
 378:../system/src/cmsis/system_stm32f10x.c ****       else
 379:../system/src/cmsis/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 380:../system/src/cmsis/system_stm32f10x.c ****         
 381:../system/src/cmsis/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 382:../system/src/cmsis/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 383:../system/src/cmsis/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 384:../system/src/cmsis/system_stm32f10x.c ****         
 385:../system/src/cmsis/system_stm32f10x.c ****         if (prediv1source == 0)
 386:../system/src/cmsis/system_stm32f10x.c ****         { 
 387:../system/src/cmsis/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 388:../system/src/cmsis/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 389:../system/src/cmsis/system_stm32f10x.c ****         }
 390:../system/src/cmsis/system_stm32f10x.c ****         else
 391:../system/src/cmsis/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 392:../system/src/cmsis/system_stm32f10x.c ****           
 393:../system/src/cmsis/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 394:../system/src/cmsis/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 395:../system/src/cmsis/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 396:../system/src/cmsis/system_stm32f10x.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 397:../system/src/cmsis/system_stm32f10x.c ****         }
 398:../system/src/cmsis/system_stm32f10x.c ****       }
 399:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 400:../system/src/cmsis/system_stm32f10x.c ****       break;
 401:../system/src/cmsis/system_stm32f10x.c **** 
 402:../system/src/cmsis/system_stm32f10x.c ****     default:
 403:../system/src/cmsis/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 404:../system/src/cmsis/system_stm32f10x.c ****       break;
 405:../system/src/cmsis/system_stm32f10x.c ****   }
 406:../system/src/cmsis/system_stm32f10x.c ****   
 407:../system/src/cmsis/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 408:../system/src/cmsis/system_stm32f10x.c ****   /* Get HCLK prescaler */
 409:../system/src/cmsis/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 410:../system/src/cmsis/system_stm32f10x.c ****   /* HCLK clock frequency */
 411:../system/src/cmsis/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 412:../system/src/cmsis/system_stm32f10x.c **** }
 413:../system/src/cmsis/system_stm32f10x.c **** 
 414:../system/src/cmsis/system_stm32f10x.c **** /**
 415:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 416:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 417:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 418:../system/src/cmsis/system_stm32f10x.c ****   */
 419:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClock(void)
 420:../system/src/cmsis/system_stm32f10x.c **** {
 421:../system/src/cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 422:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockToHSE();
 423:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 424:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockTo24();
 425:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 426:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockTo36();
 427:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 428:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockTo48();
 429:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 430:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockTo56();  
 431:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 432:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockTo72();
 433:../system/src/cmsis/system_stm32f10x.c **** #endif
 434:../system/src/cmsis/system_stm32f10x.c ****  
 435:../system/src/cmsis/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 436:../system/src/cmsis/system_stm32f10x.c ****     source (default after reset) */ 
 437:../system/src/cmsis/system_stm32f10x.c **** }
 438:../system/src/cmsis/system_stm32f10x.c **** 
 439:../system/src/cmsis/system_stm32f10x.c **** /**
 440:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 441:../system/src/cmsis/system_stm32f10x.c ****   *          before jump to __main
 442:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 443:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 444:../system/src/cmsis/system_stm32f10x.c ****   */ 
 445:../system/src/cmsis/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 446:../system/src/cmsis/system_stm32f10x.c **** /**
 447:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 448:../system/src/cmsis/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 449:../system/src/cmsis/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 450:../system/src/cmsis/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 451:../system/src/cmsis/system_stm32f10x.c ****   *         data memory (including heap and stack).
 452:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 453:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 454:../system/src/cmsis/system_stm32f10x.c ****   */ 
 455:../system/src/cmsis/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 456:../system/src/cmsis/system_stm32f10x.c **** {
 457:../system/src/cmsis/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 458:../system/src/cmsis/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 459:../system/src/cmsis/system_stm32f10x.c **** 
 460:../system/src/cmsis/system_stm32f10x.c ****   /* Enable FSMC clock */
 461:../system/src/cmsis/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 462:../system/src/cmsis/system_stm32f10x.c ****   
 463:../system/src/cmsis/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 464:../system/src/cmsis/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 465:../system/src/cmsis/system_stm32f10x.c ****   
 466:../system/src/cmsis/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 467:../system/src/cmsis/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
 468:../system/src/cmsis/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 469:../system/src/cmsis/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 470:../system/src/cmsis/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 471:../system/src/cmsis/system_stm32f10x.c ****   
 472:../system/src/cmsis/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 473:../system/src/cmsis/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 474:../system/src/cmsis/system_stm32f10x.c **** 
 475:../system/src/cmsis/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
 476:../system/src/cmsis/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 477:../system/src/cmsis/system_stm32f10x.c **** 
 478:../system/src/cmsis/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 479:../system/src/cmsis/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 480:../system/src/cmsis/system_stm32f10x.c **** 
 481:../system/src/cmsis/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 482:../system/src/cmsis/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
 483:../system/src/cmsis/system_stm32f10x.c ****    
 484:../system/src/cmsis/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 485:../system/src/cmsis/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 486:../system/src/cmsis/system_stm32f10x.c ****   
 487:../system/src/cmsis/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 488:../system/src/cmsis/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 489:../system/src/cmsis/system_stm32f10x.c **** }
 490:../system/src/cmsis/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 491:../system/src/cmsis/system_stm32f10x.c **** 
 492:../system/src/cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 493:../system/src/cmsis/system_stm32f10x.c **** /**
 494:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 495:../system/src/cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 496:../system/src/cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 497:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 498:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 499:../system/src/cmsis/system_stm32f10x.c ****   */
 500:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 501:../system/src/cmsis/system_stm32f10x.c **** {
 502:../system/src/cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 503:../system/src/cmsis/system_stm32f10x.c ****   
 504:../system/src/cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 505:../system/src/cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 506:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 507:../system/src/cmsis/system_stm32f10x.c ****  
 508:../system/src/cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 509:../system/src/cmsis/system_stm32f10x.c ****   do
 510:../system/src/cmsis/system_stm32f10x.c ****   {
 511:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 512:../system/src/cmsis/system_stm32f10x.c ****     StartUpCounter++;  
 513:../system/src/cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 514:../system/src/cmsis/system_stm32f10x.c **** 
 515:../system/src/cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 516:../system/src/cmsis/system_stm32f10x.c ****   {
 517:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 518:../system/src/cmsis/system_stm32f10x.c ****   }
 519:../system/src/cmsis/system_stm32f10x.c ****   else
 520:../system/src/cmsis/system_stm32f10x.c ****   {
 521:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 522:../system/src/cmsis/system_stm32f10x.c ****   }  
 523:../system/src/cmsis/system_stm32f10x.c **** 
 524:../system/src/cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 525:../system/src/cmsis/system_stm32f10x.c ****   {
 526:../system/src/cmsis/system_stm32f10x.c **** 
 527:../system/src/cmsis/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL
 528:../system/src/cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 529:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 530:../system/src/cmsis/system_stm32f10x.c **** 
 531:../system/src/cmsis/system_stm32f10x.c ****     /* Flash 0 wait state */
 532:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 533:../system/src/cmsis/system_stm32f10x.c **** 
 534:../system/src/cmsis/system_stm32f10x.c **** #ifndef STM32F10X_CL
 535:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 536:../system/src/cmsis/system_stm32f10x.c **** #else
 537:../system/src/cmsis/system_stm32f10x.c ****     if (HSE_VALUE <= 24000000)
 538:../system/src/cmsis/system_stm32f10x.c **** 	{
 539:../system/src/cmsis/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 540:../system/src/cmsis/system_stm32f10x.c **** 	}
 541:../system/src/cmsis/system_stm32f10x.c **** 	else
 542:../system/src/cmsis/system_stm32f10x.c **** 	{
 543:../system/src/cmsis/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 544:../system/src/cmsis/system_stm32f10x.c **** 	}
 545:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 546:../system/src/cmsis/system_stm32f10x.c **** #endif
 547:../system/src/cmsis/system_stm32f10x.c ****  
 548:../system/src/cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 549:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 550:../system/src/cmsis/system_stm32f10x.c ****       
 551:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 552:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 553:../system/src/cmsis/system_stm32f10x.c ****     
 554:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 555:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 556:../system/src/cmsis/system_stm32f10x.c ****     
 557:../system/src/cmsis/system_stm32f10x.c ****     /* Select HSE as system clock source */
 558:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 559:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 560:../system/src/cmsis/system_stm32f10x.c **** 
 561:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 562:../system/src/cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 563:../system/src/cmsis/system_stm32f10x.c ****     {
 564:../system/src/cmsis/system_stm32f10x.c ****     }
 565:../system/src/cmsis/system_stm32f10x.c ****   }
 566:../system/src/cmsis/system_stm32f10x.c ****   else
 567:../system/src/cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 568:../system/src/cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 569:../system/src/cmsis/system_stm32f10x.c ****   }  
 570:../system/src/cmsis/system_stm32f10x.c **** }
 571:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 572:../system/src/cmsis/system_stm32f10x.c **** /**
 573:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 574:../system/src/cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 575:../system/src/cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 576:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 577:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 578:../system/src/cmsis/system_stm32f10x.c ****   */
 579:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClockTo24(void)
 580:../system/src/cmsis/system_stm32f10x.c **** {
  25              		.loc 1 580 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 82B0     		sub	sp, sp, #8
  31              		.cfi_def_cfa_offset 8
 581:../system/src/cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  32              		.loc 1 581 0
  33 0002 0023     		movs	r3, #0
  34 0004 0193     		str	r3, [sp, #4]
  35 0006 0093     		str	r3, [sp]
 582:../system/src/cmsis/system_stm32f10x.c ****   
 583:../system/src/cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 584:../system/src/cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 585:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
  36              		.loc 1 585 0
  37 0008 244A     		ldr	r2, .L11
  38 000a 1368     		ldr	r3, [r2]
  39 000c 43F48033 		orr	r3, r3, #65536
  40 0010 1360     		str	r3, [r2]
  41              	.L3:
 586:../system/src/cmsis/system_stm32f10x.c ****  
 587:../system/src/cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 588:../system/src/cmsis/system_stm32f10x.c ****   do
 589:../system/src/cmsis/system_stm32f10x.c ****   {
 590:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
  42              		.loc 1 590 0 discriminator 2
  43 0012 224B     		ldr	r3, .L11
  44 0014 1B68     		ldr	r3, [r3]
  45 0016 03F40033 		and	r3, r3, #131072
  46 001a 0093     		str	r3, [sp]
 591:../system/src/cmsis/system_stm32f10x.c ****     StartUpCounter++;  
  47              		.loc 1 591 0 discriminator 2
  48 001c 019B     		ldr	r3, [sp, #4]
  49 001e 0133     		adds	r3, r3, #1
  50 0020 0193     		str	r3, [sp, #4]
 592:../system/src/cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
  51              		.loc 1 592 0 discriminator 2
  52 0022 009B     		ldr	r3, [sp]
  53 0024 1BB9     		cbnz	r3, .L2
  54              		.loc 1 592 0 is_stmt 0 discriminator 1
  55 0026 019B     		ldr	r3, [sp, #4]
  56 0028 B3F5A06F 		cmp	r3, #1280
  57 002c F1D1     		bne	.L3
  58              	.L2:
 593:../system/src/cmsis/system_stm32f10x.c **** 
 594:../system/src/cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
  59              		.loc 1 594 0 is_stmt 1
  60 002e 1B4B     		ldr	r3, .L11
  61 0030 1B68     		ldr	r3, [r3]
  62 0032 13F4003F 		tst	r3, #131072
  63 0036 06D0     		beq	.L4
 595:../system/src/cmsis/system_stm32f10x.c ****   {
 596:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
  64              		.loc 1 596 0
  65 0038 0123     		movs	r3, #1
  66 003a 0093     		str	r3, [sp]
  67              	.L5:
 597:../system/src/cmsis/system_stm32f10x.c ****   }
 598:../system/src/cmsis/system_stm32f10x.c ****   else
 599:../system/src/cmsis/system_stm32f10x.c ****   {
 600:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 601:../system/src/cmsis/system_stm32f10x.c ****   }  
 602:../system/src/cmsis/system_stm32f10x.c **** 
 603:../system/src/cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
  68              		.loc 1 603 0
  69 003c 009B     		ldr	r3, [sp]
  70 003e 012B     		cmp	r3, #1
  71 0040 04D0     		beq	.L10
  72              	.L1:
 604:../system/src/cmsis/system_stm32f10x.c ****   {
 605:../system/src/cmsis/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL 
 606:../system/src/cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 607:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 608:../system/src/cmsis/system_stm32f10x.c **** 
 609:../system/src/cmsis/system_stm32f10x.c ****     /* Flash 0 wait state */
 610:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 611:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 612:../system/src/cmsis/system_stm32f10x.c **** #endif
 613:../system/src/cmsis/system_stm32f10x.c ****  
 614:../system/src/cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 615:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 616:../system/src/cmsis/system_stm32f10x.c ****       
 617:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 618:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 619:../system/src/cmsis/system_stm32f10x.c ****     
 620:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 621:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 622:../system/src/cmsis/system_stm32f10x.c ****     
 623:../system/src/cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 624:../system/src/cmsis/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 625:../system/src/cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 626:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 627:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 628:../system/src/cmsis/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 629:../system/src/cmsis/system_stm32f10x.c **** 
 630:../system/src/cmsis/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 631:../system/src/cmsis/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 632:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 633:../system/src/cmsis/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 634:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 635:../system/src/cmsis/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 636:../system/src/cmsis/system_stm32f10x.c ****   
 637:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL2 */
 638:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 639:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 640:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 641:../system/src/cmsis/system_stm32f10x.c ****     {
 642:../system/src/cmsis/system_stm32f10x.c ****     }   
 643:../system/src/cmsis/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 644:../system/src/cmsis/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 645:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 646:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
 647:../system/src/cmsis/system_stm32f10x.c **** #else    
 648:../system/src/cmsis/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 649:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 650:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 651:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 652:../system/src/cmsis/system_stm32f10x.c **** 
 653:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL */
 654:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 655:../system/src/cmsis/system_stm32f10x.c **** 
 656:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is ready */
 657:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 658:../system/src/cmsis/system_stm32f10x.c ****     {
 659:../system/src/cmsis/system_stm32f10x.c ****     }
 660:../system/src/cmsis/system_stm32f10x.c **** 
 661:../system/src/cmsis/system_stm32f10x.c ****     /* Select PLL as system clock source */
 662:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 663:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 664:../system/src/cmsis/system_stm32f10x.c **** 
 665:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 666:../system/src/cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 667:../system/src/cmsis/system_stm32f10x.c ****     {
 668:../system/src/cmsis/system_stm32f10x.c ****     }
 669:../system/src/cmsis/system_stm32f10x.c ****   }
 670:../system/src/cmsis/system_stm32f10x.c ****   else
 671:../system/src/cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 672:../system/src/cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 673:../system/src/cmsis/system_stm32f10x.c ****   } 
 674:../system/src/cmsis/system_stm32f10x.c **** }
  73              		.loc 1 674 0
  74 0042 02B0     		add	sp, sp, #8
  75              		.cfi_remember_state
  76              		.cfi_def_cfa_offset 0
  77              		@ sp needed
  78 0044 7047     		bx	lr
  79              	.L4:
  80              		.cfi_restore_state
 600:../system/src/cmsis/system_stm32f10x.c ****   }  
  81              		.loc 1 600 0
  82 0046 0023     		movs	r3, #0
  83 0048 0093     		str	r3, [sp]
  84 004a F7E7     		b	.L5
  85              	.L10:
 615:../system/src/cmsis/system_stm32f10x.c ****       
  86              		.loc 1 615 0
  87 004c 134B     		ldr	r3, .L11
  88 004e 5A68     		ldr	r2, [r3, #4]
  89 0050 5A60     		str	r2, [r3, #4]
 618:../system/src/cmsis/system_stm32f10x.c ****     
  90              		.loc 1 618 0
  91 0052 5A68     		ldr	r2, [r3, #4]
  92 0054 5A60     		str	r2, [r3, #4]
 621:../system/src/cmsis/system_stm32f10x.c ****     
  93              		.loc 1 621 0
  94 0056 5A68     		ldr	r2, [r3, #4]
  95 0058 5A60     		str	r2, [r3, #4]
 645:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
  96              		.loc 1 645 0
  97 005a 5A68     		ldr	r2, [r3, #4]
  98 005c 22F47C12 		bic	r2, r2, #4128768
  99 0060 5A60     		str	r2, [r3, #4]
 646:../system/src/cmsis/system_stm32f10x.c **** #else    
 100              		.loc 1 646 0
 101 0062 5A68     		ldr	r2, [r3, #4]
 102 0064 42F49812 		orr	r2, r2, #1245184
 103 0068 5A60     		str	r2, [r3, #4]
 654:../system/src/cmsis/system_stm32f10x.c **** 
 104              		.loc 1 654 0
 105 006a 1A68     		ldr	r2, [r3]
 106 006c 42F08072 		orr	r2, r2, #16777216
 107 0070 1A60     		str	r2, [r3]
 108              	.L7:
 657:../system/src/cmsis/system_stm32f10x.c ****     {
 109              		.loc 1 657 0 discriminator 1
 110 0072 0A4B     		ldr	r3, .L11
 111 0074 1B68     		ldr	r3, [r3]
 112 0076 13F0007F 		tst	r3, #33554432
 113 007a FAD0     		beq	.L7
 662:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 114              		.loc 1 662 0
 115 007c 074B     		ldr	r3, .L11
 116 007e 5A68     		ldr	r2, [r3, #4]
 117 0080 22F00302 		bic	r2, r2, #3
 118 0084 5A60     		str	r2, [r3, #4]
 663:../system/src/cmsis/system_stm32f10x.c **** 
 119              		.loc 1 663 0
 120 0086 5A68     		ldr	r2, [r3, #4]
 121 0088 42F00202 		orr	r2, r2, #2
 122 008c 5A60     		str	r2, [r3, #4]
 123              	.L8:
 666:../system/src/cmsis/system_stm32f10x.c ****     {
 124              		.loc 1 666 0 discriminator 1
 125 008e 034B     		ldr	r3, .L11
 126 0090 5B68     		ldr	r3, [r3, #4]
 127 0092 03F00C03 		and	r3, r3, #12
 128 0096 082B     		cmp	r3, #8
 129 0098 F9D1     		bne	.L8
 130 009a D2E7     		b	.L1
 131              	.L12:
 132              		.align	2
 133              	.L11:
 134 009c 00100240 		.word	1073876992
 135              		.cfi_endproc
 136              	.LFE66:
 138              		.section	.text.SetSysClock,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	SetSysClock:
 146              	.LFB65:
 420:../system/src/cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 147              		.loc 1 420 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 08B5     		push	{r3, lr}
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 3, -8
 154              		.cfi_offset 14, -4
 424:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 155              		.loc 1 424 0
 156 0002 FFF7FEFF 		bl	SetSysClockTo24
 157              	.LVL0:
 437:../system/src/cmsis/system_stm32f10x.c **** 
 158              		.loc 1 437 0
 159 0006 08BD     		pop	{r3, pc}
 160              		.cfi_endproc
 161              	.LFE65:
 163              		.section	.text.SystemInit,"ax",%progbits
 164              		.align	1
 165              		.global	SystemInit
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu softvfp
 171              	SystemInit:
 172              	.LFB63:
 213:../system/src/cmsis/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 173              		.loc 1 213 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177 0000 08B5     		push	{r3, lr}
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 3, -8
 180              		.cfi_offset 14, -4
 216:../system/src/cmsis/system_stm32f10x.c **** 
 181              		.loc 1 216 0
 182 0002 114B     		ldr	r3, .L17
 183 0004 1A68     		ldr	r2, [r3]
 184 0006 42F00102 		orr	r2, r2, #1
 185 000a 1A60     		str	r2, [r3]
 220:../system/src/cmsis/system_stm32f10x.c **** #else
 186              		.loc 1 220 0
 187 000c 5968     		ldr	r1, [r3, #4]
 188 000e 0F4A     		ldr	r2, .L17+4
 189 0010 0A40     		ands	r2, r2, r1
 190 0012 5A60     		str	r2, [r3, #4]
 226:../system/src/cmsis/system_stm32f10x.c **** 
 191              		.loc 1 226 0
 192 0014 1A68     		ldr	r2, [r3]
 193 0016 22F08472 		bic	r2, r2, #17301504
 194 001a 22F48032 		bic	r2, r2, #65536
 195 001e 1A60     		str	r2, [r3]
 229:../system/src/cmsis/system_stm32f10x.c **** 
 196              		.loc 1 229 0
 197 0020 1A68     		ldr	r2, [r3]
 198 0022 22F48022 		bic	r2, r2, #262144
 199 0026 1A60     		str	r2, [r3]
 232:../system/src/cmsis/system_stm32f10x.c **** 
 200              		.loc 1 232 0
 201 0028 5A68     		ldr	r2, [r3, #4]
 202 002a 22F4FE02 		bic	r2, r2, #8323072
 203 002e 5A60     		str	r2, [r3, #4]
 245:../system/src/cmsis/system_stm32f10x.c **** 
 204              		.loc 1 245 0
 205 0030 4FF41F02 		mov	r2, #10420224
 206 0034 9A60     		str	r2, [r3, #8]
 248:../system/src/cmsis/system_stm32f10x.c **** #else
 207              		.loc 1 248 0
 208 0036 0022     		movs	r2, #0
 209 0038 DA62     		str	r2, [r3, #44]
 262:../system/src/cmsis/system_stm32f10x.c **** 
 210              		.loc 1 262 0
 211 003a FFF7FEFF 		bl	SetSysClock
 212              	.LVL1:
 267:../system/src/cmsis/system_stm32f10x.c **** #endif 
 213              		.loc 1 267 0
 214 003e 044B     		ldr	r3, .L17+8
 215 0040 4FF00062 		mov	r2, #134217728
 216 0044 9A60     		str	r2, [r3, #8]
 269:../system/src/cmsis/system_stm32f10x.c **** 
 217              		.loc 1 269 0
 218 0046 08BD     		pop	{r3, pc}
 219              	.L18:
 220              		.align	2
 221              	.L17:
 222 0048 00100240 		.word	1073876992
 223 004c 0000FFF8 		.word	-117506048
 224 0050 00ED00E0 		.word	-536810240
 225              		.cfi_endproc
 226              	.LFE63:
 228              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 229              		.align	1
 230              		.global	SystemCoreClockUpdate
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 234              		.fpu softvfp
 236              	SystemCoreClockUpdate:
 237              	.LFB64:
 307:../system/src/cmsis/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 238              		.loc 1 307 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243              	.LVL2:
 319:../system/src/cmsis/system_stm32f10x.c ****   
 244              		.loc 1 319 0
 245 0000 1D4B     		ldr	r3, .L28
 246 0002 5B68     		ldr	r3, [r3, #4]
 247 0004 03F00C03 		and	r3, r3, #12
 248              	.LVL3:
 321:../system/src/cmsis/system_stm32f10x.c ****   {
 249              		.loc 1 321 0
 250 0008 042B     		cmp	r3, #4
 251 000a 15D0     		beq	.L21
 252 000c 082B     		cmp	r3, #8
 253 000e 17D0     		beq	.L22
 254 0010 1BB1     		cbz	r3, .L27
 403:../system/src/cmsis/system_stm32f10x.c ****       break;
 255              		.loc 1 403 0
 256 0012 1A4B     		ldr	r3, .L28+4
 257              	.LVL4:
 258 0014 1A4A     		ldr	r2, .L28+8
 259 0016 1A60     		str	r2, [r3]
 404:../system/src/cmsis/system_stm32f10x.c ****   }
 260              		.loc 1 404 0
 261 0018 02E0     		b	.L24
 262              	.LVL5:
 263              	.L27:
 324:../system/src/cmsis/system_stm32f10x.c ****       break;
 264              		.loc 1 324 0
 265 001a 184B     		ldr	r3, .L28+4
 266              	.LVL6:
 267 001c 184A     		ldr	r2, .L28+8
 268 001e 1A60     		str	r2, [r3]
 269              	.LVL7:
 270              	.L24:
 409:../system/src/cmsis/system_stm32f10x.c ****   /* HCLK clock frequency */
 271              		.loc 1 409 0
 272 0020 154B     		ldr	r3, .L28
 273 0022 5B68     		ldr	r3, [r3, #4]
 274 0024 C3F30313 		ubfx	r3, r3, #4, #4
 275 0028 164A     		ldr	r2, .L28+12
 276 002a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 277 002c DAB2     		uxtb	r2, r3
 278              	.LVL8:
 411:../system/src/cmsis/system_stm32f10x.c **** }
 279              		.loc 1 411 0
 280 002e 1349     		ldr	r1, .L28+4
 281 0030 0B68     		ldr	r3, [r1]
 282 0032 D340     		lsrs	r3, r3, r2
 283 0034 0B60     		str	r3, [r1]
 412:../system/src/cmsis/system_stm32f10x.c **** 
 284              		.loc 1 412 0
 285 0036 7047     		bx	lr
 286              	.LVL9:
 287              	.L21:
 327:../system/src/cmsis/system_stm32f10x.c ****       break;
 288              		.loc 1 327 0
 289 0038 104B     		ldr	r3, .L28+4
 290              	.LVL10:
 291 003a 114A     		ldr	r2, .L28+8
 292 003c 1A60     		str	r2, [r3]
 328:../system/src/cmsis/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 293              		.loc 1 328 0
 294 003e EFE7     		b	.L24
 295              	.LVL11:
 296              	.L22:
 332:../system/src/cmsis/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 297              		.loc 1 332 0
 298 0040 0D4A     		ldr	r2, .L28
 299 0042 5368     		ldr	r3, [r2, #4]
 300              	.LVL12:
 333:../system/src/cmsis/system_stm32f10x.c ****       
 301              		.loc 1 333 0
 302 0044 5268     		ldr	r2, [r2, #4]
 303              	.LVL13:
 336:../system/src/cmsis/system_stm32f10x.c ****       
 304              		.loc 1 336 0
 305 0046 C3F38343 		ubfx	r3, r3, #18, #4
 306              	.LVL14:
 307 004a 0233     		adds	r3, r3, #2
 308              	.LVL15:
 338:../system/src/cmsis/system_stm32f10x.c ****       {
 309              		.loc 1 338 0
 310 004c 12F4803F 		tst	r2, #65536
 311 0050 05D1     		bne	.L25
 341:../system/src/cmsis/system_stm32f10x.c ****       }
 312              		.loc 1 341 0
 313 0052 0D4A     		ldr	r2, .L28+16
 314              	.LVL16:
 315 0054 02FB03F3 		mul	r3, r2, r3
 316              	.LVL17:
 317 0058 084A     		ldr	r2, .L28+4
 318 005a 1360     		str	r3, [r2]
 319 005c E0E7     		b	.L24
 320              	.LVL18:
 321              	.L25:
 346:../system/src/cmsis/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 322              		.loc 1 346 0
 323 005e 064A     		ldr	r2, .L28
 324              	.LVL19:
 325 0060 D26A     		ldr	r2, [r2, #44]
 326 0062 02F00F02 		and	r2, r2, #15
 327 0066 0132     		adds	r2, r2, #1
 328              	.LVL20:
 348:../system/src/cmsis/system_stm32f10x.c ****  #else
 329              		.loc 1 348 0
 330 0068 0549     		ldr	r1, .L28+8
 331 006a B1FBF2F2 		udiv	r2, r1, r2
 332              	.LVL21:
 333 006e 03FB02F3 		mul	r3, r3, r2
 334              	.LVL22:
 335 0072 024A     		ldr	r2, .L28+4
 336 0074 1360     		str	r3, [r2]
 337 0076 D3E7     		b	.L24
 338              	.L29:
 339              		.align	2
 340              	.L28:
 341 0078 00100240 		.word	1073876992
 342 007c 00000000 		.word	.LANCHOR0
 343 0080 00127A00 		.word	8000000
 344 0084 00000000 		.word	.LANCHOR1
 345 0088 00093D00 		.word	4000000
 346              		.cfi_endproc
 347              	.LFE64:
 349              		.global	AHBPrescTable
 350              		.global	SystemCoreClock
 351              		.section	.data.AHBPrescTable,"aw",%progbits
 352              		.align	2
 353              		.set	.LANCHOR1,. + 0
 356              	AHBPrescTable:
 357 0000 00       		.byte	0
 358 0001 00       		.byte	0
 359 0002 00       		.byte	0
 360 0003 00       		.byte	0
 361 0004 00       		.byte	0
 362 0005 00       		.byte	0
 363 0006 00       		.byte	0
 364 0007 00       		.byte	0
 365 0008 01       		.byte	1
 366 0009 02       		.byte	2
 367 000a 03       		.byte	3
 368 000b 04       		.byte	4
 369 000c 06       		.byte	6
 370 000d 07       		.byte	7
 371 000e 08       		.byte	8
 372 000f 09       		.byte	9
 373              		.section	.data.SystemCoreClock,"aw",%progbits
 374              		.align	2
 375              		.set	.LANCHOR0,. + 0
 378              	SystemCoreClock:
 379 0000 00366E01 		.word	24000000
 380              		.text
 381              	.Letext0:
 382              		.file 2 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 383              		.file 3 "../system/include/cmsis/core_cm3.h"
 384              		.file 4 "../system/include/cmsis/system_stm32f10x.h"
 385              		.file 5 "../system/include/cmsis/stm32f10x.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f10x.c
     /tmp/ccYwAJN3.s:16     .text.SetSysClockTo24:0000000000000000 $t
     /tmp/ccYwAJN3.s:22     .text.SetSysClockTo24:0000000000000000 SetSysClockTo24
     /tmp/ccYwAJN3.s:134    .text.SetSysClockTo24:000000000000009c $d
     /tmp/ccYwAJN3.s:139    .text.SetSysClock:0000000000000000 $t
     /tmp/ccYwAJN3.s:145    .text.SetSysClock:0000000000000000 SetSysClock
     /tmp/ccYwAJN3.s:164    .text.SystemInit:0000000000000000 $t
     /tmp/ccYwAJN3.s:171    .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccYwAJN3.s:222    .text.SystemInit:0000000000000048 $d
     /tmp/ccYwAJN3.s:229    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccYwAJN3.s:236    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccYwAJN3.s:341    .text.SystemCoreClockUpdate:0000000000000078 $d
     /tmp/ccYwAJN3.s:356    .data.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccYwAJN3.s:378    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccYwAJN3.s:352    .data.AHBPrescTable:0000000000000000 $d
     /tmp/ccYwAJN3.s:374    .data.SystemCoreClock:0000000000000000 $d
                           .group:0000000000000000 wm4.0.879aed89c359f5856fe69c61b3590d34
                           .group:0000000000000000 wm4.stm32f10x.h.51.c58ea26c5150470d52680f0bbaa7049c
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.core_cm3.h.82.57a0f9dd004efa579f86574376281d2f
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.183.ecfd9c316d6f10b73648f6e579b02c8b
                           .group:0000000000000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:0000000000000000 wm4.stm32f10x_can.h.25.e5e43f6bbc8fc7c8aa30ef2bc5610ced
                           .group:0000000000000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:0000000000000000 wm4.stm32f10x_dac.h.25.d946244edf026333094657d55ea894b8
                           .group:0000000000000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:0000000000000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:0000000000000000 wm4.stm32f10x_exti.h.25.f52c69aad7d1994be5b2c4e2b8f4c595
                           .group:0000000000000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:0000000000000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.25.b124ac2c620f8ebddd92b6d95ca62176
                           .group:0000000000000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:0000000000000000 wm4.stm32f10x_sdio.h.25.fb0db079f5c1412c40f359319f7c40b0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.25.3f6dfa4abe177efb3c6f5a717c06b323
                           .group:0000000000000000 wm4.stm32f10x_tim.h.25.f709106ba77b314e6b070693f89f3c56
                           .group:0000000000000000 wm4.stm32f10x_usart.h.25.2e65e396239d0cc41fd0bf6faa2a32cb
                           .group:0000000000000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:0000000000000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:0000000000000000 wm4.stm32f10x.h.8317.9a8e476d96d33bb2df9a9ad0775bd4a7

NO UNDEFINED SYMBOLS
