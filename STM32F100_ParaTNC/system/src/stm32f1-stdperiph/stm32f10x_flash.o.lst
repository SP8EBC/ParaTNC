   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_flash.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.FLASH_SetLatency,"ax",%progbits
  16              		.align	1
  17              		.global	FLASH_SetLatency
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	FLASH_SetLatency:
  24              	.LFB63:
  25              		.file 1 "../system/src/stm32f1-stdperiph/stm32f10x_flash.c"
   1:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
   2:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   ******************************************************************************
   3:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @file    stm32f10x_flash.c
   4:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @author  MCD Application Team
   5:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @version V3.5.0
   6:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @date    11-March-2011
   7:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief   This file provides all the FLASH firmware functions.
   8:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   ******************************************************************************
   9:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @attention
  10:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *
  11:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *
  18:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   ******************************************************************************
  20:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
  21:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  22:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /* Includes ------------------------------------------------------------------*/
  23:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #include "stm32f10x_flash.h"
  24:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  25:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @{
  27:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
  28:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  29:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /** @defgroup FLASH 
  30:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief FLASH driver modules
  31:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @{
  32:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */ 
  33:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  34:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /** @defgroup FLASH_Private_TypesDefinitions
  35:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @{
  36:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
  37:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  38:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
  39:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @}
  40:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */ 
  41:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  42:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /** @defgroup FLASH_Private_Defines
  43:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @{
  44:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */ 
  45:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  46:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /* Flash Access Control Register bits */
  47:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define ACR_LATENCY_Mask         ((uint32_t)0x00000038)
  48:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define ACR_HLFCYA_Mask          ((uint32_t)0xFFFFFFF7)
  49:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define ACR_PRFTBE_Mask          ((uint32_t)0xFFFFFFEF)
  50:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  51:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /* Flash Access Control Register bits */
  52:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define ACR_PRFTBS_Mask          ((uint32_t)0x00000020) 
  53:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  54:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /* Flash Control Register bits */
  55:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_PG_Set                ((uint32_t)0x00000001)
  56:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_PG_Reset              ((uint32_t)0x00001FFE) 
  57:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_PER_Set               ((uint32_t)0x00000002)
  58:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_PER_Reset             ((uint32_t)0x00001FFD)
  59:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_MER_Set               ((uint32_t)0x00000004)
  60:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_MER_Reset             ((uint32_t)0x00001FFB)
  61:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_OPTPG_Set             ((uint32_t)0x00000010)
  62:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_OPTPG_Reset           ((uint32_t)0x00001FEF)
  63:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_OPTER_Set             ((uint32_t)0x00000020)
  64:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_OPTER_Reset           ((uint32_t)0x00001FDF)
  65:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_STRT_Set              ((uint32_t)0x00000040)
  66:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define CR_LOCK_Set              ((uint32_t)0x00000080)
  67:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  68:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /* FLASH Mask */
  69:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define RDPRT_Mask               ((uint32_t)0x00000002)
  70:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define WRP0_Mask                ((uint32_t)0x000000FF)
  71:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define WRP1_Mask                ((uint32_t)0x0000FF00)
  72:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define WRP2_Mask                ((uint32_t)0x00FF0000)
  73:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define WRP3_Mask                ((uint32_t)0xFF000000)
  74:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define OB_USER_BFB2             ((uint16_t)0x0008)
  75:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  76:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /* FLASH Keys */
  77:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define RDP_Key                  ((uint16_t)0x00A5)
  78:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define FLASH_KEY1               ((uint32_t)0x45670123)
  79:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define FLASH_KEY2               ((uint32_t)0xCDEF89AB)
  80:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  81:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /* FLASH BANK address */
  82:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define FLASH_BANK1_END_ADDRESS   ((uint32_t)0x807FFFF)
  83:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  84:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /* Delay definition */   
  85:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define EraseTimeout          ((uint32_t)0x000B0000)
  86:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #define ProgramTimeout        ((uint32_t)0x00002000)
  87:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
  88:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @}
  89:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */ 
  90:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  91:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /** @defgroup FLASH_Private_Macros
  92:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @{
  93:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
  94:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  95:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
  96:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @}
  97:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */ 
  98:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
  99:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /** @defgroup FLASH_Private_Variables
 100:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @{
 101:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 102:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 103:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 104:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @}
 105:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */ 
 106:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 107:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /** @defgroup FLASH_Private_FunctionPrototypes
 108:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @{
 109:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 110:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 111:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 112:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @}
 113:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 114:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 115:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /** @defgroup FLASH_Private_Functions
 116:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @{
 117:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 118:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 119:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 120:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** @code  
 121:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  
 122:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  This driver provides functions to configure and program the Flash memory of all STM32F10x devices,
 123:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  including the latest STM32F10x_XL density devices. 
 124:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 125:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  STM32F10x_XL devices feature up to 1 Mbyte with dual bank architecture for read-while-write (RWW) 
 126:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     - bank1: fixed size of 512 Kbytes (256 pages of 2Kbytes each)
 127:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     - bank2: up to 512 Kbytes (up to 256 pages of 2Kbytes each)
 128:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  While other STM32F10x devices features only one bank with memory up to 512 Kbytes.
 129:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 130:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  In version V3.3.0, some functions were updated and new ones were added to support
 131:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  STM32F10x_XL devices. Thus some functions manages all devices, while other are 
 132:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  dedicated for XL devices only.
 133:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  
 134:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  The table below presents the list of available functions depending on the used STM32F10x devices. 
 135:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       
 136:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    ***************************************************
 137:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    * Legacy functions used for all STM32F10x devices *
 138:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    ***************************************************
 139:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    +-----------------------------------------------------------------------------------------------
 140:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |       Functions prototypes         |STM32F10x_XL|Other STM32F10x|    Comments                 
 141:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |   devices  |  devices      |                             
 142:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 143:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_SetLatency                    |    Yes     |      Yes      | No change                   
 144:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 145:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_HalfCycleAccessCmd            |    Yes     |      Yes      | No change                   
 146:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 147:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_PrefetchBufferCmd             |    Yes     |      Yes      | No change                   
 148:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 149:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_Unlock                        |    Yes     |      Yes      | - For STM32F10X_XL devices: 
 150:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |            |               | - For other devices: unlock 
 151:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |            |               |   to FLASH_UnlockBank1 funct
 152:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 153:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_Lock                          |    Yes     |      Yes      | - For STM32F10X_XL devices: 
 154:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |            |               | - For other devices: lock Ba
 155:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |            |               |   to FLASH_LockBank1 functio
 156:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 157:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_ErasePage                     |    Yes     |      Yes      | - For STM32F10x_XL devices: 
 158:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |            |               | - For other devices: erase a
 159:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 160:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_EraseAllPages                 |    Yes     |      Yes      | - For STM32F10x_XL devices: 
 161:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |            |               | - For other devices: erase a
 162:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 163:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_EraseOptionBytes              |    Yes     |      Yes      | No change                   
 164:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 165:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_ProgramWord                   |    Yes     |      Yes      | Updated to program up to 1MB
 166:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 167:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_ProgramHalfWord               |    Yes     |      Yes      | Updated to program up to 1MB
 168:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 169:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_ProgramOptionByteData         |    Yes     |      Yes      | No change                   
 170:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 171:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_EnableWriteProtection         |    Yes     |      Yes      | No change                   
 172:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 173:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_ReadOutProtection             |    Yes     |      Yes      | No change                   
 174:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 175:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_UserOptionByteConfig          |    Yes     |      Yes      | No change                   
 176:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 177:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_GetUserOptionByte             |    Yes     |      Yes      | No change                   
 178:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 179:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_GetWriteProtectionOptionByte  |    Yes     |      Yes      | No change                   
 180:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 181:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_GetReadOutProtectionStatus    |    Yes     |      Yes      | No change                   
 182:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 183:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_GetPrefetchBufferStatus       |    Yes     |      Yes      | No change                   
 184:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 185:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_ITConfig                      |    Yes     |      Yes      | - For STM32F10x_XL devices: 
 186:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |            |               | - For other devices: enable 
 187:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 188:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_GetFlagStatus                 |    Yes     |      Yes      | - For STM32F10x_XL devices: 
 189:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |            |               | - For other devices: return 
 190:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 191:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_ClearFlag                     |    Yes     |      Yes      | - For STM32F10x_XL devices: 
 192:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |            |               | - For other devices: clear B
 193:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 194:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_GetStatus                     |    Yes     |      Yes      | - Return the status of Bank1
 195:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |            |               |   equivalent to FLASH_GetBan
 196:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 197:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_WaitForLastOperation          |    Yes     |      Yes      | - Wait for Bank1 last operat
 198:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |            |               |   equivalent to: FLASH_WaitF
 199:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    +-----------------------------------------------------------------------------------------------
 200:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 201:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    ************************************************************************************************
 202:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    * New functions used for all STM32F10x devices to manage Bank1:                                 
 203:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    *   - These functions are mainly useful for STM32F10x_XL density devices, to have separate contr
 204:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    *   - For other devices, these functions are optional (covered by functions listed above)       
 205:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    ************************************************************************************************
 206:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    +-----------------------------------------------------------------------------------------------
 207:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |       Functions prototypes         |STM32F10x_XL|Other STM32F10x|    Comments                 
 208:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |   devices  |  devices      |                             
 209:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 210:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    | FLASH_UnlockBank1                  |    Yes     |      Yes      | - Unlock Bank1              
 211:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 212:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_LockBank1                     |    Yes     |      Yes      | - Lock Bank1                
 213:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 214:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    | FLASH_EraseAllBank1Pages           |    Yes     |      Yes      | - Erase all pages in Bank1  
 215:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 216:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    | FLASH_GetBank1Status               |    Yes     |      Yes      | - Return the status of Bank1
 217:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 218:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    | FLASH_WaitForLastBank1Operation    |    Yes     |      Yes      | - Wait for Bank1 last operat
 219:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    +-----------------------------------------------------------------------------------------------
 220:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 221:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    *****************************************************************************
 222:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    * New Functions used only with STM32F10x_XL density devices to manage Bank2 *
 223:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    *****************************************************************************
 224:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    +-----------------------------------------------------------------------------------------------
 225:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |       Functions prototypes         |STM32F10x_XL|Other STM32F10x|    Comments                 
 226:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |                                    |   devices  |  devices      |                             
 227:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 228:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    | FLASH_UnlockBank2                  |    Yes     |      No       | - Unlock Bank2              
 229:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 230:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |FLASH_LockBank2                     |    Yes     |      No       | - Lock Bank2                
 231:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 232:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    | FLASH_EraseAllBank2Pages           |    Yes     |      No       | - Erase all pages in Bank2  
 233:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 234:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    | FLASH_GetBank2Status               |    Yes     |      No       | - Return the status of Bank2
 235:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 236:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    | FLASH_WaitForLastBank2Operation    |    Yes     |      No       | - Wait for Bank2 last operat
 237:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    |-----------------------------------------------------------------------------------------------
 238:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    | FLASH_BootConfig                   |    Yes     |      No       | - Configure to boot from Ban
 239:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    +-----------------------------------------------------------------------------------------------
 240:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** @endcode
 241:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** */
 242:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 243:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 244:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 245:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Sets the code latency value.
 246:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 247:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  FLASH_Latency: specifies the FLASH Latency value.
 248:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be one of the following values:
 249:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_Latency_0: FLASH Zero Latency cycle
 250:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_Latency_1: FLASH One Latency cycle
 251:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_Latency_2: FLASH Two Latency cycles
 252:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval None
 253:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 254:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** void FLASH_SetLatency(uint32_t FLASH_Latency)
 255:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
  26              		.loc 1 255 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 256:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   uint32_t tmpreg = 0;
 257:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 258:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
 259:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_LATENCY(FLASH_Latency));
 260:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 261:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Read the ACR register */
 262:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   tmpreg = FLASH->ACR;  
  32              		.loc 1 262 0
  33 0000 034A     		ldr	r2, .L2
  34 0002 1368     		ldr	r3, [r2]
  35              	.LVL1:
 263:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 264:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Sets the Latency value */
 265:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   tmpreg &= ACR_LATENCY_Mask;
  36              		.loc 1 265 0
  37 0004 03F03803 		and	r3, r3, #56
  38              	.LVL2:
 266:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   tmpreg |= FLASH_Latency;
  39              		.loc 1 266 0
  40 0008 1843     		orrs	r0, r0, r3
  41              	.LVL3:
 267:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 268:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Write the ACR register */
 269:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->ACR = tmpreg;
  42              		.loc 1 269 0
  43 000a 1060     		str	r0, [r2]
 270:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
  44              		.loc 1 270 0
  45 000c 7047     		bx	lr
  46              	.L3:
  47 000e 00BF     		.align	2
  48              	.L2:
  49 0010 00200240 		.word	1073881088
  50              		.cfi_endproc
  51              	.LFE63:
  53              		.section	.text.FLASH_HalfCycleAccessCmd,"ax",%progbits
  54              		.align	1
  55              		.global	FLASH_HalfCycleAccessCmd
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	FLASH_HalfCycleAccessCmd:
  62              	.LFB64:
 271:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 272:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 273:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Enables or disables the Half cycle flash access.
 274:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 275:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  FLASH_HalfCycleAccess: specifies the FLASH Half cycle Access mode.
 276:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be one of the following values:
 277:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_HalfCycleAccess_Enable: FLASH Half Cycle Enable
 278:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_HalfCycleAccess_Disable: FLASH Half Cycle Disable
 279:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval None
 280:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 281:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** void FLASH_HalfCycleAccessCmd(uint32_t FLASH_HalfCycleAccess)
 282:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
  63              		.loc 1 282 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68              	.LVL4:
 283:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
 284:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_HALFCYCLEACCESS_STATE(FLASH_HalfCycleAccess));
 285:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 286:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Enable or disable the Half cycle access */
 287:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->ACR &= ACR_HLFCYA_Mask;
  69              		.loc 1 287 0
  70 0000 044B     		ldr	r3, .L5
  71 0002 1A68     		ldr	r2, [r3]
  72 0004 22F00802 		bic	r2, r2, #8
  73 0008 1A60     		str	r2, [r3]
 288:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->ACR |= FLASH_HalfCycleAccess;
  74              		.loc 1 288 0
  75 000a 1A68     		ldr	r2, [r3]
  76 000c 1043     		orrs	r0, r0, r2
  77              	.LVL5:
  78 000e 1860     		str	r0, [r3]
 289:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
  79              		.loc 1 289 0
  80 0010 7047     		bx	lr
  81              	.L6:
  82 0012 00BF     		.align	2
  83              	.L5:
  84 0014 00200240 		.word	1073881088
  85              		.cfi_endproc
  86              	.LFE64:
  88              		.section	.text.FLASH_PrefetchBufferCmd,"ax",%progbits
  89              		.align	1
  90              		.global	FLASH_PrefetchBufferCmd
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu softvfp
  96              	FLASH_PrefetchBufferCmd:
  97              	.LFB65:
 290:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 291:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 292:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Enables or disables the Prefetch Buffer.
 293:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 294:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  FLASH_PrefetchBuffer: specifies the Prefetch buffer status.
 295:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be one of the following values:
 296:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_PrefetchBuffer_Enable: FLASH Prefetch Buffer Enable
 297:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_PrefetchBuffer_Disable: FLASH Prefetch Buffer Disable
 298:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval None
 299:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 300:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** void FLASH_PrefetchBufferCmd(uint32_t FLASH_PrefetchBuffer)
 301:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
  98              		.loc 1 301 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.LVL6:
 302:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
 303:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_PREFETCHBUFFER_STATE(FLASH_PrefetchBuffer));
 304:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 305:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Enable or disable the Prefetch Buffer */
 306:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->ACR &= ACR_PRFTBE_Mask;
 104              		.loc 1 306 0
 105 0000 044B     		ldr	r3, .L8
 106 0002 1A68     		ldr	r2, [r3]
 107 0004 22F01002 		bic	r2, r2, #16
 108 0008 1A60     		str	r2, [r3]
 307:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->ACR |= FLASH_PrefetchBuffer;
 109              		.loc 1 307 0
 110 000a 1A68     		ldr	r2, [r3]
 111 000c 1043     		orrs	r0, r0, r2
 112              	.LVL7:
 113 000e 1860     		str	r0, [r3]
 308:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 114              		.loc 1 308 0
 115 0010 7047     		bx	lr
 116              	.L9:
 117 0012 00BF     		.align	2
 118              	.L8:
 119 0014 00200240 		.word	1073881088
 120              		.cfi_endproc
 121              	.LFE65:
 123              		.section	.text.FLASH_Unlock,"ax",%progbits
 124              		.align	1
 125              		.global	FLASH_Unlock
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu softvfp
 131              	FLASH_Unlock:
 132              	.LFB66:
 309:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 310:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 311:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Unlocks the FLASH Program Erase Controller.
 312:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 313:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For STM32F10X_XL devices this function unlocks Bank1 and Bank2.
 314:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For all other devices it unlocks Bank1 and it is equivalent 
 315:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *           to FLASH_UnlockBank1 function.. 
 316:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
 317:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval None
 318:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 319:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** void FLASH_Unlock(void)
 320:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 133              		.loc 1 320 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 321:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Authorize the FPEC of Bank1 Access */
 322:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->KEYR = FLASH_KEY1;
 138              		.loc 1 322 0
 139 0000 034B     		ldr	r3, .L11
 140 0002 044A     		ldr	r2, .L11+4
 141 0004 5A60     		str	r2, [r3, #4]
 323:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->KEYR = FLASH_KEY2;
 142              		.loc 1 323 0
 143 0006 02F18832 		add	r2, r2, #-2004318072
 144 000a 5A60     		str	r2, [r3, #4]
 324:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 325:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 326:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Authorize the FPEC of Bank2 Access */
 327:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->KEYR2 = FLASH_KEY1;
 328:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->KEYR2 = FLASH_KEY2;
 329:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 330:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 145              		.loc 1 330 0
 146 000c 7047     		bx	lr
 147              	.L12:
 148 000e 00BF     		.align	2
 149              	.L11:
 150 0010 00200240 		.word	1073881088
 151 0014 23016745 		.word	1164378403
 152              		.cfi_endproc
 153              	.LFE66:
 155              		.section	.text.FLASH_UnlockBank1,"ax",%progbits
 156              		.align	1
 157              		.global	FLASH_UnlockBank1
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu softvfp
 163              	FLASH_UnlockBank1:
 164              	.LFB67:
 331:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 332:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Unlocks the FLASH Bank1 Program Erase Controller.
 333:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 334:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For STM32F10X_XL devices this function unlocks Bank1.
 335:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For all other devices it unlocks Bank1 and it is 
 336:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *           equivalent to FLASH_Unlock function.
 337:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
 338:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval None
 339:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 340:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** void FLASH_UnlockBank1(void)
 341:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 165              		.loc 1 341 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 342:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Authorize the FPEC of Bank1 Access */
 343:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->KEYR = FLASH_KEY1;
 170              		.loc 1 343 0
 171 0000 034B     		ldr	r3, .L14
 172 0002 044A     		ldr	r2, .L14+4
 173 0004 5A60     		str	r2, [r3, #4]
 344:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->KEYR = FLASH_KEY2;
 174              		.loc 1 344 0
 175 0006 02F18832 		add	r2, r2, #-2004318072
 176 000a 5A60     		str	r2, [r3, #4]
 345:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 177              		.loc 1 345 0
 178 000c 7047     		bx	lr
 179              	.L15:
 180 000e 00BF     		.align	2
 181              	.L14:
 182 0010 00200240 		.word	1073881088
 183 0014 23016745 		.word	1164378403
 184              		.cfi_endproc
 185              	.LFE67:
 187              		.section	.text.FLASH_Lock,"ax",%progbits
 188              		.align	1
 189              		.global	FLASH_Lock
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu softvfp
 195              	FLASH_Lock:
 196              	.LFB68:
 346:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 347:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 348:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 349:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Unlocks the FLASH Bank2 Program Erase Controller.
 350:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used only for STM32F10X_XL density devices.
 351:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
 352:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval None
 353:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 354:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** void FLASH_UnlockBank2(void)
 355:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 356:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Authorize the FPEC of Bank2 Access */
 357:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->KEYR2 = FLASH_KEY1;
 358:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->KEYR2 = FLASH_KEY2;
 359:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 360:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 361:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 362:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 363:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 364:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Locks the FLASH Program Erase Controller.
 365:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 366:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For STM32F10X_XL devices this function Locks Bank1 and Bank2.
 367:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For all other devices it Locks Bank1 and it is equivalent 
 368:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *           to FLASH_LockBank1 function.
 369:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
 370:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval None
 371:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 372:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** void FLASH_Lock(void)
 373:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 197              		.loc 1 373 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 374:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Set the Lock Bit to lock the FPEC and the CR of  Bank1 */
 375:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->CR |= CR_LOCK_Set;
 202              		.loc 1 375 0
 203 0000 024A     		ldr	r2, .L17
 204 0002 1369     		ldr	r3, [r2, #16]
 205 0004 43F08003 		orr	r3, r3, #128
 206 0008 1361     		str	r3, [r2, #16]
 376:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 377:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 378:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Set the Lock Bit to lock the FPEC and the CR of  Bank2 */
 379:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->CR2 |= CR_LOCK_Set;
 380:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 381:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 207              		.loc 1 381 0
 208 000a 7047     		bx	lr
 209              	.L18:
 210              		.align	2
 211              	.L17:
 212 000c 00200240 		.word	1073881088
 213              		.cfi_endproc
 214              	.LFE68:
 216              		.section	.text.FLASH_LockBank1,"ax",%progbits
 217              		.align	1
 218              		.global	FLASH_LockBank1
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu softvfp
 224              	FLASH_LockBank1:
 225              	.LFB69:
 382:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 383:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 384:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Locks the FLASH Bank1 Program Erase Controller.
 385:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   this function can be used for all STM32F10x devices.
 386:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For STM32F10X_XL devices this function Locks Bank1.
 387:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For all other devices it Locks Bank1 and it is equivalent 
 388:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *           to FLASH_Lock function.
 389:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
 390:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval None
 391:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 392:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** void FLASH_LockBank1(void)
 393:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 226              		.loc 1 393 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 394:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Set the Lock Bit to lock the FPEC and the CR of  Bank1 */
 395:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->CR |= CR_LOCK_Set;
 231              		.loc 1 395 0
 232 0000 024A     		ldr	r2, .L20
 233 0002 1369     		ldr	r3, [r2, #16]
 234 0004 43F08003 		orr	r3, r3, #128
 235 0008 1361     		str	r3, [r2, #16]
 396:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 236              		.loc 1 396 0
 237 000a 7047     		bx	lr
 238              	.L21:
 239              		.align	2
 240              	.L20:
 241 000c 00200240 		.word	1073881088
 242              		.cfi_endproc
 243              	.LFE69:
 245              		.section	.text.FLASH_GetUserOptionByte,"ax",%progbits
 246              		.align	1
 247              		.global	FLASH_GetUserOptionByte
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu softvfp
 253              	FLASH_GetUserOptionByte:
 254              	.LFB80:
 397:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 398:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 399:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 400:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Locks the FLASH Bank2 Program Erase Controller.
 401:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used only for STM32F10X_XL density devices.
 402:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
 403:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval None
 404:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 405:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** void FLASH_LockBank2(void)
 406:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 407:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Set the Lock Bit to lock the FPEC and the CR of  Bank2 */
 408:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->CR2 |= CR_LOCK_Set;
 409:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 410:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 411:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 412:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 413:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Erases a specified FLASH page.
 414:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 415:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  Page_Address: The page address to be erased.
 416:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG,
 417:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 418:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 419:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_ErasePage(uint32_t Page_Address)
 420:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 421:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 422:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
 423:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_ADDRESS(Page_Address));
 424:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 425:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 426:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(Page_Address < FLASH_BANK1_END_ADDRESS)  
 427:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 428:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 429:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastBank1Operation(EraseTimeout);
 430:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
 431:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     { 
 432:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the previous operation is completed, proceed to erase the page */
 433:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR|= CR_PER_Set;
 434:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->AR = Page_Address; 
 435:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR|= CR_STRT_Set;
 436:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 437:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
 438:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastBank1Operation(EraseTimeout);
 439:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 440:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Disable the PER Bit */
 441:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_PER_Reset;
 442:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 443:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 444:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else
 445:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 446:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 447:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastBank2Operation(EraseTimeout);
 448:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
 449:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     { 
 450:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the previous operation is completed, proceed to erase the page */
 451:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR2|= CR_PER_Set;
 452:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->AR2 = Page_Address; 
 453:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR2|= CR_STRT_Set;
 454:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 455:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
 456:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastBank2Operation(EraseTimeout);
 457:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       
 458:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Disable the PER Bit */
 459:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR2 &= CR_PER_Reset;
 460:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 461:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 462:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #else
 463:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
 464:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastOperation(EraseTimeout);
 465:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 466:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 467:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   { 
 468:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* if the previous operation is completed, proceed to erase the page */
 469:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR|= CR_PER_Set;
 470:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->AR = Page_Address; 
 471:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR|= CR_STRT_Set;
 472:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 473:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 474:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastOperation(EraseTimeout);
 475:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 476:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Disable the PER Bit */
 477:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR &= CR_PER_Reset;
 478:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 479:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 480:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 481:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Erase Status */
 482:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
 483:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 484:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 485:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 486:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Erases all FLASH pages.
 487:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 488:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
 489:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 490:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 491:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 492:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_EraseAllPages(void)
 493:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 494:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 495:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 496:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 497:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
 498:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastBank1Operation(EraseTimeout);
 499:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 500:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 501:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 502:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* if the previous operation is completed, proceed to erase all pages */
 503:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR |= CR_MER_Set;
 504:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR |= CR_STRT_Set;
 505:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 506:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 507:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastBank1Operation(EraseTimeout);
 508:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 509:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Disable the MER Bit */
 510:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR &= CR_MER_Reset;
 511:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }    
 512:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 513:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 514:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* if the previous operation is completed, proceed to erase all pages */
 515:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR2 |= CR_MER_Set;
 516:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR2 |= CR_STRT_Set;
 517:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 518:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 519:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastBank2Operation(EraseTimeout);
 520:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 521:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Disable the MER Bit */
 522:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR2 &= CR_MER_Reset;
 523:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 524:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #else
 525:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
 526:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastOperation(EraseTimeout);
 527:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 528:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 529:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* if the previous operation is completed, proceed to erase all pages */
 530:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR |= CR_MER_Set;
 531:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR |= CR_STRT_Set;
 532:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 533:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 534:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastOperation(EraseTimeout);
 535:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 536:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Disable the MER Bit */
 537:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR &= CR_MER_Reset;
 538:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 539:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 540:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 541:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Erase Status */
 542:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
 543:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 544:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 545:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 546:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Erases all Bank1 FLASH pages.
 547:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 548:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For STM32F10X_XL devices this function erases all Bank1 pages.
 549:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For all other devices it erases all Bank1 pages and it is equivalent 
 550:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *           to FLASH_EraseAllPages function.
 551:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
 552:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 553:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 554:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 555:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_EraseAllBank1Pages(void)
 556:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 557:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 558:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
 559:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastBank1Operation(EraseTimeout);
 560:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 561:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 562:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 563:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* if the previous operation is completed, proceed to erase all pages */
 564:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR |= CR_MER_Set;
 565:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR |= CR_STRT_Set;
 566:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 567:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 568:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastBank1Operation(EraseTimeout);
 569:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 570:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Disable the MER Bit */
 571:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR &= CR_MER_Reset;
 572:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }    
 573:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Erase Status */
 574:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
 575:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 576:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 577:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 578:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 579:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Erases all Bank2 FLASH pages.
 580:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used only for STM32F10x_XL density devices.
 581:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
 582:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 583:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 584:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 585:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_EraseAllBank2Pages(void)
 586:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 587:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 588:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
 589:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastBank2Operation(EraseTimeout);
 590:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 591:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 592:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 593:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* if the previous operation is completed, proceed to erase all pages */
 594:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR2 |= CR_MER_Set;
 595:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR2 |= CR_STRT_Set;
 596:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 597:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 598:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastBank2Operation(EraseTimeout);
 599:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 600:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Disable the MER Bit */
 601:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR2 &= CR_MER_Reset;
 602:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }    
 603:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Erase Status */
 604:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
 605:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 606:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 607:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 608:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 609:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Erases the FLASH option bytes.
 610:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This functions erases all option bytes except the Read protection (RDP). 
 611:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 612:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
 613:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 614:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 615:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 616:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_EraseOptionBytes(void)
 617:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 618:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   uint16_t rdptmp = RDP_Key;
 619:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 620:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 621:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 622:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Get the actual read protection Option Byte value */ 
 623:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(FLASH_GetReadOutProtectionStatus() != RESET)
 624:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 625:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     rdptmp = 0x00;  
 626:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 627:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 628:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
 629:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastOperation(EraseTimeout);
 630:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 631:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 632:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Authorize the small information block programming */
 633:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY1;
 634:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY2;
 635:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 636:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* if the previous operation is completed, proceed to erase the option bytes */
 637:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_OPTER_Set;
 638:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_STRT_Set;
 639:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 640:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastOperation(EraseTimeout);
 641:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 642:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
 643:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 644:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the erase operation is completed, disable the OPTER Bit */
 645:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_OPTER_Reset;
 646:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****        
 647:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Enable the Option Bytes Programming operation */
 648:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR |= CR_OPTPG_Set;
 649:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Restore the last read protection Option Byte value */
 650:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       OB->RDP = (uint16_t)rdptmp; 
 651:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
 652:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastOperation(ProgramTimeout);
 653:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  
 654:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if(status != FLASH_TIMEOUT)
 655:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
 656:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* if the program operation is completed, disable the OPTPG Bit */
 657:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         FLASH->CR &= CR_OPTPG_Reset;
 658:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
 659:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 660:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else
 661:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 662:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if (status != FLASH_TIMEOUT)
 663:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
 664:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* Disable the OPTPG Bit */
 665:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         FLASH->CR &= CR_OPTPG_Reset;
 666:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
 667:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }  
 668:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 669:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the erase status */
 670:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
 671:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 672:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 673:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** // [ILG]
 674:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #if defined ( __GNUC__ )
 675:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #pragma GCC diagnostic push
 676:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #pragma GCC diagnostic ignored "-Wconversion"
 677:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif
 678:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 679:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 680:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Programs a word at a specified address.
 681:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 682:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  Address: specifies the address to be programmed.
 683:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  Data: specifies the data to be programmed.
 684:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 685:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
 686:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 687:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
 688:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 689:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 690:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   __IO uint32_t tmp = 0;
 691:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 692:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
 693:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 694:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 695:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 696:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(Address < FLASH_BANK1_END_ADDRESS - 2)
 697:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   { 
 698:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 699:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastBank1Operation(ProgramTimeout); 
 700:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
 701:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 702:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the previous operation is completed, proceed to program the new first 
 703:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         half word */
 704:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR |= CR_PG_Set;
 705:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 706:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       *(__IO uint16_t*)Address = (uint16_t)Data;
 707:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
 708:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastOperation(ProgramTimeout);
 709:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  
 710:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if(status == FLASH_COMPLETE)
 711:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
 712:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* if the previous operation is completed, proceed to program the new second 
 713:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         half word */
 714:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         tmp = Address + 2;
 715:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 716:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         *(__IO uint16_t*) tmp = Data >> 16;
 717:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 718:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* Wait for last operation to be completed */
 719:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         status = FLASH_WaitForLastOperation(ProgramTimeout);
 720:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         
 721:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* Disable the PG Bit */
 722:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         FLASH->CR &= CR_PG_Reset;
 723:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
 724:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       else
 725:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
 726:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* Disable the PG Bit */
 727:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         FLASH->CR &= CR_PG_Reset;
 728:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****        }
 729:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 730:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 731:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else if(Address == (FLASH_BANK1_END_ADDRESS - 1))
 732:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 733:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 734:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastBank1Operation(ProgramTimeout);
 735:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 736:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
 737:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 738:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the previous operation is completed, proceed to program the new first 
 739:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         half word */
 740:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR |= CR_PG_Set;
 741:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 742:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       *(__IO uint16_t*)Address = (uint16_t)Data;
 743:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 744:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
 745:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastBank1Operation(ProgramTimeout);
 746:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       
 747:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 	  /* Disable the PG Bit */
 748:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_PG_Reset;
 749:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 750:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else
 751:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 752:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Disable the PG Bit */
 753:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_PG_Reset;
 754:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 755:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 756:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 757:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 758:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 759:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
 760:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 761:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the previous operation is completed, proceed to program the new second 
 762:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       half word */
 763:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR2 |= CR_PG_Set;
 764:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       tmp = Address + 2;
 765:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 766:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       *(__IO uint16_t*) tmp = Data >> 16;
 767:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 768:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
 769:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 770:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         
 771:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Disable the PG Bit */
 772:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR2 &= CR_PG_Reset;
 773:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 774:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else
 775:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 776:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Disable the PG Bit */
 777:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR2 &= CR_PG_Reset;
 778:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 779:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 780:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else
 781:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 782:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 783:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 784:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 785:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
 786:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 787:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the previous operation is completed, proceed to program the new first 
 788:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         half word */
 789:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR2 |= CR_PG_Set;
 790:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 791:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       *(__IO uint16_t*)Address = (uint16_t)Data;
 792:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
 793:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 794:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  
 795:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if(status == FLASH_COMPLETE)
 796:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
 797:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* if the previous operation is completed, proceed to program the new second 
 798:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         half word */
 799:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         tmp = Address + 2;
 800:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 801:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         *(__IO uint16_t*) tmp = Data >> 16;
 802:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 803:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* Wait for last operation to be completed */
 804:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 805:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         
 806:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* Disable the PG Bit */
 807:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         FLASH->CR2 &= CR_PG_Reset;
 808:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
 809:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       else
 810:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
 811:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* Disable the PG Bit */
 812:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         FLASH->CR2 &= CR_PG_Reset;
 813:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
 814:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 815:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 816:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #else
 817:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
 818:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastOperation(ProgramTimeout);
 819:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 820:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 821:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 822:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* if the previous operation is completed, proceed to program the new first 
 823:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     half word */
 824:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_PG_Set;
 825:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 826:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     *(__IO uint16_t*)Address = (uint16_t)Data;
 827:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 828:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastOperation(ProgramTimeout);
 829:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  
 830:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
 831:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 832:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the previous operation is completed, proceed to program the new second 
 833:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       half word */
 834:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       tmp = Address + 2;
 835:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 836:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       // [ILG]
 837:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       #if defined ( __GNUC__ )
 838:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       #pragma GCC diagnostic push
 839:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       #pragma GCC diagnostic ignored "-Wconversion"
 840:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       #endif
 841:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 842:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       *(__IO uint16_t*) tmp = Data >> 16;
 843:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 844:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       // [ILG]
 845:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       #if defined ( __GNUC__ )
 846:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       #pragma GCC diagnostic pop
 847:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       #endif
 848:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 849:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
 850:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastOperation(ProgramTimeout);
 851:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         
 852:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Disable the PG Bit */
 853:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_PG_Reset;
 854:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 855:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else
 856:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 857:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Disable the PG Bit */
 858:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_PG_Reset;
 859:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 860:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }         
 861:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 862:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    
 863:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Program Status */
 864:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
 865:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 866:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 867:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** // [ILG]
 868:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #if defined(__GNUC__)
 869:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #pragma GCC diagnostic pop
 870:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif
 871:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 872:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 873:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Programs a half word at a specified address.
 874:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 875:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  Address: specifies the address to be programmed.
 876:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  Data: specifies the data to be programmed.
 877:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 878:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
 879:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 880:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
 881:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 882:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 883:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
 884:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 885:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 886:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 887:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
 888:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastOperation(ProgramTimeout);
 889:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 890:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(Address < FLASH_BANK1_END_ADDRESS)
 891:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 892:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
 893:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 894:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the previous operation is completed, proceed to program the new data */
 895:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR |= CR_PG_Set;
 896:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 897:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       *(__IO uint16_t*)Address = Data;
 898:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
 899:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastBank1Operation(ProgramTimeout);
 900:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 901:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Disable the PG Bit */
 902:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_PG_Reset;
 903:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 904:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 905:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else
 906:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 907:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
 908:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 909:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the previous operation is completed, proceed to program the new data */
 910:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR2 |= CR_PG_Set;
 911:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 912:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       *(__IO uint16_t*)Address = Data;
 913:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
 914:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 915:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 916:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Disable the PG Bit */
 917:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR2 &= CR_PG_Reset;
 918:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 919:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 920:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #else
 921:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
 922:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastOperation(ProgramTimeout);
 923:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 924:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 925:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 926:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 927:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_PG_Set;
 928:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 929:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     *(__IO uint16_t*)Address = Data;
 930:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 931:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastOperation(ProgramTimeout);
 932:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 933:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Disable the PG Bit */
 934:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR &= CR_PG_Reset;
 935:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   } 
 936:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif  /* STM32F10X_XL */
 937:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 938:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Program Status */
 939:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
 940:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 941:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 942:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 943:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Programs a half word at a specified Option Byte Data address.
 944:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 945:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  Address: specifies the address to be programmed.
 946:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be 0x1FFFF804 or 0x1FFFF806. 
 947:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  Data: specifies the data to be programmed.
 948:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 949:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
 950:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 951:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_ProgramOptionByteData(uint32_t Address, uint8_t Data)
 952:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 953:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 954:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
 955:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_OB_DATA_ADDRESS(Address));
 956:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastOperation(ProgramTimeout);
 957:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 958:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 959:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 960:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Authorize the small information block programming */
 961:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY1;
 962:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY2;
 963:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Enables the Option Bytes Programming operation */
 964:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_OPTPG_Set; 
 965:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     *(__IO uint16_t*)Address = Data;
 966:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 967:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 968:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastOperation(ProgramTimeout);
 969:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status != FLASH_TIMEOUT)
 970:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 971:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the program operation is completed, disable the OPTPG Bit */
 972:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_OPTPG_Reset;
 973:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 974:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 975:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Option Byte Data Program Status */
 976:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
 977:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 978:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 979:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
 980:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Write protects the desired pages
 981:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
 982:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  FLASH_Pages: specifies the address of the pages to be write protected.
 983:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be:
 984:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg For @b STM32_Low-density_devices: value between FLASH_WRProt_Pages0to3 and FLASH_WRPro
 985:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg For @b STM32_Medium-density_devices: value between FLASH_WRProt_Pages0to3
 986:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *       and FLASH_WRProt_Pages124to127
 987:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg For @b STM32_High-density_devices: value between FLASH_WRProt_Pages0to1 and
 988:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *       FLASH_WRProt_Pages60to61 or FLASH_WRProt_Pages62to255
 989:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg For @b STM32_Connectivity_line_devices: value between FLASH_WRProt_Pages0to1 and
 990:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *       FLASH_WRProt_Pages60to61 or FLASH_WRProt_Pages62to127    
 991:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg For @b STM32_XL-density_devices: value between FLASH_WRProt_Pages0to1 and
 992:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *       FLASH_WRProt_Pages60to61 or FLASH_WRProt_Pages62to511
 993:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_WRProt_AllPages
 994:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 995:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 996:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
 997:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_EnableWriteProtection(uint32_t FLASH_Pages)
 998:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 999:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   uint16_t WRP0_Data = 0xFFFF, WRP1_Data = 0xFFFF, WRP2_Data = 0xFFFF, WRP3_Data = 0xFFFF;
1000:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1001:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1002:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1003:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
1004:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_WRPROT_PAGE(FLASH_Pages));
1005:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1006:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Pages = (uint32_t)(~FLASH_Pages);
1007:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
1008:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
1009:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   WRP2_Data = (uint16_t)((FLASH_Pages & WRP2_Mask) >> 16);
1010:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   WRP3_Data = (uint16_t)((FLASH_Pages & WRP3_Mask) >> 24);
1011:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1012:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
1013:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastOperation(ProgramTimeout);
1014:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1015:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
1016:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1017:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Authorizes the small information block programming */
1018:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY1;
1019:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY2;
1020:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_OPTPG_Set;
1021:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(WRP0_Data != 0xFF)
1022:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1023:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       OB->WRP0 = WRP0_Data;
1024:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       
1025:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
1026:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastOperation(ProgramTimeout);
1027:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1028:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if((status == FLASH_COMPLETE) && (WRP1_Data != 0xFF))
1029:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1030:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       OB->WRP1 = WRP1_Data;
1031:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       
1032:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
1033:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastOperation(ProgramTimeout);
1034:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1035:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if((status == FLASH_COMPLETE) && (WRP2_Data != 0xFF))
1036:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1037:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       OB->WRP2 = WRP2_Data;
1038:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       
1039:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
1040:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastOperation(ProgramTimeout);
1041:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1042:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
1043:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if((status == FLASH_COMPLETE)&& (WRP3_Data != 0xFF))
1044:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1045:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       OB->WRP3 = WRP3_Data;
1046:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      
1047:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
1048:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastOperation(ProgramTimeout);
1049:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1050:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****           
1051:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status != FLASH_TIMEOUT)
1052:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1053:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the program operation is completed, disable the OPTPG Bit */
1054:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_OPTPG_Reset;
1055:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1056:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   } 
1057:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the write protection operation Status */
1058:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;       
1059:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
1060:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1061:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1062:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Enables or disables the read out protection.
1063:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   If the user has already programmed the other option bytes before calling 
1064:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   this function, he must re-program them since this function erases all option bytes.
1065:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
1066:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  Newstate: new state of the ReadOut Protection.
1067:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be: ENABLE or DISABLE.
1068:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
1069:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
1070:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1071:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_ReadOutProtection(FunctionalState NewState)
1072:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
1073:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1074:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
1075:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1076:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastOperation(EraseTimeout);
1077:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
1078:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1079:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Authorizes the small information block programming */
1080:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY1;
1081:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY2;
1082:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_OPTER_Set;
1083:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_STRT_Set;
1084:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
1085:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastOperation(EraseTimeout);
1086:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
1087:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1088:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the erase operation is completed, disable the OPTER Bit */
1089:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_OPTER_Reset;
1090:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Enable the Option Bytes Programming operation */
1091:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR |= CR_OPTPG_Set; 
1092:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if(NewState != DISABLE)
1093:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1094:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         OB->RDP = 0x00;
1095:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1096:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       else
1097:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1098:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         OB->RDP = RDP_Key;  
1099:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1100:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
1101:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       status = FLASH_WaitForLastOperation(EraseTimeout); 
1102:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
1103:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if(status != FLASH_TIMEOUT)
1104:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1105:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* if the program operation is completed, disable the OPTPG Bit */
1106:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         FLASH->CR &= CR_OPTPG_Reset;
1107:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1108:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1109:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else 
1110:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1111:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if(status != FLASH_TIMEOUT)
1112:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1113:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         /* Disable the OPTER Bit */
1114:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         FLASH->CR &= CR_OPTER_Reset;
1115:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1116:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1117:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1118:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the protection operation Status */
1119:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;       
1120:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
1121:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1122:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1123:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Programs the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.
1124:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
1125:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  OB_IWDG: Selects the IWDG mode
1126:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be one of the following values:
1127:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg OB_IWDG_SW: Software IWDG selected
1128:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg OB_IWDG_HW: Hardware IWDG selected
1129:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  OB_STOP: Reset event when entering STOP mode.
1130:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be one of the following values:
1131:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg OB_STOP_NoRST: No reset generated when entering in STOP
1132:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg OB_STOP_RST: Reset generated when entering in STOP
1133:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  OB_STDBY: Reset event when entering Standby mode.
1134:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be one of the following values:
1135:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg OB_STDBY_NoRST: No reset generated when entering in STANDBY
1136:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg OB_STDBY_RST: Reset generated when entering in STANDBY
1137:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG, 
1138:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
1139:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1140:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_UserOptionByteConfig(uint16_t OB_IWDG, uint16_t OB_STOP, uint16_t OB_STDBY)
1141:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
1142:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE; 
1143:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1144:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
1145:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
1146:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_OB_STOP_SOURCE(OB_STOP));
1147:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));
1148:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1149:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Authorize the small information block programming */
1150:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->OPTKEYR = FLASH_KEY1;
1151:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->OPTKEYR = FLASH_KEY2;
1152:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1153:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
1154:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastOperation(ProgramTimeout);
1155:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1156:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
1157:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {  
1158:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Enable the Option Bytes Programming operation */
1159:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_OPTPG_Set; 
1160:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****            
1161:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     OB->USER = OB_IWDG | (uint16_t)(OB_STOP | (uint16_t)(OB_STDBY | ((uint16_t)0xF8))); 
1162:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1163:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
1164:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastOperation(ProgramTimeout);
1165:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status != FLASH_TIMEOUT)
1166:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1167:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the program operation is completed, disable the OPTPG Bit */
1168:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_OPTPG_Reset;
1169:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1170:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }    
1171:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Option Byte program Status */
1172:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
1173:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
1174:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1175:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
1176:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1177:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Configures to boot from Bank1 or Bank2.  
1178:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used only for STM32F10x_XL density devices.
1179:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  FLASH_BOOT: select the FLASH Bank to boot from.
1180:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be one of the following values:
1181:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_BOOT_Bank1: At startup, if boot pins are set in boot from user Flash
1182:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *        position and this parameter is selected the device will boot from Bank1(Default).
1183:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_BOOT_Bank2: At startup, if boot pins are set in boot from user Flash
1184:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *        position and this parameter is selected the device will boot from Bank2 or Bank1,
1185:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *        depending on the activation of the bank. The active banks are checked in
1186:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *        the following order: Bank2, followed by Bank1.
1187:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *        The active bank is recognized by the value programmed at the base address
1188:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *        of the respective bank (corresponding to the initial stack pointer value
1189:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *        in the interrupt vector table).
1190:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *        For more information, please refer to AN2606 from www.st.com.    
1191:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG, 
1192:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
1193:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1194:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_BootConfig(uint16_t FLASH_BOOT)
1195:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** { 
1196:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE; 
1197:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_BOOT(FLASH_BOOT));
1198:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Authorize the small information block programming */
1199:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->OPTKEYR = FLASH_KEY1;
1200:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->OPTKEYR = FLASH_KEY2;
1201:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1202:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for last operation to be completed */
1203:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_WaitForLastOperation(ProgramTimeout);
1204:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1205:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
1206:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {  
1207:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Enable the Option Bytes Programming operation */
1208:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_OPTPG_Set; 
1209:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1210:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(FLASH_BOOT == FLASH_BOOT_Bank1)
1211:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1212:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       OB->USER |= OB_USER_BFB2;
1213:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1214:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else
1215:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1216:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       OB->USER &= (uint16_t)(~(uint16_t)(OB_USER_BFB2));
1217:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1218:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
1219:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_WaitForLastOperation(ProgramTimeout);
1220:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status != FLASH_TIMEOUT)
1221:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1222:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* if the program operation is completed, disable the OPTPG Bit */
1223:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= CR_OPTPG_Reset;
1224:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1225:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }    
1226:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Option Byte program Status */
1227:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
1228:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
1229:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
1230:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1231:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1232:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Returns the FLASH User Option Bytes values.
1233:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
1234:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
1235:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval The FLASH User Option Bytes values:IWDG_SW(Bit0), RST_STOP(Bit1)
1236:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         and RST_STDBY(Bit2).
1237:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1238:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** uint32_t FLASH_GetUserOptionByte(void)
1239:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 255              		.loc 1 1239 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
1240:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the User Option Byte */
1241:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return (uint32_t)(FLASH->OBR >> 2);
 260              		.loc 1 1241 0
 261 0000 014B     		ldr	r3, .L23
 262 0002 D869     		ldr	r0, [r3, #28]
1242:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 263              		.loc 1 1242 0
 264 0004 8008     		lsrs	r0, r0, #2
 265 0006 7047     		bx	lr
 266              	.L24:
 267              		.align	2
 268              	.L23:
 269 0008 00200240 		.word	1073881088
 270              		.cfi_endproc
 271              	.LFE80:
 273              		.section	.text.FLASH_GetWriteProtectionOptionByte,"ax",%progbits
 274              		.align	1
 275              		.global	FLASH_GetWriteProtectionOptionByte
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu softvfp
 281              	FLASH_GetWriteProtectionOptionByte:
 282              	.LFB81:
1243:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1244:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1245:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Returns the FLASH Write Protection Option Bytes Register value.
1246:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
1247:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
1248:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval The FLASH Write Protection  Option Bytes Register value
1249:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1250:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** uint32_t FLASH_GetWriteProtectionOptionByte(void)
1251:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 283              		.loc 1 1251 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
1252:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Flash write protection Register value */
1253:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return (uint32_t)(FLASH->WRPR);
 288              		.loc 1 1253 0
 289 0000 014B     		ldr	r3, .L26
 290 0002 186A     		ldr	r0, [r3, #32]
1254:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 291              		.loc 1 1254 0
 292 0004 7047     		bx	lr
 293              	.L27:
 294 0006 00BF     		.align	2
 295              	.L26:
 296 0008 00200240 		.word	1073881088
 297              		.cfi_endproc
 298              	.LFE81:
 300              		.section	.text.FLASH_GetReadOutProtectionStatus,"ax",%progbits
 301              		.align	1
 302              		.global	FLASH_GetReadOutProtectionStatus
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu softvfp
 308              	FLASH_GetReadOutProtectionStatus:
 309              	.LFB82:
1255:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1256:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1257:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Checks whether the FLASH Read Out Protection Status is set or not.
1258:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
1259:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
1260:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH ReadOut Protection Status(SET or RESET)
1261:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1262:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FlagStatus FLASH_GetReadOutProtectionStatus(void)
1263:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 310              		.loc 1 1263 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL8:
1264:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FlagStatus readoutstatus = RESET;
1265:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if ((FLASH->OBR & RDPRT_Mask) != (uint32_t)RESET)
 316              		.loc 1 1265 0
 317 0000 044B     		ldr	r3, .L32
 318 0002 DB69     		ldr	r3, [r3, #28]
 319 0004 13F0020F 		tst	r3, #2
 320 0008 01D1     		bne	.L31
1266:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1267:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     readoutstatus = SET;
1268:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1269:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else
1270:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1271:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     readoutstatus = RESET;
 321              		.loc 1 1271 0
 322 000a 0020     		movs	r0, #0
 323              	.LVL9:
1272:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1273:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return readoutstatus;
1274:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 324              		.loc 1 1274 0
 325 000c 7047     		bx	lr
 326              	.LVL10:
 327              	.L31:
1267:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 328              		.loc 1 1267 0
 329 000e 0120     		movs	r0, #1
 330 0010 7047     		bx	lr
 331              	.L33:
 332 0012 00BF     		.align	2
 333              	.L32:
 334 0014 00200240 		.word	1073881088
 335              		.cfi_endproc
 336              	.LFE82:
 338              		.section	.text.FLASH_GetPrefetchBufferStatus,"ax",%progbits
 339              		.align	1
 340              		.global	FLASH_GetPrefetchBufferStatus
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu softvfp
 346              	FLASH_GetPrefetchBufferStatus:
 347              	.LFB83:
1275:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1276:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1277:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Checks whether the FLASH Prefetch Buffer status is set or not.
1278:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
1279:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
1280:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Prefetch Buffer Status (SET or RESET).
1281:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1282:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FlagStatus FLASH_GetPrefetchBufferStatus(void)
1283:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 348              		.loc 1 1283 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353              	.LVL11:
1284:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FlagStatus bitstatus = RESET;
1285:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1286:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if ((FLASH->ACR & ACR_PRFTBS_Mask) != (uint32_t)RESET)
 354              		.loc 1 1286 0
 355 0000 044B     		ldr	r3, .L38
 356 0002 1B68     		ldr	r3, [r3]
 357 0004 13F0200F 		tst	r3, #32
 358 0008 01D1     		bne	.L37
1287:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1288:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     bitstatus = SET;
1289:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1290:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else
1291:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1292:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     bitstatus = RESET;
 359              		.loc 1 1292 0
 360 000a 0020     		movs	r0, #0
 361              	.LVL12:
1293:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1294:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the new state of FLASH Prefetch Buffer Status (SET or RESET) */
1295:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return bitstatus; 
1296:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 362              		.loc 1 1296 0
 363 000c 7047     		bx	lr
 364              	.LVL13:
 365              	.L37:
1288:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 366              		.loc 1 1288 0
 367 000e 0120     		movs	r0, #1
 368 0010 7047     		bx	lr
 369              	.L39:
 370 0012 00BF     		.align	2
 371              	.L38:
 372 0014 00200240 		.word	1073881088
 373              		.cfi_endproc
 374              	.LFE83:
 376              		.section	.text.FLASH_ITConfig,"ax",%progbits
 377              		.align	1
 378              		.global	FLASH_ITConfig
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu softvfp
 384              	FLASH_ITConfig:
 385              	.LFB84:
1297:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1298:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1299:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Enables or disables the specified FLASH interrupts.
1300:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
1301:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For STM32F10X_XL devices, enables or disables the specified FLASH interrupts
1302:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****               for Bank1 and Bank2.
1303:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For other devices it enables or disables the specified FLASH interrupts for Bank1.
1304:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  FLASH_IT: specifies the FLASH interrupt sources to be enabled or disabled.
1305:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be any combination of the following values:
1306:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_IT_ERROR: FLASH Error Interrupt
1307:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_IT_EOP: FLASH end of operation Interrupt
1308:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  NewState: new state of the specified Flash interrupts.
1309:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be: ENABLE or DISABLE.      
1310:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval None 
1311:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1312:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** void FLASH_ITConfig(uint32_t FLASH_IT, FunctionalState NewState)
1313:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 386              		.loc 1 1313 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 391              	.LVL14:
1314:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
1315:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
1316:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_IT(FLASH_IT)); 
1317:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1318:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1319:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if((FLASH_IT & 0x80000000) != 0x0)
1320:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1321:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(NewState != DISABLE)
1322:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1323:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Enable the interrupt sources */
1324:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR2 |= (FLASH_IT & 0x7FFFFFFF);
1325:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1326:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else
1327:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1328:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Disable the interrupt sources */
1329:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR2 &= ~(uint32_t)(FLASH_IT & 0x7FFFFFFF);
1330:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1331:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1332:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else
1333:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1334:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(NewState != DISABLE)
1335:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1336:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Enable the interrupt sources */
1337:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR |= FLASH_IT;
1338:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1339:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else
1340:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1341:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Disable the interrupt sources */
1342:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       FLASH->CR &= ~(uint32_t)FLASH_IT;
1343:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1344:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1345:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #else
1346:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
1347:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_IT(FLASH_IT)); 
1348:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1349:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1350:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(NewState != DISABLE)
 392              		.loc 1 1350 0
 393 0000 29B9     		cbnz	r1, .L43
1351:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1352:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Enable the interrupt sources */
1353:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= FLASH_IT;
1354:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1355:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else
1356:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1357:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Disable the interrupt sources */
1358:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR &= ~(uint32_t)FLASH_IT;
 394              		.loc 1 1358 0
 395 0002 054A     		ldr	r2, .L44
 396 0004 1369     		ldr	r3, [r2, #16]
 397 0006 23EA0000 		bic	r0, r3, r0
 398              	.LVL15:
 399 000a 1061     		str	r0, [r2, #16]
1359:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1360:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
1361:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 400              		.loc 1 1361 0
 401 000c 7047     		bx	lr
 402              	.LVL16:
 403              	.L43:
1353:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 404              		.loc 1 1353 0
 405 000e 024A     		ldr	r2, .L44
 406 0010 1369     		ldr	r3, [r2, #16]
 407 0012 1843     		orrs	r0, r0, r3
 408              	.LVL17:
 409 0014 1061     		str	r0, [r2, #16]
 410 0016 7047     		bx	lr
 411              	.L45:
 412              		.align	2
 413              	.L44:
 414 0018 00200240 		.word	1073881088
 415              		.cfi_endproc
 416              	.LFE84:
 418              		.section	.text.FLASH_GetFlagStatus,"ax",%progbits
 419              		.align	1
 420              		.global	FLASH_GetFlagStatus
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu softvfp
 426              	FLASH_GetFlagStatus:
 427              	.LFB85:
1362:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1363:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1364:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Checks whether the specified FLASH flag is set or not.
1365:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
1366:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For STM32F10X_XL devices, this function checks whether the specified 
1367:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *           Bank1 or Bank2 flag is set or not.
1368:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For other devices, it checks whether the specified Bank1 flag is 
1369:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *           set or not.
1370:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flag to check.
1371:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be one of the following values:
1372:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_FLAG_BSY: FLASH Busy flag           
1373:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_FLAG_PGERR: FLASH Program error flag       
1374:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_FLAG_WRPRTERR: FLASH Write protected error flag      
1375:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_FLAG_EOP: FLASH End of Operation flag           
1376:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_FLAG_OPTERR:  FLASH Option Byte error flag     
1377:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval The new state of FLASH_FLAG (SET or RESET).
1378:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1379:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FlagStatus FLASH_GetFlagStatus(uint32_t FLASH_FLAG)
1380:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 428              		.loc 1 1380 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433              	.LVL18:
1381:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FlagStatus bitstatus = RESET;
1382:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1383:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
1384:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
1385:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_GET_FLAG(FLASH_FLAG)) ;
1386:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(FLASH_FLAG == FLASH_FLAG_OPTERR) 
1387:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1388:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if((FLASH->OBR & FLASH_FLAG_OPTERR) != (uint32_t)RESET)
1389:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1390:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       bitstatus = SET;
1391:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1392:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else
1393:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1394:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       bitstatus = RESET;
1395:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1396:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1397:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else
1398:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1399:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if((FLASH_FLAG & 0x80000000) != 0x0)
1400:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1401:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if((FLASH->SR2 & FLASH_FLAG) != (uint32_t)RESET)
1402:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1403:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         bitstatus = SET;
1404:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1405:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       else
1406:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1407:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         bitstatus = RESET;
1408:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1409:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1410:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else
1411:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1412:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if((FLASH->SR & FLASH_FLAG) != (uint32_t)RESET)
1413:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1414:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         bitstatus = SET;
1415:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1416:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       else
1417:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1418:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         bitstatus = RESET;
1419:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1420:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1421:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1422:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #else
1423:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
1424:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_GET_FLAG(FLASH_FLAG)) ;
1425:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(FLASH_FLAG == FLASH_FLAG_OPTERR) 
 434              		.loc 1 1425 0
 435 0000 0128     		cmp	r0, #1
 436 0002 05D0     		beq	.L51
1426:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1427:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if((FLASH->OBR & FLASH_FLAG_OPTERR) != (uint32_t)RESET)
1428:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1429:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       bitstatus = SET;
1430:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1431:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else
1432:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1433:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       bitstatus = RESET;
1434:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1435:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1436:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else
1437:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1438:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    if((FLASH->SR & FLASH_FLAG) != (uint32_t)RESET)
 437              		.loc 1 1438 0
 438 0004 074B     		ldr	r3, .L53
 439 0006 DB68     		ldr	r3, [r3, #12]
 440 0008 0342     		tst	r3, r0
 441 000a 07D1     		bne	.L52
1439:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1440:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       bitstatus = SET;
1441:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1442:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else
1443:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1444:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       bitstatus = RESET;
 442              		.loc 1 1444 0
 443 000c 0020     		movs	r0, #0
 444              	.LVL19:
1445:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1446:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1447:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
1448:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1449:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the new state of FLASH_FLAG (SET or RESET) */
1450:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return bitstatus;
1451:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 445              		.loc 1 1451 0
 446 000e 7047     		bx	lr
 447              	.LVL20:
 448              	.L51:
1427:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 449              		.loc 1 1427 0
 450 0010 044B     		ldr	r3, .L53
 451 0012 DB69     		ldr	r3, [r3, #28]
 452 0014 13F0010F 		tst	r3, #1
 453 0018 02D0     		beq	.L49
 454 001a 7047     		bx	lr
 455              	.L52:
1440:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 456              		.loc 1 1440 0
 457 001c 0120     		movs	r0, #1
 458              	.LVL21:
 459 001e 7047     		bx	lr
 460              	.LVL22:
 461              	.L49:
1433:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 462              		.loc 1 1433 0
 463 0020 0020     		movs	r0, #0
 464              	.LVL23:
 465 0022 7047     		bx	lr
 466              	.L54:
 467              		.align	2
 468              	.L53:
 469 0024 00200240 		.word	1073881088
 470              		.cfi_endproc
 471              	.LFE85:
 473              		.section	.text.FLASH_ClearFlag,"ax",%progbits
 474              		.align	1
 475              		.global	FLASH_ClearFlag
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu softvfp
 481              	FLASH_ClearFlag:
 482              	.LFB86:
1452:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1453:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1454:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Clears the FLASH's pending flags.
1455:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices.
1456:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For STM32F10X_XL devices, this function clears Bank1 or Bank2�s pending flags
1457:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For other devices, it clears Bank1�s pending flags.
1458:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flags to clear.
1459:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *   This parameter can be any combination of the following values:         
1460:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_FLAG_PGERR: FLASH Program error flag       
1461:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_FLAG_WRPRTERR: FLASH Write protected error flag      
1462:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *     @arg FLASH_FLAG_EOP: FLASH End of Operation flag           
1463:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval None
1464:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1465:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** void FLASH_ClearFlag(uint32_t FLASH_FLAG)
1466:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 483              		.loc 1 1466 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488              	.LVL24:
1467:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
1468:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
1469:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG)) ;
1470:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1471:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if((FLASH_FLAG & 0x80000000) != 0x0)
1472:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1473:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Clear the flags */
1474:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->SR2 = FLASH_FLAG;
1475:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1476:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else
1477:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1478:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Clear the flags */
1479:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->SR = FLASH_FLAG;
1480:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }  
1481:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1482:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #else
1483:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check the parameters */
1484:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG)) ;
1485:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1486:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Clear the flags */
1487:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->SR = FLASH_FLAG;
 489              		.loc 1 1487 0
 490 0000 014B     		ldr	r3, .L56
 491 0002 D860     		str	r0, [r3, #12]
1488:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
1489:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 492              		.loc 1 1489 0
 493 0004 7047     		bx	lr
 494              	.L57:
 495 0006 00BF     		.align	2
 496              	.L56:
 497 0008 00200240 		.word	1073881088
 498              		.cfi_endproc
 499              	.LFE86:
 501              		.section	.text.FLASH_GetStatus,"ax",%progbits
 502              		.align	1
 503              		.global	FLASH_GetStatus
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 507              		.fpu softvfp
 509              	FLASH_GetStatus:
 510              	.LFB87:
1490:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1491:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1492:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Returns the FLASH Status.
1493:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices, it is equivalent
1494:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         to FLASH_GetBank1Status function.
1495:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
1496:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG,
1497:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP or FLASH_COMPLETE
1498:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1499:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_GetStatus(void)
1500:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 511              		.loc 1 1500 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 516              	.LVL25:
1501:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status flashstatus = FLASH_COMPLETE;
1502:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1503:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
 517              		.loc 1 1503 0
 518 0000 0B4B     		ldr	r3, .L63
 519 0002 DB68     		ldr	r3, [r3, #12]
 520 0004 13F0010F 		tst	r3, #1
 521 0008 0BD1     		bne	.L60
1504:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1505:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     flashstatus = FLASH_BUSY;
1506:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1507:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else 
1508:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {  
1509:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if((FLASH->SR & FLASH_FLAG_PGERR) != 0)
 522              		.loc 1 1509 0
 523 000a 094B     		ldr	r3, .L63
 524 000c DB68     		ldr	r3, [r3, #12]
 525 000e 13F0040F 		tst	r3, #4
 526 0012 08D1     		bne	.L61
1510:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     { 
1511:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       flashstatus = FLASH_ERROR_PG;
1512:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1513:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else 
1514:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1515:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if((FLASH->SR & FLASH_FLAG_WRPRTERR) != 0 )
 527              		.loc 1 1515 0
 528 0014 064B     		ldr	r3, .L63
 529 0016 DB68     		ldr	r3, [r3, #12]
 530 0018 13F0100F 		tst	r3, #16
 531 001c 05D0     		beq	.L62
1516:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1517:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         flashstatus = FLASH_ERROR_WRP;
 532              		.loc 1 1517 0
 533 001e 0320     		movs	r0, #3
 534 0020 7047     		bx	lr
 535              	.L60:
1505:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 536              		.loc 1 1505 0
 537 0022 0120     		movs	r0, #1
 538 0024 7047     		bx	lr
 539              	.L61:
1511:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 540              		.loc 1 1511 0
 541 0026 0220     		movs	r0, #2
 542 0028 7047     		bx	lr
 543              	.L62:
1518:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1519:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       else
1520:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1521:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         flashstatus = FLASH_COMPLETE;
 544              		.loc 1 1521 0
 545 002a 0420     		movs	r0, #4
 546              	.LVL26:
1522:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1523:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1524:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1525:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Flash Status */
1526:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return flashstatus;
1527:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 547              		.loc 1 1527 0
 548 002c 7047     		bx	lr
 549              	.L64:
 550 002e 00BF     		.align	2
 551              	.L63:
 552 0030 00200240 		.word	1073881088
 553              		.cfi_endproc
 554              	.LFE87:
 556              		.section	.text.FLASH_GetBank1Status,"ax",%progbits
 557              		.align	1
 558              		.global	FLASH_GetBank1Status
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 562              		.fpu softvfp
 564              	FLASH_GetBank1Status:
 565              	.LFB88:
1528:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1529:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1530:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Returns the FLASH Bank1 Status.
1531:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices, it is equivalent
1532:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         to FLASH_GetStatus function.
1533:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
1534:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG,
1535:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP or FLASH_COMPLETE
1536:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1537:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_GetBank1Status(void)
1538:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
 566              		.loc 1 1538 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 571              	.LVL27:
1539:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status flashstatus = FLASH_COMPLETE;
1540:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1541:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if((FLASH->SR & FLASH_FLAG_BANK1_BSY) == FLASH_FLAG_BSY) 
 572              		.loc 1 1541 0
 573 0000 0B4B     		ldr	r3, .L70
 574 0002 DB68     		ldr	r3, [r3, #12]
 575 0004 13F0010F 		tst	r3, #1
 576 0008 0BD1     		bne	.L67
1542:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1543:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     flashstatus = FLASH_BUSY;
1544:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1545:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else 
1546:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {  
1547:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if((FLASH->SR & FLASH_FLAG_BANK1_PGERR) != 0)
 577              		.loc 1 1547 0
 578 000a 094B     		ldr	r3, .L70
 579 000c DB68     		ldr	r3, [r3, #12]
 580 000e 13F0040F 		tst	r3, #4
 581 0012 08D1     		bne	.L68
1548:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     { 
1549:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       flashstatus = FLASH_ERROR_PG;
1550:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1551:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else 
1552:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1553:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if((FLASH->SR & FLASH_FLAG_BANK1_WRPRTERR) != 0 )
 582              		.loc 1 1553 0
 583 0014 064B     		ldr	r3, .L70
 584 0016 DB68     		ldr	r3, [r3, #12]
 585 0018 13F0100F 		tst	r3, #16
 586 001c 05D0     		beq	.L69
1554:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1555:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         flashstatus = FLASH_ERROR_WRP;
 587              		.loc 1 1555 0
 588 001e 0320     		movs	r0, #3
 589 0020 7047     		bx	lr
 590              	.L67:
1543:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 591              		.loc 1 1543 0
 592 0022 0120     		movs	r0, #1
 593 0024 7047     		bx	lr
 594              	.L68:
1549:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 595              		.loc 1 1549 0
 596 0026 0220     		movs	r0, #2
 597 0028 7047     		bx	lr
 598              	.L69:
1556:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1557:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       else
1558:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1559:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         flashstatus = FLASH_COMPLETE;
 599              		.loc 1 1559 0
 600 002a 0420     		movs	r0, #4
 601              	.LVL28:
1560:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1561:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1562:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1563:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Flash Status */
1564:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return flashstatus;
1565:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 602              		.loc 1 1565 0
 603 002c 7047     		bx	lr
 604              	.L71:
 605 002e 00BF     		.align	2
 606              	.L70:
 607 0030 00200240 		.word	1073881088
 608              		.cfi_endproc
 609              	.LFE88:
 611              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 612              		.align	1
 613              		.global	FLASH_WaitForLastOperation
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 617              		.fpu softvfp
 619              	FLASH_WaitForLastOperation:
 620              	.LFB89:
1566:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1567:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #ifdef STM32F10X_XL
1568:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1569:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Returns the FLASH Bank2 Status.
1570:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for STM32F10x_XL density devices.
1571:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  None
1572:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG,
1573:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *        FLASH_ERROR_WRP or FLASH_COMPLETE
1574:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1575:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_GetBank2Status(void)
1576:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** {
1577:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status flashstatus = FLASH_COMPLETE;
1578:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
1579:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if((FLASH->SR2 & (FLASH_FLAG_BANK2_BSY & 0x7FFFFFFF)) == (FLASH_FLAG_BANK2_BSY & 0x7FFFFFFF)) 
1580:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1581:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     flashstatus = FLASH_BUSY;
1582:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1583:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   else 
1584:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {  
1585:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if((FLASH->SR2 & (FLASH_FLAG_BANK2_PGERR & 0x7FFFFFFF)) != 0)
1586:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     { 
1587:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       flashstatus = FLASH_ERROR_PG;
1588:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1589:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     else 
1590:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
1591:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if((FLASH->SR2 & (FLASH_FLAG_BANK2_WRPRTERR & 0x7FFFFFFF)) != 0 )
1592:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1593:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         flashstatus = FLASH_ERROR_WRP;
1594:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1595:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       else
1596:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
1597:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         flashstatus = FLASH_COMPLETE;
1598:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
1599:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
1600:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1601:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the Flash Status */
1602:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return flashstatus;
1603:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
1604:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
1605:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1606:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Waits for a Flash operation to complete or a TIMEOUT to occur.
1607:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices, 
1608:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         it is equivalent to FLASH_WaitForLastBank1Operation.
1609:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For STM32F10X_XL devices this function waits for a Bank1 Flash operation
1610:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *           to complete or a TIMEOUT to occur.
1611:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         - For all other devices it waits for a Flash operation to complete 
1612:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *           or a TIMEOUT to occur.
1613:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  Timeout: FLASH programming Timeout
1614:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
1615:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
1616:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1617:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_WaitForLastOperation(uint32_t Timeout)
1618:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** { 
 621              		.loc 1 1618 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              	.LVL29:
 626 0000 10B5     		push	{r4, lr}
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 4, -8
 629              		.cfi_offset 14, -4
 630 0002 0446     		mov	r4, r0
 631              	.LVL30:
1619:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1620:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    
1621:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check for the Flash Status */
1622:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_GetBank1Status();
 632              		.loc 1 1622 0
 633 0004 FFF7FEFF 		bl	FLASH_GetBank1Status
 634              	.LVL31:
1623:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for a Flash operation to complete or a TIMEOUT to occur */
1624:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   while((status == FLASH_BUSY) && (Timeout != 0x00))
 635              		.loc 1 1624 0
 636 0008 02E0     		b	.L73
 637              	.L75:
1625:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1626:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_GetBank1Status();
 638              		.loc 1 1626 0
 639 000a FFF7FEFF 		bl	FLASH_GetBank1Status
 640              	.LVL32:
1627:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     Timeout--;
 641              		.loc 1 1627 0
 642 000e 013C     		subs	r4, r4, #1
 643              	.LVL33:
 644              	.L73:
1624:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 645              		.loc 1 1624 0
 646 0010 0128     		cmp	r0, #1
 647 0012 01D1     		bne	.L74
1624:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 648              		.loc 1 1624 0 is_stmt 0 discriminator 1
 649 0014 002C     		cmp	r4, #0
 650 0016 F8D1     		bne	.L75
 651              	.L74:
1628:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1629:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(Timeout == 0x00 )
 652              		.loc 1 1629 0 is_stmt 1
 653 0018 04B1     		cbz	r4, .L79
 654              	.LVL34:
 655              	.L76:
1630:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1631:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_TIMEOUT;
1632:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1633:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the operation status */
1634:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
1635:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 656              		.loc 1 1635 0
 657 001a 10BD     		pop	{r4, pc}
 658              	.LVL35:
 659              	.L79:
1631:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 660              		.loc 1 1631 0
 661 001c 0520     		movs	r0, #5
 662              	.LVL36:
 663 001e FCE7     		b	.L76
 664              		.cfi_endproc
 665              	.LFE89:
 667              		.section	.text.FLASH_ErasePage,"ax",%progbits
 668              		.align	1
 669              		.global	FLASH_ErasePage
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 673              		.fpu softvfp
 675              	FLASH_ErasePage:
 676              	.LFB70:
 420:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 677              		.loc 1 420 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              	.LVL37:
 682 0000 38B5     		push	{r3, r4, r5, lr}
 683              		.cfi_def_cfa_offset 16
 684              		.cfi_offset 3, -16
 685              		.cfi_offset 4, -12
 686              		.cfi_offset 5, -8
 687              		.cfi_offset 14, -4
 688 0002 0546     		mov	r5, r0
 689              	.LVL38:
 464:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 690              		.loc 1 464 0
 691 0004 4FF43020 		mov	r0, #720896
 692              	.LVL39:
 693 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 694              	.LVL40:
 466:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   { 
 695              		.loc 1 466 0
 696 000c 0428     		cmp	r0, #4
 697 000e 00D0     		beq	.L83
 698              	.L81:
 483:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 699              		.loc 1 483 0
 700 0010 38BD     		pop	{r3, r4, r5, pc}
 701              	.LVL41:
 702              	.L83:
 469:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->AR = Page_Address; 
 703              		.loc 1 469 0
 704 0012 0A4C     		ldr	r4, .L84
 705 0014 2369     		ldr	r3, [r4, #16]
 706 0016 43F00203 		orr	r3, r3, #2
 707 001a 2361     		str	r3, [r4, #16]
 470:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR|= CR_STRT_Set;
 708              		.loc 1 470 0
 709 001c 6561     		str	r5, [r4, #20]
 471:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 710              		.loc 1 471 0
 711 001e 2369     		ldr	r3, [r4, #16]
 712 0020 43F04003 		orr	r3, r3, #64
 713 0024 2361     		str	r3, [r4, #16]
 474:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 714              		.loc 1 474 0
 715 0026 4FF43020 		mov	r0, #720896
 716              	.LVL42:
 717 002a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 718              	.LVL43:
 477:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 719              		.loc 1 477 0
 720 002e 2369     		ldr	r3, [r4, #16]
 721 0030 23F00203 		bic	r3, r3, #2
 722 0034 DB04     		lsls	r3, r3, #19
 723 0036 DB0C     		lsrs	r3, r3, #19
 724 0038 2361     		str	r3, [r4, #16]
 725 003a E9E7     		b	.L81
 726              	.L85:
 727              		.align	2
 728              	.L84:
 729 003c 00200240 		.word	1073881088
 730              		.cfi_endproc
 731              	.LFE70:
 733              		.section	.text.FLASH_EraseAllPages,"ax",%progbits
 734              		.align	1
 735              		.global	FLASH_EraseAllPages
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu softvfp
 741              	FLASH_EraseAllPages:
 742              	.LFB71:
 493:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 743              		.loc 1 493 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747 0000 10B5     		push	{r4, lr}
 748              		.cfi_def_cfa_offset 8
 749              		.cfi_offset 4, -8
 750              		.cfi_offset 14, -4
 751              	.LVL44:
 526:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 752              		.loc 1 526 0
 753 0002 4FF43020 		mov	r0, #720896
 754 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 755              	.LVL45:
 527:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 756              		.loc 1 527 0
 757 000a 0428     		cmp	r0, #4
 758 000c 00D0     		beq	.L89
 759              	.L87:
 543:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 760              		.loc 1 543 0
 761 000e 10BD     		pop	{r4, pc}
 762              	.L89:
 530:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR |= CR_STRT_Set;
 763              		.loc 1 530 0
 764 0010 094C     		ldr	r4, .L90
 765 0012 2369     		ldr	r3, [r4, #16]
 766 0014 43F00403 		orr	r3, r3, #4
 767 0018 2361     		str	r3, [r4, #16]
 531:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 768              		.loc 1 531 0
 769 001a 2369     		ldr	r3, [r4, #16]
 770 001c 43F04003 		orr	r3, r3, #64
 771 0020 2361     		str	r3, [r4, #16]
 534:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 772              		.loc 1 534 0
 773 0022 4FF43020 		mov	r0, #720896
 774              	.LVL46:
 775 0026 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 776              	.LVL47:
 537:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 777              		.loc 1 537 0
 778 002a 2369     		ldr	r3, [r4, #16]
 779 002c 23F00403 		bic	r3, r3, #4
 780 0030 DB04     		lsls	r3, r3, #19
 781 0032 DB0C     		lsrs	r3, r3, #19
 782 0034 2361     		str	r3, [r4, #16]
 783 0036 EAE7     		b	.L87
 784              	.L91:
 785              		.align	2
 786              	.L90:
 787 0038 00200240 		.word	1073881088
 788              		.cfi_endproc
 789              	.LFE71:
 791              		.section	.text.FLASH_EraseOptionBytes,"ax",%progbits
 792              		.align	1
 793              		.global	FLASH_EraseOptionBytes
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 797              		.fpu softvfp
 799              	FLASH_EraseOptionBytes:
 800              	.LFB73:
 617:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   uint16_t rdptmp = RDP_Key;
 801              		.loc 1 617 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805 0000 10B5     		push	{r4, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 809              	.LVL48:
 623:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 810              		.loc 1 623 0
 811 0002 FFF7FEFF 		bl	FLASH_GetReadOutProtectionStatus
 812              	.LVL49:
 813 0006 38B9     		cbnz	r0, .L96
 618:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 814              		.loc 1 618 0
 815 0008 A524     		movs	r4, #165
 816              	.L93:
 817              	.LVL50:
 629:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 818              		.loc 1 629 0
 819 000a 4FF43020 		mov	r0, #720896
 820 000e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 821              	.LVL51:
 630:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 822              		.loc 1 630 0
 823 0012 0428     		cmp	r0, #4
 824 0014 02D0     		beq	.L98
 825              	.L94:
 671:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 826              		.loc 1 671 0
 827 0016 10BD     		pop	{r4, pc}
 828              	.LVL52:
 829              	.L96:
 625:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 830              		.loc 1 625 0
 831 0018 0024     		movs	r4, #0
 832 001a F6E7     		b	.L93
 833              	.LVL53:
 834              	.L98:
 633:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY2;
 835              		.loc 1 633 0
 836 001c 1C4B     		ldr	r3, .L100
 837 001e 1D4A     		ldr	r2, .L100+4
 838 0020 9A60     		str	r2, [r3, #8]
 634:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 839              		.loc 1 634 0
 840 0022 02F18832 		add	r2, r2, #-2004318072
 841 0026 9A60     		str	r2, [r3, #8]
 637:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_STRT_Set;
 842              		.loc 1 637 0
 843 0028 1A69     		ldr	r2, [r3, #16]
 844 002a 42F02002 		orr	r2, r2, #32
 845 002e 1A61     		str	r2, [r3, #16]
 638:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 846              		.loc 1 638 0
 847 0030 1A69     		ldr	r2, [r3, #16]
 848 0032 42F04002 		orr	r2, r2, #64
 849 0036 1A61     		str	r2, [r3, #16]
 640:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 850              		.loc 1 640 0
 851 0038 4FF43020 		mov	r0, #720896
 852              	.LVL54:
 853 003c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 854              	.LVL55:
 642:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 855              		.loc 1 642 0
 856 0040 0428     		cmp	r0, #4
 857 0042 09D0     		beq	.L99
 662:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
 858              		.loc 1 662 0
 859 0044 0528     		cmp	r0, #5
 860 0046 E6D0     		beq	.L94
 665:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
 861              		.loc 1 665 0
 862 0048 114A     		ldr	r2, .L100
 863 004a 1369     		ldr	r3, [r2, #16]
 864 004c 23F01003 		bic	r3, r3, #16
 865 0050 DB04     		lsls	r3, r3, #19
 866 0052 DB0C     		lsrs	r3, r3, #19
 867 0054 1361     		str	r3, [r2, #16]
 868 0056 DEE7     		b	.L94
 869              	.L99:
 645:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****        
 870              		.loc 1 645 0
 871 0058 0D4B     		ldr	r3, .L100
 872 005a 1A69     		ldr	r2, [r3, #16]
 873 005c 22F02002 		bic	r2, r2, #32
 874 0060 D204     		lsls	r2, r2, #19
 875 0062 D20C     		lsrs	r2, r2, #19
 876 0064 1A61     		str	r2, [r3, #16]
 648:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Restore the last read protection Option Byte value */
 877              		.loc 1 648 0
 878 0066 1A69     		ldr	r2, [r3, #16]
 879 0068 42F01002 		orr	r2, r2, #16
 880 006c 1A61     		str	r2, [r3, #16]
 650:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Wait for last operation to be completed */
 881              		.loc 1 650 0
 882 006e 0A4B     		ldr	r3, .L100+8
 883 0070 1C80     		strh	r4, [r3]	@ movhi
 652:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  
 884              		.loc 1 652 0
 885 0072 4FF40050 		mov	r0, #8192
 886              	.LVL56:
 887 0076 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 888              	.LVL57:
 654:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
 889              		.loc 1 654 0
 890 007a 0528     		cmp	r0, #5
 891 007c CBD0     		beq	.L94
 657:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
 892              		.loc 1 657 0
 893 007e 044A     		ldr	r2, .L100
 894 0080 1369     		ldr	r3, [r2, #16]
 895 0082 23F01003 		bic	r3, r3, #16
 896 0086 DB04     		lsls	r3, r3, #19
 897 0088 DB0C     		lsrs	r3, r3, #19
 898 008a 1361     		str	r3, [r2, #16]
 899 008c C3E7     		b	.L94
 900              	.L101:
 901 008e 00BF     		.align	2
 902              	.L100:
 903 0090 00200240 		.word	1073881088
 904 0094 23016745 		.word	1164378403
 905 0098 00F8FF1F 		.word	536868864
 906              		.cfi_endproc
 907              	.LFE73:
 909              		.section	.text.FLASH_ProgramWord,"ax",%progbits
 910              		.align	1
 911              		.global	FLASH_ProgramWord
 912              		.syntax unified
 913              		.thumb
 914              		.thumb_func
 915              		.fpu softvfp
 917              	FLASH_ProgramWord:
 918              	.LFB74:
 688:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 919              		.loc 1 688 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 8
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              	.LVL58:
 924 0000 30B5     		push	{r4, r5, lr}
 925              		.cfi_def_cfa_offset 12
 926              		.cfi_offset 4, -12
 927              		.cfi_offset 5, -8
 928              		.cfi_offset 14, -4
 929 0002 83B0     		sub	sp, sp, #12
 930              		.cfi_def_cfa_offset 24
 931 0004 0546     		mov	r5, r0
 932 0006 0C46     		mov	r4, r1
 933              	.LVL59:
 690:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 934              		.loc 1 690 0
 935 0008 0023     		movs	r3, #0
 936 000a 0193     		str	r3, [sp, #4]
 818:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 937              		.loc 1 818 0
 938 000c 4FF40050 		mov	r0, #8192
 939              	.LVL60:
 940 0010 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 941              	.LVL61:
 820:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 942              		.loc 1 820 0
 943 0014 0428     		cmp	r0, #4
 944 0016 01D0     		beq	.L106
 945              	.LVL62:
 946              	.L103:
 865:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 947              		.loc 1 865 0
 948 0018 03B0     		add	sp, sp, #12
 949              		.cfi_remember_state
 950              		.cfi_def_cfa_offset 12
 951              		@ sp needed
 952 001a 30BD     		pop	{r4, r5, pc}
 953              	.LVL63:
 954              	.L106:
 955              		.cfi_restore_state
 824:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 956              		.loc 1 824 0
 957 001c 124A     		ldr	r2, .L108
 958 001e 1369     		ldr	r3, [r2, #16]
 959 0020 43F00103 		orr	r3, r3, #1
 960 0024 1361     		str	r3, [r2, #16]
 826:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 961              		.loc 1 826 0
 962 0026 A3B2     		uxth	r3, r4
 963 0028 2B80     		strh	r3, [r5]	@ movhi
 828:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****  
 964              		.loc 1 828 0
 965 002a 4FF40050 		mov	r0, #8192
 966              	.LVL64:
 967 002e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 968              	.LVL65:
 830:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 969              		.loc 1 830 0
 970 0032 0428     		cmp	r0, #4
 971 0034 07D0     		beq	.L107
 858:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 972              		.loc 1 858 0
 973 0036 0C4A     		ldr	r2, .L108
 974 0038 1369     		ldr	r3, [r2, #16]
 975 003a 23F00103 		bic	r3, r3, #1
 976 003e DB04     		lsls	r3, r3, #19
 977 0040 DB0C     		lsrs	r3, r3, #19
 978 0042 1361     		str	r3, [r2, #16]
 979 0044 E8E7     		b	.L103
 980              	.L107:
 834:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 981              		.loc 1 834 0
 982 0046 0235     		adds	r5, r5, #2
 983              	.LVL66:
 984 0048 0195     		str	r5, [sp, #4]
 842:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 985              		.loc 1 842 0
 986 004a 019B     		ldr	r3, [sp, #4]
 987 004c 240C     		lsrs	r4, r4, #16
 988              	.LVL67:
 989 004e 1C80     		strh	r4, [r3]	@ movhi
 850:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****         
 990              		.loc 1 850 0
 991 0050 4FF40050 		mov	r0, #8192
 992              	.LVL68:
 993 0054 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 994              	.LVL69:
 853:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 995              		.loc 1 853 0
 996 0058 034A     		ldr	r2, .L108
 997 005a 1369     		ldr	r3, [r2, #16]
 998 005c 23F00103 		bic	r3, r3, #1
 999 0060 DB04     		lsls	r3, r3, #19
 1000 0062 DB0C     		lsrs	r3, r3, #19
 1001 0064 1361     		str	r3, [r2, #16]
 1002 0066 D7E7     		b	.L103
 1003              	.L109:
 1004              		.align	2
 1005              	.L108:
 1006 0068 00200240 		.word	1073881088
 1007              		.cfi_endproc
 1008              	.LFE74:
 1010              		.section	.text.FLASH_ProgramHalfWord,"ax",%progbits
 1011              		.align	1
 1012              		.global	FLASH_ProgramHalfWord
 1013              		.syntax unified
 1014              		.thumb
 1015              		.thumb_func
 1016              		.fpu softvfp
 1018              	FLASH_ProgramHalfWord:
 1019              	.LFB75:
 881:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1020              		.loc 1 881 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024              	.LVL70:
 1025 0000 70B5     		push	{r4, r5, r6, lr}
 1026              		.cfi_def_cfa_offset 16
 1027              		.cfi_offset 4, -16
 1028              		.cfi_offset 5, -12
 1029              		.cfi_offset 6, -8
 1030              		.cfi_offset 14, -4
 1031 0002 0446     		mov	r4, r0
 1032 0004 0D46     		mov	r5, r1
 1033              	.LVL71:
 922:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 1034              		.loc 1 922 0
 1035 0006 4FF40050 		mov	r0, #8192
 1036              	.LVL72:
 1037 000a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1038              	.LVL73:
 924:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 1039              		.loc 1 924 0
 1040 000e 0428     		cmp	r0, #4
 1041 0010 00D0     		beq	.L113
 1042              	.L111:
 940:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 1043              		.loc 1 940 0
 1044 0012 70BD     		pop	{r4, r5, r6, pc}
 1045              	.LVL74:
 1046              	.L113:
 927:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 1047              		.loc 1 927 0
 1048 0014 084E     		ldr	r6, .L114
 1049 0016 3369     		ldr	r3, [r6, #16]
 1050 0018 43F00103 		orr	r3, r3, #1
 1051 001c 3361     		str	r3, [r6, #16]
 929:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 1052              		.loc 1 929 0
 1053 001e 2580     		strh	r5, [r4]	@ movhi
 931:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 1054              		.loc 1 931 0
 1055 0020 4FF40050 		mov	r0, #8192
 1056              	.LVL75:
 1057 0024 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1058              	.LVL76:
 934:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   } 
 1059              		.loc 1 934 0
 1060 0028 3369     		ldr	r3, [r6, #16]
 1061 002a 23F00103 		bic	r3, r3, #1
 1062 002e DB04     		lsls	r3, r3, #19
 1063 0030 DB0C     		lsrs	r3, r3, #19
 1064 0032 3361     		str	r3, [r6, #16]
 1065 0034 EDE7     		b	.L111
 1066              	.L115:
 1067 0036 00BF     		.align	2
 1068              	.L114:
 1069 0038 00200240 		.word	1073881088
 1070              		.cfi_endproc
 1071              	.LFE75:
 1073              		.section	.text.FLASH_ProgramOptionByteData,"ax",%progbits
 1074              		.align	1
 1075              		.global	FLASH_ProgramOptionByteData
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu softvfp
 1081              	FLASH_ProgramOptionByteData:
 1082              	.LFB76:
 952:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1083              		.loc 1 952 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              	.LVL77:
 1088 0000 38B5     		push	{r3, r4, r5, lr}
 1089              		.cfi_def_cfa_offset 16
 1090              		.cfi_offset 3, -16
 1091              		.cfi_offset 4, -12
 1092              		.cfi_offset 5, -8
 1093              		.cfi_offset 14, -4
 1094 0002 0546     		mov	r5, r0
 1095 0004 0C46     		mov	r4, r1
 1096              	.LVL78:
 956:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 1097              		.loc 1 956 0
 1098 0006 4FF40050 		mov	r0, #8192
 1099              	.LVL79:
 1100 000a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1101              	.LVL80:
 958:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 1102              		.loc 1 958 0
 1103 000e 0428     		cmp	r0, #4
 1104 0010 00D0     		beq	.L119
 1105              	.L117:
 977:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 1106              		.loc 1 977 0
 1107 0012 38BD     		pop	{r3, r4, r5, pc}
 1108              	.LVL81:
 1109              	.L119:
 961:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY2;
 1110              		.loc 1 961 0
 1111 0014 0C4B     		ldr	r3, .L120
 1112 0016 0D4A     		ldr	r2, .L120+4
 1113 0018 9A60     		str	r2, [r3, #8]
 962:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Enables the Option Bytes Programming operation */
 1114              		.loc 1 962 0
 1115 001a 02F18832 		add	r2, r2, #-2004318072
 1116 001e 9A60     		str	r2, [r3, #8]
 964:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     *(__IO uint16_t*)Address = Data;
 1117              		.loc 1 964 0
 1118 0020 1A69     		ldr	r2, [r3, #16]
 1119 0022 42F01002 		orr	r2, r2, #16
 1120 0026 1A61     		str	r2, [r3, #16]
 965:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 1121              		.loc 1 965 0
 1122 0028 A4B2     		uxth	r4, r4
 1123 002a 2C80     		strh	r4, [r5]	@ movhi
 968:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status != FLASH_TIMEOUT)
 1124              		.loc 1 968 0
 1125 002c 4FF40050 		mov	r0, #8192
 1126              	.LVL82:
 1127 0030 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1128              	.LVL83:
 969:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 1129              		.loc 1 969 0
 1130 0034 0528     		cmp	r0, #5
 1131 0036 ECD0     		beq	.L117
 972:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 1132              		.loc 1 972 0
 1133 0038 034A     		ldr	r2, .L120
 1134 003a 1369     		ldr	r3, [r2, #16]
 1135 003c 23F01003 		bic	r3, r3, #16
 1136 0040 DB04     		lsls	r3, r3, #19
 1137 0042 DB0C     		lsrs	r3, r3, #19
 1138 0044 1361     		str	r3, [r2, #16]
 1139 0046 E4E7     		b	.L117
 1140              	.L121:
 1141              		.align	2
 1142              	.L120:
 1143 0048 00200240 		.word	1073881088
 1144 004c 23016745 		.word	1164378403
 1145              		.cfi_endproc
 1146              	.LFE76:
 1148              		.section	.text.FLASH_EnableWriteProtection,"ax",%progbits
 1149              		.align	1
 1150              		.global	FLASH_EnableWriteProtection
 1151              		.syntax unified
 1152              		.thumb
 1153              		.thumb_func
 1154              		.fpu softvfp
 1156              	FLASH_EnableWriteProtection:
 1157              	.LFB77:
 998:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   uint16_t WRP0_Data = 0xFFFF, WRP1_Data = 0xFFFF, WRP2_Data = 0xFFFF, WRP3_Data = 0xFFFF;
 1158              		.loc 1 998 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 0
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162              	.LVL84:
 1163 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1164              		.cfi_def_cfa_offset 24
 1165              		.cfi_offset 3, -24
 1166              		.cfi_offset 4, -20
 1167              		.cfi_offset 5, -16
 1168              		.cfi_offset 6, -12
 1169              		.cfi_offset 7, -8
 1170              		.cfi_offset 14, -4
 1171              	.LVL85:
1006:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   WRP0_Data = (uint16_t)(FLASH_Pages & WRP0_Mask);
 1172              		.loc 1 1006 0
 1173 0002 C043     		mvns	r0, r0
 1174              	.LVL86:
1007:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   WRP1_Data = (uint16_t)((FLASH_Pages & WRP1_Mask) >> 8);
 1175              		.loc 1 1007 0
 1176 0004 C5B2     		uxtb	r5, r0
 1177              	.LVL87:
1008:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   WRP2_Data = (uint16_t)((FLASH_Pages & WRP2_Mask) >> 16);
 1178              		.loc 1 1008 0
 1179 0006 C0F30727 		ubfx	r7, r0, #8, #8
 1180              	.LVL88:
1009:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   WRP3_Data = (uint16_t)((FLASH_Pages & WRP3_Mask) >> 24);
 1181              		.loc 1 1009 0
 1182 000a C0F30746 		ubfx	r6, r0, #16, #8
 1183              	.LVL89:
1010:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 1184              		.loc 1 1010 0
 1185 000e 040E     		lsrs	r4, r0, #24
 1186              	.LVL90:
1013:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 1187              		.loc 1 1013 0
 1188 0010 4FF40050 		mov	r0, #8192
 1189              	.LVL91:
 1190 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1191              	.LVL92:
1015:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 1192              		.loc 1 1015 0
 1193 0018 0428     		cmp	r0, #4
 1194 001a 00D0     		beq	.L129
 1195              	.L123:
1059:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 1196              		.loc 1 1059 0
 1197 001c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1198              	.LVL93:
 1199              	.L129:
1018:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY2;
 1200              		.loc 1 1018 0
 1201 001e 1F4B     		ldr	r3, .L134
 1202 0020 1F4A     		ldr	r2, .L134+4
 1203 0022 9A60     		str	r2, [r3, #8]
1019:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_OPTPG_Set;
 1204              		.loc 1 1019 0
 1205 0024 02F18832 		add	r2, r2, #-2004318072
 1206 0028 9A60     		str	r2, [r3, #8]
1020:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(WRP0_Data != 0xFF)
 1207              		.loc 1 1020 0
 1208 002a 1A69     		ldr	r2, [r3, #16]
 1209 002c 42F01002 		orr	r2, r2, #16
 1210 0030 1A61     		str	r2, [r3, #16]
1021:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 1211              		.loc 1 1021 0
 1212 0032 FF2D     		cmp	r5, #255
 1213 0034 0FD1     		bne	.L130
 1214              	.L124:
1028:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 1215              		.loc 1 1028 0
 1216 0036 0428     		cmp	r0, #4
 1217 0038 14D0     		beq	.L131
 1218              	.L125:
1035:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 1219              		.loc 1 1035 0
 1220 003a 0428     		cmp	r0, #4
 1221 003c 1BD0     		beq	.L132
 1222              	.L126:
1043:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 1223              		.loc 1 1043 0
 1224 003e 0428     		cmp	r0, #4
 1225 0040 22D0     		beq	.L133
 1226              	.L127:
1051:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 1227              		.loc 1 1051 0
 1228 0042 0528     		cmp	r0, #5
 1229 0044 EAD0     		beq	.L123
1054:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 1230              		.loc 1 1054 0
 1231 0046 154A     		ldr	r2, .L134
 1232 0048 1369     		ldr	r3, [r2, #16]
 1233 004a 23F01003 		bic	r3, r3, #16
 1234 004e DB04     		lsls	r3, r3, #19
 1235 0050 DB0C     		lsrs	r3, r3, #19
 1236 0052 1361     		str	r3, [r2, #16]
 1237 0054 E2E7     		b	.L123
 1238              	.L130:
1023:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       
 1239              		.loc 1 1023 0
 1240 0056 134B     		ldr	r3, .L134+8
 1241 0058 1D81     		strh	r5, [r3, #8]	@ movhi
1026:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 1242              		.loc 1 1026 0
 1243 005a 4FF40050 		mov	r0, #8192
 1244              	.LVL94:
 1245 005e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1246              	.LVL95:
 1247 0062 E8E7     		b	.L124
 1248              	.L131:
1028:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 1249              		.loc 1 1028 0 discriminator 1
 1250 0064 FF2F     		cmp	r7, #255
 1251 0066 E8D0     		beq	.L125
1030:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       
 1252              		.loc 1 1030 0
 1253 0068 0E4B     		ldr	r3, .L134+8
 1254 006a 5F81     		strh	r7, [r3, #10]	@ movhi
1033:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 1255              		.loc 1 1033 0
 1256 006c 4FF40050 		mov	r0, #8192
 1257              	.LVL96:
 1258 0070 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1259              	.LVL97:
 1260 0074 E1E7     		b	.L125
 1261              	.L132:
1035:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 1262              		.loc 1 1035 0 discriminator 1
 1263 0076 FF2E     		cmp	r6, #255
 1264 0078 E1D0     		beq	.L126
1037:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       
 1265              		.loc 1 1037 0
 1266 007a 0A4B     		ldr	r3, .L134+8
 1267 007c 9E81     		strh	r6, [r3, #12]	@ movhi
1040:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 1268              		.loc 1 1040 0
 1269 007e 4FF40050 		mov	r0, #8192
 1270              	.LVL98:
 1271 0082 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1272              	.LVL99:
 1273 0086 DAE7     		b	.L126
 1274              	.L133:
1043:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 1275              		.loc 1 1043 0 discriminator 1
 1276 0088 FF2C     		cmp	r4, #255
 1277 008a DAD0     		beq	.L127
1045:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      
 1278              		.loc 1 1045 0
 1279 008c 054B     		ldr	r3, .L134+8
 1280 008e DC81     		strh	r4, [r3, #14]	@ movhi
1048:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 1281              		.loc 1 1048 0
 1282 0090 4FF40050 		mov	r0, #8192
 1283              	.LVL100:
 1284 0094 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1285              	.LVL101:
 1286 0098 D3E7     		b	.L127
 1287              	.L135:
 1288 009a 00BF     		.align	2
 1289              	.L134:
 1290 009c 00200240 		.word	1073881088
 1291 00a0 23016745 		.word	1164378403
 1292 00a4 00F8FF1F 		.word	536868864
 1293              		.cfi_endproc
 1294              	.LFE77:
 1296              		.section	.text.FLASH_ReadOutProtection,"ax",%progbits
 1297              		.align	1
 1298              		.global	FLASH_ReadOutProtection
 1299              		.syntax unified
 1300              		.thumb
 1301              		.thumb_func
 1302              		.fpu softvfp
 1304              	FLASH_ReadOutProtection:
 1305              	.LFB78:
1072:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1306              		.loc 1 1072 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 0
 1309              		@ frame_needed = 0, uses_anonymous_args = 0
 1310              	.LVL102:
 1311 0000 10B5     		push	{r4, lr}
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 4, -8
 1314              		.cfi_offset 14, -4
 1315 0002 0446     		mov	r4, r0
 1316              	.LVL103:
1076:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(status == FLASH_COMPLETE)
 1317              		.loc 1 1076 0
 1318 0004 4FF43020 		mov	r0, #720896
 1319              	.LVL104:
 1320 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1321              	.LVL105:
1077:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 1322              		.loc 1 1077 0
 1323 000c 0428     		cmp	r0, #4
 1324 000e 00D0     		beq	.L142
 1325              	.L137:
1120:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 1326              		.loc 1 1120 0
 1327 0010 10BD     		pop	{r4, pc}
 1328              	.L142:
1080:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->OPTKEYR = FLASH_KEY2;
 1329              		.loc 1 1080 0
 1330 0012 1F4B     		ldr	r3, .L144
 1331 0014 1F4A     		ldr	r2, .L144+4
 1332 0016 9A60     		str	r2, [r3, #8]
1081:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_OPTER_Set;
 1333              		.loc 1 1081 0
 1334 0018 02F18832 		add	r2, r2, #-2004318072
 1335 001c 9A60     		str	r2, [r3, #8]
1082:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     FLASH->CR |= CR_STRT_Set;
 1336              		.loc 1 1082 0
 1337 001e 1A69     		ldr	r2, [r3, #16]
 1338 0020 42F02002 		orr	r2, r2, #32
 1339 0024 1A61     		str	r2, [r3, #16]
1083:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     /* Wait for last operation to be completed */
 1340              		.loc 1 1083 0
 1341 0026 1A69     		ldr	r2, [r3, #16]
 1342 0028 42F04002 		orr	r2, r2, #64
 1343 002c 1A61     		str	r2, [r3, #16]
1085:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status == FLASH_COMPLETE)
 1344              		.loc 1 1085 0
 1345 002e 4FF43020 		mov	r0, #720896
 1346              	.LVL106:
 1347 0032 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1348              	.LVL107:
1086:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 1349              		.loc 1 1086 0
 1350 0036 0428     		cmp	r0, #4
 1351 0038 09D0     		beq	.L143
1111:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
 1352              		.loc 1 1111 0
 1353 003a 0528     		cmp	r0, #5
 1354 003c E8D0     		beq	.L137
1114:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
 1355              		.loc 1 1114 0
 1356 003e 144A     		ldr	r2, .L144
 1357 0040 1369     		ldr	r3, [r2, #16]
 1358 0042 23F02003 		bic	r3, r3, #32
 1359 0046 DB04     		lsls	r3, r3, #19
 1360 0048 DB0C     		lsrs	r3, r3, #19
 1361 004a 1361     		str	r3, [r2, #16]
 1362 004c E0E7     		b	.L137
 1363              	.L143:
1089:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       /* Enable the Option Bytes Programming operation */
 1364              		.loc 1 1089 0
 1365 004e 104B     		ldr	r3, .L144
 1366 0050 1A69     		ldr	r2, [r3, #16]
 1367 0052 22F02002 		bic	r2, r2, #32
 1368 0056 D204     		lsls	r2, r2, #19
 1369 0058 D20C     		lsrs	r2, r2, #19
 1370 005a 1A61     		str	r2, [r3, #16]
1091:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       if(NewState != DISABLE)
 1371              		.loc 1 1091 0
 1372 005c 1A69     		ldr	r2, [r3, #16]
 1373 005e 42F01002 		orr	r2, r2, #16
 1374 0062 1A61     		str	r2, [r3, #16]
1092:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
 1375              		.loc 1 1092 0
 1376 0064 84B1     		cbz	r4, .L139
1094:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
 1377              		.loc 1 1094 0
 1378 0066 0C4B     		ldr	r3, .L144+8
 1379 0068 0022     		movs	r2, #0
 1380 006a 1A80     		strh	r2, [r3]	@ movhi
 1381              	.L140:
1101:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 1382              		.loc 1 1101 0
 1383 006c 4FF43020 		mov	r0, #720896
 1384              	.LVL108:
 1385 0070 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1386              	.LVL109:
1103:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       {
 1387              		.loc 1 1103 0
 1388 0074 0528     		cmp	r0, #5
 1389 0076 CBD0     		beq	.L137
1106:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
 1390              		.loc 1 1106 0
 1391 0078 054A     		ldr	r2, .L144
 1392 007a 1369     		ldr	r3, [r2, #16]
 1393 007c 23F01003 		bic	r3, r3, #16
 1394 0080 DB04     		lsls	r3, r3, #19
 1395 0082 DB0C     		lsrs	r3, r3, #19
 1396 0084 1361     		str	r3, [r2, #16]
 1397 0086 C3E7     		b	.L137
 1398              	.L139:
1098:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****       }
 1399              		.loc 1 1098 0
 1400 0088 034B     		ldr	r3, .L144+8
 1401 008a A522     		movs	r2, #165
 1402 008c 1A80     		strh	r2, [r3]	@ movhi
 1403 008e EDE7     		b	.L140
 1404              	.L145:
 1405              		.align	2
 1406              	.L144:
 1407 0090 00200240 		.word	1073881088
 1408 0094 23016745 		.word	1164378403
 1409 0098 00F8FF1F 		.word	536868864
 1410              		.cfi_endproc
 1411              	.LFE78:
 1413              		.section	.text.FLASH_UserOptionByteConfig,"ax",%progbits
 1414              		.align	1
 1415              		.global	FLASH_UserOptionByteConfig
 1416              		.syntax unified
 1417              		.thumb
 1418              		.thumb_func
 1419              		.fpu softvfp
 1421              	FLASH_UserOptionByteConfig:
 1422              	.LFB79:
1141:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE; 
 1423              		.loc 1 1141 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
 1427              	.LVL110:
 1428 0000 70B5     		push	{r4, r5, r6, lr}
 1429              		.cfi_def_cfa_offset 16
 1430              		.cfi_offset 4, -16
 1431              		.cfi_offset 5, -12
 1432              		.cfi_offset 6, -8
 1433              		.cfi_offset 14, -4
 1434 0002 0446     		mov	r4, r0
 1435 0004 0E46     		mov	r6, r1
 1436 0006 1546     		mov	r5, r2
 1437              	.LVL111:
1150:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH->OPTKEYR = FLASH_KEY2;
 1438              		.loc 1 1150 0
 1439 0008 124B     		ldr	r3, .L150
 1440 000a 134A     		ldr	r2, .L150+4
 1441              	.LVL112:
 1442 000c 9A60     		str	r2, [r3, #8]
1151:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 1443              		.loc 1 1151 0
 1444 000e 02F18832 		add	r2, r2, #-2004318072
 1445 0012 9A60     		str	r2, [r3, #8]
1154:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 1446              		.loc 1 1154 0
 1447 0014 4FF40050 		mov	r0, #8192
 1448              	.LVL113:
 1449 0018 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1450              	.LVL114:
1156:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {  
 1451              		.loc 1 1156 0
 1452 001c 0428     		cmp	r0, #4
 1453 001e 00D0     		beq	.L149
 1454              	.L147:
1173:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 1455              		.loc 1 1173 0
 1456 0020 70BD     		pop	{r4, r5, r6, pc}
 1457              	.L149:
1159:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****            
 1458              		.loc 1 1159 0
 1459 0022 0C4A     		ldr	r2, .L150
 1460 0024 1369     		ldr	r3, [r2, #16]
 1461 0026 43F01003 		orr	r3, r3, #16
 1462 002a 1361     		str	r3, [r2, #16]
1161:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 1463              		.loc 1 1161 0
 1464 002c 3543     		orrs	r5, r5, r6
 1465 002e 2C43     		orrs	r4, r4, r5
 1466 0030 44F0F804 		orr	r4, r4, #248
 1467 0034 094B     		ldr	r3, .L150+8
 1468 0036 5C80     		strh	r4, [r3, #2]	@ movhi
1164:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     if(status != FLASH_TIMEOUT)
 1469              		.loc 1 1164 0
 1470 0038 4FF40050 		mov	r0, #8192
 1471              	.LVL115:
 1472 003c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1473              	.LVL116:
1165:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     {
 1474              		.loc 1 1165 0
 1475 0040 0528     		cmp	r0, #5
 1476 0042 EDD0     		beq	.L147
1168:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     }
 1477              		.loc 1 1168 0
 1478 0044 034A     		ldr	r2, .L150
 1479 0046 1369     		ldr	r3, [r2, #16]
 1480 0048 23F01003 		bic	r3, r3, #16
 1481 004c DB04     		lsls	r3, r3, #19
 1482 004e DB0C     		lsrs	r3, r3, #19
 1483 0050 1361     		str	r3, [r2, #16]
 1484 0052 E5E7     		b	.L147
 1485              	.L151:
 1486              		.align	2
 1487              	.L150:
 1488 0054 00200240 		.word	1073881088
 1489 0058 23016745 		.word	1164378403
 1490 005c 00F8FF1F 		.word	536868864
 1491              		.cfi_endproc
 1492              	.LFE79:
 1494              		.section	.text.FLASH_WaitForLastBank1Operation,"ax",%progbits
 1495              		.align	1
 1496              		.global	FLASH_WaitForLastBank1Operation
 1497              		.syntax unified
 1498              		.thumb
 1499              		.thumb_func
 1500              		.fpu softvfp
 1502              	FLASH_WaitForLastBank1Operation:
 1503              	.LFB90:
1636:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
1637:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** /**
1638:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @brief  Waits for a Flash operation on Bank1 to complete or a TIMEOUT to occur.
1639:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @note   This function can be used for all STM32F10x devices, 
1640:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         it is equivalent to FLASH_WaitForLastOperation.
1641:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @param  Timeout: FLASH programming Timeout
1642:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
1643:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
1644:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   */
1645:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** FLASH_Status FLASH_WaitForLastBank1Operation(uint32_t Timeout)
1646:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** { 
 1504              		.loc 1 1646 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 0
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508              	.LVL117:
 1509 0000 10B5     		push	{r4, lr}
 1510              		.cfi_def_cfa_offset 8
 1511              		.cfi_offset 4, -8
 1512              		.cfi_offset 14, -4
 1513 0002 0446     		mov	r4, r0
 1514              	.LVL118:
1647:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
1648:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****    
1649:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Check for the Flash Status */
1650:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   status = FLASH_GetBank1Status();
 1515              		.loc 1 1650 0
 1516 0004 FFF7FEFF 		bl	FLASH_GetBank1Status
 1517              	.LVL119:
1651:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Wait for a Flash operation to complete or a TIMEOUT to occur */
1652:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   while((status == FLASH_FLAG_BANK1_BSY) && (Timeout != 0x00))
 1518              		.loc 1 1652 0
 1519 0008 02E0     		b	.L153
 1520              	.L155:
1653:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1654:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_GetBank1Status();
 1521              		.loc 1 1654 0
 1522 000a FFF7FEFF 		bl	FLASH_GetBank1Status
 1523              	.LVL120:
1655:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     Timeout--;
 1524              		.loc 1 1655 0
 1525 000e 013C     		subs	r4, r4, #1
 1526              	.LVL121:
 1527              	.L153:
1652:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 1528              		.loc 1 1652 0
 1529 0010 0128     		cmp	r0, #1
 1530 0012 01D1     		bne	.L154
1652:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 1531              		.loc 1 1652 0 is_stmt 0 discriminator 1
 1532 0014 002C     		cmp	r4, #0
 1533 0016 F8D1     		bne	.L155
 1534              	.L154:
1656:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1657:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   if(Timeout == 0x00 )
 1535              		.loc 1 1657 0 is_stmt 1
 1536 0018 04B1     		cbz	r4, .L159
 1537              	.LVL122:
 1538              	.L156:
1658:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
1659:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     status = FLASH_TIMEOUT;
1660:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
1661:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   /* Return the operation status */
1662:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   return status;
1663:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** }
 1539              		.loc 1 1663 0
 1540 001a 10BD     		pop	{r4, pc}
 1541              	.LVL123:
 1542              	.L159:
1659:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }
 1543              		.loc 1 1659 0
 1544 001c 0520     		movs	r0, #5
 1545              	.LVL124:
 1546 001e FCE7     		b	.L156
 1547              		.cfi_endproc
 1548              	.LFE90:
 1550              		.section	.text.FLASH_EraseAllBank1Pages,"ax",%progbits
 1551              		.align	1
 1552              		.global	FLASH_EraseAllBank1Pages
 1553              		.syntax unified
 1554              		.thumb
 1555              		.thumb_func
 1556              		.fpu softvfp
 1558              	FLASH_EraseAllBank1Pages:
 1559              	.LFB72:
 556:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1560              		.loc 1 556 0
 1561              		.cfi_startproc
 1562              		@ args = 0, pretend = 0, frame = 0
 1563              		@ frame_needed = 0, uses_anonymous_args = 0
 1564 0000 10B5     		push	{r4, lr}
 1565              		.cfi_def_cfa_offset 8
 1566              		.cfi_offset 4, -8
 1567              		.cfi_offset 14, -4
 1568              	.LVL125:
 559:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   
 1569              		.loc 1 559 0
 1570 0002 4FF43020 		mov	r0, #720896
 1571 0006 FFF7FEFF 		bl	FLASH_WaitForLastBank1Operation
 1572              	.LVL126:
 561:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   {
 1573              		.loc 1 561 0
 1574 000a 0428     		cmp	r0, #4
 1575 000c 00D0     		beq	.L163
 1576              	.L161:
 575:../system/src/stm32f1-stdperiph/stm32f10x_flash.c **** 
 1577              		.loc 1 575 0
 1578 000e 10BD     		pop	{r4, pc}
 1579              	.L163:
 564:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****      FLASH->CR |= CR_STRT_Set;
 1580              		.loc 1 564 0
 1581 0010 094C     		ldr	r4, .L164
 1582 0012 2369     		ldr	r3, [r4, #16]
 1583 0014 43F00403 		orr	r3, r3, #4
 1584 0018 2361     		str	r3, [r4, #16]
 565:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 1585              		.loc 1 565 0
 1586 001a 2369     		ldr	r3, [r4, #16]
 1587 001c 43F04003 		orr	r3, r3, #64
 1588 0020 2361     		str	r3, [r4, #16]
 568:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****     
 1589              		.loc 1 568 0
 1590 0022 4FF43020 		mov	r0, #720896
 1591              	.LVL127:
 1592 0026 FFF7FEFF 		bl	FLASH_WaitForLastBank1Operation
 1593              	.LVL128:
 571:../system/src/stm32f1-stdperiph/stm32f10x_flash.c ****   }    
 1594              		.loc 1 571 0
 1595 002a 2369     		ldr	r3, [r4, #16]
 1596 002c 23F00403 		bic	r3, r3, #4
 1597 0030 DB04     		lsls	r3, r3, #19
 1598 0032 DB0C     		lsrs	r3, r3, #19
 1599 0034 2361     		str	r3, [r4, #16]
 1600 0036 EAE7     		b	.L161
 1601              	.L165:
 1602              		.align	2
 1603              	.L164:
 1604 0038 00200240 		.word	1073881088
 1605              		.cfi_endproc
 1606              	.LFE72:
 1608              		.text
 1609              	.Letext0:
 1610              		.file 2 "/usr/local/bin/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 1611              		.file 3 "../system/include/cmsis/core_cm3.h"
 1612              		.file 4 "../system/include/cmsis/system_stm32f10x.h"
 1613              		.file 5 "../system/include/cmsis/stm32f10x.h"
 1614              		.file 6 "../system/include/stm32f1-stdperiph/stm32f10x_flash.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_flash.c
     /tmp/cckjPF0i.s:16     .text.FLASH_SetLatency:0000000000000000 $t
     /tmp/cckjPF0i.s:23     .text.FLASH_SetLatency:0000000000000000 FLASH_SetLatency
     /tmp/cckjPF0i.s:49     .text.FLASH_SetLatency:0000000000000010 $d
     /tmp/cckjPF0i.s:54     .text.FLASH_HalfCycleAccessCmd:0000000000000000 $t
     /tmp/cckjPF0i.s:61     .text.FLASH_HalfCycleAccessCmd:0000000000000000 FLASH_HalfCycleAccessCmd
     /tmp/cckjPF0i.s:84     .text.FLASH_HalfCycleAccessCmd:0000000000000014 $d
     /tmp/cckjPF0i.s:89     .text.FLASH_PrefetchBufferCmd:0000000000000000 $t
     /tmp/cckjPF0i.s:96     .text.FLASH_PrefetchBufferCmd:0000000000000000 FLASH_PrefetchBufferCmd
     /tmp/cckjPF0i.s:119    .text.FLASH_PrefetchBufferCmd:0000000000000014 $d
     /tmp/cckjPF0i.s:124    .text.FLASH_Unlock:0000000000000000 $t
     /tmp/cckjPF0i.s:131    .text.FLASH_Unlock:0000000000000000 FLASH_Unlock
     /tmp/cckjPF0i.s:150    .text.FLASH_Unlock:0000000000000010 $d
     /tmp/cckjPF0i.s:156    .text.FLASH_UnlockBank1:0000000000000000 $t
     /tmp/cckjPF0i.s:163    .text.FLASH_UnlockBank1:0000000000000000 FLASH_UnlockBank1
     /tmp/cckjPF0i.s:182    .text.FLASH_UnlockBank1:0000000000000010 $d
     /tmp/cckjPF0i.s:188    .text.FLASH_Lock:0000000000000000 $t
     /tmp/cckjPF0i.s:195    .text.FLASH_Lock:0000000000000000 FLASH_Lock
     /tmp/cckjPF0i.s:212    .text.FLASH_Lock:000000000000000c $d
     /tmp/cckjPF0i.s:217    .text.FLASH_LockBank1:0000000000000000 $t
     /tmp/cckjPF0i.s:224    .text.FLASH_LockBank1:0000000000000000 FLASH_LockBank1
     /tmp/cckjPF0i.s:241    .text.FLASH_LockBank1:000000000000000c $d
     /tmp/cckjPF0i.s:246    .text.FLASH_GetUserOptionByte:0000000000000000 $t
     /tmp/cckjPF0i.s:253    .text.FLASH_GetUserOptionByte:0000000000000000 FLASH_GetUserOptionByte
     /tmp/cckjPF0i.s:269    .text.FLASH_GetUserOptionByte:0000000000000008 $d
     /tmp/cckjPF0i.s:274    .text.FLASH_GetWriteProtectionOptionByte:0000000000000000 $t
     /tmp/cckjPF0i.s:281    .text.FLASH_GetWriteProtectionOptionByte:0000000000000000 FLASH_GetWriteProtectionOptionByte
     /tmp/cckjPF0i.s:296    .text.FLASH_GetWriteProtectionOptionByte:0000000000000008 $d
     /tmp/cckjPF0i.s:301    .text.FLASH_GetReadOutProtectionStatus:0000000000000000 $t
     /tmp/cckjPF0i.s:308    .text.FLASH_GetReadOutProtectionStatus:0000000000000000 FLASH_GetReadOutProtectionStatus
     /tmp/cckjPF0i.s:334    .text.FLASH_GetReadOutProtectionStatus:0000000000000014 $d
     /tmp/cckjPF0i.s:339    .text.FLASH_GetPrefetchBufferStatus:0000000000000000 $t
     /tmp/cckjPF0i.s:346    .text.FLASH_GetPrefetchBufferStatus:0000000000000000 FLASH_GetPrefetchBufferStatus
     /tmp/cckjPF0i.s:372    .text.FLASH_GetPrefetchBufferStatus:0000000000000014 $d
     /tmp/cckjPF0i.s:377    .text.FLASH_ITConfig:0000000000000000 $t
     /tmp/cckjPF0i.s:384    .text.FLASH_ITConfig:0000000000000000 FLASH_ITConfig
     /tmp/cckjPF0i.s:414    .text.FLASH_ITConfig:0000000000000018 $d
     /tmp/cckjPF0i.s:419    .text.FLASH_GetFlagStatus:0000000000000000 $t
     /tmp/cckjPF0i.s:426    .text.FLASH_GetFlagStatus:0000000000000000 FLASH_GetFlagStatus
     /tmp/cckjPF0i.s:469    .text.FLASH_GetFlagStatus:0000000000000024 $d
     /tmp/cckjPF0i.s:474    .text.FLASH_ClearFlag:0000000000000000 $t
     /tmp/cckjPF0i.s:481    .text.FLASH_ClearFlag:0000000000000000 FLASH_ClearFlag
     /tmp/cckjPF0i.s:497    .text.FLASH_ClearFlag:0000000000000008 $d
     /tmp/cckjPF0i.s:502    .text.FLASH_GetStatus:0000000000000000 $t
     /tmp/cckjPF0i.s:509    .text.FLASH_GetStatus:0000000000000000 FLASH_GetStatus
     /tmp/cckjPF0i.s:552    .text.FLASH_GetStatus:0000000000000030 $d
     /tmp/cckjPF0i.s:557    .text.FLASH_GetBank1Status:0000000000000000 $t
     /tmp/cckjPF0i.s:564    .text.FLASH_GetBank1Status:0000000000000000 FLASH_GetBank1Status
     /tmp/cckjPF0i.s:607    .text.FLASH_GetBank1Status:0000000000000030 $d
     /tmp/cckjPF0i.s:612    .text.FLASH_WaitForLastOperation:0000000000000000 $t
     /tmp/cckjPF0i.s:619    .text.FLASH_WaitForLastOperation:0000000000000000 FLASH_WaitForLastOperation
     /tmp/cckjPF0i.s:668    .text.FLASH_ErasePage:0000000000000000 $t
     /tmp/cckjPF0i.s:675    .text.FLASH_ErasePage:0000000000000000 FLASH_ErasePage
     /tmp/cckjPF0i.s:729    .text.FLASH_ErasePage:000000000000003c $d
     /tmp/cckjPF0i.s:734    .text.FLASH_EraseAllPages:0000000000000000 $t
     /tmp/cckjPF0i.s:741    .text.FLASH_EraseAllPages:0000000000000000 FLASH_EraseAllPages
     /tmp/cckjPF0i.s:787    .text.FLASH_EraseAllPages:0000000000000038 $d
     /tmp/cckjPF0i.s:792    .text.FLASH_EraseOptionBytes:0000000000000000 $t
     /tmp/cckjPF0i.s:799    .text.FLASH_EraseOptionBytes:0000000000000000 FLASH_EraseOptionBytes
     /tmp/cckjPF0i.s:903    .text.FLASH_EraseOptionBytes:0000000000000090 $d
     /tmp/cckjPF0i.s:910    .text.FLASH_ProgramWord:0000000000000000 $t
     /tmp/cckjPF0i.s:917    .text.FLASH_ProgramWord:0000000000000000 FLASH_ProgramWord
     /tmp/cckjPF0i.s:1006   .text.FLASH_ProgramWord:0000000000000068 $d
     /tmp/cckjPF0i.s:1011   .text.FLASH_ProgramHalfWord:0000000000000000 $t
     /tmp/cckjPF0i.s:1018   .text.FLASH_ProgramHalfWord:0000000000000000 FLASH_ProgramHalfWord
     /tmp/cckjPF0i.s:1069   .text.FLASH_ProgramHalfWord:0000000000000038 $d
     /tmp/cckjPF0i.s:1074   .text.FLASH_ProgramOptionByteData:0000000000000000 $t
     /tmp/cckjPF0i.s:1081   .text.FLASH_ProgramOptionByteData:0000000000000000 FLASH_ProgramOptionByteData
     /tmp/cckjPF0i.s:1143   .text.FLASH_ProgramOptionByteData:0000000000000048 $d
     /tmp/cckjPF0i.s:1149   .text.FLASH_EnableWriteProtection:0000000000000000 $t
     /tmp/cckjPF0i.s:1156   .text.FLASH_EnableWriteProtection:0000000000000000 FLASH_EnableWriteProtection
     /tmp/cckjPF0i.s:1290   .text.FLASH_EnableWriteProtection:000000000000009c $d
     /tmp/cckjPF0i.s:1297   .text.FLASH_ReadOutProtection:0000000000000000 $t
     /tmp/cckjPF0i.s:1304   .text.FLASH_ReadOutProtection:0000000000000000 FLASH_ReadOutProtection
     /tmp/cckjPF0i.s:1407   .text.FLASH_ReadOutProtection:0000000000000090 $d
     /tmp/cckjPF0i.s:1414   .text.FLASH_UserOptionByteConfig:0000000000000000 $t
     /tmp/cckjPF0i.s:1421   .text.FLASH_UserOptionByteConfig:0000000000000000 FLASH_UserOptionByteConfig
     /tmp/cckjPF0i.s:1488   .text.FLASH_UserOptionByteConfig:0000000000000054 $d
     /tmp/cckjPF0i.s:1495   .text.FLASH_WaitForLastBank1Operation:0000000000000000 $t
     /tmp/cckjPF0i.s:1502   .text.FLASH_WaitForLastBank1Operation:0000000000000000 FLASH_WaitForLastBank1Operation
     /tmp/cckjPF0i.s:1551   .text.FLASH_EraseAllBank1Pages:0000000000000000 $t
     /tmp/cckjPF0i.s:1558   .text.FLASH_EraseAllBank1Pages:0000000000000000 FLASH_EraseAllBank1Pages
     /tmp/cckjPF0i.s:1604   .text.FLASH_EraseAllBank1Pages:0000000000000038 $d
                           .group:0000000000000000 wm4.0.879aed89c359f5856fe69c61b3590d34
                           .group:0000000000000000 wm4.stm32f10x.h.51.c58ea26c5150470d52680f0bbaa7049c
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.core_cm3.h.82.57a0f9dd004efa579f86574376281d2f
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.183.ecfd9c316d6f10b73648f6e579b02c8b
                           .group:0000000000000000 wm4.stm32f10x.h.522.a925aafc848b1f088438cf0e9b167b78
                           .group:0000000000000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:0000000000000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:0000000000000000 wm4.stm32f10x_can.h.25.e5e43f6bbc8fc7c8aa30ef2bc5610ced
                           .group:0000000000000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:0000000000000000 wm4.stm32f10x_dac.h.25.d946244edf026333094657d55ea894b8
                           .group:0000000000000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:0000000000000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:0000000000000000 wm4.stm32f10x_exti.h.25.f52c69aad7d1994be5b2c4e2b8f4c595
                           .group:0000000000000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:0000000000000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:0000000000000000 wm4.stm32f10x_i2c.h.25.b124ac2c620f8ebddd92b6d95ca62176
                           .group:0000000000000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:0000000000000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:0000000000000000 wm4.stm32f10x_rcc.h.25.fe8897e7491f2eb0cff54551d08eb765
                           .group:0000000000000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:0000000000000000 wm4.stm32f10x_sdio.h.25.fb0db079f5c1412c40f359319f7c40b0
                           .group:0000000000000000 wm4.stm32f10x_spi.h.25.3f6dfa4abe177efb3c6f5a717c06b323
                           .group:0000000000000000 wm4.stm32f10x_tim.h.25.f709106ba77b314e6b070693f89f3c56
                           .group:0000000000000000 wm4.stm32f10x_usart.h.25.2e65e396239d0cc41fd0bf6faa2a32cb
                           .group:0000000000000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:0000000000000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:0000000000000000 wm4.stm32f10x.h.8317.9a8e476d96d33bb2df9a9ad0775bd4a7
                           .group:0000000000000000 wm4.stm32f10x_flash.h.71.e9cd007501bad084a1073f7db78f76e5

NO UNDEFINED SYMBOLS
